; ModuleID = 'mcsema/test.proposed.ll'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"

%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
%G_0x99da08_type = type <{ [4 x i8] }>
%G__0xa7f430_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque

@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\09\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@G_0x99da08 = global %G_0x99da08_type zeroinitializer
@G__0xa7f430 = global %G__0xa7f430_type zeroinitializer

declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind readnone
declare i32 @llvm.ctpop.i32(i32) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.bswap.i64(i64) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.cttz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.cttz.i64(i64, i1) #1

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #0

; Function Attrs: nounwind readnone
declare double @llvm.nearbyint.f64(double) #1

; Function Attrs: nounwind readnone
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.fabs.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @llvm.trunc.f64(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @llvm.trunc.v4f64(<4 x double>) #1

; Function Attrs: nounwind readnone
declare float @llvm.nearbyint.f32(float) #1

; Function Attrs: nounwind readnone
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.fabs.v4f32(<4 x float>) #1

; Function Attrs: nounwind readnone
declare float @llvm.trunc.f32(float) #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.trunc.v4f32(<4 x float>) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #0

declare double @atan(double) local_unnamed_addr

declare double @cos(double) local_unnamed_addr

declare double @sin(double) local_unnamed_addr

declare double @sqrt(double) local_unnamed_addr

declare double @tan(double) local_unnamed_addr

declare extern_weak x86_64_sysvcc i64 @abort()

declare extern_weak x86_64_sysvcc i64 @abs(i64)

declare extern_weak x86_64_sysvcc i64 @asin(i64)

declare extern_weak x86_64_sysvcc i64 @atof(i64)

declare extern_weak x86_64_sysvcc i64 @atoi(i64)

declare extern_weak x86_64_sysvcc i64 @atol(i64)

declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @clock()

declare extern_weak x86_64_sysvcc i64 @cosf(i64)

declare extern_weak x86_64_sysvcc i64 @exit(i64)

declare extern_weak x86_64_sysvcc i64 @exp(i64)

declare extern_weak x86_64_sysvcc i64 @fflush(i64)

declare extern_weak x86_64_sysvcc i64 @floor(i64)

declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64)

declare extern_weak x86_64_sysvcc i64 @free(i64)

declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @getchar()

declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @log(i64)

declare extern_weak x86_64_sysvcc i64 @lrand48()

declare extern_weak x86_64_sysvcc i64 @malloc(i64)

declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64)

declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @perror(i64)

declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @pow(i64, i64)

declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @putchar(i64)

declare extern_weak x86_64_sysvcc i64 @puts(i64)

declare extern_weak x86_64_sysvcc i64 @rand()

declare extern_weak x86_64_sysvcc i64 @random()

declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @seed48(i64)

declare extern_weak x86_64_sysvcc i64 @sinf(i64)

declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @srand(i64)

declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64)

declare extern_weak x86_64_sysvcc i64 @strdup(i64)

declare extern_weak x86_64_sysvcc i64 @strlen(i64)

declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64)

declare extern_weak x86_64_sysvcc i64 @time(i64)

declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64)

declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64)

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)

; Function Attrs: alwaysinline
define %struct.Memory* @incremental_order_moves(%struct.State* noalias, i64, %struct.Memory* noalias) #2 {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8
  %loadMem_416010 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5 = getelementptr inbounds %struct.GPR, %struct.GPR* %4, i32 0, i32 33
  %6 = getelementptr inbounds %struct.Reg, %struct.Reg* %5, i32 0, i32 0
  %PC.i = bitcast %union.anon* %6 to i64*
  %7 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.GPR, %struct.GPR* %7, i32 0, i32 15
  %9 = getelementptr inbounds %struct.Reg, %struct.Reg* %8, i32 0, i32 0
  %RBP.i = bitcast %union.anon* %9 to i64*
  %10 = load i64, i64* %RBP.i
  %11 = load i64, i64* %PC.i
  %12 = add i64 %11, 1
  store i64 %12, i64* %PC.i
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -8
  %16 = inttoptr i64 %15 to i64*
  store i64 %10, i64* %16
  store i64 %15, i64* %13, align 8
  store %struct.Memory* %loadMem_416010, %struct.Memory** %MEMORY
  %loadMem_416011 = load %struct.Memory*, %struct.Memory** %MEMORY
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %18 = getelementptr inbounds %struct.GPR, %struct.GPR* %17, i32 0, i32 33
  %19 = getelementptr inbounds %struct.Reg, %struct.Reg* %18, i32 0, i32 0
  %PC.i1485 = bitcast %union.anon* %19 to i64*
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %21 = getelementptr inbounds %struct.GPR, %struct.GPR* %20, i32 0, i32 13
  %22 = getelementptr inbounds %struct.Reg, %struct.Reg* %21, i32 0, i32 0
  %RSP.i1486 = bitcast %union.anon* %22 to i64*
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %24 = getelementptr inbounds %struct.GPR, %struct.GPR* %23, i32 0, i32 15
  %25 = getelementptr inbounds %struct.Reg, %struct.Reg* %24, i32 0, i32 0
  %RBP.i1487 = bitcast %union.anon* %25 to i64*
  %26 = load i64, i64* %RSP.i1486
  %27 = load i64, i64* %PC.i1485
  %28 = add i64 %27, 3
  store i64 %28, i64* %PC.i1485
  store i64 %26, i64* %RBP.i1487, align 8
  store %struct.Memory* %loadMem_416011, %struct.Memory** %MEMORY
  %loadMem_416014 = load %struct.Memory*, %struct.Memory** %MEMORY
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %30 = getelementptr inbounds %struct.GPR, %struct.GPR* %29, i32 0, i32 33
  %31 = getelementptr inbounds %struct.Reg, %struct.Reg* %30, i32 0, i32 0
  %PC.i1483 = bitcast %union.anon* %31 to i64*
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %33 = getelementptr inbounds %struct.GPR, %struct.GPR* %32, i32 0, i32 29
  %34 = getelementptr inbounds %struct.Reg, %struct.Reg* %33, i32 0, i32 0
  %R14.i1484 = bitcast %union.anon* %34 to i64*
  %35 = load i64, i64* %R14.i1484
  %36 = load i64, i64* %PC.i1483
  %37 = add i64 %36, 2
  store i64 %37, i64* %PC.i1483
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, -8
  %41 = inttoptr i64 %40 to i64*
  store i64 %35, i64* %41
  store i64 %40, i64* %38, align 8
  store %struct.Memory* %loadMem_416014, %struct.Memory** %MEMORY
  %loadMem_416016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.GPR, %struct.GPR* %42, i32 0, i32 33
  %44 = getelementptr inbounds %struct.Reg, %struct.Reg* %43, i32 0, i32 0
  %PC.i1481 = bitcast %union.anon* %44 to i64*
  %45 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %46 = getelementptr inbounds %struct.GPR, %struct.GPR* %45, i32 0, i32 3
  %47 = getelementptr inbounds %struct.Reg, %struct.Reg* %46, i32 0, i32 0
  %RBX.i1482 = bitcast %union.anon* %47 to i64*
  %48 = load i64, i64* %RBX.i1482
  %49 = load i64, i64* %PC.i1481
  %50 = add i64 %49, 1
  store i64 %50, i64* %PC.i1481
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, -8
  %54 = inttoptr i64 %53 to i64*
  store i64 %48, i64* %54
  store i64 %53, i64* %51, align 8
  store %struct.Memory* %loadMem_416016, %struct.Memory** %MEMORY
  %loadMem_416017 = load %struct.Memory*, %struct.Memory** %MEMORY
  %55 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %56 = getelementptr inbounds %struct.GPR, %struct.GPR* %55, i32 0, i32 33
  %57 = getelementptr inbounds %struct.Reg, %struct.Reg* %56, i32 0, i32 0
  %PC.i1479 = bitcast %union.anon* %57 to i64*
  %58 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %59 = getelementptr inbounds %struct.GPR, %struct.GPR* %58, i32 0, i32 13
  %60 = getelementptr inbounds %struct.Reg, %struct.Reg* %59, i32 0, i32 0
  %RSP.i1480 = bitcast %union.anon* %60 to i64*
  %61 = load i64, i64* %RSP.i1480
  %62 = load i64, i64* %PC.i1479
  %63 = add i64 %62, 4
  store i64 %63, i64* %PC.i1479
  %64 = sub i64 %61, 16
  store i64 %64, i64* %RSP.i1480, align 8
  %65 = icmp ult i64 %61, 16
  %66 = zext i1 %65 to i8
  %67 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %66, i8* %67, align 1
  %68 = trunc i64 %64 to i32
  %69 = and i32 %68, 255
  %70 = call i32 @llvm.ctpop.i32(i32 %69)
  %71 = trunc i32 %70 to i8
  %72 = and i8 %71, 1
  %73 = xor i8 %72, 1
  %74 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %73, i8* %74, align 1
  %75 = xor i64 16, %61
  %76 = xor i64 %75, %64
  %77 = lshr i64 %76, 4
  %78 = trunc i64 %77 to i8
  %79 = and i8 %78, 1
  %80 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %79, i8* %80, align 1
  %81 = icmp eq i64 %64, 0
  %82 = zext i1 %81 to i8
  %83 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %82, i8* %83, align 1
  %84 = lshr i64 %64, 63
  %85 = trunc i64 %84 to i8
  %86 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %85, i8* %86, align 1
  %87 = lshr i64 %61, 63
  %88 = xor i64 %84, %87
  %89 = add i64 %88, %87
  %90 = icmp eq i64 %89, 2
  %91 = zext i1 %90 to i8
  %92 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %91, i8* %92, align 1
  store %struct.Memory* %loadMem_416017, %struct.Memory** %MEMORY
  %loadMem_41601b = load %struct.Memory*, %struct.Memory** %MEMORY
  %93 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.GPR, %struct.GPR* %93, i32 0, i32 33
  %95 = getelementptr inbounds %struct.Reg, %struct.Reg* %94, i32 0, i32 0
  %PC.i1476 = bitcast %union.anon* %95 to i64*
  %96 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.GPR, %struct.GPR* %96, i32 0, i32 1
  %98 = getelementptr inbounds %struct.Reg, %struct.Reg* %97, i32 0, i32 0
  %RAX.i1477 = bitcast %union.anon* %98 to i64*
  %99 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %100 = getelementptr inbounds %struct.GPR, %struct.GPR* %99, i32 0, i32 15
  %101 = getelementptr inbounds %struct.Reg, %struct.Reg* %100, i32 0, i32 0
  %RBP.i1478 = bitcast %union.anon* %101 to i64*
  %102 = load i64, i64* %RBP.i1478
  %103 = add i64 %102, 48
  %104 = load i64, i64* %PC.i1476
  %105 = add i64 %104, 4
  store i64 %105, i64* %PC.i1476
  %106 = inttoptr i64 %103 to i64*
  %107 = load i64, i64* %106
  store i64 %107, i64* %RAX.i1477, align 8
  store %struct.Memory* %loadMem_41601b, %struct.Memory** %MEMORY
  %loadMem_41601f = load %struct.Memory*, %struct.Memory** %MEMORY
  %108 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %109 = getelementptr inbounds %struct.GPR, %struct.GPR* %108, i32 0, i32 33
  %110 = getelementptr inbounds %struct.Reg, %struct.Reg* %109, i32 0, i32 0
  %PC.i1473 = bitcast %union.anon* %110 to i64*
  %111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.GPR, %struct.GPR* %111, i32 0, i32 15
  %113 = getelementptr inbounds %struct.Reg, %struct.Reg* %112, i32 0, i32 0
  %RBP.i1474 = bitcast %union.anon* %113 to i64*
  %114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %115 = getelementptr inbounds %struct.GPR, %struct.GPR* %114, i32 0, i32 21
  %116 = getelementptr inbounds %struct.Reg, %struct.Reg* %115, i32 0, i32 0
  %R10.i1475 = bitcast %union.anon* %116 to i64*
  %117 = load i64, i64* %RBP.i1474
  %118 = add i64 %117, 40
  %119 = load i64, i64* %PC.i1473
  %120 = add i64 %119, 4
  store i64 %120, i64* %PC.i1473
  %121 = inttoptr i64 %118 to i64*
  %122 = load i64, i64* %121
  store i64 %122, i64* %R10.i1475, align 8
  store %struct.Memory* %loadMem_41601f, %struct.Memory** %MEMORY
  %loadMem_416023 = load %struct.Memory*, %struct.Memory** %MEMORY
  %123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %124 = getelementptr inbounds %struct.GPR, %struct.GPR* %123, i32 0, i32 33
  %125 = getelementptr inbounds %struct.Reg, %struct.Reg* %124, i32 0, i32 0
  %PC.i1470 = bitcast %union.anon* %125 to i64*
  %126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %127 = getelementptr inbounds %struct.GPR, %struct.GPR* %126, i32 0, i32 15
  %128 = getelementptr inbounds %struct.Reg, %struct.Reg* %127, i32 0, i32 0
  %RBP.i1471 = bitcast %union.anon* %128 to i64*
  %129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %130 = getelementptr inbounds %struct.GPR, %struct.GPR* %129, i32 0, i32 23
  %131 = getelementptr inbounds %struct.Reg, %struct.Reg* %130, i32 0, i32 0
  %R11.i1472 = bitcast %union.anon* %131 to i64*
  %132 = load i64, i64* %RBP.i1471
  %133 = add i64 %132, 32
  %134 = load i64, i64* %PC.i1470
  %135 = add i64 %134, 4
  store i64 %135, i64* %PC.i1470
  %136 = inttoptr i64 %133 to i64*
  %137 = load i64, i64* %136
  store i64 %137, i64* %R11.i1472, align 8
  store %struct.Memory* %loadMem_416023, %struct.Memory** %MEMORY
  %loadMem_416027 = load %struct.Memory*, %struct.Memory** %MEMORY
  %138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %139 = getelementptr inbounds %struct.GPR, %struct.GPR* %138, i32 0, i32 33
  %140 = getelementptr inbounds %struct.Reg, %struct.Reg* %139, i32 0, i32 0
  %PC.i1467 = bitcast %union.anon* %140 to i64*
  %141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.GPR, %struct.GPR* %141, i32 0, i32 3
  %143 = getelementptr inbounds %struct.Reg, %struct.Reg* %142, i32 0, i32 0
  %RBX.i1468 = bitcast %union.anon* %143 to i64*
  %144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %145 = getelementptr inbounds %struct.GPR, %struct.GPR* %144, i32 0, i32 15
  %146 = getelementptr inbounds %struct.Reg, %struct.Reg* %145, i32 0, i32 0
  %RBP.i1469 = bitcast %union.anon* %146 to i64*
  %147 = load i64, i64* %RBP.i1469
  %148 = add i64 %147, 24
  %149 = load i64, i64* %PC.i1467
  %150 = add i64 %149, 4
  store i64 %150, i64* %PC.i1467
  %151 = inttoptr i64 %148 to i64*
  %152 = load i64, i64* %151
  store i64 %152, i64* %RBX.i1468, align 8
  store %struct.Memory* %loadMem_416027, %struct.Memory** %MEMORY
  %loadMem_41602b = load %struct.Memory*, %struct.Memory** %MEMORY
  %153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %154 = getelementptr inbounds %struct.GPR, %struct.GPR* %153, i32 0, i32 33
  %155 = getelementptr inbounds %struct.Reg, %struct.Reg* %154, i32 0, i32 0
  %PC.i1464 = bitcast %union.anon* %155 to i64*
  %156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %157 = getelementptr inbounds %struct.GPR, %struct.GPR* %156, i32 0, i32 15
  %158 = getelementptr inbounds %struct.Reg, %struct.Reg* %157, i32 0, i32 0
  %RBP.i1465 = bitcast %union.anon* %158 to i64*
  %159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %160 = getelementptr inbounds %struct.GPR, %struct.GPR* %159, i32 0, i32 29
  %161 = getelementptr inbounds %struct.Reg, %struct.Reg* %160, i32 0, i32 0
  %R14.i1466 = bitcast %union.anon* %161 to i64*
  %162 = load i64, i64* %RBP.i1465
  %163 = add i64 %162, 16
  %164 = load i64, i64* %PC.i1464
  %165 = add i64 %164, 4
  store i64 %165, i64* %PC.i1464
  %166 = inttoptr i64 %163 to i64*
  %167 = load i64, i64* %166
  store i64 %167, i64* %R14.i1466, align 8
  store %struct.Memory* %loadMem_41602b, %struct.Memory** %MEMORY
  %loadMem_41602f = load %struct.Memory*, %struct.Memory** %MEMORY
  %168 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %169 = getelementptr inbounds %struct.GPR, %struct.GPR* %168, i32 0, i32 33
  %170 = getelementptr inbounds %struct.Reg, %struct.Reg* %169, i32 0, i32 0
  %PC.i1461 = bitcast %union.anon* %170 to i64*
  %171 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %172 = getelementptr inbounds %struct.GPR, %struct.GPR* %171, i32 0, i32 11
  %173 = getelementptr inbounds %struct.Reg, %struct.Reg* %172, i32 0, i32 0
  %EDI.i1462 = bitcast %union.anon* %173 to i32*
  %174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %175 = getelementptr inbounds %struct.GPR, %struct.GPR* %174, i32 0, i32 15
  %176 = getelementptr inbounds %struct.Reg, %struct.Reg* %175, i32 0, i32 0
  %RBP.i1463 = bitcast %union.anon* %176 to i64*
  %177 = load i64, i64* %RBP.i1463
  %178 = sub i64 %177, 20
  %179 = load i32, i32* %EDI.i1462
  %180 = zext i32 %179 to i64
  %181 = load i64, i64* %PC.i1461
  %182 = add i64 %181, 3
  store i64 %182, i64* %PC.i1461
  %183 = inttoptr i64 %178 to i32*
  store i32 %179, i32* %183
  store %struct.Memory* %loadMem_41602f, %struct.Memory** %MEMORY
  %loadMem_416032 = load %struct.Memory*, %struct.Memory** %MEMORY
  %184 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %185 = getelementptr inbounds %struct.GPR, %struct.GPR* %184, i32 0, i32 33
  %186 = getelementptr inbounds %struct.Reg, %struct.Reg* %185, i32 0, i32 0
  %PC.i1458 = bitcast %union.anon* %186 to i64*
  %187 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %188 = getelementptr inbounds %struct.GPR, %struct.GPR* %187, i32 0, i32 9
  %189 = getelementptr inbounds %struct.Reg, %struct.Reg* %188, i32 0, i32 0
  %ESI.i1459 = bitcast %union.anon* %189 to i32*
  %190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %191 = getelementptr inbounds %struct.GPR, %struct.GPR* %190, i32 0, i32 15
  %192 = getelementptr inbounds %struct.Reg, %struct.Reg* %191, i32 0, i32 0
  %RBP.i1460 = bitcast %union.anon* %192 to i64*
  %193 = load i64, i64* %RBP.i1460
  %194 = sub i64 %193, 24
  %195 = load i32, i32* %ESI.i1459
  %196 = zext i32 %195 to i64
  %197 = load i64, i64* %PC.i1458
  %198 = add i64 %197, 3
  store i64 %198, i64* %PC.i1458
  %199 = inttoptr i64 %194 to i32*
  store i32 %195, i32* %199
  store %struct.Memory* %loadMem_416032, %struct.Memory** %MEMORY
  %loadMem_416035 = load %struct.Memory*, %struct.Memory** %MEMORY
  %200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %201 = getelementptr inbounds %struct.GPR, %struct.GPR* %200, i32 0, i32 33
  %202 = getelementptr inbounds %struct.Reg, %struct.Reg* %201, i32 0, i32 0
  %PC.i1455 = bitcast %union.anon* %202 to i64*
  %203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %204 = getelementptr inbounds %struct.GPR, %struct.GPR* %203, i32 0, i32 7
  %205 = getelementptr inbounds %struct.Reg, %struct.Reg* %204, i32 0, i32 0
  %EDX.i1456 = bitcast %union.anon* %205 to i32*
  %206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %207 = getelementptr inbounds %struct.GPR, %struct.GPR* %206, i32 0, i32 15
  %208 = getelementptr inbounds %struct.Reg, %struct.Reg* %207, i32 0, i32 0
  %RBP.i1457 = bitcast %union.anon* %208 to i64*
  %209 = load i64, i64* %RBP.i1457
  %210 = sub i64 %209, 28
  %211 = load i32, i32* %EDX.i1456
  %212 = zext i32 %211 to i64
  %213 = load i64, i64* %PC.i1455
  %214 = add i64 %213, 3
  store i64 %214, i64* %PC.i1455
  %215 = inttoptr i64 %210 to i32*
  store i32 %211, i32* %215
  store %struct.Memory* %loadMem_416035, %struct.Memory** %MEMORY
  %loadMem_416038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %217 = getelementptr inbounds %struct.GPR, %struct.GPR* %216, i32 0, i32 33
  %218 = getelementptr inbounds %struct.Reg, %struct.Reg* %217, i32 0, i32 0
  %PC.i1452 = bitcast %union.anon* %218 to i64*
  %219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %220 = getelementptr inbounds %struct.GPR, %struct.GPR* %219, i32 0, i32 5
  %221 = getelementptr inbounds %struct.Reg, %struct.Reg* %220, i32 0, i32 0
  %RCX.i1453 = bitcast %union.anon* %221 to i64*
  %222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %223 = getelementptr inbounds %struct.GPR, %struct.GPR* %222, i32 0, i32 15
  %224 = getelementptr inbounds %struct.Reg, %struct.Reg* %223, i32 0, i32 0
  %RBP.i1454 = bitcast %union.anon* %224 to i64*
  %225 = load i64, i64* %RBP.i1454
  %226 = sub i64 %225, 40
  %227 = load i64, i64* %RCX.i1453
  %228 = load i64, i64* %PC.i1452
  %229 = add i64 %228, 4
  store i64 %229, i64* %PC.i1452
  %230 = inttoptr i64 %226 to i64*
  store i64 %227, i64* %230
  store %struct.Memory* %loadMem_416038, %struct.Memory** %MEMORY
  %loadMem_41603c = load %struct.Memory*, %struct.Memory** %MEMORY
  %231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %232 = getelementptr inbounds %struct.GPR, %struct.GPR* %231, i32 0, i32 33
  %233 = getelementptr inbounds %struct.Reg, %struct.Reg* %232, i32 0, i32 0
  %PC.i1450 = bitcast %union.anon* %233 to i64*
  %234 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %235 = getelementptr inbounds %struct.GPR, %struct.GPR* %234, i32 0, i32 15
  %236 = getelementptr inbounds %struct.Reg, %struct.Reg* %235, i32 0, i32 0
  %RBP.i1451 = bitcast %union.anon* %236 to i64*
  %237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %238 = getelementptr inbounds %struct.GPR, %struct.GPR* %237, i32 0, i32 17
  %239 = getelementptr inbounds %struct.Reg, %struct.Reg* %238, i32 0, i32 0
  %R8.i = bitcast %union.anon* %239 to i64*
  %240 = load i64, i64* %RBP.i1451
  %241 = sub i64 %240, 48
  %242 = load i64, i64* %R8.i
  %243 = load i64, i64* %PC.i1450
  %244 = add i64 %243, 4
  store i64 %244, i64* %PC.i1450
  %245 = inttoptr i64 %241 to i64*
  store i64 %242, i64* %245
  store %struct.Memory* %loadMem_41603c, %struct.Memory** %MEMORY
  %loadMem_416040 = load %struct.Memory*, %struct.Memory** %MEMORY
  %246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %247 = getelementptr inbounds %struct.GPR, %struct.GPR* %246, i32 0, i32 33
  %248 = getelementptr inbounds %struct.Reg, %struct.Reg* %247, i32 0, i32 0
  %PC.i1448 = bitcast %union.anon* %248 to i64*
  %249 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %250 = getelementptr inbounds %struct.GPR, %struct.GPR* %249, i32 0, i32 15
  %251 = getelementptr inbounds %struct.Reg, %struct.Reg* %250, i32 0, i32 0
  %RBP.i1449 = bitcast %union.anon* %251 to i64*
  %252 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %253 = getelementptr inbounds %struct.GPR, %struct.GPR* %252, i32 0, i32 19
  %254 = getelementptr inbounds %struct.Reg, %struct.Reg* %253, i32 0, i32 0
  %R9.i = bitcast %union.anon* %254 to i64*
  %255 = load i64, i64* %RBP.i1449
  %256 = sub i64 %255, 56
  %257 = load i64, i64* %R9.i
  %258 = load i64, i64* %PC.i1448
  %259 = add i64 %258, 4
  store i64 %259, i64* %PC.i1448
  %260 = inttoptr i64 %256 to i64*
  store i64 %257, i64* %260
  store %struct.Memory* %loadMem_416040, %struct.Memory** %MEMORY
  %loadMem_416044 = load %struct.Memory*, %struct.Memory** %MEMORY
  %261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %262 = getelementptr inbounds %struct.GPR, %struct.GPR* %261, i32 0, i32 33
  %263 = getelementptr inbounds %struct.Reg, %struct.Reg* %262, i32 0, i32 0
  %PC.i1445 = bitcast %union.anon* %263 to i64*
  %264 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %265 = getelementptr inbounds %struct.GPR, %struct.GPR* %264, i32 0, i32 15
  %266 = getelementptr inbounds %struct.Reg, %struct.Reg* %265, i32 0, i32 0
  %RBP.i1446 = bitcast %union.anon* %266 to i64*
  %267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %268 = getelementptr inbounds %struct.GPR, %struct.GPR* %267, i32 0, i32 29
  %269 = getelementptr inbounds %struct.Reg, %struct.Reg* %268, i32 0, i32 0
  %R14.i1447 = bitcast %union.anon* %269 to i64*
  %270 = load i64, i64* %RBP.i1446
  %271 = sub i64 %270, 64
  %272 = load i64, i64* %R14.i1447
  %273 = load i64, i64* %PC.i1445
  %274 = add i64 %273, 4
  store i64 %274, i64* %PC.i1445
  %275 = inttoptr i64 %271 to i64*
  store i64 %272, i64* %275
  store %struct.Memory* %loadMem_416044, %struct.Memory** %MEMORY
  %loadMem_416048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %276 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %277 = getelementptr inbounds %struct.GPR, %struct.GPR* %276, i32 0, i32 33
  %278 = getelementptr inbounds %struct.Reg, %struct.Reg* %277, i32 0, i32 0
  %PC.i1442 = bitcast %union.anon* %278 to i64*
  %279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %280 = getelementptr inbounds %struct.GPR, %struct.GPR* %279, i32 0, i32 3
  %281 = getelementptr inbounds %struct.Reg, %struct.Reg* %280, i32 0, i32 0
  %RBX.i1443 = bitcast %union.anon* %281 to i64*
  %282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %283 = getelementptr inbounds %struct.GPR, %struct.GPR* %282, i32 0, i32 15
  %284 = getelementptr inbounds %struct.Reg, %struct.Reg* %283, i32 0, i32 0
  %RBP.i1444 = bitcast %union.anon* %284 to i64*
  %285 = load i64, i64* %RBP.i1444
  %286 = sub i64 %285, 72
  %287 = load i64, i64* %RBX.i1443
  %288 = load i64, i64* %PC.i1442
  %289 = add i64 %288, 4
  store i64 %289, i64* %PC.i1442
  %290 = inttoptr i64 %286 to i64*
  store i64 %287, i64* %290
  store %struct.Memory* %loadMem_416048, %struct.Memory** %MEMORY
  %loadMem_41604c = load %struct.Memory*, %struct.Memory** %MEMORY
  %291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %292 = getelementptr inbounds %struct.GPR, %struct.GPR* %291, i32 0, i32 33
  %293 = getelementptr inbounds %struct.Reg, %struct.Reg* %292, i32 0, i32 0
  %PC.i1440 = bitcast %union.anon* %293 to i64*
  %294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %295 = getelementptr inbounds %struct.GPR, %struct.GPR* %294, i32 0, i32 15
  %296 = getelementptr inbounds %struct.Reg, %struct.Reg* %295, i32 0, i32 0
  %RBP.i1441 = bitcast %union.anon* %296 to i64*
  %297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %298 = getelementptr inbounds %struct.GPR, %struct.GPR* %297, i32 0, i32 23
  %299 = getelementptr inbounds %struct.Reg, %struct.Reg* %298, i32 0, i32 0
  %R11.i = bitcast %union.anon* %299 to i64*
  %300 = load i64, i64* %RBP.i1441
  %301 = sub i64 %300, 80
  %302 = load i64, i64* %R11.i
  %303 = load i64, i64* %PC.i1440
  %304 = add i64 %303, 4
  store i64 %304, i64* %PC.i1440
  %305 = inttoptr i64 %301 to i64*
  store i64 %302, i64* %305
  store %struct.Memory* %loadMem_41604c, %struct.Memory** %MEMORY
  %loadMem_416050 = load %struct.Memory*, %struct.Memory** %MEMORY
  %306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %307 = getelementptr inbounds %struct.GPR, %struct.GPR* %306, i32 0, i32 33
  %308 = getelementptr inbounds %struct.Reg, %struct.Reg* %307, i32 0, i32 0
  %PC.i1438 = bitcast %union.anon* %308 to i64*
  %309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %310 = getelementptr inbounds %struct.GPR, %struct.GPR* %309, i32 0, i32 15
  %311 = getelementptr inbounds %struct.Reg, %struct.Reg* %310, i32 0, i32 0
  %RBP.i1439 = bitcast %union.anon* %311 to i64*
  %312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %313 = getelementptr inbounds %struct.GPR, %struct.GPR* %312, i32 0, i32 21
  %314 = getelementptr inbounds %struct.Reg, %struct.Reg* %313, i32 0, i32 0
  %R10.i = bitcast %union.anon* %314 to i64*
  %315 = load i64, i64* %RBP.i1439
  %316 = sub i64 %315, 88
  %317 = load i64, i64* %R10.i
  %318 = load i64, i64* %PC.i1438
  %319 = add i64 %318, 4
  store i64 %319, i64* %PC.i1438
  %320 = inttoptr i64 %316 to i64*
  store i64 %317, i64* %320
  store %struct.Memory* %loadMem_416050, %struct.Memory** %MEMORY
  %loadMem_416054 = load %struct.Memory*, %struct.Memory** %MEMORY
  %321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %322 = getelementptr inbounds %struct.GPR, %struct.GPR* %321, i32 0, i32 33
  %323 = getelementptr inbounds %struct.Reg, %struct.Reg* %322, i32 0, i32 0
  %PC.i1435 = bitcast %union.anon* %323 to i64*
  %324 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %325 = getelementptr inbounds %struct.GPR, %struct.GPR* %324, i32 0, i32 1
  %326 = getelementptr inbounds %struct.Reg, %struct.Reg* %325, i32 0, i32 0
  %RAX.i1436 = bitcast %union.anon* %326 to i64*
  %327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %328 = getelementptr inbounds %struct.GPR, %struct.GPR* %327, i32 0, i32 15
  %329 = getelementptr inbounds %struct.Reg, %struct.Reg* %328, i32 0, i32 0
  %RBP.i1437 = bitcast %union.anon* %329 to i64*
  %330 = load i64, i64* %RBP.i1437
  %331 = sub i64 %330, 96
  %332 = load i64, i64* %RAX.i1436
  %333 = load i64, i64* %PC.i1435
  %334 = add i64 %333, 4
  store i64 %334, i64* %PC.i1435
  %335 = inttoptr i64 %331 to i64*
  store i64 %332, i64* %335
  store %struct.Memory* %loadMem_416054, %struct.Memory** %MEMORY
  %loadMem_416058 = load %struct.Memory*, %struct.Memory** %MEMORY
  %336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %337 = getelementptr inbounds %struct.GPR, %struct.GPR* %336, i32 0, i32 33
  %338 = getelementptr inbounds %struct.Reg, %struct.Reg* %337, i32 0, i32 0
  %PC.i1433 = bitcast %union.anon* %338 to i64*
  %339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %340 = getelementptr inbounds %struct.GPR, %struct.GPR* %339, i32 0, i32 7
  %341 = getelementptr inbounds %struct.Reg, %struct.Reg* %340, i32 0, i32 0
  %RDX.i1434 = bitcast %union.anon* %341 to i64*
  %342 = load i64, i64* %PC.i1433
  %343 = add i64 %342, 7
  store i64 %343, i64* %PC.i1433
  %344 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %345 = zext i32 %344 to i64
  store i64 %345, i64* %RDX.i1434, align 8
  store %struct.Memory* %loadMem_416058, %struct.Memory** %MEMORY
  %loadMem_41605f = load %struct.Memory*, %struct.Memory** %MEMORY
  %346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %347 = getelementptr inbounds %struct.GPR, %struct.GPR* %346, i32 0, i32 33
  %348 = getelementptr inbounds %struct.Reg, %struct.Reg* %347, i32 0, i32 0
  %PC.i1431 = bitcast %union.anon* %348 to i64*
  %349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %350 = getelementptr inbounds %struct.GPR, %struct.GPR* %349, i32 0, i32 7
  %351 = getelementptr inbounds %struct.Reg, %struct.Reg* %350, i32 0, i32 0
  %RDX.i1432 = bitcast %union.anon* %351 to i64*
  %352 = load i64, i64* %RDX.i1432
  %353 = load i64, i64* %PC.i1431
  %354 = add i64 %353, 3
  store i64 %354, i64* %PC.i1431
  %355 = trunc i64 %352 to i32
  %356 = add i32 1, %355
  %357 = zext i32 %356 to i64
  store i64 %357, i64* %RDX.i1432, align 8
  %358 = icmp ult i32 %356, %355
  %359 = icmp ult i32 %356, 1
  %360 = or i1 %358, %359
  %361 = zext i1 %360 to i8
  %362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %361, i8* %362, align 1
  %363 = and i32 %356, 255
  %364 = call i32 @llvm.ctpop.i32(i32 %363)
  %365 = trunc i32 %364 to i8
  %366 = and i8 %365, 1
  %367 = xor i8 %366, 1
  %368 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %367, i8* %368, align 1
  %369 = xor i64 1, %352
  %370 = trunc i64 %369 to i32
  %371 = xor i32 %370, %356
  %372 = lshr i32 %371, 4
  %373 = trunc i32 %372 to i8
  %374 = and i8 %373, 1
  %375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %374, i8* %375, align 1
  %376 = icmp eq i32 %356, 0
  %377 = zext i1 %376 to i8
  %378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %377, i8* %378, align 1
  %379 = lshr i32 %356, 31
  %380 = trunc i32 %379 to i8
  %381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %380, i8* %381, align 1
  %382 = lshr i32 %355, 31
  %383 = xor i32 %379, %382
  %384 = add i32 %383, %379
  %385 = icmp eq i32 %384, 2
  %386 = zext i1 %385 to i8
  %387 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %386, i8* %387, align 1
  store %struct.Memory* %loadMem_41605f, %struct.Memory** %MEMORY
  %loadMem_416062 = load %struct.Memory*, %struct.Memory** %MEMORY
  %388 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %389 = getelementptr inbounds %struct.GPR, %struct.GPR* %388, i32 0, i32 33
  %390 = getelementptr inbounds %struct.Reg, %struct.Reg* %389, i32 0, i32 0
  %PC.i1429 = bitcast %union.anon* %390 to i64*
  %391 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %392 = getelementptr inbounds %struct.GPR, %struct.GPR* %391, i32 0, i32 7
  %393 = getelementptr inbounds %struct.Reg, %struct.Reg* %392, i32 0, i32 0
  %EDX.i1430 = bitcast %union.anon* %393 to i32*
  %394 = load i32, i32* %EDX.i1430
  %395 = zext i32 %394 to i64
  %396 = load i64, i64* %PC.i1429
  %397 = add i64 %396, 7
  store i64 %397, i64* %PC.i1429
  store i32 %394, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  store %struct.Memory* %loadMem_416062, %struct.Memory** %MEMORY
  %loadMem_416069 = load %struct.Memory*, %struct.Memory** %MEMORY
  %398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %399 = getelementptr inbounds %struct.GPR, %struct.GPR* %398, i32 0, i32 33
  %400 = getelementptr inbounds %struct.Reg, %struct.Reg* %399, i32 0, i32 0
  %PC.i1426 = bitcast %union.anon* %400 to i64*
  %401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %402 = getelementptr inbounds %struct.GPR, %struct.GPR* %401, i32 0, i32 7
  %403 = getelementptr inbounds %struct.Reg, %struct.Reg* %402, i32 0, i32 0
  %RDX.i1427 = bitcast %union.anon* %403 to i64*
  %404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %405 = getelementptr inbounds %struct.GPR, %struct.GPR* %404, i32 0, i32 15
  %406 = getelementptr inbounds %struct.Reg, %struct.Reg* %405, i32 0, i32 0
  %RBP.i1428 = bitcast %union.anon* %406 to i64*
  %407 = load i64, i64* %RBP.i1428
  %408 = sub i64 %407, 20
  %409 = load i64, i64* %PC.i1426
  %410 = add i64 %409, 3
  store i64 %410, i64* %PC.i1426
  %411 = inttoptr i64 %408 to i32*
  %412 = load i32, i32* %411
  %413 = zext i32 %412 to i64
  store i64 %413, i64* %RDX.i1427, align 8
  store %struct.Memory* %loadMem_416069, %struct.Memory** %MEMORY
  %loadMem_41606c = load %struct.Memory*, %struct.Memory** %MEMORY
  %414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %415 = getelementptr inbounds %struct.GPR, %struct.GPR* %414, i32 0, i32 33
  %416 = getelementptr inbounds %struct.Reg, %struct.Reg* %415, i32 0, i32 0
  %PC.i1424 = bitcast %union.anon* %416 to i64*
  %417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %418 = getelementptr inbounds %struct.GPR, %struct.GPR* %417, i32 0, i32 7
  %419 = getelementptr inbounds %struct.Reg, %struct.Reg* %418, i32 0, i32 0
  %RDX.i1425 = bitcast %union.anon* %419 to i64*
  %420 = load i64, i64* %RDX.i1425
  %421 = load i64, i64* %PC.i1424
  %422 = add i64 %421, 3
  store i64 %422, i64* %PC.i1424
  %423 = trunc i64 %420 to i32
  %424 = add i32 20, %423
  %425 = zext i32 %424 to i64
  store i64 %425, i64* %RDX.i1425, align 8
  %426 = icmp ult i32 %424, %423
  %427 = icmp ult i32 %424, 20
  %428 = or i1 %426, %427
  %429 = zext i1 %428 to i8
  %430 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %429, i8* %430, align 1
  %431 = and i32 %424, 255
  %432 = call i32 @llvm.ctpop.i32(i32 %431)
  %433 = trunc i32 %432 to i8
  %434 = and i8 %433, 1
  %435 = xor i8 %434, 1
  %436 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %435, i8* %436, align 1
  %437 = xor i64 20, %420
  %438 = trunc i64 %437 to i32
  %439 = xor i32 %438, %424
  %440 = lshr i32 %439, 4
  %441 = trunc i32 %440 to i8
  %442 = and i8 %441, 1
  %443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %442, i8* %443, align 1
  %444 = icmp eq i32 %424, 0
  %445 = zext i1 %444 to i8
  %446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %445, i8* %446, align 1
  %447 = lshr i32 %424, 31
  %448 = trunc i32 %447 to i8
  %449 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %448, i8* %449, align 1
  %450 = lshr i32 %423, 31
  %451 = xor i32 %447, %450
  %452 = add i32 %451, %447
  %453 = icmp eq i32 %452, 2
  %454 = zext i1 %453 to i8
  %455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %454, i8* %455, align 1
  store %struct.Memory* %loadMem_41606c, %struct.Memory** %MEMORY
  %loadMem_41606f = load %struct.Memory*, %struct.Memory** %MEMORY
  %456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %457 = getelementptr inbounds %struct.GPR, %struct.GPR* %456, i32 0, i32 33
  %458 = getelementptr inbounds %struct.Reg, %struct.Reg* %457, i32 0, i32 0
  %PC.i1421 = bitcast %union.anon* %458 to i64*
  %459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %460 = getelementptr inbounds %struct.GPR, %struct.GPR* %459, i32 0, i32 7
  %461 = getelementptr inbounds %struct.Reg, %struct.Reg* %460, i32 0, i32 0
  %EDX.i1422 = bitcast %union.anon* %461 to i32*
  %462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %463 = getelementptr inbounds %struct.GPR, %struct.GPR* %462, i32 0, i32 1
  %464 = getelementptr inbounds %struct.Reg, %struct.Reg* %463, i32 0, i32 0
  %RAX.i1423 = bitcast %union.anon* %464 to i64*
  %465 = load i32, i32* %EDX.i1422
  %466 = zext i32 %465 to i64
  %467 = load i64, i64* %PC.i1421
  %468 = add i64 %467, 3
  store i64 %468, i64* %PC.i1421
  %469 = shl i64 %466, 32
  %470 = ashr exact i64 %469, 32
  store i64 %470, i64* %RAX.i1423, align 8
  store %struct.Memory* %loadMem_41606f, %struct.Memory** %MEMORY
  %loadMem_416072 = load %struct.Memory*, %struct.Memory** %MEMORY
  %471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %472 = getelementptr inbounds %struct.GPR, %struct.GPR* %471, i32 0, i32 33
  %473 = getelementptr inbounds %struct.Reg, %struct.Reg* %472, i32 0, i32 0
  %PC.i1418 = bitcast %union.anon* %473 to i64*
  %474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %475 = getelementptr inbounds %struct.GPR, %struct.GPR* %474, i32 0, i32 1
  %476 = getelementptr inbounds %struct.Reg, %struct.Reg* %475, i32 0, i32 0
  %RAX.i1419 = bitcast %union.anon* %476 to i64*
  %477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %478 = getelementptr inbounds %struct.GPR, %struct.GPR* %477, i32 0, i32 7
  %479 = getelementptr inbounds %struct.Reg, %struct.Reg* %478, i32 0, i32 0
  %RDX.i1420 = bitcast %union.anon* %479 to i64*
  %480 = load i64, i64* %RAX.i1419
  %481 = add i64 %480, 12099168
  %482 = load i64, i64* %PC.i1418
  %483 = add i64 %482, 8
  store i64 %483, i64* %PC.i1418
  %484 = inttoptr i64 %481 to i8*
  %485 = load i8, i8* %484
  %486 = zext i8 %485 to i64
  store i64 %486, i64* %RDX.i1420, align 8
  store %struct.Memory* %loadMem_416072, %struct.Memory** %MEMORY
  %loadMem_41607a = load %struct.Memory*, %struct.Memory** %MEMORY
  %487 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %488 = getelementptr inbounds %struct.GPR, %struct.GPR* %487, i32 0, i32 33
  %489 = getelementptr inbounds %struct.Reg, %struct.Reg* %488, i32 0, i32 0
  %PC.i1416 = bitcast %union.anon* %489 to i64*
  %490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %491 = getelementptr inbounds %struct.GPR, %struct.GPR* %490, i32 0, i32 7
  %492 = getelementptr inbounds %struct.Reg, %struct.Reg* %491, i32 0, i32 0
  %EDX.i1417 = bitcast %union.anon* %492 to i32*
  %493 = load i32, i32* %EDX.i1417
  %494 = zext i32 %493 to i64
  %495 = load i64, i64* %PC.i1416
  %496 = add i64 %495, 3
  store i64 %496, i64* %PC.i1416
  %497 = sub i32 %493, 3
  %498 = icmp ult i32 %493, 3
  %499 = zext i1 %498 to i8
  %500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %499, i8* %500, align 1
  %501 = and i32 %497, 255
  %502 = call i32 @llvm.ctpop.i32(i32 %501)
  %503 = trunc i32 %502 to i8
  %504 = and i8 %503, 1
  %505 = xor i8 %504, 1
  %506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %505, i8* %506, align 1
  %507 = xor i64 3, %494
  %508 = trunc i64 %507 to i32
  %509 = xor i32 %508, %497
  %510 = lshr i32 %509, 4
  %511 = trunc i32 %510 to i8
  %512 = and i8 %511, 1
  %513 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %512, i8* %513, align 1
  %514 = icmp eq i32 %497, 0
  %515 = zext i1 %514 to i8
  %516 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %515, i8* %516, align 1
  %517 = lshr i32 %497, 31
  %518 = trunc i32 %517 to i8
  %519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %518, i8* %519, align 1
  %520 = lshr i32 %493, 31
  %521 = xor i32 %517, %520
  %522 = add i32 %521, %520
  %523 = icmp eq i32 %522, 2
  %524 = zext i1 %523 to i8
  %525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %524, i8* %525, align 1
  store %struct.Memory* %loadMem_41607a, %struct.Memory** %MEMORY
  %loadMem_41607d = load %struct.Memory*, %struct.Memory** %MEMORY
  %526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %527 = getelementptr inbounds %struct.GPR, %struct.GPR* %526, i32 0, i32 33
  %528 = getelementptr inbounds %struct.Reg, %struct.Reg* %527, i32 0, i32 0
  %PC.i1415 = bitcast %union.anon* %528 to i64*
  %529 = load i64, i64* %PC.i1415
  %530 = add i64 %529, 22
  %531 = load i64, i64* %PC.i1415
  %532 = add i64 %531, 6
  %533 = load i64, i64* %PC.i1415
  %534 = add i64 %533, 6
  store i64 %534, i64* %PC.i1415
  %535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %536 = load i8, i8* %535, align 1
  %537 = icmp eq i8 %536, 0
  %538 = zext i1 %537 to i8
  store i8 %538, i8* %BRANCH_TAKEN, align 1
  %539 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %540 = select i1 %537, i64 %530, i64 %532
  store i64 %540, i64* %539, align 8
  store %struct.Memory* %loadMem_41607d, %struct.Memory** %MEMORY
  %loadBr_41607d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41607d = icmp eq i8 %loadBr_41607d, 1
  br i1 %cmpBr_41607d, label %block_.L_416093, label %block_416083

block_416083:                                     ; preds = %entry
  %loadMem_416083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %542 = getelementptr inbounds %struct.GPR, %struct.GPR* %541, i32 0, i32 33
  %543 = getelementptr inbounds %struct.Reg, %struct.Reg* %542, i32 0, i32 0
  %PC.i1412 = bitcast %union.anon* %543 to i64*
  %544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %545 = getelementptr inbounds %struct.GPR, %struct.GPR* %544, i32 0, i32 1
  %546 = getelementptr inbounds %struct.Reg, %struct.Reg* %545, i32 0, i32 0
  %RAX.i1413 = bitcast %union.anon* %546 to i64*
  %547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %548 = getelementptr inbounds %struct.GPR, %struct.GPR* %547, i32 0, i32 15
  %549 = getelementptr inbounds %struct.Reg, %struct.Reg* %548, i32 0, i32 0
  %RBP.i1414 = bitcast %union.anon* %549 to i64*
  %550 = load i64, i64* %RBP.i1414
  %551 = sub i64 %550, 40
  %552 = load i64, i64* %PC.i1412
  %553 = add i64 %552, 4
  store i64 %553, i64* %PC.i1412
  %554 = inttoptr i64 %551 to i64*
  %555 = load i64, i64* %554
  store i64 %555, i64* %RAX.i1413, align 8
  store %struct.Memory* %loadMem_416083, %struct.Memory** %MEMORY
  %loadMem_416087 = load %struct.Memory*, %struct.Memory** %MEMORY
  %556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %557 = getelementptr inbounds %struct.GPR, %struct.GPR* %556, i32 0, i32 33
  %558 = getelementptr inbounds %struct.Reg, %struct.Reg* %557, i32 0, i32 0
  %PC.i1409 = bitcast %union.anon* %558 to i64*
  %559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %560 = getelementptr inbounds %struct.GPR, %struct.GPR* %559, i32 0, i32 1
  %561 = getelementptr inbounds %struct.Reg, %struct.Reg* %560, i32 0, i32 0
  %RAX.i1410 = bitcast %union.anon* %561 to i64*
  %562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %563 = getelementptr inbounds %struct.GPR, %struct.GPR* %562, i32 0, i32 5
  %564 = getelementptr inbounds %struct.Reg, %struct.Reg* %563, i32 0, i32 0
  %RCX.i1411 = bitcast %union.anon* %564 to i64*
  %565 = load i64, i64* %RAX.i1410
  %566 = load i64, i64* %PC.i1409
  %567 = add i64 %566, 2
  store i64 %567, i64* %PC.i1409
  %568 = inttoptr i64 %565 to i32*
  %569 = load i32, i32* %568
  %570 = zext i32 %569 to i64
  store i64 %570, i64* %RCX.i1411, align 8
  store %struct.Memory* %loadMem_416087, %struct.Memory** %MEMORY
  %loadMem_416089 = load %struct.Memory*, %struct.Memory** %MEMORY
  %571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %572 = getelementptr inbounds %struct.GPR, %struct.GPR* %571, i32 0, i32 33
  %573 = getelementptr inbounds %struct.Reg, %struct.Reg* %572, i32 0, i32 0
  %PC.i1407 = bitcast %union.anon* %573 to i64*
  %574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %575 = getelementptr inbounds %struct.GPR, %struct.GPR* %574, i32 0, i32 5
  %576 = getelementptr inbounds %struct.Reg, %struct.Reg* %575, i32 0, i32 0
  %RCX.i1408 = bitcast %union.anon* %576 to i64*
  %577 = load i64, i64* %RCX.i1408
  %578 = load i64, i64* %PC.i1407
  %579 = add i64 %578, 3
  store i64 %579, i64* %PC.i1407
  %580 = trunc i64 %577 to i32
  %581 = add i32 1, %580
  %582 = zext i32 %581 to i64
  store i64 %582, i64* %RCX.i1408, align 8
  %583 = icmp ult i32 %581, %580
  %584 = icmp ult i32 %581, 1
  %585 = or i1 %583, %584
  %586 = zext i1 %585 to i8
  %587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %586, i8* %587, align 1
  %588 = and i32 %581, 255
  %589 = call i32 @llvm.ctpop.i32(i32 %588)
  %590 = trunc i32 %589 to i8
  %591 = and i8 %590, 1
  %592 = xor i8 %591, 1
  %593 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %592, i8* %593, align 1
  %594 = xor i64 1, %577
  %595 = trunc i64 %594 to i32
  %596 = xor i32 %595, %581
  %597 = lshr i32 %596, 4
  %598 = trunc i32 %597 to i8
  %599 = and i8 %598, 1
  %600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %599, i8* %600, align 1
  %601 = icmp eq i32 %581, 0
  %602 = zext i1 %601 to i8
  %603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %602, i8* %603, align 1
  %604 = lshr i32 %581, 31
  %605 = trunc i32 %604 to i8
  %606 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %605, i8* %606, align 1
  %607 = lshr i32 %580, 31
  %608 = xor i32 %604, %607
  %609 = add i32 %608, %604
  %610 = icmp eq i32 %609, 2
  %611 = zext i1 %610 to i8
  %612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %611, i8* %612, align 1
  store %struct.Memory* %loadMem_416089, %struct.Memory** %MEMORY
  %loadMem_41608c = load %struct.Memory*, %struct.Memory** %MEMORY
  %613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %614 = getelementptr inbounds %struct.GPR, %struct.GPR* %613, i32 0, i32 33
  %615 = getelementptr inbounds %struct.Reg, %struct.Reg* %614, i32 0, i32 0
  %PC.i1404 = bitcast %union.anon* %615 to i64*
  %616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %617 = getelementptr inbounds %struct.GPR, %struct.GPR* %616, i32 0, i32 5
  %618 = getelementptr inbounds %struct.Reg, %struct.Reg* %617, i32 0, i32 0
  %ECX.i1405 = bitcast %union.anon* %618 to i32*
  %619 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %620 = getelementptr inbounds %struct.GPR, %struct.GPR* %619, i32 0, i32 1
  %621 = getelementptr inbounds %struct.Reg, %struct.Reg* %620, i32 0, i32 0
  %RAX.i1406 = bitcast %union.anon* %621 to i64*
  %622 = load i64, i64* %RAX.i1406
  %623 = load i32, i32* %ECX.i1405
  %624 = zext i32 %623 to i64
  %625 = load i64, i64* %PC.i1404
  %626 = add i64 %625, 2
  store i64 %626, i64* %PC.i1404
  %627 = inttoptr i64 %622 to i32*
  store i32 %623, i32* %627
  store %struct.Memory* %loadMem_41608c, %struct.Memory** %MEMORY
  %loadMem_41608e = load %struct.Memory*, %struct.Memory** %MEMORY
  %628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %629 = getelementptr inbounds %struct.GPR, %struct.GPR* %628, i32 0, i32 33
  %630 = getelementptr inbounds %struct.Reg, %struct.Reg* %629, i32 0, i32 0
  %PC.i1403 = bitcast %union.anon* %630 to i64*
  %631 = load i64, i64* %PC.i1403
  %632 = add i64 %631, 622
  %633 = load i64, i64* %PC.i1403
  %634 = add i64 %633, 5
  store i64 %634, i64* %PC.i1403
  %635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %632, i64* %635, align 8
  store %struct.Memory* %loadMem_41608e, %struct.Memory** %MEMORY
  br label %block_.L_4162fc

block_.L_416093:                                  ; preds = %entry
  %loadMem_416093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %637 = getelementptr inbounds %struct.GPR, %struct.GPR* %636, i32 0, i32 33
  %638 = getelementptr inbounds %struct.Reg, %struct.Reg* %637, i32 0, i32 0
  %PC.i1400 = bitcast %union.anon* %638 to i64*
  %639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %640 = getelementptr inbounds %struct.GPR, %struct.GPR* %639, i32 0, i32 1
  %641 = getelementptr inbounds %struct.Reg, %struct.Reg* %640, i32 0, i32 0
  %RAX.i1401 = bitcast %union.anon* %641 to i64*
  %642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %643 = getelementptr inbounds %struct.GPR, %struct.GPR* %642, i32 0, i32 15
  %644 = getelementptr inbounds %struct.Reg, %struct.Reg* %643, i32 0, i32 0
  %RBP.i1402 = bitcast %union.anon* %644 to i64*
  %645 = load i64, i64* %RBP.i1402
  %646 = sub i64 %645, 20
  %647 = load i64, i64* %PC.i1400
  %648 = add i64 %647, 3
  store i64 %648, i64* %PC.i1400
  %649 = inttoptr i64 %646 to i32*
  %650 = load i32, i32* %649
  %651 = zext i32 %650 to i64
  store i64 %651, i64* %RAX.i1401, align 8
  store %struct.Memory* %loadMem_416093, %struct.Memory** %MEMORY
  %loadMem_416096 = load %struct.Memory*, %struct.Memory** %MEMORY
  %652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %653 = getelementptr inbounds %struct.GPR, %struct.GPR* %652, i32 0, i32 33
  %654 = getelementptr inbounds %struct.Reg, %struct.Reg* %653, i32 0, i32 0
  %PC.i1398 = bitcast %union.anon* %654 to i64*
  %655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %656 = getelementptr inbounds %struct.GPR, %struct.GPR* %655, i32 0, i32 1
  %657 = getelementptr inbounds %struct.Reg, %struct.Reg* %656, i32 0, i32 0
  %RAX.i1399 = bitcast %union.anon* %657 to i64*
  %658 = load i64, i64* %RAX.i1399
  %659 = load i64, i64* %PC.i1398
  %660 = add i64 %659, 3
  store i64 %660, i64* %PC.i1398
  %661 = trunc i64 %658 to i32
  %662 = add i32 20, %661
  %663 = zext i32 %662 to i64
  store i64 %663, i64* %RAX.i1399, align 8
  %664 = icmp ult i32 %662, %661
  %665 = icmp ult i32 %662, 20
  %666 = or i1 %664, %665
  %667 = zext i1 %666 to i8
  %668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %667, i8* %668, align 1
  %669 = and i32 %662, 255
  %670 = call i32 @llvm.ctpop.i32(i32 %669)
  %671 = trunc i32 %670 to i8
  %672 = and i8 %671, 1
  %673 = xor i8 %672, 1
  %674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %673, i8* %674, align 1
  %675 = xor i64 20, %658
  %676 = trunc i64 %675 to i32
  %677 = xor i32 %676, %662
  %678 = lshr i32 %677, 4
  %679 = trunc i32 %678 to i8
  %680 = and i8 %679, 1
  %681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %680, i8* %681, align 1
  %682 = icmp eq i32 %662, 0
  %683 = zext i1 %682 to i8
  %684 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %683, i8* %684, align 1
  %685 = lshr i32 %662, 31
  %686 = trunc i32 %685 to i8
  %687 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %686, i8* %687, align 1
  %688 = lshr i32 %661, 31
  %689 = xor i32 %685, %688
  %690 = add i32 %689, %685
  %691 = icmp eq i32 %690, 2
  %692 = zext i1 %691 to i8
  %693 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %692, i8* %693, align 1
  store %struct.Memory* %loadMem_416096, %struct.Memory** %MEMORY
  %loadMem_416099 = load %struct.Memory*, %struct.Memory** %MEMORY
  %694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %695 = getelementptr inbounds %struct.GPR, %struct.GPR* %694, i32 0, i32 33
  %696 = getelementptr inbounds %struct.Reg, %struct.Reg* %695, i32 0, i32 0
  %PC.i1395 = bitcast %union.anon* %696 to i64*
  %697 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %698 = getelementptr inbounds %struct.GPR, %struct.GPR* %697, i32 0, i32 1
  %699 = getelementptr inbounds %struct.Reg, %struct.Reg* %698, i32 0, i32 0
  %EAX.i1396 = bitcast %union.anon* %699 to i32*
  %700 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %701 = getelementptr inbounds %struct.GPR, %struct.GPR* %700, i32 0, i32 5
  %702 = getelementptr inbounds %struct.Reg, %struct.Reg* %701, i32 0, i32 0
  %RCX.i1397 = bitcast %union.anon* %702 to i64*
  %703 = load i32, i32* %EAX.i1396
  %704 = zext i32 %703 to i64
  %705 = load i64, i64* %PC.i1395
  %706 = add i64 %705, 3
  store i64 %706, i64* %PC.i1395
  %707 = shl i64 %704, 32
  %708 = ashr exact i64 %707, 32
  store i64 %708, i64* %RCX.i1397, align 8
  store %struct.Memory* %loadMem_416099, %struct.Memory** %MEMORY
  %loadMem_41609c = load %struct.Memory*, %struct.Memory** %MEMORY
  %709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %710 = getelementptr inbounds %struct.GPR, %struct.GPR* %709, i32 0, i32 33
  %711 = getelementptr inbounds %struct.Reg, %struct.Reg* %710, i32 0, i32 0
  %PC.i1392 = bitcast %union.anon* %711 to i64*
  %712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %713 = getelementptr inbounds %struct.GPR, %struct.GPR* %712, i32 0, i32 1
  %714 = getelementptr inbounds %struct.Reg, %struct.Reg* %713, i32 0, i32 0
  %RAX.i1393 = bitcast %union.anon* %714 to i64*
  %715 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %716 = getelementptr inbounds %struct.GPR, %struct.GPR* %715, i32 0, i32 5
  %717 = getelementptr inbounds %struct.Reg, %struct.Reg* %716, i32 0, i32 0
  %RCX.i1394 = bitcast %union.anon* %717 to i64*
  %718 = load i64, i64* %RCX.i1394
  %719 = add i64 %718, 12099168
  %720 = load i64, i64* %PC.i1392
  %721 = add i64 %720, 8
  store i64 %721, i64* %PC.i1392
  %722 = inttoptr i64 %719 to i8*
  %723 = load i8, i8* %722
  %724 = zext i8 %723 to i64
  store i64 %724, i64* %RAX.i1393, align 8
  store %struct.Memory* %loadMem_41609c, %struct.Memory** %MEMORY
  %loadMem_4160a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %725 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %726 = getelementptr inbounds %struct.GPR, %struct.GPR* %725, i32 0, i32 33
  %727 = getelementptr inbounds %struct.Reg, %struct.Reg* %726, i32 0, i32 0
  %PC.i1390 = bitcast %union.anon* %727 to i64*
  %728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %729 = getelementptr inbounds %struct.GPR, %struct.GPR* %728, i32 0, i32 1
  %730 = getelementptr inbounds %struct.Reg, %struct.Reg* %729, i32 0, i32 0
  %EAX.i1391 = bitcast %union.anon* %730 to i32*
  %731 = load i32, i32* %EAX.i1391
  %732 = zext i32 %731 to i64
  %733 = load i64, i64* %PC.i1390
  %734 = add i64 %733, 3
  store i64 %734, i64* %PC.i1390
  %735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %735, align 1
  %736 = and i32 %731, 255
  %737 = call i32 @llvm.ctpop.i32(i32 %736)
  %738 = trunc i32 %737 to i8
  %739 = and i8 %738, 1
  %740 = xor i8 %739, 1
  %741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %740, i8* %741, align 1
  %742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %742, align 1
  %743 = icmp eq i32 %731, 0
  %744 = zext i1 %743 to i8
  %745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %744, i8* %745, align 1
  %746 = lshr i32 %731, 31
  %747 = trunc i32 %746 to i8
  %748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %747, i8* %748, align 1
  %749 = lshr i32 %731, 31
  %750 = xor i32 %746, %749
  %751 = add i32 %750, %749
  %752 = icmp eq i32 %751, 2
  %753 = zext i1 %752 to i8
  %754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %753, i8* %754, align 1
  store %struct.Memory* %loadMem_4160a4, %struct.Memory** %MEMORY
  %loadMem_4160a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %756 = getelementptr inbounds %struct.GPR, %struct.GPR* %755, i32 0, i32 33
  %757 = getelementptr inbounds %struct.Reg, %struct.Reg* %756, i32 0, i32 0
  %PC.i1389 = bitcast %union.anon* %757 to i64*
  %758 = load i64, i64* %PC.i1389
  %759 = add i64 %758, 22
  %760 = load i64, i64* %PC.i1389
  %761 = add i64 %760, 6
  %762 = load i64, i64* %PC.i1389
  %763 = add i64 %762, 6
  store i64 %763, i64* %PC.i1389
  %764 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %765 = load i8, i8* %764, align 1
  %766 = icmp eq i8 %765, 0
  %767 = zext i1 %766 to i8
  store i8 %767, i8* %BRANCH_TAKEN, align 1
  %768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %769 = select i1 %766, i64 %759, i64 %761
  store i64 %769, i64* %768, align 8
  store %struct.Memory* %loadMem_4160a7, %struct.Memory** %MEMORY
  %loadBr_4160a7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4160a7 = icmp eq i8 %loadBr_4160a7, 1
  br i1 %cmpBr_4160a7, label %block_.L_4160bd, label %block_4160ad

block_4160ad:                                     ; preds = %block_.L_416093
  %loadMem_4160ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %770 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %771 = getelementptr inbounds %struct.GPR, %struct.GPR* %770, i32 0, i32 33
  %772 = getelementptr inbounds %struct.Reg, %struct.Reg* %771, i32 0, i32 0
  %PC.i1386 = bitcast %union.anon* %772 to i64*
  %773 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %774 = getelementptr inbounds %struct.GPR, %struct.GPR* %773, i32 0, i32 1
  %775 = getelementptr inbounds %struct.Reg, %struct.Reg* %774, i32 0, i32 0
  %RAX.i1387 = bitcast %union.anon* %775 to i64*
  %776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %777 = getelementptr inbounds %struct.GPR, %struct.GPR* %776, i32 0, i32 15
  %778 = getelementptr inbounds %struct.Reg, %struct.Reg* %777, i32 0, i32 0
  %RBP.i1388 = bitcast %union.anon* %778 to i64*
  %779 = load i64, i64* %RBP.i1388
  %780 = sub i64 %779, 96
  %781 = load i64, i64* %PC.i1386
  %782 = add i64 %781, 4
  store i64 %782, i64* %PC.i1386
  %783 = inttoptr i64 %780 to i64*
  %784 = load i64, i64* %783
  store i64 %784, i64* %RAX.i1387, align 8
  store %struct.Memory* %loadMem_4160ad, %struct.Memory** %MEMORY
  %loadMem_4160b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %786 = getelementptr inbounds %struct.GPR, %struct.GPR* %785, i32 0, i32 33
  %787 = getelementptr inbounds %struct.Reg, %struct.Reg* %786, i32 0, i32 0
  %PC.i1383 = bitcast %union.anon* %787 to i64*
  %788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %789 = getelementptr inbounds %struct.GPR, %struct.GPR* %788, i32 0, i32 1
  %790 = getelementptr inbounds %struct.Reg, %struct.Reg* %789, i32 0, i32 0
  %RAX.i1384 = bitcast %union.anon* %790 to i64*
  %791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %792 = getelementptr inbounds %struct.GPR, %struct.GPR* %791, i32 0, i32 5
  %793 = getelementptr inbounds %struct.Reg, %struct.Reg* %792, i32 0, i32 0
  %RCX.i1385 = bitcast %union.anon* %793 to i64*
  %794 = load i64, i64* %RAX.i1384
  %795 = load i64, i64* %PC.i1383
  %796 = add i64 %795, 2
  store i64 %796, i64* %PC.i1383
  %797 = inttoptr i64 %794 to i32*
  %798 = load i32, i32* %797
  %799 = zext i32 %798 to i64
  store i64 %799, i64* %RCX.i1385, align 8
  store %struct.Memory* %loadMem_4160b1, %struct.Memory** %MEMORY
  %loadMem_4160b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %801 = getelementptr inbounds %struct.GPR, %struct.GPR* %800, i32 0, i32 33
  %802 = getelementptr inbounds %struct.Reg, %struct.Reg* %801, i32 0, i32 0
  %PC.i1381 = bitcast %union.anon* %802 to i64*
  %803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %804 = getelementptr inbounds %struct.GPR, %struct.GPR* %803, i32 0, i32 5
  %805 = getelementptr inbounds %struct.Reg, %struct.Reg* %804, i32 0, i32 0
  %RCX.i1382 = bitcast %union.anon* %805 to i64*
  %806 = load i64, i64* %RCX.i1382
  %807 = load i64, i64* %PC.i1381
  %808 = add i64 %807, 3
  store i64 %808, i64* %PC.i1381
  %809 = trunc i64 %806 to i32
  %810 = add i32 1, %809
  %811 = zext i32 %810 to i64
  store i64 %811, i64* %RCX.i1382, align 8
  %812 = icmp ult i32 %810, %809
  %813 = icmp ult i32 %810, 1
  %814 = or i1 %812, %813
  %815 = zext i1 %814 to i8
  %816 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %815, i8* %816, align 1
  %817 = and i32 %810, 255
  %818 = call i32 @llvm.ctpop.i32(i32 %817)
  %819 = trunc i32 %818 to i8
  %820 = and i8 %819, 1
  %821 = xor i8 %820, 1
  %822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %821, i8* %822, align 1
  %823 = xor i64 1, %806
  %824 = trunc i64 %823 to i32
  %825 = xor i32 %824, %810
  %826 = lshr i32 %825, 4
  %827 = trunc i32 %826 to i8
  %828 = and i8 %827, 1
  %829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %828, i8* %829, align 1
  %830 = icmp eq i32 %810, 0
  %831 = zext i1 %830 to i8
  %832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %831, i8* %832, align 1
  %833 = lshr i32 %810, 31
  %834 = trunc i32 %833 to i8
  %835 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %834, i8* %835, align 1
  %836 = lshr i32 %809, 31
  %837 = xor i32 %833, %836
  %838 = add i32 %837, %833
  %839 = icmp eq i32 %838, 2
  %840 = zext i1 %839 to i8
  %841 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %840, i8* %841, align 1
  store %struct.Memory* %loadMem_4160b3, %struct.Memory** %MEMORY
  %loadMem_4160b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %842 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %843 = getelementptr inbounds %struct.GPR, %struct.GPR* %842, i32 0, i32 33
  %844 = getelementptr inbounds %struct.Reg, %struct.Reg* %843, i32 0, i32 0
  %PC.i1378 = bitcast %union.anon* %844 to i64*
  %845 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %846 = getelementptr inbounds %struct.GPR, %struct.GPR* %845, i32 0, i32 5
  %847 = getelementptr inbounds %struct.Reg, %struct.Reg* %846, i32 0, i32 0
  %ECX.i1379 = bitcast %union.anon* %847 to i32*
  %848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %849 = getelementptr inbounds %struct.GPR, %struct.GPR* %848, i32 0, i32 1
  %850 = getelementptr inbounds %struct.Reg, %struct.Reg* %849, i32 0, i32 0
  %RAX.i1380 = bitcast %union.anon* %850 to i64*
  %851 = load i64, i64* %RAX.i1380
  %852 = load i32, i32* %ECX.i1379
  %853 = zext i32 %852 to i64
  %854 = load i64, i64* %PC.i1378
  %855 = add i64 %854, 2
  store i64 %855, i64* %PC.i1378
  %856 = inttoptr i64 %851 to i32*
  store i32 %852, i32* %856
  store %struct.Memory* %loadMem_4160b6, %struct.Memory** %MEMORY
  %loadMem_4160b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %858 = getelementptr inbounds %struct.GPR, %struct.GPR* %857, i32 0, i32 33
  %859 = getelementptr inbounds %struct.Reg, %struct.Reg* %858, i32 0, i32 0
  %PC.i1377 = bitcast %union.anon* %859 to i64*
  %860 = load i64, i64* %PC.i1377
  %861 = add i64 %860, 575
  %862 = load i64, i64* %PC.i1377
  %863 = add i64 %862, 5
  store i64 %863, i64* %PC.i1377
  %864 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %861, i64* %864, align 8
  store %struct.Memory* %loadMem_4160b8, %struct.Memory** %MEMORY
  br label %block_.L_4162f7

block_.L_4160bd:                                  ; preds = %block_.L_416093
  %loadMem_4160bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %866 = getelementptr inbounds %struct.GPR, %struct.GPR* %865, i32 0, i32 33
  %867 = getelementptr inbounds %struct.Reg, %struct.Reg* %866, i32 0, i32 0
  %PC.i1374 = bitcast %union.anon* %867 to i64*
  %868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %869 = getelementptr inbounds %struct.GPR, %struct.GPR* %868, i32 0, i32 1
  %870 = getelementptr inbounds %struct.Reg, %struct.Reg* %869, i32 0, i32 0
  %RAX.i1375 = bitcast %union.anon* %870 to i64*
  %871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %872 = getelementptr inbounds %struct.GPR, %struct.GPR* %871, i32 0, i32 15
  %873 = getelementptr inbounds %struct.Reg, %struct.Reg* %872, i32 0, i32 0
  %RBP.i1376 = bitcast %union.anon* %873 to i64*
  %874 = load i64, i64* %RBP.i1376
  %875 = sub i64 %874, 20
  %876 = load i64, i64* %PC.i1374
  %877 = add i64 %876, 3
  store i64 %877, i64* %PC.i1374
  %878 = inttoptr i64 %875 to i32*
  %879 = load i32, i32* %878
  %880 = zext i32 %879 to i64
  store i64 %880, i64* %RAX.i1375, align 8
  store %struct.Memory* %loadMem_4160bd, %struct.Memory** %MEMORY
  %loadMem_4160c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %882 = getelementptr inbounds %struct.GPR, %struct.GPR* %881, i32 0, i32 33
  %883 = getelementptr inbounds %struct.Reg, %struct.Reg* %882, i32 0, i32 0
  %PC.i1372 = bitcast %union.anon* %883 to i64*
  %884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %885 = getelementptr inbounds %struct.GPR, %struct.GPR* %884, i32 0, i32 1
  %886 = getelementptr inbounds %struct.Reg, %struct.Reg* %885, i32 0, i32 0
  %RAX.i1373 = bitcast %union.anon* %886 to i64*
  %887 = load i64, i64* %RAX.i1373
  %888 = load i64, i64* %PC.i1372
  %889 = add i64 %888, 3
  store i64 %889, i64* %PC.i1372
  %890 = trunc i64 %887 to i32
  %891 = add i32 20, %890
  %892 = zext i32 %891 to i64
  store i64 %892, i64* %RAX.i1373, align 8
  %893 = icmp ult i32 %891, %890
  %894 = icmp ult i32 %891, 20
  %895 = or i1 %893, %894
  %896 = zext i1 %895 to i8
  %897 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %896, i8* %897, align 1
  %898 = and i32 %891, 255
  %899 = call i32 @llvm.ctpop.i32(i32 %898)
  %900 = trunc i32 %899 to i8
  %901 = and i8 %900, 1
  %902 = xor i8 %901, 1
  %903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %902, i8* %903, align 1
  %904 = xor i64 20, %887
  %905 = trunc i64 %904 to i32
  %906 = xor i32 %905, %891
  %907 = lshr i32 %906, 4
  %908 = trunc i32 %907 to i8
  %909 = and i8 %908, 1
  %910 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %909, i8* %910, align 1
  %911 = icmp eq i32 %891, 0
  %912 = zext i1 %911 to i8
  %913 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %912, i8* %913, align 1
  %914 = lshr i32 %891, 31
  %915 = trunc i32 %914 to i8
  %916 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %915, i8* %916, align 1
  %917 = lshr i32 %890, 31
  %918 = xor i32 %914, %917
  %919 = add i32 %918, %914
  %920 = icmp eq i32 %919, 2
  %921 = zext i1 %920 to i8
  %922 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %921, i8* %922, align 1
  store %struct.Memory* %loadMem_4160c0, %struct.Memory** %MEMORY
  %loadMem_4160c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %923 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %924 = getelementptr inbounds %struct.GPR, %struct.GPR* %923, i32 0, i32 33
  %925 = getelementptr inbounds %struct.Reg, %struct.Reg* %924, i32 0, i32 0
  %PC.i1369 = bitcast %union.anon* %925 to i64*
  %926 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %927 = getelementptr inbounds %struct.GPR, %struct.GPR* %926, i32 0, i32 1
  %928 = getelementptr inbounds %struct.Reg, %struct.Reg* %927, i32 0, i32 0
  %EAX.i1370 = bitcast %union.anon* %928 to i32*
  %929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %930 = getelementptr inbounds %struct.GPR, %struct.GPR* %929, i32 0, i32 5
  %931 = getelementptr inbounds %struct.Reg, %struct.Reg* %930, i32 0, i32 0
  %RCX.i1371 = bitcast %union.anon* %931 to i64*
  %932 = load i32, i32* %EAX.i1370
  %933 = zext i32 %932 to i64
  %934 = load i64, i64* %PC.i1369
  %935 = add i64 %934, 3
  store i64 %935, i64* %PC.i1369
  %936 = shl i64 %933, 32
  %937 = ashr exact i64 %936, 32
  store i64 %937, i64* %RCX.i1371, align 8
  store %struct.Memory* %loadMem_4160c3, %struct.Memory** %MEMORY
  %loadMem_4160c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %938 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %939 = getelementptr inbounds %struct.GPR, %struct.GPR* %938, i32 0, i32 33
  %940 = getelementptr inbounds %struct.Reg, %struct.Reg* %939, i32 0, i32 0
  %PC.i1366 = bitcast %union.anon* %940 to i64*
  %941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %942 = getelementptr inbounds %struct.GPR, %struct.GPR* %941, i32 0, i32 1
  %943 = getelementptr inbounds %struct.Reg, %struct.Reg* %942, i32 0, i32 0
  %RAX.i1367 = bitcast %union.anon* %943 to i64*
  %944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %945 = getelementptr inbounds %struct.GPR, %struct.GPR* %944, i32 0, i32 5
  %946 = getelementptr inbounds %struct.Reg, %struct.Reg* %945, i32 0, i32 0
  %RCX.i1368 = bitcast %union.anon* %946 to i64*
  %947 = load i64, i64* %RCX.i1368
  %948 = mul i64 %947, 4
  %949 = add i64 %948, 11187184
  %950 = load i64, i64* %PC.i1366
  %951 = add i64 %950, 7
  store i64 %951, i64* %PC.i1366
  %952 = inttoptr i64 %949 to i32*
  %953 = load i32, i32* %952
  %954 = zext i32 %953 to i64
  store i64 %954, i64* %RAX.i1367, align 8
  store %struct.Memory* %loadMem_4160c6, %struct.Memory** %MEMORY
  %loadMem_4160cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %956 = getelementptr inbounds %struct.GPR, %struct.GPR* %955, i32 0, i32 33
  %957 = getelementptr inbounds %struct.Reg, %struct.Reg* %956, i32 0, i32 0
  %PC.i1363 = bitcast %union.anon* %957 to i64*
  %958 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %959 = getelementptr inbounds %struct.GPR, %struct.GPR* %958, i32 0, i32 1
  %960 = getelementptr inbounds %struct.Reg, %struct.Reg* %959, i32 0, i32 0
  %EAX.i1364 = bitcast %union.anon* %960 to i32*
  %961 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %962 = getelementptr inbounds %struct.GPR, %struct.GPR* %961, i32 0, i32 15
  %963 = getelementptr inbounds %struct.Reg, %struct.Reg* %962, i32 0, i32 0
  %RBP.i1365 = bitcast %union.anon* %963 to i64*
  %964 = load i64, i64* %RBP.i1365
  %965 = sub i64 %964, 100
  %966 = load i32, i32* %EAX.i1364
  %967 = zext i32 %966 to i64
  %968 = load i64, i64* %PC.i1363
  %969 = add i64 %968, 3
  store i64 %969, i64* %PC.i1363
  %970 = inttoptr i64 %965 to i32*
  store i32 %966, i32* %970
  store %struct.Memory* %loadMem_4160cd, %struct.Memory** %MEMORY
  %loadMem_4160d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %972 = getelementptr inbounds %struct.GPR, %struct.GPR* %971, i32 0, i32 33
  %973 = getelementptr inbounds %struct.Reg, %struct.Reg* %972, i32 0, i32 0
  %PC.i1360 = bitcast %union.anon* %973 to i64*
  %974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %975 = getelementptr inbounds %struct.GPR, %struct.GPR* %974, i32 0, i32 5
  %976 = getelementptr inbounds %struct.Reg, %struct.Reg* %975, i32 0, i32 0
  %RCX.i1361 = bitcast %union.anon* %976 to i64*
  %977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %978 = getelementptr inbounds %struct.GPR, %struct.GPR* %977, i32 0, i32 15
  %979 = getelementptr inbounds %struct.Reg, %struct.Reg* %978, i32 0, i32 0
  %RBP.i1362 = bitcast %union.anon* %979 to i64*
  %980 = load i64, i64* %RBP.i1362
  %981 = sub i64 %980, 28
  %982 = load i64, i64* %PC.i1360
  %983 = add i64 %982, 4
  store i64 %983, i64* %PC.i1360
  %984 = inttoptr i64 %981 to i32*
  %985 = load i32, i32* %984
  %986 = sext i32 %985 to i64
  store i64 %986, i64* %RCX.i1361, align 8
  store %struct.Memory* %loadMem_4160d0, %struct.Memory** %MEMORY
  %loadMem_4160d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %988 = getelementptr inbounds %struct.GPR, %struct.GPR* %987, i32 0, i32 33
  %989 = getelementptr inbounds %struct.Reg, %struct.Reg* %988, i32 0, i32 0
  %PC.i1357 = bitcast %union.anon* %989 to i64*
  %990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %991 = getelementptr inbounds %struct.GPR, %struct.GPR* %990, i32 0, i32 1
  %992 = getelementptr inbounds %struct.Reg, %struct.Reg* %991, i32 0, i32 0
  %RAX.i1358 = bitcast %union.anon* %992 to i64*
  %993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %994 = getelementptr inbounds %struct.GPR, %struct.GPR* %993, i32 0, i32 5
  %995 = getelementptr inbounds %struct.Reg, %struct.Reg* %994, i32 0, i32 0
  %RCX.i1359 = bitcast %union.anon* %995 to i64*
  %996 = load i64, i64* %RCX.i1359
  %997 = mul i64 %996, 4
  %998 = add i64 %997, 11187184
  %999 = load i64, i64* %PC.i1357
  %1000 = add i64 %999, 7
  store i64 %1000, i64* %PC.i1357
  %1001 = inttoptr i64 %998 to i32*
  %1002 = load i32, i32* %1001
  %1003 = zext i32 %1002 to i64
  store i64 %1003, i64* %RAX.i1358, align 8
  store %struct.Memory* %loadMem_4160d4, %struct.Memory** %MEMORY
  %loadMem_4160db = load %struct.Memory*, %struct.Memory** %MEMORY
  %1004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1005 = getelementptr inbounds %struct.GPR, %struct.GPR* %1004, i32 0, i32 33
  %1006 = getelementptr inbounds %struct.Reg, %struct.Reg* %1005, i32 0, i32 0
  %PC.i1354 = bitcast %union.anon* %1006 to i64*
  %1007 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1008 = getelementptr inbounds %struct.GPR, %struct.GPR* %1007, i32 0, i32 1
  %1009 = getelementptr inbounds %struct.Reg, %struct.Reg* %1008, i32 0, i32 0
  %EAX.i1355 = bitcast %union.anon* %1009 to i32*
  %1010 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1011 = getelementptr inbounds %struct.GPR, %struct.GPR* %1010, i32 0, i32 15
  %1012 = getelementptr inbounds %struct.Reg, %struct.Reg* %1011, i32 0, i32 0
  %RBP.i1356 = bitcast %union.anon* %1012 to i64*
  %1013 = load i32, i32* %EAX.i1355
  %1014 = zext i32 %1013 to i64
  %1015 = load i64, i64* %RBP.i1356
  %1016 = sub i64 %1015, 100
  %1017 = load i64, i64* %PC.i1354
  %1018 = add i64 %1017, 3
  store i64 %1018, i64* %PC.i1354
  %1019 = inttoptr i64 %1016 to i32*
  %1020 = load i32, i32* %1019
  %1021 = sub i32 %1013, %1020
  %1022 = icmp ult i32 %1013, %1020
  %1023 = zext i1 %1022 to i8
  %1024 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1023, i8* %1024, align 1
  %1025 = and i32 %1021, 255
  %1026 = call i32 @llvm.ctpop.i32(i32 %1025)
  %1027 = trunc i32 %1026 to i8
  %1028 = and i8 %1027, 1
  %1029 = xor i8 %1028, 1
  %1030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1029, i8* %1030, align 1
  %1031 = xor i32 %1020, %1013
  %1032 = xor i32 %1031, %1021
  %1033 = lshr i32 %1032, 4
  %1034 = trunc i32 %1033 to i8
  %1035 = and i8 %1034, 1
  %1036 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1035, i8* %1036, align 1
  %1037 = icmp eq i32 %1021, 0
  %1038 = zext i1 %1037 to i8
  %1039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1038, i8* %1039, align 1
  %1040 = lshr i32 %1021, 31
  %1041 = trunc i32 %1040 to i8
  %1042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1041, i8* %1042, align 1
  %1043 = lshr i32 %1013, 31
  %1044 = lshr i32 %1020, 31
  %1045 = xor i32 %1044, %1043
  %1046 = xor i32 %1040, %1043
  %1047 = add i32 %1046, %1045
  %1048 = icmp eq i32 %1047, 2
  %1049 = zext i1 %1048 to i8
  %1050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1049, i8* %1050, align 1
  store %struct.Memory* %loadMem_4160db, %struct.Memory** %MEMORY
  %loadMem_4160de = load %struct.Memory*, %struct.Memory** %MEMORY
  %1051 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1052 = getelementptr inbounds %struct.GPR, %struct.GPR* %1051, i32 0, i32 33
  %1053 = getelementptr inbounds %struct.Reg, %struct.Reg* %1052, i32 0, i32 0
  %PC.i1353 = bitcast %union.anon* %1053 to i64*
  %1054 = load i64, i64* %PC.i1353
  %1055 = add i64 %1054, 17
  %1056 = load i64, i64* %PC.i1353
  %1057 = add i64 %1056, 6
  %1058 = load i64, i64* %PC.i1353
  %1059 = add i64 %1058, 6
  store i64 %1059, i64* %PC.i1353
  %1060 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1061 = load i8, i8* %1060, align 1
  %1062 = icmp eq i8 %1061, 0
  %1063 = zext i1 %1062 to i8
  store i8 %1063, i8* %BRANCH_TAKEN, align 1
  %1064 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1065 = select i1 %1062, i64 %1055, i64 %1057
  store i64 %1065, i64* %1064, align 8
  store %struct.Memory* %loadMem_4160de, %struct.Memory** %MEMORY
  %loadBr_4160de = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4160de = icmp eq i8 %loadBr_4160de, 1
  br i1 %cmpBr_4160de, label %block_.L_4160ef, label %block_4160e4

block_4160e4:                                     ; preds = %block_.L_4160bd
  %loadMem_4160e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1067 = getelementptr inbounds %struct.GPR, %struct.GPR* %1066, i32 0, i32 33
  %1068 = getelementptr inbounds %struct.Reg, %struct.Reg* %1067, i32 0, i32 0
  %PC.i1350 = bitcast %union.anon* %1068 to i64*
  %1069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1070 = getelementptr inbounds %struct.GPR, %struct.GPR* %1069, i32 0, i32 1
  %1071 = getelementptr inbounds %struct.Reg, %struct.Reg* %1070, i32 0, i32 0
  %RAX.i1351 = bitcast %union.anon* %1071 to i64*
  %1072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1073 = getelementptr inbounds %struct.GPR, %struct.GPR* %1072, i32 0, i32 15
  %1074 = getelementptr inbounds %struct.Reg, %struct.Reg* %1073, i32 0, i32 0
  %RBP.i1352 = bitcast %union.anon* %1074 to i64*
  %1075 = load i64, i64* %RBP.i1352
  %1076 = sub i64 %1075, 48
  %1077 = load i64, i64* %PC.i1350
  %1078 = add i64 %1077, 4
  store i64 %1078, i64* %PC.i1350
  %1079 = inttoptr i64 %1076 to i64*
  %1080 = load i64, i64* %1079
  store i64 %1080, i64* %RAX.i1351, align 8
  store %struct.Memory* %loadMem_4160e4, %struct.Memory** %MEMORY
  %loadMem_4160e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1082 = getelementptr inbounds %struct.GPR, %struct.GPR* %1081, i32 0, i32 33
  %1083 = getelementptr inbounds %struct.Reg, %struct.Reg* %1082, i32 0, i32 0
  %PC.i1347 = bitcast %union.anon* %1083 to i64*
  %1084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1085 = getelementptr inbounds %struct.GPR, %struct.GPR* %1084, i32 0, i32 1
  %1086 = getelementptr inbounds %struct.Reg, %struct.Reg* %1085, i32 0, i32 0
  %RAX.i1348 = bitcast %union.anon* %1086 to i64*
  %1087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1088 = getelementptr inbounds %struct.GPR, %struct.GPR* %1087, i32 0, i32 5
  %1089 = getelementptr inbounds %struct.Reg, %struct.Reg* %1088, i32 0, i32 0
  %RCX.i1349 = bitcast %union.anon* %1089 to i64*
  %1090 = load i64, i64* %RAX.i1348
  %1091 = load i64, i64* %PC.i1347
  %1092 = add i64 %1091, 2
  store i64 %1092, i64* %PC.i1347
  %1093 = inttoptr i64 %1090 to i32*
  %1094 = load i32, i32* %1093
  %1095 = zext i32 %1094 to i64
  store i64 %1095, i64* %RCX.i1349, align 8
  store %struct.Memory* %loadMem_4160e8, %struct.Memory** %MEMORY
  %loadMem_4160ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %1096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1097 = getelementptr inbounds %struct.GPR, %struct.GPR* %1096, i32 0, i32 33
  %1098 = getelementptr inbounds %struct.Reg, %struct.Reg* %1097, i32 0, i32 0
  %PC.i1345 = bitcast %union.anon* %1098 to i64*
  %1099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1100 = getelementptr inbounds %struct.GPR, %struct.GPR* %1099, i32 0, i32 5
  %1101 = getelementptr inbounds %struct.Reg, %struct.Reg* %1100, i32 0, i32 0
  %RCX.i1346 = bitcast %union.anon* %1101 to i64*
  %1102 = load i64, i64* %RCX.i1346
  %1103 = load i64, i64* %PC.i1345
  %1104 = add i64 %1103, 3
  store i64 %1104, i64* %PC.i1345
  %1105 = trunc i64 %1102 to i32
  %1106 = add i32 1, %1105
  %1107 = zext i32 %1106 to i64
  store i64 %1107, i64* %RCX.i1346, align 8
  %1108 = icmp ult i32 %1106, %1105
  %1109 = icmp ult i32 %1106, 1
  %1110 = or i1 %1108, %1109
  %1111 = zext i1 %1110 to i8
  %1112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1111, i8* %1112, align 1
  %1113 = and i32 %1106, 255
  %1114 = call i32 @llvm.ctpop.i32(i32 %1113)
  %1115 = trunc i32 %1114 to i8
  %1116 = and i8 %1115, 1
  %1117 = xor i8 %1116, 1
  %1118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1117, i8* %1118, align 1
  %1119 = xor i64 1, %1102
  %1120 = trunc i64 %1119 to i32
  %1121 = xor i32 %1120, %1106
  %1122 = lshr i32 %1121, 4
  %1123 = trunc i32 %1122 to i8
  %1124 = and i8 %1123, 1
  %1125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1124, i8* %1125, align 1
  %1126 = icmp eq i32 %1106, 0
  %1127 = zext i1 %1126 to i8
  %1128 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1127, i8* %1128, align 1
  %1129 = lshr i32 %1106, 31
  %1130 = trunc i32 %1129 to i8
  %1131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1130, i8* %1131, align 1
  %1132 = lshr i32 %1105, 31
  %1133 = xor i32 %1129, %1132
  %1134 = add i32 %1133, %1129
  %1135 = icmp eq i32 %1134, 2
  %1136 = zext i1 %1135 to i8
  %1137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1136, i8* %1137, align 1
  store %struct.Memory* %loadMem_4160ea, %struct.Memory** %MEMORY
  %loadMem_4160ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %1138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1139 = getelementptr inbounds %struct.GPR, %struct.GPR* %1138, i32 0, i32 33
  %1140 = getelementptr inbounds %struct.Reg, %struct.Reg* %1139, i32 0, i32 0
  %PC.i1342 = bitcast %union.anon* %1140 to i64*
  %1141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1142 = getelementptr inbounds %struct.GPR, %struct.GPR* %1141, i32 0, i32 5
  %1143 = getelementptr inbounds %struct.Reg, %struct.Reg* %1142, i32 0, i32 0
  %ECX.i1343 = bitcast %union.anon* %1143 to i32*
  %1144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1145 = getelementptr inbounds %struct.GPR, %struct.GPR* %1144, i32 0, i32 1
  %1146 = getelementptr inbounds %struct.Reg, %struct.Reg* %1145, i32 0, i32 0
  %RAX.i1344 = bitcast %union.anon* %1146 to i64*
  %1147 = load i64, i64* %RAX.i1344
  %1148 = load i32, i32* %ECX.i1343
  %1149 = zext i32 %1148 to i64
  %1150 = load i64, i64* %PC.i1342
  %1151 = add i64 %1150, 2
  store i64 %1151, i64* %PC.i1342
  %1152 = inttoptr i64 %1147 to i32*
  store i32 %1148, i32* %1152
  store %struct.Memory* %loadMem_4160ed, %struct.Memory** %MEMORY
  br label %block_.L_4160ef

block_.L_4160ef:                                  ; preds = %block_4160e4, %block_.L_4160bd
  %loadMem_4160ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %1153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1154 = getelementptr inbounds %struct.GPR, %struct.GPR* %1153, i32 0, i32 33
  %1155 = getelementptr inbounds %struct.Reg, %struct.Reg* %1154, i32 0, i32 0
  %PC.i1339 = bitcast %union.anon* %1155 to i64*
  %1156 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1157 = getelementptr inbounds %struct.GPR, %struct.GPR* %1156, i32 0, i32 1
  %1158 = getelementptr inbounds %struct.Reg, %struct.Reg* %1157, i32 0, i32 0
  %RAX.i1340 = bitcast %union.anon* %1158 to i64*
  %1159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1160 = getelementptr inbounds %struct.GPR, %struct.GPR* %1159, i32 0, i32 15
  %1161 = getelementptr inbounds %struct.Reg, %struct.Reg* %1160, i32 0, i32 0
  %RBP.i1341 = bitcast %union.anon* %1161 to i64*
  %1162 = load i64, i64* %RBP.i1341
  %1163 = sub i64 %1162, 20
  %1164 = load i64, i64* %PC.i1339
  %1165 = add i64 %1164, 3
  store i64 %1165, i64* %PC.i1339
  %1166 = inttoptr i64 %1163 to i32*
  %1167 = load i32, i32* %1166
  %1168 = zext i32 %1167 to i64
  store i64 %1168, i64* %RAX.i1340, align 8
  store %struct.Memory* %loadMem_4160ef, %struct.Memory** %MEMORY
  %loadMem_4160f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1169 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1170 = getelementptr inbounds %struct.GPR, %struct.GPR* %1169, i32 0, i32 33
  %1171 = getelementptr inbounds %struct.Reg, %struct.Reg* %1170, i32 0, i32 0
  %PC.i1337 = bitcast %union.anon* %1171 to i64*
  %1172 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1173 = getelementptr inbounds %struct.GPR, %struct.GPR* %1172, i32 0, i32 1
  %1174 = getelementptr inbounds %struct.Reg, %struct.Reg* %1173, i32 0, i32 0
  %RAX.i1338 = bitcast %union.anon* %1174 to i64*
  %1175 = load i64, i64* %RAX.i1338
  %1176 = load i64, i64* %PC.i1337
  %1177 = add i64 %1176, 3
  store i64 %1177, i64* %PC.i1337
  %1178 = trunc i64 %1175 to i32
  %1179 = add i32 20, %1178
  %1180 = zext i32 %1179 to i64
  store i64 %1180, i64* %RAX.i1338, align 8
  %1181 = icmp ult i32 %1179, %1178
  %1182 = icmp ult i32 %1179, 20
  %1183 = or i1 %1181, %1182
  %1184 = zext i1 %1183 to i8
  %1185 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1184, i8* %1185, align 1
  %1186 = and i32 %1179, 255
  %1187 = call i32 @llvm.ctpop.i32(i32 %1186)
  %1188 = trunc i32 %1187 to i8
  %1189 = and i8 %1188, 1
  %1190 = xor i8 %1189, 1
  %1191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1190, i8* %1191, align 1
  %1192 = xor i64 20, %1175
  %1193 = trunc i64 %1192 to i32
  %1194 = xor i32 %1193, %1179
  %1195 = lshr i32 %1194, 4
  %1196 = trunc i32 %1195 to i8
  %1197 = and i8 %1196, 1
  %1198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1197, i8* %1198, align 1
  %1199 = icmp eq i32 %1179, 0
  %1200 = zext i1 %1199 to i8
  %1201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1200, i8* %1201, align 1
  %1202 = lshr i32 %1179, 31
  %1203 = trunc i32 %1202 to i8
  %1204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1203, i8* %1204, align 1
  %1205 = lshr i32 %1178, 31
  %1206 = xor i32 %1202, %1205
  %1207 = add i32 %1206, %1202
  %1208 = icmp eq i32 %1207, 2
  %1209 = zext i1 %1208 to i8
  %1210 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1209, i8* %1210, align 1
  store %struct.Memory* %loadMem_4160f2, %struct.Memory** %MEMORY
  %loadMem_4160f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1212 = getelementptr inbounds %struct.GPR, %struct.GPR* %1211, i32 0, i32 33
  %1213 = getelementptr inbounds %struct.Reg, %struct.Reg* %1212, i32 0, i32 0
  %PC.i1334 = bitcast %union.anon* %1213 to i64*
  %1214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1215 = getelementptr inbounds %struct.GPR, %struct.GPR* %1214, i32 0, i32 1
  %1216 = getelementptr inbounds %struct.Reg, %struct.Reg* %1215, i32 0, i32 0
  %EAX.i1335 = bitcast %union.anon* %1216 to i32*
  %1217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1218 = getelementptr inbounds %struct.GPR, %struct.GPR* %1217, i32 0, i32 5
  %1219 = getelementptr inbounds %struct.Reg, %struct.Reg* %1218, i32 0, i32 0
  %RCX.i1336 = bitcast %union.anon* %1219 to i64*
  %1220 = load i32, i32* %EAX.i1335
  %1221 = zext i32 %1220 to i64
  %1222 = load i64, i64* %PC.i1334
  %1223 = add i64 %1222, 3
  store i64 %1223, i64* %PC.i1334
  %1224 = shl i64 %1221, 32
  %1225 = ashr exact i64 %1224, 32
  store i64 %1225, i64* %RCX.i1336, align 8
  store %struct.Memory* %loadMem_4160f5, %struct.Memory** %MEMORY
  %loadMem_4160f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1227 = getelementptr inbounds %struct.GPR, %struct.GPR* %1226, i32 0, i32 33
  %1228 = getelementptr inbounds %struct.Reg, %struct.Reg* %1227, i32 0, i32 0
  %PC.i1331 = bitcast %union.anon* %1228 to i64*
  %1229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1230 = getelementptr inbounds %struct.GPR, %struct.GPR* %1229, i32 0, i32 1
  %1231 = getelementptr inbounds %struct.Reg, %struct.Reg* %1230, i32 0, i32 0
  %RAX.i1332 = bitcast %union.anon* %1231 to i64*
  %1232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1233 = getelementptr inbounds %struct.GPR, %struct.GPR* %1232, i32 0, i32 5
  %1234 = getelementptr inbounds %struct.Reg, %struct.Reg* %1233, i32 0, i32 0
  %RCX.i1333 = bitcast %union.anon* %1234 to i64*
  %1235 = load i64, i64* %RCX.i1333
  %1236 = add i64 %1235, 12099168
  %1237 = load i64, i64* %PC.i1331
  %1238 = add i64 %1237, 8
  store i64 %1238, i64* %PC.i1331
  %1239 = inttoptr i64 %1236 to i8*
  %1240 = load i8, i8* %1239
  %1241 = zext i8 %1240 to i64
  store i64 %1241, i64* %RAX.i1332, align 8
  store %struct.Memory* %loadMem_4160f8, %struct.Memory** %MEMORY
  %loadMem_416100 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1243 = getelementptr inbounds %struct.GPR, %struct.GPR* %1242, i32 0, i32 33
  %1244 = getelementptr inbounds %struct.Reg, %struct.Reg* %1243, i32 0, i32 0
  %PC.i1328 = bitcast %union.anon* %1244 to i64*
  %1245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1246 = getelementptr inbounds %struct.GPR, %struct.GPR* %1245, i32 0, i32 1
  %1247 = getelementptr inbounds %struct.Reg, %struct.Reg* %1246, i32 0, i32 0
  %EAX.i1329 = bitcast %union.anon* %1247 to i32*
  %1248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1249 = getelementptr inbounds %struct.GPR, %struct.GPR* %1248, i32 0, i32 15
  %1250 = getelementptr inbounds %struct.Reg, %struct.Reg* %1249, i32 0, i32 0
  %RBP.i1330 = bitcast %union.anon* %1250 to i64*
  %1251 = load i32, i32* %EAX.i1329
  %1252 = zext i32 %1251 to i64
  %1253 = load i64, i64* %RBP.i1330
  %1254 = sub i64 %1253, 24
  %1255 = load i64, i64* %PC.i1328
  %1256 = add i64 %1255, 3
  store i64 %1256, i64* %PC.i1328
  %1257 = inttoptr i64 %1254 to i32*
  %1258 = load i32, i32* %1257
  %1259 = sub i32 %1251, %1258
  %1260 = icmp ult i32 %1251, %1258
  %1261 = zext i1 %1260 to i8
  %1262 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1261, i8* %1262, align 1
  %1263 = and i32 %1259, 255
  %1264 = call i32 @llvm.ctpop.i32(i32 %1263)
  %1265 = trunc i32 %1264 to i8
  %1266 = and i8 %1265, 1
  %1267 = xor i8 %1266, 1
  %1268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1267, i8* %1268, align 1
  %1269 = xor i32 %1258, %1251
  %1270 = xor i32 %1269, %1259
  %1271 = lshr i32 %1270, 4
  %1272 = trunc i32 %1271 to i8
  %1273 = and i8 %1272, 1
  %1274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1273, i8* %1274, align 1
  %1275 = icmp eq i32 %1259, 0
  %1276 = zext i1 %1275 to i8
  %1277 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1276, i8* %1277, align 1
  %1278 = lshr i32 %1259, 31
  %1279 = trunc i32 %1278 to i8
  %1280 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1279, i8* %1280, align 1
  %1281 = lshr i32 %1251, 31
  %1282 = lshr i32 %1258, 31
  %1283 = xor i32 %1282, %1281
  %1284 = xor i32 %1278, %1281
  %1285 = add i32 %1284, %1283
  %1286 = icmp eq i32 %1285, 2
  %1287 = zext i1 %1286 to i8
  %1288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1287, i8* %1288, align 1
  store %struct.Memory* %loadMem_416100, %struct.Memory** %MEMORY
  %loadMem_416103 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1290 = getelementptr inbounds %struct.GPR, %struct.GPR* %1289, i32 0, i32 33
  %1291 = getelementptr inbounds %struct.Reg, %struct.Reg* %1290, i32 0, i32 0
  %PC.i1327 = bitcast %union.anon* %1291 to i64*
  %1292 = load i64, i64* %PC.i1327
  %1293 = add i64 %1292, 91
  %1294 = load i64, i64* %PC.i1327
  %1295 = add i64 %1294, 6
  %1296 = load i64, i64* %PC.i1327
  %1297 = add i64 %1296, 6
  store i64 %1297, i64* %PC.i1327
  %1298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1299 = load i8, i8* %1298, align 1
  %1300 = icmp eq i8 %1299, 0
  %1301 = zext i1 %1300 to i8
  store i8 %1301, i8* %BRANCH_TAKEN, align 1
  %1302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1303 = select i1 %1300, i64 %1293, i64 %1295
  store i64 %1303, i64* %1302, align 8
  store %struct.Memory* %loadMem_416103, %struct.Memory** %MEMORY
  %loadBr_416103 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416103 = icmp eq i8 %loadBr_416103, 1
  br i1 %cmpBr_416103, label %block_.L_41615e, label %block_416109

block_416109:                                     ; preds = %block_.L_4160ef
  %loadMem_416109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1305 = getelementptr inbounds %struct.GPR, %struct.GPR* %1304, i32 0, i32 33
  %1306 = getelementptr inbounds %struct.Reg, %struct.Reg* %1305, i32 0, i32 0
  %PC.i1325 = bitcast %union.anon* %1306 to i64*
  %1307 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1308 = getelementptr inbounds %struct.GPR, %struct.GPR* %1307, i32 0, i32 1
  %1309 = getelementptr inbounds %struct.Reg, %struct.Reg* %1308, i32 0, i32 0
  %RAX.i1326 = bitcast %union.anon* %1309 to i64*
  %1310 = load i64, i64* %PC.i1325
  %1311 = add i64 %1310, 10
  store i64 %1311, i64* %PC.i1325
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1326, align 8
  store %struct.Memory* %loadMem_416109, %struct.Memory** %MEMORY
  %loadMem_416113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1313 = getelementptr inbounds %struct.GPR, %struct.GPR* %1312, i32 0, i32 33
  %1314 = getelementptr inbounds %struct.Reg, %struct.Reg* %1313, i32 0, i32 0
  %PC.i1322 = bitcast %union.anon* %1314 to i64*
  %1315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1316 = getelementptr inbounds %struct.GPR, %struct.GPR* %1315, i32 0, i32 5
  %1317 = getelementptr inbounds %struct.Reg, %struct.Reg* %1316, i32 0, i32 0
  %RCX.i1323 = bitcast %union.anon* %1317 to i64*
  %1318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1319 = getelementptr inbounds %struct.GPR, %struct.GPR* %1318, i32 0, i32 15
  %1320 = getelementptr inbounds %struct.Reg, %struct.Reg* %1319, i32 0, i32 0
  %RBP.i1324 = bitcast %union.anon* %1320 to i64*
  %1321 = load i64, i64* %RBP.i1324
  %1322 = sub i64 %1321, 56
  %1323 = load i64, i64* %PC.i1322
  %1324 = add i64 %1323, 4
  store i64 %1324, i64* %PC.i1322
  %1325 = inttoptr i64 %1322 to i64*
  %1326 = load i64, i64* %1325
  store i64 %1326, i64* %RCX.i1323, align 8
  store %struct.Memory* %loadMem_416113, %struct.Memory** %MEMORY
  %loadMem_416117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1327 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1328 = getelementptr inbounds %struct.GPR, %struct.GPR* %1327, i32 0, i32 33
  %1329 = getelementptr inbounds %struct.Reg, %struct.Reg* %1328, i32 0, i32 0
  %PC.i1319 = bitcast %union.anon* %1329 to i64*
  %1330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1331 = getelementptr inbounds %struct.GPR, %struct.GPR* %1330, i32 0, i32 5
  %1332 = getelementptr inbounds %struct.Reg, %struct.Reg* %1331, i32 0, i32 0
  %RCX.i1320 = bitcast %union.anon* %1332 to i64*
  %1333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1334 = getelementptr inbounds %struct.GPR, %struct.GPR* %1333, i32 0, i32 7
  %1335 = getelementptr inbounds %struct.Reg, %struct.Reg* %1334, i32 0, i32 0
  %RDX.i1321 = bitcast %union.anon* %1335 to i64*
  %1336 = load i64, i64* %RCX.i1320
  %1337 = load i64, i64* %PC.i1319
  %1338 = add i64 %1337, 2
  store i64 %1338, i64* %PC.i1319
  %1339 = inttoptr i64 %1336 to i32*
  %1340 = load i32, i32* %1339
  %1341 = zext i32 %1340 to i64
  store i64 %1341, i64* %RDX.i1321, align 8
  store %struct.Memory* %loadMem_416117, %struct.Memory** %MEMORY
  %loadMem_416119 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1343 = getelementptr inbounds %struct.GPR, %struct.GPR* %1342, i32 0, i32 33
  %1344 = getelementptr inbounds %struct.Reg, %struct.Reg* %1343, i32 0, i32 0
  %PC.i1317 = bitcast %union.anon* %1344 to i64*
  %1345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1346 = getelementptr inbounds %struct.GPR, %struct.GPR* %1345, i32 0, i32 7
  %1347 = getelementptr inbounds %struct.Reg, %struct.Reg* %1346, i32 0, i32 0
  %RDX.i1318 = bitcast %union.anon* %1347 to i64*
  %1348 = load i64, i64* %RDX.i1318
  %1349 = load i64, i64* %PC.i1317
  %1350 = add i64 %1349, 3
  store i64 %1350, i64* %PC.i1317
  %1351 = trunc i64 %1348 to i32
  %1352 = add i32 1, %1351
  %1353 = zext i32 %1352 to i64
  store i64 %1353, i64* %RDX.i1318, align 8
  %1354 = icmp ult i32 %1352, %1351
  %1355 = icmp ult i32 %1352, 1
  %1356 = or i1 %1354, %1355
  %1357 = zext i1 %1356 to i8
  %1358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1357, i8* %1358, align 1
  %1359 = and i32 %1352, 255
  %1360 = call i32 @llvm.ctpop.i32(i32 %1359)
  %1361 = trunc i32 %1360 to i8
  %1362 = and i8 %1361, 1
  %1363 = xor i8 %1362, 1
  %1364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1363, i8* %1364, align 1
  %1365 = xor i64 1, %1348
  %1366 = trunc i64 %1365 to i32
  %1367 = xor i32 %1366, %1352
  %1368 = lshr i32 %1367, 4
  %1369 = trunc i32 %1368 to i8
  %1370 = and i8 %1369, 1
  %1371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1370, i8* %1371, align 1
  %1372 = icmp eq i32 %1352, 0
  %1373 = zext i1 %1372 to i8
  %1374 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1373, i8* %1374, align 1
  %1375 = lshr i32 %1352, 31
  %1376 = trunc i32 %1375 to i8
  %1377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1376, i8* %1377, align 1
  %1378 = lshr i32 %1351, 31
  %1379 = xor i32 %1375, %1378
  %1380 = add i32 %1379, %1375
  %1381 = icmp eq i32 %1380, 2
  %1382 = zext i1 %1381 to i8
  %1383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1382, i8* %1383, align 1
  store %struct.Memory* %loadMem_416119, %struct.Memory** %MEMORY
  %loadMem_41611c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1385 = getelementptr inbounds %struct.GPR, %struct.GPR* %1384, i32 0, i32 33
  %1386 = getelementptr inbounds %struct.Reg, %struct.Reg* %1385, i32 0, i32 0
  %PC.i1314 = bitcast %union.anon* %1386 to i64*
  %1387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1388 = getelementptr inbounds %struct.GPR, %struct.GPR* %1387, i32 0, i32 7
  %1389 = getelementptr inbounds %struct.Reg, %struct.Reg* %1388, i32 0, i32 0
  %EDX.i1315 = bitcast %union.anon* %1389 to i32*
  %1390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1391 = getelementptr inbounds %struct.GPR, %struct.GPR* %1390, i32 0, i32 5
  %1392 = getelementptr inbounds %struct.Reg, %struct.Reg* %1391, i32 0, i32 0
  %RCX.i1316 = bitcast %union.anon* %1392 to i64*
  %1393 = load i64, i64* %RCX.i1316
  %1394 = load i32, i32* %EDX.i1315
  %1395 = zext i32 %1394 to i64
  %1396 = load i64, i64* %PC.i1314
  %1397 = add i64 %1396, 2
  store i64 %1397, i64* %PC.i1314
  %1398 = inttoptr i64 %1393 to i32*
  store i32 %1394, i32* %1398
  store %struct.Memory* %loadMem_41611c, %struct.Memory** %MEMORY
  %loadMem_41611e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1400 = getelementptr inbounds %struct.GPR, %struct.GPR* %1399, i32 0, i32 33
  %1401 = getelementptr inbounds %struct.Reg, %struct.Reg* %1400, i32 0, i32 0
  %PC.i1311 = bitcast %union.anon* %1401 to i64*
  %1402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1403 = getelementptr inbounds %struct.GPR, %struct.GPR* %1402, i32 0, i32 5
  %1404 = getelementptr inbounds %struct.Reg, %struct.Reg* %1403, i32 0, i32 0
  %RCX.i1312 = bitcast %union.anon* %1404 to i64*
  %1405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1406 = getelementptr inbounds %struct.GPR, %struct.GPR* %1405, i32 0, i32 15
  %1407 = getelementptr inbounds %struct.Reg, %struct.Reg* %1406, i32 0, i32 0
  %RBP.i1313 = bitcast %union.anon* %1407 to i64*
  %1408 = load i64, i64* %RBP.i1313
  %1409 = sub i64 %1408, 100
  %1410 = load i64, i64* %PC.i1311
  %1411 = add i64 %1410, 4
  store i64 %1411, i64* %PC.i1311
  %1412 = inttoptr i64 %1409 to i32*
  %1413 = load i32, i32* %1412
  %1414 = sext i32 %1413 to i64
  store i64 %1414, i64* %RCX.i1312, align 8
  store %struct.Memory* %loadMem_41611e, %struct.Memory** %MEMORY
  %loadMem_416122 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1416 = getelementptr inbounds %struct.GPR, %struct.GPR* %1415, i32 0, i32 33
  %1417 = getelementptr inbounds %struct.Reg, %struct.Reg* %1416, i32 0, i32 0
  %PC.i1309 = bitcast %union.anon* %1417 to i64*
  %1418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1419 = getelementptr inbounds %struct.GPR, %struct.GPR* %1418, i32 0, i32 5
  %1420 = getelementptr inbounds %struct.Reg, %struct.Reg* %1419, i32 0, i32 0
  %RCX.i1310 = bitcast %union.anon* %1420 to i64*
  %1421 = load i64, i64* %RCX.i1310
  %1422 = load i64, i64* %PC.i1309
  %1423 = add i64 %1422, 7
  store i64 %1423, i64* %PC.i1309
  %1424 = sext i64 %1421 to i128
  %1425 = and i128 %1424, -18446744073709551616
  %1426 = zext i64 %1421 to i128
  %1427 = or i128 %1425, %1426
  %1428 = mul i128 744, %1427
  %1429 = trunc i128 %1428 to i64
  store i64 %1429, i64* %RCX.i1310, align 8
  %1430 = sext i64 %1429 to i128
  %1431 = icmp ne i128 %1430, %1428
  %1432 = zext i1 %1431 to i8
  %1433 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1432, i8* %1433, align 1
  %1434 = trunc i128 %1428 to i32
  %1435 = and i32 %1434, 255
  %1436 = call i32 @llvm.ctpop.i32(i32 %1435)
  %1437 = trunc i32 %1436 to i8
  %1438 = and i8 %1437, 1
  %1439 = xor i8 %1438, 1
  %1440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1439, i8* %1440, align 1
  %1441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1441, align 1
  %1442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1442, align 1
  %1443 = lshr i64 %1429, 63
  %1444 = trunc i64 %1443 to i8
  %1445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1444, i8* %1445, align 1
  %1446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1432, i8* %1446, align 1
  store %struct.Memory* %loadMem_416122, %struct.Memory** %MEMORY
  %loadMem_416129 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1448 = getelementptr inbounds %struct.GPR, %struct.GPR* %1447, i32 0, i32 33
  %1449 = getelementptr inbounds %struct.Reg, %struct.Reg* %1448, i32 0, i32 0
  %PC.i1306 = bitcast %union.anon* %1449 to i64*
  %1450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1451 = getelementptr inbounds %struct.GPR, %struct.GPR* %1450, i32 0, i32 1
  %1452 = getelementptr inbounds %struct.Reg, %struct.Reg* %1451, i32 0, i32 0
  %RAX.i1307 = bitcast %union.anon* %1452 to i64*
  %1453 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1454 = getelementptr inbounds %struct.GPR, %struct.GPR* %1453, i32 0, i32 5
  %1455 = getelementptr inbounds %struct.Reg, %struct.Reg* %1454, i32 0, i32 0
  %RCX.i1308 = bitcast %union.anon* %1455 to i64*
  %1456 = load i64, i64* %RAX.i1307
  %1457 = load i64, i64* %RCX.i1308
  %1458 = load i64, i64* %PC.i1306
  %1459 = add i64 %1458, 3
  store i64 %1459, i64* %PC.i1306
  %1460 = add i64 %1457, %1456
  store i64 %1460, i64* %RAX.i1307, align 8
  %1461 = icmp ult i64 %1460, %1456
  %1462 = icmp ult i64 %1460, %1457
  %1463 = or i1 %1461, %1462
  %1464 = zext i1 %1463 to i8
  %1465 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1464, i8* %1465, align 1
  %1466 = trunc i64 %1460 to i32
  %1467 = and i32 %1466, 255
  %1468 = call i32 @llvm.ctpop.i32(i32 %1467)
  %1469 = trunc i32 %1468 to i8
  %1470 = and i8 %1469, 1
  %1471 = xor i8 %1470, 1
  %1472 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1471, i8* %1472, align 1
  %1473 = xor i64 %1457, %1456
  %1474 = xor i64 %1473, %1460
  %1475 = lshr i64 %1474, 4
  %1476 = trunc i64 %1475 to i8
  %1477 = and i8 %1476, 1
  %1478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1477, i8* %1478, align 1
  %1479 = icmp eq i64 %1460, 0
  %1480 = zext i1 %1479 to i8
  %1481 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1480, i8* %1481, align 1
  %1482 = lshr i64 %1460, 63
  %1483 = trunc i64 %1482 to i8
  %1484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1483, i8* %1484, align 1
  %1485 = lshr i64 %1456, 63
  %1486 = lshr i64 %1457, 63
  %1487 = xor i64 %1482, %1485
  %1488 = xor i64 %1482, %1486
  %1489 = add i64 %1487, %1488
  %1490 = icmp eq i64 %1489, 2
  %1491 = zext i1 %1490 to i8
  %1492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1491, i8* %1492, align 1
  store %struct.Memory* %loadMem_416129, %struct.Memory** %MEMORY
  %loadMem_41612c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1494 = getelementptr inbounds %struct.GPR, %struct.GPR* %1493, i32 0, i32 33
  %1495 = getelementptr inbounds %struct.Reg, %struct.Reg* %1494, i32 0, i32 0
  %PC.i1304 = bitcast %union.anon* %1495 to i64*
  %1496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1497 = getelementptr inbounds %struct.GPR, %struct.GPR* %1496, i32 0, i32 1
  %1498 = getelementptr inbounds %struct.Reg, %struct.Reg* %1497, i32 0, i32 0
  %RAX.i1305 = bitcast %union.anon* %1498 to i64*
  %1499 = load i64, i64* %RAX.i1305
  %1500 = add i64 %1499, 12
  %1501 = load i64, i64* %PC.i1304
  %1502 = add i64 %1501, 4
  store i64 %1502, i64* %PC.i1304
  %1503 = inttoptr i64 %1500 to i32*
  %1504 = load i32, i32* %1503
  %1505 = sub i32 %1504, 1
  %1506 = icmp ult i32 %1504, 1
  %1507 = zext i1 %1506 to i8
  %1508 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1507, i8* %1508, align 1
  %1509 = and i32 %1505, 255
  %1510 = call i32 @llvm.ctpop.i32(i32 %1509)
  %1511 = trunc i32 %1510 to i8
  %1512 = and i8 %1511, 1
  %1513 = xor i8 %1512, 1
  %1514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1513, i8* %1514, align 1
  %1515 = xor i32 %1504, 1
  %1516 = xor i32 %1515, %1505
  %1517 = lshr i32 %1516, 4
  %1518 = trunc i32 %1517 to i8
  %1519 = and i8 %1518, 1
  %1520 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1519, i8* %1520, align 1
  %1521 = icmp eq i32 %1505, 0
  %1522 = zext i1 %1521 to i8
  %1523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1522, i8* %1523, align 1
  %1524 = lshr i32 %1505, 31
  %1525 = trunc i32 %1524 to i8
  %1526 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1525, i8* %1526, align 1
  %1527 = lshr i32 %1504, 31
  %1528 = xor i32 %1524, %1527
  %1529 = add i32 %1528, %1527
  %1530 = icmp eq i32 %1529, 2
  %1531 = zext i1 %1530 to i8
  %1532 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1531, i8* %1532, align 1
  store %struct.Memory* %loadMem_41612c, %struct.Memory** %MEMORY
  %loadMem_416130 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1534 = getelementptr inbounds %struct.GPR, %struct.GPR* %1533, i32 0, i32 33
  %1535 = getelementptr inbounds %struct.Reg, %struct.Reg* %1534, i32 0, i32 0
  %PC.i1303 = bitcast %union.anon* %1535 to i64*
  %1536 = load i64, i64* %PC.i1303
  %1537 = add i64 %1536, 41
  %1538 = load i64, i64* %PC.i1303
  %1539 = add i64 %1538, 6
  %1540 = load i64, i64* %PC.i1303
  %1541 = add i64 %1540, 6
  store i64 %1541, i64* %PC.i1303
  %1542 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1543 = load i8, i8* %1542, align 1
  %1544 = icmp eq i8 %1543, 0
  %1545 = zext i1 %1544 to i8
  store i8 %1545, i8* %BRANCH_TAKEN, align 1
  %1546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1547 = select i1 %1544, i64 %1537, i64 %1539
  store i64 %1547, i64* %1546, align 8
  store %struct.Memory* %loadMem_416130, %struct.Memory** %MEMORY
  %loadBr_416130 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416130 = icmp eq i8 %loadBr_416130, 1
  br i1 %cmpBr_416130, label %block_.L_416159, label %block_416136

block_416136:                                     ; preds = %block_416109
  %loadMem_416136 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1549 = getelementptr inbounds %struct.GPR, %struct.GPR* %1548, i32 0, i32 33
  %1550 = getelementptr inbounds %struct.Reg, %struct.Reg* %1549, i32 0, i32 0
  %PC.i1301 = bitcast %union.anon* %1550 to i64*
  %1551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1552 = getelementptr inbounds %struct.GPR, %struct.GPR* %1551, i32 0, i32 1
  %1553 = getelementptr inbounds %struct.Reg, %struct.Reg* %1552, i32 0, i32 0
  %RAX.i1302 = bitcast %union.anon* %1553 to i64*
  %1554 = load i64, i64* %PC.i1301
  %1555 = add i64 %1554, 10
  store i64 %1555, i64* %PC.i1301
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1302, align 8
  store %struct.Memory* %loadMem_416136, %struct.Memory** %MEMORY
  %loadMem_416140 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1557 = getelementptr inbounds %struct.GPR, %struct.GPR* %1556, i32 0, i32 33
  %1558 = getelementptr inbounds %struct.Reg, %struct.Reg* %1557, i32 0, i32 0
  %PC.i1298 = bitcast %union.anon* %1558 to i64*
  %1559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1560 = getelementptr inbounds %struct.GPR, %struct.GPR* %1559, i32 0, i32 5
  %1561 = getelementptr inbounds %struct.Reg, %struct.Reg* %1560, i32 0, i32 0
  %RCX.i1299 = bitcast %union.anon* %1561 to i64*
  %1562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1563 = getelementptr inbounds %struct.GPR, %struct.GPR* %1562, i32 0, i32 15
  %1564 = getelementptr inbounds %struct.Reg, %struct.Reg* %1563, i32 0, i32 0
  %RBP.i1300 = bitcast %union.anon* %1564 to i64*
  %1565 = load i64, i64* %RBP.i1300
  %1566 = sub i64 %1565, 100
  %1567 = load i64, i64* %PC.i1298
  %1568 = add i64 %1567, 4
  store i64 %1568, i64* %PC.i1298
  %1569 = inttoptr i64 %1566 to i32*
  %1570 = load i32, i32* %1569
  %1571 = sext i32 %1570 to i64
  store i64 %1571, i64* %RCX.i1299, align 8
  store %struct.Memory* %loadMem_416140, %struct.Memory** %MEMORY
  %loadMem_416144 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1573 = getelementptr inbounds %struct.GPR, %struct.GPR* %1572, i32 0, i32 33
  %1574 = getelementptr inbounds %struct.Reg, %struct.Reg* %1573, i32 0, i32 0
  %PC.i1296 = bitcast %union.anon* %1574 to i64*
  %1575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1576 = getelementptr inbounds %struct.GPR, %struct.GPR* %1575, i32 0, i32 5
  %1577 = getelementptr inbounds %struct.Reg, %struct.Reg* %1576, i32 0, i32 0
  %RCX.i1297 = bitcast %union.anon* %1577 to i64*
  %1578 = load i64, i64* %RCX.i1297
  %1579 = load i64, i64* %PC.i1296
  %1580 = add i64 %1579, 7
  store i64 %1580, i64* %PC.i1296
  %1581 = sext i64 %1578 to i128
  %1582 = and i128 %1581, -18446744073709551616
  %1583 = zext i64 %1578 to i128
  %1584 = or i128 %1582, %1583
  %1585 = mul i128 744, %1584
  %1586 = trunc i128 %1585 to i64
  store i64 %1586, i64* %RCX.i1297, align 8
  %1587 = sext i64 %1586 to i128
  %1588 = icmp ne i128 %1587, %1585
  %1589 = zext i1 %1588 to i8
  %1590 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1589, i8* %1590, align 1
  %1591 = trunc i128 %1585 to i32
  %1592 = and i32 %1591, 255
  %1593 = call i32 @llvm.ctpop.i32(i32 %1592)
  %1594 = trunc i32 %1593 to i8
  %1595 = and i8 %1594, 1
  %1596 = xor i8 %1595, 1
  %1597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1596, i8* %1597, align 1
  %1598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1598, align 1
  %1599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1599, align 1
  %1600 = lshr i64 %1586, 63
  %1601 = trunc i64 %1600 to i8
  %1602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1601, i8* %1602, align 1
  %1603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1589, i8* %1603, align 1
  store %struct.Memory* %loadMem_416144, %struct.Memory** %MEMORY
  %loadMem_41614b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1605 = getelementptr inbounds %struct.GPR, %struct.GPR* %1604, i32 0, i32 33
  %1606 = getelementptr inbounds %struct.Reg, %struct.Reg* %1605, i32 0, i32 0
  %PC.i1293 = bitcast %union.anon* %1606 to i64*
  %1607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1608 = getelementptr inbounds %struct.GPR, %struct.GPR* %1607, i32 0, i32 1
  %1609 = getelementptr inbounds %struct.Reg, %struct.Reg* %1608, i32 0, i32 0
  %RAX.i1294 = bitcast %union.anon* %1609 to i64*
  %1610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1611 = getelementptr inbounds %struct.GPR, %struct.GPR* %1610, i32 0, i32 5
  %1612 = getelementptr inbounds %struct.Reg, %struct.Reg* %1611, i32 0, i32 0
  %RCX.i1295 = bitcast %union.anon* %1612 to i64*
  %1613 = load i64, i64* %RAX.i1294
  %1614 = load i64, i64* %RCX.i1295
  %1615 = load i64, i64* %PC.i1293
  %1616 = add i64 %1615, 3
  store i64 %1616, i64* %PC.i1293
  %1617 = add i64 %1614, %1613
  store i64 %1617, i64* %RAX.i1294, align 8
  %1618 = icmp ult i64 %1617, %1613
  %1619 = icmp ult i64 %1617, %1614
  %1620 = or i1 %1618, %1619
  %1621 = zext i1 %1620 to i8
  %1622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1621, i8* %1622, align 1
  %1623 = trunc i64 %1617 to i32
  %1624 = and i32 %1623, 255
  %1625 = call i32 @llvm.ctpop.i32(i32 %1624)
  %1626 = trunc i32 %1625 to i8
  %1627 = and i8 %1626, 1
  %1628 = xor i8 %1627, 1
  %1629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1628, i8* %1629, align 1
  %1630 = xor i64 %1614, %1613
  %1631 = xor i64 %1630, %1617
  %1632 = lshr i64 %1631, 4
  %1633 = trunc i64 %1632 to i8
  %1634 = and i8 %1633, 1
  %1635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1634, i8* %1635, align 1
  %1636 = icmp eq i64 %1617, 0
  %1637 = zext i1 %1636 to i8
  %1638 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1637, i8* %1638, align 1
  %1639 = lshr i64 %1617, 63
  %1640 = trunc i64 %1639 to i8
  %1641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1640, i8* %1641, align 1
  %1642 = lshr i64 %1613, 63
  %1643 = lshr i64 %1614, 63
  %1644 = xor i64 %1639, %1642
  %1645 = xor i64 %1639, %1643
  %1646 = add i64 %1644, %1645
  %1647 = icmp eq i64 %1646, 2
  %1648 = zext i1 %1647 to i8
  %1649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1648, i8* %1649, align 1
  store %struct.Memory* %loadMem_41614b, %struct.Memory** %MEMORY
  %loadMem_41614e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1651 = getelementptr inbounds %struct.GPR, %struct.GPR* %1650, i32 0, i32 33
  %1652 = getelementptr inbounds %struct.Reg, %struct.Reg* %1651, i32 0, i32 0
  %PC.i1290 = bitcast %union.anon* %1652 to i64*
  %1653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1654 = getelementptr inbounds %struct.GPR, %struct.GPR* %1653, i32 0, i32 1
  %1655 = getelementptr inbounds %struct.Reg, %struct.Reg* %1654, i32 0, i32 0
  %RAX.i1291 = bitcast %union.anon* %1655 to i64*
  %1656 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1657 = getelementptr inbounds %struct.GPR, %struct.GPR* %1656, i32 0, i32 7
  %1658 = getelementptr inbounds %struct.Reg, %struct.Reg* %1657, i32 0, i32 0
  %RDX.i1292 = bitcast %union.anon* %1658 to i64*
  %1659 = load i64, i64* %RAX.i1291
  %1660 = add i64 %1659, 4
  %1661 = load i64, i64* %PC.i1290
  %1662 = add i64 %1661, 3
  store i64 %1662, i64* %PC.i1290
  %1663 = inttoptr i64 %1660 to i32*
  %1664 = load i32, i32* %1663
  %1665 = zext i32 %1664 to i64
  store i64 %1665, i64* %RDX.i1292, align 8
  store %struct.Memory* %loadMem_41614e, %struct.Memory** %MEMORY
  %loadMem_416151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1667 = getelementptr inbounds %struct.GPR, %struct.GPR* %1666, i32 0, i32 33
  %1668 = getelementptr inbounds %struct.Reg, %struct.Reg* %1667, i32 0, i32 0
  %PC.i1287 = bitcast %union.anon* %1668 to i64*
  %1669 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1670 = getelementptr inbounds %struct.GPR, %struct.GPR* %1669, i32 0, i32 1
  %1671 = getelementptr inbounds %struct.Reg, %struct.Reg* %1670, i32 0, i32 0
  %RAX.i1288 = bitcast %union.anon* %1671 to i64*
  %1672 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1673 = getelementptr inbounds %struct.GPR, %struct.GPR* %1672, i32 0, i32 15
  %1674 = getelementptr inbounds %struct.Reg, %struct.Reg* %1673, i32 0, i32 0
  %RBP.i1289 = bitcast %union.anon* %1674 to i64*
  %1675 = load i64, i64* %RBP.i1289
  %1676 = sub i64 %1675, 88
  %1677 = load i64, i64* %PC.i1287
  %1678 = add i64 %1677, 4
  store i64 %1678, i64* %PC.i1287
  %1679 = inttoptr i64 %1676 to i64*
  %1680 = load i64, i64* %1679
  store i64 %1680, i64* %RAX.i1288, align 8
  store %struct.Memory* %loadMem_416151, %struct.Memory** %MEMORY
  %loadMem_416155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1682 = getelementptr inbounds %struct.GPR, %struct.GPR* %1681, i32 0, i32 33
  %1683 = getelementptr inbounds %struct.Reg, %struct.Reg* %1682, i32 0, i32 0
  %PC.i1284 = bitcast %union.anon* %1683 to i64*
  %1684 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1685 = getelementptr inbounds %struct.GPR, %struct.GPR* %1684, i32 0, i32 1
  %1686 = getelementptr inbounds %struct.Reg, %struct.Reg* %1685, i32 0, i32 0
  %RAX.i1285 = bitcast %union.anon* %1686 to i64*
  %1687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1688 = getelementptr inbounds %struct.GPR, %struct.GPR* %1687, i32 0, i32 7
  %1689 = getelementptr inbounds %struct.Reg, %struct.Reg* %1688, i32 0, i32 0
  %RDX.i1286 = bitcast %union.anon* %1689 to i64*
  %1690 = load i64, i64* %RDX.i1286
  %1691 = load i64, i64* %RAX.i1285
  %1692 = load i64, i64* %PC.i1284
  %1693 = add i64 %1692, 2
  store i64 %1693, i64* %PC.i1284
  %1694 = trunc i64 %1690 to i32
  %1695 = inttoptr i64 %1691 to i32*
  %1696 = load i32, i32* %1695
  %1697 = add i32 %1696, %1694
  %1698 = zext i32 %1697 to i64
  store i64 %1698, i64* %RDX.i1286, align 8
  %1699 = icmp ult i32 %1697, %1694
  %1700 = icmp ult i32 %1697, %1696
  %1701 = or i1 %1699, %1700
  %1702 = zext i1 %1701 to i8
  %1703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1702, i8* %1703, align 1
  %1704 = and i32 %1697, 255
  %1705 = call i32 @llvm.ctpop.i32(i32 %1704)
  %1706 = trunc i32 %1705 to i8
  %1707 = and i8 %1706, 1
  %1708 = xor i8 %1707, 1
  %1709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1708, i8* %1709, align 1
  %1710 = xor i32 %1696, %1694
  %1711 = xor i32 %1710, %1697
  %1712 = lshr i32 %1711, 4
  %1713 = trunc i32 %1712 to i8
  %1714 = and i8 %1713, 1
  %1715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1714, i8* %1715, align 1
  %1716 = icmp eq i32 %1697, 0
  %1717 = zext i1 %1716 to i8
  %1718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1717, i8* %1718, align 1
  %1719 = lshr i32 %1697, 31
  %1720 = trunc i32 %1719 to i8
  %1721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1720, i8* %1721, align 1
  %1722 = lshr i32 %1694, 31
  %1723 = lshr i32 %1696, 31
  %1724 = xor i32 %1719, %1722
  %1725 = xor i32 %1719, %1723
  %1726 = add i32 %1724, %1725
  %1727 = icmp eq i32 %1726, 2
  %1728 = zext i1 %1727 to i8
  %1729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1728, i8* %1729, align 1
  store %struct.Memory* %loadMem_416155, %struct.Memory** %MEMORY
  %loadMem_416157 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1731 = getelementptr inbounds %struct.GPR, %struct.GPR* %1730, i32 0, i32 33
  %1732 = getelementptr inbounds %struct.Reg, %struct.Reg* %1731, i32 0, i32 0
  %PC.i1281 = bitcast %union.anon* %1732 to i64*
  %1733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1734 = getelementptr inbounds %struct.GPR, %struct.GPR* %1733, i32 0, i32 7
  %1735 = getelementptr inbounds %struct.Reg, %struct.Reg* %1734, i32 0, i32 0
  %EDX.i1282 = bitcast %union.anon* %1735 to i32*
  %1736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1737 = getelementptr inbounds %struct.GPR, %struct.GPR* %1736, i32 0, i32 1
  %1738 = getelementptr inbounds %struct.Reg, %struct.Reg* %1737, i32 0, i32 0
  %RAX.i1283 = bitcast %union.anon* %1738 to i64*
  %1739 = load i64, i64* %RAX.i1283
  %1740 = load i32, i32* %EDX.i1282
  %1741 = zext i32 %1740 to i64
  %1742 = load i64, i64* %PC.i1281
  %1743 = add i64 %1742, 2
  store i64 %1743, i64* %PC.i1281
  %1744 = inttoptr i64 %1739 to i32*
  store i32 %1740, i32* %1744
  store %struct.Memory* %loadMem_416157, %struct.Memory** %MEMORY
  br label %block_.L_416159

block_.L_416159:                                  ; preds = %block_416136, %block_416109
  %loadMem_416159 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1746 = getelementptr inbounds %struct.GPR, %struct.GPR* %1745, i32 0, i32 33
  %1747 = getelementptr inbounds %struct.Reg, %struct.Reg* %1746, i32 0, i32 0
  %PC.i1280 = bitcast %union.anon* %1747 to i64*
  %1748 = load i64, i64* %PC.i1280
  %1749 = add i64 %1748, 409
  %1750 = load i64, i64* %PC.i1280
  %1751 = add i64 %1750, 5
  store i64 %1751, i64* %PC.i1280
  %1752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1749, i64* %1752, align 8
  store %struct.Memory* %loadMem_416159, %struct.Memory** %MEMORY
  br label %block_.L_4162f2

block_.L_41615e:                                  ; preds = %block_.L_4160ef
  %loadMem_41615e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1754 = getelementptr inbounds %struct.GPR, %struct.GPR* %1753, i32 0, i32 33
  %1755 = getelementptr inbounds %struct.Reg, %struct.Reg* %1754, i32 0, i32 0
  %PC.i1278 = bitcast %union.anon* %1755 to i64*
  %1756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1757 = getelementptr inbounds %struct.GPR, %struct.GPR* %1756, i32 0, i32 1
  %1758 = getelementptr inbounds %struct.Reg, %struct.Reg* %1757, i32 0, i32 0
  %RAX.i1279 = bitcast %union.anon* %1758 to i64*
  %1759 = load i64, i64* %PC.i1278
  %1760 = add i64 %1759, 10
  store i64 %1760, i64* %PC.i1278
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1279, align 8
  store %struct.Memory* %loadMem_41615e, %struct.Memory** %MEMORY
  %loadMem_416168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1762 = getelementptr inbounds %struct.GPR, %struct.GPR* %1761, i32 0, i32 33
  %1763 = getelementptr inbounds %struct.Reg, %struct.Reg* %1762, i32 0, i32 0
  %PC.i1275 = bitcast %union.anon* %1763 to i64*
  %1764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1765 = getelementptr inbounds %struct.GPR, %struct.GPR* %1764, i32 0, i32 5
  %1766 = getelementptr inbounds %struct.Reg, %struct.Reg* %1765, i32 0, i32 0
  %RCX.i1276 = bitcast %union.anon* %1766 to i64*
  %1767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1768 = getelementptr inbounds %struct.GPR, %struct.GPR* %1767, i32 0, i32 15
  %1769 = getelementptr inbounds %struct.Reg, %struct.Reg* %1768, i32 0, i32 0
  %RBP.i1277 = bitcast %union.anon* %1769 to i64*
  %1770 = load i64, i64* %RBP.i1277
  %1771 = sub i64 %1770, 64
  %1772 = load i64, i64* %PC.i1275
  %1773 = add i64 %1772, 4
  store i64 %1773, i64* %PC.i1275
  %1774 = inttoptr i64 %1771 to i64*
  %1775 = load i64, i64* %1774
  store i64 %1775, i64* %RCX.i1276, align 8
  store %struct.Memory* %loadMem_416168, %struct.Memory** %MEMORY
  %loadMem_41616c = load %struct.Memory*, %struct.Memory** %MEMORY
  %1776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1777 = getelementptr inbounds %struct.GPR, %struct.GPR* %1776, i32 0, i32 33
  %1778 = getelementptr inbounds %struct.Reg, %struct.Reg* %1777, i32 0, i32 0
  %PC.i1272 = bitcast %union.anon* %1778 to i64*
  %1779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1780 = getelementptr inbounds %struct.GPR, %struct.GPR* %1779, i32 0, i32 5
  %1781 = getelementptr inbounds %struct.Reg, %struct.Reg* %1780, i32 0, i32 0
  %RCX.i1273 = bitcast %union.anon* %1781 to i64*
  %1782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1783 = getelementptr inbounds %struct.GPR, %struct.GPR* %1782, i32 0, i32 7
  %1784 = getelementptr inbounds %struct.Reg, %struct.Reg* %1783, i32 0, i32 0
  %RDX.i1274 = bitcast %union.anon* %1784 to i64*
  %1785 = load i64, i64* %RCX.i1273
  %1786 = load i64, i64* %PC.i1272
  %1787 = add i64 %1786, 2
  store i64 %1787, i64* %PC.i1272
  %1788 = inttoptr i64 %1785 to i32*
  %1789 = load i32, i32* %1788
  %1790 = zext i32 %1789 to i64
  store i64 %1790, i64* %RDX.i1274, align 8
  store %struct.Memory* %loadMem_41616c, %struct.Memory** %MEMORY
  %loadMem_41616e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1792 = getelementptr inbounds %struct.GPR, %struct.GPR* %1791, i32 0, i32 33
  %1793 = getelementptr inbounds %struct.Reg, %struct.Reg* %1792, i32 0, i32 0
  %PC.i1270 = bitcast %union.anon* %1793 to i64*
  %1794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1795 = getelementptr inbounds %struct.GPR, %struct.GPR* %1794, i32 0, i32 7
  %1796 = getelementptr inbounds %struct.Reg, %struct.Reg* %1795, i32 0, i32 0
  %RDX.i1271 = bitcast %union.anon* %1796 to i64*
  %1797 = load i64, i64* %RDX.i1271
  %1798 = load i64, i64* %PC.i1270
  %1799 = add i64 %1798, 3
  store i64 %1799, i64* %PC.i1270
  %1800 = trunc i64 %1797 to i32
  %1801 = add i32 1, %1800
  %1802 = zext i32 %1801 to i64
  store i64 %1802, i64* %RDX.i1271, align 8
  %1803 = icmp ult i32 %1801, %1800
  %1804 = icmp ult i32 %1801, 1
  %1805 = or i1 %1803, %1804
  %1806 = zext i1 %1805 to i8
  %1807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1806, i8* %1807, align 1
  %1808 = and i32 %1801, 255
  %1809 = call i32 @llvm.ctpop.i32(i32 %1808)
  %1810 = trunc i32 %1809 to i8
  %1811 = and i8 %1810, 1
  %1812 = xor i8 %1811, 1
  %1813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1812, i8* %1813, align 1
  %1814 = xor i64 1, %1797
  %1815 = trunc i64 %1814 to i32
  %1816 = xor i32 %1815, %1801
  %1817 = lshr i32 %1816, 4
  %1818 = trunc i32 %1817 to i8
  %1819 = and i8 %1818, 1
  %1820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1819, i8* %1820, align 1
  %1821 = icmp eq i32 %1801, 0
  %1822 = zext i1 %1821 to i8
  %1823 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1822, i8* %1823, align 1
  %1824 = lshr i32 %1801, 31
  %1825 = trunc i32 %1824 to i8
  %1826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1825, i8* %1826, align 1
  %1827 = lshr i32 %1800, 31
  %1828 = xor i32 %1824, %1827
  %1829 = add i32 %1828, %1824
  %1830 = icmp eq i32 %1829, 2
  %1831 = zext i1 %1830 to i8
  %1832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1831, i8* %1832, align 1
  store %struct.Memory* %loadMem_41616e, %struct.Memory** %MEMORY
  %loadMem_416171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1834 = getelementptr inbounds %struct.GPR, %struct.GPR* %1833, i32 0, i32 33
  %1835 = getelementptr inbounds %struct.Reg, %struct.Reg* %1834, i32 0, i32 0
  %PC.i1267 = bitcast %union.anon* %1835 to i64*
  %1836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1837 = getelementptr inbounds %struct.GPR, %struct.GPR* %1836, i32 0, i32 7
  %1838 = getelementptr inbounds %struct.Reg, %struct.Reg* %1837, i32 0, i32 0
  %EDX.i1268 = bitcast %union.anon* %1838 to i32*
  %1839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1840 = getelementptr inbounds %struct.GPR, %struct.GPR* %1839, i32 0, i32 5
  %1841 = getelementptr inbounds %struct.Reg, %struct.Reg* %1840, i32 0, i32 0
  %RCX.i1269 = bitcast %union.anon* %1841 to i64*
  %1842 = load i64, i64* %RCX.i1269
  %1843 = load i32, i32* %EDX.i1268
  %1844 = zext i32 %1843 to i64
  %1845 = load i64, i64* %PC.i1267
  %1846 = add i64 %1845, 2
  store i64 %1846, i64* %PC.i1267
  %1847 = inttoptr i64 %1842 to i32*
  store i32 %1843, i32* %1847
  store %struct.Memory* %loadMem_416171, %struct.Memory** %MEMORY
  %loadMem_416173 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1848 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1849 = getelementptr inbounds %struct.GPR, %struct.GPR* %1848, i32 0, i32 33
  %1850 = getelementptr inbounds %struct.Reg, %struct.Reg* %1849, i32 0, i32 0
  %PC.i1264 = bitcast %union.anon* %1850 to i64*
  %1851 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1852 = getelementptr inbounds %struct.GPR, %struct.GPR* %1851, i32 0, i32 5
  %1853 = getelementptr inbounds %struct.Reg, %struct.Reg* %1852, i32 0, i32 0
  %RCX.i1265 = bitcast %union.anon* %1853 to i64*
  %1854 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1855 = getelementptr inbounds %struct.GPR, %struct.GPR* %1854, i32 0, i32 15
  %1856 = getelementptr inbounds %struct.Reg, %struct.Reg* %1855, i32 0, i32 0
  %RBP.i1266 = bitcast %union.anon* %1856 to i64*
  %1857 = load i64, i64* %RBP.i1266
  %1858 = sub i64 %1857, 100
  %1859 = load i64, i64* %PC.i1264
  %1860 = add i64 %1859, 4
  store i64 %1860, i64* %PC.i1264
  %1861 = inttoptr i64 %1858 to i32*
  %1862 = load i32, i32* %1861
  %1863 = sext i32 %1862 to i64
  store i64 %1863, i64* %RCX.i1265, align 8
  store %struct.Memory* %loadMem_416173, %struct.Memory** %MEMORY
  %loadMem_416177 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1865 = getelementptr inbounds %struct.GPR, %struct.GPR* %1864, i32 0, i32 33
  %1866 = getelementptr inbounds %struct.Reg, %struct.Reg* %1865, i32 0, i32 0
  %PC.i1262 = bitcast %union.anon* %1866 to i64*
  %1867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1868 = getelementptr inbounds %struct.GPR, %struct.GPR* %1867, i32 0, i32 5
  %1869 = getelementptr inbounds %struct.Reg, %struct.Reg* %1868, i32 0, i32 0
  %RCX.i1263 = bitcast %union.anon* %1869 to i64*
  %1870 = load i64, i64* %RCX.i1263
  %1871 = load i64, i64* %PC.i1262
  %1872 = add i64 %1871, 7
  store i64 %1872, i64* %PC.i1262
  %1873 = sext i64 %1870 to i128
  %1874 = and i128 %1873, -18446744073709551616
  %1875 = zext i64 %1870 to i128
  %1876 = or i128 %1874, %1875
  %1877 = mul i128 744, %1876
  %1878 = trunc i128 %1877 to i64
  store i64 %1878, i64* %RCX.i1263, align 8
  %1879 = sext i64 %1878 to i128
  %1880 = icmp ne i128 %1879, %1877
  %1881 = zext i1 %1880 to i8
  %1882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1881, i8* %1882, align 1
  %1883 = trunc i128 %1877 to i32
  %1884 = and i32 %1883, 255
  %1885 = call i32 @llvm.ctpop.i32(i32 %1884)
  %1886 = trunc i32 %1885 to i8
  %1887 = and i8 %1886, 1
  %1888 = xor i8 %1887, 1
  %1889 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1888, i8* %1889, align 1
  %1890 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %1890, align 1
  %1891 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %1891, align 1
  %1892 = lshr i64 %1878, 63
  %1893 = trunc i64 %1892 to i8
  %1894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1893, i8* %1894, align 1
  %1895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1881, i8* %1895, align 1
  store %struct.Memory* %loadMem_416177, %struct.Memory** %MEMORY
  %loadMem_41617e = load %struct.Memory*, %struct.Memory** %MEMORY
  %1896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1897 = getelementptr inbounds %struct.GPR, %struct.GPR* %1896, i32 0, i32 33
  %1898 = getelementptr inbounds %struct.Reg, %struct.Reg* %1897, i32 0, i32 0
  %PC.i1259 = bitcast %union.anon* %1898 to i64*
  %1899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1900 = getelementptr inbounds %struct.GPR, %struct.GPR* %1899, i32 0, i32 1
  %1901 = getelementptr inbounds %struct.Reg, %struct.Reg* %1900, i32 0, i32 0
  %RAX.i1260 = bitcast %union.anon* %1901 to i64*
  %1902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1903 = getelementptr inbounds %struct.GPR, %struct.GPR* %1902, i32 0, i32 5
  %1904 = getelementptr inbounds %struct.Reg, %struct.Reg* %1903, i32 0, i32 0
  %RCX.i1261 = bitcast %union.anon* %1904 to i64*
  %1905 = load i64, i64* %RAX.i1260
  %1906 = load i64, i64* %RCX.i1261
  %1907 = load i64, i64* %PC.i1259
  %1908 = add i64 %1907, 3
  store i64 %1908, i64* %PC.i1259
  %1909 = add i64 %1906, %1905
  store i64 %1909, i64* %RAX.i1260, align 8
  %1910 = icmp ult i64 %1909, %1905
  %1911 = icmp ult i64 %1909, %1906
  %1912 = or i1 %1910, %1911
  %1913 = zext i1 %1912 to i8
  %1914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1913, i8* %1914, align 1
  %1915 = trunc i64 %1909 to i32
  %1916 = and i32 %1915, 255
  %1917 = call i32 @llvm.ctpop.i32(i32 %1916)
  %1918 = trunc i32 %1917 to i8
  %1919 = and i8 %1918, 1
  %1920 = xor i8 %1919, 1
  %1921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1920, i8* %1921, align 1
  %1922 = xor i64 %1906, %1905
  %1923 = xor i64 %1922, %1909
  %1924 = lshr i64 %1923, 4
  %1925 = trunc i64 %1924 to i8
  %1926 = and i8 %1925, 1
  %1927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1926, i8* %1927, align 1
  %1928 = icmp eq i64 %1909, 0
  %1929 = zext i1 %1928 to i8
  %1930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1929, i8* %1930, align 1
  %1931 = lshr i64 %1909, 63
  %1932 = trunc i64 %1931 to i8
  %1933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1932, i8* %1933, align 1
  %1934 = lshr i64 %1905, 63
  %1935 = lshr i64 %1906, 63
  %1936 = xor i64 %1931, %1934
  %1937 = xor i64 %1931, %1935
  %1938 = add i64 %1936, %1937
  %1939 = icmp eq i64 %1938, 2
  %1940 = zext i1 %1939 to i8
  %1941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1940, i8* %1941, align 1
  store %struct.Memory* %loadMem_41617e, %struct.Memory** %MEMORY
  %loadMem_416181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1942 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1943 = getelementptr inbounds %struct.GPR, %struct.GPR* %1942, i32 0, i32 33
  %1944 = getelementptr inbounds %struct.Reg, %struct.Reg* %1943, i32 0, i32 0
  %PC.i1257 = bitcast %union.anon* %1944 to i64*
  %1945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1946 = getelementptr inbounds %struct.GPR, %struct.GPR* %1945, i32 0, i32 1
  %1947 = getelementptr inbounds %struct.Reg, %struct.Reg* %1946, i32 0, i32 0
  %RAX.i1258 = bitcast %union.anon* %1947 to i64*
  %1948 = load i64, i64* %RAX.i1258
  %1949 = add i64 %1948, 12
  %1950 = load i64, i64* %PC.i1257
  %1951 = add i64 %1950, 4
  store i64 %1951, i64* %PC.i1257
  %1952 = inttoptr i64 %1949 to i32*
  %1953 = load i32, i32* %1952
  %1954 = sub i32 %1953, 1
  %1955 = icmp ult i32 %1953, 1
  %1956 = zext i1 %1955 to i8
  %1957 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %1956, i8* %1957, align 1
  %1958 = and i32 %1954, 255
  %1959 = call i32 @llvm.ctpop.i32(i32 %1958)
  %1960 = trunc i32 %1959 to i8
  %1961 = and i8 %1960, 1
  %1962 = xor i8 %1961, 1
  %1963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %1962, i8* %1963, align 1
  %1964 = xor i32 %1953, 1
  %1965 = xor i32 %1964, %1954
  %1966 = lshr i32 %1965, 4
  %1967 = trunc i32 %1966 to i8
  %1968 = and i8 %1967, 1
  %1969 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %1968, i8* %1969, align 1
  %1970 = icmp eq i32 %1954, 0
  %1971 = zext i1 %1970 to i8
  %1972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %1971, i8* %1972, align 1
  %1973 = lshr i32 %1954, 31
  %1974 = trunc i32 %1973 to i8
  %1975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %1974, i8* %1975, align 1
  %1976 = lshr i32 %1953, 31
  %1977 = xor i32 %1973, %1976
  %1978 = add i32 %1977, %1976
  %1979 = icmp eq i32 %1978, 2
  %1980 = zext i1 %1979 to i8
  %1981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %1980, i8* %1981, align 1
  store %struct.Memory* %loadMem_416181, %struct.Memory** %MEMORY
  %loadMem_416185 = load %struct.Memory*, %struct.Memory** %MEMORY
  %1982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1983 = getelementptr inbounds %struct.GPR, %struct.GPR* %1982, i32 0, i32 33
  %1984 = getelementptr inbounds %struct.Reg, %struct.Reg* %1983, i32 0, i32 0
  %PC.i1256 = bitcast %union.anon* %1984 to i64*
  %1985 = load i64, i64* %PC.i1256
  %1986 = add i64 %1985, 187
  %1987 = load i64, i64* %PC.i1256
  %1988 = add i64 %1987, 6
  %1989 = load i64, i64* %PC.i1256
  %1990 = add i64 %1989, 6
  store i64 %1990, i64* %PC.i1256
  %1991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %1992 = load i8, i8* %1991, align 1
  %1993 = icmp eq i8 %1992, 0
  %1994 = zext i1 %1993 to i8
  store i8 %1994, i8* %BRANCH_TAKEN, align 1
  %1995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %1996 = select i1 %1993, i64 %1986, i64 %1988
  store i64 %1996, i64* %1995, align 8
  store %struct.Memory* %loadMem_416185, %struct.Memory** %MEMORY
  %loadBr_416185 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416185 = icmp eq i8 %loadBr_416185, 1
  br i1 %cmpBr_416185, label %block_.L_416240, label %block_41618b

block_41618b:                                     ; preds = %block_.L_41615e
  %loadMem_41618b = load %struct.Memory*, %struct.Memory** %MEMORY
  %1997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %1998 = getelementptr inbounds %struct.GPR, %struct.GPR* %1997, i32 0, i32 33
  %1999 = getelementptr inbounds %struct.Reg, %struct.Reg* %1998, i32 0, i32 0
  %PC.i1254 = bitcast %union.anon* %1999 to i64*
  %2000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2001 = getelementptr inbounds %struct.GPR, %struct.GPR* %2000, i32 0, i32 1
  %2002 = getelementptr inbounds %struct.Reg, %struct.Reg* %2001, i32 0, i32 0
  %RAX.i1255 = bitcast %union.anon* %2002 to i64*
  %2003 = load i64, i64* %PC.i1254
  %2004 = add i64 %2003, 10
  store i64 %2004, i64* %PC.i1254
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1255, align 8
  store %struct.Memory* %loadMem_41618b, %struct.Memory** %MEMORY
  %loadMem_416195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2005 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2006 = getelementptr inbounds %struct.GPR, %struct.GPR* %2005, i32 0, i32 33
  %2007 = getelementptr inbounds %struct.Reg, %struct.Reg* %2006, i32 0, i32 0
  %PC.i1251 = bitcast %union.anon* %2007 to i64*
  %2008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2009 = getelementptr inbounds %struct.GPR, %struct.GPR* %2008, i32 0, i32 5
  %2010 = getelementptr inbounds %struct.Reg, %struct.Reg* %2009, i32 0, i32 0
  %RCX.i1252 = bitcast %union.anon* %2010 to i64*
  %2011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2012 = getelementptr inbounds %struct.GPR, %struct.GPR* %2011, i32 0, i32 15
  %2013 = getelementptr inbounds %struct.Reg, %struct.Reg* %2012, i32 0, i32 0
  %RBP.i1253 = bitcast %union.anon* %2013 to i64*
  %2014 = load i64, i64* %RBP.i1253
  %2015 = sub i64 %2014, 100
  %2016 = load i64, i64* %PC.i1251
  %2017 = add i64 %2016, 4
  store i64 %2017, i64* %PC.i1251
  %2018 = inttoptr i64 %2015 to i32*
  %2019 = load i32, i32* %2018
  %2020 = sext i32 %2019 to i64
  store i64 %2020, i64* %RCX.i1252, align 8
  store %struct.Memory* %loadMem_416195, %struct.Memory** %MEMORY
  %loadMem_416199 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2022 = getelementptr inbounds %struct.GPR, %struct.GPR* %2021, i32 0, i32 33
  %2023 = getelementptr inbounds %struct.Reg, %struct.Reg* %2022, i32 0, i32 0
  %PC.i1249 = bitcast %union.anon* %2023 to i64*
  %2024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2025 = getelementptr inbounds %struct.GPR, %struct.GPR* %2024, i32 0, i32 5
  %2026 = getelementptr inbounds %struct.Reg, %struct.Reg* %2025, i32 0, i32 0
  %RCX.i1250 = bitcast %union.anon* %2026 to i64*
  %2027 = load i64, i64* %RCX.i1250
  %2028 = load i64, i64* %PC.i1249
  %2029 = add i64 %2028, 7
  store i64 %2029, i64* %PC.i1249
  %2030 = sext i64 %2027 to i128
  %2031 = and i128 %2030, -18446744073709551616
  %2032 = zext i64 %2027 to i128
  %2033 = or i128 %2031, %2032
  %2034 = mul i128 744, %2033
  %2035 = trunc i128 %2034 to i64
  store i64 %2035, i64* %RCX.i1250, align 8
  %2036 = sext i64 %2035 to i128
  %2037 = icmp ne i128 %2036, %2034
  %2038 = zext i1 %2037 to i8
  %2039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2038, i8* %2039, align 1
  %2040 = trunc i128 %2034 to i32
  %2041 = and i32 %2040, 255
  %2042 = call i32 @llvm.ctpop.i32(i32 %2041)
  %2043 = trunc i32 %2042 to i8
  %2044 = and i8 %2043, 1
  %2045 = xor i8 %2044, 1
  %2046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2045, i8* %2046, align 1
  %2047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2047, align 1
  %2048 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2048, align 1
  %2049 = lshr i64 %2035, 63
  %2050 = trunc i64 %2049 to i8
  %2051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2050, i8* %2051, align 1
  %2052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2038, i8* %2052, align 1
  store %struct.Memory* %loadMem_416199, %struct.Memory** %MEMORY
  %loadMem_4161a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2054 = getelementptr inbounds %struct.GPR, %struct.GPR* %2053, i32 0, i32 33
  %2055 = getelementptr inbounds %struct.Reg, %struct.Reg* %2054, i32 0, i32 0
  %PC.i1246 = bitcast %union.anon* %2055 to i64*
  %2056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2057 = getelementptr inbounds %struct.GPR, %struct.GPR* %2056, i32 0, i32 1
  %2058 = getelementptr inbounds %struct.Reg, %struct.Reg* %2057, i32 0, i32 0
  %RAX.i1247 = bitcast %union.anon* %2058 to i64*
  %2059 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2060 = getelementptr inbounds %struct.GPR, %struct.GPR* %2059, i32 0, i32 5
  %2061 = getelementptr inbounds %struct.Reg, %struct.Reg* %2060, i32 0, i32 0
  %RCX.i1248 = bitcast %union.anon* %2061 to i64*
  %2062 = load i64, i64* %RAX.i1247
  %2063 = load i64, i64* %RCX.i1248
  %2064 = load i64, i64* %PC.i1246
  %2065 = add i64 %2064, 3
  store i64 %2065, i64* %PC.i1246
  %2066 = add i64 %2063, %2062
  store i64 %2066, i64* %RAX.i1247, align 8
  %2067 = icmp ult i64 %2066, %2062
  %2068 = icmp ult i64 %2066, %2063
  %2069 = or i1 %2067, %2068
  %2070 = zext i1 %2069 to i8
  %2071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2070, i8* %2071, align 1
  %2072 = trunc i64 %2066 to i32
  %2073 = and i32 %2072, 255
  %2074 = call i32 @llvm.ctpop.i32(i32 %2073)
  %2075 = trunc i32 %2074 to i8
  %2076 = and i8 %2075, 1
  %2077 = xor i8 %2076, 1
  %2078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2077, i8* %2078, align 1
  %2079 = xor i64 %2063, %2062
  %2080 = xor i64 %2079, %2066
  %2081 = lshr i64 %2080, 4
  %2082 = trunc i64 %2081 to i8
  %2083 = and i8 %2082, 1
  %2084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2083, i8* %2084, align 1
  %2085 = icmp eq i64 %2066, 0
  %2086 = zext i1 %2085 to i8
  %2087 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2086, i8* %2087, align 1
  %2088 = lshr i64 %2066, 63
  %2089 = trunc i64 %2088 to i8
  %2090 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2089, i8* %2090, align 1
  %2091 = lshr i64 %2062, 63
  %2092 = lshr i64 %2063, 63
  %2093 = xor i64 %2088, %2091
  %2094 = xor i64 %2088, %2092
  %2095 = add i64 %2093, %2094
  %2096 = icmp eq i64 %2095, 2
  %2097 = zext i1 %2096 to i8
  %2098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2097, i8* %2098, align 1
  store %struct.Memory* %loadMem_4161a0, %struct.Memory** %MEMORY
  %loadMem_4161a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2100 = getelementptr inbounds %struct.GPR, %struct.GPR* %2099, i32 0, i32 33
  %2101 = getelementptr inbounds %struct.Reg, %struct.Reg* %2100, i32 0, i32 0
  %PC.i1243 = bitcast %union.anon* %2101 to i64*
  %2102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2103 = getelementptr inbounds %struct.GPR, %struct.GPR* %2102, i32 0, i32 1
  %2104 = getelementptr inbounds %struct.Reg, %struct.Reg* %2103, i32 0, i32 0
  %RAX.i1244 = bitcast %union.anon* %2104 to i64*
  %2105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2106 = getelementptr inbounds %struct.GPR, %struct.GPR* %2105, i32 0, i32 7
  %2107 = getelementptr inbounds %struct.Reg, %struct.Reg* %2106, i32 0, i32 0
  %RDX.i1245 = bitcast %union.anon* %2107 to i64*
  %2108 = load i64, i64* %RAX.i1244
  %2109 = add i64 %2108, 4
  %2110 = load i64, i64* %PC.i1243
  %2111 = add i64 %2110, 3
  store i64 %2111, i64* %PC.i1243
  %2112 = inttoptr i64 %2109 to i32*
  %2113 = load i32, i32* %2112
  %2114 = zext i32 %2113 to i64
  store i64 %2114, i64* %RDX.i1245, align 8
  store %struct.Memory* %loadMem_4161a3, %struct.Memory** %MEMORY
  %loadMem_4161a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2116 = getelementptr inbounds %struct.GPR, %struct.GPR* %2115, i32 0, i32 33
  %2117 = getelementptr inbounds %struct.Reg, %struct.Reg* %2116, i32 0, i32 0
  %PC.i1240 = bitcast %union.anon* %2117 to i64*
  %2118 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2119 = getelementptr inbounds %struct.GPR, %struct.GPR* %2118, i32 0, i32 1
  %2120 = getelementptr inbounds %struct.Reg, %struct.Reg* %2119, i32 0, i32 0
  %RAX.i1241 = bitcast %union.anon* %2120 to i64*
  %2121 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2122 = getelementptr inbounds %struct.GPR, %struct.GPR* %2121, i32 0, i32 15
  %2123 = getelementptr inbounds %struct.Reg, %struct.Reg* %2122, i32 0, i32 0
  %RBP.i1242 = bitcast %union.anon* %2123 to i64*
  %2124 = load i64, i64* %RBP.i1242
  %2125 = sub i64 %2124, 72
  %2126 = load i64, i64* %PC.i1240
  %2127 = add i64 %2126, 4
  store i64 %2127, i64* %PC.i1240
  %2128 = inttoptr i64 %2125 to i64*
  %2129 = load i64, i64* %2128
  store i64 %2129, i64* %RAX.i1241, align 8
  store %struct.Memory* %loadMem_4161a6, %struct.Memory** %MEMORY
  %loadMem_4161aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %2130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2131 = getelementptr inbounds %struct.GPR, %struct.GPR* %2130, i32 0, i32 33
  %2132 = getelementptr inbounds %struct.Reg, %struct.Reg* %2131, i32 0, i32 0
  %PC.i1237 = bitcast %union.anon* %2132 to i64*
  %2133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2134 = getelementptr inbounds %struct.GPR, %struct.GPR* %2133, i32 0, i32 1
  %2135 = getelementptr inbounds %struct.Reg, %struct.Reg* %2134, i32 0, i32 0
  %RAX.i1238 = bitcast %union.anon* %2135 to i64*
  %2136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2137 = getelementptr inbounds %struct.GPR, %struct.GPR* %2136, i32 0, i32 7
  %2138 = getelementptr inbounds %struct.Reg, %struct.Reg* %2137, i32 0, i32 0
  %RDX.i1239 = bitcast %union.anon* %2138 to i64*
  %2139 = load i64, i64* %RDX.i1239
  %2140 = load i64, i64* %RAX.i1238
  %2141 = load i64, i64* %PC.i1237
  %2142 = add i64 %2141, 2
  store i64 %2142, i64* %PC.i1237
  %2143 = trunc i64 %2139 to i32
  %2144 = inttoptr i64 %2140 to i32*
  %2145 = load i32, i32* %2144
  %2146 = add i32 %2145, %2143
  %2147 = zext i32 %2146 to i64
  store i64 %2147, i64* %RDX.i1239, align 8
  %2148 = icmp ult i32 %2146, %2143
  %2149 = icmp ult i32 %2146, %2145
  %2150 = or i1 %2148, %2149
  %2151 = zext i1 %2150 to i8
  %2152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2151, i8* %2152, align 1
  %2153 = and i32 %2146, 255
  %2154 = call i32 @llvm.ctpop.i32(i32 %2153)
  %2155 = trunc i32 %2154 to i8
  %2156 = and i8 %2155, 1
  %2157 = xor i8 %2156, 1
  %2158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2157, i8* %2158, align 1
  %2159 = xor i32 %2145, %2143
  %2160 = xor i32 %2159, %2146
  %2161 = lshr i32 %2160, 4
  %2162 = trunc i32 %2161 to i8
  %2163 = and i8 %2162, 1
  %2164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2163, i8* %2164, align 1
  %2165 = icmp eq i32 %2146, 0
  %2166 = zext i1 %2165 to i8
  %2167 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2166, i8* %2167, align 1
  %2168 = lshr i32 %2146, 31
  %2169 = trunc i32 %2168 to i8
  %2170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2169, i8* %2170, align 1
  %2171 = lshr i32 %2143, 31
  %2172 = lshr i32 %2145, 31
  %2173 = xor i32 %2168, %2171
  %2174 = xor i32 %2168, %2172
  %2175 = add i32 %2173, %2174
  %2176 = icmp eq i32 %2175, 2
  %2177 = zext i1 %2176 to i8
  %2178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2177, i8* %2178, align 1
  store %struct.Memory* %loadMem_4161aa, %struct.Memory** %MEMORY
  %loadMem_4161ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %2179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2180 = getelementptr inbounds %struct.GPR, %struct.GPR* %2179, i32 0, i32 33
  %2181 = getelementptr inbounds %struct.Reg, %struct.Reg* %2180, i32 0, i32 0
  %PC.i1234 = bitcast %union.anon* %2181 to i64*
  %2182 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2183 = getelementptr inbounds %struct.GPR, %struct.GPR* %2182, i32 0, i32 7
  %2184 = getelementptr inbounds %struct.Reg, %struct.Reg* %2183, i32 0, i32 0
  %EDX.i1235 = bitcast %union.anon* %2184 to i32*
  %2185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2186 = getelementptr inbounds %struct.GPR, %struct.GPR* %2185, i32 0, i32 1
  %2187 = getelementptr inbounds %struct.Reg, %struct.Reg* %2186, i32 0, i32 0
  %RAX.i1236 = bitcast %union.anon* %2187 to i64*
  %2188 = load i64, i64* %RAX.i1236
  %2189 = load i32, i32* %EDX.i1235
  %2190 = zext i32 %2189 to i64
  %2191 = load i64, i64* %PC.i1234
  %2192 = add i64 %2191, 2
  store i64 %2192, i64* %PC.i1234
  %2193 = inttoptr i64 %2188 to i32*
  store i32 %2189, i32* %2193
  store %struct.Memory* %loadMem_4161ac, %struct.Memory** %MEMORY
  %loadMem_4161ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %2194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2195 = getelementptr inbounds %struct.GPR, %struct.GPR* %2194, i32 0, i32 33
  %2196 = getelementptr inbounds %struct.Reg, %struct.Reg* %2195, i32 0, i32 0
  %PC.i1232 = bitcast %union.anon* %2196 to i64*
  %2197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2198 = getelementptr inbounds %struct.GPR, %struct.GPR* %2197, i32 0, i32 15
  %2199 = getelementptr inbounds %struct.Reg, %struct.Reg* %2198, i32 0, i32 0
  %RBP.i1233 = bitcast %union.anon* %2199 to i64*
  %2200 = load i64, i64* %RBP.i1233
  %2201 = sub i64 %2200, 104
  %2202 = load i64, i64* %PC.i1232
  %2203 = add i64 %2202, 7
  store i64 %2203, i64* %PC.i1232
  %2204 = inttoptr i64 %2201 to i32*
  store i32 0, i32* %2204
  store %struct.Memory* %loadMem_4161ae, %struct.Memory** %MEMORY
  br label %block_.L_4161b5

block_.L_4161b5:                                  ; preds = %block_.L_41622d, %block_41618b
  %loadMem_4161b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2206 = getelementptr inbounds %struct.GPR, %struct.GPR* %2205, i32 0, i32 33
  %2207 = getelementptr inbounds %struct.Reg, %struct.Reg* %2206, i32 0, i32 0
  %PC.i1230 = bitcast %union.anon* %2207 to i64*
  %2208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2209 = getelementptr inbounds %struct.GPR, %struct.GPR* %2208, i32 0, i32 1
  %2210 = getelementptr inbounds %struct.Reg, %struct.Reg* %2209, i32 0, i32 0
  %RAX.i1231 = bitcast %union.anon* %2210 to i64*
  %2211 = load i64, i64* %PC.i1230
  %2212 = add i64 %2211, 10
  store i64 %2212, i64* %PC.i1230
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1231, align 8
  store %struct.Memory* %loadMem_4161b5, %struct.Memory** %MEMORY
  %loadMem_4161bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %2213 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2214 = getelementptr inbounds %struct.GPR, %struct.GPR* %2213, i32 0, i32 33
  %2215 = getelementptr inbounds %struct.Reg, %struct.Reg* %2214, i32 0, i32 0
  %PC.i1227 = bitcast %union.anon* %2215 to i64*
  %2216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2217 = getelementptr inbounds %struct.GPR, %struct.GPR* %2216, i32 0, i32 5
  %2218 = getelementptr inbounds %struct.Reg, %struct.Reg* %2217, i32 0, i32 0
  %RCX.i1228 = bitcast %union.anon* %2218 to i64*
  %2219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2220 = getelementptr inbounds %struct.GPR, %struct.GPR* %2219, i32 0, i32 15
  %2221 = getelementptr inbounds %struct.Reg, %struct.Reg* %2220, i32 0, i32 0
  %RBP.i1229 = bitcast %union.anon* %2221 to i64*
  %2222 = load i64, i64* %RBP.i1229
  %2223 = sub i64 %2222, 104
  %2224 = load i64, i64* %PC.i1227
  %2225 = add i64 %2224, 3
  store i64 %2225, i64* %PC.i1227
  %2226 = inttoptr i64 %2223 to i32*
  %2227 = load i32, i32* %2226
  %2228 = zext i32 %2227 to i64
  store i64 %2228, i64* %RCX.i1228, align 8
  store %struct.Memory* %loadMem_4161bf, %struct.Memory** %MEMORY
  %loadMem_4161c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2230 = getelementptr inbounds %struct.GPR, %struct.GPR* %2229, i32 0, i32 33
  %2231 = getelementptr inbounds %struct.Reg, %struct.Reg* %2230, i32 0, i32 0
  %PC.i1224 = bitcast %union.anon* %2231 to i64*
  %2232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2233 = getelementptr inbounds %struct.GPR, %struct.GPR* %2232, i32 0, i32 7
  %2234 = getelementptr inbounds %struct.Reg, %struct.Reg* %2233, i32 0, i32 0
  %RDX.i1225 = bitcast %union.anon* %2234 to i64*
  %2235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2236 = getelementptr inbounds %struct.GPR, %struct.GPR* %2235, i32 0, i32 15
  %2237 = getelementptr inbounds %struct.Reg, %struct.Reg* %2236, i32 0, i32 0
  %RBP.i1226 = bitcast %union.anon* %2237 to i64*
  %2238 = load i64, i64* %RBP.i1226
  %2239 = sub i64 %2238, 100
  %2240 = load i64, i64* %PC.i1224
  %2241 = add i64 %2240, 4
  store i64 %2241, i64* %PC.i1224
  %2242 = inttoptr i64 %2239 to i32*
  %2243 = load i32, i32* %2242
  %2244 = sext i32 %2243 to i64
  store i64 %2244, i64* %RDX.i1225, align 8
  store %struct.Memory* %loadMem_4161c2, %struct.Memory** %MEMORY
  %loadMem_4161c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2246 = getelementptr inbounds %struct.GPR, %struct.GPR* %2245, i32 0, i32 33
  %2247 = getelementptr inbounds %struct.Reg, %struct.Reg* %2246, i32 0, i32 0
  %PC.i1222 = bitcast %union.anon* %2247 to i64*
  %2248 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2249 = getelementptr inbounds %struct.GPR, %struct.GPR* %2248, i32 0, i32 7
  %2250 = getelementptr inbounds %struct.Reg, %struct.Reg* %2249, i32 0, i32 0
  %RDX.i1223 = bitcast %union.anon* %2250 to i64*
  %2251 = load i64, i64* %RDX.i1223
  %2252 = load i64, i64* %PC.i1222
  %2253 = add i64 %2252, 7
  store i64 %2253, i64* %PC.i1222
  %2254 = sext i64 %2251 to i128
  %2255 = and i128 %2254, -18446744073709551616
  %2256 = zext i64 %2251 to i128
  %2257 = or i128 %2255, %2256
  %2258 = mul i128 744, %2257
  %2259 = trunc i128 %2258 to i64
  store i64 %2259, i64* %RDX.i1223, align 8
  %2260 = sext i64 %2259 to i128
  %2261 = icmp ne i128 %2260, %2258
  %2262 = zext i1 %2261 to i8
  %2263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2262, i8* %2263, align 1
  %2264 = trunc i128 %2258 to i32
  %2265 = and i32 %2264, 255
  %2266 = call i32 @llvm.ctpop.i32(i32 %2265)
  %2267 = trunc i32 %2266 to i8
  %2268 = and i8 %2267, 1
  %2269 = xor i8 %2268, 1
  %2270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2269, i8* %2270, align 1
  %2271 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2271, align 1
  %2272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2272, align 1
  %2273 = lshr i64 %2259, 63
  %2274 = trunc i64 %2273 to i8
  %2275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2274, i8* %2275, align 1
  %2276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2262, i8* %2276, align 1
  store %struct.Memory* %loadMem_4161c6, %struct.Memory** %MEMORY
  %loadMem_4161cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2278 = getelementptr inbounds %struct.GPR, %struct.GPR* %2277, i32 0, i32 33
  %2279 = getelementptr inbounds %struct.Reg, %struct.Reg* %2278, i32 0, i32 0
  %PC.i1219 = bitcast %union.anon* %2279 to i64*
  %2280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2281 = getelementptr inbounds %struct.GPR, %struct.GPR* %2280, i32 0, i32 1
  %2282 = getelementptr inbounds %struct.Reg, %struct.Reg* %2281, i32 0, i32 0
  %RAX.i1220 = bitcast %union.anon* %2282 to i64*
  %2283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2284 = getelementptr inbounds %struct.GPR, %struct.GPR* %2283, i32 0, i32 7
  %2285 = getelementptr inbounds %struct.Reg, %struct.Reg* %2284, i32 0, i32 0
  %RDX.i1221 = bitcast %union.anon* %2285 to i64*
  %2286 = load i64, i64* %RAX.i1220
  %2287 = load i64, i64* %RDX.i1221
  %2288 = load i64, i64* %PC.i1219
  %2289 = add i64 %2288, 3
  store i64 %2289, i64* %PC.i1219
  %2290 = add i64 %2287, %2286
  store i64 %2290, i64* %RAX.i1220, align 8
  %2291 = icmp ult i64 %2290, %2286
  %2292 = icmp ult i64 %2290, %2287
  %2293 = or i1 %2291, %2292
  %2294 = zext i1 %2293 to i8
  %2295 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2294, i8* %2295, align 1
  %2296 = trunc i64 %2290 to i32
  %2297 = and i32 %2296, 255
  %2298 = call i32 @llvm.ctpop.i32(i32 %2297)
  %2299 = trunc i32 %2298 to i8
  %2300 = and i8 %2299, 1
  %2301 = xor i8 %2300, 1
  %2302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2301, i8* %2302, align 1
  %2303 = xor i64 %2287, %2286
  %2304 = xor i64 %2303, %2290
  %2305 = lshr i64 %2304, 4
  %2306 = trunc i64 %2305 to i8
  %2307 = and i8 %2306, 1
  %2308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2307, i8* %2308, align 1
  %2309 = icmp eq i64 %2290, 0
  %2310 = zext i1 %2309 to i8
  %2311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2310, i8* %2311, align 1
  %2312 = lshr i64 %2290, 63
  %2313 = trunc i64 %2312 to i8
  %2314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2313, i8* %2314, align 1
  %2315 = lshr i64 %2286, 63
  %2316 = lshr i64 %2287, 63
  %2317 = xor i64 %2312, %2315
  %2318 = xor i64 %2312, %2316
  %2319 = add i64 %2317, %2318
  %2320 = icmp eq i64 %2319, 2
  %2321 = zext i1 %2320 to i8
  %2322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2321, i8* %2322, align 1
  store %struct.Memory* %loadMem_4161cd, %struct.Memory** %MEMORY
  %loadMem_4161d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2324 = getelementptr inbounds %struct.GPR, %struct.GPR* %2323, i32 0, i32 33
  %2325 = getelementptr inbounds %struct.Reg, %struct.Reg* %2324, i32 0, i32 0
  %PC.i1216 = bitcast %union.anon* %2325 to i64*
  %2326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2327 = getelementptr inbounds %struct.GPR, %struct.GPR* %2326, i32 0, i32 5
  %2328 = getelementptr inbounds %struct.Reg, %struct.Reg* %2327, i32 0, i32 0
  %ECX.i1217 = bitcast %union.anon* %2328 to i32*
  %2329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2330 = getelementptr inbounds %struct.GPR, %struct.GPR* %2329, i32 0, i32 1
  %2331 = getelementptr inbounds %struct.Reg, %struct.Reg* %2330, i32 0, i32 0
  %RAX.i1218 = bitcast %union.anon* %2331 to i64*
  %2332 = load i32, i32* %ECX.i1217
  %2333 = zext i32 %2332 to i64
  %2334 = load i64, i64* %RAX.i1218
  %2335 = add i64 %2334, 96
  %2336 = load i64, i64* %PC.i1216
  %2337 = add i64 %2336, 3
  store i64 %2337, i64* %PC.i1216
  %2338 = inttoptr i64 %2335 to i32*
  %2339 = load i32, i32* %2338
  %2340 = sub i32 %2332, %2339
  %2341 = icmp ult i32 %2332, %2339
  %2342 = zext i1 %2341 to i8
  %2343 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2342, i8* %2343, align 1
  %2344 = and i32 %2340, 255
  %2345 = call i32 @llvm.ctpop.i32(i32 %2344)
  %2346 = trunc i32 %2345 to i8
  %2347 = and i8 %2346, 1
  %2348 = xor i8 %2347, 1
  %2349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2348, i8* %2349, align 1
  %2350 = xor i32 %2339, %2332
  %2351 = xor i32 %2350, %2340
  %2352 = lshr i32 %2351, 4
  %2353 = trunc i32 %2352 to i8
  %2354 = and i8 %2353, 1
  %2355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2354, i8* %2355, align 1
  %2356 = icmp eq i32 %2340, 0
  %2357 = zext i1 %2356 to i8
  %2358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2357, i8* %2358, align 1
  %2359 = lshr i32 %2340, 31
  %2360 = trunc i32 %2359 to i8
  %2361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2360, i8* %2361, align 1
  %2362 = lshr i32 %2332, 31
  %2363 = lshr i32 %2339, 31
  %2364 = xor i32 %2363, %2362
  %2365 = xor i32 %2359, %2362
  %2366 = add i32 %2365, %2364
  %2367 = icmp eq i32 %2366, 2
  %2368 = zext i1 %2367 to i8
  %2369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2368, i8* %2369, align 1
  store %struct.Memory* %loadMem_4161d0, %struct.Memory** %MEMORY
  %loadMem_4161d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2371 = getelementptr inbounds %struct.GPR, %struct.GPR* %2370, i32 0, i32 33
  %2372 = getelementptr inbounds %struct.Reg, %struct.Reg* %2371, i32 0, i32 0
  %PC.i1215 = bitcast %union.anon* %2372 to i64*
  %2373 = load i64, i64* %PC.i1215
  %2374 = add i64 %2373, 104
  %2375 = load i64, i64* %PC.i1215
  %2376 = add i64 %2375, 6
  %2377 = load i64, i64* %PC.i1215
  %2378 = add i64 %2377, 6
  store i64 %2378, i64* %PC.i1215
  %2379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %2380 = load i8, i8* %2379, align 1
  %2381 = icmp ne i8 %2380, 0
  %2382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %2383 = load i8, i8* %2382, align 1
  %2384 = icmp ne i8 %2383, 0
  %2385 = xor i1 %2381, %2384
  %2386 = xor i1 %2385, true
  %2387 = zext i1 %2386 to i8
  store i8 %2387, i8* %BRANCH_TAKEN, align 1
  %2388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2389 = select i1 %2385, i64 %2376, i64 %2374
  store i64 %2389, i64* %2388, align 8
  store %struct.Memory* %loadMem_4161d3, %struct.Memory** %MEMORY
  %loadBr_4161d3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4161d3 = icmp eq i8 %loadBr_4161d3, 1
  br i1 %cmpBr_4161d3, label %block_.L_41623b, label %block_4161d9

block_4161d9:                                     ; preds = %block_.L_4161b5
  %loadMem_4161d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2391 = getelementptr inbounds %struct.GPR, %struct.GPR* %2390, i32 0, i32 33
  %2392 = getelementptr inbounds %struct.Reg, %struct.Reg* %2391, i32 0, i32 0
  %PC.i1213 = bitcast %union.anon* %2392 to i64*
  %2393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2394 = getelementptr inbounds %struct.GPR, %struct.GPR* %2393, i32 0, i32 1
  %2395 = getelementptr inbounds %struct.Reg, %struct.Reg* %2394, i32 0, i32 0
  %RAX.i1214 = bitcast %union.anon* %2395 to i64*
  %2396 = load i64, i64* %PC.i1213
  %2397 = add i64 %2396, 10
  store i64 %2397, i64* %PC.i1213
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1214, align 8
  store %struct.Memory* %loadMem_4161d9, %struct.Memory** %MEMORY
  %loadMem_4161e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2399 = getelementptr inbounds %struct.GPR, %struct.GPR* %2398, i32 0, i32 33
  %2400 = getelementptr inbounds %struct.Reg, %struct.Reg* %2399, i32 0, i32 0
  %PC.i1210 = bitcast %union.anon* %2400 to i64*
  %2401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2402 = getelementptr inbounds %struct.GPR, %struct.GPR* %2401, i32 0, i32 5
  %2403 = getelementptr inbounds %struct.Reg, %struct.Reg* %2402, i32 0, i32 0
  %RCX.i1211 = bitcast %union.anon* %2403 to i64*
  %2404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2405 = getelementptr inbounds %struct.GPR, %struct.GPR* %2404, i32 0, i32 15
  %2406 = getelementptr inbounds %struct.Reg, %struct.Reg* %2405, i32 0, i32 0
  %RBP.i1212 = bitcast %union.anon* %2406 to i64*
  %2407 = load i64, i64* %RBP.i1212
  %2408 = sub i64 %2407, 100
  %2409 = load i64, i64* %PC.i1210
  %2410 = add i64 %2409, 4
  store i64 %2410, i64* %PC.i1210
  %2411 = inttoptr i64 %2408 to i32*
  %2412 = load i32, i32* %2411
  %2413 = sext i32 %2412 to i64
  store i64 %2413, i64* %RCX.i1211, align 8
  store %struct.Memory* %loadMem_4161e3, %struct.Memory** %MEMORY
  %loadMem_4161e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2414 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2415 = getelementptr inbounds %struct.GPR, %struct.GPR* %2414, i32 0, i32 33
  %2416 = getelementptr inbounds %struct.Reg, %struct.Reg* %2415, i32 0, i32 0
  %PC.i1208 = bitcast %union.anon* %2416 to i64*
  %2417 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2418 = getelementptr inbounds %struct.GPR, %struct.GPR* %2417, i32 0, i32 5
  %2419 = getelementptr inbounds %struct.Reg, %struct.Reg* %2418, i32 0, i32 0
  %RCX.i1209 = bitcast %union.anon* %2419 to i64*
  %2420 = load i64, i64* %RCX.i1209
  %2421 = load i64, i64* %PC.i1208
  %2422 = add i64 %2421, 7
  store i64 %2422, i64* %PC.i1208
  %2423 = sext i64 %2420 to i128
  %2424 = and i128 %2423, -18446744073709551616
  %2425 = zext i64 %2420 to i128
  %2426 = or i128 %2424, %2425
  %2427 = mul i128 744, %2426
  %2428 = trunc i128 %2427 to i64
  store i64 %2428, i64* %RCX.i1209, align 8
  %2429 = sext i64 %2428 to i128
  %2430 = icmp ne i128 %2429, %2427
  %2431 = zext i1 %2430 to i8
  %2432 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2431, i8* %2432, align 1
  %2433 = trunc i128 %2427 to i32
  %2434 = and i32 %2433, 255
  %2435 = call i32 @llvm.ctpop.i32(i32 %2434)
  %2436 = trunc i32 %2435 to i8
  %2437 = and i8 %2436, 1
  %2438 = xor i8 %2437, 1
  %2439 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2438, i8* %2439, align 1
  %2440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2440, align 1
  %2441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2441, align 1
  %2442 = lshr i64 %2428, 63
  %2443 = trunc i64 %2442 to i8
  %2444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2443, i8* %2444, align 1
  %2445 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2431, i8* %2445, align 1
  store %struct.Memory* %loadMem_4161e7, %struct.Memory** %MEMORY
  %loadMem_4161ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %2446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2447 = getelementptr inbounds %struct.GPR, %struct.GPR* %2446, i32 0, i32 33
  %2448 = getelementptr inbounds %struct.Reg, %struct.Reg* %2447, i32 0, i32 0
  %PC.i1205 = bitcast %union.anon* %2448 to i64*
  %2449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2450 = getelementptr inbounds %struct.GPR, %struct.GPR* %2449, i32 0, i32 1
  %2451 = getelementptr inbounds %struct.Reg, %struct.Reg* %2450, i32 0, i32 0
  %RAX.i1206 = bitcast %union.anon* %2451 to i64*
  %2452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2453 = getelementptr inbounds %struct.GPR, %struct.GPR* %2452, i32 0, i32 7
  %2454 = getelementptr inbounds %struct.Reg, %struct.Reg* %2453, i32 0, i32 0
  %RDX.i1207 = bitcast %union.anon* %2454 to i64*
  %2455 = load i64, i64* %RAX.i1206
  %2456 = load i64, i64* %PC.i1205
  %2457 = add i64 %2456, 3
  store i64 %2457, i64* %PC.i1205
  store i64 %2455, i64* %RDX.i1207, align 8
  store %struct.Memory* %loadMem_4161ee, %struct.Memory** %MEMORY
  %loadMem_4161f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2459 = getelementptr inbounds %struct.GPR, %struct.GPR* %2458, i32 0, i32 33
  %2460 = getelementptr inbounds %struct.Reg, %struct.Reg* %2459, i32 0, i32 0
  %PC.i1202 = bitcast %union.anon* %2460 to i64*
  %2461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2462 = getelementptr inbounds %struct.GPR, %struct.GPR* %2461, i32 0, i32 5
  %2463 = getelementptr inbounds %struct.Reg, %struct.Reg* %2462, i32 0, i32 0
  %RCX.i1203 = bitcast %union.anon* %2463 to i64*
  %2464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2465 = getelementptr inbounds %struct.GPR, %struct.GPR* %2464, i32 0, i32 7
  %2466 = getelementptr inbounds %struct.Reg, %struct.Reg* %2465, i32 0, i32 0
  %RDX.i1204 = bitcast %union.anon* %2466 to i64*
  %2467 = load i64, i64* %RDX.i1204
  %2468 = load i64, i64* %RCX.i1203
  %2469 = load i64, i64* %PC.i1202
  %2470 = add i64 %2469, 3
  store i64 %2470, i64* %PC.i1202
  %2471 = add i64 %2468, %2467
  store i64 %2471, i64* %RDX.i1204, align 8
  %2472 = icmp ult i64 %2471, %2467
  %2473 = icmp ult i64 %2471, %2468
  %2474 = or i1 %2472, %2473
  %2475 = zext i1 %2474 to i8
  %2476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2475, i8* %2476, align 1
  %2477 = trunc i64 %2471 to i32
  %2478 = and i32 %2477, 255
  %2479 = call i32 @llvm.ctpop.i32(i32 %2478)
  %2480 = trunc i32 %2479 to i8
  %2481 = and i8 %2480, 1
  %2482 = xor i8 %2481, 1
  %2483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2482, i8* %2483, align 1
  %2484 = xor i64 %2468, %2467
  %2485 = xor i64 %2484, %2471
  %2486 = lshr i64 %2485, 4
  %2487 = trunc i64 %2486 to i8
  %2488 = and i8 %2487, 1
  %2489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2488, i8* %2489, align 1
  %2490 = icmp eq i64 %2471, 0
  %2491 = zext i1 %2490 to i8
  %2492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2491, i8* %2492, align 1
  %2493 = lshr i64 %2471, 63
  %2494 = trunc i64 %2493 to i8
  %2495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2494, i8* %2495, align 1
  %2496 = lshr i64 %2467, 63
  %2497 = lshr i64 %2468, 63
  %2498 = xor i64 %2493, %2496
  %2499 = xor i64 %2493, %2497
  %2500 = add i64 %2498, %2499
  %2501 = icmp eq i64 %2500, 2
  %2502 = zext i1 %2501 to i8
  %2503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2502, i8* %2503, align 1
  store %struct.Memory* %loadMem_4161f1, %struct.Memory** %MEMORY
  %loadMem_4161f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2505 = getelementptr inbounds %struct.GPR, %struct.GPR* %2504, i32 0, i32 33
  %2506 = getelementptr inbounds %struct.Reg, %struct.Reg* %2505, i32 0, i32 0
  %PC.i1199 = bitcast %union.anon* %2506 to i64*
  %2507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2508 = getelementptr inbounds %struct.GPR, %struct.GPR* %2507, i32 0, i32 5
  %2509 = getelementptr inbounds %struct.Reg, %struct.Reg* %2508, i32 0, i32 0
  %RCX.i1200 = bitcast %union.anon* %2509 to i64*
  %2510 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2511 = getelementptr inbounds %struct.GPR, %struct.GPR* %2510, i32 0, i32 15
  %2512 = getelementptr inbounds %struct.Reg, %struct.Reg* %2511, i32 0, i32 0
  %RBP.i1201 = bitcast %union.anon* %2512 to i64*
  %2513 = load i64, i64* %RBP.i1201
  %2514 = sub i64 %2513, 104
  %2515 = load i64, i64* %PC.i1199
  %2516 = add i64 %2515, 4
  store i64 %2516, i64* %PC.i1199
  %2517 = inttoptr i64 %2514 to i32*
  %2518 = load i32, i32* %2517
  %2519 = sext i32 %2518 to i64
  store i64 %2519, i64* %RCX.i1200, align 8
  store %struct.Memory* %loadMem_4161f4, %struct.Memory** %MEMORY
  %loadMem_4161f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2521 = getelementptr inbounds %struct.GPR, %struct.GPR* %2520, i32 0, i32 33
  %2522 = getelementptr inbounds %struct.Reg, %struct.Reg* %2521, i32 0, i32 0
  %PC.i1196 = bitcast %union.anon* %2522 to i64*
  %2523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2524 = getelementptr inbounds %struct.GPR, %struct.GPR* %2523, i32 0, i32 5
  %2525 = getelementptr inbounds %struct.Reg, %struct.Reg* %2524, i32 0, i32 0
  %RCX.i1197 = bitcast %union.anon* %2525 to i64*
  %2526 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2527 = getelementptr inbounds %struct.GPR, %struct.GPR* %2526, i32 0, i32 7
  %2528 = getelementptr inbounds %struct.Reg, %struct.Reg* %2527, i32 0, i32 0
  %RDX.i1198 = bitcast %union.anon* %2528 to i64*
  %2529 = load i64, i64* %RDX.i1198
  %2530 = load i64, i64* %RCX.i1197
  %2531 = mul i64 %2530, 4
  %2532 = add i64 %2529, 100
  %2533 = add i64 %2532, %2531
  %2534 = load i64, i64* %PC.i1196
  %2535 = add i64 %2534, 5
  store i64 %2535, i64* %PC.i1196
  %2536 = inttoptr i64 %2533 to i32*
  %2537 = load i32, i32* %2536
  %2538 = sext i32 %2537 to i64
  store i64 %2538, i64* %RCX.i1197, align 8
  store %struct.Memory* %loadMem_4161f8, %struct.Memory** %MEMORY
  %loadMem_4161fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %2539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2540 = getelementptr inbounds %struct.GPR, %struct.GPR* %2539, i32 0, i32 33
  %2541 = getelementptr inbounds %struct.Reg, %struct.Reg* %2540, i32 0, i32 0
  %PC.i1194 = bitcast %union.anon* %2541 to i64*
  %2542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2543 = getelementptr inbounds %struct.GPR, %struct.GPR* %2542, i32 0, i32 5
  %2544 = getelementptr inbounds %struct.Reg, %struct.Reg* %2543, i32 0, i32 0
  %RCX.i1195 = bitcast %union.anon* %2544 to i64*
  %2545 = load i64, i64* %RCX.i1195
  %2546 = load i64, i64* %PC.i1194
  %2547 = add i64 %2546, 7
  store i64 %2547, i64* %PC.i1194
  %2548 = sext i64 %2545 to i128
  %2549 = and i128 %2548, -18446744073709551616
  %2550 = zext i64 %2545 to i128
  %2551 = or i128 %2549, %2550
  %2552 = mul i128 744, %2551
  %2553 = trunc i128 %2552 to i64
  store i64 %2553, i64* %RCX.i1195, align 8
  %2554 = sext i64 %2553 to i128
  %2555 = icmp ne i128 %2554, %2552
  %2556 = zext i1 %2555 to i8
  %2557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2556, i8* %2557, align 1
  %2558 = trunc i128 %2552 to i32
  %2559 = and i32 %2558, 255
  %2560 = call i32 @llvm.ctpop.i32(i32 %2559)
  %2561 = trunc i32 %2560 to i8
  %2562 = and i8 %2561, 1
  %2563 = xor i8 %2562, 1
  %2564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2563, i8* %2564, align 1
  %2565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2565, align 1
  %2566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2566, align 1
  %2567 = lshr i64 %2553, 63
  %2568 = trunc i64 %2567 to i8
  %2569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2568, i8* %2569, align 1
  %2570 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2556, i8* %2570, align 1
  store %struct.Memory* %loadMem_4161fd, %struct.Memory** %MEMORY
  %loadMem_416204 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2571 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2572 = getelementptr inbounds %struct.GPR, %struct.GPR* %2571, i32 0, i32 33
  %2573 = getelementptr inbounds %struct.Reg, %struct.Reg* %2572, i32 0, i32 0
  %PC.i1191 = bitcast %union.anon* %2573 to i64*
  %2574 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2575 = getelementptr inbounds %struct.GPR, %struct.GPR* %2574, i32 0, i32 1
  %2576 = getelementptr inbounds %struct.Reg, %struct.Reg* %2575, i32 0, i32 0
  %RAX.i1192 = bitcast %union.anon* %2576 to i64*
  %2577 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2578 = getelementptr inbounds %struct.GPR, %struct.GPR* %2577, i32 0, i32 5
  %2579 = getelementptr inbounds %struct.Reg, %struct.Reg* %2578, i32 0, i32 0
  %RCX.i1193 = bitcast %union.anon* %2579 to i64*
  %2580 = load i64, i64* %RAX.i1192
  %2581 = load i64, i64* %RCX.i1193
  %2582 = load i64, i64* %PC.i1191
  %2583 = add i64 %2582, 3
  store i64 %2583, i64* %PC.i1191
  %2584 = add i64 %2581, %2580
  store i64 %2584, i64* %RAX.i1192, align 8
  %2585 = icmp ult i64 %2584, %2580
  %2586 = icmp ult i64 %2584, %2581
  %2587 = or i1 %2585, %2586
  %2588 = zext i1 %2587 to i8
  %2589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2588, i8* %2589, align 1
  %2590 = trunc i64 %2584 to i32
  %2591 = and i32 %2590, 255
  %2592 = call i32 @llvm.ctpop.i32(i32 %2591)
  %2593 = trunc i32 %2592 to i8
  %2594 = and i8 %2593, 1
  %2595 = xor i8 %2594, 1
  %2596 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2595, i8* %2596, align 1
  %2597 = xor i64 %2581, %2580
  %2598 = xor i64 %2597, %2584
  %2599 = lshr i64 %2598, 4
  %2600 = trunc i64 %2599 to i8
  %2601 = and i8 %2600, 1
  %2602 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2601, i8* %2602, align 1
  %2603 = icmp eq i64 %2584, 0
  %2604 = zext i1 %2603 to i8
  %2605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2604, i8* %2605, align 1
  %2606 = lshr i64 %2584, 63
  %2607 = trunc i64 %2606 to i8
  %2608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2607, i8* %2608, align 1
  %2609 = lshr i64 %2580, 63
  %2610 = lshr i64 %2581, 63
  %2611 = xor i64 %2606, %2609
  %2612 = xor i64 %2606, %2610
  %2613 = add i64 %2611, %2612
  %2614 = icmp eq i64 %2613, 2
  %2615 = zext i1 %2614 to i8
  %2616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2615, i8* %2616, align 1
  store %struct.Memory* %loadMem_416204, %struct.Memory** %MEMORY
  %loadMem_416207 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2618 = getelementptr inbounds %struct.GPR, %struct.GPR* %2617, i32 0, i32 33
  %2619 = getelementptr inbounds %struct.Reg, %struct.Reg* %2618, i32 0, i32 0
  %PC.i1188 = bitcast %union.anon* %2619 to i64*
  %2620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2621 = getelementptr inbounds %struct.GPR, %struct.GPR* %2620, i32 0, i32 1
  %2622 = getelementptr inbounds %struct.Reg, %struct.Reg* %2621, i32 0, i32 0
  %RAX.i1189 = bitcast %union.anon* %2622 to i64*
  %2623 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2624 = getelementptr inbounds %struct.GPR, %struct.GPR* %2623, i32 0, i32 15
  %2625 = getelementptr inbounds %struct.Reg, %struct.Reg* %2624, i32 0, i32 0
  %RBP.i1190 = bitcast %union.anon* %2625 to i64*
  %2626 = load i64, i64* %RBP.i1190
  %2627 = sub i64 %2626, 112
  %2628 = load i64, i64* %RAX.i1189
  %2629 = load i64, i64* %PC.i1188
  %2630 = add i64 %2629, 4
  store i64 %2630, i64* %PC.i1188
  %2631 = inttoptr i64 %2627 to i64*
  store i64 %2628, i64* %2631
  store %struct.Memory* %loadMem_416207, %struct.Memory** %MEMORY
  %loadMem_41620b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2633 = getelementptr inbounds %struct.GPR, %struct.GPR* %2632, i32 0, i32 33
  %2634 = getelementptr inbounds %struct.Reg, %struct.Reg* %2633, i32 0, i32 0
  %PC.i1185 = bitcast %union.anon* %2634 to i64*
  %2635 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2636 = getelementptr inbounds %struct.GPR, %struct.GPR* %2635, i32 0, i32 1
  %2637 = getelementptr inbounds %struct.Reg, %struct.Reg* %2636, i32 0, i32 0
  %RAX.i1186 = bitcast %union.anon* %2637 to i64*
  %2638 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2639 = getelementptr inbounds %struct.GPR, %struct.GPR* %2638, i32 0, i32 15
  %2640 = getelementptr inbounds %struct.Reg, %struct.Reg* %2639, i32 0, i32 0
  %RBP.i1187 = bitcast %union.anon* %2640 to i64*
  %2641 = load i64, i64* %RBP.i1187
  %2642 = sub i64 %2641, 112
  %2643 = load i64, i64* %PC.i1185
  %2644 = add i64 %2643, 4
  store i64 %2644, i64* %PC.i1185
  %2645 = inttoptr i64 %2642 to i64*
  %2646 = load i64, i64* %2645
  store i64 %2646, i64* %RAX.i1186, align 8
  store %struct.Memory* %loadMem_41620b, %struct.Memory** %MEMORY
  %loadMem_41620f = load %struct.Memory*, %struct.Memory** %MEMORY
  %2647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2648 = getelementptr inbounds %struct.GPR, %struct.GPR* %2647, i32 0, i32 33
  %2649 = getelementptr inbounds %struct.Reg, %struct.Reg* %2648, i32 0, i32 0
  %PC.i1183 = bitcast %union.anon* %2649 to i64*
  %2650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2651 = getelementptr inbounds %struct.GPR, %struct.GPR* %2650, i32 0, i32 1
  %2652 = getelementptr inbounds %struct.Reg, %struct.Reg* %2651, i32 0, i32 0
  %RAX.i1184 = bitcast %union.anon* %2652 to i64*
  %2653 = load i64, i64* %RAX.i1184
  %2654 = add i64 %2653, 12
  %2655 = load i64, i64* %PC.i1183
  %2656 = add i64 %2655, 4
  store i64 %2656, i64* %PC.i1183
  %2657 = inttoptr i64 %2654 to i32*
  %2658 = load i32, i32* %2657
  %2659 = sub i32 %2658, 1
  %2660 = icmp ult i32 %2658, 1
  %2661 = zext i1 %2660 to i8
  %2662 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2661, i8* %2662, align 1
  %2663 = and i32 %2659, 255
  %2664 = call i32 @llvm.ctpop.i32(i32 %2663)
  %2665 = trunc i32 %2664 to i8
  %2666 = and i8 %2665, 1
  %2667 = xor i8 %2666, 1
  %2668 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2667, i8* %2668, align 1
  %2669 = xor i32 %2658, 1
  %2670 = xor i32 %2669, %2659
  %2671 = lshr i32 %2670, 4
  %2672 = trunc i32 %2671 to i8
  %2673 = and i8 %2672, 1
  %2674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2673, i8* %2674, align 1
  %2675 = icmp eq i32 %2659, 0
  %2676 = zext i1 %2675 to i8
  %2677 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2676, i8* %2677, align 1
  %2678 = lshr i32 %2659, 31
  %2679 = trunc i32 %2678 to i8
  %2680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2679, i8* %2680, align 1
  %2681 = lshr i32 %2658, 31
  %2682 = xor i32 %2678, %2681
  %2683 = add i32 %2682, %2681
  %2684 = icmp eq i32 %2683, 2
  %2685 = zext i1 %2684 to i8
  %2686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2685, i8* %2686, align 1
  store %struct.Memory* %loadMem_41620f, %struct.Memory** %MEMORY
  %loadMem_416213 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2687 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2688 = getelementptr inbounds %struct.GPR, %struct.GPR* %2687, i32 0, i32 33
  %2689 = getelementptr inbounds %struct.Reg, %struct.Reg* %2688, i32 0, i32 0
  %PC.i1182 = bitcast %union.anon* %2689 to i64*
  %2690 = load i64, i64* %PC.i1182
  %2691 = add i64 %2690, 21
  %2692 = load i64, i64* %PC.i1182
  %2693 = add i64 %2692, 6
  %2694 = load i64, i64* %PC.i1182
  %2695 = add i64 %2694, 6
  store i64 %2695, i64* %PC.i1182
  %2696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %2697 = load i8, i8* %2696, align 1
  %2698 = icmp eq i8 %2697, 0
  %2699 = zext i1 %2698 to i8
  store i8 %2699, i8* %BRANCH_TAKEN, align 1
  %2700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %2701 = select i1 %2698, i64 %2691, i64 %2693
  store i64 %2701, i64* %2700, align 8
  store %struct.Memory* %loadMem_416213, %struct.Memory** %MEMORY
  %loadBr_416213 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416213 = icmp eq i8 %loadBr_416213, 1
  br i1 %cmpBr_416213, label %block_.L_416228, label %block_416219

block_416219:                                     ; preds = %block_4161d9
  %loadMem_416219 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2703 = getelementptr inbounds %struct.GPR, %struct.GPR* %2702, i32 0, i32 33
  %2704 = getelementptr inbounds %struct.Reg, %struct.Reg* %2703, i32 0, i32 0
  %PC.i1179 = bitcast %union.anon* %2704 to i64*
  %2705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2706 = getelementptr inbounds %struct.GPR, %struct.GPR* %2705, i32 0, i32 1
  %2707 = getelementptr inbounds %struct.Reg, %struct.Reg* %2706, i32 0, i32 0
  %RAX.i1180 = bitcast %union.anon* %2707 to i64*
  %2708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2709 = getelementptr inbounds %struct.GPR, %struct.GPR* %2708, i32 0, i32 15
  %2710 = getelementptr inbounds %struct.Reg, %struct.Reg* %2709, i32 0, i32 0
  %RBP.i1181 = bitcast %union.anon* %2710 to i64*
  %2711 = load i64, i64* %RBP.i1181
  %2712 = sub i64 %2711, 112
  %2713 = load i64, i64* %PC.i1179
  %2714 = add i64 %2713, 4
  store i64 %2714, i64* %PC.i1179
  %2715 = inttoptr i64 %2712 to i64*
  %2716 = load i64, i64* %2715
  store i64 %2716, i64* %RAX.i1180, align 8
  store %struct.Memory* %loadMem_416219, %struct.Memory** %MEMORY
  %loadMem_41621d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2718 = getelementptr inbounds %struct.GPR, %struct.GPR* %2717, i32 0, i32 33
  %2719 = getelementptr inbounds %struct.Reg, %struct.Reg* %2718, i32 0, i32 0
  %PC.i1176 = bitcast %union.anon* %2719 to i64*
  %2720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2721 = getelementptr inbounds %struct.GPR, %struct.GPR* %2720, i32 0, i32 1
  %2722 = getelementptr inbounds %struct.Reg, %struct.Reg* %2721, i32 0, i32 0
  %RAX.i1177 = bitcast %union.anon* %2722 to i64*
  %2723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2724 = getelementptr inbounds %struct.GPR, %struct.GPR* %2723, i32 0, i32 5
  %2725 = getelementptr inbounds %struct.Reg, %struct.Reg* %2724, i32 0, i32 0
  %RCX.i1178 = bitcast %union.anon* %2725 to i64*
  %2726 = load i64, i64* %RAX.i1177
  %2727 = add i64 %2726, 4
  %2728 = load i64, i64* %PC.i1176
  %2729 = add i64 %2728, 3
  store i64 %2729, i64* %PC.i1176
  %2730 = inttoptr i64 %2727 to i32*
  %2731 = load i32, i32* %2730
  %2732 = zext i32 %2731 to i64
  store i64 %2732, i64* %RCX.i1178, align 8
  store %struct.Memory* %loadMem_41621d, %struct.Memory** %MEMORY
  %loadMem_416220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2733 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2734 = getelementptr inbounds %struct.GPR, %struct.GPR* %2733, i32 0, i32 33
  %2735 = getelementptr inbounds %struct.Reg, %struct.Reg* %2734, i32 0, i32 0
  %PC.i1173 = bitcast %union.anon* %2735 to i64*
  %2736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2737 = getelementptr inbounds %struct.GPR, %struct.GPR* %2736, i32 0, i32 1
  %2738 = getelementptr inbounds %struct.Reg, %struct.Reg* %2737, i32 0, i32 0
  %RAX.i1174 = bitcast %union.anon* %2738 to i64*
  %2739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2740 = getelementptr inbounds %struct.GPR, %struct.GPR* %2739, i32 0, i32 15
  %2741 = getelementptr inbounds %struct.Reg, %struct.Reg* %2740, i32 0, i32 0
  %RBP.i1175 = bitcast %union.anon* %2741 to i64*
  %2742 = load i64, i64* %RBP.i1175
  %2743 = sub i64 %2742, 88
  %2744 = load i64, i64* %PC.i1173
  %2745 = add i64 %2744, 4
  store i64 %2745, i64* %PC.i1173
  %2746 = inttoptr i64 %2743 to i64*
  %2747 = load i64, i64* %2746
  store i64 %2747, i64* %RAX.i1174, align 8
  store %struct.Memory* %loadMem_416220, %struct.Memory** %MEMORY
  %loadMem_416224 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2749 = getelementptr inbounds %struct.GPR, %struct.GPR* %2748, i32 0, i32 33
  %2750 = getelementptr inbounds %struct.Reg, %struct.Reg* %2749, i32 0, i32 0
  %PC.i1170 = bitcast %union.anon* %2750 to i64*
  %2751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2752 = getelementptr inbounds %struct.GPR, %struct.GPR* %2751, i32 0, i32 1
  %2753 = getelementptr inbounds %struct.Reg, %struct.Reg* %2752, i32 0, i32 0
  %RAX.i1171 = bitcast %union.anon* %2753 to i64*
  %2754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2755 = getelementptr inbounds %struct.GPR, %struct.GPR* %2754, i32 0, i32 5
  %2756 = getelementptr inbounds %struct.Reg, %struct.Reg* %2755, i32 0, i32 0
  %RCX.i1172 = bitcast %union.anon* %2756 to i64*
  %2757 = load i64, i64* %RCX.i1172
  %2758 = load i64, i64* %RAX.i1171
  %2759 = load i64, i64* %PC.i1170
  %2760 = add i64 %2759, 2
  store i64 %2760, i64* %PC.i1170
  %2761 = trunc i64 %2757 to i32
  %2762 = inttoptr i64 %2758 to i32*
  %2763 = load i32, i32* %2762
  %2764 = add i32 %2763, %2761
  %2765 = zext i32 %2764 to i64
  store i64 %2765, i64* %RCX.i1172, align 8
  %2766 = icmp ult i32 %2764, %2761
  %2767 = icmp ult i32 %2764, %2763
  %2768 = or i1 %2766, %2767
  %2769 = zext i1 %2768 to i8
  %2770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2769, i8* %2770, align 1
  %2771 = and i32 %2764, 255
  %2772 = call i32 @llvm.ctpop.i32(i32 %2771)
  %2773 = trunc i32 %2772 to i8
  %2774 = and i8 %2773, 1
  %2775 = xor i8 %2774, 1
  %2776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2775, i8* %2776, align 1
  %2777 = xor i32 %2763, %2761
  %2778 = xor i32 %2777, %2764
  %2779 = lshr i32 %2778, 4
  %2780 = trunc i32 %2779 to i8
  %2781 = and i8 %2780, 1
  %2782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2781, i8* %2782, align 1
  %2783 = icmp eq i32 %2764, 0
  %2784 = zext i1 %2783 to i8
  %2785 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2784, i8* %2785, align 1
  %2786 = lshr i32 %2764, 31
  %2787 = trunc i32 %2786 to i8
  %2788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2787, i8* %2788, align 1
  %2789 = lshr i32 %2761, 31
  %2790 = lshr i32 %2763, 31
  %2791 = xor i32 %2786, %2789
  %2792 = xor i32 %2786, %2790
  %2793 = add i32 %2791, %2792
  %2794 = icmp eq i32 %2793, 2
  %2795 = zext i1 %2794 to i8
  %2796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2795, i8* %2796, align 1
  store %struct.Memory* %loadMem_416224, %struct.Memory** %MEMORY
  %loadMem_416226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2798 = getelementptr inbounds %struct.GPR, %struct.GPR* %2797, i32 0, i32 33
  %2799 = getelementptr inbounds %struct.Reg, %struct.Reg* %2798, i32 0, i32 0
  %PC.i1167 = bitcast %union.anon* %2799 to i64*
  %2800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2801 = getelementptr inbounds %struct.GPR, %struct.GPR* %2800, i32 0, i32 5
  %2802 = getelementptr inbounds %struct.Reg, %struct.Reg* %2801, i32 0, i32 0
  %ECX.i1168 = bitcast %union.anon* %2802 to i32*
  %2803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2804 = getelementptr inbounds %struct.GPR, %struct.GPR* %2803, i32 0, i32 1
  %2805 = getelementptr inbounds %struct.Reg, %struct.Reg* %2804, i32 0, i32 0
  %RAX.i1169 = bitcast %union.anon* %2805 to i64*
  %2806 = load i64, i64* %RAX.i1169
  %2807 = load i32, i32* %ECX.i1168
  %2808 = zext i32 %2807 to i64
  %2809 = load i64, i64* %PC.i1167
  %2810 = add i64 %2809, 2
  store i64 %2810, i64* %PC.i1167
  %2811 = inttoptr i64 %2806 to i32*
  store i32 %2807, i32* %2811
  store %struct.Memory* %loadMem_416226, %struct.Memory** %MEMORY
  br label %block_.L_416228

block_.L_416228:                                  ; preds = %block_416219, %block_4161d9
  %loadMem_416228 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2812 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2813 = getelementptr inbounds %struct.GPR, %struct.GPR* %2812, i32 0, i32 33
  %2814 = getelementptr inbounds %struct.Reg, %struct.Reg* %2813, i32 0, i32 0
  %PC.i1166 = bitcast %union.anon* %2814 to i64*
  %2815 = load i64, i64* %PC.i1166
  %2816 = add i64 %2815, 5
  %2817 = load i64, i64* %PC.i1166
  %2818 = add i64 %2817, 5
  store i64 %2818, i64* %PC.i1166
  %2819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2816, i64* %2819, align 8
  store %struct.Memory* %loadMem_416228, %struct.Memory** %MEMORY
  br label %block_.L_41622d

block_.L_41622d:                                  ; preds = %block_.L_416228
  %loadMem_41622d = load %struct.Memory*, %struct.Memory** %MEMORY
  %2820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2821 = getelementptr inbounds %struct.GPR, %struct.GPR* %2820, i32 0, i32 33
  %2822 = getelementptr inbounds %struct.Reg, %struct.Reg* %2821, i32 0, i32 0
  %PC.i1163 = bitcast %union.anon* %2822 to i64*
  %2823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2824 = getelementptr inbounds %struct.GPR, %struct.GPR* %2823, i32 0, i32 1
  %2825 = getelementptr inbounds %struct.Reg, %struct.Reg* %2824, i32 0, i32 0
  %RAX.i1164 = bitcast %union.anon* %2825 to i64*
  %2826 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2827 = getelementptr inbounds %struct.GPR, %struct.GPR* %2826, i32 0, i32 15
  %2828 = getelementptr inbounds %struct.Reg, %struct.Reg* %2827, i32 0, i32 0
  %RBP.i1165 = bitcast %union.anon* %2828 to i64*
  %2829 = load i64, i64* %RBP.i1165
  %2830 = sub i64 %2829, 104
  %2831 = load i64, i64* %PC.i1163
  %2832 = add i64 %2831, 3
  store i64 %2832, i64* %PC.i1163
  %2833 = inttoptr i64 %2830 to i32*
  %2834 = load i32, i32* %2833
  %2835 = zext i32 %2834 to i64
  store i64 %2835, i64* %RAX.i1164, align 8
  store %struct.Memory* %loadMem_41622d, %struct.Memory** %MEMORY
  %loadMem_416230 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2836 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2837 = getelementptr inbounds %struct.GPR, %struct.GPR* %2836, i32 0, i32 33
  %2838 = getelementptr inbounds %struct.Reg, %struct.Reg* %2837, i32 0, i32 0
  %PC.i1161 = bitcast %union.anon* %2838 to i64*
  %2839 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2840 = getelementptr inbounds %struct.GPR, %struct.GPR* %2839, i32 0, i32 1
  %2841 = getelementptr inbounds %struct.Reg, %struct.Reg* %2840, i32 0, i32 0
  %RAX.i1162 = bitcast %union.anon* %2841 to i64*
  %2842 = load i64, i64* %RAX.i1162
  %2843 = load i64, i64* %PC.i1161
  %2844 = add i64 %2843, 3
  store i64 %2844, i64* %PC.i1161
  %2845 = trunc i64 %2842 to i32
  %2846 = add i32 1, %2845
  %2847 = zext i32 %2846 to i64
  store i64 %2847, i64* %RAX.i1162, align 8
  %2848 = icmp ult i32 %2846, %2845
  %2849 = icmp ult i32 %2846, 1
  %2850 = or i1 %2848, %2849
  %2851 = zext i1 %2850 to i8
  %2852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2851, i8* %2852, align 1
  %2853 = and i32 %2846, 255
  %2854 = call i32 @llvm.ctpop.i32(i32 %2853)
  %2855 = trunc i32 %2854 to i8
  %2856 = and i8 %2855, 1
  %2857 = xor i8 %2856, 1
  %2858 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2857, i8* %2858, align 1
  %2859 = xor i64 1, %2842
  %2860 = trunc i64 %2859 to i32
  %2861 = xor i32 %2860, %2846
  %2862 = lshr i32 %2861, 4
  %2863 = trunc i32 %2862 to i8
  %2864 = and i8 %2863, 1
  %2865 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2864, i8* %2865, align 1
  %2866 = icmp eq i32 %2846, 0
  %2867 = zext i1 %2866 to i8
  %2868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2867, i8* %2868, align 1
  %2869 = lshr i32 %2846, 31
  %2870 = trunc i32 %2869 to i8
  %2871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2870, i8* %2871, align 1
  %2872 = lshr i32 %2845, 31
  %2873 = xor i32 %2869, %2872
  %2874 = add i32 %2873, %2869
  %2875 = icmp eq i32 %2874, 2
  %2876 = zext i1 %2875 to i8
  %2877 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2876, i8* %2877, align 1
  store %struct.Memory* %loadMem_416230, %struct.Memory** %MEMORY
  %loadMem_416233 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2879 = getelementptr inbounds %struct.GPR, %struct.GPR* %2878, i32 0, i32 33
  %2880 = getelementptr inbounds %struct.Reg, %struct.Reg* %2879, i32 0, i32 0
  %PC.i1158 = bitcast %union.anon* %2880 to i64*
  %2881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2882 = getelementptr inbounds %struct.GPR, %struct.GPR* %2881, i32 0, i32 1
  %2883 = getelementptr inbounds %struct.Reg, %struct.Reg* %2882, i32 0, i32 0
  %EAX.i1159 = bitcast %union.anon* %2883 to i32*
  %2884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2885 = getelementptr inbounds %struct.GPR, %struct.GPR* %2884, i32 0, i32 15
  %2886 = getelementptr inbounds %struct.Reg, %struct.Reg* %2885, i32 0, i32 0
  %RBP.i1160 = bitcast %union.anon* %2886 to i64*
  %2887 = load i64, i64* %RBP.i1160
  %2888 = sub i64 %2887, 104
  %2889 = load i32, i32* %EAX.i1159
  %2890 = zext i32 %2889 to i64
  %2891 = load i64, i64* %PC.i1158
  %2892 = add i64 %2891, 3
  store i64 %2892, i64* %PC.i1158
  %2893 = inttoptr i64 %2888 to i32*
  store i32 %2889, i32* %2893
  store %struct.Memory* %loadMem_416233, %struct.Memory** %MEMORY
  %loadMem_416236 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2894 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2895 = getelementptr inbounds %struct.GPR, %struct.GPR* %2894, i32 0, i32 33
  %2896 = getelementptr inbounds %struct.Reg, %struct.Reg* %2895, i32 0, i32 0
  %PC.i1157 = bitcast %union.anon* %2896 to i64*
  %2897 = load i64, i64* %PC.i1157
  %2898 = add i64 %2897, -129
  %2899 = load i64, i64* %PC.i1157
  %2900 = add i64 %2899, 5
  store i64 %2900, i64* %PC.i1157
  %2901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2898, i64* %2901, align 8
  store %struct.Memory* %loadMem_416236, %struct.Memory** %MEMORY
  br label %block_.L_4161b5

block_.L_41623b:                                  ; preds = %block_.L_4161b5
  %loadMem_41623b = load %struct.Memory*, %struct.Memory** %MEMORY
  %2902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2903 = getelementptr inbounds %struct.GPR, %struct.GPR* %2902, i32 0, i32 33
  %2904 = getelementptr inbounds %struct.Reg, %struct.Reg* %2903, i32 0, i32 0
  %PC.i1156 = bitcast %union.anon* %2904 to i64*
  %2905 = load i64, i64* %PC.i1156
  %2906 = add i64 %2905, 178
  %2907 = load i64, i64* %PC.i1156
  %2908 = add i64 %2907, 5
  store i64 %2908, i64* %PC.i1156
  %2909 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2906, i64* %2909, align 8
  store %struct.Memory* %loadMem_41623b, %struct.Memory** %MEMORY
  br label %block_.L_4162ed

block_.L_416240:                                  ; preds = %block_.L_41615e
  %loadMem_416240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2911 = getelementptr inbounds %struct.GPR, %struct.GPR* %2910, i32 0, i32 33
  %2912 = getelementptr inbounds %struct.Reg, %struct.Reg* %2911, i32 0, i32 0
  %PC.i1154 = bitcast %union.anon* %2912 to i64*
  %2913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2914 = getelementptr inbounds %struct.GPR, %struct.GPR* %2913, i32 0, i32 1
  %2915 = getelementptr inbounds %struct.Reg, %struct.Reg* %2914, i32 0, i32 0
  %RAX.i1155 = bitcast %union.anon* %2915 to i64*
  %2916 = load i64, i64* %PC.i1154
  %2917 = add i64 %2916, 10
  store i64 %2917, i64* %PC.i1154
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1155, align 8
  store %struct.Memory* %loadMem_416240, %struct.Memory** %MEMORY
  %loadMem_41624a = load %struct.Memory*, %struct.Memory** %MEMORY
  %2918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2919 = getelementptr inbounds %struct.GPR, %struct.GPR* %2918, i32 0, i32 33
  %2920 = getelementptr inbounds %struct.Reg, %struct.Reg* %2919, i32 0, i32 0
  %PC.i1151 = bitcast %union.anon* %2920 to i64*
  %2921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2922 = getelementptr inbounds %struct.GPR, %struct.GPR* %2921, i32 0, i32 5
  %2923 = getelementptr inbounds %struct.Reg, %struct.Reg* %2922, i32 0, i32 0
  %RCX.i1152 = bitcast %union.anon* %2923 to i64*
  %2924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2925 = getelementptr inbounds %struct.GPR, %struct.GPR* %2924, i32 0, i32 15
  %2926 = getelementptr inbounds %struct.Reg, %struct.Reg* %2925, i32 0, i32 0
  %RBP.i1153 = bitcast %union.anon* %2926 to i64*
  %2927 = load i64, i64* %RBP.i1153
  %2928 = sub i64 %2927, 100
  %2929 = load i64, i64* %PC.i1151
  %2930 = add i64 %2929, 4
  store i64 %2930, i64* %PC.i1151
  %2931 = inttoptr i64 %2928 to i32*
  %2932 = load i32, i32* %2931
  %2933 = sext i32 %2932 to i64
  store i64 %2933, i64* %RCX.i1152, align 8
  store %struct.Memory* %loadMem_41624a, %struct.Memory** %MEMORY
  %loadMem_41624e = load %struct.Memory*, %struct.Memory** %MEMORY
  %2934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2935 = getelementptr inbounds %struct.GPR, %struct.GPR* %2934, i32 0, i32 33
  %2936 = getelementptr inbounds %struct.Reg, %struct.Reg* %2935, i32 0, i32 0
  %PC.i1149 = bitcast %union.anon* %2936 to i64*
  %2937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2938 = getelementptr inbounds %struct.GPR, %struct.GPR* %2937, i32 0, i32 5
  %2939 = getelementptr inbounds %struct.Reg, %struct.Reg* %2938, i32 0, i32 0
  %RCX.i1150 = bitcast %union.anon* %2939 to i64*
  %2940 = load i64, i64* %RCX.i1150
  %2941 = load i64, i64* %PC.i1149
  %2942 = add i64 %2941, 7
  store i64 %2942, i64* %PC.i1149
  %2943 = sext i64 %2940 to i128
  %2944 = and i128 %2943, -18446744073709551616
  %2945 = zext i64 %2940 to i128
  %2946 = or i128 %2944, %2945
  %2947 = mul i128 744, %2946
  %2948 = trunc i128 %2947 to i64
  store i64 %2948, i64* %RCX.i1150, align 8
  %2949 = sext i64 %2948 to i128
  %2950 = icmp ne i128 %2949, %2947
  %2951 = zext i1 %2950 to i8
  %2952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2951, i8* %2952, align 1
  %2953 = trunc i128 %2947 to i32
  %2954 = and i32 %2953, 255
  %2955 = call i32 @llvm.ctpop.i32(i32 %2954)
  %2956 = trunc i32 %2955 to i8
  %2957 = and i8 %2956, 1
  %2958 = xor i8 %2957, 1
  %2959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2958, i8* %2959, align 1
  %2960 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %2960, align 1
  %2961 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %2961, align 1
  %2962 = lshr i64 %2948, 63
  %2963 = trunc i64 %2962 to i8
  %2964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %2963, i8* %2964, align 1
  %2965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %2951, i8* %2965, align 1
  store %struct.Memory* %loadMem_41624e, %struct.Memory** %MEMORY
  %loadMem_416255 = load %struct.Memory*, %struct.Memory** %MEMORY
  %2966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2967 = getelementptr inbounds %struct.GPR, %struct.GPR* %2966, i32 0, i32 33
  %2968 = getelementptr inbounds %struct.Reg, %struct.Reg* %2967, i32 0, i32 0
  %PC.i1146 = bitcast %union.anon* %2968 to i64*
  %2969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2970 = getelementptr inbounds %struct.GPR, %struct.GPR* %2969, i32 0, i32 1
  %2971 = getelementptr inbounds %struct.Reg, %struct.Reg* %2970, i32 0, i32 0
  %RAX.i1147 = bitcast %union.anon* %2971 to i64*
  %2972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %2973 = getelementptr inbounds %struct.GPR, %struct.GPR* %2972, i32 0, i32 5
  %2974 = getelementptr inbounds %struct.Reg, %struct.Reg* %2973, i32 0, i32 0
  %RCX.i1148 = bitcast %union.anon* %2974 to i64*
  %2975 = load i64, i64* %RAX.i1147
  %2976 = load i64, i64* %RCX.i1148
  %2977 = load i64, i64* %PC.i1146
  %2978 = add i64 %2977, 3
  store i64 %2978, i64* %PC.i1146
  %2979 = add i64 %2976, %2975
  store i64 %2979, i64* %RAX.i1147, align 8
  %2980 = icmp ult i64 %2979, %2975
  %2981 = icmp ult i64 %2979, %2976
  %2982 = or i1 %2980, %2981
  %2983 = zext i1 %2982 to i8
  %2984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %2983, i8* %2984, align 1
  %2985 = trunc i64 %2979 to i32
  %2986 = and i32 %2985, 255
  %2987 = call i32 @llvm.ctpop.i32(i32 %2986)
  %2988 = trunc i32 %2987 to i8
  %2989 = and i8 %2988, 1
  %2990 = xor i8 %2989, 1
  %2991 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %2990, i8* %2991, align 1
  %2992 = xor i64 %2976, %2975
  %2993 = xor i64 %2992, %2979
  %2994 = lshr i64 %2993, 4
  %2995 = trunc i64 %2994 to i8
  %2996 = and i8 %2995, 1
  %2997 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %2996, i8* %2997, align 1
  %2998 = icmp eq i64 %2979, 0
  %2999 = zext i1 %2998 to i8
  %3000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %2999, i8* %3000, align 1
  %3001 = lshr i64 %2979, 63
  %3002 = trunc i64 %3001 to i8
  %3003 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3002, i8* %3003, align 1
  %3004 = lshr i64 %2975, 63
  %3005 = lshr i64 %2976, 63
  %3006 = xor i64 %3001, %3004
  %3007 = xor i64 %3001, %3005
  %3008 = add i64 %3006, %3007
  %3009 = icmp eq i64 %3008, 2
  %3010 = zext i1 %3009 to i8
  %3011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3010, i8* %3011, align 1
  store %struct.Memory* %loadMem_416255, %struct.Memory** %MEMORY
  %loadMem_416258 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3013 = getelementptr inbounds %struct.GPR, %struct.GPR* %3012, i32 0, i32 33
  %3014 = getelementptr inbounds %struct.Reg, %struct.Reg* %3013, i32 0, i32 0
  %PC.i1144 = bitcast %union.anon* %3014 to i64*
  %3015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3016 = getelementptr inbounds %struct.GPR, %struct.GPR* %3015, i32 0, i32 1
  %3017 = getelementptr inbounds %struct.Reg, %struct.Reg* %3016, i32 0, i32 0
  %RAX.i1145 = bitcast %union.anon* %3017 to i64*
  %3018 = load i64, i64* %RAX.i1145
  %3019 = add i64 %3018, 12
  %3020 = load i64, i64* %PC.i1144
  %3021 = add i64 %3020, 4
  store i64 %3021, i64* %PC.i1144
  %3022 = inttoptr i64 %3019 to i32*
  %3023 = load i32, i32* %3022
  %3024 = sub i32 %3023, 2
  %3025 = icmp ult i32 %3023, 2
  %3026 = zext i1 %3025 to i8
  %3027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3026, i8* %3027, align 1
  %3028 = and i32 %3024, 255
  %3029 = call i32 @llvm.ctpop.i32(i32 %3028)
  %3030 = trunc i32 %3029 to i8
  %3031 = and i8 %3030, 1
  %3032 = xor i8 %3031, 1
  %3033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3032, i8* %3033, align 1
  %3034 = xor i32 %3023, 2
  %3035 = xor i32 %3034, %3024
  %3036 = lshr i32 %3035, 4
  %3037 = trunc i32 %3036 to i8
  %3038 = and i8 %3037, 1
  %3039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3038, i8* %3039, align 1
  %3040 = icmp eq i32 %3024, 0
  %3041 = zext i1 %3040 to i8
  %3042 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3041, i8* %3042, align 1
  %3043 = lshr i32 %3024, 31
  %3044 = trunc i32 %3043 to i8
  %3045 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3044, i8* %3045, align 1
  %3046 = lshr i32 %3023, 31
  %3047 = xor i32 %3043, %3046
  %3048 = add i32 %3047, %3046
  %3049 = icmp eq i32 %3048, 2
  %3050 = zext i1 %3049 to i8
  %3051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3050, i8* %3051, align 1
  store %struct.Memory* %loadMem_416258, %struct.Memory** %MEMORY
  %loadMem_41625c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3053 = getelementptr inbounds %struct.GPR, %struct.GPR* %3052, i32 0, i32 33
  %3054 = getelementptr inbounds %struct.Reg, %struct.Reg* %3053, i32 0, i32 0
  %PC.i1143 = bitcast %union.anon* %3054 to i64*
  %3055 = load i64, i64* %PC.i1143
  %3056 = add i64 %3055, 140
  %3057 = load i64, i64* %PC.i1143
  %3058 = add i64 %3057, 6
  %3059 = load i64, i64* %PC.i1143
  %3060 = add i64 %3059, 6
  store i64 %3060, i64* %PC.i1143
  %3061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3062 = load i8, i8* %3061, align 1
  %3063 = icmp eq i8 %3062, 0
  %3064 = zext i1 %3063 to i8
  store i8 %3064, i8* %BRANCH_TAKEN, align 1
  %3065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3066 = select i1 %3063, i64 %3056, i64 %3058
  store i64 %3066, i64* %3065, align 8
  store %struct.Memory* %loadMem_41625c, %struct.Memory** %MEMORY
  %loadBr_41625c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41625c = icmp eq i8 %loadBr_41625c, 1
  br i1 %cmpBr_41625c, label %block_.L_4162e8, label %block_416262

block_416262:                                     ; preds = %block_.L_416240
  %loadMem_416262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3068 = getelementptr inbounds %struct.GPR, %struct.GPR* %3067, i32 0, i32 33
  %3069 = getelementptr inbounds %struct.Reg, %struct.Reg* %3068, i32 0, i32 0
  %PC.i1141 = bitcast %union.anon* %3069 to i64*
  %3070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3071 = getelementptr inbounds %struct.GPR, %struct.GPR* %3070, i32 0, i32 1
  %3072 = getelementptr inbounds %struct.Reg, %struct.Reg* %3071, i32 0, i32 0
  %RAX.i1142 = bitcast %union.anon* %3072 to i64*
  %3073 = load i64, i64* %PC.i1141
  %3074 = add i64 %3073, 10
  store i64 %3074, i64* %PC.i1141
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1142, align 8
  store %struct.Memory* %loadMem_416262, %struct.Memory** %MEMORY
  %loadMem_41626c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3076 = getelementptr inbounds %struct.GPR, %struct.GPR* %3075, i32 0, i32 33
  %3077 = getelementptr inbounds %struct.Reg, %struct.Reg* %3076, i32 0, i32 0
  %PC.i1138 = bitcast %union.anon* %3077 to i64*
  %3078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3079 = getelementptr inbounds %struct.GPR, %struct.GPR* %3078, i32 0, i32 5
  %3080 = getelementptr inbounds %struct.Reg, %struct.Reg* %3079, i32 0, i32 0
  %RCX.i1139 = bitcast %union.anon* %3080 to i64*
  %3081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3082 = getelementptr inbounds %struct.GPR, %struct.GPR* %3081, i32 0, i32 15
  %3083 = getelementptr inbounds %struct.Reg, %struct.Reg* %3082, i32 0, i32 0
  %RBP.i1140 = bitcast %union.anon* %3083 to i64*
  %3084 = load i64, i64* %RBP.i1140
  %3085 = sub i64 %3084, 20
  %3086 = load i64, i64* %PC.i1138
  %3087 = add i64 %3086, 3
  store i64 %3087, i64* %PC.i1138
  %3088 = inttoptr i64 %3085 to i32*
  %3089 = load i32, i32* %3088
  %3090 = zext i32 %3089 to i64
  store i64 %3090, i64* %RCX.i1139, align 8
  store %struct.Memory* %loadMem_41626c, %struct.Memory** %MEMORY
  %loadMem_41626f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3092 = getelementptr inbounds %struct.GPR, %struct.GPR* %3091, i32 0, i32 33
  %3093 = getelementptr inbounds %struct.Reg, %struct.Reg* %3092, i32 0, i32 0
  %PC.i1136 = bitcast %union.anon* %3093 to i64*
  %3094 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3095 = getelementptr inbounds %struct.GPR, %struct.GPR* %3094, i32 0, i32 5
  %3096 = getelementptr inbounds %struct.Reg, %struct.Reg* %3095, i32 0, i32 0
  %RCX.i1137 = bitcast %union.anon* %3096 to i64*
  %3097 = load i64, i64* %RCX.i1137
  %3098 = load i64, i64* %PC.i1136
  %3099 = add i64 %3098, 3
  store i64 %3099, i64* %PC.i1136
  %3100 = trunc i64 %3097 to i32
  %3101 = add i32 20, %3100
  %3102 = zext i32 %3101 to i64
  store i64 %3102, i64* %RCX.i1137, align 8
  %3103 = icmp ult i32 %3101, %3100
  %3104 = icmp ult i32 %3101, 20
  %3105 = or i1 %3103, %3104
  %3106 = zext i1 %3105 to i8
  %3107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3106, i8* %3107, align 1
  %3108 = and i32 %3101, 255
  %3109 = call i32 @llvm.ctpop.i32(i32 %3108)
  %3110 = trunc i32 %3109 to i8
  %3111 = and i8 %3110, 1
  %3112 = xor i8 %3111, 1
  %3113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3112, i8* %3113, align 1
  %3114 = xor i64 20, %3097
  %3115 = trunc i64 %3114 to i32
  %3116 = xor i32 %3115, %3101
  %3117 = lshr i32 %3116, 4
  %3118 = trunc i32 %3117 to i8
  %3119 = and i8 %3118, 1
  %3120 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3119, i8* %3120, align 1
  %3121 = icmp eq i32 %3101, 0
  %3122 = zext i1 %3121 to i8
  %3123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3122, i8* %3123, align 1
  %3124 = lshr i32 %3101, 31
  %3125 = trunc i32 %3124 to i8
  %3126 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3125, i8* %3126, align 1
  %3127 = lshr i32 %3100, 31
  %3128 = xor i32 %3124, %3127
  %3129 = add i32 %3128, %3124
  %3130 = icmp eq i32 %3129, 2
  %3131 = zext i1 %3130 to i8
  %3132 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3131, i8* %3132, align 1
  store %struct.Memory* %loadMem_41626f, %struct.Memory** %MEMORY
  %loadMem_416272 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3133 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3134 = getelementptr inbounds %struct.GPR, %struct.GPR* %3133, i32 0, i32 33
  %3135 = getelementptr inbounds %struct.Reg, %struct.Reg* %3134, i32 0, i32 0
  %PC.i1133 = bitcast %union.anon* %3135 to i64*
  %3136 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3137 = getelementptr inbounds %struct.GPR, %struct.GPR* %3136, i32 0, i32 5
  %3138 = getelementptr inbounds %struct.Reg, %struct.Reg* %3137, i32 0, i32 0
  %ECX.i1134 = bitcast %union.anon* %3138 to i32*
  %3139 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3140 = getelementptr inbounds %struct.GPR, %struct.GPR* %3139, i32 0, i32 7
  %3141 = getelementptr inbounds %struct.Reg, %struct.Reg* %3140, i32 0, i32 0
  %RDX.i1135 = bitcast %union.anon* %3141 to i64*
  %3142 = load i32, i32* %ECX.i1134
  %3143 = zext i32 %3142 to i64
  %3144 = load i64, i64* %PC.i1133
  %3145 = add i64 %3144, 3
  store i64 %3145, i64* %PC.i1133
  %3146 = shl i64 %3143, 32
  %3147 = ashr exact i64 %3146, 32
  store i64 %3147, i64* %RDX.i1135, align 8
  store %struct.Memory* %loadMem_416272, %struct.Memory** %MEMORY
  %loadMem_416275 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3148 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3149 = getelementptr inbounds %struct.GPR, %struct.GPR* %3148, i32 0, i32 33
  %3150 = getelementptr inbounds %struct.Reg, %struct.Reg* %3149, i32 0, i32 0
  %PC.i1131 = bitcast %union.anon* %3150 to i64*
  %3151 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3152 = getelementptr inbounds %struct.GPR, %struct.GPR* %3151, i32 0, i32 7
  %3153 = getelementptr inbounds %struct.Reg, %struct.Reg* %3152, i32 0, i32 0
  %RDX.i1132 = bitcast %union.anon* %3153 to i64*
  %3154 = load i64, i64* %RDX.i1132
  %3155 = mul i64 %3154, 4
  %3156 = add i64 %3155, 11187184
  %3157 = load i64, i64* %PC.i1131
  %3158 = add i64 %3157, 8
  store i64 %3158, i64* %PC.i1131
  %3159 = inttoptr i64 %3156 to i32*
  %3160 = load i32, i32* %3159
  %3161 = sext i32 %3160 to i64
  store i64 %3161, i64* %RDX.i1132, align 8
  store %struct.Memory* %loadMem_416275, %struct.Memory** %MEMORY
  %loadMem_41627d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3163 = getelementptr inbounds %struct.GPR, %struct.GPR* %3162, i32 0, i32 33
  %3164 = getelementptr inbounds %struct.Reg, %struct.Reg* %3163, i32 0, i32 0
  %PC.i1129 = bitcast %union.anon* %3164 to i64*
  %3165 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3166 = getelementptr inbounds %struct.GPR, %struct.GPR* %3165, i32 0, i32 7
  %3167 = getelementptr inbounds %struct.Reg, %struct.Reg* %3166, i32 0, i32 0
  %RDX.i1130 = bitcast %union.anon* %3167 to i64*
  %3168 = load i64, i64* %RDX.i1130
  %3169 = load i64, i64* %PC.i1129
  %3170 = add i64 %3169, 7
  store i64 %3170, i64* %PC.i1129
  %3171 = sext i64 %3168 to i128
  %3172 = and i128 %3171, -18446744073709551616
  %3173 = zext i64 %3168 to i128
  %3174 = or i128 %3172, %3173
  %3175 = mul i128 744, %3174
  %3176 = trunc i128 %3175 to i64
  store i64 %3176, i64* %RDX.i1130, align 8
  %3177 = sext i64 %3176 to i128
  %3178 = icmp ne i128 %3177, %3175
  %3179 = zext i1 %3178 to i8
  %3180 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3179, i8* %3180, align 1
  %3181 = trunc i128 %3175 to i32
  %3182 = and i32 %3181, 255
  %3183 = call i32 @llvm.ctpop.i32(i32 %3182)
  %3184 = trunc i32 %3183 to i8
  %3185 = and i8 %3184, 1
  %3186 = xor i8 %3185, 1
  %3187 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3186, i8* %3187, align 1
  %3188 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3188, align 1
  %3189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3189, align 1
  %3190 = lshr i64 %3176, 63
  %3191 = trunc i64 %3190 to i8
  %3192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3191, i8* %3192, align 1
  %3193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3179, i8* %3193, align 1
  store %struct.Memory* %loadMem_41627d, %struct.Memory** %MEMORY
  %loadMem_416284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3194 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3195 = getelementptr inbounds %struct.GPR, %struct.GPR* %3194, i32 0, i32 33
  %3196 = getelementptr inbounds %struct.Reg, %struct.Reg* %3195, i32 0, i32 0
  %PC.i1126 = bitcast %union.anon* %3196 to i64*
  %3197 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3198 = getelementptr inbounds %struct.GPR, %struct.GPR* %3197, i32 0, i32 1
  %3199 = getelementptr inbounds %struct.Reg, %struct.Reg* %3198, i32 0, i32 0
  %RAX.i1127 = bitcast %union.anon* %3199 to i64*
  %3200 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3201 = getelementptr inbounds %struct.GPR, %struct.GPR* %3200, i32 0, i32 7
  %3202 = getelementptr inbounds %struct.Reg, %struct.Reg* %3201, i32 0, i32 0
  %RDX.i1128 = bitcast %union.anon* %3202 to i64*
  %3203 = load i64, i64* %RAX.i1127
  %3204 = load i64, i64* %RDX.i1128
  %3205 = load i64, i64* %PC.i1126
  %3206 = add i64 %3205, 3
  store i64 %3206, i64* %PC.i1126
  %3207 = add i64 %3204, %3203
  store i64 %3207, i64* %RAX.i1127, align 8
  %3208 = icmp ult i64 %3207, %3203
  %3209 = icmp ult i64 %3207, %3204
  %3210 = or i1 %3208, %3209
  %3211 = zext i1 %3210 to i8
  %3212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3211, i8* %3212, align 1
  %3213 = trunc i64 %3207 to i32
  %3214 = and i32 %3213, 255
  %3215 = call i32 @llvm.ctpop.i32(i32 %3214)
  %3216 = trunc i32 %3215 to i8
  %3217 = and i8 %3216, 1
  %3218 = xor i8 %3217, 1
  %3219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3218, i8* %3219, align 1
  %3220 = xor i64 %3204, %3203
  %3221 = xor i64 %3220, %3207
  %3222 = lshr i64 %3221, 4
  %3223 = trunc i64 %3222 to i8
  %3224 = and i8 %3223, 1
  %3225 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3224, i8* %3225, align 1
  %3226 = icmp eq i64 %3207, 0
  %3227 = zext i1 %3226 to i8
  %3228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3227, i8* %3228, align 1
  %3229 = lshr i64 %3207, 63
  %3230 = trunc i64 %3229 to i8
  %3231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3230, i8* %3231, align 1
  %3232 = lshr i64 %3203, 63
  %3233 = lshr i64 %3204, 63
  %3234 = xor i64 %3229, %3232
  %3235 = xor i64 %3229, %3233
  %3236 = add i64 %3234, %3235
  %3237 = icmp eq i64 %3236, 2
  %3238 = zext i1 %3237 to i8
  %3239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3238, i8* %3239, align 1
  store %struct.Memory* %loadMem_416284, %struct.Memory** %MEMORY
  %loadMem_416287 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3241 = getelementptr inbounds %struct.GPR, %struct.GPR* %3240, i32 0, i32 33
  %3242 = getelementptr inbounds %struct.Reg, %struct.Reg* %3241, i32 0, i32 0
  %PC.i1123 = bitcast %union.anon* %3242 to i64*
  %3243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3244 = getelementptr inbounds %struct.GPR, %struct.GPR* %3243, i32 0, i32 1
  %3245 = getelementptr inbounds %struct.Reg, %struct.Reg* %3244, i32 0, i32 0
  %RAX.i1124 = bitcast %union.anon* %3245 to i64*
  %3246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3247 = getelementptr inbounds %struct.GPR, %struct.GPR* %3246, i32 0, i32 5
  %3248 = getelementptr inbounds %struct.Reg, %struct.Reg* %3247, i32 0, i32 0
  %RCX.i1125 = bitcast %union.anon* %3248 to i64*
  %3249 = load i64, i64* %RAX.i1124
  %3250 = add i64 %3249, 740
  %3251 = load i64, i64* %PC.i1123
  %3252 = add i64 %3251, 6
  store i64 %3252, i64* %PC.i1123
  %3253 = inttoptr i64 %3250 to i32*
  %3254 = load i32, i32* %3253
  %3255 = zext i32 %3254 to i64
  store i64 %3255, i64* %RCX.i1125, align 8
  store %struct.Memory* %loadMem_416287, %struct.Memory** %MEMORY
  %loadMem_41628d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3257 = getelementptr inbounds %struct.GPR, %struct.GPR* %3256, i32 0, i32 33
  %3258 = getelementptr inbounds %struct.Reg, %struct.Reg* %3257, i32 0, i32 0
  %PC.i1121 = bitcast %union.anon* %3258 to i64*
  %3259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3260 = getelementptr inbounds %struct.GPR, %struct.GPR* %3259, i32 0, i32 5
  %3261 = getelementptr inbounds %struct.Reg, %struct.Reg* %3260, i32 0, i32 0
  %ECX.i1122 = bitcast %union.anon* %3261 to i32*
  %3262 = load i32, i32* %ECX.i1122
  %3263 = zext i32 %3262 to i64
  %3264 = load i64, i64* %PC.i1121
  %3265 = add i64 %3264, 7
  store i64 %3265, i64* %PC.i1121
  %3266 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %3267 = sub i32 %3262, %3266
  %3268 = icmp ult i32 %3262, %3266
  %3269 = zext i1 %3268 to i8
  %3270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3269, i8* %3270, align 1
  %3271 = and i32 %3267, 255
  %3272 = call i32 @llvm.ctpop.i32(i32 %3271)
  %3273 = trunc i32 %3272 to i8
  %3274 = and i8 %3273, 1
  %3275 = xor i8 %3274, 1
  %3276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3275, i8* %3276, align 1
  %3277 = xor i32 %3266, %3262
  %3278 = xor i32 %3277, %3267
  %3279 = lshr i32 %3278, 4
  %3280 = trunc i32 %3279 to i8
  %3281 = and i8 %3280, 1
  %3282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3281, i8* %3282, align 1
  %3283 = icmp eq i32 %3267, 0
  %3284 = zext i1 %3283 to i8
  %3285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3284, i8* %3285, align 1
  %3286 = lshr i32 %3267, 31
  %3287 = trunc i32 %3286 to i8
  %3288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3287, i8* %3288, align 1
  %3289 = lshr i32 %3262, 31
  %3290 = lshr i32 %3266, 31
  %3291 = xor i32 %3290, %3289
  %3292 = xor i32 %3286, %3289
  %3293 = add i32 %3292, %3291
  %3294 = icmp eq i32 %3293, 2
  %3295 = zext i1 %3294 to i8
  %3296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3295, i8* %3296, align 1
  store %struct.Memory* %loadMem_41628d, %struct.Memory** %MEMORY
  %loadMem_416294 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3298 = getelementptr inbounds %struct.GPR, %struct.GPR* %3297, i32 0, i32 33
  %3299 = getelementptr inbounds %struct.Reg, %struct.Reg* %3298, i32 0, i32 0
  %PC.i1120 = bitcast %union.anon* %3299 to i64*
  %3300 = load i64, i64* %PC.i1120
  %3301 = add i64 %3300, 84
  %3302 = load i64, i64* %PC.i1120
  %3303 = add i64 %3302, 6
  %3304 = load i64, i64* %PC.i1120
  %3305 = add i64 %3304, 6
  store i64 %3305, i64* %PC.i1120
  %3306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3307 = load i8, i8* %3306, align 1
  store i8 %3307, i8* %BRANCH_TAKEN, align 1
  %3308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3309 = icmp ne i8 %3307, 0
  %3310 = select i1 %3309, i64 %3301, i64 %3303
  store i64 %3310, i64* %3308, align 8
  store %struct.Memory* %loadMem_416294, %struct.Memory** %MEMORY
  %loadBr_416294 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416294 = icmp eq i8 %loadBr_416294, 1
  br i1 %cmpBr_416294, label %block_.L_4162e8, label %block_41629a

block_41629a:                                     ; preds = %block_416262
  %loadMem_41629a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3311 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3312 = getelementptr inbounds %struct.GPR, %struct.GPR* %3311, i32 0, i32 33
  %3313 = getelementptr inbounds %struct.Reg, %struct.Reg* %3312, i32 0, i32 0
  %PC.i1118 = bitcast %union.anon* %3313 to i64*
  %3314 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3315 = getelementptr inbounds %struct.GPR, %struct.GPR* %3314, i32 0, i32 1
  %3316 = getelementptr inbounds %struct.Reg, %struct.Reg* %3315, i32 0, i32 0
  %RAX.i1119 = bitcast %union.anon* %3316 to i64*
  %3317 = load i64, i64* %PC.i1118
  %3318 = add i64 %3317, 10
  store i64 %3318, i64* %PC.i1118
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i1119, align 8
  store %struct.Memory* %loadMem_41629a, %struct.Memory** %MEMORY
  %loadMem_4162a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3320 = getelementptr inbounds %struct.GPR, %struct.GPR* %3319, i32 0, i32 33
  %3321 = getelementptr inbounds %struct.Reg, %struct.Reg* %3320, i32 0, i32 0
  %PC.i1115 = bitcast %union.anon* %3321 to i64*
  %3322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3323 = getelementptr inbounds %struct.GPR, %struct.GPR* %3322, i32 0, i32 5
  %3324 = getelementptr inbounds %struct.Reg, %struct.Reg* %3323, i32 0, i32 0
  %RCX.i1116 = bitcast %union.anon* %3324 to i64*
  %3325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3326 = getelementptr inbounds %struct.GPR, %struct.GPR* %3325, i32 0, i32 15
  %3327 = getelementptr inbounds %struct.Reg, %struct.Reg* %3326, i32 0, i32 0
  %RBP.i1117 = bitcast %union.anon* %3327 to i64*
  %3328 = load i64, i64* %RBP.i1117
  %3329 = sub i64 %3328, 100
  %3330 = load i64, i64* %PC.i1115
  %3331 = add i64 %3330, 4
  store i64 %3331, i64* %PC.i1115
  %3332 = inttoptr i64 %3329 to i32*
  %3333 = load i32, i32* %3332
  %3334 = sext i32 %3333 to i64
  store i64 %3334, i64* %RCX.i1116, align 8
  store %struct.Memory* %loadMem_4162a4, %struct.Memory** %MEMORY
  %loadMem_4162a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3335 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3336 = getelementptr inbounds %struct.GPR, %struct.GPR* %3335, i32 0, i32 33
  %3337 = getelementptr inbounds %struct.Reg, %struct.Reg* %3336, i32 0, i32 0
  %PC.i1113 = bitcast %union.anon* %3337 to i64*
  %3338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3339 = getelementptr inbounds %struct.GPR, %struct.GPR* %3338, i32 0, i32 5
  %3340 = getelementptr inbounds %struct.Reg, %struct.Reg* %3339, i32 0, i32 0
  %RCX.i1114 = bitcast %union.anon* %3340 to i64*
  %3341 = load i64, i64* %RCX.i1114
  %3342 = load i64, i64* %PC.i1113
  %3343 = add i64 %3342, 7
  store i64 %3343, i64* %PC.i1113
  %3344 = sext i64 %3341 to i128
  %3345 = and i128 %3344, -18446744073709551616
  %3346 = zext i64 %3341 to i128
  %3347 = or i128 %3345, %3346
  %3348 = mul i128 744, %3347
  %3349 = trunc i128 %3348 to i64
  store i64 %3349, i64* %RCX.i1114, align 8
  %3350 = sext i64 %3349 to i128
  %3351 = icmp ne i128 %3350, %3348
  %3352 = zext i1 %3351 to i8
  %3353 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3352, i8* %3353, align 1
  %3354 = trunc i128 %3348 to i32
  %3355 = and i32 %3354, 255
  %3356 = call i32 @llvm.ctpop.i32(i32 %3355)
  %3357 = trunc i32 %3356 to i8
  %3358 = and i8 %3357, 1
  %3359 = xor i8 %3358, 1
  %3360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3359, i8* %3360, align 1
  %3361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3361, align 1
  %3362 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3362, align 1
  %3363 = lshr i64 %3349, 63
  %3364 = trunc i64 %3363 to i8
  %3365 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3364, i8* %3365, align 1
  %3366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3352, i8* %3366, align 1
  store %struct.Memory* %loadMem_4162a8, %struct.Memory** %MEMORY
  %loadMem_4162af = load %struct.Memory*, %struct.Memory** %MEMORY
  %3367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3368 = getelementptr inbounds %struct.GPR, %struct.GPR* %3367, i32 0, i32 33
  %3369 = getelementptr inbounds %struct.Reg, %struct.Reg* %3368, i32 0, i32 0
  %PC.i1110 = bitcast %union.anon* %3369 to i64*
  %3370 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3371 = getelementptr inbounds %struct.GPR, %struct.GPR* %3370, i32 0, i32 1
  %3372 = getelementptr inbounds %struct.Reg, %struct.Reg* %3371, i32 0, i32 0
  %RAX.i1111 = bitcast %union.anon* %3372 to i64*
  %3373 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3374 = getelementptr inbounds %struct.GPR, %struct.GPR* %3373, i32 0, i32 7
  %3375 = getelementptr inbounds %struct.Reg, %struct.Reg* %3374, i32 0, i32 0
  %RDX.i1112 = bitcast %union.anon* %3375 to i64*
  %3376 = load i64, i64* %RAX.i1111
  %3377 = load i64, i64* %PC.i1110
  %3378 = add i64 %3377, 3
  store i64 %3378, i64* %PC.i1110
  store i64 %3376, i64* %RDX.i1112, align 8
  store %struct.Memory* %loadMem_4162af, %struct.Memory** %MEMORY
  %loadMem_4162b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3379 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3380 = getelementptr inbounds %struct.GPR, %struct.GPR* %3379, i32 0, i32 33
  %3381 = getelementptr inbounds %struct.Reg, %struct.Reg* %3380, i32 0, i32 0
  %PC.i1107 = bitcast %union.anon* %3381 to i64*
  %3382 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3383 = getelementptr inbounds %struct.GPR, %struct.GPR* %3382, i32 0, i32 5
  %3384 = getelementptr inbounds %struct.Reg, %struct.Reg* %3383, i32 0, i32 0
  %RCX.i1108 = bitcast %union.anon* %3384 to i64*
  %3385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3386 = getelementptr inbounds %struct.GPR, %struct.GPR* %3385, i32 0, i32 7
  %3387 = getelementptr inbounds %struct.Reg, %struct.Reg* %3386, i32 0, i32 0
  %RDX.i1109 = bitcast %union.anon* %3387 to i64*
  %3388 = load i64, i64* %RDX.i1109
  %3389 = load i64, i64* %RCX.i1108
  %3390 = load i64, i64* %PC.i1107
  %3391 = add i64 %3390, 3
  store i64 %3391, i64* %PC.i1107
  %3392 = add i64 %3389, %3388
  store i64 %3392, i64* %RDX.i1109, align 8
  %3393 = icmp ult i64 %3392, %3388
  %3394 = icmp ult i64 %3392, %3389
  %3395 = or i1 %3393, %3394
  %3396 = zext i1 %3395 to i8
  %3397 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3396, i8* %3397, align 1
  %3398 = trunc i64 %3392 to i32
  %3399 = and i32 %3398, 255
  %3400 = call i32 @llvm.ctpop.i32(i32 %3399)
  %3401 = trunc i32 %3400 to i8
  %3402 = and i8 %3401, 1
  %3403 = xor i8 %3402, 1
  %3404 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3403, i8* %3404, align 1
  %3405 = xor i64 %3389, %3388
  %3406 = xor i64 %3405, %3392
  %3407 = lshr i64 %3406, 4
  %3408 = trunc i64 %3407 to i8
  %3409 = and i8 %3408, 1
  %3410 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3409, i8* %3410, align 1
  %3411 = icmp eq i64 %3392, 0
  %3412 = zext i1 %3411 to i8
  %3413 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3412, i8* %3413, align 1
  %3414 = lshr i64 %3392, 63
  %3415 = trunc i64 %3414 to i8
  %3416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3415, i8* %3416, align 1
  %3417 = lshr i64 %3388, 63
  %3418 = lshr i64 %3389, 63
  %3419 = xor i64 %3414, %3417
  %3420 = xor i64 %3414, %3418
  %3421 = add i64 %3419, %3420
  %3422 = icmp eq i64 %3421, 2
  %3423 = zext i1 %3422 to i8
  %3424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3423, i8* %3424, align 1
  store %struct.Memory* %loadMem_4162b2, %struct.Memory** %MEMORY
  %loadMem_4162b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3426 = getelementptr inbounds %struct.GPR, %struct.GPR* %3425, i32 0, i32 33
  %3427 = getelementptr inbounds %struct.Reg, %struct.Reg* %3426, i32 0, i32 0
  %PC.i1104 = bitcast %union.anon* %3427 to i64*
  %3428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3429 = getelementptr inbounds %struct.GPR, %struct.GPR* %3428, i32 0, i32 7
  %3430 = getelementptr inbounds %struct.Reg, %struct.Reg* %3429, i32 0, i32 0
  %RDX.i1105 = bitcast %union.anon* %3430 to i64*
  %3431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3432 = getelementptr inbounds %struct.GPR, %struct.GPR* %3431, i32 0, i32 9
  %3433 = getelementptr inbounds %struct.Reg, %struct.Reg* %3432, i32 0, i32 0
  %RSI.i1106 = bitcast %union.anon* %3433 to i64*
  %3434 = load i64, i64* %RDX.i1105
  %3435 = add i64 %3434, 4
  %3436 = load i64, i64* %PC.i1104
  %3437 = add i64 %3436, 3
  store i64 %3437, i64* %PC.i1104
  %3438 = inttoptr i64 %3435 to i32*
  %3439 = load i32, i32* %3438
  %3440 = zext i32 %3439 to i64
  store i64 %3440, i64* %RSI.i1106, align 8
  store %struct.Memory* %loadMem_4162b5, %struct.Memory** %MEMORY
  %loadMem_4162b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3441 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3442 = getelementptr inbounds %struct.GPR, %struct.GPR* %3441, i32 0, i32 33
  %3443 = getelementptr inbounds %struct.Reg, %struct.Reg* %3442, i32 0, i32 0
  %PC.i1101 = bitcast %union.anon* %3443 to i64*
  %3444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3445 = getelementptr inbounds %struct.GPR, %struct.GPR* %3444, i32 0, i32 5
  %3446 = getelementptr inbounds %struct.Reg, %struct.Reg* %3445, i32 0, i32 0
  %RCX.i1102 = bitcast %union.anon* %3446 to i64*
  %3447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3448 = getelementptr inbounds %struct.GPR, %struct.GPR* %3447, i32 0, i32 15
  %3449 = getelementptr inbounds %struct.Reg, %struct.Reg* %3448, i32 0, i32 0
  %RBP.i1103 = bitcast %union.anon* %3449 to i64*
  %3450 = load i64, i64* %RBP.i1103
  %3451 = sub i64 %3450, 80
  %3452 = load i64, i64* %PC.i1101
  %3453 = add i64 %3452, 4
  store i64 %3453, i64* %PC.i1101
  %3454 = inttoptr i64 %3451 to i64*
  %3455 = load i64, i64* %3454
  store i64 %3455, i64* %RCX.i1102, align 8
  store %struct.Memory* %loadMem_4162b8, %struct.Memory** %MEMORY
  %loadMem_4162bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3456 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3457 = getelementptr inbounds %struct.GPR, %struct.GPR* %3456, i32 0, i32 33
  %3458 = getelementptr inbounds %struct.Reg, %struct.Reg* %3457, i32 0, i32 0
  %PC.i1098 = bitcast %union.anon* %3458 to i64*
  %3459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3460 = getelementptr inbounds %struct.GPR, %struct.GPR* %3459, i32 0, i32 5
  %3461 = getelementptr inbounds %struct.Reg, %struct.Reg* %3460, i32 0, i32 0
  %RCX.i1099 = bitcast %union.anon* %3461 to i64*
  %3462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3463 = getelementptr inbounds %struct.GPR, %struct.GPR* %3462, i32 0, i32 9
  %3464 = getelementptr inbounds %struct.Reg, %struct.Reg* %3463, i32 0, i32 0
  %RSI.i1100 = bitcast %union.anon* %3464 to i64*
  %3465 = load i64, i64* %RSI.i1100
  %3466 = load i64, i64* %RCX.i1099
  %3467 = load i64, i64* %PC.i1098
  %3468 = add i64 %3467, 2
  store i64 %3468, i64* %PC.i1098
  %3469 = trunc i64 %3465 to i32
  %3470 = inttoptr i64 %3466 to i32*
  %3471 = load i32, i32* %3470
  %3472 = add i32 %3471, %3469
  %3473 = zext i32 %3472 to i64
  store i64 %3473, i64* %RSI.i1100, align 8
  %3474 = icmp ult i32 %3472, %3469
  %3475 = icmp ult i32 %3472, %3471
  %3476 = or i1 %3474, %3475
  %3477 = zext i1 %3476 to i8
  %3478 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3477, i8* %3478, align 1
  %3479 = and i32 %3472, 255
  %3480 = call i32 @llvm.ctpop.i32(i32 %3479)
  %3481 = trunc i32 %3480 to i8
  %3482 = and i8 %3481, 1
  %3483 = xor i8 %3482, 1
  %3484 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3483, i8* %3484, align 1
  %3485 = xor i32 %3471, %3469
  %3486 = xor i32 %3485, %3472
  %3487 = lshr i32 %3486, 4
  %3488 = trunc i32 %3487 to i8
  %3489 = and i8 %3488, 1
  %3490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3489, i8* %3490, align 1
  %3491 = icmp eq i32 %3472, 0
  %3492 = zext i1 %3491 to i8
  %3493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3492, i8* %3493, align 1
  %3494 = lshr i32 %3472, 31
  %3495 = trunc i32 %3494 to i8
  %3496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3495, i8* %3496, align 1
  %3497 = lshr i32 %3469, 31
  %3498 = lshr i32 %3471, 31
  %3499 = xor i32 %3494, %3497
  %3500 = xor i32 %3494, %3498
  %3501 = add i32 %3499, %3500
  %3502 = icmp eq i32 %3501, 2
  %3503 = zext i1 %3502 to i8
  %3504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3503, i8* %3504, align 1
  store %struct.Memory* %loadMem_4162bc, %struct.Memory** %MEMORY
  %loadMem_4162be = load %struct.Memory*, %struct.Memory** %MEMORY
  %3505 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3506 = getelementptr inbounds %struct.GPR, %struct.GPR* %3505, i32 0, i32 33
  %3507 = getelementptr inbounds %struct.Reg, %struct.Reg* %3506, i32 0, i32 0
  %PC.i1095 = bitcast %union.anon* %3507 to i64*
  %3508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3509 = getelementptr inbounds %struct.GPR, %struct.GPR* %3508, i32 0, i32 9
  %3510 = getelementptr inbounds %struct.Reg, %struct.Reg* %3509, i32 0, i32 0
  %ESI.i1096 = bitcast %union.anon* %3510 to i32*
  %3511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3512 = getelementptr inbounds %struct.GPR, %struct.GPR* %3511, i32 0, i32 5
  %3513 = getelementptr inbounds %struct.Reg, %struct.Reg* %3512, i32 0, i32 0
  %RCX.i1097 = bitcast %union.anon* %3513 to i64*
  %3514 = load i64, i64* %RCX.i1097
  %3515 = load i32, i32* %ESI.i1096
  %3516 = zext i32 %3515 to i64
  %3517 = load i64, i64* %PC.i1095
  %3518 = add i64 %3517, 2
  store i64 %3518, i64* %PC.i1095
  %3519 = inttoptr i64 %3514 to i32*
  store i32 %3515, i32* %3519
  store %struct.Memory* %loadMem_4162be, %struct.Memory** %MEMORY
  %loadMem_4162c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3520 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3521 = getelementptr inbounds %struct.GPR, %struct.GPR* %3520, i32 0, i32 33
  %3522 = getelementptr inbounds %struct.Reg, %struct.Reg* %3521, i32 0, i32 0
  %PC.i1093 = bitcast %union.anon* %3522 to i64*
  %3523 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3524 = getelementptr inbounds %struct.GPR, %struct.GPR* %3523, i32 0, i32 9
  %3525 = getelementptr inbounds %struct.Reg, %struct.Reg* %3524, i32 0, i32 0
  %RSI.i1094 = bitcast %union.anon* %3525 to i64*
  %3526 = load i64, i64* %PC.i1093
  %3527 = add i64 %3526, 7
  store i64 %3527, i64* %PC.i1093
  %3528 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %3529 = zext i32 %3528 to i64
  store i64 %3529, i64* %RSI.i1094, align 8
  store %struct.Memory* %loadMem_4162c0, %struct.Memory** %MEMORY
  %loadMem_4162c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3530 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3531 = getelementptr inbounds %struct.GPR, %struct.GPR* %3530, i32 0, i32 33
  %3532 = getelementptr inbounds %struct.Reg, %struct.Reg* %3531, i32 0, i32 0
  %PC.i1090 = bitcast %union.anon* %3532 to i64*
  %3533 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3534 = getelementptr inbounds %struct.GPR, %struct.GPR* %3533, i32 0, i32 11
  %3535 = getelementptr inbounds %struct.Reg, %struct.Reg* %3534, i32 0, i32 0
  %RDI.i1091 = bitcast %union.anon* %3535 to i64*
  %3536 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3537 = getelementptr inbounds %struct.GPR, %struct.GPR* %3536, i32 0, i32 15
  %3538 = getelementptr inbounds %struct.Reg, %struct.Reg* %3537, i32 0, i32 0
  %RBP.i1092 = bitcast %union.anon* %3538 to i64*
  %3539 = load i64, i64* %RBP.i1092
  %3540 = sub i64 %3539, 20
  %3541 = load i64, i64* %PC.i1090
  %3542 = add i64 %3541, 3
  store i64 %3542, i64* %PC.i1090
  %3543 = inttoptr i64 %3540 to i32*
  %3544 = load i32, i32* %3543
  %3545 = zext i32 %3544 to i64
  store i64 %3545, i64* %RDI.i1091, align 8
  store %struct.Memory* %loadMem_4162c7, %struct.Memory** %MEMORY
  %loadMem_4162ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %3546 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3547 = getelementptr inbounds %struct.GPR, %struct.GPR* %3546, i32 0, i32 33
  %3548 = getelementptr inbounds %struct.Reg, %struct.Reg* %3547, i32 0, i32 0
  %PC.i1088 = bitcast %union.anon* %3548 to i64*
  %3549 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3550 = getelementptr inbounds %struct.GPR, %struct.GPR* %3549, i32 0, i32 11
  %3551 = getelementptr inbounds %struct.Reg, %struct.Reg* %3550, i32 0, i32 0
  %RDI.i1089 = bitcast %union.anon* %3551 to i64*
  %3552 = load i64, i64* %RDI.i1089
  %3553 = load i64, i64* %PC.i1088
  %3554 = add i64 %3553, 3
  store i64 %3554, i64* %PC.i1088
  %3555 = trunc i64 %3552 to i32
  %3556 = add i32 20, %3555
  %3557 = zext i32 %3556 to i64
  store i64 %3557, i64* %RDI.i1089, align 8
  %3558 = icmp ult i32 %3556, %3555
  %3559 = icmp ult i32 %3556, 20
  %3560 = or i1 %3558, %3559
  %3561 = zext i1 %3560 to i8
  %3562 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3561, i8* %3562, align 1
  %3563 = and i32 %3556, 255
  %3564 = call i32 @llvm.ctpop.i32(i32 %3563)
  %3565 = trunc i32 %3564 to i8
  %3566 = and i8 %3565, 1
  %3567 = xor i8 %3566, 1
  %3568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3567, i8* %3568, align 1
  %3569 = xor i64 20, %3552
  %3570 = trunc i64 %3569 to i32
  %3571 = xor i32 %3570, %3556
  %3572 = lshr i32 %3571, 4
  %3573 = trunc i32 %3572 to i8
  %3574 = and i8 %3573, 1
  %3575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3574, i8* %3575, align 1
  %3576 = icmp eq i32 %3556, 0
  %3577 = zext i1 %3576 to i8
  %3578 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3577, i8* %3578, align 1
  %3579 = lshr i32 %3556, 31
  %3580 = trunc i32 %3579 to i8
  %3581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3580, i8* %3581, align 1
  %3582 = lshr i32 %3555, 31
  %3583 = xor i32 %3579, %3582
  %3584 = add i32 %3583, %3579
  %3585 = icmp eq i32 %3584, 2
  %3586 = zext i1 %3585 to i8
  %3587 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3586, i8* %3587, align 1
  store %struct.Memory* %loadMem_4162ca, %struct.Memory** %MEMORY
  %loadMem_4162cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %3588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3589 = getelementptr inbounds %struct.GPR, %struct.GPR* %3588, i32 0, i32 33
  %3590 = getelementptr inbounds %struct.Reg, %struct.Reg* %3589, i32 0, i32 0
  %PC.i1085 = bitcast %union.anon* %3590 to i64*
  %3591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3592 = getelementptr inbounds %struct.GPR, %struct.GPR* %3591, i32 0, i32 11
  %3593 = getelementptr inbounds %struct.Reg, %struct.Reg* %3592, i32 0, i32 0
  %EDI.i1086 = bitcast %union.anon* %3593 to i32*
  %3594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3595 = getelementptr inbounds %struct.GPR, %struct.GPR* %3594, i32 0, i32 5
  %3596 = getelementptr inbounds %struct.Reg, %struct.Reg* %3595, i32 0, i32 0
  %RCX.i1087 = bitcast %union.anon* %3596 to i64*
  %3597 = load i32, i32* %EDI.i1086
  %3598 = zext i32 %3597 to i64
  %3599 = load i64, i64* %PC.i1085
  %3600 = add i64 %3599, 3
  store i64 %3600, i64* %PC.i1085
  %3601 = shl i64 %3598, 32
  %3602 = ashr exact i64 %3601, 32
  store i64 %3602, i64* %RCX.i1087, align 8
  store %struct.Memory* %loadMem_4162cd, %struct.Memory** %MEMORY
  %loadMem_4162d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3603 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3604 = getelementptr inbounds %struct.GPR, %struct.GPR* %3603, i32 0, i32 33
  %3605 = getelementptr inbounds %struct.Reg, %struct.Reg* %3604, i32 0, i32 0
  %PC.i1083 = bitcast %union.anon* %3605 to i64*
  %3606 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3607 = getelementptr inbounds %struct.GPR, %struct.GPR* %3606, i32 0, i32 5
  %3608 = getelementptr inbounds %struct.Reg, %struct.Reg* %3607, i32 0, i32 0
  %RCX.i1084 = bitcast %union.anon* %3608 to i64*
  %3609 = load i64, i64* %RCX.i1084
  %3610 = mul i64 %3609, 4
  %3611 = add i64 %3610, 11187184
  %3612 = load i64, i64* %PC.i1083
  %3613 = add i64 %3612, 8
  store i64 %3613, i64* %PC.i1083
  %3614 = inttoptr i64 %3611 to i32*
  %3615 = load i32, i32* %3614
  %3616 = sext i32 %3615 to i64
  store i64 %3616, i64* %RCX.i1084, align 8
  store %struct.Memory* %loadMem_4162d0, %struct.Memory** %MEMORY
  %loadMem_4162d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3618 = getelementptr inbounds %struct.GPR, %struct.GPR* %3617, i32 0, i32 33
  %3619 = getelementptr inbounds %struct.Reg, %struct.Reg* %3618, i32 0, i32 0
  %PC.i1081 = bitcast %union.anon* %3619 to i64*
  %3620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3621 = getelementptr inbounds %struct.GPR, %struct.GPR* %3620, i32 0, i32 5
  %3622 = getelementptr inbounds %struct.Reg, %struct.Reg* %3621, i32 0, i32 0
  %RCX.i1082 = bitcast %union.anon* %3622 to i64*
  %3623 = load i64, i64* %RCX.i1082
  %3624 = load i64, i64* %PC.i1081
  %3625 = add i64 %3624, 7
  store i64 %3625, i64* %PC.i1081
  %3626 = sext i64 %3623 to i128
  %3627 = and i128 %3626, -18446744073709551616
  %3628 = zext i64 %3623 to i128
  %3629 = or i128 %3627, %3628
  %3630 = mul i128 744, %3629
  %3631 = trunc i128 %3630 to i64
  store i64 %3631, i64* %RCX.i1082, align 8
  %3632 = sext i64 %3631 to i128
  %3633 = icmp ne i128 %3632, %3630
  %3634 = zext i1 %3633 to i8
  %3635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3634, i8* %3635, align 1
  %3636 = trunc i128 %3630 to i32
  %3637 = and i32 %3636, 255
  %3638 = call i32 @llvm.ctpop.i32(i32 %3637)
  %3639 = trunc i32 %3638 to i8
  %3640 = and i8 %3639, 1
  %3641 = xor i8 %3640, 1
  %3642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3641, i8* %3642, align 1
  %3643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %3643, align 1
  %3644 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %3644, align 1
  %3645 = lshr i64 %3631, 63
  %3646 = trunc i64 %3645 to i8
  %3647 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3646, i8* %3647, align 1
  %3648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3634, i8* %3648, align 1
  store %struct.Memory* %loadMem_4162d8, %struct.Memory** %MEMORY
  %loadMem_4162df = load %struct.Memory*, %struct.Memory** %MEMORY
  %3649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3650 = getelementptr inbounds %struct.GPR, %struct.GPR* %3649, i32 0, i32 33
  %3651 = getelementptr inbounds %struct.Reg, %struct.Reg* %3650, i32 0, i32 0
  %PC.i1078 = bitcast %union.anon* %3651 to i64*
  %3652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3653 = getelementptr inbounds %struct.GPR, %struct.GPR* %3652, i32 0, i32 1
  %3654 = getelementptr inbounds %struct.Reg, %struct.Reg* %3653, i32 0, i32 0
  %RAX.i1079 = bitcast %union.anon* %3654 to i64*
  %3655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3656 = getelementptr inbounds %struct.GPR, %struct.GPR* %3655, i32 0, i32 5
  %3657 = getelementptr inbounds %struct.Reg, %struct.Reg* %3656, i32 0, i32 0
  %RCX.i1080 = bitcast %union.anon* %3657 to i64*
  %3658 = load i64, i64* %RAX.i1079
  %3659 = load i64, i64* %RCX.i1080
  %3660 = load i64, i64* %PC.i1078
  %3661 = add i64 %3660, 3
  store i64 %3661, i64* %PC.i1078
  %3662 = add i64 %3659, %3658
  store i64 %3662, i64* %RAX.i1079, align 8
  %3663 = icmp ult i64 %3662, %3658
  %3664 = icmp ult i64 %3662, %3659
  %3665 = or i1 %3663, %3664
  %3666 = zext i1 %3665 to i8
  %3667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3666, i8* %3667, align 1
  %3668 = trunc i64 %3662 to i32
  %3669 = and i32 %3668, 255
  %3670 = call i32 @llvm.ctpop.i32(i32 %3669)
  %3671 = trunc i32 %3670 to i8
  %3672 = and i8 %3671, 1
  %3673 = xor i8 %3672, 1
  %3674 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3673, i8* %3674, align 1
  %3675 = xor i64 %3659, %3658
  %3676 = xor i64 %3675, %3662
  %3677 = lshr i64 %3676, 4
  %3678 = trunc i64 %3677 to i8
  %3679 = and i8 %3678, 1
  %3680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3679, i8* %3680, align 1
  %3681 = icmp eq i64 %3662, 0
  %3682 = zext i1 %3681 to i8
  %3683 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3682, i8* %3683, align 1
  %3684 = lshr i64 %3662, 63
  %3685 = trunc i64 %3684 to i8
  %3686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3685, i8* %3686, align 1
  %3687 = lshr i64 %3658, 63
  %3688 = lshr i64 %3659, 63
  %3689 = xor i64 %3684, %3687
  %3690 = xor i64 %3684, %3688
  %3691 = add i64 %3689, %3690
  %3692 = icmp eq i64 %3691, 2
  %3693 = zext i1 %3692 to i8
  %3694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3693, i8* %3694, align 1
  store %struct.Memory* %loadMem_4162df, %struct.Memory** %MEMORY
  %loadMem_4162e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3696 = getelementptr inbounds %struct.GPR, %struct.GPR* %3695, i32 0, i32 33
  %3697 = getelementptr inbounds %struct.Reg, %struct.Reg* %3696, i32 0, i32 0
  %PC.i1075 = bitcast %union.anon* %3697 to i64*
  %3698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3699 = getelementptr inbounds %struct.GPR, %struct.GPR* %3698, i32 0, i32 9
  %3700 = getelementptr inbounds %struct.Reg, %struct.Reg* %3699, i32 0, i32 0
  %ESI.i1076 = bitcast %union.anon* %3700 to i32*
  %3701 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3702 = getelementptr inbounds %struct.GPR, %struct.GPR* %3701, i32 0, i32 1
  %3703 = getelementptr inbounds %struct.Reg, %struct.Reg* %3702, i32 0, i32 0
  %RAX.i1077 = bitcast %union.anon* %3703 to i64*
  %3704 = load i64, i64* %RAX.i1077
  %3705 = add i64 %3704, 740
  %3706 = load i32, i32* %ESI.i1076
  %3707 = zext i32 %3706 to i64
  %3708 = load i64, i64* %PC.i1075
  %3709 = add i64 %3708, 6
  store i64 %3709, i64* %PC.i1075
  %3710 = inttoptr i64 %3705 to i32*
  store i32 %3706, i32* %3710
  store %struct.Memory* %loadMem_4162e2, %struct.Memory** %MEMORY
  br label %block_.L_4162e8

block_.L_4162e8:                                  ; preds = %block_41629a, %block_416262, %block_.L_416240
  %loadMem_4162e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3712 = getelementptr inbounds %struct.GPR, %struct.GPR* %3711, i32 0, i32 33
  %3713 = getelementptr inbounds %struct.Reg, %struct.Reg* %3712, i32 0, i32 0
  %PC.i1074 = bitcast %union.anon* %3713 to i64*
  %3714 = load i64, i64* %PC.i1074
  %3715 = add i64 %3714, 5
  %3716 = load i64, i64* %PC.i1074
  %3717 = add i64 %3716, 5
  store i64 %3717, i64* %PC.i1074
  %3718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3715, i64* %3718, align 8
  store %struct.Memory* %loadMem_4162e8, %struct.Memory** %MEMORY
  br label %block_.L_4162ed

block_.L_4162ed:                                  ; preds = %block_.L_4162e8, %block_.L_41623b
  %loadMem_4162ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %3719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3720 = getelementptr inbounds %struct.GPR, %struct.GPR* %3719, i32 0, i32 33
  %3721 = getelementptr inbounds %struct.Reg, %struct.Reg* %3720, i32 0, i32 0
  %PC.i1073 = bitcast %union.anon* %3721 to i64*
  %3722 = load i64, i64* %PC.i1073
  %3723 = add i64 %3722, 5
  %3724 = load i64, i64* %PC.i1073
  %3725 = add i64 %3724, 5
  store i64 %3725, i64* %PC.i1073
  %3726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3723, i64* %3726, align 8
  store %struct.Memory* %loadMem_4162ed, %struct.Memory** %MEMORY
  br label %block_.L_4162f2

block_.L_4162f2:                                  ; preds = %block_.L_4162ed, %block_.L_416159
  %loadMem_4162f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3728 = getelementptr inbounds %struct.GPR, %struct.GPR* %3727, i32 0, i32 33
  %3729 = getelementptr inbounds %struct.Reg, %struct.Reg* %3728, i32 0, i32 0
  %PC.i1072 = bitcast %union.anon* %3729 to i64*
  %3730 = load i64, i64* %PC.i1072
  %3731 = add i64 %3730, 5
  %3732 = load i64, i64* %PC.i1072
  %3733 = add i64 %3732, 5
  store i64 %3733, i64* %PC.i1072
  %3734 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3731, i64* %3734, align 8
  store %struct.Memory* %loadMem_4162f2, %struct.Memory** %MEMORY
  br label %block_.L_4162f7

block_.L_4162f7:                                  ; preds = %block_.L_4162f2, %block_4160ad
  %loadMem_4162f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3736 = getelementptr inbounds %struct.GPR, %struct.GPR* %3735, i32 0, i32 33
  %3737 = getelementptr inbounds %struct.Reg, %struct.Reg* %3736, i32 0, i32 0
  %PC.i1071 = bitcast %union.anon* %3737 to i64*
  %3738 = load i64, i64* %PC.i1071
  %3739 = add i64 %3738, 5
  %3740 = load i64, i64* %PC.i1071
  %3741 = add i64 %3740, 5
  store i64 %3741, i64* %PC.i1071
  %3742 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3739, i64* %3742, align 8
  store %struct.Memory* %loadMem_4162f7, %struct.Memory** %MEMORY
  br label %block_.L_4162fc

block_.L_4162fc:                                  ; preds = %block_.L_4162f7, %block_416083
  %loadMem_4162fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %3743 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3744 = getelementptr inbounds %struct.GPR, %struct.GPR* %3743, i32 0, i32 33
  %3745 = getelementptr inbounds %struct.Reg, %struct.Reg* %3744, i32 0, i32 0
  %PC.i1068 = bitcast %union.anon* %3745 to i64*
  %3746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3747 = getelementptr inbounds %struct.GPR, %struct.GPR* %3746, i32 0, i32 1
  %3748 = getelementptr inbounds %struct.Reg, %struct.Reg* %3747, i32 0, i32 0
  %RAX.i1069 = bitcast %union.anon* %3748 to i64*
  %3749 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3750 = getelementptr inbounds %struct.GPR, %struct.GPR* %3749, i32 0, i32 15
  %3751 = getelementptr inbounds %struct.Reg, %struct.Reg* %3750, i32 0, i32 0
  %RBP.i1070 = bitcast %union.anon* %3751 to i64*
  %3752 = load i64, i64* %RBP.i1070
  %3753 = sub i64 %3752, 20
  %3754 = load i64, i64* %PC.i1068
  %3755 = add i64 %3754, 3
  store i64 %3755, i64* %PC.i1068
  %3756 = inttoptr i64 %3753 to i32*
  %3757 = load i32, i32* %3756
  %3758 = zext i32 %3757 to i64
  store i64 %3758, i64* %RAX.i1069, align 8
  store %struct.Memory* %loadMem_4162fc, %struct.Memory** %MEMORY
  %loadMem_4162ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %3759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3760 = getelementptr inbounds %struct.GPR, %struct.GPR* %3759, i32 0, i32 33
  %3761 = getelementptr inbounds %struct.Reg, %struct.Reg* %3760, i32 0, i32 0
  %PC.i1066 = bitcast %union.anon* %3761 to i64*
  %3762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3763 = getelementptr inbounds %struct.GPR, %struct.GPR* %3762, i32 0, i32 1
  %3764 = getelementptr inbounds %struct.Reg, %struct.Reg* %3763, i32 0, i32 0
  %RAX.i1067 = bitcast %union.anon* %3764 to i64*
  %3765 = load i64, i64* %RAX.i1067
  %3766 = load i64, i64* %PC.i1066
  %3767 = add i64 %3766, 3
  store i64 %3767, i64* %PC.i1066
  %3768 = trunc i64 %3765 to i32
  %3769 = sub i32 %3768, 1
  %3770 = zext i32 %3769 to i64
  store i64 %3770, i64* %RAX.i1067, align 8
  %3771 = icmp ult i32 %3768, 1
  %3772 = zext i1 %3771 to i8
  %3773 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3772, i8* %3773, align 1
  %3774 = and i32 %3769, 255
  %3775 = call i32 @llvm.ctpop.i32(i32 %3774)
  %3776 = trunc i32 %3775 to i8
  %3777 = and i8 %3776, 1
  %3778 = xor i8 %3777, 1
  %3779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3778, i8* %3779, align 1
  %3780 = xor i64 1, %3765
  %3781 = trunc i64 %3780 to i32
  %3782 = xor i32 %3781, %3769
  %3783 = lshr i32 %3782, 4
  %3784 = trunc i32 %3783 to i8
  %3785 = and i8 %3784, 1
  %3786 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3785, i8* %3786, align 1
  %3787 = icmp eq i32 %3769, 0
  %3788 = zext i1 %3787 to i8
  %3789 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3788, i8* %3789, align 1
  %3790 = lshr i32 %3769, 31
  %3791 = trunc i32 %3790 to i8
  %3792 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3791, i8* %3792, align 1
  %3793 = lshr i32 %3768, 31
  %3794 = xor i32 %3790, %3793
  %3795 = add i32 %3794, %3793
  %3796 = icmp eq i32 %3795, 2
  %3797 = zext i1 %3796 to i8
  %3798 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3797, i8* %3798, align 1
  store %struct.Memory* %loadMem_4162ff, %struct.Memory** %MEMORY
  %loadMem_416302 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3800 = getelementptr inbounds %struct.GPR, %struct.GPR* %3799, i32 0, i32 33
  %3801 = getelementptr inbounds %struct.Reg, %struct.Reg* %3800, i32 0, i32 0
  %PC.i1063 = bitcast %union.anon* %3801 to i64*
  %3802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3803 = getelementptr inbounds %struct.GPR, %struct.GPR* %3802, i32 0, i32 1
  %3804 = getelementptr inbounds %struct.Reg, %struct.Reg* %3803, i32 0, i32 0
  %EAX.i1064 = bitcast %union.anon* %3804 to i32*
  %3805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3806 = getelementptr inbounds %struct.GPR, %struct.GPR* %3805, i32 0, i32 5
  %3807 = getelementptr inbounds %struct.Reg, %struct.Reg* %3806, i32 0, i32 0
  %RCX.i1065 = bitcast %union.anon* %3807 to i64*
  %3808 = load i32, i32* %EAX.i1064
  %3809 = zext i32 %3808 to i64
  %3810 = load i64, i64* %PC.i1063
  %3811 = add i64 %3810, 3
  store i64 %3811, i64* %PC.i1063
  %3812 = shl i64 %3809, 32
  %3813 = ashr exact i64 %3812, 32
  store i64 %3813, i64* %RCX.i1065, align 8
  store %struct.Memory* %loadMem_416302, %struct.Memory** %MEMORY
  %loadMem_416305 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3815 = getelementptr inbounds %struct.GPR, %struct.GPR* %3814, i32 0, i32 33
  %3816 = getelementptr inbounds %struct.Reg, %struct.Reg* %3815, i32 0, i32 0
  %PC.i1060 = bitcast %union.anon* %3816 to i64*
  %3817 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3818 = getelementptr inbounds %struct.GPR, %struct.GPR* %3817, i32 0, i32 1
  %3819 = getelementptr inbounds %struct.Reg, %struct.Reg* %3818, i32 0, i32 0
  %RAX.i1061 = bitcast %union.anon* %3819 to i64*
  %3820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3821 = getelementptr inbounds %struct.GPR, %struct.GPR* %3820, i32 0, i32 5
  %3822 = getelementptr inbounds %struct.Reg, %struct.Reg* %3821, i32 0, i32 0
  %RCX.i1062 = bitcast %union.anon* %3822 to i64*
  %3823 = load i64, i64* %RCX.i1062
  %3824 = add i64 %3823, 12099168
  %3825 = load i64, i64* %PC.i1060
  %3826 = add i64 %3825, 8
  store i64 %3826, i64* %PC.i1060
  %3827 = inttoptr i64 %3824 to i8*
  %3828 = load i8, i8* %3827
  %3829 = zext i8 %3828 to i64
  store i64 %3829, i64* %RAX.i1061, align 8
  store %struct.Memory* %loadMem_416305, %struct.Memory** %MEMORY
  %loadMem_41630d = load %struct.Memory*, %struct.Memory** %MEMORY
  %3830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3831 = getelementptr inbounds %struct.GPR, %struct.GPR* %3830, i32 0, i32 33
  %3832 = getelementptr inbounds %struct.Reg, %struct.Reg* %3831, i32 0, i32 0
  %PC.i1058 = bitcast %union.anon* %3832 to i64*
  %3833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3834 = getelementptr inbounds %struct.GPR, %struct.GPR* %3833, i32 0, i32 1
  %3835 = getelementptr inbounds %struct.Reg, %struct.Reg* %3834, i32 0, i32 0
  %EAX.i1059 = bitcast %union.anon* %3835 to i32*
  %3836 = load i32, i32* %EAX.i1059
  %3837 = zext i32 %3836 to i64
  %3838 = load i64, i64* %PC.i1058
  %3839 = add i64 %3838, 3
  store i64 %3839, i64* %PC.i1058
  %3840 = sub i32 %3836, 3
  %3841 = icmp ult i32 %3836, 3
  %3842 = zext i1 %3841 to i8
  %3843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3842, i8* %3843, align 1
  %3844 = and i32 %3840, 255
  %3845 = call i32 @llvm.ctpop.i32(i32 %3844)
  %3846 = trunc i32 %3845 to i8
  %3847 = and i8 %3846, 1
  %3848 = xor i8 %3847, 1
  %3849 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3848, i8* %3849, align 1
  %3850 = xor i64 3, %3837
  %3851 = trunc i64 %3850 to i32
  %3852 = xor i32 %3851, %3840
  %3853 = lshr i32 %3852, 4
  %3854 = trunc i32 %3853 to i8
  %3855 = and i8 %3854, 1
  %3856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3855, i8* %3856, align 1
  %3857 = icmp eq i32 %3840, 0
  %3858 = zext i1 %3857 to i8
  %3859 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3858, i8* %3859, align 1
  %3860 = lshr i32 %3840, 31
  %3861 = trunc i32 %3860 to i8
  %3862 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3861, i8* %3862, align 1
  %3863 = lshr i32 %3836, 31
  %3864 = xor i32 %3860, %3863
  %3865 = add i32 %3864, %3863
  %3866 = icmp eq i32 %3865, 2
  %3867 = zext i1 %3866 to i8
  %3868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3867, i8* %3868, align 1
  store %struct.Memory* %loadMem_41630d, %struct.Memory** %MEMORY
  %loadMem_416310 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3869 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3870 = getelementptr inbounds %struct.GPR, %struct.GPR* %3869, i32 0, i32 33
  %3871 = getelementptr inbounds %struct.Reg, %struct.Reg* %3870, i32 0, i32 0
  %PC.i1057 = bitcast %union.anon* %3871 to i64*
  %3872 = load i64, i64* %PC.i1057
  %3873 = add i64 %3872, 22
  %3874 = load i64, i64* %PC.i1057
  %3875 = add i64 %3874, 6
  %3876 = load i64, i64* %PC.i1057
  %3877 = add i64 %3876, 6
  store i64 %3877, i64* %PC.i1057
  %3878 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %3879 = load i8, i8* %3878, align 1
  %3880 = icmp eq i8 %3879, 0
  %3881 = zext i1 %3880 to i8
  store i8 %3881, i8* %BRANCH_TAKEN, align 1
  %3882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %3883 = select i1 %3880, i64 %3873, i64 %3875
  store i64 %3883, i64* %3882, align 8
  store %struct.Memory* %loadMem_416310, %struct.Memory** %MEMORY
  %loadBr_416310 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416310 = icmp eq i8 %loadBr_416310, 1
  br i1 %cmpBr_416310, label %block_.L_416326, label %block_416316

block_416316:                                     ; preds = %block_.L_4162fc
  %loadMem_416316 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3885 = getelementptr inbounds %struct.GPR, %struct.GPR* %3884, i32 0, i32 33
  %3886 = getelementptr inbounds %struct.Reg, %struct.Reg* %3885, i32 0, i32 0
  %PC.i1054 = bitcast %union.anon* %3886 to i64*
  %3887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3888 = getelementptr inbounds %struct.GPR, %struct.GPR* %3887, i32 0, i32 1
  %3889 = getelementptr inbounds %struct.Reg, %struct.Reg* %3888, i32 0, i32 0
  %RAX.i1055 = bitcast %union.anon* %3889 to i64*
  %3890 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3891 = getelementptr inbounds %struct.GPR, %struct.GPR* %3890, i32 0, i32 15
  %3892 = getelementptr inbounds %struct.Reg, %struct.Reg* %3891, i32 0, i32 0
  %RBP.i1056 = bitcast %union.anon* %3892 to i64*
  %3893 = load i64, i64* %RBP.i1056
  %3894 = sub i64 %3893, 40
  %3895 = load i64, i64* %PC.i1054
  %3896 = add i64 %3895, 4
  store i64 %3896, i64* %PC.i1054
  %3897 = inttoptr i64 %3894 to i64*
  %3898 = load i64, i64* %3897
  store i64 %3898, i64* %RAX.i1055, align 8
  store %struct.Memory* %loadMem_416316, %struct.Memory** %MEMORY
  %loadMem_41631a = load %struct.Memory*, %struct.Memory** %MEMORY
  %3899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3900 = getelementptr inbounds %struct.GPR, %struct.GPR* %3899, i32 0, i32 33
  %3901 = getelementptr inbounds %struct.Reg, %struct.Reg* %3900, i32 0, i32 0
  %PC.i1051 = bitcast %union.anon* %3901 to i64*
  %3902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3903 = getelementptr inbounds %struct.GPR, %struct.GPR* %3902, i32 0, i32 1
  %3904 = getelementptr inbounds %struct.Reg, %struct.Reg* %3903, i32 0, i32 0
  %RAX.i1052 = bitcast %union.anon* %3904 to i64*
  %3905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3906 = getelementptr inbounds %struct.GPR, %struct.GPR* %3905, i32 0, i32 5
  %3907 = getelementptr inbounds %struct.Reg, %struct.Reg* %3906, i32 0, i32 0
  %RCX.i1053 = bitcast %union.anon* %3907 to i64*
  %3908 = load i64, i64* %RAX.i1052
  %3909 = load i64, i64* %PC.i1051
  %3910 = add i64 %3909, 2
  store i64 %3910, i64* %PC.i1051
  %3911 = inttoptr i64 %3908 to i32*
  %3912 = load i32, i32* %3911
  %3913 = zext i32 %3912 to i64
  store i64 %3913, i64* %RCX.i1053, align 8
  store %struct.Memory* %loadMem_41631a, %struct.Memory** %MEMORY
  %loadMem_41631c = load %struct.Memory*, %struct.Memory** %MEMORY
  %3914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3915 = getelementptr inbounds %struct.GPR, %struct.GPR* %3914, i32 0, i32 33
  %3916 = getelementptr inbounds %struct.Reg, %struct.Reg* %3915, i32 0, i32 0
  %PC.i1049 = bitcast %union.anon* %3916 to i64*
  %3917 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3918 = getelementptr inbounds %struct.GPR, %struct.GPR* %3917, i32 0, i32 5
  %3919 = getelementptr inbounds %struct.Reg, %struct.Reg* %3918, i32 0, i32 0
  %RCX.i1050 = bitcast %union.anon* %3919 to i64*
  %3920 = load i64, i64* %RCX.i1050
  %3921 = load i64, i64* %PC.i1049
  %3922 = add i64 %3921, 3
  store i64 %3922, i64* %PC.i1049
  %3923 = trunc i64 %3920 to i32
  %3924 = add i32 1, %3923
  %3925 = zext i32 %3924 to i64
  store i64 %3925, i64* %RCX.i1050, align 8
  %3926 = icmp ult i32 %3924, %3923
  %3927 = icmp ult i32 %3924, 1
  %3928 = or i1 %3926, %3927
  %3929 = zext i1 %3928 to i8
  %3930 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %3929, i8* %3930, align 1
  %3931 = and i32 %3924, 255
  %3932 = call i32 @llvm.ctpop.i32(i32 %3931)
  %3933 = trunc i32 %3932 to i8
  %3934 = and i8 %3933, 1
  %3935 = xor i8 %3934, 1
  %3936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %3935, i8* %3936, align 1
  %3937 = xor i64 1, %3920
  %3938 = trunc i64 %3937 to i32
  %3939 = xor i32 %3938, %3924
  %3940 = lshr i32 %3939, 4
  %3941 = trunc i32 %3940 to i8
  %3942 = and i8 %3941, 1
  %3943 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %3942, i8* %3943, align 1
  %3944 = icmp eq i32 %3924, 0
  %3945 = zext i1 %3944 to i8
  %3946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %3945, i8* %3946, align 1
  %3947 = lshr i32 %3924, 31
  %3948 = trunc i32 %3947 to i8
  %3949 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %3948, i8* %3949, align 1
  %3950 = lshr i32 %3923, 31
  %3951 = xor i32 %3947, %3950
  %3952 = add i32 %3951, %3947
  %3953 = icmp eq i32 %3952, 2
  %3954 = zext i1 %3953 to i8
  %3955 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %3954, i8* %3955, align 1
  store %struct.Memory* %loadMem_41631c, %struct.Memory** %MEMORY
  %loadMem_41631f = load %struct.Memory*, %struct.Memory** %MEMORY
  %3956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3957 = getelementptr inbounds %struct.GPR, %struct.GPR* %3956, i32 0, i32 33
  %3958 = getelementptr inbounds %struct.Reg, %struct.Reg* %3957, i32 0, i32 0
  %PC.i1046 = bitcast %union.anon* %3958 to i64*
  %3959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3960 = getelementptr inbounds %struct.GPR, %struct.GPR* %3959, i32 0, i32 5
  %3961 = getelementptr inbounds %struct.Reg, %struct.Reg* %3960, i32 0, i32 0
  %ECX.i1047 = bitcast %union.anon* %3961 to i32*
  %3962 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3963 = getelementptr inbounds %struct.GPR, %struct.GPR* %3962, i32 0, i32 1
  %3964 = getelementptr inbounds %struct.Reg, %struct.Reg* %3963, i32 0, i32 0
  %RAX.i1048 = bitcast %union.anon* %3964 to i64*
  %3965 = load i64, i64* %RAX.i1048
  %3966 = load i32, i32* %ECX.i1047
  %3967 = zext i32 %3966 to i64
  %3968 = load i64, i64* %PC.i1046
  %3969 = add i64 %3968, 2
  store i64 %3969, i64* %PC.i1046
  %3970 = inttoptr i64 %3965 to i32*
  store i32 %3966, i32* %3970
  store %struct.Memory* %loadMem_41631f, %struct.Memory** %MEMORY
  %loadMem_416321 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3971 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3972 = getelementptr inbounds %struct.GPR, %struct.GPR* %3971, i32 0, i32 33
  %3973 = getelementptr inbounds %struct.Reg, %struct.Reg* %3972, i32 0, i32 0
  %PC.i1045 = bitcast %union.anon* %3973 to i64*
  %3974 = load i64, i64* %PC.i1045
  %3975 = add i64 %3974, 622
  %3976 = load i64, i64* %PC.i1045
  %3977 = add i64 %3976, 5
  store i64 %3977, i64* %PC.i1045
  %3978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %3975, i64* %3978, align 8
  store %struct.Memory* %loadMem_416321, %struct.Memory** %MEMORY
  br label %block_.L_41658f

block_.L_416326:                                  ; preds = %block_.L_4162fc
  %loadMem_416326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3980 = getelementptr inbounds %struct.GPR, %struct.GPR* %3979, i32 0, i32 33
  %3981 = getelementptr inbounds %struct.Reg, %struct.Reg* %3980, i32 0, i32 0
  %PC.i1042 = bitcast %union.anon* %3981 to i64*
  %3982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3983 = getelementptr inbounds %struct.GPR, %struct.GPR* %3982, i32 0, i32 1
  %3984 = getelementptr inbounds %struct.Reg, %struct.Reg* %3983, i32 0, i32 0
  %RAX.i1043 = bitcast %union.anon* %3984 to i64*
  %3985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3986 = getelementptr inbounds %struct.GPR, %struct.GPR* %3985, i32 0, i32 15
  %3987 = getelementptr inbounds %struct.Reg, %struct.Reg* %3986, i32 0, i32 0
  %RBP.i1044 = bitcast %union.anon* %3987 to i64*
  %3988 = load i64, i64* %RBP.i1044
  %3989 = sub i64 %3988, 20
  %3990 = load i64, i64* %PC.i1042
  %3991 = add i64 %3990, 3
  store i64 %3991, i64* %PC.i1042
  %3992 = inttoptr i64 %3989 to i32*
  %3993 = load i32, i32* %3992
  %3994 = zext i32 %3993 to i64
  store i64 %3994, i64* %RAX.i1043, align 8
  store %struct.Memory* %loadMem_416326, %struct.Memory** %MEMORY
  %loadMem_416329 = load %struct.Memory*, %struct.Memory** %MEMORY
  %3995 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3996 = getelementptr inbounds %struct.GPR, %struct.GPR* %3995, i32 0, i32 33
  %3997 = getelementptr inbounds %struct.Reg, %struct.Reg* %3996, i32 0, i32 0
  %PC.i1040 = bitcast %union.anon* %3997 to i64*
  %3998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %3999 = getelementptr inbounds %struct.GPR, %struct.GPR* %3998, i32 0, i32 1
  %4000 = getelementptr inbounds %struct.Reg, %struct.Reg* %3999, i32 0, i32 0
  %RAX.i1041 = bitcast %union.anon* %4000 to i64*
  %4001 = load i64, i64* %RAX.i1041
  %4002 = load i64, i64* %PC.i1040
  %4003 = add i64 %4002, 3
  store i64 %4003, i64* %PC.i1040
  %4004 = trunc i64 %4001 to i32
  %4005 = sub i32 %4004, 1
  %4006 = zext i32 %4005 to i64
  store i64 %4006, i64* %RAX.i1041, align 8
  %4007 = icmp ult i32 %4004, 1
  %4008 = zext i1 %4007 to i8
  %4009 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4008, i8* %4009, align 1
  %4010 = and i32 %4005, 255
  %4011 = call i32 @llvm.ctpop.i32(i32 %4010)
  %4012 = trunc i32 %4011 to i8
  %4013 = and i8 %4012, 1
  %4014 = xor i8 %4013, 1
  %4015 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4014, i8* %4015, align 1
  %4016 = xor i64 1, %4001
  %4017 = trunc i64 %4016 to i32
  %4018 = xor i32 %4017, %4005
  %4019 = lshr i32 %4018, 4
  %4020 = trunc i32 %4019 to i8
  %4021 = and i8 %4020, 1
  %4022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4021, i8* %4022, align 1
  %4023 = icmp eq i32 %4005, 0
  %4024 = zext i1 %4023 to i8
  %4025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4024, i8* %4025, align 1
  %4026 = lshr i32 %4005, 31
  %4027 = trunc i32 %4026 to i8
  %4028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4027, i8* %4028, align 1
  %4029 = lshr i32 %4004, 31
  %4030 = xor i32 %4026, %4029
  %4031 = add i32 %4030, %4029
  %4032 = icmp eq i32 %4031, 2
  %4033 = zext i1 %4032 to i8
  %4034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4033, i8* %4034, align 1
  store %struct.Memory* %loadMem_416329, %struct.Memory** %MEMORY
  %loadMem_41632c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4036 = getelementptr inbounds %struct.GPR, %struct.GPR* %4035, i32 0, i32 33
  %4037 = getelementptr inbounds %struct.Reg, %struct.Reg* %4036, i32 0, i32 0
  %PC.i1037 = bitcast %union.anon* %4037 to i64*
  %4038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4039 = getelementptr inbounds %struct.GPR, %struct.GPR* %4038, i32 0, i32 1
  %4040 = getelementptr inbounds %struct.Reg, %struct.Reg* %4039, i32 0, i32 0
  %EAX.i1038 = bitcast %union.anon* %4040 to i32*
  %4041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4042 = getelementptr inbounds %struct.GPR, %struct.GPR* %4041, i32 0, i32 5
  %4043 = getelementptr inbounds %struct.Reg, %struct.Reg* %4042, i32 0, i32 0
  %RCX.i1039 = bitcast %union.anon* %4043 to i64*
  %4044 = load i32, i32* %EAX.i1038
  %4045 = zext i32 %4044 to i64
  %4046 = load i64, i64* %PC.i1037
  %4047 = add i64 %4046, 3
  store i64 %4047, i64* %PC.i1037
  %4048 = shl i64 %4045, 32
  %4049 = ashr exact i64 %4048, 32
  store i64 %4049, i64* %RCX.i1039, align 8
  store %struct.Memory* %loadMem_41632c, %struct.Memory** %MEMORY
  %loadMem_41632f = load %struct.Memory*, %struct.Memory** %MEMORY
  %4050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4051 = getelementptr inbounds %struct.GPR, %struct.GPR* %4050, i32 0, i32 33
  %4052 = getelementptr inbounds %struct.Reg, %struct.Reg* %4051, i32 0, i32 0
  %PC.i1034 = bitcast %union.anon* %4052 to i64*
  %4053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4054 = getelementptr inbounds %struct.GPR, %struct.GPR* %4053, i32 0, i32 1
  %4055 = getelementptr inbounds %struct.Reg, %struct.Reg* %4054, i32 0, i32 0
  %RAX.i1035 = bitcast %union.anon* %4055 to i64*
  %4056 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4057 = getelementptr inbounds %struct.GPR, %struct.GPR* %4056, i32 0, i32 5
  %4058 = getelementptr inbounds %struct.Reg, %struct.Reg* %4057, i32 0, i32 0
  %RCX.i1036 = bitcast %union.anon* %4058 to i64*
  %4059 = load i64, i64* %RCX.i1036
  %4060 = add i64 %4059, 12099168
  %4061 = load i64, i64* %PC.i1034
  %4062 = add i64 %4061, 8
  store i64 %4062, i64* %PC.i1034
  %4063 = inttoptr i64 %4060 to i8*
  %4064 = load i8, i8* %4063
  %4065 = zext i8 %4064 to i64
  store i64 %4065, i64* %RAX.i1035, align 8
  store %struct.Memory* %loadMem_41632f, %struct.Memory** %MEMORY
  %loadMem_416337 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4066 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4067 = getelementptr inbounds %struct.GPR, %struct.GPR* %4066, i32 0, i32 33
  %4068 = getelementptr inbounds %struct.Reg, %struct.Reg* %4067, i32 0, i32 0
  %PC.i1032 = bitcast %union.anon* %4068 to i64*
  %4069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4070 = getelementptr inbounds %struct.GPR, %struct.GPR* %4069, i32 0, i32 1
  %4071 = getelementptr inbounds %struct.Reg, %struct.Reg* %4070, i32 0, i32 0
  %EAX.i1033 = bitcast %union.anon* %4071 to i32*
  %4072 = load i32, i32* %EAX.i1033
  %4073 = zext i32 %4072 to i64
  %4074 = load i64, i64* %PC.i1032
  %4075 = add i64 %4074, 3
  store i64 %4075, i64* %PC.i1032
  %4076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4076, align 1
  %4077 = and i32 %4072, 255
  %4078 = call i32 @llvm.ctpop.i32(i32 %4077)
  %4079 = trunc i32 %4078 to i8
  %4080 = and i8 %4079, 1
  %4081 = xor i8 %4080, 1
  %4082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4081, i8* %4082, align 1
  %4083 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4083, align 1
  %4084 = icmp eq i32 %4072, 0
  %4085 = zext i1 %4084 to i8
  %4086 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4085, i8* %4086, align 1
  %4087 = lshr i32 %4072, 31
  %4088 = trunc i32 %4087 to i8
  %4089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4088, i8* %4089, align 1
  %4090 = lshr i32 %4072, 31
  %4091 = xor i32 %4087, %4090
  %4092 = add i32 %4091, %4090
  %4093 = icmp eq i32 %4092, 2
  %4094 = zext i1 %4093 to i8
  %4095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4094, i8* %4095, align 1
  store %struct.Memory* %loadMem_416337, %struct.Memory** %MEMORY
  %loadMem_41633a = load %struct.Memory*, %struct.Memory** %MEMORY
  %4096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4097 = getelementptr inbounds %struct.GPR, %struct.GPR* %4096, i32 0, i32 33
  %4098 = getelementptr inbounds %struct.Reg, %struct.Reg* %4097, i32 0, i32 0
  %PC.i1031 = bitcast %union.anon* %4098 to i64*
  %4099 = load i64, i64* %PC.i1031
  %4100 = add i64 %4099, 22
  %4101 = load i64, i64* %PC.i1031
  %4102 = add i64 %4101, 6
  %4103 = load i64, i64* %PC.i1031
  %4104 = add i64 %4103, 6
  store i64 %4104, i64* %PC.i1031
  %4105 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4106 = load i8, i8* %4105, align 1
  %4107 = icmp eq i8 %4106, 0
  %4108 = zext i1 %4107 to i8
  store i8 %4108, i8* %BRANCH_TAKEN, align 1
  %4109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4110 = select i1 %4107, i64 %4100, i64 %4102
  store i64 %4110, i64* %4109, align 8
  store %struct.Memory* %loadMem_41633a, %struct.Memory** %MEMORY
  %loadBr_41633a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41633a = icmp eq i8 %loadBr_41633a, 1
  br i1 %cmpBr_41633a, label %block_.L_416350, label %block_416340

block_416340:                                     ; preds = %block_.L_416326
  %loadMem_416340 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4111 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4112 = getelementptr inbounds %struct.GPR, %struct.GPR* %4111, i32 0, i32 33
  %4113 = getelementptr inbounds %struct.Reg, %struct.Reg* %4112, i32 0, i32 0
  %PC.i1028 = bitcast %union.anon* %4113 to i64*
  %4114 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4115 = getelementptr inbounds %struct.GPR, %struct.GPR* %4114, i32 0, i32 1
  %4116 = getelementptr inbounds %struct.Reg, %struct.Reg* %4115, i32 0, i32 0
  %RAX.i1029 = bitcast %union.anon* %4116 to i64*
  %4117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4118 = getelementptr inbounds %struct.GPR, %struct.GPR* %4117, i32 0, i32 15
  %4119 = getelementptr inbounds %struct.Reg, %struct.Reg* %4118, i32 0, i32 0
  %RBP.i1030 = bitcast %union.anon* %4119 to i64*
  %4120 = load i64, i64* %RBP.i1030
  %4121 = sub i64 %4120, 96
  %4122 = load i64, i64* %PC.i1028
  %4123 = add i64 %4122, 4
  store i64 %4123, i64* %PC.i1028
  %4124 = inttoptr i64 %4121 to i64*
  %4125 = load i64, i64* %4124
  store i64 %4125, i64* %RAX.i1029, align 8
  store %struct.Memory* %loadMem_416340, %struct.Memory** %MEMORY
  %loadMem_416344 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4127 = getelementptr inbounds %struct.GPR, %struct.GPR* %4126, i32 0, i32 33
  %4128 = getelementptr inbounds %struct.Reg, %struct.Reg* %4127, i32 0, i32 0
  %PC.i1025 = bitcast %union.anon* %4128 to i64*
  %4129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4130 = getelementptr inbounds %struct.GPR, %struct.GPR* %4129, i32 0, i32 1
  %4131 = getelementptr inbounds %struct.Reg, %struct.Reg* %4130, i32 0, i32 0
  %RAX.i1026 = bitcast %union.anon* %4131 to i64*
  %4132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4133 = getelementptr inbounds %struct.GPR, %struct.GPR* %4132, i32 0, i32 5
  %4134 = getelementptr inbounds %struct.Reg, %struct.Reg* %4133, i32 0, i32 0
  %RCX.i1027 = bitcast %union.anon* %4134 to i64*
  %4135 = load i64, i64* %RAX.i1026
  %4136 = load i64, i64* %PC.i1025
  %4137 = add i64 %4136, 2
  store i64 %4137, i64* %PC.i1025
  %4138 = inttoptr i64 %4135 to i32*
  %4139 = load i32, i32* %4138
  %4140 = zext i32 %4139 to i64
  store i64 %4140, i64* %RCX.i1027, align 8
  store %struct.Memory* %loadMem_416344, %struct.Memory** %MEMORY
  %loadMem_416346 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4142 = getelementptr inbounds %struct.GPR, %struct.GPR* %4141, i32 0, i32 33
  %4143 = getelementptr inbounds %struct.Reg, %struct.Reg* %4142, i32 0, i32 0
  %PC.i1023 = bitcast %union.anon* %4143 to i64*
  %4144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4145 = getelementptr inbounds %struct.GPR, %struct.GPR* %4144, i32 0, i32 5
  %4146 = getelementptr inbounds %struct.Reg, %struct.Reg* %4145, i32 0, i32 0
  %RCX.i1024 = bitcast %union.anon* %4146 to i64*
  %4147 = load i64, i64* %RCX.i1024
  %4148 = load i64, i64* %PC.i1023
  %4149 = add i64 %4148, 3
  store i64 %4149, i64* %PC.i1023
  %4150 = trunc i64 %4147 to i32
  %4151 = add i32 1, %4150
  %4152 = zext i32 %4151 to i64
  store i64 %4152, i64* %RCX.i1024, align 8
  %4153 = icmp ult i32 %4151, %4150
  %4154 = icmp ult i32 %4151, 1
  %4155 = or i1 %4153, %4154
  %4156 = zext i1 %4155 to i8
  %4157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4156, i8* %4157, align 1
  %4158 = and i32 %4151, 255
  %4159 = call i32 @llvm.ctpop.i32(i32 %4158)
  %4160 = trunc i32 %4159 to i8
  %4161 = and i8 %4160, 1
  %4162 = xor i8 %4161, 1
  %4163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4162, i8* %4163, align 1
  %4164 = xor i64 1, %4147
  %4165 = trunc i64 %4164 to i32
  %4166 = xor i32 %4165, %4151
  %4167 = lshr i32 %4166, 4
  %4168 = trunc i32 %4167 to i8
  %4169 = and i8 %4168, 1
  %4170 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4169, i8* %4170, align 1
  %4171 = icmp eq i32 %4151, 0
  %4172 = zext i1 %4171 to i8
  %4173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4172, i8* %4173, align 1
  %4174 = lshr i32 %4151, 31
  %4175 = trunc i32 %4174 to i8
  %4176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4175, i8* %4176, align 1
  %4177 = lshr i32 %4150, 31
  %4178 = xor i32 %4174, %4177
  %4179 = add i32 %4178, %4174
  %4180 = icmp eq i32 %4179, 2
  %4181 = zext i1 %4180 to i8
  %4182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4181, i8* %4182, align 1
  store %struct.Memory* %loadMem_416346, %struct.Memory** %MEMORY
  %loadMem_416349 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4184 = getelementptr inbounds %struct.GPR, %struct.GPR* %4183, i32 0, i32 33
  %4185 = getelementptr inbounds %struct.Reg, %struct.Reg* %4184, i32 0, i32 0
  %PC.i1020 = bitcast %union.anon* %4185 to i64*
  %4186 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4187 = getelementptr inbounds %struct.GPR, %struct.GPR* %4186, i32 0, i32 5
  %4188 = getelementptr inbounds %struct.Reg, %struct.Reg* %4187, i32 0, i32 0
  %ECX.i1021 = bitcast %union.anon* %4188 to i32*
  %4189 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4190 = getelementptr inbounds %struct.GPR, %struct.GPR* %4189, i32 0, i32 1
  %4191 = getelementptr inbounds %struct.Reg, %struct.Reg* %4190, i32 0, i32 0
  %RAX.i1022 = bitcast %union.anon* %4191 to i64*
  %4192 = load i64, i64* %RAX.i1022
  %4193 = load i32, i32* %ECX.i1021
  %4194 = zext i32 %4193 to i64
  %4195 = load i64, i64* %PC.i1020
  %4196 = add i64 %4195, 2
  store i64 %4196, i64* %PC.i1020
  %4197 = inttoptr i64 %4192 to i32*
  store i32 %4193, i32* %4197
  store %struct.Memory* %loadMem_416349, %struct.Memory** %MEMORY
  %loadMem_41634b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4199 = getelementptr inbounds %struct.GPR, %struct.GPR* %4198, i32 0, i32 33
  %4200 = getelementptr inbounds %struct.Reg, %struct.Reg* %4199, i32 0, i32 0
  %PC.i1019 = bitcast %union.anon* %4200 to i64*
  %4201 = load i64, i64* %PC.i1019
  %4202 = add i64 %4201, 575
  %4203 = load i64, i64* %PC.i1019
  %4204 = add i64 %4203, 5
  store i64 %4204, i64* %PC.i1019
  %4205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %4202, i64* %4205, align 8
  store %struct.Memory* %loadMem_41634b, %struct.Memory** %MEMORY
  br label %block_.L_41658a

block_.L_416350:                                  ; preds = %block_.L_416326
  %loadMem_416350 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4206 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4207 = getelementptr inbounds %struct.GPR, %struct.GPR* %4206, i32 0, i32 33
  %4208 = getelementptr inbounds %struct.Reg, %struct.Reg* %4207, i32 0, i32 0
  %PC.i1016 = bitcast %union.anon* %4208 to i64*
  %4209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4210 = getelementptr inbounds %struct.GPR, %struct.GPR* %4209, i32 0, i32 1
  %4211 = getelementptr inbounds %struct.Reg, %struct.Reg* %4210, i32 0, i32 0
  %RAX.i1017 = bitcast %union.anon* %4211 to i64*
  %4212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4213 = getelementptr inbounds %struct.GPR, %struct.GPR* %4212, i32 0, i32 15
  %4214 = getelementptr inbounds %struct.Reg, %struct.Reg* %4213, i32 0, i32 0
  %RBP.i1018 = bitcast %union.anon* %4214 to i64*
  %4215 = load i64, i64* %RBP.i1018
  %4216 = sub i64 %4215, 20
  %4217 = load i64, i64* %PC.i1016
  %4218 = add i64 %4217, 3
  store i64 %4218, i64* %PC.i1016
  %4219 = inttoptr i64 %4216 to i32*
  %4220 = load i32, i32* %4219
  %4221 = zext i32 %4220 to i64
  store i64 %4221, i64* %RAX.i1017, align 8
  store %struct.Memory* %loadMem_416350, %struct.Memory** %MEMORY
  %loadMem_416353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4223 = getelementptr inbounds %struct.GPR, %struct.GPR* %4222, i32 0, i32 33
  %4224 = getelementptr inbounds %struct.Reg, %struct.Reg* %4223, i32 0, i32 0
  %PC.i1014 = bitcast %union.anon* %4224 to i64*
  %4225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4226 = getelementptr inbounds %struct.GPR, %struct.GPR* %4225, i32 0, i32 1
  %4227 = getelementptr inbounds %struct.Reg, %struct.Reg* %4226, i32 0, i32 0
  %RAX.i1015 = bitcast %union.anon* %4227 to i64*
  %4228 = load i64, i64* %RAX.i1015
  %4229 = load i64, i64* %PC.i1014
  %4230 = add i64 %4229, 3
  store i64 %4230, i64* %PC.i1014
  %4231 = trunc i64 %4228 to i32
  %4232 = sub i32 %4231, 1
  %4233 = zext i32 %4232 to i64
  store i64 %4233, i64* %RAX.i1015, align 8
  %4234 = icmp ult i32 %4231, 1
  %4235 = zext i1 %4234 to i8
  %4236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4235, i8* %4236, align 1
  %4237 = and i32 %4232, 255
  %4238 = call i32 @llvm.ctpop.i32(i32 %4237)
  %4239 = trunc i32 %4238 to i8
  %4240 = and i8 %4239, 1
  %4241 = xor i8 %4240, 1
  %4242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4241, i8* %4242, align 1
  %4243 = xor i64 1, %4228
  %4244 = trunc i64 %4243 to i32
  %4245 = xor i32 %4244, %4232
  %4246 = lshr i32 %4245, 4
  %4247 = trunc i32 %4246 to i8
  %4248 = and i8 %4247, 1
  %4249 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4248, i8* %4249, align 1
  %4250 = icmp eq i32 %4232, 0
  %4251 = zext i1 %4250 to i8
  %4252 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4251, i8* %4252, align 1
  %4253 = lshr i32 %4232, 31
  %4254 = trunc i32 %4253 to i8
  %4255 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4254, i8* %4255, align 1
  %4256 = lshr i32 %4231, 31
  %4257 = xor i32 %4253, %4256
  %4258 = add i32 %4257, %4256
  %4259 = icmp eq i32 %4258, 2
  %4260 = zext i1 %4259 to i8
  %4261 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4260, i8* %4261, align 1
  store %struct.Memory* %loadMem_416353, %struct.Memory** %MEMORY
  %loadMem_416356 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4262 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4263 = getelementptr inbounds %struct.GPR, %struct.GPR* %4262, i32 0, i32 33
  %4264 = getelementptr inbounds %struct.Reg, %struct.Reg* %4263, i32 0, i32 0
  %PC.i1011 = bitcast %union.anon* %4264 to i64*
  %4265 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4266 = getelementptr inbounds %struct.GPR, %struct.GPR* %4265, i32 0, i32 1
  %4267 = getelementptr inbounds %struct.Reg, %struct.Reg* %4266, i32 0, i32 0
  %EAX.i1012 = bitcast %union.anon* %4267 to i32*
  %4268 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4269 = getelementptr inbounds %struct.GPR, %struct.GPR* %4268, i32 0, i32 5
  %4270 = getelementptr inbounds %struct.Reg, %struct.Reg* %4269, i32 0, i32 0
  %RCX.i1013 = bitcast %union.anon* %4270 to i64*
  %4271 = load i32, i32* %EAX.i1012
  %4272 = zext i32 %4271 to i64
  %4273 = load i64, i64* %PC.i1011
  %4274 = add i64 %4273, 3
  store i64 %4274, i64* %PC.i1011
  %4275 = shl i64 %4272, 32
  %4276 = ashr exact i64 %4275, 32
  store i64 %4276, i64* %RCX.i1013, align 8
  store %struct.Memory* %loadMem_416356, %struct.Memory** %MEMORY
  %loadMem_416359 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4278 = getelementptr inbounds %struct.GPR, %struct.GPR* %4277, i32 0, i32 33
  %4279 = getelementptr inbounds %struct.Reg, %struct.Reg* %4278, i32 0, i32 0
  %PC.i1008 = bitcast %union.anon* %4279 to i64*
  %4280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4281 = getelementptr inbounds %struct.GPR, %struct.GPR* %4280, i32 0, i32 1
  %4282 = getelementptr inbounds %struct.Reg, %struct.Reg* %4281, i32 0, i32 0
  %RAX.i1009 = bitcast %union.anon* %4282 to i64*
  %4283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4284 = getelementptr inbounds %struct.GPR, %struct.GPR* %4283, i32 0, i32 5
  %4285 = getelementptr inbounds %struct.Reg, %struct.Reg* %4284, i32 0, i32 0
  %RCX.i1010 = bitcast %union.anon* %4285 to i64*
  %4286 = load i64, i64* %RCX.i1010
  %4287 = mul i64 %4286, 4
  %4288 = add i64 %4287, 11187184
  %4289 = load i64, i64* %PC.i1008
  %4290 = add i64 %4289, 7
  store i64 %4290, i64* %PC.i1008
  %4291 = inttoptr i64 %4288 to i32*
  %4292 = load i32, i32* %4291
  %4293 = zext i32 %4292 to i64
  store i64 %4293, i64* %RAX.i1009, align 8
  store %struct.Memory* %loadMem_416359, %struct.Memory** %MEMORY
  %loadMem_416360 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4295 = getelementptr inbounds %struct.GPR, %struct.GPR* %4294, i32 0, i32 33
  %4296 = getelementptr inbounds %struct.Reg, %struct.Reg* %4295, i32 0, i32 0
  %PC.i1005 = bitcast %union.anon* %4296 to i64*
  %4297 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4298 = getelementptr inbounds %struct.GPR, %struct.GPR* %4297, i32 0, i32 1
  %4299 = getelementptr inbounds %struct.Reg, %struct.Reg* %4298, i32 0, i32 0
  %EAX.i1006 = bitcast %union.anon* %4299 to i32*
  %4300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4301 = getelementptr inbounds %struct.GPR, %struct.GPR* %4300, i32 0, i32 15
  %4302 = getelementptr inbounds %struct.Reg, %struct.Reg* %4301, i32 0, i32 0
  %RBP.i1007 = bitcast %union.anon* %4302 to i64*
  %4303 = load i64, i64* %RBP.i1007
  %4304 = sub i64 %4303, 116
  %4305 = load i32, i32* %EAX.i1006
  %4306 = zext i32 %4305 to i64
  %4307 = load i64, i64* %PC.i1005
  %4308 = add i64 %4307, 3
  store i64 %4308, i64* %PC.i1005
  %4309 = inttoptr i64 %4304 to i32*
  store i32 %4305, i32* %4309
  store %struct.Memory* %loadMem_416360, %struct.Memory** %MEMORY
  %loadMem_416363 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4310 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4311 = getelementptr inbounds %struct.GPR, %struct.GPR* %4310, i32 0, i32 33
  %4312 = getelementptr inbounds %struct.Reg, %struct.Reg* %4311, i32 0, i32 0
  %PC.i1002 = bitcast %union.anon* %4312 to i64*
  %4313 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4314 = getelementptr inbounds %struct.GPR, %struct.GPR* %4313, i32 0, i32 5
  %4315 = getelementptr inbounds %struct.Reg, %struct.Reg* %4314, i32 0, i32 0
  %RCX.i1003 = bitcast %union.anon* %4315 to i64*
  %4316 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4317 = getelementptr inbounds %struct.GPR, %struct.GPR* %4316, i32 0, i32 15
  %4318 = getelementptr inbounds %struct.Reg, %struct.Reg* %4317, i32 0, i32 0
  %RBP.i1004 = bitcast %union.anon* %4318 to i64*
  %4319 = load i64, i64* %RBP.i1004
  %4320 = sub i64 %4319, 28
  %4321 = load i64, i64* %PC.i1002
  %4322 = add i64 %4321, 4
  store i64 %4322, i64* %PC.i1002
  %4323 = inttoptr i64 %4320 to i32*
  %4324 = load i32, i32* %4323
  %4325 = sext i32 %4324 to i64
  store i64 %4325, i64* %RCX.i1003, align 8
  store %struct.Memory* %loadMem_416363, %struct.Memory** %MEMORY
  %loadMem_416367 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4327 = getelementptr inbounds %struct.GPR, %struct.GPR* %4326, i32 0, i32 33
  %4328 = getelementptr inbounds %struct.Reg, %struct.Reg* %4327, i32 0, i32 0
  %PC.i999 = bitcast %union.anon* %4328 to i64*
  %4329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4330 = getelementptr inbounds %struct.GPR, %struct.GPR* %4329, i32 0, i32 1
  %4331 = getelementptr inbounds %struct.Reg, %struct.Reg* %4330, i32 0, i32 0
  %RAX.i1000 = bitcast %union.anon* %4331 to i64*
  %4332 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4333 = getelementptr inbounds %struct.GPR, %struct.GPR* %4332, i32 0, i32 5
  %4334 = getelementptr inbounds %struct.Reg, %struct.Reg* %4333, i32 0, i32 0
  %RCX.i1001 = bitcast %union.anon* %4334 to i64*
  %4335 = load i64, i64* %RCX.i1001
  %4336 = mul i64 %4335, 4
  %4337 = add i64 %4336, 11187184
  %4338 = load i64, i64* %PC.i999
  %4339 = add i64 %4338, 7
  store i64 %4339, i64* %PC.i999
  %4340 = inttoptr i64 %4337 to i32*
  %4341 = load i32, i32* %4340
  %4342 = zext i32 %4341 to i64
  store i64 %4342, i64* %RAX.i1000, align 8
  store %struct.Memory* %loadMem_416367, %struct.Memory** %MEMORY
  %loadMem_41636e = load %struct.Memory*, %struct.Memory** %MEMORY
  %4343 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4344 = getelementptr inbounds %struct.GPR, %struct.GPR* %4343, i32 0, i32 33
  %4345 = getelementptr inbounds %struct.Reg, %struct.Reg* %4344, i32 0, i32 0
  %PC.i996 = bitcast %union.anon* %4345 to i64*
  %4346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4347 = getelementptr inbounds %struct.GPR, %struct.GPR* %4346, i32 0, i32 1
  %4348 = getelementptr inbounds %struct.Reg, %struct.Reg* %4347, i32 0, i32 0
  %EAX.i997 = bitcast %union.anon* %4348 to i32*
  %4349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4350 = getelementptr inbounds %struct.GPR, %struct.GPR* %4349, i32 0, i32 15
  %4351 = getelementptr inbounds %struct.Reg, %struct.Reg* %4350, i32 0, i32 0
  %RBP.i998 = bitcast %union.anon* %4351 to i64*
  %4352 = load i32, i32* %EAX.i997
  %4353 = zext i32 %4352 to i64
  %4354 = load i64, i64* %RBP.i998
  %4355 = sub i64 %4354, 116
  %4356 = load i64, i64* %PC.i996
  %4357 = add i64 %4356, 3
  store i64 %4357, i64* %PC.i996
  %4358 = inttoptr i64 %4355 to i32*
  %4359 = load i32, i32* %4358
  %4360 = sub i32 %4352, %4359
  %4361 = icmp ult i32 %4352, %4359
  %4362 = zext i1 %4361 to i8
  %4363 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4362, i8* %4363, align 1
  %4364 = and i32 %4360, 255
  %4365 = call i32 @llvm.ctpop.i32(i32 %4364)
  %4366 = trunc i32 %4365 to i8
  %4367 = and i8 %4366, 1
  %4368 = xor i8 %4367, 1
  %4369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4368, i8* %4369, align 1
  %4370 = xor i32 %4359, %4352
  %4371 = xor i32 %4370, %4360
  %4372 = lshr i32 %4371, 4
  %4373 = trunc i32 %4372 to i8
  %4374 = and i8 %4373, 1
  %4375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4374, i8* %4375, align 1
  %4376 = icmp eq i32 %4360, 0
  %4377 = zext i1 %4376 to i8
  %4378 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4377, i8* %4378, align 1
  %4379 = lshr i32 %4360, 31
  %4380 = trunc i32 %4379 to i8
  %4381 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4380, i8* %4381, align 1
  %4382 = lshr i32 %4352, 31
  %4383 = lshr i32 %4359, 31
  %4384 = xor i32 %4383, %4382
  %4385 = xor i32 %4379, %4382
  %4386 = add i32 %4385, %4384
  %4387 = icmp eq i32 %4386, 2
  %4388 = zext i1 %4387 to i8
  %4389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4388, i8* %4389, align 1
  store %struct.Memory* %loadMem_41636e, %struct.Memory** %MEMORY
  %loadMem_416371 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4391 = getelementptr inbounds %struct.GPR, %struct.GPR* %4390, i32 0, i32 33
  %4392 = getelementptr inbounds %struct.Reg, %struct.Reg* %4391, i32 0, i32 0
  %PC.i995 = bitcast %union.anon* %4392 to i64*
  %4393 = load i64, i64* %PC.i995
  %4394 = add i64 %4393, 17
  %4395 = load i64, i64* %PC.i995
  %4396 = add i64 %4395, 6
  %4397 = load i64, i64* %PC.i995
  %4398 = add i64 %4397, 6
  store i64 %4398, i64* %PC.i995
  %4399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4400 = load i8, i8* %4399, align 1
  %4401 = icmp eq i8 %4400, 0
  %4402 = zext i1 %4401 to i8
  store i8 %4402, i8* %BRANCH_TAKEN, align 1
  %4403 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4404 = select i1 %4401, i64 %4394, i64 %4396
  store i64 %4404, i64* %4403, align 8
  store %struct.Memory* %loadMem_416371, %struct.Memory** %MEMORY
  %loadBr_416371 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416371 = icmp eq i8 %loadBr_416371, 1
  br i1 %cmpBr_416371, label %block_.L_416382, label %block_416377

block_416377:                                     ; preds = %block_.L_416350
  %loadMem_416377 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4405 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4406 = getelementptr inbounds %struct.GPR, %struct.GPR* %4405, i32 0, i32 33
  %4407 = getelementptr inbounds %struct.Reg, %struct.Reg* %4406, i32 0, i32 0
  %PC.i992 = bitcast %union.anon* %4407 to i64*
  %4408 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4409 = getelementptr inbounds %struct.GPR, %struct.GPR* %4408, i32 0, i32 1
  %4410 = getelementptr inbounds %struct.Reg, %struct.Reg* %4409, i32 0, i32 0
  %RAX.i993 = bitcast %union.anon* %4410 to i64*
  %4411 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4412 = getelementptr inbounds %struct.GPR, %struct.GPR* %4411, i32 0, i32 15
  %4413 = getelementptr inbounds %struct.Reg, %struct.Reg* %4412, i32 0, i32 0
  %RBP.i994 = bitcast %union.anon* %4413 to i64*
  %4414 = load i64, i64* %RBP.i994
  %4415 = sub i64 %4414, 48
  %4416 = load i64, i64* %PC.i992
  %4417 = add i64 %4416, 4
  store i64 %4417, i64* %PC.i992
  %4418 = inttoptr i64 %4415 to i64*
  %4419 = load i64, i64* %4418
  store i64 %4419, i64* %RAX.i993, align 8
  store %struct.Memory* %loadMem_416377, %struct.Memory** %MEMORY
  %loadMem_41637b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4420 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4421 = getelementptr inbounds %struct.GPR, %struct.GPR* %4420, i32 0, i32 33
  %4422 = getelementptr inbounds %struct.Reg, %struct.Reg* %4421, i32 0, i32 0
  %PC.i989 = bitcast %union.anon* %4422 to i64*
  %4423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4424 = getelementptr inbounds %struct.GPR, %struct.GPR* %4423, i32 0, i32 1
  %4425 = getelementptr inbounds %struct.Reg, %struct.Reg* %4424, i32 0, i32 0
  %RAX.i990 = bitcast %union.anon* %4425 to i64*
  %4426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4427 = getelementptr inbounds %struct.GPR, %struct.GPR* %4426, i32 0, i32 5
  %4428 = getelementptr inbounds %struct.Reg, %struct.Reg* %4427, i32 0, i32 0
  %RCX.i991 = bitcast %union.anon* %4428 to i64*
  %4429 = load i64, i64* %RAX.i990
  %4430 = load i64, i64* %PC.i989
  %4431 = add i64 %4430, 2
  store i64 %4431, i64* %PC.i989
  %4432 = inttoptr i64 %4429 to i32*
  %4433 = load i32, i32* %4432
  %4434 = zext i32 %4433 to i64
  store i64 %4434, i64* %RCX.i991, align 8
  store %struct.Memory* %loadMem_41637b, %struct.Memory** %MEMORY
  %loadMem_41637d = load %struct.Memory*, %struct.Memory** %MEMORY
  %4435 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4436 = getelementptr inbounds %struct.GPR, %struct.GPR* %4435, i32 0, i32 33
  %4437 = getelementptr inbounds %struct.Reg, %struct.Reg* %4436, i32 0, i32 0
  %PC.i987 = bitcast %union.anon* %4437 to i64*
  %4438 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4439 = getelementptr inbounds %struct.GPR, %struct.GPR* %4438, i32 0, i32 5
  %4440 = getelementptr inbounds %struct.Reg, %struct.Reg* %4439, i32 0, i32 0
  %RCX.i988 = bitcast %union.anon* %4440 to i64*
  %4441 = load i64, i64* %RCX.i988
  %4442 = load i64, i64* %PC.i987
  %4443 = add i64 %4442, 3
  store i64 %4443, i64* %PC.i987
  %4444 = trunc i64 %4441 to i32
  %4445 = add i32 1, %4444
  %4446 = zext i32 %4445 to i64
  store i64 %4446, i64* %RCX.i988, align 8
  %4447 = icmp ult i32 %4445, %4444
  %4448 = icmp ult i32 %4445, 1
  %4449 = or i1 %4447, %4448
  %4450 = zext i1 %4449 to i8
  %4451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4450, i8* %4451, align 1
  %4452 = and i32 %4445, 255
  %4453 = call i32 @llvm.ctpop.i32(i32 %4452)
  %4454 = trunc i32 %4453 to i8
  %4455 = and i8 %4454, 1
  %4456 = xor i8 %4455, 1
  %4457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4456, i8* %4457, align 1
  %4458 = xor i64 1, %4441
  %4459 = trunc i64 %4458 to i32
  %4460 = xor i32 %4459, %4445
  %4461 = lshr i32 %4460, 4
  %4462 = trunc i32 %4461 to i8
  %4463 = and i8 %4462, 1
  %4464 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4463, i8* %4464, align 1
  %4465 = icmp eq i32 %4445, 0
  %4466 = zext i1 %4465 to i8
  %4467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4466, i8* %4467, align 1
  %4468 = lshr i32 %4445, 31
  %4469 = trunc i32 %4468 to i8
  %4470 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4469, i8* %4470, align 1
  %4471 = lshr i32 %4444, 31
  %4472 = xor i32 %4468, %4471
  %4473 = add i32 %4472, %4468
  %4474 = icmp eq i32 %4473, 2
  %4475 = zext i1 %4474 to i8
  %4476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4475, i8* %4476, align 1
  store %struct.Memory* %loadMem_41637d, %struct.Memory** %MEMORY
  %loadMem_416380 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4478 = getelementptr inbounds %struct.GPR, %struct.GPR* %4477, i32 0, i32 33
  %4479 = getelementptr inbounds %struct.Reg, %struct.Reg* %4478, i32 0, i32 0
  %PC.i984 = bitcast %union.anon* %4479 to i64*
  %4480 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4481 = getelementptr inbounds %struct.GPR, %struct.GPR* %4480, i32 0, i32 5
  %4482 = getelementptr inbounds %struct.Reg, %struct.Reg* %4481, i32 0, i32 0
  %ECX.i985 = bitcast %union.anon* %4482 to i32*
  %4483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4484 = getelementptr inbounds %struct.GPR, %struct.GPR* %4483, i32 0, i32 1
  %4485 = getelementptr inbounds %struct.Reg, %struct.Reg* %4484, i32 0, i32 0
  %RAX.i986 = bitcast %union.anon* %4485 to i64*
  %4486 = load i64, i64* %RAX.i986
  %4487 = load i32, i32* %ECX.i985
  %4488 = zext i32 %4487 to i64
  %4489 = load i64, i64* %PC.i984
  %4490 = add i64 %4489, 2
  store i64 %4490, i64* %PC.i984
  %4491 = inttoptr i64 %4486 to i32*
  store i32 %4487, i32* %4491
  store %struct.Memory* %loadMem_416380, %struct.Memory** %MEMORY
  br label %block_.L_416382

block_.L_416382:                                  ; preds = %block_416377, %block_.L_416350
  %loadMem_416382 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4492 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4493 = getelementptr inbounds %struct.GPR, %struct.GPR* %4492, i32 0, i32 33
  %4494 = getelementptr inbounds %struct.Reg, %struct.Reg* %4493, i32 0, i32 0
  %PC.i981 = bitcast %union.anon* %4494 to i64*
  %4495 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4496 = getelementptr inbounds %struct.GPR, %struct.GPR* %4495, i32 0, i32 1
  %4497 = getelementptr inbounds %struct.Reg, %struct.Reg* %4496, i32 0, i32 0
  %RAX.i982 = bitcast %union.anon* %4497 to i64*
  %4498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4499 = getelementptr inbounds %struct.GPR, %struct.GPR* %4498, i32 0, i32 15
  %4500 = getelementptr inbounds %struct.Reg, %struct.Reg* %4499, i32 0, i32 0
  %RBP.i983 = bitcast %union.anon* %4500 to i64*
  %4501 = load i64, i64* %RBP.i983
  %4502 = sub i64 %4501, 20
  %4503 = load i64, i64* %PC.i981
  %4504 = add i64 %4503, 3
  store i64 %4504, i64* %PC.i981
  %4505 = inttoptr i64 %4502 to i32*
  %4506 = load i32, i32* %4505
  %4507 = zext i32 %4506 to i64
  store i64 %4507, i64* %RAX.i982, align 8
  store %struct.Memory* %loadMem_416382, %struct.Memory** %MEMORY
  %loadMem_416385 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4508 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4509 = getelementptr inbounds %struct.GPR, %struct.GPR* %4508, i32 0, i32 33
  %4510 = getelementptr inbounds %struct.Reg, %struct.Reg* %4509, i32 0, i32 0
  %PC.i979 = bitcast %union.anon* %4510 to i64*
  %4511 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4512 = getelementptr inbounds %struct.GPR, %struct.GPR* %4511, i32 0, i32 1
  %4513 = getelementptr inbounds %struct.Reg, %struct.Reg* %4512, i32 0, i32 0
  %RAX.i980 = bitcast %union.anon* %4513 to i64*
  %4514 = load i64, i64* %RAX.i980
  %4515 = load i64, i64* %PC.i979
  %4516 = add i64 %4515, 3
  store i64 %4516, i64* %PC.i979
  %4517 = trunc i64 %4514 to i32
  %4518 = sub i32 %4517, 1
  %4519 = zext i32 %4518 to i64
  store i64 %4519, i64* %RAX.i980, align 8
  %4520 = icmp ult i32 %4517, 1
  %4521 = zext i1 %4520 to i8
  %4522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4521, i8* %4522, align 1
  %4523 = and i32 %4518, 255
  %4524 = call i32 @llvm.ctpop.i32(i32 %4523)
  %4525 = trunc i32 %4524 to i8
  %4526 = and i8 %4525, 1
  %4527 = xor i8 %4526, 1
  %4528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4527, i8* %4528, align 1
  %4529 = xor i64 1, %4514
  %4530 = trunc i64 %4529 to i32
  %4531 = xor i32 %4530, %4518
  %4532 = lshr i32 %4531, 4
  %4533 = trunc i32 %4532 to i8
  %4534 = and i8 %4533, 1
  %4535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4534, i8* %4535, align 1
  %4536 = icmp eq i32 %4518, 0
  %4537 = zext i1 %4536 to i8
  %4538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4537, i8* %4538, align 1
  %4539 = lshr i32 %4518, 31
  %4540 = trunc i32 %4539 to i8
  %4541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4540, i8* %4541, align 1
  %4542 = lshr i32 %4517, 31
  %4543 = xor i32 %4539, %4542
  %4544 = add i32 %4543, %4542
  %4545 = icmp eq i32 %4544, 2
  %4546 = zext i1 %4545 to i8
  %4547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4546, i8* %4547, align 1
  store %struct.Memory* %loadMem_416385, %struct.Memory** %MEMORY
  %loadMem_416388 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4549 = getelementptr inbounds %struct.GPR, %struct.GPR* %4548, i32 0, i32 33
  %4550 = getelementptr inbounds %struct.Reg, %struct.Reg* %4549, i32 0, i32 0
  %PC.i976 = bitcast %union.anon* %4550 to i64*
  %4551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4552 = getelementptr inbounds %struct.GPR, %struct.GPR* %4551, i32 0, i32 1
  %4553 = getelementptr inbounds %struct.Reg, %struct.Reg* %4552, i32 0, i32 0
  %EAX.i977 = bitcast %union.anon* %4553 to i32*
  %4554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4555 = getelementptr inbounds %struct.GPR, %struct.GPR* %4554, i32 0, i32 5
  %4556 = getelementptr inbounds %struct.Reg, %struct.Reg* %4555, i32 0, i32 0
  %RCX.i978 = bitcast %union.anon* %4556 to i64*
  %4557 = load i32, i32* %EAX.i977
  %4558 = zext i32 %4557 to i64
  %4559 = load i64, i64* %PC.i976
  %4560 = add i64 %4559, 3
  store i64 %4560, i64* %PC.i976
  %4561 = shl i64 %4558, 32
  %4562 = ashr exact i64 %4561, 32
  store i64 %4562, i64* %RCX.i978, align 8
  store %struct.Memory* %loadMem_416388, %struct.Memory** %MEMORY
  %loadMem_41638b = load %struct.Memory*, %struct.Memory** %MEMORY
  %4563 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4564 = getelementptr inbounds %struct.GPR, %struct.GPR* %4563, i32 0, i32 33
  %4565 = getelementptr inbounds %struct.Reg, %struct.Reg* %4564, i32 0, i32 0
  %PC.i973 = bitcast %union.anon* %4565 to i64*
  %4566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4567 = getelementptr inbounds %struct.GPR, %struct.GPR* %4566, i32 0, i32 1
  %4568 = getelementptr inbounds %struct.Reg, %struct.Reg* %4567, i32 0, i32 0
  %RAX.i974 = bitcast %union.anon* %4568 to i64*
  %4569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4570 = getelementptr inbounds %struct.GPR, %struct.GPR* %4569, i32 0, i32 5
  %4571 = getelementptr inbounds %struct.Reg, %struct.Reg* %4570, i32 0, i32 0
  %RCX.i975 = bitcast %union.anon* %4571 to i64*
  %4572 = load i64, i64* %RCX.i975
  %4573 = add i64 %4572, 12099168
  %4574 = load i64, i64* %PC.i973
  %4575 = add i64 %4574, 8
  store i64 %4575, i64* %PC.i973
  %4576 = inttoptr i64 %4573 to i8*
  %4577 = load i8, i8* %4576
  %4578 = zext i8 %4577 to i64
  store i64 %4578, i64* %RAX.i974, align 8
  store %struct.Memory* %loadMem_41638b, %struct.Memory** %MEMORY
  %loadMem_416393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4579 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4580 = getelementptr inbounds %struct.GPR, %struct.GPR* %4579, i32 0, i32 33
  %4581 = getelementptr inbounds %struct.Reg, %struct.Reg* %4580, i32 0, i32 0
  %PC.i970 = bitcast %union.anon* %4581 to i64*
  %4582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4583 = getelementptr inbounds %struct.GPR, %struct.GPR* %4582, i32 0, i32 1
  %4584 = getelementptr inbounds %struct.Reg, %struct.Reg* %4583, i32 0, i32 0
  %EAX.i971 = bitcast %union.anon* %4584 to i32*
  %4585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4586 = getelementptr inbounds %struct.GPR, %struct.GPR* %4585, i32 0, i32 15
  %4587 = getelementptr inbounds %struct.Reg, %struct.Reg* %4586, i32 0, i32 0
  %RBP.i972 = bitcast %union.anon* %4587 to i64*
  %4588 = load i32, i32* %EAX.i971
  %4589 = zext i32 %4588 to i64
  %4590 = load i64, i64* %RBP.i972
  %4591 = sub i64 %4590, 24
  %4592 = load i64, i64* %PC.i970
  %4593 = add i64 %4592, 3
  store i64 %4593, i64* %PC.i970
  %4594 = inttoptr i64 %4591 to i32*
  %4595 = load i32, i32* %4594
  %4596 = sub i32 %4588, %4595
  %4597 = icmp ult i32 %4588, %4595
  %4598 = zext i1 %4597 to i8
  %4599 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4598, i8* %4599, align 1
  %4600 = and i32 %4596, 255
  %4601 = call i32 @llvm.ctpop.i32(i32 %4600)
  %4602 = trunc i32 %4601 to i8
  %4603 = and i8 %4602, 1
  %4604 = xor i8 %4603, 1
  %4605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4604, i8* %4605, align 1
  %4606 = xor i32 %4595, %4588
  %4607 = xor i32 %4606, %4596
  %4608 = lshr i32 %4607, 4
  %4609 = trunc i32 %4608 to i8
  %4610 = and i8 %4609, 1
  %4611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4610, i8* %4611, align 1
  %4612 = icmp eq i32 %4596, 0
  %4613 = zext i1 %4612 to i8
  %4614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4613, i8* %4614, align 1
  %4615 = lshr i32 %4596, 31
  %4616 = trunc i32 %4615 to i8
  %4617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4616, i8* %4617, align 1
  %4618 = lshr i32 %4588, 31
  %4619 = lshr i32 %4595, 31
  %4620 = xor i32 %4619, %4618
  %4621 = xor i32 %4615, %4618
  %4622 = add i32 %4621, %4620
  %4623 = icmp eq i32 %4622, 2
  %4624 = zext i1 %4623 to i8
  %4625 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4624, i8* %4625, align 1
  store %struct.Memory* %loadMem_416393, %struct.Memory** %MEMORY
  %loadMem_416396 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4626 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4627 = getelementptr inbounds %struct.GPR, %struct.GPR* %4626, i32 0, i32 33
  %4628 = getelementptr inbounds %struct.Reg, %struct.Reg* %4627, i32 0, i32 0
  %PC.i969 = bitcast %union.anon* %4628 to i64*
  %4629 = load i64, i64* %PC.i969
  %4630 = add i64 %4629, 91
  %4631 = load i64, i64* %PC.i969
  %4632 = add i64 %4631, 6
  %4633 = load i64, i64* %PC.i969
  %4634 = add i64 %4633, 6
  store i64 %4634, i64* %PC.i969
  %4635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4636 = load i8, i8* %4635, align 1
  %4637 = icmp eq i8 %4636, 0
  %4638 = zext i1 %4637 to i8
  store i8 %4638, i8* %BRANCH_TAKEN, align 1
  %4639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4640 = select i1 %4637, i64 %4630, i64 %4632
  store i64 %4640, i64* %4639, align 8
  store %struct.Memory* %loadMem_416396, %struct.Memory** %MEMORY
  %loadBr_416396 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416396 = icmp eq i8 %loadBr_416396, 1
  br i1 %cmpBr_416396, label %block_.L_4163f1, label %block_41639c

block_41639c:                                     ; preds = %block_.L_416382
  %loadMem_41639c = load %struct.Memory*, %struct.Memory** %MEMORY
  %4641 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4642 = getelementptr inbounds %struct.GPR, %struct.GPR* %4641, i32 0, i32 33
  %4643 = getelementptr inbounds %struct.Reg, %struct.Reg* %4642, i32 0, i32 0
  %PC.i967 = bitcast %union.anon* %4643 to i64*
  %4644 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4645 = getelementptr inbounds %struct.GPR, %struct.GPR* %4644, i32 0, i32 1
  %4646 = getelementptr inbounds %struct.Reg, %struct.Reg* %4645, i32 0, i32 0
  %RAX.i968 = bitcast %union.anon* %4646 to i64*
  %4647 = load i64, i64* %PC.i967
  %4648 = add i64 %4647, 10
  store i64 %4648, i64* %PC.i967
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i968, align 8
  store %struct.Memory* %loadMem_41639c, %struct.Memory** %MEMORY
  %loadMem_4163a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4650 = getelementptr inbounds %struct.GPR, %struct.GPR* %4649, i32 0, i32 33
  %4651 = getelementptr inbounds %struct.Reg, %struct.Reg* %4650, i32 0, i32 0
  %PC.i964 = bitcast %union.anon* %4651 to i64*
  %4652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4653 = getelementptr inbounds %struct.GPR, %struct.GPR* %4652, i32 0, i32 5
  %4654 = getelementptr inbounds %struct.Reg, %struct.Reg* %4653, i32 0, i32 0
  %RCX.i965 = bitcast %union.anon* %4654 to i64*
  %4655 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4656 = getelementptr inbounds %struct.GPR, %struct.GPR* %4655, i32 0, i32 15
  %4657 = getelementptr inbounds %struct.Reg, %struct.Reg* %4656, i32 0, i32 0
  %RBP.i966 = bitcast %union.anon* %4657 to i64*
  %4658 = load i64, i64* %RBP.i966
  %4659 = sub i64 %4658, 56
  %4660 = load i64, i64* %PC.i964
  %4661 = add i64 %4660, 4
  store i64 %4661, i64* %PC.i964
  %4662 = inttoptr i64 %4659 to i64*
  %4663 = load i64, i64* %4662
  store i64 %4663, i64* %RCX.i965, align 8
  store %struct.Memory* %loadMem_4163a6, %struct.Memory** %MEMORY
  %loadMem_4163aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %4664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4665 = getelementptr inbounds %struct.GPR, %struct.GPR* %4664, i32 0, i32 33
  %4666 = getelementptr inbounds %struct.Reg, %struct.Reg* %4665, i32 0, i32 0
  %PC.i961 = bitcast %union.anon* %4666 to i64*
  %4667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4668 = getelementptr inbounds %struct.GPR, %struct.GPR* %4667, i32 0, i32 5
  %4669 = getelementptr inbounds %struct.Reg, %struct.Reg* %4668, i32 0, i32 0
  %RCX.i962 = bitcast %union.anon* %4669 to i64*
  %4670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4671 = getelementptr inbounds %struct.GPR, %struct.GPR* %4670, i32 0, i32 7
  %4672 = getelementptr inbounds %struct.Reg, %struct.Reg* %4671, i32 0, i32 0
  %RDX.i963 = bitcast %union.anon* %4672 to i64*
  %4673 = load i64, i64* %RCX.i962
  %4674 = load i64, i64* %PC.i961
  %4675 = add i64 %4674, 2
  store i64 %4675, i64* %PC.i961
  %4676 = inttoptr i64 %4673 to i32*
  %4677 = load i32, i32* %4676
  %4678 = zext i32 %4677 to i64
  store i64 %4678, i64* %RDX.i963, align 8
  store %struct.Memory* %loadMem_4163aa, %struct.Memory** %MEMORY
  %loadMem_4163ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %4679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4680 = getelementptr inbounds %struct.GPR, %struct.GPR* %4679, i32 0, i32 33
  %4681 = getelementptr inbounds %struct.Reg, %struct.Reg* %4680, i32 0, i32 0
  %PC.i959 = bitcast %union.anon* %4681 to i64*
  %4682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4683 = getelementptr inbounds %struct.GPR, %struct.GPR* %4682, i32 0, i32 7
  %4684 = getelementptr inbounds %struct.Reg, %struct.Reg* %4683, i32 0, i32 0
  %RDX.i960 = bitcast %union.anon* %4684 to i64*
  %4685 = load i64, i64* %RDX.i960
  %4686 = load i64, i64* %PC.i959
  %4687 = add i64 %4686, 3
  store i64 %4687, i64* %PC.i959
  %4688 = trunc i64 %4685 to i32
  %4689 = add i32 1, %4688
  %4690 = zext i32 %4689 to i64
  store i64 %4690, i64* %RDX.i960, align 8
  %4691 = icmp ult i32 %4689, %4688
  %4692 = icmp ult i32 %4689, 1
  %4693 = or i1 %4691, %4692
  %4694 = zext i1 %4693 to i8
  %4695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4694, i8* %4695, align 1
  %4696 = and i32 %4689, 255
  %4697 = call i32 @llvm.ctpop.i32(i32 %4696)
  %4698 = trunc i32 %4697 to i8
  %4699 = and i8 %4698, 1
  %4700 = xor i8 %4699, 1
  %4701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4700, i8* %4701, align 1
  %4702 = xor i64 1, %4685
  %4703 = trunc i64 %4702 to i32
  %4704 = xor i32 %4703, %4689
  %4705 = lshr i32 %4704, 4
  %4706 = trunc i32 %4705 to i8
  %4707 = and i8 %4706, 1
  %4708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4707, i8* %4708, align 1
  %4709 = icmp eq i32 %4689, 0
  %4710 = zext i1 %4709 to i8
  %4711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4710, i8* %4711, align 1
  %4712 = lshr i32 %4689, 31
  %4713 = trunc i32 %4712 to i8
  %4714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4713, i8* %4714, align 1
  %4715 = lshr i32 %4688, 31
  %4716 = xor i32 %4712, %4715
  %4717 = add i32 %4716, %4712
  %4718 = icmp eq i32 %4717, 2
  %4719 = zext i1 %4718 to i8
  %4720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4719, i8* %4720, align 1
  store %struct.Memory* %loadMem_4163ac, %struct.Memory** %MEMORY
  %loadMem_4163af = load %struct.Memory*, %struct.Memory** %MEMORY
  %4721 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4722 = getelementptr inbounds %struct.GPR, %struct.GPR* %4721, i32 0, i32 33
  %4723 = getelementptr inbounds %struct.Reg, %struct.Reg* %4722, i32 0, i32 0
  %PC.i956 = bitcast %union.anon* %4723 to i64*
  %4724 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4725 = getelementptr inbounds %struct.GPR, %struct.GPR* %4724, i32 0, i32 7
  %4726 = getelementptr inbounds %struct.Reg, %struct.Reg* %4725, i32 0, i32 0
  %EDX.i957 = bitcast %union.anon* %4726 to i32*
  %4727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4728 = getelementptr inbounds %struct.GPR, %struct.GPR* %4727, i32 0, i32 5
  %4729 = getelementptr inbounds %struct.Reg, %struct.Reg* %4728, i32 0, i32 0
  %RCX.i958 = bitcast %union.anon* %4729 to i64*
  %4730 = load i64, i64* %RCX.i958
  %4731 = load i32, i32* %EDX.i957
  %4732 = zext i32 %4731 to i64
  %4733 = load i64, i64* %PC.i956
  %4734 = add i64 %4733, 2
  store i64 %4734, i64* %PC.i956
  %4735 = inttoptr i64 %4730 to i32*
  store i32 %4731, i32* %4735
  store %struct.Memory* %loadMem_4163af, %struct.Memory** %MEMORY
  %loadMem_4163b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4737 = getelementptr inbounds %struct.GPR, %struct.GPR* %4736, i32 0, i32 33
  %4738 = getelementptr inbounds %struct.Reg, %struct.Reg* %4737, i32 0, i32 0
  %PC.i953 = bitcast %union.anon* %4738 to i64*
  %4739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4740 = getelementptr inbounds %struct.GPR, %struct.GPR* %4739, i32 0, i32 5
  %4741 = getelementptr inbounds %struct.Reg, %struct.Reg* %4740, i32 0, i32 0
  %RCX.i954 = bitcast %union.anon* %4741 to i64*
  %4742 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4743 = getelementptr inbounds %struct.GPR, %struct.GPR* %4742, i32 0, i32 15
  %4744 = getelementptr inbounds %struct.Reg, %struct.Reg* %4743, i32 0, i32 0
  %RBP.i955 = bitcast %union.anon* %4744 to i64*
  %4745 = load i64, i64* %RBP.i955
  %4746 = sub i64 %4745, 116
  %4747 = load i64, i64* %PC.i953
  %4748 = add i64 %4747, 4
  store i64 %4748, i64* %PC.i953
  %4749 = inttoptr i64 %4746 to i32*
  %4750 = load i32, i32* %4749
  %4751 = sext i32 %4750 to i64
  store i64 %4751, i64* %RCX.i954, align 8
  store %struct.Memory* %loadMem_4163b1, %struct.Memory** %MEMORY
  %loadMem_4163b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4752 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4753 = getelementptr inbounds %struct.GPR, %struct.GPR* %4752, i32 0, i32 33
  %4754 = getelementptr inbounds %struct.Reg, %struct.Reg* %4753, i32 0, i32 0
  %PC.i951 = bitcast %union.anon* %4754 to i64*
  %4755 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4756 = getelementptr inbounds %struct.GPR, %struct.GPR* %4755, i32 0, i32 5
  %4757 = getelementptr inbounds %struct.Reg, %struct.Reg* %4756, i32 0, i32 0
  %RCX.i952 = bitcast %union.anon* %4757 to i64*
  %4758 = load i64, i64* %RCX.i952
  %4759 = load i64, i64* %PC.i951
  %4760 = add i64 %4759, 7
  store i64 %4760, i64* %PC.i951
  %4761 = sext i64 %4758 to i128
  %4762 = and i128 %4761, -18446744073709551616
  %4763 = zext i64 %4758 to i128
  %4764 = or i128 %4762, %4763
  %4765 = mul i128 744, %4764
  %4766 = trunc i128 %4765 to i64
  store i64 %4766, i64* %RCX.i952, align 8
  %4767 = sext i64 %4766 to i128
  %4768 = icmp ne i128 %4767, %4765
  %4769 = zext i1 %4768 to i8
  %4770 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4769, i8* %4770, align 1
  %4771 = trunc i128 %4765 to i32
  %4772 = and i32 %4771, 255
  %4773 = call i32 @llvm.ctpop.i32(i32 %4772)
  %4774 = trunc i32 %4773 to i8
  %4775 = and i8 %4774, 1
  %4776 = xor i8 %4775, 1
  %4777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4776, i8* %4777, align 1
  %4778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4778, align 1
  %4779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4779, align 1
  %4780 = lshr i64 %4766, 63
  %4781 = trunc i64 %4780 to i8
  %4782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4781, i8* %4782, align 1
  %4783 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4769, i8* %4783, align 1
  store %struct.Memory* %loadMem_4163b5, %struct.Memory** %MEMORY
  %loadMem_4163bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %4784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4785 = getelementptr inbounds %struct.GPR, %struct.GPR* %4784, i32 0, i32 33
  %4786 = getelementptr inbounds %struct.Reg, %struct.Reg* %4785, i32 0, i32 0
  %PC.i948 = bitcast %union.anon* %4786 to i64*
  %4787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4788 = getelementptr inbounds %struct.GPR, %struct.GPR* %4787, i32 0, i32 1
  %4789 = getelementptr inbounds %struct.Reg, %struct.Reg* %4788, i32 0, i32 0
  %RAX.i949 = bitcast %union.anon* %4789 to i64*
  %4790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4791 = getelementptr inbounds %struct.GPR, %struct.GPR* %4790, i32 0, i32 5
  %4792 = getelementptr inbounds %struct.Reg, %struct.Reg* %4791, i32 0, i32 0
  %RCX.i950 = bitcast %union.anon* %4792 to i64*
  %4793 = load i64, i64* %RAX.i949
  %4794 = load i64, i64* %RCX.i950
  %4795 = load i64, i64* %PC.i948
  %4796 = add i64 %4795, 3
  store i64 %4796, i64* %PC.i948
  %4797 = add i64 %4794, %4793
  store i64 %4797, i64* %RAX.i949, align 8
  %4798 = icmp ult i64 %4797, %4793
  %4799 = icmp ult i64 %4797, %4794
  %4800 = or i1 %4798, %4799
  %4801 = zext i1 %4800 to i8
  %4802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4801, i8* %4802, align 1
  %4803 = trunc i64 %4797 to i32
  %4804 = and i32 %4803, 255
  %4805 = call i32 @llvm.ctpop.i32(i32 %4804)
  %4806 = trunc i32 %4805 to i8
  %4807 = and i8 %4806, 1
  %4808 = xor i8 %4807, 1
  %4809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4808, i8* %4809, align 1
  %4810 = xor i64 %4794, %4793
  %4811 = xor i64 %4810, %4797
  %4812 = lshr i64 %4811, 4
  %4813 = trunc i64 %4812 to i8
  %4814 = and i8 %4813, 1
  %4815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4814, i8* %4815, align 1
  %4816 = icmp eq i64 %4797, 0
  %4817 = zext i1 %4816 to i8
  %4818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4817, i8* %4818, align 1
  %4819 = lshr i64 %4797, 63
  %4820 = trunc i64 %4819 to i8
  %4821 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4820, i8* %4821, align 1
  %4822 = lshr i64 %4793, 63
  %4823 = lshr i64 %4794, 63
  %4824 = xor i64 %4819, %4822
  %4825 = xor i64 %4819, %4823
  %4826 = add i64 %4824, %4825
  %4827 = icmp eq i64 %4826, 2
  %4828 = zext i1 %4827 to i8
  %4829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4828, i8* %4829, align 1
  store %struct.Memory* %loadMem_4163bc, %struct.Memory** %MEMORY
  %loadMem_4163bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %4830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4831 = getelementptr inbounds %struct.GPR, %struct.GPR* %4830, i32 0, i32 33
  %4832 = getelementptr inbounds %struct.Reg, %struct.Reg* %4831, i32 0, i32 0
  %PC.i946 = bitcast %union.anon* %4832 to i64*
  %4833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4834 = getelementptr inbounds %struct.GPR, %struct.GPR* %4833, i32 0, i32 1
  %4835 = getelementptr inbounds %struct.Reg, %struct.Reg* %4834, i32 0, i32 0
  %RAX.i947 = bitcast %union.anon* %4835 to i64*
  %4836 = load i64, i64* %RAX.i947
  %4837 = add i64 %4836, 12
  %4838 = load i64, i64* %PC.i946
  %4839 = add i64 %4838, 4
  store i64 %4839, i64* %PC.i946
  %4840 = inttoptr i64 %4837 to i32*
  %4841 = load i32, i32* %4840
  %4842 = sub i32 %4841, 1
  %4843 = icmp ult i32 %4841, 1
  %4844 = zext i1 %4843 to i8
  %4845 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4844, i8* %4845, align 1
  %4846 = and i32 %4842, 255
  %4847 = call i32 @llvm.ctpop.i32(i32 %4846)
  %4848 = trunc i32 %4847 to i8
  %4849 = and i8 %4848, 1
  %4850 = xor i8 %4849, 1
  %4851 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4850, i8* %4851, align 1
  %4852 = xor i32 %4841, 1
  %4853 = xor i32 %4852, %4842
  %4854 = lshr i32 %4853, 4
  %4855 = trunc i32 %4854 to i8
  %4856 = and i8 %4855, 1
  %4857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4856, i8* %4857, align 1
  %4858 = icmp eq i32 %4842, 0
  %4859 = zext i1 %4858 to i8
  %4860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4859, i8* %4860, align 1
  %4861 = lshr i32 %4842, 31
  %4862 = trunc i32 %4861 to i8
  %4863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4862, i8* %4863, align 1
  %4864 = lshr i32 %4841, 31
  %4865 = xor i32 %4861, %4864
  %4866 = add i32 %4865, %4864
  %4867 = icmp eq i32 %4866, 2
  %4868 = zext i1 %4867 to i8
  %4869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4868, i8* %4869, align 1
  store %struct.Memory* %loadMem_4163bf, %struct.Memory** %MEMORY
  %loadMem_4163c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4870 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4871 = getelementptr inbounds %struct.GPR, %struct.GPR* %4870, i32 0, i32 33
  %4872 = getelementptr inbounds %struct.Reg, %struct.Reg* %4871, i32 0, i32 0
  %PC.i945 = bitcast %union.anon* %4872 to i64*
  %4873 = load i64, i64* %PC.i945
  %4874 = add i64 %4873, 41
  %4875 = load i64, i64* %PC.i945
  %4876 = add i64 %4875, 6
  %4877 = load i64, i64* %PC.i945
  %4878 = add i64 %4877, 6
  store i64 %4878, i64* %PC.i945
  %4879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %4880 = load i8, i8* %4879, align 1
  %4881 = icmp eq i8 %4880, 0
  %4882 = zext i1 %4881 to i8
  store i8 %4882, i8* %BRANCH_TAKEN, align 1
  %4883 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %4884 = select i1 %4881, i64 %4874, i64 %4876
  store i64 %4884, i64* %4883, align 8
  store %struct.Memory* %loadMem_4163c3, %struct.Memory** %MEMORY
  %loadBr_4163c3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4163c3 = icmp eq i8 %loadBr_4163c3, 1
  br i1 %cmpBr_4163c3, label %block_.L_4163ec, label %block_4163c9

block_4163c9:                                     ; preds = %block_41639c
  %loadMem_4163c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4885 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4886 = getelementptr inbounds %struct.GPR, %struct.GPR* %4885, i32 0, i32 33
  %4887 = getelementptr inbounds %struct.Reg, %struct.Reg* %4886, i32 0, i32 0
  %PC.i943 = bitcast %union.anon* %4887 to i64*
  %4888 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4889 = getelementptr inbounds %struct.GPR, %struct.GPR* %4888, i32 0, i32 1
  %4890 = getelementptr inbounds %struct.Reg, %struct.Reg* %4889, i32 0, i32 0
  %RAX.i944 = bitcast %union.anon* %4890 to i64*
  %4891 = load i64, i64* %PC.i943
  %4892 = add i64 %4891, 10
  store i64 %4892, i64* %PC.i943
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i944, align 8
  store %struct.Memory* %loadMem_4163c9, %struct.Memory** %MEMORY
  %loadMem_4163d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4893 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4894 = getelementptr inbounds %struct.GPR, %struct.GPR* %4893, i32 0, i32 33
  %4895 = getelementptr inbounds %struct.Reg, %struct.Reg* %4894, i32 0, i32 0
  %PC.i940 = bitcast %union.anon* %4895 to i64*
  %4896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4897 = getelementptr inbounds %struct.GPR, %struct.GPR* %4896, i32 0, i32 5
  %4898 = getelementptr inbounds %struct.Reg, %struct.Reg* %4897, i32 0, i32 0
  %RCX.i941 = bitcast %union.anon* %4898 to i64*
  %4899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4900 = getelementptr inbounds %struct.GPR, %struct.GPR* %4899, i32 0, i32 15
  %4901 = getelementptr inbounds %struct.Reg, %struct.Reg* %4900, i32 0, i32 0
  %RBP.i942 = bitcast %union.anon* %4901 to i64*
  %4902 = load i64, i64* %RBP.i942
  %4903 = sub i64 %4902, 116
  %4904 = load i64, i64* %PC.i940
  %4905 = add i64 %4904, 4
  store i64 %4905, i64* %PC.i940
  %4906 = inttoptr i64 %4903 to i32*
  %4907 = load i32, i32* %4906
  %4908 = sext i32 %4907 to i64
  store i64 %4908, i64* %RCX.i941, align 8
  store %struct.Memory* %loadMem_4163d3, %struct.Memory** %MEMORY
  %loadMem_4163d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4909 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4910 = getelementptr inbounds %struct.GPR, %struct.GPR* %4909, i32 0, i32 33
  %4911 = getelementptr inbounds %struct.Reg, %struct.Reg* %4910, i32 0, i32 0
  %PC.i938 = bitcast %union.anon* %4911 to i64*
  %4912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4913 = getelementptr inbounds %struct.GPR, %struct.GPR* %4912, i32 0, i32 5
  %4914 = getelementptr inbounds %struct.Reg, %struct.Reg* %4913, i32 0, i32 0
  %RCX.i939 = bitcast %union.anon* %4914 to i64*
  %4915 = load i64, i64* %RCX.i939
  %4916 = load i64, i64* %PC.i938
  %4917 = add i64 %4916, 7
  store i64 %4917, i64* %PC.i938
  %4918 = sext i64 %4915 to i128
  %4919 = and i128 %4918, -18446744073709551616
  %4920 = zext i64 %4915 to i128
  %4921 = or i128 %4919, %4920
  %4922 = mul i128 744, %4921
  %4923 = trunc i128 %4922 to i64
  store i64 %4923, i64* %RCX.i939, align 8
  %4924 = sext i64 %4923 to i128
  %4925 = icmp ne i128 %4924, %4922
  %4926 = zext i1 %4925 to i8
  %4927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4926, i8* %4927, align 1
  %4928 = trunc i128 %4922 to i32
  %4929 = and i32 %4928, 255
  %4930 = call i32 @llvm.ctpop.i32(i32 %4929)
  %4931 = trunc i32 %4930 to i8
  %4932 = and i8 %4931, 1
  %4933 = xor i8 %4932, 1
  %4934 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4933, i8* %4934, align 1
  %4935 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %4935, align 1
  %4936 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %4936, align 1
  %4937 = lshr i64 %4923, 63
  %4938 = trunc i64 %4937 to i8
  %4939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4938, i8* %4939, align 1
  %4940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4926, i8* %4940, align 1
  store %struct.Memory* %loadMem_4163d7, %struct.Memory** %MEMORY
  %loadMem_4163de = load %struct.Memory*, %struct.Memory** %MEMORY
  %4941 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4942 = getelementptr inbounds %struct.GPR, %struct.GPR* %4941, i32 0, i32 33
  %4943 = getelementptr inbounds %struct.Reg, %struct.Reg* %4942, i32 0, i32 0
  %PC.i935 = bitcast %union.anon* %4943 to i64*
  %4944 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4945 = getelementptr inbounds %struct.GPR, %struct.GPR* %4944, i32 0, i32 1
  %4946 = getelementptr inbounds %struct.Reg, %struct.Reg* %4945, i32 0, i32 0
  %RAX.i936 = bitcast %union.anon* %4946 to i64*
  %4947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4948 = getelementptr inbounds %struct.GPR, %struct.GPR* %4947, i32 0, i32 5
  %4949 = getelementptr inbounds %struct.Reg, %struct.Reg* %4948, i32 0, i32 0
  %RCX.i937 = bitcast %union.anon* %4949 to i64*
  %4950 = load i64, i64* %RAX.i936
  %4951 = load i64, i64* %RCX.i937
  %4952 = load i64, i64* %PC.i935
  %4953 = add i64 %4952, 3
  store i64 %4953, i64* %PC.i935
  %4954 = add i64 %4951, %4950
  store i64 %4954, i64* %RAX.i936, align 8
  %4955 = icmp ult i64 %4954, %4950
  %4956 = icmp ult i64 %4954, %4951
  %4957 = or i1 %4955, %4956
  %4958 = zext i1 %4957 to i8
  %4959 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %4958, i8* %4959, align 1
  %4960 = trunc i64 %4954 to i32
  %4961 = and i32 %4960, 255
  %4962 = call i32 @llvm.ctpop.i32(i32 %4961)
  %4963 = trunc i32 %4962 to i8
  %4964 = and i8 %4963, 1
  %4965 = xor i8 %4964, 1
  %4966 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %4965, i8* %4966, align 1
  %4967 = xor i64 %4951, %4950
  %4968 = xor i64 %4967, %4954
  %4969 = lshr i64 %4968, 4
  %4970 = trunc i64 %4969 to i8
  %4971 = and i8 %4970, 1
  %4972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %4971, i8* %4972, align 1
  %4973 = icmp eq i64 %4954, 0
  %4974 = zext i1 %4973 to i8
  %4975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %4974, i8* %4975, align 1
  %4976 = lshr i64 %4954, 63
  %4977 = trunc i64 %4976 to i8
  %4978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %4977, i8* %4978, align 1
  %4979 = lshr i64 %4950, 63
  %4980 = lshr i64 %4951, 63
  %4981 = xor i64 %4976, %4979
  %4982 = xor i64 %4976, %4980
  %4983 = add i64 %4981, %4982
  %4984 = icmp eq i64 %4983, 2
  %4985 = zext i1 %4984 to i8
  %4986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %4985, i8* %4986, align 1
  store %struct.Memory* %loadMem_4163de, %struct.Memory** %MEMORY
  %loadMem_4163e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %4987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4988 = getelementptr inbounds %struct.GPR, %struct.GPR* %4987, i32 0, i32 33
  %4989 = getelementptr inbounds %struct.Reg, %struct.Reg* %4988, i32 0, i32 0
  %PC.i932 = bitcast %union.anon* %4989 to i64*
  %4990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4991 = getelementptr inbounds %struct.GPR, %struct.GPR* %4990, i32 0, i32 1
  %4992 = getelementptr inbounds %struct.Reg, %struct.Reg* %4991, i32 0, i32 0
  %RAX.i933 = bitcast %union.anon* %4992 to i64*
  %4993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4994 = getelementptr inbounds %struct.GPR, %struct.GPR* %4993, i32 0, i32 7
  %4995 = getelementptr inbounds %struct.Reg, %struct.Reg* %4994, i32 0, i32 0
  %RDX.i934 = bitcast %union.anon* %4995 to i64*
  %4996 = load i64, i64* %RAX.i933
  %4997 = add i64 %4996, 4
  %4998 = load i64, i64* %PC.i932
  %4999 = add i64 %4998, 3
  store i64 %4999, i64* %PC.i932
  %5000 = inttoptr i64 %4997 to i32*
  %5001 = load i32, i32* %5000
  %5002 = zext i32 %5001 to i64
  store i64 %5002, i64* %RDX.i934, align 8
  store %struct.Memory* %loadMem_4163e1, %struct.Memory** %MEMORY
  %loadMem_4163e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5004 = getelementptr inbounds %struct.GPR, %struct.GPR* %5003, i32 0, i32 33
  %5005 = getelementptr inbounds %struct.Reg, %struct.Reg* %5004, i32 0, i32 0
  %PC.i929 = bitcast %union.anon* %5005 to i64*
  %5006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5007 = getelementptr inbounds %struct.GPR, %struct.GPR* %5006, i32 0, i32 1
  %5008 = getelementptr inbounds %struct.Reg, %struct.Reg* %5007, i32 0, i32 0
  %RAX.i930 = bitcast %union.anon* %5008 to i64*
  %5009 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5010 = getelementptr inbounds %struct.GPR, %struct.GPR* %5009, i32 0, i32 15
  %5011 = getelementptr inbounds %struct.Reg, %struct.Reg* %5010, i32 0, i32 0
  %RBP.i931 = bitcast %union.anon* %5011 to i64*
  %5012 = load i64, i64* %RBP.i931
  %5013 = sub i64 %5012, 88
  %5014 = load i64, i64* %PC.i929
  %5015 = add i64 %5014, 4
  store i64 %5015, i64* %PC.i929
  %5016 = inttoptr i64 %5013 to i64*
  %5017 = load i64, i64* %5016
  store i64 %5017, i64* %RAX.i930, align 8
  store %struct.Memory* %loadMem_4163e4, %struct.Memory** %MEMORY
  %loadMem_4163e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5019 = getelementptr inbounds %struct.GPR, %struct.GPR* %5018, i32 0, i32 33
  %5020 = getelementptr inbounds %struct.Reg, %struct.Reg* %5019, i32 0, i32 0
  %PC.i926 = bitcast %union.anon* %5020 to i64*
  %5021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5022 = getelementptr inbounds %struct.GPR, %struct.GPR* %5021, i32 0, i32 1
  %5023 = getelementptr inbounds %struct.Reg, %struct.Reg* %5022, i32 0, i32 0
  %RAX.i927 = bitcast %union.anon* %5023 to i64*
  %5024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5025 = getelementptr inbounds %struct.GPR, %struct.GPR* %5024, i32 0, i32 7
  %5026 = getelementptr inbounds %struct.Reg, %struct.Reg* %5025, i32 0, i32 0
  %RDX.i928 = bitcast %union.anon* %5026 to i64*
  %5027 = load i64, i64* %RDX.i928
  %5028 = load i64, i64* %RAX.i927
  %5029 = load i64, i64* %PC.i926
  %5030 = add i64 %5029, 2
  store i64 %5030, i64* %PC.i926
  %5031 = trunc i64 %5027 to i32
  %5032 = inttoptr i64 %5028 to i32*
  %5033 = load i32, i32* %5032
  %5034 = add i32 %5033, %5031
  %5035 = zext i32 %5034 to i64
  store i64 %5035, i64* %RDX.i928, align 8
  %5036 = icmp ult i32 %5034, %5031
  %5037 = icmp ult i32 %5034, %5033
  %5038 = or i1 %5036, %5037
  %5039 = zext i1 %5038 to i8
  %5040 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5039, i8* %5040, align 1
  %5041 = and i32 %5034, 255
  %5042 = call i32 @llvm.ctpop.i32(i32 %5041)
  %5043 = trunc i32 %5042 to i8
  %5044 = and i8 %5043, 1
  %5045 = xor i8 %5044, 1
  %5046 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5045, i8* %5046, align 1
  %5047 = xor i32 %5033, %5031
  %5048 = xor i32 %5047, %5034
  %5049 = lshr i32 %5048, 4
  %5050 = trunc i32 %5049 to i8
  %5051 = and i8 %5050, 1
  %5052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5051, i8* %5052, align 1
  %5053 = icmp eq i32 %5034, 0
  %5054 = zext i1 %5053 to i8
  %5055 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5054, i8* %5055, align 1
  %5056 = lshr i32 %5034, 31
  %5057 = trunc i32 %5056 to i8
  %5058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5057, i8* %5058, align 1
  %5059 = lshr i32 %5031, 31
  %5060 = lshr i32 %5033, 31
  %5061 = xor i32 %5056, %5059
  %5062 = xor i32 %5056, %5060
  %5063 = add i32 %5061, %5062
  %5064 = icmp eq i32 %5063, 2
  %5065 = zext i1 %5064 to i8
  %5066 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5065, i8* %5066, align 1
  store %struct.Memory* %loadMem_4163e8, %struct.Memory** %MEMORY
  %loadMem_4163ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %5067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5068 = getelementptr inbounds %struct.GPR, %struct.GPR* %5067, i32 0, i32 33
  %5069 = getelementptr inbounds %struct.Reg, %struct.Reg* %5068, i32 0, i32 0
  %PC.i923 = bitcast %union.anon* %5069 to i64*
  %5070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5071 = getelementptr inbounds %struct.GPR, %struct.GPR* %5070, i32 0, i32 7
  %5072 = getelementptr inbounds %struct.Reg, %struct.Reg* %5071, i32 0, i32 0
  %EDX.i924 = bitcast %union.anon* %5072 to i32*
  %5073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5074 = getelementptr inbounds %struct.GPR, %struct.GPR* %5073, i32 0, i32 1
  %5075 = getelementptr inbounds %struct.Reg, %struct.Reg* %5074, i32 0, i32 0
  %RAX.i925 = bitcast %union.anon* %5075 to i64*
  %5076 = load i64, i64* %RAX.i925
  %5077 = load i32, i32* %EDX.i924
  %5078 = zext i32 %5077 to i64
  %5079 = load i64, i64* %PC.i923
  %5080 = add i64 %5079, 2
  store i64 %5080, i64* %PC.i923
  %5081 = inttoptr i64 %5076 to i32*
  store i32 %5077, i32* %5081
  store %struct.Memory* %loadMem_4163ea, %struct.Memory** %MEMORY
  br label %block_.L_4163ec

block_.L_4163ec:                                  ; preds = %block_4163c9, %block_41639c
  %loadMem_4163ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %5082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5083 = getelementptr inbounds %struct.GPR, %struct.GPR* %5082, i32 0, i32 33
  %5084 = getelementptr inbounds %struct.Reg, %struct.Reg* %5083, i32 0, i32 0
  %PC.i922 = bitcast %union.anon* %5084 to i64*
  %5085 = load i64, i64* %PC.i922
  %5086 = add i64 %5085, 409
  %5087 = load i64, i64* %PC.i922
  %5088 = add i64 %5087, 5
  store i64 %5088, i64* %PC.i922
  %5089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %5086, i64* %5089, align 8
  store %struct.Memory* %loadMem_4163ec, %struct.Memory** %MEMORY
  br label %block_.L_416585

block_.L_4163f1:                                  ; preds = %block_.L_416382
  %loadMem_4163f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5090 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5091 = getelementptr inbounds %struct.GPR, %struct.GPR* %5090, i32 0, i32 33
  %5092 = getelementptr inbounds %struct.Reg, %struct.Reg* %5091, i32 0, i32 0
  %PC.i920 = bitcast %union.anon* %5092 to i64*
  %5093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5094 = getelementptr inbounds %struct.GPR, %struct.GPR* %5093, i32 0, i32 1
  %5095 = getelementptr inbounds %struct.Reg, %struct.Reg* %5094, i32 0, i32 0
  %RAX.i921 = bitcast %union.anon* %5095 to i64*
  %5096 = load i64, i64* %PC.i920
  %5097 = add i64 %5096, 10
  store i64 %5097, i64* %PC.i920
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i921, align 8
  store %struct.Memory* %loadMem_4163f1, %struct.Memory** %MEMORY
  %loadMem_4163fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %5098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5099 = getelementptr inbounds %struct.GPR, %struct.GPR* %5098, i32 0, i32 33
  %5100 = getelementptr inbounds %struct.Reg, %struct.Reg* %5099, i32 0, i32 0
  %PC.i917 = bitcast %union.anon* %5100 to i64*
  %5101 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5102 = getelementptr inbounds %struct.GPR, %struct.GPR* %5101, i32 0, i32 5
  %5103 = getelementptr inbounds %struct.Reg, %struct.Reg* %5102, i32 0, i32 0
  %RCX.i918 = bitcast %union.anon* %5103 to i64*
  %5104 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5105 = getelementptr inbounds %struct.GPR, %struct.GPR* %5104, i32 0, i32 15
  %5106 = getelementptr inbounds %struct.Reg, %struct.Reg* %5105, i32 0, i32 0
  %RBP.i919 = bitcast %union.anon* %5106 to i64*
  %5107 = load i64, i64* %RBP.i919
  %5108 = sub i64 %5107, 64
  %5109 = load i64, i64* %PC.i917
  %5110 = add i64 %5109, 4
  store i64 %5110, i64* %PC.i917
  %5111 = inttoptr i64 %5108 to i64*
  %5112 = load i64, i64* %5111
  store i64 %5112, i64* %RCX.i918, align 8
  store %struct.Memory* %loadMem_4163fb, %struct.Memory** %MEMORY
  %loadMem_4163ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %5113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5114 = getelementptr inbounds %struct.GPR, %struct.GPR* %5113, i32 0, i32 33
  %5115 = getelementptr inbounds %struct.Reg, %struct.Reg* %5114, i32 0, i32 0
  %PC.i914 = bitcast %union.anon* %5115 to i64*
  %5116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5117 = getelementptr inbounds %struct.GPR, %struct.GPR* %5116, i32 0, i32 5
  %5118 = getelementptr inbounds %struct.Reg, %struct.Reg* %5117, i32 0, i32 0
  %RCX.i915 = bitcast %union.anon* %5118 to i64*
  %5119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5120 = getelementptr inbounds %struct.GPR, %struct.GPR* %5119, i32 0, i32 7
  %5121 = getelementptr inbounds %struct.Reg, %struct.Reg* %5120, i32 0, i32 0
  %RDX.i916 = bitcast %union.anon* %5121 to i64*
  %5122 = load i64, i64* %RCX.i915
  %5123 = load i64, i64* %PC.i914
  %5124 = add i64 %5123, 2
  store i64 %5124, i64* %PC.i914
  %5125 = inttoptr i64 %5122 to i32*
  %5126 = load i32, i32* %5125
  %5127 = zext i32 %5126 to i64
  store i64 %5127, i64* %RDX.i916, align 8
  store %struct.Memory* %loadMem_4163ff, %struct.Memory** %MEMORY
  %loadMem_416401 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5129 = getelementptr inbounds %struct.GPR, %struct.GPR* %5128, i32 0, i32 33
  %5130 = getelementptr inbounds %struct.Reg, %struct.Reg* %5129, i32 0, i32 0
  %PC.i912 = bitcast %union.anon* %5130 to i64*
  %5131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5132 = getelementptr inbounds %struct.GPR, %struct.GPR* %5131, i32 0, i32 7
  %5133 = getelementptr inbounds %struct.Reg, %struct.Reg* %5132, i32 0, i32 0
  %RDX.i913 = bitcast %union.anon* %5133 to i64*
  %5134 = load i64, i64* %RDX.i913
  %5135 = load i64, i64* %PC.i912
  %5136 = add i64 %5135, 3
  store i64 %5136, i64* %PC.i912
  %5137 = trunc i64 %5134 to i32
  %5138 = add i32 1, %5137
  %5139 = zext i32 %5138 to i64
  store i64 %5139, i64* %RDX.i913, align 8
  %5140 = icmp ult i32 %5138, %5137
  %5141 = icmp ult i32 %5138, 1
  %5142 = or i1 %5140, %5141
  %5143 = zext i1 %5142 to i8
  %5144 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5143, i8* %5144, align 1
  %5145 = and i32 %5138, 255
  %5146 = call i32 @llvm.ctpop.i32(i32 %5145)
  %5147 = trunc i32 %5146 to i8
  %5148 = and i8 %5147, 1
  %5149 = xor i8 %5148, 1
  %5150 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5149, i8* %5150, align 1
  %5151 = xor i64 1, %5134
  %5152 = trunc i64 %5151 to i32
  %5153 = xor i32 %5152, %5138
  %5154 = lshr i32 %5153, 4
  %5155 = trunc i32 %5154 to i8
  %5156 = and i8 %5155, 1
  %5157 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5156, i8* %5157, align 1
  %5158 = icmp eq i32 %5138, 0
  %5159 = zext i1 %5158 to i8
  %5160 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5159, i8* %5160, align 1
  %5161 = lshr i32 %5138, 31
  %5162 = trunc i32 %5161 to i8
  %5163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5162, i8* %5163, align 1
  %5164 = lshr i32 %5137, 31
  %5165 = xor i32 %5161, %5164
  %5166 = add i32 %5165, %5161
  %5167 = icmp eq i32 %5166, 2
  %5168 = zext i1 %5167 to i8
  %5169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5168, i8* %5169, align 1
  store %struct.Memory* %loadMem_416401, %struct.Memory** %MEMORY
  %loadMem_416404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5171 = getelementptr inbounds %struct.GPR, %struct.GPR* %5170, i32 0, i32 33
  %5172 = getelementptr inbounds %struct.Reg, %struct.Reg* %5171, i32 0, i32 0
  %PC.i909 = bitcast %union.anon* %5172 to i64*
  %5173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5174 = getelementptr inbounds %struct.GPR, %struct.GPR* %5173, i32 0, i32 7
  %5175 = getelementptr inbounds %struct.Reg, %struct.Reg* %5174, i32 0, i32 0
  %EDX.i910 = bitcast %union.anon* %5175 to i32*
  %5176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5177 = getelementptr inbounds %struct.GPR, %struct.GPR* %5176, i32 0, i32 5
  %5178 = getelementptr inbounds %struct.Reg, %struct.Reg* %5177, i32 0, i32 0
  %RCX.i911 = bitcast %union.anon* %5178 to i64*
  %5179 = load i64, i64* %RCX.i911
  %5180 = load i32, i32* %EDX.i910
  %5181 = zext i32 %5180 to i64
  %5182 = load i64, i64* %PC.i909
  %5183 = add i64 %5182, 2
  store i64 %5183, i64* %PC.i909
  %5184 = inttoptr i64 %5179 to i32*
  store i32 %5180, i32* %5184
  store %struct.Memory* %loadMem_416404, %struct.Memory** %MEMORY
  %loadMem_416406 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5185 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5186 = getelementptr inbounds %struct.GPR, %struct.GPR* %5185, i32 0, i32 33
  %5187 = getelementptr inbounds %struct.Reg, %struct.Reg* %5186, i32 0, i32 0
  %PC.i906 = bitcast %union.anon* %5187 to i64*
  %5188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5189 = getelementptr inbounds %struct.GPR, %struct.GPR* %5188, i32 0, i32 5
  %5190 = getelementptr inbounds %struct.Reg, %struct.Reg* %5189, i32 0, i32 0
  %RCX.i907 = bitcast %union.anon* %5190 to i64*
  %5191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5192 = getelementptr inbounds %struct.GPR, %struct.GPR* %5191, i32 0, i32 15
  %5193 = getelementptr inbounds %struct.Reg, %struct.Reg* %5192, i32 0, i32 0
  %RBP.i908 = bitcast %union.anon* %5193 to i64*
  %5194 = load i64, i64* %RBP.i908
  %5195 = sub i64 %5194, 116
  %5196 = load i64, i64* %PC.i906
  %5197 = add i64 %5196, 4
  store i64 %5197, i64* %PC.i906
  %5198 = inttoptr i64 %5195 to i32*
  %5199 = load i32, i32* %5198
  %5200 = sext i32 %5199 to i64
  store i64 %5200, i64* %RCX.i907, align 8
  store %struct.Memory* %loadMem_416406, %struct.Memory** %MEMORY
  %loadMem_41640a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5202 = getelementptr inbounds %struct.GPR, %struct.GPR* %5201, i32 0, i32 33
  %5203 = getelementptr inbounds %struct.Reg, %struct.Reg* %5202, i32 0, i32 0
  %PC.i904 = bitcast %union.anon* %5203 to i64*
  %5204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5205 = getelementptr inbounds %struct.GPR, %struct.GPR* %5204, i32 0, i32 5
  %5206 = getelementptr inbounds %struct.Reg, %struct.Reg* %5205, i32 0, i32 0
  %RCX.i905 = bitcast %union.anon* %5206 to i64*
  %5207 = load i64, i64* %RCX.i905
  %5208 = load i64, i64* %PC.i904
  %5209 = add i64 %5208, 7
  store i64 %5209, i64* %PC.i904
  %5210 = sext i64 %5207 to i128
  %5211 = and i128 %5210, -18446744073709551616
  %5212 = zext i64 %5207 to i128
  %5213 = or i128 %5211, %5212
  %5214 = mul i128 744, %5213
  %5215 = trunc i128 %5214 to i64
  store i64 %5215, i64* %RCX.i905, align 8
  %5216 = sext i64 %5215 to i128
  %5217 = icmp ne i128 %5216, %5214
  %5218 = zext i1 %5217 to i8
  %5219 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5218, i8* %5219, align 1
  %5220 = trunc i128 %5214 to i32
  %5221 = and i32 %5220, 255
  %5222 = call i32 @llvm.ctpop.i32(i32 %5221)
  %5223 = trunc i32 %5222 to i8
  %5224 = and i8 %5223, 1
  %5225 = xor i8 %5224, 1
  %5226 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5225, i8* %5226, align 1
  %5227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5227, align 1
  %5228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5228, align 1
  %5229 = lshr i64 %5215, 63
  %5230 = trunc i64 %5229 to i8
  %5231 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5230, i8* %5231, align 1
  %5232 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5218, i8* %5232, align 1
  store %struct.Memory* %loadMem_41640a, %struct.Memory** %MEMORY
  %loadMem_416411 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5233 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5234 = getelementptr inbounds %struct.GPR, %struct.GPR* %5233, i32 0, i32 33
  %5235 = getelementptr inbounds %struct.Reg, %struct.Reg* %5234, i32 0, i32 0
  %PC.i901 = bitcast %union.anon* %5235 to i64*
  %5236 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5237 = getelementptr inbounds %struct.GPR, %struct.GPR* %5236, i32 0, i32 1
  %5238 = getelementptr inbounds %struct.Reg, %struct.Reg* %5237, i32 0, i32 0
  %RAX.i902 = bitcast %union.anon* %5238 to i64*
  %5239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5240 = getelementptr inbounds %struct.GPR, %struct.GPR* %5239, i32 0, i32 5
  %5241 = getelementptr inbounds %struct.Reg, %struct.Reg* %5240, i32 0, i32 0
  %RCX.i903 = bitcast %union.anon* %5241 to i64*
  %5242 = load i64, i64* %RAX.i902
  %5243 = load i64, i64* %RCX.i903
  %5244 = load i64, i64* %PC.i901
  %5245 = add i64 %5244, 3
  store i64 %5245, i64* %PC.i901
  %5246 = add i64 %5243, %5242
  store i64 %5246, i64* %RAX.i902, align 8
  %5247 = icmp ult i64 %5246, %5242
  %5248 = icmp ult i64 %5246, %5243
  %5249 = or i1 %5247, %5248
  %5250 = zext i1 %5249 to i8
  %5251 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5250, i8* %5251, align 1
  %5252 = trunc i64 %5246 to i32
  %5253 = and i32 %5252, 255
  %5254 = call i32 @llvm.ctpop.i32(i32 %5253)
  %5255 = trunc i32 %5254 to i8
  %5256 = and i8 %5255, 1
  %5257 = xor i8 %5256, 1
  %5258 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5257, i8* %5258, align 1
  %5259 = xor i64 %5243, %5242
  %5260 = xor i64 %5259, %5246
  %5261 = lshr i64 %5260, 4
  %5262 = trunc i64 %5261 to i8
  %5263 = and i8 %5262, 1
  %5264 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5263, i8* %5264, align 1
  %5265 = icmp eq i64 %5246, 0
  %5266 = zext i1 %5265 to i8
  %5267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5266, i8* %5267, align 1
  %5268 = lshr i64 %5246, 63
  %5269 = trunc i64 %5268 to i8
  %5270 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5269, i8* %5270, align 1
  %5271 = lshr i64 %5242, 63
  %5272 = lshr i64 %5243, 63
  %5273 = xor i64 %5268, %5271
  %5274 = xor i64 %5268, %5272
  %5275 = add i64 %5273, %5274
  %5276 = icmp eq i64 %5275, 2
  %5277 = zext i1 %5276 to i8
  %5278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5277, i8* %5278, align 1
  store %struct.Memory* %loadMem_416411, %struct.Memory** %MEMORY
  %loadMem_416414 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5279 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5280 = getelementptr inbounds %struct.GPR, %struct.GPR* %5279, i32 0, i32 33
  %5281 = getelementptr inbounds %struct.Reg, %struct.Reg* %5280, i32 0, i32 0
  %PC.i899 = bitcast %union.anon* %5281 to i64*
  %5282 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5283 = getelementptr inbounds %struct.GPR, %struct.GPR* %5282, i32 0, i32 1
  %5284 = getelementptr inbounds %struct.Reg, %struct.Reg* %5283, i32 0, i32 0
  %RAX.i900 = bitcast %union.anon* %5284 to i64*
  %5285 = load i64, i64* %RAX.i900
  %5286 = add i64 %5285, 12
  %5287 = load i64, i64* %PC.i899
  %5288 = add i64 %5287, 4
  store i64 %5288, i64* %PC.i899
  %5289 = inttoptr i64 %5286 to i32*
  %5290 = load i32, i32* %5289
  %5291 = sub i32 %5290, 1
  %5292 = icmp ult i32 %5290, 1
  %5293 = zext i1 %5292 to i8
  %5294 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5293, i8* %5294, align 1
  %5295 = and i32 %5291, 255
  %5296 = call i32 @llvm.ctpop.i32(i32 %5295)
  %5297 = trunc i32 %5296 to i8
  %5298 = and i8 %5297, 1
  %5299 = xor i8 %5298, 1
  %5300 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5299, i8* %5300, align 1
  %5301 = xor i32 %5290, 1
  %5302 = xor i32 %5301, %5291
  %5303 = lshr i32 %5302, 4
  %5304 = trunc i32 %5303 to i8
  %5305 = and i8 %5304, 1
  %5306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5305, i8* %5306, align 1
  %5307 = icmp eq i32 %5291, 0
  %5308 = zext i1 %5307 to i8
  %5309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5308, i8* %5309, align 1
  %5310 = lshr i32 %5291, 31
  %5311 = trunc i32 %5310 to i8
  %5312 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5311, i8* %5312, align 1
  %5313 = lshr i32 %5290, 31
  %5314 = xor i32 %5310, %5313
  %5315 = add i32 %5314, %5313
  %5316 = icmp eq i32 %5315, 2
  %5317 = zext i1 %5316 to i8
  %5318 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5317, i8* %5318, align 1
  store %struct.Memory* %loadMem_416414, %struct.Memory** %MEMORY
  %loadMem_416418 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5319 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5320 = getelementptr inbounds %struct.GPR, %struct.GPR* %5319, i32 0, i32 33
  %5321 = getelementptr inbounds %struct.Reg, %struct.Reg* %5320, i32 0, i32 0
  %PC.i898 = bitcast %union.anon* %5321 to i64*
  %5322 = load i64, i64* %PC.i898
  %5323 = add i64 %5322, 187
  %5324 = load i64, i64* %PC.i898
  %5325 = add i64 %5324, 6
  %5326 = load i64, i64* %PC.i898
  %5327 = add i64 %5326, 6
  store i64 %5327, i64* %PC.i898
  %5328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %5329 = load i8, i8* %5328, align 1
  %5330 = icmp eq i8 %5329, 0
  %5331 = zext i1 %5330 to i8
  store i8 %5331, i8* %BRANCH_TAKEN, align 1
  %5332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5333 = select i1 %5330, i64 %5323, i64 %5325
  store i64 %5333, i64* %5332, align 8
  store %struct.Memory* %loadMem_416418, %struct.Memory** %MEMORY
  %loadBr_416418 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416418 = icmp eq i8 %loadBr_416418, 1
  br i1 %cmpBr_416418, label %block_.L_4164d3, label %block_41641e

block_41641e:                                     ; preds = %block_.L_4163f1
  %loadMem_41641e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5335 = getelementptr inbounds %struct.GPR, %struct.GPR* %5334, i32 0, i32 33
  %5336 = getelementptr inbounds %struct.Reg, %struct.Reg* %5335, i32 0, i32 0
  %PC.i896 = bitcast %union.anon* %5336 to i64*
  %5337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5338 = getelementptr inbounds %struct.GPR, %struct.GPR* %5337, i32 0, i32 1
  %5339 = getelementptr inbounds %struct.Reg, %struct.Reg* %5338, i32 0, i32 0
  %RAX.i897 = bitcast %union.anon* %5339 to i64*
  %5340 = load i64, i64* %PC.i896
  %5341 = add i64 %5340, 10
  store i64 %5341, i64* %PC.i896
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i897, align 8
  store %struct.Memory* %loadMem_41641e, %struct.Memory** %MEMORY
  %loadMem_416428 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5343 = getelementptr inbounds %struct.GPR, %struct.GPR* %5342, i32 0, i32 33
  %5344 = getelementptr inbounds %struct.Reg, %struct.Reg* %5343, i32 0, i32 0
  %PC.i893 = bitcast %union.anon* %5344 to i64*
  %5345 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5346 = getelementptr inbounds %struct.GPR, %struct.GPR* %5345, i32 0, i32 5
  %5347 = getelementptr inbounds %struct.Reg, %struct.Reg* %5346, i32 0, i32 0
  %RCX.i894 = bitcast %union.anon* %5347 to i64*
  %5348 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5349 = getelementptr inbounds %struct.GPR, %struct.GPR* %5348, i32 0, i32 15
  %5350 = getelementptr inbounds %struct.Reg, %struct.Reg* %5349, i32 0, i32 0
  %RBP.i895 = bitcast %union.anon* %5350 to i64*
  %5351 = load i64, i64* %RBP.i895
  %5352 = sub i64 %5351, 116
  %5353 = load i64, i64* %PC.i893
  %5354 = add i64 %5353, 4
  store i64 %5354, i64* %PC.i893
  %5355 = inttoptr i64 %5352 to i32*
  %5356 = load i32, i32* %5355
  %5357 = sext i32 %5356 to i64
  store i64 %5357, i64* %RCX.i894, align 8
  store %struct.Memory* %loadMem_416428, %struct.Memory** %MEMORY
  %loadMem_41642c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5358 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5359 = getelementptr inbounds %struct.GPR, %struct.GPR* %5358, i32 0, i32 33
  %5360 = getelementptr inbounds %struct.Reg, %struct.Reg* %5359, i32 0, i32 0
  %PC.i891 = bitcast %union.anon* %5360 to i64*
  %5361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5362 = getelementptr inbounds %struct.GPR, %struct.GPR* %5361, i32 0, i32 5
  %5363 = getelementptr inbounds %struct.Reg, %struct.Reg* %5362, i32 0, i32 0
  %RCX.i892 = bitcast %union.anon* %5363 to i64*
  %5364 = load i64, i64* %RCX.i892
  %5365 = load i64, i64* %PC.i891
  %5366 = add i64 %5365, 7
  store i64 %5366, i64* %PC.i891
  %5367 = sext i64 %5364 to i128
  %5368 = and i128 %5367, -18446744073709551616
  %5369 = zext i64 %5364 to i128
  %5370 = or i128 %5368, %5369
  %5371 = mul i128 744, %5370
  %5372 = trunc i128 %5371 to i64
  store i64 %5372, i64* %RCX.i892, align 8
  %5373 = sext i64 %5372 to i128
  %5374 = icmp ne i128 %5373, %5371
  %5375 = zext i1 %5374 to i8
  %5376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5375, i8* %5376, align 1
  %5377 = trunc i128 %5371 to i32
  %5378 = and i32 %5377, 255
  %5379 = call i32 @llvm.ctpop.i32(i32 %5378)
  %5380 = trunc i32 %5379 to i8
  %5381 = and i8 %5380, 1
  %5382 = xor i8 %5381, 1
  %5383 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5382, i8* %5383, align 1
  %5384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5384, align 1
  %5385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5385, align 1
  %5386 = lshr i64 %5372, 63
  %5387 = trunc i64 %5386 to i8
  %5388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5387, i8* %5388, align 1
  %5389 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5375, i8* %5389, align 1
  store %struct.Memory* %loadMem_41642c, %struct.Memory** %MEMORY
  %loadMem_416433 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5391 = getelementptr inbounds %struct.GPR, %struct.GPR* %5390, i32 0, i32 33
  %5392 = getelementptr inbounds %struct.Reg, %struct.Reg* %5391, i32 0, i32 0
  %PC.i888 = bitcast %union.anon* %5392 to i64*
  %5393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5394 = getelementptr inbounds %struct.GPR, %struct.GPR* %5393, i32 0, i32 1
  %5395 = getelementptr inbounds %struct.Reg, %struct.Reg* %5394, i32 0, i32 0
  %RAX.i889 = bitcast %union.anon* %5395 to i64*
  %5396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5397 = getelementptr inbounds %struct.GPR, %struct.GPR* %5396, i32 0, i32 5
  %5398 = getelementptr inbounds %struct.Reg, %struct.Reg* %5397, i32 0, i32 0
  %RCX.i890 = bitcast %union.anon* %5398 to i64*
  %5399 = load i64, i64* %RAX.i889
  %5400 = load i64, i64* %RCX.i890
  %5401 = load i64, i64* %PC.i888
  %5402 = add i64 %5401, 3
  store i64 %5402, i64* %PC.i888
  %5403 = add i64 %5400, %5399
  store i64 %5403, i64* %RAX.i889, align 8
  %5404 = icmp ult i64 %5403, %5399
  %5405 = icmp ult i64 %5403, %5400
  %5406 = or i1 %5404, %5405
  %5407 = zext i1 %5406 to i8
  %5408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5407, i8* %5408, align 1
  %5409 = trunc i64 %5403 to i32
  %5410 = and i32 %5409, 255
  %5411 = call i32 @llvm.ctpop.i32(i32 %5410)
  %5412 = trunc i32 %5411 to i8
  %5413 = and i8 %5412, 1
  %5414 = xor i8 %5413, 1
  %5415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5414, i8* %5415, align 1
  %5416 = xor i64 %5400, %5399
  %5417 = xor i64 %5416, %5403
  %5418 = lshr i64 %5417, 4
  %5419 = trunc i64 %5418 to i8
  %5420 = and i8 %5419, 1
  %5421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5420, i8* %5421, align 1
  %5422 = icmp eq i64 %5403, 0
  %5423 = zext i1 %5422 to i8
  %5424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5423, i8* %5424, align 1
  %5425 = lshr i64 %5403, 63
  %5426 = trunc i64 %5425 to i8
  %5427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5426, i8* %5427, align 1
  %5428 = lshr i64 %5399, 63
  %5429 = lshr i64 %5400, 63
  %5430 = xor i64 %5425, %5428
  %5431 = xor i64 %5425, %5429
  %5432 = add i64 %5430, %5431
  %5433 = icmp eq i64 %5432, 2
  %5434 = zext i1 %5433 to i8
  %5435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5434, i8* %5435, align 1
  store %struct.Memory* %loadMem_416433, %struct.Memory** %MEMORY
  %loadMem_416436 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5437 = getelementptr inbounds %struct.GPR, %struct.GPR* %5436, i32 0, i32 33
  %5438 = getelementptr inbounds %struct.Reg, %struct.Reg* %5437, i32 0, i32 0
  %PC.i885 = bitcast %union.anon* %5438 to i64*
  %5439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5440 = getelementptr inbounds %struct.GPR, %struct.GPR* %5439, i32 0, i32 1
  %5441 = getelementptr inbounds %struct.Reg, %struct.Reg* %5440, i32 0, i32 0
  %RAX.i886 = bitcast %union.anon* %5441 to i64*
  %5442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5443 = getelementptr inbounds %struct.GPR, %struct.GPR* %5442, i32 0, i32 7
  %5444 = getelementptr inbounds %struct.Reg, %struct.Reg* %5443, i32 0, i32 0
  %RDX.i887 = bitcast %union.anon* %5444 to i64*
  %5445 = load i64, i64* %RAX.i886
  %5446 = add i64 %5445, 4
  %5447 = load i64, i64* %PC.i885
  %5448 = add i64 %5447, 3
  store i64 %5448, i64* %PC.i885
  %5449 = inttoptr i64 %5446 to i32*
  %5450 = load i32, i32* %5449
  %5451 = zext i32 %5450 to i64
  store i64 %5451, i64* %RDX.i887, align 8
  store %struct.Memory* %loadMem_416436, %struct.Memory** %MEMORY
  %loadMem_416439 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5453 = getelementptr inbounds %struct.GPR, %struct.GPR* %5452, i32 0, i32 33
  %5454 = getelementptr inbounds %struct.Reg, %struct.Reg* %5453, i32 0, i32 0
  %PC.i882 = bitcast %union.anon* %5454 to i64*
  %5455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5456 = getelementptr inbounds %struct.GPR, %struct.GPR* %5455, i32 0, i32 1
  %5457 = getelementptr inbounds %struct.Reg, %struct.Reg* %5456, i32 0, i32 0
  %RAX.i883 = bitcast %union.anon* %5457 to i64*
  %5458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5459 = getelementptr inbounds %struct.GPR, %struct.GPR* %5458, i32 0, i32 15
  %5460 = getelementptr inbounds %struct.Reg, %struct.Reg* %5459, i32 0, i32 0
  %RBP.i884 = bitcast %union.anon* %5460 to i64*
  %5461 = load i64, i64* %RBP.i884
  %5462 = sub i64 %5461, 72
  %5463 = load i64, i64* %PC.i882
  %5464 = add i64 %5463, 4
  store i64 %5464, i64* %PC.i882
  %5465 = inttoptr i64 %5462 to i64*
  %5466 = load i64, i64* %5465
  store i64 %5466, i64* %RAX.i883, align 8
  store %struct.Memory* %loadMem_416439, %struct.Memory** %MEMORY
  %loadMem_41643d = load %struct.Memory*, %struct.Memory** %MEMORY
  %5467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5468 = getelementptr inbounds %struct.GPR, %struct.GPR* %5467, i32 0, i32 33
  %5469 = getelementptr inbounds %struct.Reg, %struct.Reg* %5468, i32 0, i32 0
  %PC.i879 = bitcast %union.anon* %5469 to i64*
  %5470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5471 = getelementptr inbounds %struct.GPR, %struct.GPR* %5470, i32 0, i32 1
  %5472 = getelementptr inbounds %struct.Reg, %struct.Reg* %5471, i32 0, i32 0
  %RAX.i880 = bitcast %union.anon* %5472 to i64*
  %5473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5474 = getelementptr inbounds %struct.GPR, %struct.GPR* %5473, i32 0, i32 7
  %5475 = getelementptr inbounds %struct.Reg, %struct.Reg* %5474, i32 0, i32 0
  %RDX.i881 = bitcast %union.anon* %5475 to i64*
  %5476 = load i64, i64* %RDX.i881
  %5477 = load i64, i64* %RAX.i880
  %5478 = load i64, i64* %PC.i879
  %5479 = add i64 %5478, 2
  store i64 %5479, i64* %PC.i879
  %5480 = trunc i64 %5476 to i32
  %5481 = inttoptr i64 %5477 to i32*
  %5482 = load i32, i32* %5481
  %5483 = add i32 %5482, %5480
  %5484 = zext i32 %5483 to i64
  store i64 %5484, i64* %RDX.i881, align 8
  %5485 = icmp ult i32 %5483, %5480
  %5486 = icmp ult i32 %5483, %5482
  %5487 = or i1 %5485, %5486
  %5488 = zext i1 %5487 to i8
  %5489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5488, i8* %5489, align 1
  %5490 = and i32 %5483, 255
  %5491 = call i32 @llvm.ctpop.i32(i32 %5490)
  %5492 = trunc i32 %5491 to i8
  %5493 = and i8 %5492, 1
  %5494 = xor i8 %5493, 1
  %5495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5494, i8* %5495, align 1
  %5496 = xor i32 %5482, %5480
  %5497 = xor i32 %5496, %5483
  %5498 = lshr i32 %5497, 4
  %5499 = trunc i32 %5498 to i8
  %5500 = and i8 %5499, 1
  %5501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5500, i8* %5501, align 1
  %5502 = icmp eq i32 %5483, 0
  %5503 = zext i1 %5502 to i8
  %5504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5503, i8* %5504, align 1
  %5505 = lshr i32 %5483, 31
  %5506 = trunc i32 %5505 to i8
  %5507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5506, i8* %5507, align 1
  %5508 = lshr i32 %5480, 31
  %5509 = lshr i32 %5482, 31
  %5510 = xor i32 %5505, %5508
  %5511 = xor i32 %5505, %5509
  %5512 = add i32 %5510, %5511
  %5513 = icmp eq i32 %5512, 2
  %5514 = zext i1 %5513 to i8
  %5515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5514, i8* %5515, align 1
  store %struct.Memory* %loadMem_41643d, %struct.Memory** %MEMORY
  %loadMem_41643f = load %struct.Memory*, %struct.Memory** %MEMORY
  %5516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5517 = getelementptr inbounds %struct.GPR, %struct.GPR* %5516, i32 0, i32 33
  %5518 = getelementptr inbounds %struct.Reg, %struct.Reg* %5517, i32 0, i32 0
  %PC.i876 = bitcast %union.anon* %5518 to i64*
  %5519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5520 = getelementptr inbounds %struct.GPR, %struct.GPR* %5519, i32 0, i32 7
  %5521 = getelementptr inbounds %struct.Reg, %struct.Reg* %5520, i32 0, i32 0
  %EDX.i877 = bitcast %union.anon* %5521 to i32*
  %5522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5523 = getelementptr inbounds %struct.GPR, %struct.GPR* %5522, i32 0, i32 1
  %5524 = getelementptr inbounds %struct.Reg, %struct.Reg* %5523, i32 0, i32 0
  %RAX.i878 = bitcast %union.anon* %5524 to i64*
  %5525 = load i64, i64* %RAX.i878
  %5526 = load i32, i32* %EDX.i877
  %5527 = zext i32 %5526 to i64
  %5528 = load i64, i64* %PC.i876
  %5529 = add i64 %5528, 2
  store i64 %5529, i64* %PC.i876
  %5530 = inttoptr i64 %5525 to i32*
  store i32 %5526, i32* %5530
  store %struct.Memory* %loadMem_41643f, %struct.Memory** %MEMORY
  %loadMem_416441 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5532 = getelementptr inbounds %struct.GPR, %struct.GPR* %5531, i32 0, i32 33
  %5533 = getelementptr inbounds %struct.Reg, %struct.Reg* %5532, i32 0, i32 0
  %PC.i874 = bitcast %union.anon* %5533 to i64*
  %5534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5535 = getelementptr inbounds %struct.GPR, %struct.GPR* %5534, i32 0, i32 15
  %5536 = getelementptr inbounds %struct.Reg, %struct.Reg* %5535, i32 0, i32 0
  %RBP.i875 = bitcast %union.anon* %5536 to i64*
  %5537 = load i64, i64* %RBP.i875
  %5538 = sub i64 %5537, 120
  %5539 = load i64, i64* %PC.i874
  %5540 = add i64 %5539, 7
  store i64 %5540, i64* %PC.i874
  %5541 = inttoptr i64 %5538 to i32*
  store i32 0, i32* %5541
  store %struct.Memory* %loadMem_416441, %struct.Memory** %MEMORY
  br label %block_.L_416448

block_.L_416448:                                  ; preds = %block_.L_4164c0, %block_41641e
  %loadMem_416448 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5543 = getelementptr inbounds %struct.GPR, %struct.GPR* %5542, i32 0, i32 33
  %5544 = getelementptr inbounds %struct.Reg, %struct.Reg* %5543, i32 0, i32 0
  %PC.i872 = bitcast %union.anon* %5544 to i64*
  %5545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5546 = getelementptr inbounds %struct.GPR, %struct.GPR* %5545, i32 0, i32 1
  %5547 = getelementptr inbounds %struct.Reg, %struct.Reg* %5546, i32 0, i32 0
  %RAX.i873 = bitcast %union.anon* %5547 to i64*
  %5548 = load i64, i64* %PC.i872
  %5549 = add i64 %5548, 10
  store i64 %5549, i64* %PC.i872
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i873, align 8
  store %struct.Memory* %loadMem_416448, %struct.Memory** %MEMORY
  %loadMem_416452 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5551 = getelementptr inbounds %struct.GPR, %struct.GPR* %5550, i32 0, i32 33
  %5552 = getelementptr inbounds %struct.Reg, %struct.Reg* %5551, i32 0, i32 0
  %PC.i869 = bitcast %union.anon* %5552 to i64*
  %5553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5554 = getelementptr inbounds %struct.GPR, %struct.GPR* %5553, i32 0, i32 5
  %5555 = getelementptr inbounds %struct.Reg, %struct.Reg* %5554, i32 0, i32 0
  %RCX.i870 = bitcast %union.anon* %5555 to i64*
  %5556 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5557 = getelementptr inbounds %struct.GPR, %struct.GPR* %5556, i32 0, i32 15
  %5558 = getelementptr inbounds %struct.Reg, %struct.Reg* %5557, i32 0, i32 0
  %RBP.i871 = bitcast %union.anon* %5558 to i64*
  %5559 = load i64, i64* %RBP.i871
  %5560 = sub i64 %5559, 120
  %5561 = load i64, i64* %PC.i869
  %5562 = add i64 %5561, 3
  store i64 %5562, i64* %PC.i869
  %5563 = inttoptr i64 %5560 to i32*
  %5564 = load i32, i32* %5563
  %5565 = zext i32 %5564 to i64
  store i64 %5565, i64* %RCX.i870, align 8
  store %struct.Memory* %loadMem_416452, %struct.Memory** %MEMORY
  %loadMem_416455 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5567 = getelementptr inbounds %struct.GPR, %struct.GPR* %5566, i32 0, i32 33
  %5568 = getelementptr inbounds %struct.Reg, %struct.Reg* %5567, i32 0, i32 0
  %PC.i866 = bitcast %union.anon* %5568 to i64*
  %5569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5570 = getelementptr inbounds %struct.GPR, %struct.GPR* %5569, i32 0, i32 7
  %5571 = getelementptr inbounds %struct.Reg, %struct.Reg* %5570, i32 0, i32 0
  %RDX.i867 = bitcast %union.anon* %5571 to i64*
  %5572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5573 = getelementptr inbounds %struct.GPR, %struct.GPR* %5572, i32 0, i32 15
  %5574 = getelementptr inbounds %struct.Reg, %struct.Reg* %5573, i32 0, i32 0
  %RBP.i868 = bitcast %union.anon* %5574 to i64*
  %5575 = load i64, i64* %RBP.i868
  %5576 = sub i64 %5575, 116
  %5577 = load i64, i64* %PC.i866
  %5578 = add i64 %5577, 4
  store i64 %5578, i64* %PC.i866
  %5579 = inttoptr i64 %5576 to i32*
  %5580 = load i32, i32* %5579
  %5581 = sext i32 %5580 to i64
  store i64 %5581, i64* %RDX.i867, align 8
  store %struct.Memory* %loadMem_416455, %struct.Memory** %MEMORY
  %loadMem_416459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5583 = getelementptr inbounds %struct.GPR, %struct.GPR* %5582, i32 0, i32 33
  %5584 = getelementptr inbounds %struct.Reg, %struct.Reg* %5583, i32 0, i32 0
  %PC.i864 = bitcast %union.anon* %5584 to i64*
  %5585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5586 = getelementptr inbounds %struct.GPR, %struct.GPR* %5585, i32 0, i32 7
  %5587 = getelementptr inbounds %struct.Reg, %struct.Reg* %5586, i32 0, i32 0
  %RDX.i865 = bitcast %union.anon* %5587 to i64*
  %5588 = load i64, i64* %RDX.i865
  %5589 = load i64, i64* %PC.i864
  %5590 = add i64 %5589, 7
  store i64 %5590, i64* %PC.i864
  %5591 = sext i64 %5588 to i128
  %5592 = and i128 %5591, -18446744073709551616
  %5593 = zext i64 %5588 to i128
  %5594 = or i128 %5592, %5593
  %5595 = mul i128 744, %5594
  %5596 = trunc i128 %5595 to i64
  store i64 %5596, i64* %RDX.i865, align 8
  %5597 = sext i64 %5596 to i128
  %5598 = icmp ne i128 %5597, %5595
  %5599 = zext i1 %5598 to i8
  %5600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5599, i8* %5600, align 1
  %5601 = trunc i128 %5595 to i32
  %5602 = and i32 %5601, 255
  %5603 = call i32 @llvm.ctpop.i32(i32 %5602)
  %5604 = trunc i32 %5603 to i8
  %5605 = and i8 %5604, 1
  %5606 = xor i8 %5605, 1
  %5607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5606, i8* %5607, align 1
  %5608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5608, align 1
  %5609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5609, align 1
  %5610 = lshr i64 %5596, 63
  %5611 = trunc i64 %5610 to i8
  %5612 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5611, i8* %5612, align 1
  %5613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5599, i8* %5613, align 1
  store %struct.Memory* %loadMem_416459, %struct.Memory** %MEMORY
  %loadMem_416460 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5615 = getelementptr inbounds %struct.GPR, %struct.GPR* %5614, i32 0, i32 33
  %5616 = getelementptr inbounds %struct.Reg, %struct.Reg* %5615, i32 0, i32 0
  %PC.i861 = bitcast %union.anon* %5616 to i64*
  %5617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5618 = getelementptr inbounds %struct.GPR, %struct.GPR* %5617, i32 0, i32 1
  %5619 = getelementptr inbounds %struct.Reg, %struct.Reg* %5618, i32 0, i32 0
  %RAX.i862 = bitcast %union.anon* %5619 to i64*
  %5620 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5621 = getelementptr inbounds %struct.GPR, %struct.GPR* %5620, i32 0, i32 7
  %5622 = getelementptr inbounds %struct.Reg, %struct.Reg* %5621, i32 0, i32 0
  %RDX.i863 = bitcast %union.anon* %5622 to i64*
  %5623 = load i64, i64* %RAX.i862
  %5624 = load i64, i64* %RDX.i863
  %5625 = load i64, i64* %PC.i861
  %5626 = add i64 %5625, 3
  store i64 %5626, i64* %PC.i861
  %5627 = add i64 %5624, %5623
  store i64 %5627, i64* %RAX.i862, align 8
  %5628 = icmp ult i64 %5627, %5623
  %5629 = icmp ult i64 %5627, %5624
  %5630 = or i1 %5628, %5629
  %5631 = zext i1 %5630 to i8
  %5632 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5631, i8* %5632, align 1
  %5633 = trunc i64 %5627 to i32
  %5634 = and i32 %5633, 255
  %5635 = call i32 @llvm.ctpop.i32(i32 %5634)
  %5636 = trunc i32 %5635 to i8
  %5637 = and i8 %5636, 1
  %5638 = xor i8 %5637, 1
  %5639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5638, i8* %5639, align 1
  %5640 = xor i64 %5624, %5623
  %5641 = xor i64 %5640, %5627
  %5642 = lshr i64 %5641, 4
  %5643 = trunc i64 %5642 to i8
  %5644 = and i8 %5643, 1
  %5645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5644, i8* %5645, align 1
  %5646 = icmp eq i64 %5627, 0
  %5647 = zext i1 %5646 to i8
  %5648 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5647, i8* %5648, align 1
  %5649 = lshr i64 %5627, 63
  %5650 = trunc i64 %5649 to i8
  %5651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5650, i8* %5651, align 1
  %5652 = lshr i64 %5623, 63
  %5653 = lshr i64 %5624, 63
  %5654 = xor i64 %5649, %5652
  %5655 = xor i64 %5649, %5653
  %5656 = add i64 %5654, %5655
  %5657 = icmp eq i64 %5656, 2
  %5658 = zext i1 %5657 to i8
  %5659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5658, i8* %5659, align 1
  store %struct.Memory* %loadMem_416460, %struct.Memory** %MEMORY
  %loadMem_416463 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5661 = getelementptr inbounds %struct.GPR, %struct.GPR* %5660, i32 0, i32 33
  %5662 = getelementptr inbounds %struct.Reg, %struct.Reg* %5661, i32 0, i32 0
  %PC.i858 = bitcast %union.anon* %5662 to i64*
  %5663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5664 = getelementptr inbounds %struct.GPR, %struct.GPR* %5663, i32 0, i32 5
  %5665 = getelementptr inbounds %struct.Reg, %struct.Reg* %5664, i32 0, i32 0
  %ECX.i859 = bitcast %union.anon* %5665 to i32*
  %5666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5667 = getelementptr inbounds %struct.GPR, %struct.GPR* %5666, i32 0, i32 1
  %5668 = getelementptr inbounds %struct.Reg, %struct.Reg* %5667, i32 0, i32 0
  %RAX.i860 = bitcast %union.anon* %5668 to i64*
  %5669 = load i32, i32* %ECX.i859
  %5670 = zext i32 %5669 to i64
  %5671 = load i64, i64* %RAX.i860
  %5672 = add i64 %5671, 96
  %5673 = load i64, i64* %PC.i858
  %5674 = add i64 %5673, 3
  store i64 %5674, i64* %PC.i858
  %5675 = inttoptr i64 %5672 to i32*
  %5676 = load i32, i32* %5675
  %5677 = sub i32 %5669, %5676
  %5678 = icmp ult i32 %5669, %5676
  %5679 = zext i1 %5678 to i8
  %5680 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5679, i8* %5680, align 1
  %5681 = and i32 %5677, 255
  %5682 = call i32 @llvm.ctpop.i32(i32 %5681)
  %5683 = trunc i32 %5682 to i8
  %5684 = and i8 %5683, 1
  %5685 = xor i8 %5684, 1
  %5686 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5685, i8* %5686, align 1
  %5687 = xor i32 %5676, %5669
  %5688 = xor i32 %5687, %5677
  %5689 = lshr i32 %5688, 4
  %5690 = trunc i32 %5689 to i8
  %5691 = and i8 %5690, 1
  %5692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5691, i8* %5692, align 1
  %5693 = icmp eq i32 %5677, 0
  %5694 = zext i1 %5693 to i8
  %5695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5694, i8* %5695, align 1
  %5696 = lshr i32 %5677, 31
  %5697 = trunc i32 %5696 to i8
  %5698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5697, i8* %5698, align 1
  %5699 = lshr i32 %5669, 31
  %5700 = lshr i32 %5676, 31
  %5701 = xor i32 %5700, %5699
  %5702 = xor i32 %5696, %5699
  %5703 = add i32 %5702, %5701
  %5704 = icmp eq i32 %5703, 2
  %5705 = zext i1 %5704 to i8
  %5706 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5705, i8* %5706, align 1
  store %struct.Memory* %loadMem_416463, %struct.Memory** %MEMORY
  %loadMem_416466 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5707 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5708 = getelementptr inbounds %struct.GPR, %struct.GPR* %5707, i32 0, i32 33
  %5709 = getelementptr inbounds %struct.Reg, %struct.Reg* %5708, i32 0, i32 0
  %PC.i857 = bitcast %union.anon* %5709 to i64*
  %5710 = load i64, i64* %PC.i857
  %5711 = add i64 %5710, 104
  %5712 = load i64, i64* %PC.i857
  %5713 = add i64 %5712, 6
  %5714 = load i64, i64* %PC.i857
  %5715 = add i64 %5714, 6
  store i64 %5715, i64* %PC.i857
  %5716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %5717 = load i8, i8* %5716, align 1
  %5718 = icmp ne i8 %5717, 0
  %5719 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %5720 = load i8, i8* %5719, align 1
  %5721 = icmp ne i8 %5720, 0
  %5722 = xor i1 %5718, %5721
  %5723 = xor i1 %5722, true
  %5724 = zext i1 %5723 to i8
  store i8 %5724, i8* %BRANCH_TAKEN, align 1
  %5725 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %5726 = select i1 %5722, i64 %5713, i64 %5711
  store i64 %5726, i64* %5725, align 8
  store %struct.Memory* %loadMem_416466, %struct.Memory** %MEMORY
  %loadBr_416466 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416466 = icmp eq i8 %loadBr_416466, 1
  br i1 %cmpBr_416466, label %block_.L_4164ce, label %block_41646c

block_41646c:                                     ; preds = %block_.L_416448
  %loadMem_41646c = load %struct.Memory*, %struct.Memory** %MEMORY
  %5727 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5728 = getelementptr inbounds %struct.GPR, %struct.GPR* %5727, i32 0, i32 33
  %5729 = getelementptr inbounds %struct.Reg, %struct.Reg* %5728, i32 0, i32 0
  %PC.i855 = bitcast %union.anon* %5729 to i64*
  %5730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5731 = getelementptr inbounds %struct.GPR, %struct.GPR* %5730, i32 0, i32 1
  %5732 = getelementptr inbounds %struct.Reg, %struct.Reg* %5731, i32 0, i32 0
  %RAX.i856 = bitcast %union.anon* %5732 to i64*
  %5733 = load i64, i64* %PC.i855
  %5734 = add i64 %5733, 10
  store i64 %5734, i64* %PC.i855
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i856, align 8
  store %struct.Memory* %loadMem_41646c, %struct.Memory** %MEMORY
  %loadMem_416476 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5735 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5736 = getelementptr inbounds %struct.GPR, %struct.GPR* %5735, i32 0, i32 33
  %5737 = getelementptr inbounds %struct.Reg, %struct.Reg* %5736, i32 0, i32 0
  %PC.i852 = bitcast %union.anon* %5737 to i64*
  %5738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5739 = getelementptr inbounds %struct.GPR, %struct.GPR* %5738, i32 0, i32 5
  %5740 = getelementptr inbounds %struct.Reg, %struct.Reg* %5739, i32 0, i32 0
  %RCX.i853 = bitcast %union.anon* %5740 to i64*
  %5741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5742 = getelementptr inbounds %struct.GPR, %struct.GPR* %5741, i32 0, i32 15
  %5743 = getelementptr inbounds %struct.Reg, %struct.Reg* %5742, i32 0, i32 0
  %RBP.i854 = bitcast %union.anon* %5743 to i64*
  %5744 = load i64, i64* %RBP.i854
  %5745 = sub i64 %5744, 116
  %5746 = load i64, i64* %PC.i852
  %5747 = add i64 %5746, 4
  store i64 %5747, i64* %PC.i852
  %5748 = inttoptr i64 %5745 to i32*
  %5749 = load i32, i32* %5748
  %5750 = sext i32 %5749 to i64
  store i64 %5750, i64* %RCX.i853, align 8
  store %struct.Memory* %loadMem_416476, %struct.Memory** %MEMORY
  %loadMem_41647a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5752 = getelementptr inbounds %struct.GPR, %struct.GPR* %5751, i32 0, i32 33
  %5753 = getelementptr inbounds %struct.Reg, %struct.Reg* %5752, i32 0, i32 0
  %PC.i850 = bitcast %union.anon* %5753 to i64*
  %5754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5755 = getelementptr inbounds %struct.GPR, %struct.GPR* %5754, i32 0, i32 5
  %5756 = getelementptr inbounds %struct.Reg, %struct.Reg* %5755, i32 0, i32 0
  %RCX.i851 = bitcast %union.anon* %5756 to i64*
  %5757 = load i64, i64* %RCX.i851
  %5758 = load i64, i64* %PC.i850
  %5759 = add i64 %5758, 7
  store i64 %5759, i64* %PC.i850
  %5760 = sext i64 %5757 to i128
  %5761 = and i128 %5760, -18446744073709551616
  %5762 = zext i64 %5757 to i128
  %5763 = or i128 %5761, %5762
  %5764 = mul i128 744, %5763
  %5765 = trunc i128 %5764 to i64
  store i64 %5765, i64* %RCX.i851, align 8
  %5766 = sext i64 %5765 to i128
  %5767 = icmp ne i128 %5766, %5764
  %5768 = zext i1 %5767 to i8
  %5769 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5768, i8* %5769, align 1
  %5770 = trunc i128 %5764 to i32
  %5771 = and i32 %5770, 255
  %5772 = call i32 @llvm.ctpop.i32(i32 %5771)
  %5773 = trunc i32 %5772 to i8
  %5774 = and i8 %5773, 1
  %5775 = xor i8 %5774, 1
  %5776 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5775, i8* %5776, align 1
  %5777 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5777, align 1
  %5778 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5778, align 1
  %5779 = lshr i64 %5765, 63
  %5780 = trunc i64 %5779 to i8
  %5781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5780, i8* %5781, align 1
  %5782 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5768, i8* %5782, align 1
  store %struct.Memory* %loadMem_41647a, %struct.Memory** %MEMORY
  %loadMem_416481 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5783 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5784 = getelementptr inbounds %struct.GPR, %struct.GPR* %5783, i32 0, i32 33
  %5785 = getelementptr inbounds %struct.Reg, %struct.Reg* %5784, i32 0, i32 0
  %PC.i847 = bitcast %union.anon* %5785 to i64*
  %5786 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5787 = getelementptr inbounds %struct.GPR, %struct.GPR* %5786, i32 0, i32 1
  %5788 = getelementptr inbounds %struct.Reg, %struct.Reg* %5787, i32 0, i32 0
  %RAX.i848 = bitcast %union.anon* %5788 to i64*
  %5789 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5790 = getelementptr inbounds %struct.GPR, %struct.GPR* %5789, i32 0, i32 7
  %5791 = getelementptr inbounds %struct.Reg, %struct.Reg* %5790, i32 0, i32 0
  %RDX.i849 = bitcast %union.anon* %5791 to i64*
  %5792 = load i64, i64* %RAX.i848
  %5793 = load i64, i64* %PC.i847
  %5794 = add i64 %5793, 3
  store i64 %5794, i64* %PC.i847
  store i64 %5792, i64* %RDX.i849, align 8
  store %struct.Memory* %loadMem_416481, %struct.Memory** %MEMORY
  %loadMem_416484 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5795 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5796 = getelementptr inbounds %struct.GPR, %struct.GPR* %5795, i32 0, i32 33
  %5797 = getelementptr inbounds %struct.Reg, %struct.Reg* %5796, i32 0, i32 0
  %PC.i844 = bitcast %union.anon* %5797 to i64*
  %5798 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5799 = getelementptr inbounds %struct.GPR, %struct.GPR* %5798, i32 0, i32 5
  %5800 = getelementptr inbounds %struct.Reg, %struct.Reg* %5799, i32 0, i32 0
  %RCX.i845 = bitcast %union.anon* %5800 to i64*
  %5801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5802 = getelementptr inbounds %struct.GPR, %struct.GPR* %5801, i32 0, i32 7
  %5803 = getelementptr inbounds %struct.Reg, %struct.Reg* %5802, i32 0, i32 0
  %RDX.i846 = bitcast %union.anon* %5803 to i64*
  %5804 = load i64, i64* %RDX.i846
  %5805 = load i64, i64* %RCX.i845
  %5806 = load i64, i64* %PC.i844
  %5807 = add i64 %5806, 3
  store i64 %5807, i64* %PC.i844
  %5808 = add i64 %5805, %5804
  store i64 %5808, i64* %RDX.i846, align 8
  %5809 = icmp ult i64 %5808, %5804
  %5810 = icmp ult i64 %5808, %5805
  %5811 = or i1 %5809, %5810
  %5812 = zext i1 %5811 to i8
  %5813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5812, i8* %5813, align 1
  %5814 = trunc i64 %5808 to i32
  %5815 = and i32 %5814, 255
  %5816 = call i32 @llvm.ctpop.i32(i32 %5815)
  %5817 = trunc i32 %5816 to i8
  %5818 = and i8 %5817, 1
  %5819 = xor i8 %5818, 1
  %5820 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5819, i8* %5820, align 1
  %5821 = xor i64 %5805, %5804
  %5822 = xor i64 %5821, %5808
  %5823 = lshr i64 %5822, 4
  %5824 = trunc i64 %5823 to i8
  %5825 = and i8 %5824, 1
  %5826 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5825, i8* %5826, align 1
  %5827 = icmp eq i64 %5808, 0
  %5828 = zext i1 %5827 to i8
  %5829 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5828, i8* %5829, align 1
  %5830 = lshr i64 %5808, 63
  %5831 = trunc i64 %5830 to i8
  %5832 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5831, i8* %5832, align 1
  %5833 = lshr i64 %5804, 63
  %5834 = lshr i64 %5805, 63
  %5835 = xor i64 %5830, %5833
  %5836 = xor i64 %5830, %5834
  %5837 = add i64 %5835, %5836
  %5838 = icmp eq i64 %5837, 2
  %5839 = zext i1 %5838 to i8
  %5840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5839, i8* %5840, align 1
  store %struct.Memory* %loadMem_416484, %struct.Memory** %MEMORY
  %loadMem_416487 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5842 = getelementptr inbounds %struct.GPR, %struct.GPR* %5841, i32 0, i32 33
  %5843 = getelementptr inbounds %struct.Reg, %struct.Reg* %5842, i32 0, i32 0
  %PC.i841 = bitcast %union.anon* %5843 to i64*
  %5844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5845 = getelementptr inbounds %struct.GPR, %struct.GPR* %5844, i32 0, i32 5
  %5846 = getelementptr inbounds %struct.Reg, %struct.Reg* %5845, i32 0, i32 0
  %RCX.i842 = bitcast %union.anon* %5846 to i64*
  %5847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5848 = getelementptr inbounds %struct.GPR, %struct.GPR* %5847, i32 0, i32 15
  %5849 = getelementptr inbounds %struct.Reg, %struct.Reg* %5848, i32 0, i32 0
  %RBP.i843 = bitcast %union.anon* %5849 to i64*
  %5850 = load i64, i64* %RBP.i843
  %5851 = sub i64 %5850, 120
  %5852 = load i64, i64* %PC.i841
  %5853 = add i64 %5852, 4
  store i64 %5853, i64* %PC.i841
  %5854 = inttoptr i64 %5851 to i32*
  %5855 = load i32, i32* %5854
  %5856 = sext i32 %5855 to i64
  store i64 %5856, i64* %RCX.i842, align 8
  store %struct.Memory* %loadMem_416487, %struct.Memory** %MEMORY
  %loadMem_41648b = load %struct.Memory*, %struct.Memory** %MEMORY
  %5857 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5858 = getelementptr inbounds %struct.GPR, %struct.GPR* %5857, i32 0, i32 33
  %5859 = getelementptr inbounds %struct.Reg, %struct.Reg* %5858, i32 0, i32 0
  %PC.i838 = bitcast %union.anon* %5859 to i64*
  %5860 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5861 = getelementptr inbounds %struct.GPR, %struct.GPR* %5860, i32 0, i32 5
  %5862 = getelementptr inbounds %struct.Reg, %struct.Reg* %5861, i32 0, i32 0
  %RCX.i839 = bitcast %union.anon* %5862 to i64*
  %5863 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5864 = getelementptr inbounds %struct.GPR, %struct.GPR* %5863, i32 0, i32 7
  %5865 = getelementptr inbounds %struct.Reg, %struct.Reg* %5864, i32 0, i32 0
  %RDX.i840 = bitcast %union.anon* %5865 to i64*
  %5866 = load i64, i64* %RDX.i840
  %5867 = load i64, i64* %RCX.i839
  %5868 = mul i64 %5867, 4
  %5869 = add i64 %5866, 100
  %5870 = add i64 %5869, %5868
  %5871 = load i64, i64* %PC.i838
  %5872 = add i64 %5871, 5
  store i64 %5872, i64* %PC.i838
  %5873 = inttoptr i64 %5870 to i32*
  %5874 = load i32, i32* %5873
  %5875 = sext i32 %5874 to i64
  store i64 %5875, i64* %RCX.i839, align 8
  store %struct.Memory* %loadMem_41648b, %struct.Memory** %MEMORY
  %loadMem_416490 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5877 = getelementptr inbounds %struct.GPR, %struct.GPR* %5876, i32 0, i32 33
  %5878 = getelementptr inbounds %struct.Reg, %struct.Reg* %5877, i32 0, i32 0
  %PC.i836 = bitcast %union.anon* %5878 to i64*
  %5879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5880 = getelementptr inbounds %struct.GPR, %struct.GPR* %5879, i32 0, i32 5
  %5881 = getelementptr inbounds %struct.Reg, %struct.Reg* %5880, i32 0, i32 0
  %RCX.i837 = bitcast %union.anon* %5881 to i64*
  %5882 = load i64, i64* %RCX.i837
  %5883 = load i64, i64* %PC.i836
  %5884 = add i64 %5883, 7
  store i64 %5884, i64* %PC.i836
  %5885 = sext i64 %5882 to i128
  %5886 = and i128 %5885, -18446744073709551616
  %5887 = zext i64 %5882 to i128
  %5888 = or i128 %5886, %5887
  %5889 = mul i128 744, %5888
  %5890 = trunc i128 %5889 to i64
  store i64 %5890, i64* %RCX.i837, align 8
  %5891 = sext i64 %5890 to i128
  %5892 = icmp ne i128 %5891, %5889
  %5893 = zext i1 %5892 to i8
  %5894 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5893, i8* %5894, align 1
  %5895 = trunc i128 %5889 to i32
  %5896 = and i32 %5895, 255
  %5897 = call i32 @llvm.ctpop.i32(i32 %5896)
  %5898 = trunc i32 %5897 to i8
  %5899 = and i8 %5898, 1
  %5900 = xor i8 %5899, 1
  %5901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5900, i8* %5901, align 1
  %5902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %5902, align 1
  %5903 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %5903, align 1
  %5904 = lshr i64 %5890, 63
  %5905 = trunc i64 %5904 to i8
  %5906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5905, i8* %5906, align 1
  %5907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5893, i8* %5907, align 1
  store %struct.Memory* %loadMem_416490, %struct.Memory** %MEMORY
  %loadMem_416497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5909 = getelementptr inbounds %struct.GPR, %struct.GPR* %5908, i32 0, i32 33
  %5910 = getelementptr inbounds %struct.Reg, %struct.Reg* %5909, i32 0, i32 0
  %PC.i833 = bitcast %union.anon* %5910 to i64*
  %5911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5912 = getelementptr inbounds %struct.GPR, %struct.GPR* %5911, i32 0, i32 1
  %5913 = getelementptr inbounds %struct.Reg, %struct.Reg* %5912, i32 0, i32 0
  %RAX.i834 = bitcast %union.anon* %5913 to i64*
  %5914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5915 = getelementptr inbounds %struct.GPR, %struct.GPR* %5914, i32 0, i32 5
  %5916 = getelementptr inbounds %struct.Reg, %struct.Reg* %5915, i32 0, i32 0
  %RCX.i835 = bitcast %union.anon* %5916 to i64*
  %5917 = load i64, i64* %RAX.i834
  %5918 = load i64, i64* %RCX.i835
  %5919 = load i64, i64* %PC.i833
  %5920 = add i64 %5919, 3
  store i64 %5920, i64* %PC.i833
  %5921 = add i64 %5918, %5917
  store i64 %5921, i64* %RAX.i834, align 8
  %5922 = icmp ult i64 %5921, %5917
  %5923 = icmp ult i64 %5921, %5918
  %5924 = or i1 %5922, %5923
  %5925 = zext i1 %5924 to i8
  %5926 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5925, i8* %5926, align 1
  %5927 = trunc i64 %5921 to i32
  %5928 = and i32 %5927, 255
  %5929 = call i32 @llvm.ctpop.i32(i32 %5928)
  %5930 = trunc i32 %5929 to i8
  %5931 = and i8 %5930, 1
  %5932 = xor i8 %5931, 1
  %5933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %5932, i8* %5933, align 1
  %5934 = xor i64 %5918, %5917
  %5935 = xor i64 %5934, %5921
  %5936 = lshr i64 %5935, 4
  %5937 = trunc i64 %5936 to i8
  %5938 = and i8 %5937, 1
  %5939 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %5938, i8* %5939, align 1
  %5940 = icmp eq i64 %5921, 0
  %5941 = zext i1 %5940 to i8
  %5942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %5941, i8* %5942, align 1
  %5943 = lshr i64 %5921, 63
  %5944 = trunc i64 %5943 to i8
  %5945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %5944, i8* %5945, align 1
  %5946 = lshr i64 %5917, 63
  %5947 = lshr i64 %5918, 63
  %5948 = xor i64 %5943, %5946
  %5949 = xor i64 %5943, %5947
  %5950 = add i64 %5948, %5949
  %5951 = icmp eq i64 %5950, 2
  %5952 = zext i1 %5951 to i8
  %5953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %5952, i8* %5953, align 1
  store %struct.Memory* %loadMem_416497, %struct.Memory** %MEMORY
  %loadMem_41649a = load %struct.Memory*, %struct.Memory** %MEMORY
  %5954 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5955 = getelementptr inbounds %struct.GPR, %struct.GPR* %5954, i32 0, i32 33
  %5956 = getelementptr inbounds %struct.Reg, %struct.Reg* %5955, i32 0, i32 0
  %PC.i830 = bitcast %union.anon* %5956 to i64*
  %5957 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5958 = getelementptr inbounds %struct.GPR, %struct.GPR* %5957, i32 0, i32 1
  %5959 = getelementptr inbounds %struct.Reg, %struct.Reg* %5958, i32 0, i32 0
  %RAX.i831 = bitcast %union.anon* %5959 to i64*
  %5960 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5961 = getelementptr inbounds %struct.GPR, %struct.GPR* %5960, i32 0, i32 15
  %5962 = getelementptr inbounds %struct.Reg, %struct.Reg* %5961, i32 0, i32 0
  %RBP.i832 = bitcast %union.anon* %5962 to i64*
  %5963 = load i64, i64* %RBP.i832
  %5964 = sub i64 %5963, 128
  %5965 = load i64, i64* %RAX.i831
  %5966 = load i64, i64* %PC.i830
  %5967 = add i64 %5966, 4
  store i64 %5967, i64* %PC.i830
  %5968 = inttoptr i64 %5964 to i64*
  store i64 %5965, i64* %5968
  store %struct.Memory* %loadMem_41649a, %struct.Memory** %MEMORY
  %loadMem_41649e = load %struct.Memory*, %struct.Memory** %MEMORY
  %5969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5970 = getelementptr inbounds %struct.GPR, %struct.GPR* %5969, i32 0, i32 33
  %5971 = getelementptr inbounds %struct.Reg, %struct.Reg* %5970, i32 0, i32 0
  %PC.i827 = bitcast %union.anon* %5971 to i64*
  %5972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5973 = getelementptr inbounds %struct.GPR, %struct.GPR* %5972, i32 0, i32 1
  %5974 = getelementptr inbounds %struct.Reg, %struct.Reg* %5973, i32 0, i32 0
  %RAX.i828 = bitcast %union.anon* %5974 to i64*
  %5975 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5976 = getelementptr inbounds %struct.GPR, %struct.GPR* %5975, i32 0, i32 15
  %5977 = getelementptr inbounds %struct.Reg, %struct.Reg* %5976, i32 0, i32 0
  %RBP.i829 = bitcast %union.anon* %5977 to i64*
  %5978 = load i64, i64* %RBP.i829
  %5979 = sub i64 %5978, 128
  %5980 = load i64, i64* %PC.i827
  %5981 = add i64 %5980, 4
  store i64 %5981, i64* %PC.i827
  %5982 = inttoptr i64 %5979 to i64*
  %5983 = load i64, i64* %5982
  store i64 %5983, i64* %RAX.i828, align 8
  store %struct.Memory* %loadMem_41649e, %struct.Memory** %MEMORY
  %loadMem_4164a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %5984 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5985 = getelementptr inbounds %struct.GPR, %struct.GPR* %5984, i32 0, i32 33
  %5986 = getelementptr inbounds %struct.Reg, %struct.Reg* %5985, i32 0, i32 0
  %PC.i825 = bitcast %union.anon* %5986 to i64*
  %5987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %5988 = getelementptr inbounds %struct.GPR, %struct.GPR* %5987, i32 0, i32 1
  %5989 = getelementptr inbounds %struct.Reg, %struct.Reg* %5988, i32 0, i32 0
  %RAX.i826 = bitcast %union.anon* %5989 to i64*
  %5990 = load i64, i64* %RAX.i826
  %5991 = add i64 %5990, 12
  %5992 = load i64, i64* %PC.i825
  %5993 = add i64 %5992, 4
  store i64 %5993, i64* %PC.i825
  %5994 = inttoptr i64 %5991 to i32*
  %5995 = load i32, i32* %5994
  %5996 = sub i32 %5995, 1
  %5997 = icmp ult i32 %5995, 1
  %5998 = zext i1 %5997 to i8
  %5999 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %5998, i8* %5999, align 1
  %6000 = and i32 %5996, 255
  %6001 = call i32 @llvm.ctpop.i32(i32 %6000)
  %6002 = trunc i32 %6001 to i8
  %6003 = and i8 %6002, 1
  %6004 = xor i8 %6003, 1
  %6005 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6004, i8* %6005, align 1
  %6006 = xor i32 %5995, 1
  %6007 = xor i32 %6006, %5996
  %6008 = lshr i32 %6007, 4
  %6009 = trunc i32 %6008 to i8
  %6010 = and i8 %6009, 1
  %6011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6010, i8* %6011, align 1
  %6012 = icmp eq i32 %5996, 0
  %6013 = zext i1 %6012 to i8
  %6014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6013, i8* %6014, align 1
  %6015 = lshr i32 %5996, 31
  %6016 = trunc i32 %6015 to i8
  %6017 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6016, i8* %6017, align 1
  %6018 = lshr i32 %5995, 31
  %6019 = xor i32 %6015, %6018
  %6020 = add i32 %6019, %6018
  %6021 = icmp eq i32 %6020, 2
  %6022 = zext i1 %6021 to i8
  %6023 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6022, i8* %6023, align 1
  store %struct.Memory* %loadMem_4164a2, %struct.Memory** %MEMORY
  %loadMem_4164a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6024 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6025 = getelementptr inbounds %struct.GPR, %struct.GPR* %6024, i32 0, i32 33
  %6026 = getelementptr inbounds %struct.Reg, %struct.Reg* %6025, i32 0, i32 0
  %PC.i824 = bitcast %union.anon* %6026 to i64*
  %6027 = load i64, i64* %PC.i824
  %6028 = add i64 %6027, 21
  %6029 = load i64, i64* %PC.i824
  %6030 = add i64 %6029, 6
  %6031 = load i64, i64* %PC.i824
  %6032 = add i64 %6031, 6
  store i64 %6032, i64* %PC.i824
  %6033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6034 = load i8, i8* %6033, align 1
  %6035 = icmp eq i8 %6034, 0
  %6036 = zext i1 %6035 to i8
  store i8 %6036, i8* %BRANCH_TAKEN, align 1
  %6037 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6038 = select i1 %6035, i64 %6028, i64 %6030
  store i64 %6038, i64* %6037, align 8
  store %struct.Memory* %loadMem_4164a6, %struct.Memory** %MEMORY
  %loadBr_4164a6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4164a6 = icmp eq i8 %loadBr_4164a6, 1
  br i1 %cmpBr_4164a6, label %block_.L_4164bb, label %block_4164ac

block_4164ac:                                     ; preds = %block_41646c
  %loadMem_4164ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %6039 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6040 = getelementptr inbounds %struct.GPR, %struct.GPR* %6039, i32 0, i32 33
  %6041 = getelementptr inbounds %struct.Reg, %struct.Reg* %6040, i32 0, i32 0
  %PC.i821 = bitcast %union.anon* %6041 to i64*
  %6042 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6043 = getelementptr inbounds %struct.GPR, %struct.GPR* %6042, i32 0, i32 1
  %6044 = getelementptr inbounds %struct.Reg, %struct.Reg* %6043, i32 0, i32 0
  %RAX.i822 = bitcast %union.anon* %6044 to i64*
  %6045 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6046 = getelementptr inbounds %struct.GPR, %struct.GPR* %6045, i32 0, i32 15
  %6047 = getelementptr inbounds %struct.Reg, %struct.Reg* %6046, i32 0, i32 0
  %RBP.i823 = bitcast %union.anon* %6047 to i64*
  %6048 = load i64, i64* %RBP.i823
  %6049 = sub i64 %6048, 128
  %6050 = load i64, i64* %PC.i821
  %6051 = add i64 %6050, 4
  store i64 %6051, i64* %PC.i821
  %6052 = inttoptr i64 %6049 to i64*
  %6053 = load i64, i64* %6052
  store i64 %6053, i64* %RAX.i822, align 8
  store %struct.Memory* %loadMem_4164ac, %struct.Memory** %MEMORY
  %loadMem_4164b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6055 = getelementptr inbounds %struct.GPR, %struct.GPR* %6054, i32 0, i32 33
  %6056 = getelementptr inbounds %struct.Reg, %struct.Reg* %6055, i32 0, i32 0
  %PC.i818 = bitcast %union.anon* %6056 to i64*
  %6057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6058 = getelementptr inbounds %struct.GPR, %struct.GPR* %6057, i32 0, i32 1
  %6059 = getelementptr inbounds %struct.Reg, %struct.Reg* %6058, i32 0, i32 0
  %RAX.i819 = bitcast %union.anon* %6059 to i64*
  %6060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6061 = getelementptr inbounds %struct.GPR, %struct.GPR* %6060, i32 0, i32 5
  %6062 = getelementptr inbounds %struct.Reg, %struct.Reg* %6061, i32 0, i32 0
  %RCX.i820 = bitcast %union.anon* %6062 to i64*
  %6063 = load i64, i64* %RAX.i819
  %6064 = add i64 %6063, 4
  %6065 = load i64, i64* %PC.i818
  %6066 = add i64 %6065, 3
  store i64 %6066, i64* %PC.i818
  %6067 = inttoptr i64 %6064 to i32*
  %6068 = load i32, i32* %6067
  %6069 = zext i32 %6068 to i64
  store i64 %6069, i64* %RCX.i820, align 8
  store %struct.Memory* %loadMem_4164b0, %struct.Memory** %MEMORY
  %loadMem_4164b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6071 = getelementptr inbounds %struct.GPR, %struct.GPR* %6070, i32 0, i32 33
  %6072 = getelementptr inbounds %struct.Reg, %struct.Reg* %6071, i32 0, i32 0
  %PC.i815 = bitcast %union.anon* %6072 to i64*
  %6073 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6074 = getelementptr inbounds %struct.GPR, %struct.GPR* %6073, i32 0, i32 1
  %6075 = getelementptr inbounds %struct.Reg, %struct.Reg* %6074, i32 0, i32 0
  %RAX.i816 = bitcast %union.anon* %6075 to i64*
  %6076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6077 = getelementptr inbounds %struct.GPR, %struct.GPR* %6076, i32 0, i32 15
  %6078 = getelementptr inbounds %struct.Reg, %struct.Reg* %6077, i32 0, i32 0
  %RBP.i817 = bitcast %union.anon* %6078 to i64*
  %6079 = load i64, i64* %RBP.i817
  %6080 = sub i64 %6079, 88
  %6081 = load i64, i64* %PC.i815
  %6082 = add i64 %6081, 4
  store i64 %6082, i64* %PC.i815
  %6083 = inttoptr i64 %6080 to i64*
  %6084 = load i64, i64* %6083
  store i64 %6084, i64* %RAX.i816, align 8
  store %struct.Memory* %loadMem_4164b3, %struct.Memory** %MEMORY
  %loadMem_4164b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6086 = getelementptr inbounds %struct.GPR, %struct.GPR* %6085, i32 0, i32 33
  %6087 = getelementptr inbounds %struct.Reg, %struct.Reg* %6086, i32 0, i32 0
  %PC.i812 = bitcast %union.anon* %6087 to i64*
  %6088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6089 = getelementptr inbounds %struct.GPR, %struct.GPR* %6088, i32 0, i32 1
  %6090 = getelementptr inbounds %struct.Reg, %struct.Reg* %6089, i32 0, i32 0
  %RAX.i813 = bitcast %union.anon* %6090 to i64*
  %6091 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6092 = getelementptr inbounds %struct.GPR, %struct.GPR* %6091, i32 0, i32 5
  %6093 = getelementptr inbounds %struct.Reg, %struct.Reg* %6092, i32 0, i32 0
  %RCX.i814 = bitcast %union.anon* %6093 to i64*
  %6094 = load i64, i64* %RCX.i814
  %6095 = load i64, i64* %RAX.i813
  %6096 = load i64, i64* %PC.i812
  %6097 = add i64 %6096, 2
  store i64 %6097, i64* %PC.i812
  %6098 = trunc i64 %6094 to i32
  %6099 = inttoptr i64 %6095 to i32*
  %6100 = load i32, i32* %6099
  %6101 = add i32 %6100, %6098
  %6102 = zext i32 %6101 to i64
  store i64 %6102, i64* %RCX.i814, align 8
  %6103 = icmp ult i32 %6101, %6098
  %6104 = icmp ult i32 %6101, %6100
  %6105 = or i1 %6103, %6104
  %6106 = zext i1 %6105 to i8
  %6107 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6106, i8* %6107, align 1
  %6108 = and i32 %6101, 255
  %6109 = call i32 @llvm.ctpop.i32(i32 %6108)
  %6110 = trunc i32 %6109 to i8
  %6111 = and i8 %6110, 1
  %6112 = xor i8 %6111, 1
  %6113 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6112, i8* %6113, align 1
  %6114 = xor i32 %6100, %6098
  %6115 = xor i32 %6114, %6101
  %6116 = lshr i32 %6115, 4
  %6117 = trunc i32 %6116 to i8
  %6118 = and i8 %6117, 1
  %6119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6118, i8* %6119, align 1
  %6120 = icmp eq i32 %6101, 0
  %6121 = zext i1 %6120 to i8
  %6122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6121, i8* %6122, align 1
  %6123 = lshr i32 %6101, 31
  %6124 = trunc i32 %6123 to i8
  %6125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6124, i8* %6125, align 1
  %6126 = lshr i32 %6098, 31
  %6127 = lshr i32 %6100, 31
  %6128 = xor i32 %6123, %6126
  %6129 = xor i32 %6123, %6127
  %6130 = add i32 %6128, %6129
  %6131 = icmp eq i32 %6130, 2
  %6132 = zext i1 %6131 to i8
  %6133 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6132, i8* %6133, align 1
  store %struct.Memory* %loadMem_4164b7, %struct.Memory** %MEMORY
  %loadMem_4164b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6135 = getelementptr inbounds %struct.GPR, %struct.GPR* %6134, i32 0, i32 33
  %6136 = getelementptr inbounds %struct.Reg, %struct.Reg* %6135, i32 0, i32 0
  %PC.i809 = bitcast %union.anon* %6136 to i64*
  %6137 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6138 = getelementptr inbounds %struct.GPR, %struct.GPR* %6137, i32 0, i32 5
  %6139 = getelementptr inbounds %struct.Reg, %struct.Reg* %6138, i32 0, i32 0
  %ECX.i810 = bitcast %union.anon* %6139 to i32*
  %6140 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6141 = getelementptr inbounds %struct.GPR, %struct.GPR* %6140, i32 0, i32 1
  %6142 = getelementptr inbounds %struct.Reg, %struct.Reg* %6141, i32 0, i32 0
  %RAX.i811 = bitcast %union.anon* %6142 to i64*
  %6143 = load i64, i64* %RAX.i811
  %6144 = load i32, i32* %ECX.i810
  %6145 = zext i32 %6144 to i64
  %6146 = load i64, i64* %PC.i809
  %6147 = add i64 %6146, 2
  store i64 %6147, i64* %PC.i809
  %6148 = inttoptr i64 %6143 to i32*
  store i32 %6144, i32* %6148
  store %struct.Memory* %loadMem_4164b9, %struct.Memory** %MEMORY
  br label %block_.L_4164bb

block_.L_4164bb:                                  ; preds = %block_4164ac, %block_41646c
  %loadMem_4164bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6150 = getelementptr inbounds %struct.GPR, %struct.GPR* %6149, i32 0, i32 33
  %6151 = getelementptr inbounds %struct.Reg, %struct.Reg* %6150, i32 0, i32 0
  %PC.i808 = bitcast %union.anon* %6151 to i64*
  %6152 = load i64, i64* %PC.i808
  %6153 = add i64 %6152, 5
  %6154 = load i64, i64* %PC.i808
  %6155 = add i64 %6154, 5
  store i64 %6155, i64* %PC.i808
  %6156 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6153, i64* %6156, align 8
  store %struct.Memory* %loadMem_4164bb, %struct.Memory** %MEMORY
  br label %block_.L_4164c0

block_.L_4164c0:                                  ; preds = %block_.L_4164bb
  %loadMem_4164c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6157 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6158 = getelementptr inbounds %struct.GPR, %struct.GPR* %6157, i32 0, i32 33
  %6159 = getelementptr inbounds %struct.Reg, %struct.Reg* %6158, i32 0, i32 0
  %PC.i805 = bitcast %union.anon* %6159 to i64*
  %6160 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6161 = getelementptr inbounds %struct.GPR, %struct.GPR* %6160, i32 0, i32 1
  %6162 = getelementptr inbounds %struct.Reg, %struct.Reg* %6161, i32 0, i32 0
  %RAX.i806 = bitcast %union.anon* %6162 to i64*
  %6163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6164 = getelementptr inbounds %struct.GPR, %struct.GPR* %6163, i32 0, i32 15
  %6165 = getelementptr inbounds %struct.Reg, %struct.Reg* %6164, i32 0, i32 0
  %RBP.i807 = bitcast %union.anon* %6165 to i64*
  %6166 = load i64, i64* %RBP.i807
  %6167 = sub i64 %6166, 120
  %6168 = load i64, i64* %PC.i805
  %6169 = add i64 %6168, 3
  store i64 %6169, i64* %PC.i805
  %6170 = inttoptr i64 %6167 to i32*
  %6171 = load i32, i32* %6170
  %6172 = zext i32 %6171 to i64
  store i64 %6172, i64* %RAX.i806, align 8
  store %struct.Memory* %loadMem_4164c0, %struct.Memory** %MEMORY
  %loadMem_4164c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6174 = getelementptr inbounds %struct.GPR, %struct.GPR* %6173, i32 0, i32 33
  %6175 = getelementptr inbounds %struct.Reg, %struct.Reg* %6174, i32 0, i32 0
  %PC.i803 = bitcast %union.anon* %6175 to i64*
  %6176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6177 = getelementptr inbounds %struct.GPR, %struct.GPR* %6176, i32 0, i32 1
  %6178 = getelementptr inbounds %struct.Reg, %struct.Reg* %6177, i32 0, i32 0
  %RAX.i804 = bitcast %union.anon* %6178 to i64*
  %6179 = load i64, i64* %RAX.i804
  %6180 = load i64, i64* %PC.i803
  %6181 = add i64 %6180, 3
  store i64 %6181, i64* %PC.i803
  %6182 = trunc i64 %6179 to i32
  %6183 = add i32 1, %6182
  %6184 = zext i32 %6183 to i64
  store i64 %6184, i64* %RAX.i804, align 8
  %6185 = icmp ult i32 %6183, %6182
  %6186 = icmp ult i32 %6183, 1
  %6187 = or i1 %6185, %6186
  %6188 = zext i1 %6187 to i8
  %6189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6188, i8* %6189, align 1
  %6190 = and i32 %6183, 255
  %6191 = call i32 @llvm.ctpop.i32(i32 %6190)
  %6192 = trunc i32 %6191 to i8
  %6193 = and i8 %6192, 1
  %6194 = xor i8 %6193, 1
  %6195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6194, i8* %6195, align 1
  %6196 = xor i64 1, %6179
  %6197 = trunc i64 %6196 to i32
  %6198 = xor i32 %6197, %6183
  %6199 = lshr i32 %6198, 4
  %6200 = trunc i32 %6199 to i8
  %6201 = and i8 %6200, 1
  %6202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6201, i8* %6202, align 1
  %6203 = icmp eq i32 %6183, 0
  %6204 = zext i1 %6203 to i8
  %6205 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6204, i8* %6205, align 1
  %6206 = lshr i32 %6183, 31
  %6207 = trunc i32 %6206 to i8
  %6208 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6207, i8* %6208, align 1
  %6209 = lshr i32 %6182, 31
  %6210 = xor i32 %6206, %6209
  %6211 = add i32 %6210, %6206
  %6212 = icmp eq i32 %6211, 2
  %6213 = zext i1 %6212 to i8
  %6214 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6213, i8* %6214, align 1
  store %struct.Memory* %loadMem_4164c3, %struct.Memory** %MEMORY
  %loadMem_4164c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6215 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6216 = getelementptr inbounds %struct.GPR, %struct.GPR* %6215, i32 0, i32 33
  %6217 = getelementptr inbounds %struct.Reg, %struct.Reg* %6216, i32 0, i32 0
  %PC.i800 = bitcast %union.anon* %6217 to i64*
  %6218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6219 = getelementptr inbounds %struct.GPR, %struct.GPR* %6218, i32 0, i32 1
  %6220 = getelementptr inbounds %struct.Reg, %struct.Reg* %6219, i32 0, i32 0
  %EAX.i801 = bitcast %union.anon* %6220 to i32*
  %6221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6222 = getelementptr inbounds %struct.GPR, %struct.GPR* %6221, i32 0, i32 15
  %6223 = getelementptr inbounds %struct.Reg, %struct.Reg* %6222, i32 0, i32 0
  %RBP.i802 = bitcast %union.anon* %6223 to i64*
  %6224 = load i64, i64* %RBP.i802
  %6225 = sub i64 %6224, 120
  %6226 = load i32, i32* %EAX.i801
  %6227 = zext i32 %6226 to i64
  %6228 = load i64, i64* %PC.i800
  %6229 = add i64 %6228, 3
  store i64 %6229, i64* %PC.i800
  %6230 = inttoptr i64 %6225 to i32*
  store i32 %6226, i32* %6230
  store %struct.Memory* %loadMem_4164c6, %struct.Memory** %MEMORY
  %loadMem_4164c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6231 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6232 = getelementptr inbounds %struct.GPR, %struct.GPR* %6231, i32 0, i32 33
  %6233 = getelementptr inbounds %struct.Reg, %struct.Reg* %6232, i32 0, i32 0
  %PC.i799 = bitcast %union.anon* %6233 to i64*
  %6234 = load i64, i64* %PC.i799
  %6235 = add i64 %6234, -129
  %6236 = load i64, i64* %PC.i799
  %6237 = add i64 %6236, 5
  store i64 %6237, i64* %PC.i799
  %6238 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6235, i64* %6238, align 8
  store %struct.Memory* %loadMem_4164c9, %struct.Memory** %MEMORY
  br label %block_.L_416448

block_.L_4164ce:                                  ; preds = %block_.L_416448
  %loadMem_4164ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %6239 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6240 = getelementptr inbounds %struct.GPR, %struct.GPR* %6239, i32 0, i32 33
  %6241 = getelementptr inbounds %struct.Reg, %struct.Reg* %6240, i32 0, i32 0
  %PC.i798 = bitcast %union.anon* %6241 to i64*
  %6242 = load i64, i64* %PC.i798
  %6243 = add i64 %6242, 178
  %6244 = load i64, i64* %PC.i798
  %6245 = add i64 %6244, 5
  store i64 %6245, i64* %PC.i798
  %6246 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %6243, i64* %6246, align 8
  store %struct.Memory* %loadMem_4164ce, %struct.Memory** %MEMORY
  br label %block_.L_416580

block_.L_4164d3:                                  ; preds = %block_.L_4163f1
  %loadMem_4164d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6248 = getelementptr inbounds %struct.GPR, %struct.GPR* %6247, i32 0, i32 33
  %6249 = getelementptr inbounds %struct.Reg, %struct.Reg* %6248, i32 0, i32 0
  %PC.i796 = bitcast %union.anon* %6249 to i64*
  %6250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6251 = getelementptr inbounds %struct.GPR, %struct.GPR* %6250, i32 0, i32 1
  %6252 = getelementptr inbounds %struct.Reg, %struct.Reg* %6251, i32 0, i32 0
  %RAX.i797 = bitcast %union.anon* %6252 to i64*
  %6253 = load i64, i64* %PC.i796
  %6254 = add i64 %6253, 10
  store i64 %6254, i64* %PC.i796
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i797, align 8
  store %struct.Memory* %loadMem_4164d3, %struct.Memory** %MEMORY
  %loadMem_4164dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %6255 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6256 = getelementptr inbounds %struct.GPR, %struct.GPR* %6255, i32 0, i32 33
  %6257 = getelementptr inbounds %struct.Reg, %struct.Reg* %6256, i32 0, i32 0
  %PC.i793 = bitcast %union.anon* %6257 to i64*
  %6258 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6259 = getelementptr inbounds %struct.GPR, %struct.GPR* %6258, i32 0, i32 5
  %6260 = getelementptr inbounds %struct.Reg, %struct.Reg* %6259, i32 0, i32 0
  %RCX.i794 = bitcast %union.anon* %6260 to i64*
  %6261 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6262 = getelementptr inbounds %struct.GPR, %struct.GPR* %6261, i32 0, i32 15
  %6263 = getelementptr inbounds %struct.Reg, %struct.Reg* %6262, i32 0, i32 0
  %RBP.i795 = bitcast %union.anon* %6263 to i64*
  %6264 = load i64, i64* %RBP.i795
  %6265 = sub i64 %6264, 116
  %6266 = load i64, i64* %PC.i793
  %6267 = add i64 %6266, 4
  store i64 %6267, i64* %PC.i793
  %6268 = inttoptr i64 %6265 to i32*
  %6269 = load i32, i32* %6268
  %6270 = sext i32 %6269 to i64
  store i64 %6270, i64* %RCX.i794, align 8
  store %struct.Memory* %loadMem_4164dd, %struct.Memory** %MEMORY
  %loadMem_4164e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6271 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6272 = getelementptr inbounds %struct.GPR, %struct.GPR* %6271, i32 0, i32 33
  %6273 = getelementptr inbounds %struct.Reg, %struct.Reg* %6272, i32 0, i32 0
  %PC.i791 = bitcast %union.anon* %6273 to i64*
  %6274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6275 = getelementptr inbounds %struct.GPR, %struct.GPR* %6274, i32 0, i32 5
  %6276 = getelementptr inbounds %struct.Reg, %struct.Reg* %6275, i32 0, i32 0
  %RCX.i792 = bitcast %union.anon* %6276 to i64*
  %6277 = load i64, i64* %RCX.i792
  %6278 = load i64, i64* %PC.i791
  %6279 = add i64 %6278, 7
  store i64 %6279, i64* %PC.i791
  %6280 = sext i64 %6277 to i128
  %6281 = and i128 %6280, -18446744073709551616
  %6282 = zext i64 %6277 to i128
  %6283 = or i128 %6281, %6282
  %6284 = mul i128 744, %6283
  %6285 = trunc i128 %6284 to i64
  store i64 %6285, i64* %RCX.i792, align 8
  %6286 = sext i64 %6285 to i128
  %6287 = icmp ne i128 %6286, %6284
  %6288 = zext i1 %6287 to i8
  %6289 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6288, i8* %6289, align 1
  %6290 = trunc i128 %6284 to i32
  %6291 = and i32 %6290, 255
  %6292 = call i32 @llvm.ctpop.i32(i32 %6291)
  %6293 = trunc i32 %6292 to i8
  %6294 = and i8 %6293, 1
  %6295 = xor i8 %6294, 1
  %6296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6295, i8* %6296, align 1
  %6297 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6297, align 1
  %6298 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6298, align 1
  %6299 = lshr i64 %6285, 63
  %6300 = trunc i64 %6299 to i8
  %6301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6300, i8* %6301, align 1
  %6302 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6288, i8* %6302, align 1
  store %struct.Memory* %loadMem_4164e1, %struct.Memory** %MEMORY
  %loadMem_4164e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6303 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6304 = getelementptr inbounds %struct.GPR, %struct.GPR* %6303, i32 0, i32 33
  %6305 = getelementptr inbounds %struct.Reg, %struct.Reg* %6304, i32 0, i32 0
  %PC.i788 = bitcast %union.anon* %6305 to i64*
  %6306 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6307 = getelementptr inbounds %struct.GPR, %struct.GPR* %6306, i32 0, i32 1
  %6308 = getelementptr inbounds %struct.Reg, %struct.Reg* %6307, i32 0, i32 0
  %RAX.i789 = bitcast %union.anon* %6308 to i64*
  %6309 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6310 = getelementptr inbounds %struct.GPR, %struct.GPR* %6309, i32 0, i32 5
  %6311 = getelementptr inbounds %struct.Reg, %struct.Reg* %6310, i32 0, i32 0
  %RCX.i790 = bitcast %union.anon* %6311 to i64*
  %6312 = load i64, i64* %RAX.i789
  %6313 = load i64, i64* %RCX.i790
  %6314 = load i64, i64* %PC.i788
  %6315 = add i64 %6314, 3
  store i64 %6315, i64* %PC.i788
  %6316 = add i64 %6313, %6312
  store i64 %6316, i64* %RAX.i789, align 8
  %6317 = icmp ult i64 %6316, %6312
  %6318 = icmp ult i64 %6316, %6313
  %6319 = or i1 %6317, %6318
  %6320 = zext i1 %6319 to i8
  %6321 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6320, i8* %6321, align 1
  %6322 = trunc i64 %6316 to i32
  %6323 = and i32 %6322, 255
  %6324 = call i32 @llvm.ctpop.i32(i32 %6323)
  %6325 = trunc i32 %6324 to i8
  %6326 = and i8 %6325, 1
  %6327 = xor i8 %6326, 1
  %6328 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6327, i8* %6328, align 1
  %6329 = xor i64 %6313, %6312
  %6330 = xor i64 %6329, %6316
  %6331 = lshr i64 %6330, 4
  %6332 = trunc i64 %6331 to i8
  %6333 = and i8 %6332, 1
  %6334 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6333, i8* %6334, align 1
  %6335 = icmp eq i64 %6316, 0
  %6336 = zext i1 %6335 to i8
  %6337 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6336, i8* %6337, align 1
  %6338 = lshr i64 %6316, 63
  %6339 = trunc i64 %6338 to i8
  %6340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6339, i8* %6340, align 1
  %6341 = lshr i64 %6312, 63
  %6342 = lshr i64 %6313, 63
  %6343 = xor i64 %6338, %6341
  %6344 = xor i64 %6338, %6342
  %6345 = add i64 %6343, %6344
  %6346 = icmp eq i64 %6345, 2
  %6347 = zext i1 %6346 to i8
  %6348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6347, i8* %6348, align 1
  store %struct.Memory* %loadMem_4164e8, %struct.Memory** %MEMORY
  %loadMem_4164eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %6349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6350 = getelementptr inbounds %struct.GPR, %struct.GPR* %6349, i32 0, i32 33
  %6351 = getelementptr inbounds %struct.Reg, %struct.Reg* %6350, i32 0, i32 0
  %PC.i786 = bitcast %union.anon* %6351 to i64*
  %6352 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6353 = getelementptr inbounds %struct.GPR, %struct.GPR* %6352, i32 0, i32 1
  %6354 = getelementptr inbounds %struct.Reg, %struct.Reg* %6353, i32 0, i32 0
  %RAX.i787 = bitcast %union.anon* %6354 to i64*
  %6355 = load i64, i64* %RAX.i787
  %6356 = add i64 %6355, 12
  %6357 = load i64, i64* %PC.i786
  %6358 = add i64 %6357, 4
  store i64 %6358, i64* %PC.i786
  %6359 = inttoptr i64 %6356 to i32*
  %6360 = load i32, i32* %6359
  %6361 = sub i32 %6360, 2
  %6362 = icmp ult i32 %6360, 2
  %6363 = zext i1 %6362 to i8
  %6364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6363, i8* %6364, align 1
  %6365 = and i32 %6361, 255
  %6366 = call i32 @llvm.ctpop.i32(i32 %6365)
  %6367 = trunc i32 %6366 to i8
  %6368 = and i8 %6367, 1
  %6369 = xor i8 %6368, 1
  %6370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6369, i8* %6370, align 1
  %6371 = xor i32 %6360, 2
  %6372 = xor i32 %6371, %6361
  %6373 = lshr i32 %6372, 4
  %6374 = trunc i32 %6373 to i8
  %6375 = and i8 %6374, 1
  %6376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6375, i8* %6376, align 1
  %6377 = icmp eq i32 %6361, 0
  %6378 = zext i1 %6377 to i8
  %6379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6378, i8* %6379, align 1
  %6380 = lshr i32 %6361, 31
  %6381 = trunc i32 %6380 to i8
  %6382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6381, i8* %6382, align 1
  %6383 = lshr i32 %6360, 31
  %6384 = xor i32 %6380, %6383
  %6385 = add i32 %6384, %6383
  %6386 = icmp eq i32 %6385, 2
  %6387 = zext i1 %6386 to i8
  %6388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6387, i8* %6388, align 1
  store %struct.Memory* %loadMem_4164eb, %struct.Memory** %MEMORY
  %loadMem_4164ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %6389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6390 = getelementptr inbounds %struct.GPR, %struct.GPR* %6389, i32 0, i32 33
  %6391 = getelementptr inbounds %struct.Reg, %struct.Reg* %6390, i32 0, i32 0
  %PC.i785 = bitcast %union.anon* %6391 to i64*
  %6392 = load i64, i64* %PC.i785
  %6393 = add i64 %6392, 140
  %6394 = load i64, i64* %PC.i785
  %6395 = add i64 %6394, 6
  %6396 = load i64, i64* %PC.i785
  %6397 = add i64 %6396, 6
  store i64 %6397, i64* %PC.i785
  %6398 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6399 = load i8, i8* %6398, align 1
  %6400 = icmp eq i8 %6399, 0
  %6401 = zext i1 %6400 to i8
  store i8 %6401, i8* %BRANCH_TAKEN, align 1
  %6402 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6403 = select i1 %6400, i64 %6393, i64 %6395
  store i64 %6403, i64* %6402, align 8
  store %struct.Memory* %loadMem_4164ef, %struct.Memory** %MEMORY
  %loadBr_4164ef = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4164ef = icmp eq i8 %loadBr_4164ef, 1
  br i1 %cmpBr_4164ef, label %block_.L_41657b, label %block_4164f5

block_4164f5:                                     ; preds = %block_.L_4164d3
  %loadMem_4164f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6405 = getelementptr inbounds %struct.GPR, %struct.GPR* %6404, i32 0, i32 33
  %6406 = getelementptr inbounds %struct.Reg, %struct.Reg* %6405, i32 0, i32 0
  %PC.i783 = bitcast %union.anon* %6406 to i64*
  %6407 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6408 = getelementptr inbounds %struct.GPR, %struct.GPR* %6407, i32 0, i32 1
  %6409 = getelementptr inbounds %struct.Reg, %struct.Reg* %6408, i32 0, i32 0
  %RAX.i784 = bitcast %union.anon* %6409 to i64*
  %6410 = load i64, i64* %PC.i783
  %6411 = add i64 %6410, 10
  store i64 %6411, i64* %PC.i783
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i784, align 8
  store %struct.Memory* %loadMem_4164f5, %struct.Memory** %MEMORY
  %loadMem_4164ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %6412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6413 = getelementptr inbounds %struct.GPR, %struct.GPR* %6412, i32 0, i32 33
  %6414 = getelementptr inbounds %struct.Reg, %struct.Reg* %6413, i32 0, i32 0
  %PC.i780 = bitcast %union.anon* %6414 to i64*
  %6415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6416 = getelementptr inbounds %struct.GPR, %struct.GPR* %6415, i32 0, i32 5
  %6417 = getelementptr inbounds %struct.Reg, %struct.Reg* %6416, i32 0, i32 0
  %RCX.i781 = bitcast %union.anon* %6417 to i64*
  %6418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6419 = getelementptr inbounds %struct.GPR, %struct.GPR* %6418, i32 0, i32 15
  %6420 = getelementptr inbounds %struct.Reg, %struct.Reg* %6419, i32 0, i32 0
  %RBP.i782 = bitcast %union.anon* %6420 to i64*
  %6421 = load i64, i64* %RBP.i782
  %6422 = sub i64 %6421, 20
  %6423 = load i64, i64* %PC.i780
  %6424 = add i64 %6423, 3
  store i64 %6424, i64* %PC.i780
  %6425 = inttoptr i64 %6422 to i32*
  %6426 = load i32, i32* %6425
  %6427 = zext i32 %6426 to i64
  store i64 %6427, i64* %RCX.i781, align 8
  store %struct.Memory* %loadMem_4164ff, %struct.Memory** %MEMORY
  %loadMem_416502 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6429 = getelementptr inbounds %struct.GPR, %struct.GPR* %6428, i32 0, i32 33
  %6430 = getelementptr inbounds %struct.Reg, %struct.Reg* %6429, i32 0, i32 0
  %PC.i778 = bitcast %union.anon* %6430 to i64*
  %6431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6432 = getelementptr inbounds %struct.GPR, %struct.GPR* %6431, i32 0, i32 5
  %6433 = getelementptr inbounds %struct.Reg, %struct.Reg* %6432, i32 0, i32 0
  %RCX.i779 = bitcast %union.anon* %6433 to i64*
  %6434 = load i64, i64* %RCX.i779
  %6435 = load i64, i64* %PC.i778
  %6436 = add i64 %6435, 3
  store i64 %6436, i64* %PC.i778
  %6437 = trunc i64 %6434 to i32
  %6438 = sub i32 %6437, 1
  %6439 = zext i32 %6438 to i64
  store i64 %6439, i64* %RCX.i779, align 8
  %6440 = icmp ult i32 %6437, 1
  %6441 = zext i1 %6440 to i8
  %6442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6441, i8* %6442, align 1
  %6443 = and i32 %6438, 255
  %6444 = call i32 @llvm.ctpop.i32(i32 %6443)
  %6445 = trunc i32 %6444 to i8
  %6446 = and i8 %6445, 1
  %6447 = xor i8 %6446, 1
  %6448 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6447, i8* %6448, align 1
  %6449 = xor i64 1, %6434
  %6450 = trunc i64 %6449 to i32
  %6451 = xor i32 %6450, %6438
  %6452 = lshr i32 %6451, 4
  %6453 = trunc i32 %6452 to i8
  %6454 = and i8 %6453, 1
  %6455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6454, i8* %6455, align 1
  %6456 = icmp eq i32 %6438, 0
  %6457 = zext i1 %6456 to i8
  %6458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6457, i8* %6458, align 1
  %6459 = lshr i32 %6438, 31
  %6460 = trunc i32 %6459 to i8
  %6461 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6460, i8* %6461, align 1
  %6462 = lshr i32 %6437, 31
  %6463 = xor i32 %6459, %6462
  %6464 = add i32 %6463, %6462
  %6465 = icmp eq i32 %6464, 2
  %6466 = zext i1 %6465 to i8
  %6467 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6466, i8* %6467, align 1
  store %struct.Memory* %loadMem_416502, %struct.Memory** %MEMORY
  %loadMem_416505 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6468 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6469 = getelementptr inbounds %struct.GPR, %struct.GPR* %6468, i32 0, i32 33
  %6470 = getelementptr inbounds %struct.Reg, %struct.Reg* %6469, i32 0, i32 0
  %PC.i775 = bitcast %union.anon* %6470 to i64*
  %6471 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6472 = getelementptr inbounds %struct.GPR, %struct.GPR* %6471, i32 0, i32 5
  %6473 = getelementptr inbounds %struct.Reg, %struct.Reg* %6472, i32 0, i32 0
  %ECX.i776 = bitcast %union.anon* %6473 to i32*
  %6474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6475 = getelementptr inbounds %struct.GPR, %struct.GPR* %6474, i32 0, i32 7
  %6476 = getelementptr inbounds %struct.Reg, %struct.Reg* %6475, i32 0, i32 0
  %RDX.i777 = bitcast %union.anon* %6476 to i64*
  %6477 = load i32, i32* %ECX.i776
  %6478 = zext i32 %6477 to i64
  %6479 = load i64, i64* %PC.i775
  %6480 = add i64 %6479, 3
  store i64 %6480, i64* %PC.i775
  %6481 = shl i64 %6478, 32
  %6482 = ashr exact i64 %6481, 32
  store i64 %6482, i64* %RDX.i777, align 8
  store %struct.Memory* %loadMem_416505, %struct.Memory** %MEMORY
  %loadMem_416508 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6483 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6484 = getelementptr inbounds %struct.GPR, %struct.GPR* %6483, i32 0, i32 33
  %6485 = getelementptr inbounds %struct.Reg, %struct.Reg* %6484, i32 0, i32 0
  %PC.i773 = bitcast %union.anon* %6485 to i64*
  %6486 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6487 = getelementptr inbounds %struct.GPR, %struct.GPR* %6486, i32 0, i32 7
  %6488 = getelementptr inbounds %struct.Reg, %struct.Reg* %6487, i32 0, i32 0
  %RDX.i774 = bitcast %union.anon* %6488 to i64*
  %6489 = load i64, i64* %RDX.i774
  %6490 = mul i64 %6489, 4
  %6491 = add i64 %6490, 11187184
  %6492 = load i64, i64* %PC.i773
  %6493 = add i64 %6492, 8
  store i64 %6493, i64* %PC.i773
  %6494 = inttoptr i64 %6491 to i32*
  %6495 = load i32, i32* %6494
  %6496 = sext i32 %6495 to i64
  store i64 %6496, i64* %RDX.i774, align 8
  store %struct.Memory* %loadMem_416508, %struct.Memory** %MEMORY
  %loadMem_416510 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6497 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6498 = getelementptr inbounds %struct.GPR, %struct.GPR* %6497, i32 0, i32 33
  %6499 = getelementptr inbounds %struct.Reg, %struct.Reg* %6498, i32 0, i32 0
  %PC.i771 = bitcast %union.anon* %6499 to i64*
  %6500 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6501 = getelementptr inbounds %struct.GPR, %struct.GPR* %6500, i32 0, i32 7
  %6502 = getelementptr inbounds %struct.Reg, %struct.Reg* %6501, i32 0, i32 0
  %RDX.i772 = bitcast %union.anon* %6502 to i64*
  %6503 = load i64, i64* %RDX.i772
  %6504 = load i64, i64* %PC.i771
  %6505 = add i64 %6504, 7
  store i64 %6505, i64* %PC.i771
  %6506 = sext i64 %6503 to i128
  %6507 = and i128 %6506, -18446744073709551616
  %6508 = zext i64 %6503 to i128
  %6509 = or i128 %6507, %6508
  %6510 = mul i128 744, %6509
  %6511 = trunc i128 %6510 to i64
  store i64 %6511, i64* %RDX.i772, align 8
  %6512 = sext i64 %6511 to i128
  %6513 = icmp ne i128 %6512, %6510
  %6514 = zext i1 %6513 to i8
  %6515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6514, i8* %6515, align 1
  %6516 = trunc i128 %6510 to i32
  %6517 = and i32 %6516, 255
  %6518 = call i32 @llvm.ctpop.i32(i32 %6517)
  %6519 = trunc i32 %6518 to i8
  %6520 = and i8 %6519, 1
  %6521 = xor i8 %6520, 1
  %6522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6521, i8* %6522, align 1
  %6523 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6523, align 1
  %6524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6524, align 1
  %6525 = lshr i64 %6511, 63
  %6526 = trunc i64 %6525 to i8
  %6527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6526, i8* %6527, align 1
  %6528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6514, i8* %6528, align 1
  store %struct.Memory* %loadMem_416510, %struct.Memory** %MEMORY
  %loadMem_416517 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6529 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6530 = getelementptr inbounds %struct.GPR, %struct.GPR* %6529, i32 0, i32 33
  %6531 = getelementptr inbounds %struct.Reg, %struct.Reg* %6530, i32 0, i32 0
  %PC.i768 = bitcast %union.anon* %6531 to i64*
  %6532 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6533 = getelementptr inbounds %struct.GPR, %struct.GPR* %6532, i32 0, i32 1
  %6534 = getelementptr inbounds %struct.Reg, %struct.Reg* %6533, i32 0, i32 0
  %RAX.i769 = bitcast %union.anon* %6534 to i64*
  %6535 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6536 = getelementptr inbounds %struct.GPR, %struct.GPR* %6535, i32 0, i32 7
  %6537 = getelementptr inbounds %struct.Reg, %struct.Reg* %6536, i32 0, i32 0
  %RDX.i770 = bitcast %union.anon* %6537 to i64*
  %6538 = load i64, i64* %RAX.i769
  %6539 = load i64, i64* %RDX.i770
  %6540 = load i64, i64* %PC.i768
  %6541 = add i64 %6540, 3
  store i64 %6541, i64* %PC.i768
  %6542 = add i64 %6539, %6538
  store i64 %6542, i64* %RAX.i769, align 8
  %6543 = icmp ult i64 %6542, %6538
  %6544 = icmp ult i64 %6542, %6539
  %6545 = or i1 %6543, %6544
  %6546 = zext i1 %6545 to i8
  %6547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6546, i8* %6547, align 1
  %6548 = trunc i64 %6542 to i32
  %6549 = and i32 %6548, 255
  %6550 = call i32 @llvm.ctpop.i32(i32 %6549)
  %6551 = trunc i32 %6550 to i8
  %6552 = and i8 %6551, 1
  %6553 = xor i8 %6552, 1
  %6554 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6553, i8* %6554, align 1
  %6555 = xor i64 %6539, %6538
  %6556 = xor i64 %6555, %6542
  %6557 = lshr i64 %6556, 4
  %6558 = trunc i64 %6557 to i8
  %6559 = and i8 %6558, 1
  %6560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6559, i8* %6560, align 1
  %6561 = icmp eq i64 %6542, 0
  %6562 = zext i1 %6561 to i8
  %6563 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6562, i8* %6563, align 1
  %6564 = lshr i64 %6542, 63
  %6565 = trunc i64 %6564 to i8
  %6566 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6565, i8* %6566, align 1
  %6567 = lshr i64 %6538, 63
  %6568 = lshr i64 %6539, 63
  %6569 = xor i64 %6564, %6567
  %6570 = xor i64 %6564, %6568
  %6571 = add i64 %6569, %6570
  %6572 = icmp eq i64 %6571, 2
  %6573 = zext i1 %6572 to i8
  %6574 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6573, i8* %6574, align 1
  store %struct.Memory* %loadMem_416517, %struct.Memory** %MEMORY
  %loadMem_41651a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6575 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6576 = getelementptr inbounds %struct.GPR, %struct.GPR* %6575, i32 0, i32 33
  %6577 = getelementptr inbounds %struct.Reg, %struct.Reg* %6576, i32 0, i32 0
  %PC.i765 = bitcast %union.anon* %6577 to i64*
  %6578 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6579 = getelementptr inbounds %struct.GPR, %struct.GPR* %6578, i32 0, i32 1
  %6580 = getelementptr inbounds %struct.Reg, %struct.Reg* %6579, i32 0, i32 0
  %RAX.i766 = bitcast %union.anon* %6580 to i64*
  %6581 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6582 = getelementptr inbounds %struct.GPR, %struct.GPR* %6581, i32 0, i32 5
  %6583 = getelementptr inbounds %struct.Reg, %struct.Reg* %6582, i32 0, i32 0
  %RCX.i767 = bitcast %union.anon* %6583 to i64*
  %6584 = load i64, i64* %RAX.i766
  %6585 = add i64 %6584, 740
  %6586 = load i64, i64* %PC.i765
  %6587 = add i64 %6586, 6
  store i64 %6587, i64* %PC.i765
  %6588 = inttoptr i64 %6585 to i32*
  %6589 = load i32, i32* %6588
  %6590 = zext i32 %6589 to i64
  store i64 %6590, i64* %RCX.i767, align 8
  store %struct.Memory* %loadMem_41651a, %struct.Memory** %MEMORY
  %loadMem_416520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6592 = getelementptr inbounds %struct.GPR, %struct.GPR* %6591, i32 0, i32 33
  %6593 = getelementptr inbounds %struct.Reg, %struct.Reg* %6592, i32 0, i32 0
  %PC.i763 = bitcast %union.anon* %6593 to i64*
  %6594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6595 = getelementptr inbounds %struct.GPR, %struct.GPR* %6594, i32 0, i32 5
  %6596 = getelementptr inbounds %struct.Reg, %struct.Reg* %6595, i32 0, i32 0
  %ECX.i764 = bitcast %union.anon* %6596 to i32*
  %6597 = load i32, i32* %ECX.i764
  %6598 = zext i32 %6597 to i64
  %6599 = load i64, i64* %PC.i763
  %6600 = add i64 %6599, 7
  store i64 %6600, i64* %PC.i763
  %6601 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %6602 = sub i32 %6597, %6601
  %6603 = icmp ult i32 %6597, %6601
  %6604 = zext i1 %6603 to i8
  %6605 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6604, i8* %6605, align 1
  %6606 = and i32 %6602, 255
  %6607 = call i32 @llvm.ctpop.i32(i32 %6606)
  %6608 = trunc i32 %6607 to i8
  %6609 = and i8 %6608, 1
  %6610 = xor i8 %6609, 1
  %6611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6610, i8* %6611, align 1
  %6612 = xor i32 %6601, %6597
  %6613 = xor i32 %6612, %6602
  %6614 = lshr i32 %6613, 4
  %6615 = trunc i32 %6614 to i8
  %6616 = and i8 %6615, 1
  %6617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6616, i8* %6617, align 1
  %6618 = icmp eq i32 %6602, 0
  %6619 = zext i1 %6618 to i8
  %6620 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6619, i8* %6620, align 1
  %6621 = lshr i32 %6602, 31
  %6622 = trunc i32 %6621 to i8
  %6623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6622, i8* %6623, align 1
  %6624 = lshr i32 %6597, 31
  %6625 = lshr i32 %6601, 31
  %6626 = xor i32 %6625, %6624
  %6627 = xor i32 %6621, %6624
  %6628 = add i32 %6627, %6626
  %6629 = icmp eq i32 %6628, 2
  %6630 = zext i1 %6629 to i8
  %6631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6630, i8* %6631, align 1
  store %struct.Memory* %loadMem_416520, %struct.Memory** %MEMORY
  %loadMem_416527 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6632 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6633 = getelementptr inbounds %struct.GPR, %struct.GPR* %6632, i32 0, i32 33
  %6634 = getelementptr inbounds %struct.Reg, %struct.Reg* %6633, i32 0, i32 0
  %PC.i762 = bitcast %union.anon* %6634 to i64*
  %6635 = load i64, i64* %PC.i762
  %6636 = add i64 %6635, 84
  %6637 = load i64, i64* %PC.i762
  %6638 = add i64 %6637, 6
  %6639 = load i64, i64* %PC.i762
  %6640 = add i64 %6639, 6
  store i64 %6640, i64* %PC.i762
  %6641 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %6642 = load i8, i8* %6641, align 1
  store i8 %6642, i8* %BRANCH_TAKEN, align 1
  %6643 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %6644 = icmp ne i8 %6642, 0
  %6645 = select i1 %6644, i64 %6636, i64 %6638
  store i64 %6645, i64* %6643, align 8
  store %struct.Memory* %loadMem_416527, %struct.Memory** %MEMORY
  %loadBr_416527 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416527 = icmp eq i8 %loadBr_416527, 1
  br i1 %cmpBr_416527, label %block_.L_41657b, label %block_41652d

block_41652d:                                     ; preds = %block_4164f5
  %loadMem_41652d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6647 = getelementptr inbounds %struct.GPR, %struct.GPR* %6646, i32 0, i32 33
  %6648 = getelementptr inbounds %struct.Reg, %struct.Reg* %6647, i32 0, i32 0
  %PC.i760 = bitcast %union.anon* %6648 to i64*
  %6649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6650 = getelementptr inbounds %struct.GPR, %struct.GPR* %6649, i32 0, i32 1
  %6651 = getelementptr inbounds %struct.Reg, %struct.Reg* %6650, i32 0, i32 0
  %RAX.i761 = bitcast %union.anon* %6651 to i64*
  %6652 = load i64, i64* %PC.i760
  %6653 = add i64 %6652, 10
  store i64 %6653, i64* %PC.i760
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i761, align 8
  store %struct.Memory* %loadMem_41652d, %struct.Memory** %MEMORY
  %loadMem_416537 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6654 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6655 = getelementptr inbounds %struct.GPR, %struct.GPR* %6654, i32 0, i32 33
  %6656 = getelementptr inbounds %struct.Reg, %struct.Reg* %6655, i32 0, i32 0
  %PC.i757 = bitcast %union.anon* %6656 to i64*
  %6657 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6658 = getelementptr inbounds %struct.GPR, %struct.GPR* %6657, i32 0, i32 5
  %6659 = getelementptr inbounds %struct.Reg, %struct.Reg* %6658, i32 0, i32 0
  %RCX.i758 = bitcast %union.anon* %6659 to i64*
  %6660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6661 = getelementptr inbounds %struct.GPR, %struct.GPR* %6660, i32 0, i32 15
  %6662 = getelementptr inbounds %struct.Reg, %struct.Reg* %6661, i32 0, i32 0
  %RBP.i759 = bitcast %union.anon* %6662 to i64*
  %6663 = load i64, i64* %RBP.i759
  %6664 = sub i64 %6663, 116
  %6665 = load i64, i64* %PC.i757
  %6666 = add i64 %6665, 4
  store i64 %6666, i64* %PC.i757
  %6667 = inttoptr i64 %6664 to i32*
  %6668 = load i32, i32* %6667
  %6669 = sext i32 %6668 to i64
  store i64 %6669, i64* %RCX.i758, align 8
  store %struct.Memory* %loadMem_416537, %struct.Memory** %MEMORY
  %loadMem_41653b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6671 = getelementptr inbounds %struct.GPR, %struct.GPR* %6670, i32 0, i32 33
  %6672 = getelementptr inbounds %struct.Reg, %struct.Reg* %6671, i32 0, i32 0
  %PC.i755 = bitcast %union.anon* %6672 to i64*
  %6673 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6674 = getelementptr inbounds %struct.GPR, %struct.GPR* %6673, i32 0, i32 5
  %6675 = getelementptr inbounds %struct.Reg, %struct.Reg* %6674, i32 0, i32 0
  %RCX.i756 = bitcast %union.anon* %6675 to i64*
  %6676 = load i64, i64* %RCX.i756
  %6677 = load i64, i64* %PC.i755
  %6678 = add i64 %6677, 7
  store i64 %6678, i64* %PC.i755
  %6679 = sext i64 %6676 to i128
  %6680 = and i128 %6679, -18446744073709551616
  %6681 = zext i64 %6676 to i128
  %6682 = or i128 %6680, %6681
  %6683 = mul i128 744, %6682
  %6684 = trunc i128 %6683 to i64
  store i64 %6684, i64* %RCX.i756, align 8
  %6685 = sext i64 %6684 to i128
  %6686 = icmp ne i128 %6685, %6683
  %6687 = zext i1 %6686 to i8
  %6688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6687, i8* %6688, align 1
  %6689 = trunc i128 %6683 to i32
  %6690 = and i32 %6689, 255
  %6691 = call i32 @llvm.ctpop.i32(i32 %6690)
  %6692 = trunc i32 %6691 to i8
  %6693 = and i8 %6692, 1
  %6694 = xor i8 %6693, 1
  %6695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6694, i8* %6695, align 1
  %6696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6696, align 1
  %6697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6697, align 1
  %6698 = lshr i64 %6684, 63
  %6699 = trunc i64 %6698 to i8
  %6700 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6699, i8* %6700, align 1
  %6701 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6687, i8* %6701, align 1
  store %struct.Memory* %loadMem_41653b, %struct.Memory** %MEMORY
  %loadMem_416542 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6702 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6703 = getelementptr inbounds %struct.GPR, %struct.GPR* %6702, i32 0, i32 33
  %6704 = getelementptr inbounds %struct.Reg, %struct.Reg* %6703, i32 0, i32 0
  %PC.i752 = bitcast %union.anon* %6704 to i64*
  %6705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6706 = getelementptr inbounds %struct.GPR, %struct.GPR* %6705, i32 0, i32 1
  %6707 = getelementptr inbounds %struct.Reg, %struct.Reg* %6706, i32 0, i32 0
  %RAX.i753 = bitcast %union.anon* %6707 to i64*
  %6708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6709 = getelementptr inbounds %struct.GPR, %struct.GPR* %6708, i32 0, i32 7
  %6710 = getelementptr inbounds %struct.Reg, %struct.Reg* %6709, i32 0, i32 0
  %RDX.i754 = bitcast %union.anon* %6710 to i64*
  %6711 = load i64, i64* %RAX.i753
  %6712 = load i64, i64* %PC.i752
  %6713 = add i64 %6712, 3
  store i64 %6713, i64* %PC.i752
  store i64 %6711, i64* %RDX.i754, align 8
  store %struct.Memory* %loadMem_416542, %struct.Memory** %MEMORY
  %loadMem_416545 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6714 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6715 = getelementptr inbounds %struct.GPR, %struct.GPR* %6714, i32 0, i32 33
  %6716 = getelementptr inbounds %struct.Reg, %struct.Reg* %6715, i32 0, i32 0
  %PC.i749 = bitcast %union.anon* %6716 to i64*
  %6717 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6718 = getelementptr inbounds %struct.GPR, %struct.GPR* %6717, i32 0, i32 5
  %6719 = getelementptr inbounds %struct.Reg, %struct.Reg* %6718, i32 0, i32 0
  %RCX.i750 = bitcast %union.anon* %6719 to i64*
  %6720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6721 = getelementptr inbounds %struct.GPR, %struct.GPR* %6720, i32 0, i32 7
  %6722 = getelementptr inbounds %struct.Reg, %struct.Reg* %6721, i32 0, i32 0
  %RDX.i751 = bitcast %union.anon* %6722 to i64*
  %6723 = load i64, i64* %RDX.i751
  %6724 = load i64, i64* %RCX.i750
  %6725 = load i64, i64* %PC.i749
  %6726 = add i64 %6725, 3
  store i64 %6726, i64* %PC.i749
  %6727 = add i64 %6724, %6723
  store i64 %6727, i64* %RDX.i751, align 8
  %6728 = icmp ult i64 %6727, %6723
  %6729 = icmp ult i64 %6727, %6724
  %6730 = or i1 %6728, %6729
  %6731 = zext i1 %6730 to i8
  %6732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6731, i8* %6732, align 1
  %6733 = trunc i64 %6727 to i32
  %6734 = and i32 %6733, 255
  %6735 = call i32 @llvm.ctpop.i32(i32 %6734)
  %6736 = trunc i32 %6735 to i8
  %6737 = and i8 %6736, 1
  %6738 = xor i8 %6737, 1
  %6739 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6738, i8* %6739, align 1
  %6740 = xor i64 %6724, %6723
  %6741 = xor i64 %6740, %6727
  %6742 = lshr i64 %6741, 4
  %6743 = trunc i64 %6742 to i8
  %6744 = and i8 %6743, 1
  %6745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6744, i8* %6745, align 1
  %6746 = icmp eq i64 %6727, 0
  %6747 = zext i1 %6746 to i8
  %6748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6747, i8* %6748, align 1
  %6749 = lshr i64 %6727, 63
  %6750 = trunc i64 %6749 to i8
  %6751 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6750, i8* %6751, align 1
  %6752 = lshr i64 %6723, 63
  %6753 = lshr i64 %6724, 63
  %6754 = xor i64 %6749, %6752
  %6755 = xor i64 %6749, %6753
  %6756 = add i64 %6754, %6755
  %6757 = icmp eq i64 %6756, 2
  %6758 = zext i1 %6757 to i8
  %6759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6758, i8* %6759, align 1
  store %struct.Memory* %loadMem_416545, %struct.Memory** %MEMORY
  %loadMem_416548 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6760 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6761 = getelementptr inbounds %struct.GPR, %struct.GPR* %6760, i32 0, i32 33
  %6762 = getelementptr inbounds %struct.Reg, %struct.Reg* %6761, i32 0, i32 0
  %PC.i746 = bitcast %union.anon* %6762 to i64*
  %6763 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6764 = getelementptr inbounds %struct.GPR, %struct.GPR* %6763, i32 0, i32 7
  %6765 = getelementptr inbounds %struct.Reg, %struct.Reg* %6764, i32 0, i32 0
  %RDX.i747 = bitcast %union.anon* %6765 to i64*
  %6766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6767 = getelementptr inbounds %struct.GPR, %struct.GPR* %6766, i32 0, i32 9
  %6768 = getelementptr inbounds %struct.Reg, %struct.Reg* %6767, i32 0, i32 0
  %RSI.i748 = bitcast %union.anon* %6768 to i64*
  %6769 = load i64, i64* %RDX.i747
  %6770 = add i64 %6769, 4
  %6771 = load i64, i64* %PC.i746
  %6772 = add i64 %6771, 3
  store i64 %6772, i64* %PC.i746
  %6773 = inttoptr i64 %6770 to i32*
  %6774 = load i32, i32* %6773
  %6775 = zext i32 %6774 to i64
  store i64 %6775, i64* %RSI.i748, align 8
  store %struct.Memory* %loadMem_416548, %struct.Memory** %MEMORY
  %loadMem_41654b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6776 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6777 = getelementptr inbounds %struct.GPR, %struct.GPR* %6776, i32 0, i32 33
  %6778 = getelementptr inbounds %struct.Reg, %struct.Reg* %6777, i32 0, i32 0
  %PC.i743 = bitcast %union.anon* %6778 to i64*
  %6779 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6780 = getelementptr inbounds %struct.GPR, %struct.GPR* %6779, i32 0, i32 5
  %6781 = getelementptr inbounds %struct.Reg, %struct.Reg* %6780, i32 0, i32 0
  %RCX.i744 = bitcast %union.anon* %6781 to i64*
  %6782 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6783 = getelementptr inbounds %struct.GPR, %struct.GPR* %6782, i32 0, i32 15
  %6784 = getelementptr inbounds %struct.Reg, %struct.Reg* %6783, i32 0, i32 0
  %RBP.i745 = bitcast %union.anon* %6784 to i64*
  %6785 = load i64, i64* %RBP.i745
  %6786 = sub i64 %6785, 80
  %6787 = load i64, i64* %PC.i743
  %6788 = add i64 %6787, 4
  store i64 %6788, i64* %PC.i743
  %6789 = inttoptr i64 %6786 to i64*
  %6790 = load i64, i64* %6789
  store i64 %6790, i64* %RCX.i744, align 8
  store %struct.Memory* %loadMem_41654b, %struct.Memory** %MEMORY
  %loadMem_41654f = load %struct.Memory*, %struct.Memory** %MEMORY
  %6791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6792 = getelementptr inbounds %struct.GPR, %struct.GPR* %6791, i32 0, i32 33
  %6793 = getelementptr inbounds %struct.Reg, %struct.Reg* %6792, i32 0, i32 0
  %PC.i740 = bitcast %union.anon* %6793 to i64*
  %6794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6795 = getelementptr inbounds %struct.GPR, %struct.GPR* %6794, i32 0, i32 5
  %6796 = getelementptr inbounds %struct.Reg, %struct.Reg* %6795, i32 0, i32 0
  %RCX.i741 = bitcast %union.anon* %6796 to i64*
  %6797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6798 = getelementptr inbounds %struct.GPR, %struct.GPR* %6797, i32 0, i32 9
  %6799 = getelementptr inbounds %struct.Reg, %struct.Reg* %6798, i32 0, i32 0
  %RSI.i742 = bitcast %union.anon* %6799 to i64*
  %6800 = load i64, i64* %RSI.i742
  %6801 = load i64, i64* %RCX.i741
  %6802 = load i64, i64* %PC.i740
  %6803 = add i64 %6802, 2
  store i64 %6803, i64* %PC.i740
  %6804 = trunc i64 %6800 to i32
  %6805 = inttoptr i64 %6801 to i32*
  %6806 = load i32, i32* %6805
  %6807 = add i32 %6806, %6804
  %6808 = zext i32 %6807 to i64
  store i64 %6808, i64* %RSI.i742, align 8
  %6809 = icmp ult i32 %6807, %6804
  %6810 = icmp ult i32 %6807, %6806
  %6811 = or i1 %6809, %6810
  %6812 = zext i1 %6811 to i8
  %6813 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6812, i8* %6813, align 1
  %6814 = and i32 %6807, 255
  %6815 = call i32 @llvm.ctpop.i32(i32 %6814)
  %6816 = trunc i32 %6815 to i8
  %6817 = and i8 %6816, 1
  %6818 = xor i8 %6817, 1
  %6819 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6818, i8* %6819, align 1
  %6820 = xor i32 %6806, %6804
  %6821 = xor i32 %6820, %6807
  %6822 = lshr i32 %6821, 4
  %6823 = trunc i32 %6822 to i8
  %6824 = and i8 %6823, 1
  %6825 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6824, i8* %6825, align 1
  %6826 = icmp eq i32 %6807, 0
  %6827 = zext i1 %6826 to i8
  %6828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6827, i8* %6828, align 1
  %6829 = lshr i32 %6807, 31
  %6830 = trunc i32 %6829 to i8
  %6831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6830, i8* %6831, align 1
  %6832 = lshr i32 %6804, 31
  %6833 = lshr i32 %6806, 31
  %6834 = xor i32 %6829, %6832
  %6835 = xor i32 %6829, %6833
  %6836 = add i32 %6834, %6835
  %6837 = icmp eq i32 %6836, 2
  %6838 = zext i1 %6837 to i8
  %6839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6838, i8* %6839, align 1
  store %struct.Memory* %loadMem_41654f, %struct.Memory** %MEMORY
  %loadMem_416551 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6840 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6841 = getelementptr inbounds %struct.GPR, %struct.GPR* %6840, i32 0, i32 33
  %6842 = getelementptr inbounds %struct.Reg, %struct.Reg* %6841, i32 0, i32 0
  %PC.i737 = bitcast %union.anon* %6842 to i64*
  %6843 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6844 = getelementptr inbounds %struct.GPR, %struct.GPR* %6843, i32 0, i32 9
  %6845 = getelementptr inbounds %struct.Reg, %struct.Reg* %6844, i32 0, i32 0
  %ESI.i738 = bitcast %union.anon* %6845 to i32*
  %6846 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6847 = getelementptr inbounds %struct.GPR, %struct.GPR* %6846, i32 0, i32 5
  %6848 = getelementptr inbounds %struct.Reg, %struct.Reg* %6847, i32 0, i32 0
  %RCX.i739 = bitcast %union.anon* %6848 to i64*
  %6849 = load i64, i64* %RCX.i739
  %6850 = load i32, i32* %ESI.i738
  %6851 = zext i32 %6850 to i64
  %6852 = load i64, i64* %PC.i737
  %6853 = add i64 %6852, 2
  store i64 %6853, i64* %PC.i737
  %6854 = inttoptr i64 %6849 to i32*
  store i32 %6850, i32* %6854
  store %struct.Memory* %loadMem_416551, %struct.Memory** %MEMORY
  %loadMem_416553 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6856 = getelementptr inbounds %struct.GPR, %struct.GPR* %6855, i32 0, i32 33
  %6857 = getelementptr inbounds %struct.Reg, %struct.Reg* %6856, i32 0, i32 0
  %PC.i735 = bitcast %union.anon* %6857 to i64*
  %6858 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6859 = getelementptr inbounds %struct.GPR, %struct.GPR* %6858, i32 0, i32 9
  %6860 = getelementptr inbounds %struct.Reg, %struct.Reg* %6859, i32 0, i32 0
  %RSI.i736 = bitcast %union.anon* %6860 to i64*
  %6861 = load i64, i64* %PC.i735
  %6862 = add i64 %6861, 7
  store i64 %6862, i64* %PC.i735
  %6863 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %6864 = zext i32 %6863 to i64
  store i64 %6864, i64* %RSI.i736, align 8
  store %struct.Memory* %loadMem_416553, %struct.Memory** %MEMORY
  %loadMem_41655a = load %struct.Memory*, %struct.Memory** %MEMORY
  %6865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6866 = getelementptr inbounds %struct.GPR, %struct.GPR* %6865, i32 0, i32 33
  %6867 = getelementptr inbounds %struct.Reg, %struct.Reg* %6866, i32 0, i32 0
  %PC.i732 = bitcast %union.anon* %6867 to i64*
  %6868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6869 = getelementptr inbounds %struct.GPR, %struct.GPR* %6868, i32 0, i32 11
  %6870 = getelementptr inbounds %struct.Reg, %struct.Reg* %6869, i32 0, i32 0
  %RDI.i733 = bitcast %union.anon* %6870 to i64*
  %6871 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6872 = getelementptr inbounds %struct.GPR, %struct.GPR* %6871, i32 0, i32 15
  %6873 = getelementptr inbounds %struct.Reg, %struct.Reg* %6872, i32 0, i32 0
  %RBP.i734 = bitcast %union.anon* %6873 to i64*
  %6874 = load i64, i64* %RBP.i734
  %6875 = sub i64 %6874, 20
  %6876 = load i64, i64* %PC.i732
  %6877 = add i64 %6876, 3
  store i64 %6877, i64* %PC.i732
  %6878 = inttoptr i64 %6875 to i32*
  %6879 = load i32, i32* %6878
  %6880 = zext i32 %6879 to i64
  store i64 %6880, i64* %RDI.i733, align 8
  store %struct.Memory* %loadMem_41655a, %struct.Memory** %MEMORY
  %loadMem_41655d = load %struct.Memory*, %struct.Memory** %MEMORY
  %6881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6882 = getelementptr inbounds %struct.GPR, %struct.GPR* %6881, i32 0, i32 33
  %6883 = getelementptr inbounds %struct.Reg, %struct.Reg* %6882, i32 0, i32 0
  %PC.i730 = bitcast %union.anon* %6883 to i64*
  %6884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6885 = getelementptr inbounds %struct.GPR, %struct.GPR* %6884, i32 0, i32 11
  %6886 = getelementptr inbounds %struct.Reg, %struct.Reg* %6885, i32 0, i32 0
  %RDI.i731 = bitcast %union.anon* %6886 to i64*
  %6887 = load i64, i64* %RDI.i731
  %6888 = load i64, i64* %PC.i730
  %6889 = add i64 %6888, 3
  store i64 %6889, i64* %PC.i730
  %6890 = trunc i64 %6887 to i32
  %6891 = sub i32 %6890, 1
  %6892 = zext i32 %6891 to i64
  store i64 %6892, i64* %RDI.i731, align 8
  %6893 = icmp ult i32 %6890, 1
  %6894 = zext i1 %6893 to i8
  %6895 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6894, i8* %6895, align 1
  %6896 = and i32 %6891, 255
  %6897 = call i32 @llvm.ctpop.i32(i32 %6896)
  %6898 = trunc i32 %6897 to i8
  %6899 = and i8 %6898, 1
  %6900 = xor i8 %6899, 1
  %6901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6900, i8* %6901, align 1
  %6902 = xor i64 1, %6887
  %6903 = trunc i64 %6902 to i32
  %6904 = xor i32 %6903, %6891
  %6905 = lshr i32 %6904, 4
  %6906 = trunc i32 %6905 to i8
  %6907 = and i8 %6906, 1
  %6908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %6907, i8* %6908, align 1
  %6909 = icmp eq i32 %6891, 0
  %6910 = zext i1 %6909 to i8
  %6911 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %6910, i8* %6911, align 1
  %6912 = lshr i32 %6891, 31
  %6913 = trunc i32 %6912 to i8
  %6914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6913, i8* %6914, align 1
  %6915 = lshr i32 %6890, 31
  %6916 = xor i32 %6912, %6915
  %6917 = add i32 %6916, %6915
  %6918 = icmp eq i32 %6917, 2
  %6919 = zext i1 %6918 to i8
  %6920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6919, i8* %6920, align 1
  store %struct.Memory* %loadMem_41655d, %struct.Memory** %MEMORY
  %loadMem_416560 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6922 = getelementptr inbounds %struct.GPR, %struct.GPR* %6921, i32 0, i32 33
  %6923 = getelementptr inbounds %struct.Reg, %struct.Reg* %6922, i32 0, i32 0
  %PC.i727 = bitcast %union.anon* %6923 to i64*
  %6924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6925 = getelementptr inbounds %struct.GPR, %struct.GPR* %6924, i32 0, i32 11
  %6926 = getelementptr inbounds %struct.Reg, %struct.Reg* %6925, i32 0, i32 0
  %EDI.i728 = bitcast %union.anon* %6926 to i32*
  %6927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6928 = getelementptr inbounds %struct.GPR, %struct.GPR* %6927, i32 0, i32 5
  %6929 = getelementptr inbounds %struct.Reg, %struct.Reg* %6928, i32 0, i32 0
  %RCX.i729 = bitcast %union.anon* %6929 to i64*
  %6930 = load i32, i32* %EDI.i728
  %6931 = zext i32 %6930 to i64
  %6932 = load i64, i64* %PC.i727
  %6933 = add i64 %6932, 3
  store i64 %6933, i64* %PC.i727
  %6934 = shl i64 %6931, 32
  %6935 = ashr exact i64 %6934, 32
  store i64 %6935, i64* %RCX.i729, align 8
  store %struct.Memory* %loadMem_416560, %struct.Memory** %MEMORY
  %loadMem_416563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6936 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6937 = getelementptr inbounds %struct.GPR, %struct.GPR* %6936, i32 0, i32 33
  %6938 = getelementptr inbounds %struct.Reg, %struct.Reg* %6937, i32 0, i32 0
  %PC.i725 = bitcast %union.anon* %6938 to i64*
  %6939 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6940 = getelementptr inbounds %struct.GPR, %struct.GPR* %6939, i32 0, i32 5
  %6941 = getelementptr inbounds %struct.Reg, %struct.Reg* %6940, i32 0, i32 0
  %RCX.i726 = bitcast %union.anon* %6941 to i64*
  %6942 = load i64, i64* %RCX.i726
  %6943 = mul i64 %6942, 4
  %6944 = add i64 %6943, 11187184
  %6945 = load i64, i64* %PC.i725
  %6946 = add i64 %6945, 8
  store i64 %6946, i64* %PC.i725
  %6947 = inttoptr i64 %6944 to i32*
  %6948 = load i32, i32* %6947
  %6949 = sext i32 %6948 to i64
  store i64 %6949, i64* %RCX.i726, align 8
  store %struct.Memory* %loadMem_416563, %struct.Memory** %MEMORY
  %loadMem_41656b = load %struct.Memory*, %struct.Memory** %MEMORY
  %6950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6951 = getelementptr inbounds %struct.GPR, %struct.GPR* %6950, i32 0, i32 33
  %6952 = getelementptr inbounds %struct.Reg, %struct.Reg* %6951, i32 0, i32 0
  %PC.i723 = bitcast %union.anon* %6952 to i64*
  %6953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6954 = getelementptr inbounds %struct.GPR, %struct.GPR* %6953, i32 0, i32 5
  %6955 = getelementptr inbounds %struct.Reg, %struct.Reg* %6954, i32 0, i32 0
  %RCX.i724 = bitcast %union.anon* %6955 to i64*
  %6956 = load i64, i64* %RCX.i724
  %6957 = load i64, i64* %PC.i723
  %6958 = add i64 %6957, 7
  store i64 %6958, i64* %PC.i723
  %6959 = sext i64 %6956 to i128
  %6960 = and i128 %6959, -18446744073709551616
  %6961 = zext i64 %6956 to i128
  %6962 = or i128 %6960, %6961
  %6963 = mul i128 744, %6962
  %6964 = trunc i128 %6963 to i64
  store i64 %6964, i64* %RCX.i724, align 8
  %6965 = sext i64 %6964 to i128
  %6966 = icmp ne i128 %6965, %6963
  %6967 = zext i1 %6966 to i8
  %6968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6967, i8* %6968, align 1
  %6969 = trunc i128 %6963 to i32
  %6970 = and i32 %6969, 255
  %6971 = call i32 @llvm.ctpop.i32(i32 %6970)
  %6972 = trunc i32 %6971 to i8
  %6973 = and i8 %6972, 1
  %6974 = xor i8 %6973, 1
  %6975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %6974, i8* %6975, align 1
  %6976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %6976, align 1
  %6977 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %6977, align 1
  %6978 = lshr i64 %6964, 63
  %6979 = trunc i64 %6978 to i8
  %6980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %6979, i8* %6980, align 1
  %6981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %6967, i8* %6981, align 1
  store %struct.Memory* %loadMem_41656b, %struct.Memory** %MEMORY
  %loadMem_416572 = load %struct.Memory*, %struct.Memory** %MEMORY
  %6982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6983 = getelementptr inbounds %struct.GPR, %struct.GPR* %6982, i32 0, i32 33
  %6984 = getelementptr inbounds %struct.Reg, %struct.Reg* %6983, i32 0, i32 0
  %PC.i720 = bitcast %union.anon* %6984 to i64*
  %6985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6986 = getelementptr inbounds %struct.GPR, %struct.GPR* %6985, i32 0, i32 1
  %6987 = getelementptr inbounds %struct.Reg, %struct.Reg* %6986, i32 0, i32 0
  %RAX.i721 = bitcast %union.anon* %6987 to i64*
  %6988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %6989 = getelementptr inbounds %struct.GPR, %struct.GPR* %6988, i32 0, i32 5
  %6990 = getelementptr inbounds %struct.Reg, %struct.Reg* %6989, i32 0, i32 0
  %RCX.i722 = bitcast %union.anon* %6990 to i64*
  %6991 = load i64, i64* %RAX.i721
  %6992 = load i64, i64* %RCX.i722
  %6993 = load i64, i64* %PC.i720
  %6994 = add i64 %6993, 3
  store i64 %6994, i64* %PC.i720
  %6995 = add i64 %6992, %6991
  store i64 %6995, i64* %RAX.i721, align 8
  %6996 = icmp ult i64 %6995, %6991
  %6997 = icmp ult i64 %6995, %6992
  %6998 = or i1 %6996, %6997
  %6999 = zext i1 %6998 to i8
  %7000 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %6999, i8* %7000, align 1
  %7001 = trunc i64 %6995 to i32
  %7002 = and i32 %7001, 255
  %7003 = call i32 @llvm.ctpop.i32(i32 %7002)
  %7004 = trunc i32 %7003 to i8
  %7005 = and i8 %7004, 1
  %7006 = xor i8 %7005, 1
  %7007 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7006, i8* %7007, align 1
  %7008 = xor i64 %6992, %6991
  %7009 = xor i64 %7008, %6995
  %7010 = lshr i64 %7009, 4
  %7011 = trunc i64 %7010 to i8
  %7012 = and i8 %7011, 1
  %7013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7012, i8* %7013, align 1
  %7014 = icmp eq i64 %6995, 0
  %7015 = zext i1 %7014 to i8
  %7016 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7015, i8* %7016, align 1
  %7017 = lshr i64 %6995, 63
  %7018 = trunc i64 %7017 to i8
  %7019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7018, i8* %7019, align 1
  %7020 = lshr i64 %6991, 63
  %7021 = lshr i64 %6992, 63
  %7022 = xor i64 %7017, %7020
  %7023 = xor i64 %7017, %7021
  %7024 = add i64 %7022, %7023
  %7025 = icmp eq i64 %7024, 2
  %7026 = zext i1 %7025 to i8
  %7027 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7026, i8* %7027, align 1
  store %struct.Memory* %loadMem_416572, %struct.Memory** %MEMORY
  %loadMem_416575 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7028 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7029 = getelementptr inbounds %struct.GPR, %struct.GPR* %7028, i32 0, i32 33
  %7030 = getelementptr inbounds %struct.Reg, %struct.Reg* %7029, i32 0, i32 0
  %PC.i717 = bitcast %union.anon* %7030 to i64*
  %7031 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7032 = getelementptr inbounds %struct.GPR, %struct.GPR* %7031, i32 0, i32 9
  %7033 = getelementptr inbounds %struct.Reg, %struct.Reg* %7032, i32 0, i32 0
  %ESI.i718 = bitcast %union.anon* %7033 to i32*
  %7034 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7035 = getelementptr inbounds %struct.GPR, %struct.GPR* %7034, i32 0, i32 1
  %7036 = getelementptr inbounds %struct.Reg, %struct.Reg* %7035, i32 0, i32 0
  %RAX.i719 = bitcast %union.anon* %7036 to i64*
  %7037 = load i64, i64* %RAX.i719
  %7038 = add i64 %7037, 740
  %7039 = load i32, i32* %ESI.i718
  %7040 = zext i32 %7039 to i64
  %7041 = load i64, i64* %PC.i717
  %7042 = add i64 %7041, 6
  store i64 %7042, i64* %PC.i717
  %7043 = inttoptr i64 %7038 to i32*
  store i32 %7039, i32* %7043
  store %struct.Memory* %loadMem_416575, %struct.Memory** %MEMORY
  br label %block_.L_41657b

block_.L_41657b:                                  ; preds = %block_41652d, %block_4164f5, %block_.L_4164d3
  %loadMem_41657b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7044 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7045 = getelementptr inbounds %struct.GPR, %struct.GPR* %7044, i32 0, i32 33
  %7046 = getelementptr inbounds %struct.Reg, %struct.Reg* %7045, i32 0, i32 0
  %PC.i716 = bitcast %union.anon* %7046 to i64*
  %7047 = load i64, i64* %PC.i716
  %7048 = add i64 %7047, 5
  %7049 = load i64, i64* %PC.i716
  %7050 = add i64 %7049, 5
  store i64 %7050, i64* %PC.i716
  %7051 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7048, i64* %7051, align 8
  store %struct.Memory* %loadMem_41657b, %struct.Memory** %MEMORY
  br label %block_.L_416580

block_.L_416580:                                  ; preds = %block_.L_41657b, %block_.L_4164ce
  %loadMem_416580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7052 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7053 = getelementptr inbounds %struct.GPR, %struct.GPR* %7052, i32 0, i32 33
  %7054 = getelementptr inbounds %struct.Reg, %struct.Reg* %7053, i32 0, i32 0
  %PC.i715 = bitcast %union.anon* %7054 to i64*
  %7055 = load i64, i64* %PC.i715
  %7056 = add i64 %7055, 5
  %7057 = load i64, i64* %PC.i715
  %7058 = add i64 %7057, 5
  store i64 %7058, i64* %PC.i715
  %7059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7056, i64* %7059, align 8
  store %struct.Memory* %loadMem_416580, %struct.Memory** %MEMORY
  br label %block_.L_416585

block_.L_416585:                                  ; preds = %block_.L_416580, %block_.L_4163ec
  %loadMem_416585 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7061 = getelementptr inbounds %struct.GPR, %struct.GPR* %7060, i32 0, i32 33
  %7062 = getelementptr inbounds %struct.Reg, %struct.Reg* %7061, i32 0, i32 0
  %PC.i714 = bitcast %union.anon* %7062 to i64*
  %7063 = load i64, i64* %PC.i714
  %7064 = add i64 %7063, 5
  %7065 = load i64, i64* %PC.i714
  %7066 = add i64 %7065, 5
  store i64 %7066, i64* %PC.i714
  %7067 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7064, i64* %7067, align 8
  store %struct.Memory* %loadMem_416585, %struct.Memory** %MEMORY
  br label %block_.L_41658a

block_.L_41658a:                                  ; preds = %block_.L_416585, %block_416340
  %loadMem_41658a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7069 = getelementptr inbounds %struct.GPR, %struct.GPR* %7068, i32 0, i32 33
  %7070 = getelementptr inbounds %struct.Reg, %struct.Reg* %7069, i32 0, i32 0
  %PC.i713 = bitcast %union.anon* %7070 to i64*
  %7071 = load i64, i64* %PC.i713
  %7072 = add i64 %7071, 5
  %7073 = load i64, i64* %PC.i713
  %7074 = add i64 %7073, 5
  store i64 %7074, i64* %PC.i713
  %7075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7072, i64* %7075, align 8
  store %struct.Memory* %loadMem_41658a, %struct.Memory** %MEMORY
  br label %block_.L_41658f

block_.L_41658f:                                  ; preds = %block_.L_41658a, %block_416316
  %loadMem_41658f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7076 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7077 = getelementptr inbounds %struct.GPR, %struct.GPR* %7076, i32 0, i32 33
  %7078 = getelementptr inbounds %struct.Reg, %struct.Reg* %7077, i32 0, i32 0
  %PC.i710 = bitcast %union.anon* %7078 to i64*
  %7079 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7080 = getelementptr inbounds %struct.GPR, %struct.GPR* %7079, i32 0, i32 1
  %7081 = getelementptr inbounds %struct.Reg, %struct.Reg* %7080, i32 0, i32 0
  %RAX.i711 = bitcast %union.anon* %7081 to i64*
  %7082 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7083 = getelementptr inbounds %struct.GPR, %struct.GPR* %7082, i32 0, i32 15
  %7084 = getelementptr inbounds %struct.Reg, %struct.Reg* %7083, i32 0, i32 0
  %RBP.i712 = bitcast %union.anon* %7084 to i64*
  %7085 = load i64, i64* %RBP.i712
  %7086 = sub i64 %7085, 20
  %7087 = load i64, i64* %PC.i710
  %7088 = add i64 %7087, 3
  store i64 %7088, i64* %PC.i710
  %7089 = inttoptr i64 %7086 to i32*
  %7090 = load i32, i32* %7089
  %7091 = zext i32 %7090 to i64
  store i64 %7091, i64* %RAX.i711, align 8
  store %struct.Memory* %loadMem_41658f, %struct.Memory** %MEMORY
  %loadMem_416592 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7093 = getelementptr inbounds %struct.GPR, %struct.GPR* %7092, i32 0, i32 33
  %7094 = getelementptr inbounds %struct.Reg, %struct.Reg* %7093, i32 0, i32 0
  %PC.i708 = bitcast %union.anon* %7094 to i64*
  %7095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7096 = getelementptr inbounds %struct.GPR, %struct.GPR* %7095, i32 0, i32 1
  %7097 = getelementptr inbounds %struct.Reg, %struct.Reg* %7096, i32 0, i32 0
  %RAX.i709 = bitcast %union.anon* %7097 to i64*
  %7098 = load i64, i64* %RAX.i709
  %7099 = load i64, i64* %PC.i708
  %7100 = add i64 %7099, 3
  store i64 %7100, i64* %PC.i708
  %7101 = trunc i64 %7098 to i32
  %7102 = sub i32 %7101, 20
  %7103 = zext i32 %7102 to i64
  store i64 %7103, i64* %RAX.i709, align 8
  %7104 = icmp ult i32 %7101, 20
  %7105 = zext i1 %7104 to i8
  %7106 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7105, i8* %7106, align 1
  %7107 = and i32 %7102, 255
  %7108 = call i32 @llvm.ctpop.i32(i32 %7107)
  %7109 = trunc i32 %7108 to i8
  %7110 = and i8 %7109, 1
  %7111 = xor i8 %7110, 1
  %7112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7111, i8* %7112, align 1
  %7113 = xor i64 20, %7098
  %7114 = trunc i64 %7113 to i32
  %7115 = xor i32 %7114, %7102
  %7116 = lshr i32 %7115, 4
  %7117 = trunc i32 %7116 to i8
  %7118 = and i8 %7117, 1
  %7119 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7118, i8* %7119, align 1
  %7120 = icmp eq i32 %7102, 0
  %7121 = zext i1 %7120 to i8
  %7122 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7121, i8* %7122, align 1
  %7123 = lshr i32 %7102, 31
  %7124 = trunc i32 %7123 to i8
  %7125 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7124, i8* %7125, align 1
  %7126 = lshr i32 %7101, 31
  %7127 = xor i32 %7123, %7126
  %7128 = add i32 %7127, %7126
  %7129 = icmp eq i32 %7128, 2
  %7130 = zext i1 %7129 to i8
  %7131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7130, i8* %7131, align 1
  store %struct.Memory* %loadMem_416592, %struct.Memory** %MEMORY
  %loadMem_416595 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7133 = getelementptr inbounds %struct.GPR, %struct.GPR* %7132, i32 0, i32 33
  %7134 = getelementptr inbounds %struct.Reg, %struct.Reg* %7133, i32 0, i32 0
  %PC.i705 = bitcast %union.anon* %7134 to i64*
  %7135 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7136 = getelementptr inbounds %struct.GPR, %struct.GPR* %7135, i32 0, i32 1
  %7137 = getelementptr inbounds %struct.Reg, %struct.Reg* %7136, i32 0, i32 0
  %EAX.i706 = bitcast %union.anon* %7137 to i32*
  %7138 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7139 = getelementptr inbounds %struct.GPR, %struct.GPR* %7138, i32 0, i32 5
  %7140 = getelementptr inbounds %struct.Reg, %struct.Reg* %7139, i32 0, i32 0
  %RCX.i707 = bitcast %union.anon* %7140 to i64*
  %7141 = load i32, i32* %EAX.i706
  %7142 = zext i32 %7141 to i64
  %7143 = load i64, i64* %PC.i705
  %7144 = add i64 %7143, 3
  store i64 %7144, i64* %PC.i705
  %7145 = shl i64 %7142, 32
  %7146 = ashr exact i64 %7145, 32
  store i64 %7146, i64* %RCX.i707, align 8
  store %struct.Memory* %loadMem_416595, %struct.Memory** %MEMORY
  %loadMem_416598 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7148 = getelementptr inbounds %struct.GPR, %struct.GPR* %7147, i32 0, i32 33
  %7149 = getelementptr inbounds %struct.Reg, %struct.Reg* %7148, i32 0, i32 0
  %PC.i702 = bitcast %union.anon* %7149 to i64*
  %7150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7151 = getelementptr inbounds %struct.GPR, %struct.GPR* %7150, i32 0, i32 1
  %7152 = getelementptr inbounds %struct.Reg, %struct.Reg* %7151, i32 0, i32 0
  %RAX.i703 = bitcast %union.anon* %7152 to i64*
  %7153 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7154 = getelementptr inbounds %struct.GPR, %struct.GPR* %7153, i32 0, i32 5
  %7155 = getelementptr inbounds %struct.Reg, %struct.Reg* %7154, i32 0, i32 0
  %RCX.i704 = bitcast %union.anon* %7155 to i64*
  %7156 = load i64, i64* %RCX.i704
  %7157 = add i64 %7156, 12099168
  %7158 = load i64, i64* %PC.i702
  %7159 = add i64 %7158, 8
  store i64 %7159, i64* %PC.i702
  %7160 = inttoptr i64 %7157 to i8*
  %7161 = load i8, i8* %7160
  %7162 = zext i8 %7161 to i64
  store i64 %7162, i64* %RAX.i703, align 8
  store %struct.Memory* %loadMem_416598, %struct.Memory** %MEMORY
  %loadMem_4165a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7164 = getelementptr inbounds %struct.GPR, %struct.GPR* %7163, i32 0, i32 33
  %7165 = getelementptr inbounds %struct.Reg, %struct.Reg* %7164, i32 0, i32 0
  %PC.i700 = bitcast %union.anon* %7165 to i64*
  %7166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7167 = getelementptr inbounds %struct.GPR, %struct.GPR* %7166, i32 0, i32 1
  %7168 = getelementptr inbounds %struct.Reg, %struct.Reg* %7167, i32 0, i32 0
  %EAX.i701 = bitcast %union.anon* %7168 to i32*
  %7169 = load i32, i32* %EAX.i701
  %7170 = zext i32 %7169 to i64
  %7171 = load i64, i64* %PC.i700
  %7172 = add i64 %7171, 3
  store i64 %7172, i64* %PC.i700
  %7173 = sub i32 %7169, 3
  %7174 = icmp ult i32 %7169, 3
  %7175 = zext i1 %7174 to i8
  %7176 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7175, i8* %7176, align 1
  %7177 = and i32 %7173, 255
  %7178 = call i32 @llvm.ctpop.i32(i32 %7177)
  %7179 = trunc i32 %7178 to i8
  %7180 = and i8 %7179, 1
  %7181 = xor i8 %7180, 1
  %7182 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7181, i8* %7182, align 1
  %7183 = xor i64 3, %7170
  %7184 = trunc i64 %7183 to i32
  %7185 = xor i32 %7184, %7173
  %7186 = lshr i32 %7185, 4
  %7187 = trunc i32 %7186 to i8
  %7188 = and i8 %7187, 1
  %7189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7188, i8* %7189, align 1
  %7190 = icmp eq i32 %7173, 0
  %7191 = zext i1 %7190 to i8
  %7192 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7191, i8* %7192, align 1
  %7193 = lshr i32 %7173, 31
  %7194 = trunc i32 %7193 to i8
  %7195 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7194, i8* %7195, align 1
  %7196 = lshr i32 %7169, 31
  %7197 = xor i32 %7193, %7196
  %7198 = add i32 %7197, %7196
  %7199 = icmp eq i32 %7198, 2
  %7200 = zext i1 %7199 to i8
  %7201 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7200, i8* %7201, align 1
  store %struct.Memory* %loadMem_4165a0, %struct.Memory** %MEMORY
  %loadMem_4165a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7202 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7203 = getelementptr inbounds %struct.GPR, %struct.GPR* %7202, i32 0, i32 33
  %7204 = getelementptr inbounds %struct.Reg, %struct.Reg* %7203, i32 0, i32 0
  %PC.i699 = bitcast %union.anon* %7204 to i64*
  %7205 = load i64, i64* %PC.i699
  %7206 = add i64 %7205, 22
  %7207 = load i64, i64* %PC.i699
  %7208 = add i64 %7207, 6
  %7209 = load i64, i64* %PC.i699
  %7210 = add i64 %7209, 6
  store i64 %7210, i64* %PC.i699
  %7211 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7212 = load i8, i8* %7211, align 1
  %7213 = icmp eq i8 %7212, 0
  %7214 = zext i1 %7213 to i8
  store i8 %7214, i8* %BRANCH_TAKEN, align 1
  %7215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7216 = select i1 %7213, i64 %7206, i64 %7208
  store i64 %7216, i64* %7215, align 8
  store %struct.Memory* %loadMem_4165a3, %struct.Memory** %MEMORY
  %loadBr_4165a3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4165a3 = icmp eq i8 %loadBr_4165a3, 1
  br i1 %cmpBr_4165a3, label %block_.L_4165b9, label %block_4165a9

block_4165a9:                                     ; preds = %block_.L_41658f
  %loadMem_4165a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7218 = getelementptr inbounds %struct.GPR, %struct.GPR* %7217, i32 0, i32 33
  %7219 = getelementptr inbounds %struct.Reg, %struct.Reg* %7218, i32 0, i32 0
  %PC.i696 = bitcast %union.anon* %7219 to i64*
  %7220 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7221 = getelementptr inbounds %struct.GPR, %struct.GPR* %7220, i32 0, i32 1
  %7222 = getelementptr inbounds %struct.Reg, %struct.Reg* %7221, i32 0, i32 0
  %RAX.i697 = bitcast %union.anon* %7222 to i64*
  %7223 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7224 = getelementptr inbounds %struct.GPR, %struct.GPR* %7223, i32 0, i32 15
  %7225 = getelementptr inbounds %struct.Reg, %struct.Reg* %7224, i32 0, i32 0
  %RBP.i698 = bitcast %union.anon* %7225 to i64*
  %7226 = load i64, i64* %RBP.i698
  %7227 = sub i64 %7226, 40
  %7228 = load i64, i64* %PC.i696
  %7229 = add i64 %7228, 4
  store i64 %7229, i64* %PC.i696
  %7230 = inttoptr i64 %7227 to i64*
  %7231 = load i64, i64* %7230
  store i64 %7231, i64* %RAX.i697, align 8
  store %struct.Memory* %loadMem_4165a9, %struct.Memory** %MEMORY
  %loadMem_4165ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %7232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7233 = getelementptr inbounds %struct.GPR, %struct.GPR* %7232, i32 0, i32 33
  %7234 = getelementptr inbounds %struct.Reg, %struct.Reg* %7233, i32 0, i32 0
  %PC.i693 = bitcast %union.anon* %7234 to i64*
  %7235 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7236 = getelementptr inbounds %struct.GPR, %struct.GPR* %7235, i32 0, i32 1
  %7237 = getelementptr inbounds %struct.Reg, %struct.Reg* %7236, i32 0, i32 0
  %RAX.i694 = bitcast %union.anon* %7237 to i64*
  %7238 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7239 = getelementptr inbounds %struct.GPR, %struct.GPR* %7238, i32 0, i32 5
  %7240 = getelementptr inbounds %struct.Reg, %struct.Reg* %7239, i32 0, i32 0
  %RCX.i695 = bitcast %union.anon* %7240 to i64*
  %7241 = load i64, i64* %RAX.i694
  %7242 = load i64, i64* %PC.i693
  %7243 = add i64 %7242, 2
  store i64 %7243, i64* %PC.i693
  %7244 = inttoptr i64 %7241 to i32*
  %7245 = load i32, i32* %7244
  %7246 = zext i32 %7245 to i64
  store i64 %7246, i64* %RCX.i695, align 8
  store %struct.Memory* %loadMem_4165ad, %struct.Memory** %MEMORY
  %loadMem_4165af = load %struct.Memory*, %struct.Memory** %MEMORY
  %7247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7248 = getelementptr inbounds %struct.GPR, %struct.GPR* %7247, i32 0, i32 33
  %7249 = getelementptr inbounds %struct.Reg, %struct.Reg* %7248, i32 0, i32 0
  %PC.i691 = bitcast %union.anon* %7249 to i64*
  %7250 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7251 = getelementptr inbounds %struct.GPR, %struct.GPR* %7250, i32 0, i32 5
  %7252 = getelementptr inbounds %struct.Reg, %struct.Reg* %7251, i32 0, i32 0
  %RCX.i692 = bitcast %union.anon* %7252 to i64*
  %7253 = load i64, i64* %RCX.i692
  %7254 = load i64, i64* %PC.i691
  %7255 = add i64 %7254, 3
  store i64 %7255, i64* %PC.i691
  %7256 = trunc i64 %7253 to i32
  %7257 = add i32 1, %7256
  %7258 = zext i32 %7257 to i64
  store i64 %7258, i64* %RCX.i692, align 8
  %7259 = icmp ult i32 %7257, %7256
  %7260 = icmp ult i32 %7257, 1
  %7261 = or i1 %7259, %7260
  %7262 = zext i1 %7261 to i8
  %7263 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7262, i8* %7263, align 1
  %7264 = and i32 %7257, 255
  %7265 = call i32 @llvm.ctpop.i32(i32 %7264)
  %7266 = trunc i32 %7265 to i8
  %7267 = and i8 %7266, 1
  %7268 = xor i8 %7267, 1
  %7269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7268, i8* %7269, align 1
  %7270 = xor i64 1, %7253
  %7271 = trunc i64 %7270 to i32
  %7272 = xor i32 %7271, %7257
  %7273 = lshr i32 %7272, 4
  %7274 = trunc i32 %7273 to i8
  %7275 = and i8 %7274, 1
  %7276 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7275, i8* %7276, align 1
  %7277 = icmp eq i32 %7257, 0
  %7278 = zext i1 %7277 to i8
  %7279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7278, i8* %7279, align 1
  %7280 = lshr i32 %7257, 31
  %7281 = trunc i32 %7280 to i8
  %7282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7281, i8* %7282, align 1
  %7283 = lshr i32 %7256, 31
  %7284 = xor i32 %7280, %7283
  %7285 = add i32 %7284, %7280
  %7286 = icmp eq i32 %7285, 2
  %7287 = zext i1 %7286 to i8
  %7288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7287, i8* %7288, align 1
  store %struct.Memory* %loadMem_4165af, %struct.Memory** %MEMORY
  %loadMem_4165b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7289 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7290 = getelementptr inbounds %struct.GPR, %struct.GPR* %7289, i32 0, i32 33
  %7291 = getelementptr inbounds %struct.Reg, %struct.Reg* %7290, i32 0, i32 0
  %PC.i688 = bitcast %union.anon* %7291 to i64*
  %7292 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7293 = getelementptr inbounds %struct.GPR, %struct.GPR* %7292, i32 0, i32 5
  %7294 = getelementptr inbounds %struct.Reg, %struct.Reg* %7293, i32 0, i32 0
  %ECX.i689 = bitcast %union.anon* %7294 to i32*
  %7295 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7296 = getelementptr inbounds %struct.GPR, %struct.GPR* %7295, i32 0, i32 1
  %7297 = getelementptr inbounds %struct.Reg, %struct.Reg* %7296, i32 0, i32 0
  %RAX.i690 = bitcast %union.anon* %7297 to i64*
  %7298 = load i64, i64* %RAX.i690
  %7299 = load i32, i32* %ECX.i689
  %7300 = zext i32 %7299 to i64
  %7301 = load i64, i64* %PC.i688
  %7302 = add i64 %7301, 2
  store i64 %7302, i64* %PC.i688
  %7303 = inttoptr i64 %7298 to i32*
  store i32 %7299, i32* %7303
  store %struct.Memory* %loadMem_4165b2, %struct.Memory** %MEMORY
  %loadMem_4165b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7304 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7305 = getelementptr inbounds %struct.GPR, %struct.GPR* %7304, i32 0, i32 33
  %7306 = getelementptr inbounds %struct.Reg, %struct.Reg* %7305, i32 0, i32 0
  %PC.i687 = bitcast %union.anon* %7306 to i64*
  %7307 = load i64, i64* %PC.i687
  %7308 = add i64 %7307, 676
  %7309 = load i64, i64* %PC.i687
  %7310 = add i64 %7309, 5
  store i64 %7310, i64* %PC.i687
  %7311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7308, i64* %7311, align 8
  store %struct.Memory* %loadMem_4165b4, %struct.Memory** %MEMORY
  br label %block_.L_416858

block_.L_4165b9:                                  ; preds = %block_.L_41658f
  %loadMem_4165b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7312 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7313 = getelementptr inbounds %struct.GPR, %struct.GPR* %7312, i32 0, i32 33
  %7314 = getelementptr inbounds %struct.Reg, %struct.Reg* %7313, i32 0, i32 0
  %PC.i684 = bitcast %union.anon* %7314 to i64*
  %7315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7316 = getelementptr inbounds %struct.GPR, %struct.GPR* %7315, i32 0, i32 1
  %7317 = getelementptr inbounds %struct.Reg, %struct.Reg* %7316, i32 0, i32 0
  %RAX.i685 = bitcast %union.anon* %7317 to i64*
  %7318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7319 = getelementptr inbounds %struct.GPR, %struct.GPR* %7318, i32 0, i32 15
  %7320 = getelementptr inbounds %struct.Reg, %struct.Reg* %7319, i32 0, i32 0
  %RBP.i686 = bitcast %union.anon* %7320 to i64*
  %7321 = load i64, i64* %RBP.i686
  %7322 = sub i64 %7321, 20
  %7323 = load i64, i64* %PC.i684
  %7324 = add i64 %7323, 3
  store i64 %7324, i64* %PC.i684
  %7325 = inttoptr i64 %7322 to i32*
  %7326 = load i32, i32* %7325
  %7327 = zext i32 %7326 to i64
  store i64 %7327, i64* %RAX.i685, align 8
  store %struct.Memory* %loadMem_4165b9, %struct.Memory** %MEMORY
  %loadMem_4165bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7328 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7329 = getelementptr inbounds %struct.GPR, %struct.GPR* %7328, i32 0, i32 33
  %7330 = getelementptr inbounds %struct.Reg, %struct.Reg* %7329, i32 0, i32 0
  %PC.i682 = bitcast %union.anon* %7330 to i64*
  %7331 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7332 = getelementptr inbounds %struct.GPR, %struct.GPR* %7331, i32 0, i32 1
  %7333 = getelementptr inbounds %struct.Reg, %struct.Reg* %7332, i32 0, i32 0
  %RAX.i683 = bitcast %union.anon* %7333 to i64*
  %7334 = load i64, i64* %RAX.i683
  %7335 = load i64, i64* %PC.i682
  %7336 = add i64 %7335, 3
  store i64 %7336, i64* %PC.i682
  %7337 = trunc i64 %7334 to i32
  %7338 = sub i32 %7337, 20
  %7339 = zext i32 %7338 to i64
  store i64 %7339, i64* %RAX.i683, align 8
  %7340 = icmp ult i32 %7337, 20
  %7341 = zext i1 %7340 to i8
  %7342 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7341, i8* %7342, align 1
  %7343 = and i32 %7338, 255
  %7344 = call i32 @llvm.ctpop.i32(i32 %7343)
  %7345 = trunc i32 %7344 to i8
  %7346 = and i8 %7345, 1
  %7347 = xor i8 %7346, 1
  %7348 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7347, i8* %7348, align 1
  %7349 = xor i64 20, %7334
  %7350 = trunc i64 %7349 to i32
  %7351 = xor i32 %7350, %7338
  %7352 = lshr i32 %7351, 4
  %7353 = trunc i32 %7352 to i8
  %7354 = and i8 %7353, 1
  %7355 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7354, i8* %7355, align 1
  %7356 = icmp eq i32 %7338, 0
  %7357 = zext i1 %7356 to i8
  %7358 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7357, i8* %7358, align 1
  %7359 = lshr i32 %7338, 31
  %7360 = trunc i32 %7359 to i8
  %7361 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7360, i8* %7361, align 1
  %7362 = lshr i32 %7337, 31
  %7363 = xor i32 %7359, %7362
  %7364 = add i32 %7363, %7362
  %7365 = icmp eq i32 %7364, 2
  %7366 = zext i1 %7365 to i8
  %7367 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7366, i8* %7367, align 1
  store %struct.Memory* %loadMem_4165bc, %struct.Memory** %MEMORY
  %loadMem_4165bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %7368 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7369 = getelementptr inbounds %struct.GPR, %struct.GPR* %7368, i32 0, i32 33
  %7370 = getelementptr inbounds %struct.Reg, %struct.Reg* %7369, i32 0, i32 0
  %PC.i679 = bitcast %union.anon* %7370 to i64*
  %7371 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7372 = getelementptr inbounds %struct.GPR, %struct.GPR* %7371, i32 0, i32 1
  %7373 = getelementptr inbounds %struct.Reg, %struct.Reg* %7372, i32 0, i32 0
  %EAX.i680 = bitcast %union.anon* %7373 to i32*
  %7374 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7375 = getelementptr inbounds %struct.GPR, %struct.GPR* %7374, i32 0, i32 5
  %7376 = getelementptr inbounds %struct.Reg, %struct.Reg* %7375, i32 0, i32 0
  %RCX.i681 = bitcast %union.anon* %7376 to i64*
  %7377 = load i32, i32* %EAX.i680
  %7378 = zext i32 %7377 to i64
  %7379 = load i64, i64* %PC.i679
  %7380 = add i64 %7379, 3
  store i64 %7380, i64* %PC.i679
  %7381 = shl i64 %7378, 32
  %7382 = ashr exact i64 %7381, 32
  store i64 %7382, i64* %RCX.i681, align 8
  store %struct.Memory* %loadMem_4165bf, %struct.Memory** %MEMORY
  %loadMem_4165c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7383 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7384 = getelementptr inbounds %struct.GPR, %struct.GPR* %7383, i32 0, i32 33
  %7385 = getelementptr inbounds %struct.Reg, %struct.Reg* %7384, i32 0, i32 0
  %PC.i676 = bitcast %union.anon* %7385 to i64*
  %7386 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7387 = getelementptr inbounds %struct.GPR, %struct.GPR* %7386, i32 0, i32 1
  %7388 = getelementptr inbounds %struct.Reg, %struct.Reg* %7387, i32 0, i32 0
  %RAX.i677 = bitcast %union.anon* %7388 to i64*
  %7389 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7390 = getelementptr inbounds %struct.GPR, %struct.GPR* %7389, i32 0, i32 5
  %7391 = getelementptr inbounds %struct.Reg, %struct.Reg* %7390, i32 0, i32 0
  %RCX.i678 = bitcast %union.anon* %7391 to i64*
  %7392 = load i64, i64* %RCX.i678
  %7393 = add i64 %7392, 12099168
  %7394 = load i64, i64* %PC.i676
  %7395 = add i64 %7394, 8
  store i64 %7395, i64* %PC.i676
  %7396 = inttoptr i64 %7393 to i8*
  %7397 = load i8, i8* %7396
  %7398 = zext i8 %7397 to i64
  store i64 %7398, i64* %RAX.i677, align 8
  store %struct.Memory* %loadMem_4165c2, %struct.Memory** %MEMORY
  %loadMem_4165ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %7399 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7400 = getelementptr inbounds %struct.GPR, %struct.GPR* %7399, i32 0, i32 33
  %7401 = getelementptr inbounds %struct.Reg, %struct.Reg* %7400, i32 0, i32 0
  %PC.i674 = bitcast %union.anon* %7401 to i64*
  %7402 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7403 = getelementptr inbounds %struct.GPR, %struct.GPR* %7402, i32 0, i32 1
  %7404 = getelementptr inbounds %struct.Reg, %struct.Reg* %7403, i32 0, i32 0
  %EAX.i675 = bitcast %union.anon* %7404 to i32*
  %7405 = load i32, i32* %EAX.i675
  %7406 = zext i32 %7405 to i64
  %7407 = load i64, i64* %PC.i674
  %7408 = add i64 %7407, 3
  store i64 %7408, i64* %PC.i674
  %7409 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7409, align 1
  %7410 = and i32 %7405, 255
  %7411 = call i32 @llvm.ctpop.i32(i32 %7410)
  %7412 = trunc i32 %7411 to i8
  %7413 = and i8 %7412, 1
  %7414 = xor i8 %7413, 1
  %7415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7414, i8* %7415, align 1
  %7416 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %7416, align 1
  %7417 = icmp eq i32 %7405, 0
  %7418 = zext i1 %7417 to i8
  %7419 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7418, i8* %7419, align 1
  %7420 = lshr i32 %7405, 31
  %7421 = trunc i32 %7420 to i8
  %7422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7421, i8* %7422, align 1
  %7423 = lshr i32 %7405, 31
  %7424 = xor i32 %7420, %7423
  %7425 = add i32 %7424, %7423
  %7426 = icmp eq i32 %7425, 2
  %7427 = zext i1 %7426 to i8
  %7428 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7427, i8* %7428, align 1
  store %struct.Memory* %loadMem_4165ca, %struct.Memory** %MEMORY
  %loadMem_4165cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7430 = getelementptr inbounds %struct.GPR, %struct.GPR* %7429, i32 0, i32 33
  %7431 = getelementptr inbounds %struct.Reg, %struct.Reg* %7430, i32 0, i32 0
  %PC.i673 = bitcast %union.anon* %7431 to i64*
  %7432 = load i64, i64* %PC.i673
  %7433 = add i64 %7432, 22
  %7434 = load i64, i64* %PC.i673
  %7435 = add i64 %7434, 6
  %7436 = load i64, i64* %PC.i673
  %7437 = add i64 %7436, 6
  store i64 %7437, i64* %PC.i673
  %7438 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7439 = load i8, i8* %7438, align 1
  %7440 = icmp eq i8 %7439, 0
  %7441 = zext i1 %7440 to i8
  store i8 %7441, i8* %BRANCH_TAKEN, align 1
  %7442 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7443 = select i1 %7440, i64 %7433, i64 %7435
  store i64 %7443, i64* %7442, align 8
  store %struct.Memory* %loadMem_4165cd, %struct.Memory** %MEMORY
  %loadBr_4165cd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4165cd = icmp eq i8 %loadBr_4165cd, 1
  br i1 %cmpBr_4165cd, label %block_.L_4165e3, label %block_4165d3

block_4165d3:                                     ; preds = %block_.L_4165b9
  %loadMem_4165d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7444 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7445 = getelementptr inbounds %struct.GPR, %struct.GPR* %7444, i32 0, i32 33
  %7446 = getelementptr inbounds %struct.Reg, %struct.Reg* %7445, i32 0, i32 0
  %PC.i670 = bitcast %union.anon* %7446 to i64*
  %7447 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7448 = getelementptr inbounds %struct.GPR, %struct.GPR* %7447, i32 0, i32 1
  %7449 = getelementptr inbounds %struct.Reg, %struct.Reg* %7448, i32 0, i32 0
  %RAX.i671 = bitcast %union.anon* %7449 to i64*
  %7450 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7451 = getelementptr inbounds %struct.GPR, %struct.GPR* %7450, i32 0, i32 15
  %7452 = getelementptr inbounds %struct.Reg, %struct.Reg* %7451, i32 0, i32 0
  %RBP.i672 = bitcast %union.anon* %7452 to i64*
  %7453 = load i64, i64* %RBP.i672
  %7454 = sub i64 %7453, 96
  %7455 = load i64, i64* %PC.i670
  %7456 = add i64 %7455, 4
  store i64 %7456, i64* %PC.i670
  %7457 = inttoptr i64 %7454 to i64*
  %7458 = load i64, i64* %7457
  store i64 %7458, i64* %RAX.i671, align 8
  store %struct.Memory* %loadMem_4165d3, %struct.Memory** %MEMORY
  %loadMem_4165d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7459 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7460 = getelementptr inbounds %struct.GPR, %struct.GPR* %7459, i32 0, i32 33
  %7461 = getelementptr inbounds %struct.Reg, %struct.Reg* %7460, i32 0, i32 0
  %PC.i667 = bitcast %union.anon* %7461 to i64*
  %7462 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7463 = getelementptr inbounds %struct.GPR, %struct.GPR* %7462, i32 0, i32 1
  %7464 = getelementptr inbounds %struct.Reg, %struct.Reg* %7463, i32 0, i32 0
  %RAX.i668 = bitcast %union.anon* %7464 to i64*
  %7465 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7466 = getelementptr inbounds %struct.GPR, %struct.GPR* %7465, i32 0, i32 5
  %7467 = getelementptr inbounds %struct.Reg, %struct.Reg* %7466, i32 0, i32 0
  %RCX.i669 = bitcast %union.anon* %7467 to i64*
  %7468 = load i64, i64* %RAX.i668
  %7469 = load i64, i64* %PC.i667
  %7470 = add i64 %7469, 2
  store i64 %7470, i64* %PC.i667
  %7471 = inttoptr i64 %7468 to i32*
  %7472 = load i32, i32* %7471
  %7473 = zext i32 %7472 to i64
  store i64 %7473, i64* %RCX.i669, align 8
  store %struct.Memory* %loadMem_4165d7, %struct.Memory** %MEMORY
  %loadMem_4165d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7474 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7475 = getelementptr inbounds %struct.GPR, %struct.GPR* %7474, i32 0, i32 33
  %7476 = getelementptr inbounds %struct.Reg, %struct.Reg* %7475, i32 0, i32 0
  %PC.i665 = bitcast %union.anon* %7476 to i64*
  %7477 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7478 = getelementptr inbounds %struct.GPR, %struct.GPR* %7477, i32 0, i32 5
  %7479 = getelementptr inbounds %struct.Reg, %struct.Reg* %7478, i32 0, i32 0
  %RCX.i666 = bitcast %union.anon* %7479 to i64*
  %7480 = load i64, i64* %RCX.i666
  %7481 = load i64, i64* %PC.i665
  %7482 = add i64 %7481, 3
  store i64 %7482, i64* %PC.i665
  %7483 = trunc i64 %7480 to i32
  %7484 = add i32 1, %7483
  %7485 = zext i32 %7484 to i64
  store i64 %7485, i64* %RCX.i666, align 8
  %7486 = icmp ult i32 %7484, %7483
  %7487 = icmp ult i32 %7484, 1
  %7488 = or i1 %7486, %7487
  %7489 = zext i1 %7488 to i8
  %7490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7489, i8* %7490, align 1
  %7491 = and i32 %7484, 255
  %7492 = call i32 @llvm.ctpop.i32(i32 %7491)
  %7493 = trunc i32 %7492 to i8
  %7494 = and i8 %7493, 1
  %7495 = xor i8 %7494, 1
  %7496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7495, i8* %7496, align 1
  %7497 = xor i64 1, %7480
  %7498 = trunc i64 %7497 to i32
  %7499 = xor i32 %7498, %7484
  %7500 = lshr i32 %7499, 4
  %7501 = trunc i32 %7500 to i8
  %7502 = and i8 %7501, 1
  %7503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7502, i8* %7503, align 1
  %7504 = icmp eq i32 %7484, 0
  %7505 = zext i1 %7504 to i8
  %7506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7505, i8* %7506, align 1
  %7507 = lshr i32 %7484, 31
  %7508 = trunc i32 %7507 to i8
  %7509 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7508, i8* %7509, align 1
  %7510 = lshr i32 %7483, 31
  %7511 = xor i32 %7507, %7510
  %7512 = add i32 %7511, %7507
  %7513 = icmp eq i32 %7512, 2
  %7514 = zext i1 %7513 to i8
  %7515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7514, i8* %7515, align 1
  store %struct.Memory* %loadMem_4165d9, %struct.Memory** %MEMORY
  %loadMem_4165dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %7516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7517 = getelementptr inbounds %struct.GPR, %struct.GPR* %7516, i32 0, i32 33
  %7518 = getelementptr inbounds %struct.Reg, %struct.Reg* %7517, i32 0, i32 0
  %PC.i662 = bitcast %union.anon* %7518 to i64*
  %7519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7520 = getelementptr inbounds %struct.GPR, %struct.GPR* %7519, i32 0, i32 5
  %7521 = getelementptr inbounds %struct.Reg, %struct.Reg* %7520, i32 0, i32 0
  %ECX.i663 = bitcast %union.anon* %7521 to i32*
  %7522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7523 = getelementptr inbounds %struct.GPR, %struct.GPR* %7522, i32 0, i32 1
  %7524 = getelementptr inbounds %struct.Reg, %struct.Reg* %7523, i32 0, i32 0
  %RAX.i664 = bitcast %union.anon* %7524 to i64*
  %7525 = load i64, i64* %RAX.i664
  %7526 = load i32, i32* %ECX.i663
  %7527 = zext i32 %7526 to i64
  %7528 = load i64, i64* %PC.i662
  %7529 = add i64 %7528, 2
  store i64 %7529, i64* %PC.i662
  %7530 = inttoptr i64 %7525 to i32*
  store i32 %7526, i32* %7530
  store %struct.Memory* %loadMem_4165dc, %struct.Memory** %MEMORY
  %loadMem_4165de = load %struct.Memory*, %struct.Memory** %MEMORY
  %7531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7532 = getelementptr inbounds %struct.GPR, %struct.GPR* %7531, i32 0, i32 33
  %7533 = getelementptr inbounds %struct.Reg, %struct.Reg* %7532, i32 0, i32 0
  %PC.i661 = bitcast %union.anon* %7533 to i64*
  %7534 = load i64, i64* %PC.i661
  %7535 = add i64 %7534, 629
  %7536 = load i64, i64* %PC.i661
  %7537 = add i64 %7536, 5
  store i64 %7537, i64* %PC.i661
  %7538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7535, i64* %7538, align 8
  store %struct.Memory* %loadMem_4165de, %struct.Memory** %MEMORY
  br label %block_.L_416853

block_.L_4165e3:                                  ; preds = %block_.L_4165b9
  %loadMem_4165e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7539 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7540 = getelementptr inbounds %struct.GPR, %struct.GPR* %7539, i32 0, i32 33
  %7541 = getelementptr inbounds %struct.Reg, %struct.Reg* %7540, i32 0, i32 0
  %PC.i658 = bitcast %union.anon* %7541 to i64*
  %7542 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7543 = getelementptr inbounds %struct.GPR, %struct.GPR* %7542, i32 0, i32 1
  %7544 = getelementptr inbounds %struct.Reg, %struct.Reg* %7543, i32 0, i32 0
  %RAX.i659 = bitcast %union.anon* %7544 to i64*
  %7545 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7546 = getelementptr inbounds %struct.GPR, %struct.GPR* %7545, i32 0, i32 15
  %7547 = getelementptr inbounds %struct.Reg, %struct.Reg* %7546, i32 0, i32 0
  %RBP.i660 = bitcast %union.anon* %7547 to i64*
  %7548 = load i64, i64* %RBP.i660
  %7549 = sub i64 %7548, 20
  %7550 = load i64, i64* %PC.i658
  %7551 = add i64 %7550, 3
  store i64 %7551, i64* %PC.i658
  %7552 = inttoptr i64 %7549 to i32*
  %7553 = load i32, i32* %7552
  %7554 = zext i32 %7553 to i64
  store i64 %7554, i64* %RAX.i659, align 8
  store %struct.Memory* %loadMem_4165e3, %struct.Memory** %MEMORY
  %loadMem_4165e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7556 = getelementptr inbounds %struct.GPR, %struct.GPR* %7555, i32 0, i32 33
  %7557 = getelementptr inbounds %struct.Reg, %struct.Reg* %7556, i32 0, i32 0
  %PC.i656 = bitcast %union.anon* %7557 to i64*
  %7558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7559 = getelementptr inbounds %struct.GPR, %struct.GPR* %7558, i32 0, i32 1
  %7560 = getelementptr inbounds %struct.Reg, %struct.Reg* %7559, i32 0, i32 0
  %RAX.i657 = bitcast %union.anon* %7560 to i64*
  %7561 = load i64, i64* %RAX.i657
  %7562 = load i64, i64* %PC.i656
  %7563 = add i64 %7562, 3
  store i64 %7563, i64* %PC.i656
  %7564 = trunc i64 %7561 to i32
  %7565 = sub i32 %7564, 20
  %7566 = zext i32 %7565 to i64
  store i64 %7566, i64* %RAX.i657, align 8
  %7567 = icmp ult i32 %7564, 20
  %7568 = zext i1 %7567 to i8
  %7569 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7568, i8* %7569, align 1
  %7570 = and i32 %7565, 255
  %7571 = call i32 @llvm.ctpop.i32(i32 %7570)
  %7572 = trunc i32 %7571 to i8
  %7573 = and i8 %7572, 1
  %7574 = xor i8 %7573, 1
  %7575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7574, i8* %7575, align 1
  %7576 = xor i64 20, %7561
  %7577 = trunc i64 %7576 to i32
  %7578 = xor i32 %7577, %7565
  %7579 = lshr i32 %7578, 4
  %7580 = trunc i32 %7579 to i8
  %7581 = and i8 %7580, 1
  %7582 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7581, i8* %7582, align 1
  %7583 = icmp eq i32 %7565, 0
  %7584 = zext i1 %7583 to i8
  %7585 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7584, i8* %7585, align 1
  %7586 = lshr i32 %7565, 31
  %7587 = trunc i32 %7586 to i8
  %7588 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7587, i8* %7588, align 1
  %7589 = lshr i32 %7564, 31
  %7590 = xor i32 %7586, %7589
  %7591 = add i32 %7590, %7589
  %7592 = icmp eq i32 %7591, 2
  %7593 = zext i1 %7592 to i8
  %7594 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7593, i8* %7594, align 1
  store %struct.Memory* %loadMem_4165e6, %struct.Memory** %MEMORY
  %loadMem_4165e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7595 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7596 = getelementptr inbounds %struct.GPR, %struct.GPR* %7595, i32 0, i32 33
  %7597 = getelementptr inbounds %struct.Reg, %struct.Reg* %7596, i32 0, i32 0
  %PC.i653 = bitcast %union.anon* %7597 to i64*
  %7598 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7599 = getelementptr inbounds %struct.GPR, %struct.GPR* %7598, i32 0, i32 1
  %7600 = getelementptr inbounds %struct.Reg, %struct.Reg* %7599, i32 0, i32 0
  %EAX.i654 = bitcast %union.anon* %7600 to i32*
  %7601 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7602 = getelementptr inbounds %struct.GPR, %struct.GPR* %7601, i32 0, i32 5
  %7603 = getelementptr inbounds %struct.Reg, %struct.Reg* %7602, i32 0, i32 0
  %RCX.i655 = bitcast %union.anon* %7603 to i64*
  %7604 = load i32, i32* %EAX.i654
  %7605 = zext i32 %7604 to i64
  %7606 = load i64, i64* %PC.i653
  %7607 = add i64 %7606, 3
  store i64 %7607, i64* %PC.i653
  %7608 = shl i64 %7605, 32
  %7609 = ashr exact i64 %7608, 32
  store i64 %7609, i64* %RCX.i655, align 8
  store %struct.Memory* %loadMem_4165e9, %struct.Memory** %MEMORY
  %loadMem_4165ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %7610 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7611 = getelementptr inbounds %struct.GPR, %struct.GPR* %7610, i32 0, i32 33
  %7612 = getelementptr inbounds %struct.Reg, %struct.Reg* %7611, i32 0, i32 0
  %PC.i650 = bitcast %union.anon* %7612 to i64*
  %7613 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7614 = getelementptr inbounds %struct.GPR, %struct.GPR* %7613, i32 0, i32 1
  %7615 = getelementptr inbounds %struct.Reg, %struct.Reg* %7614, i32 0, i32 0
  %RAX.i651 = bitcast %union.anon* %7615 to i64*
  %7616 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7617 = getelementptr inbounds %struct.GPR, %struct.GPR* %7616, i32 0, i32 5
  %7618 = getelementptr inbounds %struct.Reg, %struct.Reg* %7617, i32 0, i32 0
  %RCX.i652 = bitcast %union.anon* %7618 to i64*
  %7619 = load i64, i64* %RCX.i652
  %7620 = mul i64 %7619, 4
  %7621 = add i64 %7620, 11187184
  %7622 = load i64, i64* %PC.i650
  %7623 = add i64 %7622, 7
  store i64 %7623, i64* %PC.i650
  %7624 = inttoptr i64 %7621 to i32*
  %7625 = load i32, i32* %7624
  %7626 = zext i32 %7625 to i64
  store i64 %7626, i64* %RAX.i651, align 8
  store %struct.Memory* %loadMem_4165ec, %struct.Memory** %MEMORY
  %loadMem_4165f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7628 = getelementptr inbounds %struct.GPR, %struct.GPR* %7627, i32 0, i32 33
  %7629 = getelementptr inbounds %struct.Reg, %struct.Reg* %7628, i32 0, i32 0
  %PC.i647 = bitcast %union.anon* %7629 to i64*
  %7630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7631 = getelementptr inbounds %struct.GPR, %struct.GPR* %7630, i32 0, i32 1
  %7632 = getelementptr inbounds %struct.Reg, %struct.Reg* %7631, i32 0, i32 0
  %EAX.i648 = bitcast %union.anon* %7632 to i32*
  %7633 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7634 = getelementptr inbounds %struct.GPR, %struct.GPR* %7633, i32 0, i32 15
  %7635 = getelementptr inbounds %struct.Reg, %struct.Reg* %7634, i32 0, i32 0
  %RBP.i649 = bitcast %union.anon* %7635 to i64*
  %7636 = load i64, i64* %RBP.i649
  %7637 = sub i64 %7636, 132
  %7638 = load i32, i32* %EAX.i648
  %7639 = zext i32 %7638 to i64
  %7640 = load i64, i64* %PC.i647
  %7641 = add i64 %7640, 6
  store i64 %7641, i64* %PC.i647
  %7642 = inttoptr i64 %7637 to i32*
  store i32 %7638, i32* %7642
  store %struct.Memory* %loadMem_4165f3, %struct.Memory** %MEMORY
  %loadMem_4165f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7644 = getelementptr inbounds %struct.GPR, %struct.GPR* %7643, i32 0, i32 33
  %7645 = getelementptr inbounds %struct.Reg, %struct.Reg* %7644, i32 0, i32 0
  %PC.i644 = bitcast %union.anon* %7645 to i64*
  %7646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7647 = getelementptr inbounds %struct.GPR, %struct.GPR* %7646, i32 0, i32 5
  %7648 = getelementptr inbounds %struct.Reg, %struct.Reg* %7647, i32 0, i32 0
  %RCX.i645 = bitcast %union.anon* %7648 to i64*
  %7649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7650 = getelementptr inbounds %struct.GPR, %struct.GPR* %7649, i32 0, i32 15
  %7651 = getelementptr inbounds %struct.Reg, %struct.Reg* %7650, i32 0, i32 0
  %RBP.i646 = bitcast %union.anon* %7651 to i64*
  %7652 = load i64, i64* %RBP.i646
  %7653 = sub i64 %7652, 28
  %7654 = load i64, i64* %PC.i644
  %7655 = add i64 %7654, 4
  store i64 %7655, i64* %PC.i644
  %7656 = inttoptr i64 %7653 to i32*
  %7657 = load i32, i32* %7656
  %7658 = sext i32 %7657 to i64
  store i64 %7658, i64* %RCX.i645, align 8
  store %struct.Memory* %loadMem_4165f9, %struct.Memory** %MEMORY
  %loadMem_4165fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %7659 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7660 = getelementptr inbounds %struct.GPR, %struct.GPR* %7659, i32 0, i32 33
  %7661 = getelementptr inbounds %struct.Reg, %struct.Reg* %7660, i32 0, i32 0
  %PC.i641 = bitcast %union.anon* %7661 to i64*
  %7662 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7663 = getelementptr inbounds %struct.GPR, %struct.GPR* %7662, i32 0, i32 1
  %7664 = getelementptr inbounds %struct.Reg, %struct.Reg* %7663, i32 0, i32 0
  %RAX.i642 = bitcast %union.anon* %7664 to i64*
  %7665 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7666 = getelementptr inbounds %struct.GPR, %struct.GPR* %7665, i32 0, i32 5
  %7667 = getelementptr inbounds %struct.Reg, %struct.Reg* %7666, i32 0, i32 0
  %RCX.i643 = bitcast %union.anon* %7667 to i64*
  %7668 = load i64, i64* %RCX.i643
  %7669 = mul i64 %7668, 4
  %7670 = add i64 %7669, 11187184
  %7671 = load i64, i64* %PC.i641
  %7672 = add i64 %7671, 7
  store i64 %7672, i64* %PC.i641
  %7673 = inttoptr i64 %7670 to i32*
  %7674 = load i32, i32* %7673
  %7675 = zext i32 %7674 to i64
  store i64 %7675, i64* %RAX.i642, align 8
  store %struct.Memory* %loadMem_4165fd, %struct.Memory** %MEMORY
  %loadMem_416604 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7676 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7677 = getelementptr inbounds %struct.GPR, %struct.GPR* %7676, i32 0, i32 33
  %7678 = getelementptr inbounds %struct.Reg, %struct.Reg* %7677, i32 0, i32 0
  %PC.i638 = bitcast %union.anon* %7678 to i64*
  %7679 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7680 = getelementptr inbounds %struct.GPR, %struct.GPR* %7679, i32 0, i32 1
  %7681 = getelementptr inbounds %struct.Reg, %struct.Reg* %7680, i32 0, i32 0
  %EAX.i639 = bitcast %union.anon* %7681 to i32*
  %7682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7683 = getelementptr inbounds %struct.GPR, %struct.GPR* %7682, i32 0, i32 15
  %7684 = getelementptr inbounds %struct.Reg, %struct.Reg* %7683, i32 0, i32 0
  %RBP.i640 = bitcast %union.anon* %7684 to i64*
  %7685 = load i32, i32* %EAX.i639
  %7686 = zext i32 %7685 to i64
  %7687 = load i64, i64* %RBP.i640
  %7688 = sub i64 %7687, 132
  %7689 = load i64, i64* %PC.i638
  %7690 = add i64 %7689, 6
  store i64 %7690, i64* %PC.i638
  %7691 = inttoptr i64 %7688 to i32*
  %7692 = load i32, i32* %7691
  %7693 = sub i32 %7685, %7692
  %7694 = icmp ult i32 %7685, %7692
  %7695 = zext i1 %7694 to i8
  %7696 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7695, i8* %7696, align 1
  %7697 = and i32 %7693, 255
  %7698 = call i32 @llvm.ctpop.i32(i32 %7697)
  %7699 = trunc i32 %7698 to i8
  %7700 = and i8 %7699, 1
  %7701 = xor i8 %7700, 1
  %7702 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7701, i8* %7702, align 1
  %7703 = xor i32 %7692, %7685
  %7704 = xor i32 %7703, %7693
  %7705 = lshr i32 %7704, 4
  %7706 = trunc i32 %7705 to i8
  %7707 = and i8 %7706, 1
  %7708 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7707, i8* %7708, align 1
  %7709 = icmp eq i32 %7693, 0
  %7710 = zext i1 %7709 to i8
  %7711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7710, i8* %7711, align 1
  %7712 = lshr i32 %7693, 31
  %7713 = trunc i32 %7712 to i8
  %7714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7713, i8* %7714, align 1
  %7715 = lshr i32 %7685, 31
  %7716 = lshr i32 %7692, 31
  %7717 = xor i32 %7716, %7715
  %7718 = xor i32 %7712, %7715
  %7719 = add i32 %7718, %7717
  %7720 = icmp eq i32 %7719, 2
  %7721 = zext i1 %7720 to i8
  %7722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7721, i8* %7722, align 1
  store %struct.Memory* %loadMem_416604, %struct.Memory** %MEMORY
  %loadMem_41660a = load %struct.Memory*, %struct.Memory** %MEMORY
  %7723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7724 = getelementptr inbounds %struct.GPR, %struct.GPR* %7723, i32 0, i32 33
  %7725 = getelementptr inbounds %struct.Reg, %struct.Reg* %7724, i32 0, i32 0
  %PC.i637 = bitcast %union.anon* %7725 to i64*
  %7726 = load i64, i64* %PC.i637
  %7727 = add i64 %7726, 17
  %7728 = load i64, i64* %PC.i637
  %7729 = add i64 %7728, 6
  %7730 = load i64, i64* %PC.i637
  %7731 = add i64 %7730, 6
  store i64 %7731, i64* %PC.i637
  %7732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7733 = load i8, i8* %7732, align 1
  %7734 = icmp eq i8 %7733, 0
  %7735 = zext i1 %7734 to i8
  store i8 %7735, i8* %BRANCH_TAKEN, align 1
  %7736 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7737 = select i1 %7734, i64 %7727, i64 %7729
  store i64 %7737, i64* %7736, align 8
  store %struct.Memory* %loadMem_41660a, %struct.Memory** %MEMORY
  %loadBr_41660a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41660a = icmp eq i8 %loadBr_41660a, 1
  br i1 %cmpBr_41660a, label %block_.L_41661b, label %block_416610

block_416610:                                     ; preds = %block_.L_4165e3
  %loadMem_416610 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7739 = getelementptr inbounds %struct.GPR, %struct.GPR* %7738, i32 0, i32 33
  %7740 = getelementptr inbounds %struct.Reg, %struct.Reg* %7739, i32 0, i32 0
  %PC.i634 = bitcast %union.anon* %7740 to i64*
  %7741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7742 = getelementptr inbounds %struct.GPR, %struct.GPR* %7741, i32 0, i32 1
  %7743 = getelementptr inbounds %struct.Reg, %struct.Reg* %7742, i32 0, i32 0
  %RAX.i635 = bitcast %union.anon* %7743 to i64*
  %7744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7745 = getelementptr inbounds %struct.GPR, %struct.GPR* %7744, i32 0, i32 15
  %7746 = getelementptr inbounds %struct.Reg, %struct.Reg* %7745, i32 0, i32 0
  %RBP.i636 = bitcast %union.anon* %7746 to i64*
  %7747 = load i64, i64* %RBP.i636
  %7748 = sub i64 %7747, 48
  %7749 = load i64, i64* %PC.i634
  %7750 = add i64 %7749, 4
  store i64 %7750, i64* %PC.i634
  %7751 = inttoptr i64 %7748 to i64*
  %7752 = load i64, i64* %7751
  store i64 %7752, i64* %RAX.i635, align 8
  store %struct.Memory* %loadMem_416610, %struct.Memory** %MEMORY
  %loadMem_416614 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7753 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7754 = getelementptr inbounds %struct.GPR, %struct.GPR* %7753, i32 0, i32 33
  %7755 = getelementptr inbounds %struct.Reg, %struct.Reg* %7754, i32 0, i32 0
  %PC.i631 = bitcast %union.anon* %7755 to i64*
  %7756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7757 = getelementptr inbounds %struct.GPR, %struct.GPR* %7756, i32 0, i32 1
  %7758 = getelementptr inbounds %struct.Reg, %struct.Reg* %7757, i32 0, i32 0
  %RAX.i632 = bitcast %union.anon* %7758 to i64*
  %7759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7760 = getelementptr inbounds %struct.GPR, %struct.GPR* %7759, i32 0, i32 5
  %7761 = getelementptr inbounds %struct.Reg, %struct.Reg* %7760, i32 0, i32 0
  %RCX.i633 = bitcast %union.anon* %7761 to i64*
  %7762 = load i64, i64* %RAX.i632
  %7763 = load i64, i64* %PC.i631
  %7764 = add i64 %7763, 2
  store i64 %7764, i64* %PC.i631
  %7765 = inttoptr i64 %7762 to i32*
  %7766 = load i32, i32* %7765
  %7767 = zext i32 %7766 to i64
  store i64 %7767, i64* %RCX.i633, align 8
  store %struct.Memory* %loadMem_416614, %struct.Memory** %MEMORY
  %loadMem_416616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7768 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7769 = getelementptr inbounds %struct.GPR, %struct.GPR* %7768, i32 0, i32 33
  %7770 = getelementptr inbounds %struct.Reg, %struct.Reg* %7769, i32 0, i32 0
  %PC.i629 = bitcast %union.anon* %7770 to i64*
  %7771 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7772 = getelementptr inbounds %struct.GPR, %struct.GPR* %7771, i32 0, i32 5
  %7773 = getelementptr inbounds %struct.Reg, %struct.Reg* %7772, i32 0, i32 0
  %RCX.i630 = bitcast %union.anon* %7773 to i64*
  %7774 = load i64, i64* %RCX.i630
  %7775 = load i64, i64* %PC.i629
  %7776 = add i64 %7775, 3
  store i64 %7776, i64* %PC.i629
  %7777 = trunc i64 %7774 to i32
  %7778 = add i32 1, %7777
  %7779 = zext i32 %7778 to i64
  store i64 %7779, i64* %RCX.i630, align 8
  %7780 = icmp ult i32 %7778, %7777
  %7781 = icmp ult i32 %7778, 1
  %7782 = or i1 %7780, %7781
  %7783 = zext i1 %7782 to i8
  %7784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7783, i8* %7784, align 1
  %7785 = and i32 %7778, 255
  %7786 = call i32 @llvm.ctpop.i32(i32 %7785)
  %7787 = trunc i32 %7786 to i8
  %7788 = and i8 %7787, 1
  %7789 = xor i8 %7788, 1
  %7790 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7789, i8* %7790, align 1
  %7791 = xor i64 1, %7774
  %7792 = trunc i64 %7791 to i32
  %7793 = xor i32 %7792, %7778
  %7794 = lshr i32 %7793, 4
  %7795 = trunc i32 %7794 to i8
  %7796 = and i8 %7795, 1
  %7797 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7796, i8* %7797, align 1
  %7798 = icmp eq i32 %7778, 0
  %7799 = zext i1 %7798 to i8
  %7800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7799, i8* %7800, align 1
  %7801 = lshr i32 %7778, 31
  %7802 = trunc i32 %7801 to i8
  %7803 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7802, i8* %7803, align 1
  %7804 = lshr i32 %7777, 31
  %7805 = xor i32 %7801, %7804
  %7806 = add i32 %7805, %7801
  %7807 = icmp eq i32 %7806, 2
  %7808 = zext i1 %7807 to i8
  %7809 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7808, i8* %7809, align 1
  store %struct.Memory* %loadMem_416616, %struct.Memory** %MEMORY
  %loadMem_416619 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7811 = getelementptr inbounds %struct.GPR, %struct.GPR* %7810, i32 0, i32 33
  %7812 = getelementptr inbounds %struct.Reg, %struct.Reg* %7811, i32 0, i32 0
  %PC.i626 = bitcast %union.anon* %7812 to i64*
  %7813 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7814 = getelementptr inbounds %struct.GPR, %struct.GPR* %7813, i32 0, i32 5
  %7815 = getelementptr inbounds %struct.Reg, %struct.Reg* %7814, i32 0, i32 0
  %ECX.i627 = bitcast %union.anon* %7815 to i32*
  %7816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7817 = getelementptr inbounds %struct.GPR, %struct.GPR* %7816, i32 0, i32 1
  %7818 = getelementptr inbounds %struct.Reg, %struct.Reg* %7817, i32 0, i32 0
  %RAX.i628 = bitcast %union.anon* %7818 to i64*
  %7819 = load i64, i64* %RAX.i628
  %7820 = load i32, i32* %ECX.i627
  %7821 = zext i32 %7820 to i64
  %7822 = load i64, i64* %PC.i626
  %7823 = add i64 %7822, 2
  store i64 %7823, i64* %PC.i626
  %7824 = inttoptr i64 %7819 to i32*
  store i32 %7820, i32* %7824
  store %struct.Memory* %loadMem_416619, %struct.Memory** %MEMORY
  br label %block_.L_41661b

block_.L_41661b:                                  ; preds = %block_416610, %block_.L_4165e3
  %loadMem_41661b = load %struct.Memory*, %struct.Memory** %MEMORY
  %7825 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7826 = getelementptr inbounds %struct.GPR, %struct.GPR* %7825, i32 0, i32 33
  %7827 = getelementptr inbounds %struct.Reg, %struct.Reg* %7826, i32 0, i32 0
  %PC.i623 = bitcast %union.anon* %7827 to i64*
  %7828 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7829 = getelementptr inbounds %struct.GPR, %struct.GPR* %7828, i32 0, i32 1
  %7830 = getelementptr inbounds %struct.Reg, %struct.Reg* %7829, i32 0, i32 0
  %RAX.i624 = bitcast %union.anon* %7830 to i64*
  %7831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7832 = getelementptr inbounds %struct.GPR, %struct.GPR* %7831, i32 0, i32 15
  %7833 = getelementptr inbounds %struct.Reg, %struct.Reg* %7832, i32 0, i32 0
  %RBP.i625 = bitcast %union.anon* %7833 to i64*
  %7834 = load i64, i64* %RBP.i625
  %7835 = sub i64 %7834, 20
  %7836 = load i64, i64* %PC.i623
  %7837 = add i64 %7836, 3
  store i64 %7837, i64* %PC.i623
  %7838 = inttoptr i64 %7835 to i32*
  %7839 = load i32, i32* %7838
  %7840 = zext i32 %7839 to i64
  store i64 %7840, i64* %RAX.i624, align 8
  store %struct.Memory* %loadMem_41661b, %struct.Memory** %MEMORY
  %loadMem_41661e = load %struct.Memory*, %struct.Memory** %MEMORY
  %7841 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7842 = getelementptr inbounds %struct.GPR, %struct.GPR* %7841, i32 0, i32 33
  %7843 = getelementptr inbounds %struct.Reg, %struct.Reg* %7842, i32 0, i32 0
  %PC.i621 = bitcast %union.anon* %7843 to i64*
  %7844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7845 = getelementptr inbounds %struct.GPR, %struct.GPR* %7844, i32 0, i32 1
  %7846 = getelementptr inbounds %struct.Reg, %struct.Reg* %7845, i32 0, i32 0
  %RAX.i622 = bitcast %union.anon* %7846 to i64*
  %7847 = load i64, i64* %RAX.i622
  %7848 = load i64, i64* %PC.i621
  %7849 = add i64 %7848, 3
  store i64 %7849, i64* %PC.i621
  %7850 = trunc i64 %7847 to i32
  %7851 = sub i32 %7850, 20
  %7852 = zext i32 %7851 to i64
  store i64 %7852, i64* %RAX.i622, align 8
  %7853 = icmp ult i32 %7850, 20
  %7854 = zext i1 %7853 to i8
  %7855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7854, i8* %7855, align 1
  %7856 = and i32 %7851, 255
  %7857 = call i32 @llvm.ctpop.i32(i32 %7856)
  %7858 = trunc i32 %7857 to i8
  %7859 = and i8 %7858, 1
  %7860 = xor i8 %7859, 1
  %7861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7860, i8* %7861, align 1
  %7862 = xor i64 20, %7847
  %7863 = trunc i64 %7862 to i32
  %7864 = xor i32 %7863, %7851
  %7865 = lshr i32 %7864, 4
  %7866 = trunc i32 %7865 to i8
  %7867 = and i8 %7866, 1
  %7868 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7867, i8* %7868, align 1
  %7869 = icmp eq i32 %7851, 0
  %7870 = zext i1 %7869 to i8
  %7871 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7870, i8* %7871, align 1
  %7872 = lshr i32 %7851, 31
  %7873 = trunc i32 %7872 to i8
  %7874 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7873, i8* %7874, align 1
  %7875 = lshr i32 %7850, 31
  %7876 = xor i32 %7872, %7875
  %7877 = add i32 %7876, %7875
  %7878 = icmp eq i32 %7877, 2
  %7879 = zext i1 %7878 to i8
  %7880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7879, i8* %7880, align 1
  store %struct.Memory* %loadMem_41661e, %struct.Memory** %MEMORY
  %loadMem_416621 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7881 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7882 = getelementptr inbounds %struct.GPR, %struct.GPR* %7881, i32 0, i32 33
  %7883 = getelementptr inbounds %struct.Reg, %struct.Reg* %7882, i32 0, i32 0
  %PC.i618 = bitcast %union.anon* %7883 to i64*
  %7884 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7885 = getelementptr inbounds %struct.GPR, %struct.GPR* %7884, i32 0, i32 1
  %7886 = getelementptr inbounds %struct.Reg, %struct.Reg* %7885, i32 0, i32 0
  %EAX.i619 = bitcast %union.anon* %7886 to i32*
  %7887 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7888 = getelementptr inbounds %struct.GPR, %struct.GPR* %7887, i32 0, i32 5
  %7889 = getelementptr inbounds %struct.Reg, %struct.Reg* %7888, i32 0, i32 0
  %RCX.i620 = bitcast %union.anon* %7889 to i64*
  %7890 = load i32, i32* %EAX.i619
  %7891 = zext i32 %7890 to i64
  %7892 = load i64, i64* %PC.i618
  %7893 = add i64 %7892, 3
  store i64 %7893, i64* %PC.i618
  %7894 = shl i64 %7891, 32
  %7895 = ashr exact i64 %7894, 32
  store i64 %7895, i64* %RCX.i620, align 8
  store %struct.Memory* %loadMem_416621, %struct.Memory** %MEMORY
  %loadMem_416624 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7896 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7897 = getelementptr inbounds %struct.GPR, %struct.GPR* %7896, i32 0, i32 33
  %7898 = getelementptr inbounds %struct.Reg, %struct.Reg* %7897, i32 0, i32 0
  %PC.i615 = bitcast %union.anon* %7898 to i64*
  %7899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7900 = getelementptr inbounds %struct.GPR, %struct.GPR* %7899, i32 0, i32 1
  %7901 = getelementptr inbounds %struct.Reg, %struct.Reg* %7900, i32 0, i32 0
  %RAX.i616 = bitcast %union.anon* %7901 to i64*
  %7902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7903 = getelementptr inbounds %struct.GPR, %struct.GPR* %7902, i32 0, i32 5
  %7904 = getelementptr inbounds %struct.Reg, %struct.Reg* %7903, i32 0, i32 0
  %RCX.i617 = bitcast %union.anon* %7904 to i64*
  %7905 = load i64, i64* %RCX.i617
  %7906 = add i64 %7905, 12099168
  %7907 = load i64, i64* %PC.i615
  %7908 = add i64 %7907, 8
  store i64 %7908, i64* %PC.i615
  %7909 = inttoptr i64 %7906 to i8*
  %7910 = load i8, i8* %7909
  %7911 = zext i8 %7910 to i64
  store i64 %7911, i64* %RAX.i616, align 8
  store %struct.Memory* %loadMem_416624, %struct.Memory** %MEMORY
  %loadMem_41662c = load %struct.Memory*, %struct.Memory** %MEMORY
  %7912 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7913 = getelementptr inbounds %struct.GPR, %struct.GPR* %7912, i32 0, i32 33
  %7914 = getelementptr inbounds %struct.Reg, %struct.Reg* %7913, i32 0, i32 0
  %PC.i612 = bitcast %union.anon* %7914 to i64*
  %7915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7916 = getelementptr inbounds %struct.GPR, %struct.GPR* %7915, i32 0, i32 1
  %7917 = getelementptr inbounds %struct.Reg, %struct.Reg* %7916, i32 0, i32 0
  %EAX.i613 = bitcast %union.anon* %7917 to i32*
  %7918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7919 = getelementptr inbounds %struct.GPR, %struct.GPR* %7918, i32 0, i32 15
  %7920 = getelementptr inbounds %struct.Reg, %struct.Reg* %7919, i32 0, i32 0
  %RBP.i614 = bitcast %union.anon* %7920 to i64*
  %7921 = load i32, i32* %EAX.i613
  %7922 = zext i32 %7921 to i64
  %7923 = load i64, i64* %RBP.i614
  %7924 = sub i64 %7923, 24
  %7925 = load i64, i64* %PC.i612
  %7926 = add i64 %7925, 3
  store i64 %7926, i64* %PC.i612
  %7927 = inttoptr i64 %7924 to i32*
  %7928 = load i32, i32* %7927
  %7929 = sub i32 %7921, %7928
  %7930 = icmp ult i32 %7921, %7928
  %7931 = zext i1 %7930 to i8
  %7932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %7931, i8* %7932, align 1
  %7933 = and i32 %7929, 255
  %7934 = call i32 @llvm.ctpop.i32(i32 %7933)
  %7935 = trunc i32 %7934 to i8
  %7936 = and i8 %7935, 1
  %7937 = xor i8 %7936, 1
  %7938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %7937, i8* %7938, align 1
  %7939 = xor i32 %7928, %7921
  %7940 = xor i32 %7939, %7929
  %7941 = lshr i32 %7940, 4
  %7942 = trunc i32 %7941 to i8
  %7943 = and i8 %7942, 1
  %7944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %7943, i8* %7944, align 1
  %7945 = icmp eq i32 %7929, 0
  %7946 = zext i1 %7945 to i8
  %7947 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %7946, i8* %7947, align 1
  %7948 = lshr i32 %7929, 31
  %7949 = trunc i32 %7948 to i8
  %7950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %7949, i8* %7950, align 1
  %7951 = lshr i32 %7921, 31
  %7952 = lshr i32 %7928, 31
  %7953 = xor i32 %7952, %7951
  %7954 = xor i32 %7948, %7951
  %7955 = add i32 %7954, %7953
  %7956 = icmp eq i32 %7955, 2
  %7957 = zext i1 %7956 to i8
  %7958 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %7957, i8* %7958, align 1
  store %struct.Memory* %loadMem_41662c, %struct.Memory** %MEMORY
  %loadMem_41662f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7959 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7960 = getelementptr inbounds %struct.GPR, %struct.GPR* %7959, i32 0, i32 33
  %7961 = getelementptr inbounds %struct.Reg, %struct.Reg* %7960, i32 0, i32 0
  %PC.i611 = bitcast %union.anon* %7961 to i64*
  %7962 = load i64, i64* %PC.i611
  %7963 = add i64 %7962, 97
  %7964 = load i64, i64* %PC.i611
  %7965 = add i64 %7964, 6
  %7966 = load i64, i64* %PC.i611
  %7967 = add i64 %7966, 6
  store i64 %7967, i64* %PC.i611
  %7968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %7969 = load i8, i8* %7968, align 1
  %7970 = icmp eq i8 %7969, 0
  %7971 = zext i1 %7970 to i8
  store i8 %7971, i8* %BRANCH_TAKEN, align 1
  %7972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %7973 = select i1 %7970, i64 %7963, i64 %7965
  store i64 %7973, i64* %7972, align 8
  store %struct.Memory* %loadMem_41662f, %struct.Memory** %MEMORY
  %loadBr_41662f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41662f = icmp eq i8 %loadBr_41662f, 1
  br i1 %cmpBr_41662f, label %block_.L_416690, label %block_416635

block_416635:                                     ; preds = %block_.L_41661b
  %loadMem_416635 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7974 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7975 = getelementptr inbounds %struct.GPR, %struct.GPR* %7974, i32 0, i32 33
  %7976 = getelementptr inbounds %struct.Reg, %struct.Reg* %7975, i32 0, i32 0
  %PC.i609 = bitcast %union.anon* %7976 to i64*
  %7977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7978 = getelementptr inbounds %struct.GPR, %struct.GPR* %7977, i32 0, i32 1
  %7979 = getelementptr inbounds %struct.Reg, %struct.Reg* %7978, i32 0, i32 0
  %RAX.i610 = bitcast %union.anon* %7979 to i64*
  %7980 = load i64, i64* %PC.i609
  %7981 = add i64 %7980, 10
  store i64 %7981, i64* %PC.i609
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i610, align 8
  store %struct.Memory* %loadMem_416635, %struct.Memory** %MEMORY
  %loadMem_41663f = load %struct.Memory*, %struct.Memory** %MEMORY
  %7982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7983 = getelementptr inbounds %struct.GPR, %struct.GPR* %7982, i32 0, i32 33
  %7984 = getelementptr inbounds %struct.Reg, %struct.Reg* %7983, i32 0, i32 0
  %PC.i606 = bitcast %union.anon* %7984 to i64*
  %7985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7986 = getelementptr inbounds %struct.GPR, %struct.GPR* %7985, i32 0, i32 5
  %7987 = getelementptr inbounds %struct.Reg, %struct.Reg* %7986, i32 0, i32 0
  %RCX.i607 = bitcast %union.anon* %7987 to i64*
  %7988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7989 = getelementptr inbounds %struct.GPR, %struct.GPR* %7988, i32 0, i32 15
  %7990 = getelementptr inbounds %struct.Reg, %struct.Reg* %7989, i32 0, i32 0
  %RBP.i608 = bitcast %union.anon* %7990 to i64*
  %7991 = load i64, i64* %RBP.i608
  %7992 = sub i64 %7991, 56
  %7993 = load i64, i64* %PC.i606
  %7994 = add i64 %7993, 4
  store i64 %7994, i64* %PC.i606
  %7995 = inttoptr i64 %7992 to i64*
  %7996 = load i64, i64* %7995
  store i64 %7996, i64* %RCX.i607, align 8
  store %struct.Memory* %loadMem_41663f, %struct.Memory** %MEMORY
  %loadMem_416643 = load %struct.Memory*, %struct.Memory** %MEMORY
  %7997 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7998 = getelementptr inbounds %struct.GPR, %struct.GPR* %7997, i32 0, i32 33
  %7999 = getelementptr inbounds %struct.Reg, %struct.Reg* %7998, i32 0, i32 0
  %PC.i603 = bitcast %union.anon* %7999 to i64*
  %8000 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8001 = getelementptr inbounds %struct.GPR, %struct.GPR* %8000, i32 0, i32 5
  %8002 = getelementptr inbounds %struct.Reg, %struct.Reg* %8001, i32 0, i32 0
  %RCX.i604 = bitcast %union.anon* %8002 to i64*
  %8003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8004 = getelementptr inbounds %struct.GPR, %struct.GPR* %8003, i32 0, i32 7
  %8005 = getelementptr inbounds %struct.Reg, %struct.Reg* %8004, i32 0, i32 0
  %RDX.i605 = bitcast %union.anon* %8005 to i64*
  %8006 = load i64, i64* %RCX.i604
  %8007 = load i64, i64* %PC.i603
  %8008 = add i64 %8007, 2
  store i64 %8008, i64* %PC.i603
  %8009 = inttoptr i64 %8006 to i32*
  %8010 = load i32, i32* %8009
  %8011 = zext i32 %8010 to i64
  store i64 %8011, i64* %RDX.i605, align 8
  store %struct.Memory* %loadMem_416643, %struct.Memory** %MEMORY
  %loadMem_416645 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8012 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8013 = getelementptr inbounds %struct.GPR, %struct.GPR* %8012, i32 0, i32 33
  %8014 = getelementptr inbounds %struct.Reg, %struct.Reg* %8013, i32 0, i32 0
  %PC.i601 = bitcast %union.anon* %8014 to i64*
  %8015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8016 = getelementptr inbounds %struct.GPR, %struct.GPR* %8015, i32 0, i32 7
  %8017 = getelementptr inbounds %struct.Reg, %struct.Reg* %8016, i32 0, i32 0
  %RDX.i602 = bitcast %union.anon* %8017 to i64*
  %8018 = load i64, i64* %RDX.i602
  %8019 = load i64, i64* %PC.i601
  %8020 = add i64 %8019, 3
  store i64 %8020, i64* %PC.i601
  %8021 = trunc i64 %8018 to i32
  %8022 = add i32 1, %8021
  %8023 = zext i32 %8022 to i64
  store i64 %8023, i64* %RDX.i602, align 8
  %8024 = icmp ult i32 %8022, %8021
  %8025 = icmp ult i32 %8022, 1
  %8026 = or i1 %8024, %8025
  %8027 = zext i1 %8026 to i8
  %8028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8027, i8* %8028, align 1
  %8029 = and i32 %8022, 255
  %8030 = call i32 @llvm.ctpop.i32(i32 %8029)
  %8031 = trunc i32 %8030 to i8
  %8032 = and i8 %8031, 1
  %8033 = xor i8 %8032, 1
  %8034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8033, i8* %8034, align 1
  %8035 = xor i64 1, %8018
  %8036 = trunc i64 %8035 to i32
  %8037 = xor i32 %8036, %8022
  %8038 = lshr i32 %8037, 4
  %8039 = trunc i32 %8038 to i8
  %8040 = and i8 %8039, 1
  %8041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8040, i8* %8041, align 1
  %8042 = icmp eq i32 %8022, 0
  %8043 = zext i1 %8042 to i8
  %8044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8043, i8* %8044, align 1
  %8045 = lshr i32 %8022, 31
  %8046 = trunc i32 %8045 to i8
  %8047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8046, i8* %8047, align 1
  %8048 = lshr i32 %8021, 31
  %8049 = xor i32 %8045, %8048
  %8050 = add i32 %8049, %8045
  %8051 = icmp eq i32 %8050, 2
  %8052 = zext i1 %8051 to i8
  %8053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8052, i8* %8053, align 1
  store %struct.Memory* %loadMem_416645, %struct.Memory** %MEMORY
  %loadMem_416648 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8054 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8055 = getelementptr inbounds %struct.GPR, %struct.GPR* %8054, i32 0, i32 33
  %8056 = getelementptr inbounds %struct.Reg, %struct.Reg* %8055, i32 0, i32 0
  %PC.i598 = bitcast %union.anon* %8056 to i64*
  %8057 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8058 = getelementptr inbounds %struct.GPR, %struct.GPR* %8057, i32 0, i32 7
  %8059 = getelementptr inbounds %struct.Reg, %struct.Reg* %8058, i32 0, i32 0
  %EDX.i599 = bitcast %union.anon* %8059 to i32*
  %8060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8061 = getelementptr inbounds %struct.GPR, %struct.GPR* %8060, i32 0, i32 5
  %8062 = getelementptr inbounds %struct.Reg, %struct.Reg* %8061, i32 0, i32 0
  %RCX.i600 = bitcast %union.anon* %8062 to i64*
  %8063 = load i64, i64* %RCX.i600
  %8064 = load i32, i32* %EDX.i599
  %8065 = zext i32 %8064 to i64
  %8066 = load i64, i64* %PC.i598
  %8067 = add i64 %8066, 2
  store i64 %8067, i64* %PC.i598
  %8068 = inttoptr i64 %8063 to i32*
  store i32 %8064, i32* %8068
  store %struct.Memory* %loadMem_416648, %struct.Memory** %MEMORY
  %loadMem_41664a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8069 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8070 = getelementptr inbounds %struct.GPR, %struct.GPR* %8069, i32 0, i32 33
  %8071 = getelementptr inbounds %struct.Reg, %struct.Reg* %8070, i32 0, i32 0
  %PC.i595 = bitcast %union.anon* %8071 to i64*
  %8072 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8073 = getelementptr inbounds %struct.GPR, %struct.GPR* %8072, i32 0, i32 5
  %8074 = getelementptr inbounds %struct.Reg, %struct.Reg* %8073, i32 0, i32 0
  %RCX.i596 = bitcast %union.anon* %8074 to i64*
  %8075 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8076 = getelementptr inbounds %struct.GPR, %struct.GPR* %8075, i32 0, i32 15
  %8077 = getelementptr inbounds %struct.Reg, %struct.Reg* %8076, i32 0, i32 0
  %RBP.i597 = bitcast %union.anon* %8077 to i64*
  %8078 = load i64, i64* %RBP.i597
  %8079 = sub i64 %8078, 132
  %8080 = load i64, i64* %PC.i595
  %8081 = add i64 %8080, 7
  store i64 %8081, i64* %PC.i595
  %8082 = inttoptr i64 %8079 to i32*
  %8083 = load i32, i32* %8082
  %8084 = sext i32 %8083 to i64
  store i64 %8084, i64* %RCX.i596, align 8
  store %struct.Memory* %loadMem_41664a, %struct.Memory** %MEMORY
  %loadMem_416651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8085 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8086 = getelementptr inbounds %struct.GPR, %struct.GPR* %8085, i32 0, i32 33
  %8087 = getelementptr inbounds %struct.Reg, %struct.Reg* %8086, i32 0, i32 0
  %PC.i593 = bitcast %union.anon* %8087 to i64*
  %8088 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8089 = getelementptr inbounds %struct.GPR, %struct.GPR* %8088, i32 0, i32 5
  %8090 = getelementptr inbounds %struct.Reg, %struct.Reg* %8089, i32 0, i32 0
  %RCX.i594 = bitcast %union.anon* %8090 to i64*
  %8091 = load i64, i64* %RCX.i594
  %8092 = load i64, i64* %PC.i593
  %8093 = add i64 %8092, 7
  store i64 %8093, i64* %PC.i593
  %8094 = sext i64 %8091 to i128
  %8095 = and i128 %8094, -18446744073709551616
  %8096 = zext i64 %8091 to i128
  %8097 = or i128 %8095, %8096
  %8098 = mul i128 744, %8097
  %8099 = trunc i128 %8098 to i64
  store i64 %8099, i64* %RCX.i594, align 8
  %8100 = sext i64 %8099 to i128
  %8101 = icmp ne i128 %8100, %8098
  %8102 = zext i1 %8101 to i8
  %8103 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8102, i8* %8103, align 1
  %8104 = trunc i128 %8098 to i32
  %8105 = and i32 %8104, 255
  %8106 = call i32 @llvm.ctpop.i32(i32 %8105)
  %8107 = trunc i32 %8106 to i8
  %8108 = and i8 %8107, 1
  %8109 = xor i8 %8108, 1
  %8110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8109, i8* %8110, align 1
  %8111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8111, align 1
  %8112 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8112, align 1
  %8113 = lshr i64 %8099, 63
  %8114 = trunc i64 %8113 to i8
  %8115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8114, i8* %8115, align 1
  %8116 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8102, i8* %8116, align 1
  store %struct.Memory* %loadMem_416651, %struct.Memory** %MEMORY
  %loadMem_416658 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8117 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8118 = getelementptr inbounds %struct.GPR, %struct.GPR* %8117, i32 0, i32 33
  %8119 = getelementptr inbounds %struct.Reg, %struct.Reg* %8118, i32 0, i32 0
  %PC.i590 = bitcast %union.anon* %8119 to i64*
  %8120 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8121 = getelementptr inbounds %struct.GPR, %struct.GPR* %8120, i32 0, i32 1
  %8122 = getelementptr inbounds %struct.Reg, %struct.Reg* %8121, i32 0, i32 0
  %RAX.i591 = bitcast %union.anon* %8122 to i64*
  %8123 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8124 = getelementptr inbounds %struct.GPR, %struct.GPR* %8123, i32 0, i32 5
  %8125 = getelementptr inbounds %struct.Reg, %struct.Reg* %8124, i32 0, i32 0
  %RCX.i592 = bitcast %union.anon* %8125 to i64*
  %8126 = load i64, i64* %RAX.i591
  %8127 = load i64, i64* %RCX.i592
  %8128 = load i64, i64* %PC.i590
  %8129 = add i64 %8128, 3
  store i64 %8129, i64* %PC.i590
  %8130 = add i64 %8127, %8126
  store i64 %8130, i64* %RAX.i591, align 8
  %8131 = icmp ult i64 %8130, %8126
  %8132 = icmp ult i64 %8130, %8127
  %8133 = or i1 %8131, %8132
  %8134 = zext i1 %8133 to i8
  %8135 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8134, i8* %8135, align 1
  %8136 = trunc i64 %8130 to i32
  %8137 = and i32 %8136, 255
  %8138 = call i32 @llvm.ctpop.i32(i32 %8137)
  %8139 = trunc i32 %8138 to i8
  %8140 = and i8 %8139, 1
  %8141 = xor i8 %8140, 1
  %8142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8141, i8* %8142, align 1
  %8143 = xor i64 %8127, %8126
  %8144 = xor i64 %8143, %8130
  %8145 = lshr i64 %8144, 4
  %8146 = trunc i64 %8145 to i8
  %8147 = and i8 %8146, 1
  %8148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8147, i8* %8148, align 1
  %8149 = icmp eq i64 %8130, 0
  %8150 = zext i1 %8149 to i8
  %8151 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8150, i8* %8151, align 1
  %8152 = lshr i64 %8130, 63
  %8153 = trunc i64 %8152 to i8
  %8154 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8153, i8* %8154, align 1
  %8155 = lshr i64 %8126, 63
  %8156 = lshr i64 %8127, 63
  %8157 = xor i64 %8152, %8155
  %8158 = xor i64 %8152, %8156
  %8159 = add i64 %8157, %8158
  %8160 = icmp eq i64 %8159, 2
  %8161 = zext i1 %8160 to i8
  %8162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8161, i8* %8162, align 1
  store %struct.Memory* %loadMem_416658, %struct.Memory** %MEMORY
  %loadMem_41665b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8163 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8164 = getelementptr inbounds %struct.GPR, %struct.GPR* %8163, i32 0, i32 33
  %8165 = getelementptr inbounds %struct.Reg, %struct.Reg* %8164, i32 0, i32 0
  %PC.i588 = bitcast %union.anon* %8165 to i64*
  %8166 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8167 = getelementptr inbounds %struct.GPR, %struct.GPR* %8166, i32 0, i32 1
  %8168 = getelementptr inbounds %struct.Reg, %struct.Reg* %8167, i32 0, i32 0
  %RAX.i589 = bitcast %union.anon* %8168 to i64*
  %8169 = load i64, i64* %RAX.i589
  %8170 = add i64 %8169, 12
  %8171 = load i64, i64* %PC.i588
  %8172 = add i64 %8171, 4
  store i64 %8172, i64* %PC.i588
  %8173 = inttoptr i64 %8170 to i32*
  %8174 = load i32, i32* %8173
  %8175 = sub i32 %8174, 1
  %8176 = icmp ult i32 %8174, 1
  %8177 = zext i1 %8176 to i8
  %8178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8177, i8* %8178, align 1
  %8179 = and i32 %8175, 255
  %8180 = call i32 @llvm.ctpop.i32(i32 %8179)
  %8181 = trunc i32 %8180 to i8
  %8182 = and i8 %8181, 1
  %8183 = xor i8 %8182, 1
  %8184 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8183, i8* %8184, align 1
  %8185 = xor i32 %8174, 1
  %8186 = xor i32 %8185, %8175
  %8187 = lshr i32 %8186, 4
  %8188 = trunc i32 %8187 to i8
  %8189 = and i8 %8188, 1
  %8190 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8189, i8* %8190, align 1
  %8191 = icmp eq i32 %8175, 0
  %8192 = zext i1 %8191 to i8
  %8193 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8192, i8* %8193, align 1
  %8194 = lshr i32 %8175, 31
  %8195 = trunc i32 %8194 to i8
  %8196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8195, i8* %8196, align 1
  %8197 = lshr i32 %8174, 31
  %8198 = xor i32 %8194, %8197
  %8199 = add i32 %8198, %8197
  %8200 = icmp eq i32 %8199, 2
  %8201 = zext i1 %8200 to i8
  %8202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8201, i8* %8202, align 1
  store %struct.Memory* %loadMem_41665b, %struct.Memory** %MEMORY
  %loadMem_41665f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8203 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8204 = getelementptr inbounds %struct.GPR, %struct.GPR* %8203, i32 0, i32 33
  %8205 = getelementptr inbounds %struct.Reg, %struct.Reg* %8204, i32 0, i32 0
  %PC.i587 = bitcast %union.anon* %8205 to i64*
  %8206 = load i64, i64* %PC.i587
  %8207 = add i64 %8206, 44
  %8208 = load i64, i64* %PC.i587
  %8209 = add i64 %8208, 6
  %8210 = load i64, i64* %PC.i587
  %8211 = add i64 %8210, 6
  store i64 %8211, i64* %PC.i587
  %8212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8213 = load i8, i8* %8212, align 1
  %8214 = icmp eq i8 %8213, 0
  %8215 = zext i1 %8214 to i8
  store i8 %8215, i8* %BRANCH_TAKEN, align 1
  %8216 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8217 = select i1 %8214, i64 %8207, i64 %8209
  store i64 %8217, i64* %8216, align 8
  store %struct.Memory* %loadMem_41665f, %struct.Memory** %MEMORY
  %loadBr_41665f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41665f = icmp eq i8 %loadBr_41665f, 1
  br i1 %cmpBr_41665f, label %block_.L_41668b, label %block_416665

block_416665:                                     ; preds = %block_416635
  %loadMem_416665 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8218 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8219 = getelementptr inbounds %struct.GPR, %struct.GPR* %8218, i32 0, i32 33
  %8220 = getelementptr inbounds %struct.Reg, %struct.Reg* %8219, i32 0, i32 0
  %PC.i585 = bitcast %union.anon* %8220 to i64*
  %8221 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8222 = getelementptr inbounds %struct.GPR, %struct.GPR* %8221, i32 0, i32 1
  %8223 = getelementptr inbounds %struct.Reg, %struct.Reg* %8222, i32 0, i32 0
  %RAX.i586 = bitcast %union.anon* %8223 to i64*
  %8224 = load i64, i64* %PC.i585
  %8225 = add i64 %8224, 10
  store i64 %8225, i64* %PC.i585
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i586, align 8
  store %struct.Memory* %loadMem_416665, %struct.Memory** %MEMORY
  %loadMem_41666f = load %struct.Memory*, %struct.Memory** %MEMORY
  %8226 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8227 = getelementptr inbounds %struct.GPR, %struct.GPR* %8226, i32 0, i32 33
  %8228 = getelementptr inbounds %struct.Reg, %struct.Reg* %8227, i32 0, i32 0
  %PC.i582 = bitcast %union.anon* %8228 to i64*
  %8229 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8230 = getelementptr inbounds %struct.GPR, %struct.GPR* %8229, i32 0, i32 5
  %8231 = getelementptr inbounds %struct.Reg, %struct.Reg* %8230, i32 0, i32 0
  %RCX.i583 = bitcast %union.anon* %8231 to i64*
  %8232 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8233 = getelementptr inbounds %struct.GPR, %struct.GPR* %8232, i32 0, i32 15
  %8234 = getelementptr inbounds %struct.Reg, %struct.Reg* %8233, i32 0, i32 0
  %RBP.i584 = bitcast %union.anon* %8234 to i64*
  %8235 = load i64, i64* %RBP.i584
  %8236 = sub i64 %8235, 132
  %8237 = load i64, i64* %PC.i582
  %8238 = add i64 %8237, 7
  store i64 %8238, i64* %PC.i582
  %8239 = inttoptr i64 %8236 to i32*
  %8240 = load i32, i32* %8239
  %8241 = sext i32 %8240 to i64
  store i64 %8241, i64* %RCX.i583, align 8
  store %struct.Memory* %loadMem_41666f, %struct.Memory** %MEMORY
  %loadMem_416676 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8242 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8243 = getelementptr inbounds %struct.GPR, %struct.GPR* %8242, i32 0, i32 33
  %8244 = getelementptr inbounds %struct.Reg, %struct.Reg* %8243, i32 0, i32 0
  %PC.i580 = bitcast %union.anon* %8244 to i64*
  %8245 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8246 = getelementptr inbounds %struct.GPR, %struct.GPR* %8245, i32 0, i32 5
  %8247 = getelementptr inbounds %struct.Reg, %struct.Reg* %8246, i32 0, i32 0
  %RCX.i581 = bitcast %union.anon* %8247 to i64*
  %8248 = load i64, i64* %RCX.i581
  %8249 = load i64, i64* %PC.i580
  %8250 = add i64 %8249, 7
  store i64 %8250, i64* %PC.i580
  %8251 = sext i64 %8248 to i128
  %8252 = and i128 %8251, -18446744073709551616
  %8253 = zext i64 %8248 to i128
  %8254 = or i128 %8252, %8253
  %8255 = mul i128 744, %8254
  %8256 = trunc i128 %8255 to i64
  store i64 %8256, i64* %RCX.i581, align 8
  %8257 = sext i64 %8256 to i128
  %8258 = icmp ne i128 %8257, %8255
  %8259 = zext i1 %8258 to i8
  %8260 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8259, i8* %8260, align 1
  %8261 = trunc i128 %8255 to i32
  %8262 = and i32 %8261, 255
  %8263 = call i32 @llvm.ctpop.i32(i32 %8262)
  %8264 = trunc i32 %8263 to i8
  %8265 = and i8 %8264, 1
  %8266 = xor i8 %8265, 1
  %8267 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8266, i8* %8267, align 1
  %8268 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8268, align 1
  %8269 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8269, align 1
  %8270 = lshr i64 %8256, 63
  %8271 = trunc i64 %8270 to i8
  %8272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8271, i8* %8272, align 1
  %8273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8259, i8* %8273, align 1
  store %struct.Memory* %loadMem_416676, %struct.Memory** %MEMORY
  %loadMem_41667d = load %struct.Memory*, %struct.Memory** %MEMORY
  %8274 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8275 = getelementptr inbounds %struct.GPR, %struct.GPR* %8274, i32 0, i32 33
  %8276 = getelementptr inbounds %struct.Reg, %struct.Reg* %8275, i32 0, i32 0
  %PC.i577 = bitcast %union.anon* %8276 to i64*
  %8277 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8278 = getelementptr inbounds %struct.GPR, %struct.GPR* %8277, i32 0, i32 1
  %8279 = getelementptr inbounds %struct.Reg, %struct.Reg* %8278, i32 0, i32 0
  %RAX.i578 = bitcast %union.anon* %8279 to i64*
  %8280 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8281 = getelementptr inbounds %struct.GPR, %struct.GPR* %8280, i32 0, i32 5
  %8282 = getelementptr inbounds %struct.Reg, %struct.Reg* %8281, i32 0, i32 0
  %RCX.i579 = bitcast %union.anon* %8282 to i64*
  %8283 = load i64, i64* %RAX.i578
  %8284 = load i64, i64* %RCX.i579
  %8285 = load i64, i64* %PC.i577
  %8286 = add i64 %8285, 3
  store i64 %8286, i64* %PC.i577
  %8287 = add i64 %8284, %8283
  store i64 %8287, i64* %RAX.i578, align 8
  %8288 = icmp ult i64 %8287, %8283
  %8289 = icmp ult i64 %8287, %8284
  %8290 = or i1 %8288, %8289
  %8291 = zext i1 %8290 to i8
  %8292 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8291, i8* %8292, align 1
  %8293 = trunc i64 %8287 to i32
  %8294 = and i32 %8293, 255
  %8295 = call i32 @llvm.ctpop.i32(i32 %8294)
  %8296 = trunc i32 %8295 to i8
  %8297 = and i8 %8296, 1
  %8298 = xor i8 %8297, 1
  %8299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8298, i8* %8299, align 1
  %8300 = xor i64 %8284, %8283
  %8301 = xor i64 %8300, %8287
  %8302 = lshr i64 %8301, 4
  %8303 = trunc i64 %8302 to i8
  %8304 = and i8 %8303, 1
  %8305 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8304, i8* %8305, align 1
  %8306 = icmp eq i64 %8287, 0
  %8307 = zext i1 %8306 to i8
  %8308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8307, i8* %8308, align 1
  %8309 = lshr i64 %8287, 63
  %8310 = trunc i64 %8309 to i8
  %8311 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8310, i8* %8311, align 1
  %8312 = lshr i64 %8283, 63
  %8313 = lshr i64 %8284, 63
  %8314 = xor i64 %8309, %8312
  %8315 = xor i64 %8309, %8313
  %8316 = add i64 %8314, %8315
  %8317 = icmp eq i64 %8316, 2
  %8318 = zext i1 %8317 to i8
  %8319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8318, i8* %8319, align 1
  store %struct.Memory* %loadMem_41667d, %struct.Memory** %MEMORY
  %loadMem_416680 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8321 = getelementptr inbounds %struct.GPR, %struct.GPR* %8320, i32 0, i32 33
  %8322 = getelementptr inbounds %struct.Reg, %struct.Reg* %8321, i32 0, i32 0
  %PC.i574 = bitcast %union.anon* %8322 to i64*
  %8323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8324 = getelementptr inbounds %struct.GPR, %struct.GPR* %8323, i32 0, i32 1
  %8325 = getelementptr inbounds %struct.Reg, %struct.Reg* %8324, i32 0, i32 0
  %RAX.i575 = bitcast %union.anon* %8325 to i64*
  %8326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8327 = getelementptr inbounds %struct.GPR, %struct.GPR* %8326, i32 0, i32 7
  %8328 = getelementptr inbounds %struct.Reg, %struct.Reg* %8327, i32 0, i32 0
  %RDX.i576 = bitcast %union.anon* %8328 to i64*
  %8329 = load i64, i64* %RAX.i575
  %8330 = add i64 %8329, 4
  %8331 = load i64, i64* %PC.i574
  %8332 = add i64 %8331, 3
  store i64 %8332, i64* %PC.i574
  %8333 = inttoptr i64 %8330 to i32*
  %8334 = load i32, i32* %8333
  %8335 = zext i32 %8334 to i64
  store i64 %8335, i64* %RDX.i576, align 8
  store %struct.Memory* %loadMem_416680, %struct.Memory** %MEMORY
  %loadMem_416683 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8337 = getelementptr inbounds %struct.GPR, %struct.GPR* %8336, i32 0, i32 33
  %8338 = getelementptr inbounds %struct.Reg, %struct.Reg* %8337, i32 0, i32 0
  %PC.i571 = bitcast %union.anon* %8338 to i64*
  %8339 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8340 = getelementptr inbounds %struct.GPR, %struct.GPR* %8339, i32 0, i32 1
  %8341 = getelementptr inbounds %struct.Reg, %struct.Reg* %8340, i32 0, i32 0
  %RAX.i572 = bitcast %union.anon* %8341 to i64*
  %8342 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8343 = getelementptr inbounds %struct.GPR, %struct.GPR* %8342, i32 0, i32 15
  %8344 = getelementptr inbounds %struct.Reg, %struct.Reg* %8343, i32 0, i32 0
  %RBP.i573 = bitcast %union.anon* %8344 to i64*
  %8345 = load i64, i64* %RBP.i573
  %8346 = sub i64 %8345, 88
  %8347 = load i64, i64* %PC.i571
  %8348 = add i64 %8347, 4
  store i64 %8348, i64* %PC.i571
  %8349 = inttoptr i64 %8346 to i64*
  %8350 = load i64, i64* %8349
  store i64 %8350, i64* %RAX.i572, align 8
  store %struct.Memory* %loadMem_416683, %struct.Memory** %MEMORY
  %loadMem_416687 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8351 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8352 = getelementptr inbounds %struct.GPR, %struct.GPR* %8351, i32 0, i32 33
  %8353 = getelementptr inbounds %struct.Reg, %struct.Reg* %8352, i32 0, i32 0
  %PC.i568 = bitcast %union.anon* %8353 to i64*
  %8354 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8355 = getelementptr inbounds %struct.GPR, %struct.GPR* %8354, i32 0, i32 1
  %8356 = getelementptr inbounds %struct.Reg, %struct.Reg* %8355, i32 0, i32 0
  %RAX.i569 = bitcast %union.anon* %8356 to i64*
  %8357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8358 = getelementptr inbounds %struct.GPR, %struct.GPR* %8357, i32 0, i32 7
  %8359 = getelementptr inbounds %struct.Reg, %struct.Reg* %8358, i32 0, i32 0
  %RDX.i570 = bitcast %union.anon* %8359 to i64*
  %8360 = load i64, i64* %RDX.i570
  %8361 = load i64, i64* %RAX.i569
  %8362 = load i64, i64* %PC.i568
  %8363 = add i64 %8362, 2
  store i64 %8363, i64* %PC.i568
  %8364 = trunc i64 %8360 to i32
  %8365 = inttoptr i64 %8361 to i32*
  %8366 = load i32, i32* %8365
  %8367 = add i32 %8366, %8364
  %8368 = zext i32 %8367 to i64
  store i64 %8368, i64* %RDX.i570, align 8
  %8369 = icmp ult i32 %8367, %8364
  %8370 = icmp ult i32 %8367, %8366
  %8371 = or i1 %8369, %8370
  %8372 = zext i1 %8371 to i8
  %8373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8372, i8* %8373, align 1
  %8374 = and i32 %8367, 255
  %8375 = call i32 @llvm.ctpop.i32(i32 %8374)
  %8376 = trunc i32 %8375 to i8
  %8377 = and i8 %8376, 1
  %8378 = xor i8 %8377, 1
  %8379 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8378, i8* %8379, align 1
  %8380 = xor i32 %8366, %8364
  %8381 = xor i32 %8380, %8367
  %8382 = lshr i32 %8381, 4
  %8383 = trunc i32 %8382 to i8
  %8384 = and i8 %8383, 1
  %8385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8384, i8* %8385, align 1
  %8386 = icmp eq i32 %8367, 0
  %8387 = zext i1 %8386 to i8
  %8388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8387, i8* %8388, align 1
  %8389 = lshr i32 %8367, 31
  %8390 = trunc i32 %8389 to i8
  %8391 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8390, i8* %8391, align 1
  %8392 = lshr i32 %8364, 31
  %8393 = lshr i32 %8366, 31
  %8394 = xor i32 %8389, %8392
  %8395 = xor i32 %8389, %8393
  %8396 = add i32 %8394, %8395
  %8397 = icmp eq i32 %8396, 2
  %8398 = zext i1 %8397 to i8
  %8399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8398, i8* %8399, align 1
  store %struct.Memory* %loadMem_416687, %struct.Memory** %MEMORY
  %loadMem_416689 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8400 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8401 = getelementptr inbounds %struct.GPR, %struct.GPR* %8400, i32 0, i32 33
  %8402 = getelementptr inbounds %struct.Reg, %struct.Reg* %8401, i32 0, i32 0
  %PC.i565 = bitcast %union.anon* %8402 to i64*
  %8403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8404 = getelementptr inbounds %struct.GPR, %struct.GPR* %8403, i32 0, i32 7
  %8405 = getelementptr inbounds %struct.Reg, %struct.Reg* %8404, i32 0, i32 0
  %EDX.i566 = bitcast %union.anon* %8405 to i32*
  %8406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8407 = getelementptr inbounds %struct.GPR, %struct.GPR* %8406, i32 0, i32 1
  %8408 = getelementptr inbounds %struct.Reg, %struct.Reg* %8407, i32 0, i32 0
  %RAX.i567 = bitcast %union.anon* %8408 to i64*
  %8409 = load i64, i64* %RAX.i567
  %8410 = load i32, i32* %EDX.i566
  %8411 = zext i32 %8410 to i64
  %8412 = load i64, i64* %PC.i565
  %8413 = add i64 %8412, 2
  store i64 %8413, i64* %PC.i565
  %8414 = inttoptr i64 %8409 to i32*
  store i32 %8410, i32* %8414
  store %struct.Memory* %loadMem_416689, %struct.Memory** %MEMORY
  br label %block_.L_41668b

block_.L_41668b:                                  ; preds = %block_416665, %block_416635
  %loadMem_41668b = load %struct.Memory*, %struct.Memory** %MEMORY
  %8415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8416 = getelementptr inbounds %struct.GPR, %struct.GPR* %8415, i32 0, i32 33
  %8417 = getelementptr inbounds %struct.Reg, %struct.Reg* %8416, i32 0, i32 0
  %PC.i564 = bitcast %union.anon* %8417 to i64*
  %8418 = load i64, i64* %PC.i564
  %8419 = add i64 %8418, 451
  %8420 = load i64, i64* %PC.i564
  %8421 = add i64 %8420, 5
  store i64 %8421, i64* %PC.i564
  %8422 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %8419, i64* %8422, align 8
  store %struct.Memory* %loadMem_41668b, %struct.Memory** %MEMORY
  br label %block_.L_41684e

block_.L_416690:                                  ; preds = %block_.L_41661b
  %loadMem_416690 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8423 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8424 = getelementptr inbounds %struct.GPR, %struct.GPR* %8423, i32 0, i32 33
  %8425 = getelementptr inbounds %struct.Reg, %struct.Reg* %8424, i32 0, i32 0
  %PC.i562 = bitcast %union.anon* %8425 to i64*
  %8426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8427 = getelementptr inbounds %struct.GPR, %struct.GPR* %8426, i32 0, i32 1
  %8428 = getelementptr inbounds %struct.Reg, %struct.Reg* %8427, i32 0, i32 0
  %RAX.i563 = bitcast %union.anon* %8428 to i64*
  %8429 = load i64, i64* %PC.i562
  %8430 = add i64 %8429, 10
  store i64 %8430, i64* %PC.i562
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i563, align 8
  store %struct.Memory* %loadMem_416690, %struct.Memory** %MEMORY
  %loadMem_41669a = load %struct.Memory*, %struct.Memory** %MEMORY
  %8431 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8432 = getelementptr inbounds %struct.GPR, %struct.GPR* %8431, i32 0, i32 33
  %8433 = getelementptr inbounds %struct.Reg, %struct.Reg* %8432, i32 0, i32 0
  %PC.i559 = bitcast %union.anon* %8433 to i64*
  %8434 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8435 = getelementptr inbounds %struct.GPR, %struct.GPR* %8434, i32 0, i32 5
  %8436 = getelementptr inbounds %struct.Reg, %struct.Reg* %8435, i32 0, i32 0
  %RCX.i560 = bitcast %union.anon* %8436 to i64*
  %8437 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8438 = getelementptr inbounds %struct.GPR, %struct.GPR* %8437, i32 0, i32 15
  %8439 = getelementptr inbounds %struct.Reg, %struct.Reg* %8438, i32 0, i32 0
  %RBP.i561 = bitcast %union.anon* %8439 to i64*
  %8440 = load i64, i64* %RBP.i561
  %8441 = sub i64 %8440, 64
  %8442 = load i64, i64* %PC.i559
  %8443 = add i64 %8442, 4
  store i64 %8443, i64* %PC.i559
  %8444 = inttoptr i64 %8441 to i64*
  %8445 = load i64, i64* %8444
  store i64 %8445, i64* %RCX.i560, align 8
  store %struct.Memory* %loadMem_41669a, %struct.Memory** %MEMORY
  %loadMem_41669e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8446 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8447 = getelementptr inbounds %struct.GPR, %struct.GPR* %8446, i32 0, i32 33
  %8448 = getelementptr inbounds %struct.Reg, %struct.Reg* %8447, i32 0, i32 0
  %PC.i556 = bitcast %union.anon* %8448 to i64*
  %8449 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8450 = getelementptr inbounds %struct.GPR, %struct.GPR* %8449, i32 0, i32 5
  %8451 = getelementptr inbounds %struct.Reg, %struct.Reg* %8450, i32 0, i32 0
  %RCX.i557 = bitcast %union.anon* %8451 to i64*
  %8452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8453 = getelementptr inbounds %struct.GPR, %struct.GPR* %8452, i32 0, i32 7
  %8454 = getelementptr inbounds %struct.Reg, %struct.Reg* %8453, i32 0, i32 0
  %RDX.i558 = bitcast %union.anon* %8454 to i64*
  %8455 = load i64, i64* %RCX.i557
  %8456 = load i64, i64* %PC.i556
  %8457 = add i64 %8456, 2
  store i64 %8457, i64* %PC.i556
  %8458 = inttoptr i64 %8455 to i32*
  %8459 = load i32, i32* %8458
  %8460 = zext i32 %8459 to i64
  store i64 %8460, i64* %RDX.i558, align 8
  store %struct.Memory* %loadMem_41669e, %struct.Memory** %MEMORY
  %loadMem_4166a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8462 = getelementptr inbounds %struct.GPR, %struct.GPR* %8461, i32 0, i32 33
  %8463 = getelementptr inbounds %struct.Reg, %struct.Reg* %8462, i32 0, i32 0
  %PC.i554 = bitcast %union.anon* %8463 to i64*
  %8464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8465 = getelementptr inbounds %struct.GPR, %struct.GPR* %8464, i32 0, i32 7
  %8466 = getelementptr inbounds %struct.Reg, %struct.Reg* %8465, i32 0, i32 0
  %RDX.i555 = bitcast %union.anon* %8466 to i64*
  %8467 = load i64, i64* %RDX.i555
  %8468 = load i64, i64* %PC.i554
  %8469 = add i64 %8468, 3
  store i64 %8469, i64* %PC.i554
  %8470 = trunc i64 %8467 to i32
  %8471 = add i32 1, %8470
  %8472 = zext i32 %8471 to i64
  store i64 %8472, i64* %RDX.i555, align 8
  %8473 = icmp ult i32 %8471, %8470
  %8474 = icmp ult i32 %8471, 1
  %8475 = or i1 %8473, %8474
  %8476 = zext i1 %8475 to i8
  %8477 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8476, i8* %8477, align 1
  %8478 = and i32 %8471, 255
  %8479 = call i32 @llvm.ctpop.i32(i32 %8478)
  %8480 = trunc i32 %8479 to i8
  %8481 = and i8 %8480, 1
  %8482 = xor i8 %8481, 1
  %8483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8482, i8* %8483, align 1
  %8484 = xor i64 1, %8467
  %8485 = trunc i64 %8484 to i32
  %8486 = xor i32 %8485, %8471
  %8487 = lshr i32 %8486, 4
  %8488 = trunc i32 %8487 to i8
  %8489 = and i8 %8488, 1
  %8490 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8489, i8* %8490, align 1
  %8491 = icmp eq i32 %8471, 0
  %8492 = zext i1 %8491 to i8
  %8493 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8492, i8* %8493, align 1
  %8494 = lshr i32 %8471, 31
  %8495 = trunc i32 %8494 to i8
  %8496 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8495, i8* %8496, align 1
  %8497 = lshr i32 %8470, 31
  %8498 = xor i32 %8494, %8497
  %8499 = add i32 %8498, %8494
  %8500 = icmp eq i32 %8499, 2
  %8501 = zext i1 %8500 to i8
  %8502 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8501, i8* %8502, align 1
  store %struct.Memory* %loadMem_4166a0, %struct.Memory** %MEMORY
  %loadMem_4166a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8503 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8504 = getelementptr inbounds %struct.GPR, %struct.GPR* %8503, i32 0, i32 33
  %8505 = getelementptr inbounds %struct.Reg, %struct.Reg* %8504, i32 0, i32 0
  %PC.i551 = bitcast %union.anon* %8505 to i64*
  %8506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8507 = getelementptr inbounds %struct.GPR, %struct.GPR* %8506, i32 0, i32 7
  %8508 = getelementptr inbounds %struct.Reg, %struct.Reg* %8507, i32 0, i32 0
  %EDX.i552 = bitcast %union.anon* %8508 to i32*
  %8509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8510 = getelementptr inbounds %struct.GPR, %struct.GPR* %8509, i32 0, i32 5
  %8511 = getelementptr inbounds %struct.Reg, %struct.Reg* %8510, i32 0, i32 0
  %RCX.i553 = bitcast %union.anon* %8511 to i64*
  %8512 = load i64, i64* %RCX.i553
  %8513 = load i32, i32* %EDX.i552
  %8514 = zext i32 %8513 to i64
  %8515 = load i64, i64* %PC.i551
  %8516 = add i64 %8515, 2
  store i64 %8516, i64* %PC.i551
  %8517 = inttoptr i64 %8512 to i32*
  store i32 %8513, i32* %8517
  store %struct.Memory* %loadMem_4166a3, %struct.Memory** %MEMORY
  %loadMem_4166a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8519 = getelementptr inbounds %struct.GPR, %struct.GPR* %8518, i32 0, i32 33
  %8520 = getelementptr inbounds %struct.Reg, %struct.Reg* %8519, i32 0, i32 0
  %PC.i548 = bitcast %union.anon* %8520 to i64*
  %8521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8522 = getelementptr inbounds %struct.GPR, %struct.GPR* %8521, i32 0, i32 5
  %8523 = getelementptr inbounds %struct.Reg, %struct.Reg* %8522, i32 0, i32 0
  %RCX.i549 = bitcast %union.anon* %8523 to i64*
  %8524 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8525 = getelementptr inbounds %struct.GPR, %struct.GPR* %8524, i32 0, i32 15
  %8526 = getelementptr inbounds %struct.Reg, %struct.Reg* %8525, i32 0, i32 0
  %RBP.i550 = bitcast %union.anon* %8526 to i64*
  %8527 = load i64, i64* %RBP.i550
  %8528 = sub i64 %8527, 132
  %8529 = load i64, i64* %PC.i548
  %8530 = add i64 %8529, 7
  store i64 %8530, i64* %PC.i548
  %8531 = inttoptr i64 %8528 to i32*
  %8532 = load i32, i32* %8531
  %8533 = sext i32 %8532 to i64
  store i64 %8533, i64* %RCX.i549, align 8
  store %struct.Memory* %loadMem_4166a5, %struct.Memory** %MEMORY
  %loadMem_4166ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %8534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8535 = getelementptr inbounds %struct.GPR, %struct.GPR* %8534, i32 0, i32 33
  %8536 = getelementptr inbounds %struct.Reg, %struct.Reg* %8535, i32 0, i32 0
  %PC.i546 = bitcast %union.anon* %8536 to i64*
  %8537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8538 = getelementptr inbounds %struct.GPR, %struct.GPR* %8537, i32 0, i32 5
  %8539 = getelementptr inbounds %struct.Reg, %struct.Reg* %8538, i32 0, i32 0
  %RCX.i547 = bitcast %union.anon* %8539 to i64*
  %8540 = load i64, i64* %RCX.i547
  %8541 = load i64, i64* %PC.i546
  %8542 = add i64 %8541, 7
  store i64 %8542, i64* %PC.i546
  %8543 = sext i64 %8540 to i128
  %8544 = and i128 %8543, -18446744073709551616
  %8545 = zext i64 %8540 to i128
  %8546 = or i128 %8544, %8545
  %8547 = mul i128 744, %8546
  %8548 = trunc i128 %8547 to i64
  store i64 %8548, i64* %RCX.i547, align 8
  %8549 = sext i64 %8548 to i128
  %8550 = icmp ne i128 %8549, %8547
  %8551 = zext i1 %8550 to i8
  %8552 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8551, i8* %8552, align 1
  %8553 = trunc i128 %8547 to i32
  %8554 = and i32 %8553, 255
  %8555 = call i32 @llvm.ctpop.i32(i32 %8554)
  %8556 = trunc i32 %8555 to i8
  %8557 = and i8 %8556, 1
  %8558 = xor i8 %8557, 1
  %8559 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8558, i8* %8559, align 1
  %8560 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8560, align 1
  %8561 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8561, align 1
  %8562 = lshr i64 %8548, 63
  %8563 = trunc i64 %8562 to i8
  %8564 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8563, i8* %8564, align 1
  %8565 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8551, i8* %8565, align 1
  store %struct.Memory* %loadMem_4166ac, %struct.Memory** %MEMORY
  %loadMem_4166b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8566 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8567 = getelementptr inbounds %struct.GPR, %struct.GPR* %8566, i32 0, i32 33
  %8568 = getelementptr inbounds %struct.Reg, %struct.Reg* %8567, i32 0, i32 0
  %PC.i543 = bitcast %union.anon* %8568 to i64*
  %8569 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8570 = getelementptr inbounds %struct.GPR, %struct.GPR* %8569, i32 0, i32 1
  %8571 = getelementptr inbounds %struct.Reg, %struct.Reg* %8570, i32 0, i32 0
  %RAX.i544 = bitcast %union.anon* %8571 to i64*
  %8572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8573 = getelementptr inbounds %struct.GPR, %struct.GPR* %8572, i32 0, i32 5
  %8574 = getelementptr inbounds %struct.Reg, %struct.Reg* %8573, i32 0, i32 0
  %RCX.i545 = bitcast %union.anon* %8574 to i64*
  %8575 = load i64, i64* %RAX.i544
  %8576 = load i64, i64* %RCX.i545
  %8577 = load i64, i64* %PC.i543
  %8578 = add i64 %8577, 3
  store i64 %8578, i64* %PC.i543
  %8579 = add i64 %8576, %8575
  store i64 %8579, i64* %RAX.i544, align 8
  %8580 = icmp ult i64 %8579, %8575
  %8581 = icmp ult i64 %8579, %8576
  %8582 = or i1 %8580, %8581
  %8583 = zext i1 %8582 to i8
  %8584 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8583, i8* %8584, align 1
  %8585 = trunc i64 %8579 to i32
  %8586 = and i32 %8585, 255
  %8587 = call i32 @llvm.ctpop.i32(i32 %8586)
  %8588 = trunc i32 %8587 to i8
  %8589 = and i8 %8588, 1
  %8590 = xor i8 %8589, 1
  %8591 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8590, i8* %8591, align 1
  %8592 = xor i64 %8576, %8575
  %8593 = xor i64 %8592, %8579
  %8594 = lshr i64 %8593, 4
  %8595 = trunc i64 %8594 to i8
  %8596 = and i8 %8595, 1
  %8597 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8596, i8* %8597, align 1
  %8598 = icmp eq i64 %8579, 0
  %8599 = zext i1 %8598 to i8
  %8600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8599, i8* %8600, align 1
  %8601 = lshr i64 %8579, 63
  %8602 = trunc i64 %8601 to i8
  %8603 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8602, i8* %8603, align 1
  %8604 = lshr i64 %8575, 63
  %8605 = lshr i64 %8576, 63
  %8606 = xor i64 %8601, %8604
  %8607 = xor i64 %8601, %8605
  %8608 = add i64 %8606, %8607
  %8609 = icmp eq i64 %8608, 2
  %8610 = zext i1 %8609 to i8
  %8611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8610, i8* %8611, align 1
  store %struct.Memory* %loadMem_4166b3, %struct.Memory** %MEMORY
  %loadMem_4166b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8612 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8613 = getelementptr inbounds %struct.GPR, %struct.GPR* %8612, i32 0, i32 33
  %8614 = getelementptr inbounds %struct.Reg, %struct.Reg* %8613, i32 0, i32 0
  %PC.i541 = bitcast %union.anon* %8614 to i64*
  %8615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8616 = getelementptr inbounds %struct.GPR, %struct.GPR* %8615, i32 0, i32 1
  %8617 = getelementptr inbounds %struct.Reg, %struct.Reg* %8616, i32 0, i32 0
  %RAX.i542 = bitcast %union.anon* %8617 to i64*
  %8618 = load i64, i64* %RAX.i542
  %8619 = add i64 %8618, 12
  %8620 = load i64, i64* %PC.i541
  %8621 = add i64 %8620, 4
  store i64 %8621, i64* %PC.i541
  %8622 = inttoptr i64 %8619 to i32*
  %8623 = load i32, i32* %8622
  %8624 = sub i32 %8623, 1
  %8625 = icmp ult i32 %8623, 1
  %8626 = zext i1 %8625 to i8
  %8627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8626, i8* %8627, align 1
  %8628 = and i32 %8624, 255
  %8629 = call i32 @llvm.ctpop.i32(i32 %8628)
  %8630 = trunc i32 %8629 to i8
  %8631 = and i8 %8630, 1
  %8632 = xor i8 %8631, 1
  %8633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8632, i8* %8633, align 1
  %8634 = xor i32 %8623, 1
  %8635 = xor i32 %8634, %8624
  %8636 = lshr i32 %8635, 4
  %8637 = trunc i32 %8636 to i8
  %8638 = and i8 %8637, 1
  %8639 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8638, i8* %8639, align 1
  %8640 = icmp eq i32 %8624, 0
  %8641 = zext i1 %8640 to i8
  %8642 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8641, i8* %8642, align 1
  %8643 = lshr i32 %8624, 31
  %8644 = trunc i32 %8643 to i8
  %8645 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8644, i8* %8645, align 1
  %8646 = lshr i32 %8623, 31
  %8647 = xor i32 %8643, %8646
  %8648 = add i32 %8647, %8646
  %8649 = icmp eq i32 %8648, 2
  %8650 = zext i1 %8649 to i8
  %8651 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8650, i8* %8651, align 1
  store %struct.Memory* %loadMem_4166b6, %struct.Memory** %MEMORY
  %loadMem_4166ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %8652 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8653 = getelementptr inbounds %struct.GPR, %struct.GPR* %8652, i32 0, i32 33
  %8654 = getelementptr inbounds %struct.Reg, %struct.Reg* %8653, i32 0, i32 0
  %PC.i540 = bitcast %union.anon* %8654 to i64*
  %8655 = load i64, i64* %PC.i540
  %8656 = add i64 %8655, 220
  %8657 = load i64, i64* %PC.i540
  %8658 = add i64 %8657, 6
  %8659 = load i64, i64* %PC.i540
  %8660 = add i64 %8659, 6
  store i64 %8660, i64* %PC.i540
  %8661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %8662 = load i8, i8* %8661, align 1
  %8663 = icmp eq i8 %8662, 0
  %8664 = zext i1 %8663 to i8
  store i8 %8664, i8* %BRANCH_TAKEN, align 1
  %8665 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %8666 = select i1 %8663, i64 %8656, i64 %8658
  store i64 %8666, i64* %8665, align 8
  store %struct.Memory* %loadMem_4166ba, %struct.Memory** %MEMORY
  %loadBr_4166ba = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4166ba = icmp eq i8 %loadBr_4166ba, 1
  br i1 %cmpBr_4166ba, label %block_.L_416796, label %block_4166c0

block_4166c0:                                     ; preds = %block_.L_416690
  %loadMem_4166c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8668 = getelementptr inbounds %struct.GPR, %struct.GPR* %8667, i32 0, i32 33
  %8669 = getelementptr inbounds %struct.Reg, %struct.Reg* %8668, i32 0, i32 0
  %PC.i538 = bitcast %union.anon* %8669 to i64*
  %8670 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8671 = getelementptr inbounds %struct.GPR, %struct.GPR* %8670, i32 0, i32 1
  %8672 = getelementptr inbounds %struct.Reg, %struct.Reg* %8671, i32 0, i32 0
  %RAX.i539 = bitcast %union.anon* %8672 to i64*
  %8673 = load i64, i64* %PC.i538
  %8674 = add i64 %8673, 10
  store i64 %8674, i64* %PC.i538
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i539, align 8
  store %struct.Memory* %loadMem_4166c0, %struct.Memory** %MEMORY
  %loadMem_4166ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %8675 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8676 = getelementptr inbounds %struct.GPR, %struct.GPR* %8675, i32 0, i32 33
  %8677 = getelementptr inbounds %struct.Reg, %struct.Reg* %8676, i32 0, i32 0
  %PC.i535 = bitcast %union.anon* %8677 to i64*
  %8678 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8679 = getelementptr inbounds %struct.GPR, %struct.GPR* %8678, i32 0, i32 5
  %8680 = getelementptr inbounds %struct.Reg, %struct.Reg* %8679, i32 0, i32 0
  %RCX.i536 = bitcast %union.anon* %8680 to i64*
  %8681 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8682 = getelementptr inbounds %struct.GPR, %struct.GPR* %8681, i32 0, i32 15
  %8683 = getelementptr inbounds %struct.Reg, %struct.Reg* %8682, i32 0, i32 0
  %RBP.i537 = bitcast %union.anon* %8683 to i64*
  %8684 = load i64, i64* %RBP.i537
  %8685 = sub i64 %8684, 132
  %8686 = load i64, i64* %PC.i535
  %8687 = add i64 %8686, 7
  store i64 %8687, i64* %PC.i535
  %8688 = inttoptr i64 %8685 to i32*
  %8689 = load i32, i32* %8688
  %8690 = sext i32 %8689 to i64
  store i64 %8690, i64* %RCX.i536, align 8
  store %struct.Memory* %loadMem_4166ca, %struct.Memory** %MEMORY
  %loadMem_4166d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8691 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8692 = getelementptr inbounds %struct.GPR, %struct.GPR* %8691, i32 0, i32 33
  %8693 = getelementptr inbounds %struct.Reg, %struct.Reg* %8692, i32 0, i32 0
  %PC.i533 = bitcast %union.anon* %8693 to i64*
  %8694 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8695 = getelementptr inbounds %struct.GPR, %struct.GPR* %8694, i32 0, i32 5
  %8696 = getelementptr inbounds %struct.Reg, %struct.Reg* %8695, i32 0, i32 0
  %RCX.i534 = bitcast %union.anon* %8696 to i64*
  %8697 = load i64, i64* %RCX.i534
  %8698 = load i64, i64* %PC.i533
  %8699 = add i64 %8698, 7
  store i64 %8699, i64* %PC.i533
  %8700 = sext i64 %8697 to i128
  %8701 = and i128 %8700, -18446744073709551616
  %8702 = zext i64 %8697 to i128
  %8703 = or i128 %8701, %8702
  %8704 = mul i128 744, %8703
  %8705 = trunc i128 %8704 to i64
  store i64 %8705, i64* %RCX.i534, align 8
  %8706 = sext i64 %8705 to i128
  %8707 = icmp ne i128 %8706, %8704
  %8708 = zext i1 %8707 to i8
  %8709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8708, i8* %8709, align 1
  %8710 = trunc i128 %8704 to i32
  %8711 = and i32 %8710, 255
  %8712 = call i32 @llvm.ctpop.i32(i32 %8711)
  %8713 = trunc i32 %8712 to i8
  %8714 = and i8 %8713, 1
  %8715 = xor i8 %8714, 1
  %8716 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8715, i8* %8716, align 1
  %8717 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8717, align 1
  %8718 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8718, align 1
  %8719 = lshr i64 %8705, 63
  %8720 = trunc i64 %8719 to i8
  %8721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8720, i8* %8721, align 1
  %8722 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8708, i8* %8722, align 1
  store %struct.Memory* %loadMem_4166d1, %struct.Memory** %MEMORY
  %loadMem_4166d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8724 = getelementptr inbounds %struct.GPR, %struct.GPR* %8723, i32 0, i32 33
  %8725 = getelementptr inbounds %struct.Reg, %struct.Reg* %8724, i32 0, i32 0
  %PC.i530 = bitcast %union.anon* %8725 to i64*
  %8726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8727 = getelementptr inbounds %struct.GPR, %struct.GPR* %8726, i32 0, i32 1
  %8728 = getelementptr inbounds %struct.Reg, %struct.Reg* %8727, i32 0, i32 0
  %RAX.i531 = bitcast %union.anon* %8728 to i64*
  %8729 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8730 = getelementptr inbounds %struct.GPR, %struct.GPR* %8729, i32 0, i32 5
  %8731 = getelementptr inbounds %struct.Reg, %struct.Reg* %8730, i32 0, i32 0
  %RCX.i532 = bitcast %union.anon* %8731 to i64*
  %8732 = load i64, i64* %RAX.i531
  %8733 = load i64, i64* %RCX.i532
  %8734 = load i64, i64* %PC.i530
  %8735 = add i64 %8734, 3
  store i64 %8735, i64* %PC.i530
  %8736 = add i64 %8733, %8732
  store i64 %8736, i64* %RAX.i531, align 8
  %8737 = icmp ult i64 %8736, %8732
  %8738 = icmp ult i64 %8736, %8733
  %8739 = or i1 %8737, %8738
  %8740 = zext i1 %8739 to i8
  %8741 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8740, i8* %8741, align 1
  %8742 = trunc i64 %8736 to i32
  %8743 = and i32 %8742, 255
  %8744 = call i32 @llvm.ctpop.i32(i32 %8743)
  %8745 = trunc i32 %8744 to i8
  %8746 = and i8 %8745, 1
  %8747 = xor i8 %8746, 1
  %8748 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8747, i8* %8748, align 1
  %8749 = xor i64 %8733, %8732
  %8750 = xor i64 %8749, %8736
  %8751 = lshr i64 %8750, 4
  %8752 = trunc i64 %8751 to i8
  %8753 = and i8 %8752, 1
  %8754 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8753, i8* %8754, align 1
  %8755 = icmp eq i64 %8736, 0
  %8756 = zext i1 %8755 to i8
  %8757 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8756, i8* %8757, align 1
  %8758 = lshr i64 %8736, 63
  %8759 = trunc i64 %8758 to i8
  %8760 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8759, i8* %8760, align 1
  %8761 = lshr i64 %8732, 63
  %8762 = lshr i64 %8733, 63
  %8763 = xor i64 %8758, %8761
  %8764 = xor i64 %8758, %8762
  %8765 = add i64 %8763, %8764
  %8766 = icmp eq i64 %8765, 2
  %8767 = zext i1 %8766 to i8
  %8768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8767, i8* %8768, align 1
  store %struct.Memory* %loadMem_4166d8, %struct.Memory** %MEMORY
  %loadMem_4166db = load %struct.Memory*, %struct.Memory** %MEMORY
  %8769 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8770 = getelementptr inbounds %struct.GPR, %struct.GPR* %8769, i32 0, i32 33
  %8771 = getelementptr inbounds %struct.Reg, %struct.Reg* %8770, i32 0, i32 0
  %PC.i527 = bitcast %union.anon* %8771 to i64*
  %8772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8773 = getelementptr inbounds %struct.GPR, %struct.GPR* %8772, i32 0, i32 1
  %8774 = getelementptr inbounds %struct.Reg, %struct.Reg* %8773, i32 0, i32 0
  %RAX.i528 = bitcast %union.anon* %8774 to i64*
  %8775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8776 = getelementptr inbounds %struct.GPR, %struct.GPR* %8775, i32 0, i32 7
  %8777 = getelementptr inbounds %struct.Reg, %struct.Reg* %8776, i32 0, i32 0
  %RDX.i529 = bitcast %union.anon* %8777 to i64*
  %8778 = load i64, i64* %RAX.i528
  %8779 = add i64 %8778, 4
  %8780 = load i64, i64* %PC.i527
  %8781 = add i64 %8780, 3
  store i64 %8781, i64* %PC.i527
  %8782 = inttoptr i64 %8779 to i32*
  %8783 = load i32, i32* %8782
  %8784 = zext i32 %8783 to i64
  store i64 %8784, i64* %RDX.i529, align 8
  store %struct.Memory* %loadMem_4166db, %struct.Memory** %MEMORY
  %loadMem_4166de = load %struct.Memory*, %struct.Memory** %MEMORY
  %8785 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8786 = getelementptr inbounds %struct.GPR, %struct.GPR* %8785, i32 0, i32 33
  %8787 = getelementptr inbounds %struct.Reg, %struct.Reg* %8786, i32 0, i32 0
  %PC.i524 = bitcast %union.anon* %8787 to i64*
  %8788 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8789 = getelementptr inbounds %struct.GPR, %struct.GPR* %8788, i32 0, i32 1
  %8790 = getelementptr inbounds %struct.Reg, %struct.Reg* %8789, i32 0, i32 0
  %RAX.i525 = bitcast %union.anon* %8790 to i64*
  %8791 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8792 = getelementptr inbounds %struct.GPR, %struct.GPR* %8791, i32 0, i32 15
  %8793 = getelementptr inbounds %struct.Reg, %struct.Reg* %8792, i32 0, i32 0
  %RBP.i526 = bitcast %union.anon* %8793 to i64*
  %8794 = load i64, i64* %RBP.i526
  %8795 = sub i64 %8794, 72
  %8796 = load i64, i64* %PC.i524
  %8797 = add i64 %8796, 4
  store i64 %8797, i64* %PC.i524
  %8798 = inttoptr i64 %8795 to i64*
  %8799 = load i64, i64* %8798
  store i64 %8799, i64* %RAX.i525, align 8
  store %struct.Memory* %loadMem_4166de, %struct.Memory** %MEMORY
  %loadMem_4166e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8800 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8801 = getelementptr inbounds %struct.GPR, %struct.GPR* %8800, i32 0, i32 33
  %8802 = getelementptr inbounds %struct.Reg, %struct.Reg* %8801, i32 0, i32 0
  %PC.i521 = bitcast %union.anon* %8802 to i64*
  %8803 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8804 = getelementptr inbounds %struct.GPR, %struct.GPR* %8803, i32 0, i32 1
  %8805 = getelementptr inbounds %struct.Reg, %struct.Reg* %8804, i32 0, i32 0
  %RAX.i522 = bitcast %union.anon* %8805 to i64*
  %8806 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8807 = getelementptr inbounds %struct.GPR, %struct.GPR* %8806, i32 0, i32 7
  %8808 = getelementptr inbounds %struct.Reg, %struct.Reg* %8807, i32 0, i32 0
  %RDX.i523 = bitcast %union.anon* %8808 to i64*
  %8809 = load i64, i64* %RDX.i523
  %8810 = load i64, i64* %RAX.i522
  %8811 = load i64, i64* %PC.i521
  %8812 = add i64 %8811, 2
  store i64 %8812, i64* %PC.i521
  %8813 = trunc i64 %8809 to i32
  %8814 = inttoptr i64 %8810 to i32*
  %8815 = load i32, i32* %8814
  %8816 = add i32 %8815, %8813
  %8817 = zext i32 %8816 to i64
  store i64 %8817, i64* %RDX.i523, align 8
  %8818 = icmp ult i32 %8816, %8813
  %8819 = icmp ult i32 %8816, %8815
  %8820 = or i1 %8818, %8819
  %8821 = zext i1 %8820 to i8
  %8822 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8821, i8* %8822, align 1
  %8823 = and i32 %8816, 255
  %8824 = call i32 @llvm.ctpop.i32(i32 %8823)
  %8825 = trunc i32 %8824 to i8
  %8826 = and i8 %8825, 1
  %8827 = xor i8 %8826, 1
  %8828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8827, i8* %8828, align 1
  %8829 = xor i32 %8815, %8813
  %8830 = xor i32 %8829, %8816
  %8831 = lshr i32 %8830, 4
  %8832 = trunc i32 %8831 to i8
  %8833 = and i8 %8832, 1
  %8834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8833, i8* %8834, align 1
  %8835 = icmp eq i32 %8816, 0
  %8836 = zext i1 %8835 to i8
  %8837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8836, i8* %8837, align 1
  %8838 = lshr i32 %8816, 31
  %8839 = trunc i32 %8838 to i8
  %8840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8839, i8* %8840, align 1
  %8841 = lshr i32 %8813, 31
  %8842 = lshr i32 %8815, 31
  %8843 = xor i32 %8838, %8841
  %8844 = xor i32 %8838, %8842
  %8845 = add i32 %8843, %8844
  %8846 = icmp eq i32 %8845, 2
  %8847 = zext i1 %8846 to i8
  %8848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8847, i8* %8848, align 1
  store %struct.Memory* %loadMem_4166e2, %struct.Memory** %MEMORY
  %loadMem_4166e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8849 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8850 = getelementptr inbounds %struct.GPR, %struct.GPR* %8849, i32 0, i32 33
  %8851 = getelementptr inbounds %struct.Reg, %struct.Reg* %8850, i32 0, i32 0
  %PC.i518 = bitcast %union.anon* %8851 to i64*
  %8852 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8853 = getelementptr inbounds %struct.GPR, %struct.GPR* %8852, i32 0, i32 7
  %8854 = getelementptr inbounds %struct.Reg, %struct.Reg* %8853, i32 0, i32 0
  %EDX.i519 = bitcast %union.anon* %8854 to i32*
  %8855 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8856 = getelementptr inbounds %struct.GPR, %struct.GPR* %8855, i32 0, i32 1
  %8857 = getelementptr inbounds %struct.Reg, %struct.Reg* %8856, i32 0, i32 0
  %RAX.i520 = bitcast %union.anon* %8857 to i64*
  %8858 = load i64, i64* %RAX.i520
  %8859 = load i32, i32* %EDX.i519
  %8860 = zext i32 %8859 to i64
  %8861 = load i64, i64* %PC.i518
  %8862 = add i64 %8861, 2
  store i64 %8862, i64* %PC.i518
  %8863 = inttoptr i64 %8858 to i32*
  store i32 %8859, i32* %8863
  store %struct.Memory* %loadMem_4166e4, %struct.Memory** %MEMORY
  %loadMem_4166e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8864 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8865 = getelementptr inbounds %struct.GPR, %struct.GPR* %8864, i32 0, i32 33
  %8866 = getelementptr inbounds %struct.Reg, %struct.Reg* %8865, i32 0, i32 0
  %PC.i516 = bitcast %union.anon* %8866 to i64*
  %8867 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8868 = getelementptr inbounds %struct.GPR, %struct.GPR* %8867, i32 0, i32 15
  %8869 = getelementptr inbounds %struct.Reg, %struct.Reg* %8868, i32 0, i32 0
  %RBP.i517 = bitcast %union.anon* %8869 to i64*
  %8870 = load i64, i64* %RBP.i517
  %8871 = sub i64 %8870, 136
  %8872 = load i64, i64* %PC.i516
  %8873 = add i64 %8872, 10
  store i64 %8873, i64* %PC.i516
  %8874 = inttoptr i64 %8871 to i32*
  store i32 0, i32* %8874
  store %struct.Memory* %loadMem_4166e6, %struct.Memory** %MEMORY
  br label %block_.L_4166f0

block_.L_4166f0:                                  ; preds = %block_.L_41677d, %block_4166c0
  %loadMem_4166f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8876 = getelementptr inbounds %struct.GPR, %struct.GPR* %8875, i32 0, i32 33
  %8877 = getelementptr inbounds %struct.Reg, %struct.Reg* %8876, i32 0, i32 0
  %PC.i514 = bitcast %union.anon* %8877 to i64*
  %8878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8879 = getelementptr inbounds %struct.GPR, %struct.GPR* %8878, i32 0, i32 1
  %8880 = getelementptr inbounds %struct.Reg, %struct.Reg* %8879, i32 0, i32 0
  %RAX.i515 = bitcast %union.anon* %8880 to i64*
  %8881 = load i64, i64* %PC.i514
  %8882 = add i64 %8881, 10
  store i64 %8882, i64* %PC.i514
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i515, align 8
  store %struct.Memory* %loadMem_4166f0, %struct.Memory** %MEMORY
  %loadMem_4166fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %8883 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8884 = getelementptr inbounds %struct.GPR, %struct.GPR* %8883, i32 0, i32 33
  %8885 = getelementptr inbounds %struct.Reg, %struct.Reg* %8884, i32 0, i32 0
  %PC.i511 = bitcast %union.anon* %8885 to i64*
  %8886 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8887 = getelementptr inbounds %struct.GPR, %struct.GPR* %8886, i32 0, i32 5
  %8888 = getelementptr inbounds %struct.Reg, %struct.Reg* %8887, i32 0, i32 0
  %RCX.i512 = bitcast %union.anon* %8888 to i64*
  %8889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8890 = getelementptr inbounds %struct.GPR, %struct.GPR* %8889, i32 0, i32 15
  %8891 = getelementptr inbounds %struct.Reg, %struct.Reg* %8890, i32 0, i32 0
  %RBP.i513 = bitcast %union.anon* %8891 to i64*
  %8892 = load i64, i64* %RBP.i513
  %8893 = sub i64 %8892, 136
  %8894 = load i64, i64* %PC.i511
  %8895 = add i64 %8894, 6
  store i64 %8895, i64* %PC.i511
  %8896 = inttoptr i64 %8893 to i32*
  %8897 = load i32, i32* %8896
  %8898 = zext i32 %8897 to i64
  store i64 %8898, i64* %RCX.i512, align 8
  store %struct.Memory* %loadMem_4166fa, %struct.Memory** %MEMORY
  %loadMem_416700 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8899 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8900 = getelementptr inbounds %struct.GPR, %struct.GPR* %8899, i32 0, i32 33
  %8901 = getelementptr inbounds %struct.Reg, %struct.Reg* %8900, i32 0, i32 0
  %PC.i508 = bitcast %union.anon* %8901 to i64*
  %8902 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8903 = getelementptr inbounds %struct.GPR, %struct.GPR* %8902, i32 0, i32 7
  %8904 = getelementptr inbounds %struct.Reg, %struct.Reg* %8903, i32 0, i32 0
  %RDX.i509 = bitcast %union.anon* %8904 to i64*
  %8905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8906 = getelementptr inbounds %struct.GPR, %struct.GPR* %8905, i32 0, i32 15
  %8907 = getelementptr inbounds %struct.Reg, %struct.Reg* %8906, i32 0, i32 0
  %RBP.i510 = bitcast %union.anon* %8907 to i64*
  %8908 = load i64, i64* %RBP.i510
  %8909 = sub i64 %8908, 132
  %8910 = load i64, i64* %PC.i508
  %8911 = add i64 %8910, 7
  store i64 %8911, i64* %PC.i508
  %8912 = inttoptr i64 %8909 to i32*
  %8913 = load i32, i32* %8912
  %8914 = sext i32 %8913 to i64
  store i64 %8914, i64* %RDX.i509, align 8
  store %struct.Memory* %loadMem_416700, %struct.Memory** %MEMORY
  %loadMem_416707 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8915 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8916 = getelementptr inbounds %struct.GPR, %struct.GPR* %8915, i32 0, i32 33
  %8917 = getelementptr inbounds %struct.Reg, %struct.Reg* %8916, i32 0, i32 0
  %PC.i506 = bitcast %union.anon* %8917 to i64*
  %8918 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8919 = getelementptr inbounds %struct.GPR, %struct.GPR* %8918, i32 0, i32 7
  %8920 = getelementptr inbounds %struct.Reg, %struct.Reg* %8919, i32 0, i32 0
  %RDX.i507 = bitcast %union.anon* %8920 to i64*
  %8921 = load i64, i64* %RDX.i507
  %8922 = load i64, i64* %PC.i506
  %8923 = add i64 %8922, 7
  store i64 %8923, i64* %PC.i506
  %8924 = sext i64 %8921 to i128
  %8925 = and i128 %8924, -18446744073709551616
  %8926 = zext i64 %8921 to i128
  %8927 = or i128 %8925, %8926
  %8928 = mul i128 744, %8927
  %8929 = trunc i128 %8928 to i64
  store i64 %8929, i64* %RDX.i507, align 8
  %8930 = sext i64 %8929 to i128
  %8931 = icmp ne i128 %8930, %8928
  %8932 = zext i1 %8931 to i8
  %8933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8932, i8* %8933, align 1
  %8934 = trunc i128 %8928 to i32
  %8935 = and i32 %8934, 255
  %8936 = call i32 @llvm.ctpop.i32(i32 %8935)
  %8937 = trunc i32 %8936 to i8
  %8938 = and i8 %8937, 1
  %8939 = xor i8 %8938, 1
  %8940 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8939, i8* %8940, align 1
  %8941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %8941, align 1
  %8942 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %8942, align 1
  %8943 = lshr i64 %8929, 63
  %8944 = trunc i64 %8943 to i8
  %8945 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8944, i8* %8945, align 1
  %8946 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8932, i8* %8946, align 1
  store %struct.Memory* %loadMem_416707, %struct.Memory** %MEMORY
  %loadMem_41670e = load %struct.Memory*, %struct.Memory** %MEMORY
  %8947 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8948 = getelementptr inbounds %struct.GPR, %struct.GPR* %8947, i32 0, i32 33
  %8949 = getelementptr inbounds %struct.Reg, %struct.Reg* %8948, i32 0, i32 0
  %PC.i503 = bitcast %union.anon* %8949 to i64*
  %8950 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8951 = getelementptr inbounds %struct.GPR, %struct.GPR* %8950, i32 0, i32 1
  %8952 = getelementptr inbounds %struct.Reg, %struct.Reg* %8951, i32 0, i32 0
  %RAX.i504 = bitcast %union.anon* %8952 to i64*
  %8953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8954 = getelementptr inbounds %struct.GPR, %struct.GPR* %8953, i32 0, i32 7
  %8955 = getelementptr inbounds %struct.Reg, %struct.Reg* %8954, i32 0, i32 0
  %RDX.i505 = bitcast %union.anon* %8955 to i64*
  %8956 = load i64, i64* %RAX.i504
  %8957 = load i64, i64* %RDX.i505
  %8958 = load i64, i64* %PC.i503
  %8959 = add i64 %8958, 3
  store i64 %8959, i64* %PC.i503
  %8960 = add i64 %8957, %8956
  store i64 %8960, i64* %RAX.i504, align 8
  %8961 = icmp ult i64 %8960, %8956
  %8962 = icmp ult i64 %8960, %8957
  %8963 = or i1 %8961, %8962
  %8964 = zext i1 %8963 to i8
  %8965 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %8964, i8* %8965, align 1
  %8966 = trunc i64 %8960 to i32
  %8967 = and i32 %8966, 255
  %8968 = call i32 @llvm.ctpop.i32(i32 %8967)
  %8969 = trunc i32 %8968 to i8
  %8970 = and i8 %8969, 1
  %8971 = xor i8 %8970, 1
  %8972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %8971, i8* %8972, align 1
  %8973 = xor i64 %8957, %8956
  %8974 = xor i64 %8973, %8960
  %8975 = lshr i64 %8974, 4
  %8976 = trunc i64 %8975 to i8
  %8977 = and i8 %8976, 1
  %8978 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %8977, i8* %8978, align 1
  %8979 = icmp eq i64 %8960, 0
  %8980 = zext i1 %8979 to i8
  %8981 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %8980, i8* %8981, align 1
  %8982 = lshr i64 %8960, 63
  %8983 = trunc i64 %8982 to i8
  %8984 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %8983, i8* %8984, align 1
  %8985 = lshr i64 %8956, 63
  %8986 = lshr i64 %8957, 63
  %8987 = xor i64 %8982, %8985
  %8988 = xor i64 %8982, %8986
  %8989 = add i64 %8987, %8988
  %8990 = icmp eq i64 %8989, 2
  %8991 = zext i1 %8990 to i8
  %8992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %8991, i8* %8992, align 1
  store %struct.Memory* %loadMem_41670e, %struct.Memory** %MEMORY
  %loadMem_416711 = load %struct.Memory*, %struct.Memory** %MEMORY
  %8993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8994 = getelementptr inbounds %struct.GPR, %struct.GPR* %8993, i32 0, i32 33
  %8995 = getelementptr inbounds %struct.Reg, %struct.Reg* %8994, i32 0, i32 0
  %PC.i500 = bitcast %union.anon* %8995 to i64*
  %8996 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %8997 = getelementptr inbounds %struct.GPR, %struct.GPR* %8996, i32 0, i32 5
  %8998 = getelementptr inbounds %struct.Reg, %struct.Reg* %8997, i32 0, i32 0
  %ECX.i501 = bitcast %union.anon* %8998 to i32*
  %8999 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9000 = getelementptr inbounds %struct.GPR, %struct.GPR* %8999, i32 0, i32 1
  %9001 = getelementptr inbounds %struct.Reg, %struct.Reg* %9000, i32 0, i32 0
  %RAX.i502 = bitcast %union.anon* %9001 to i64*
  %9002 = load i32, i32* %ECX.i501
  %9003 = zext i32 %9002 to i64
  %9004 = load i64, i64* %RAX.i502
  %9005 = add i64 %9004, 96
  %9006 = load i64, i64* %PC.i500
  %9007 = add i64 %9006, 3
  store i64 %9007, i64* %PC.i500
  %9008 = inttoptr i64 %9005 to i32*
  %9009 = load i32, i32* %9008
  %9010 = sub i32 %9002, %9009
  %9011 = icmp ult i32 %9002, %9009
  %9012 = zext i1 %9011 to i8
  %9013 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9012, i8* %9013, align 1
  %9014 = and i32 %9010, 255
  %9015 = call i32 @llvm.ctpop.i32(i32 %9014)
  %9016 = trunc i32 %9015 to i8
  %9017 = and i8 %9016, 1
  %9018 = xor i8 %9017, 1
  %9019 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9018, i8* %9019, align 1
  %9020 = xor i32 %9009, %9002
  %9021 = xor i32 %9020, %9010
  %9022 = lshr i32 %9021, 4
  %9023 = trunc i32 %9022 to i8
  %9024 = and i8 %9023, 1
  %9025 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9024, i8* %9025, align 1
  %9026 = icmp eq i32 %9010, 0
  %9027 = zext i1 %9026 to i8
  %9028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9027, i8* %9028, align 1
  %9029 = lshr i32 %9010, 31
  %9030 = trunc i32 %9029 to i8
  %9031 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9030, i8* %9031, align 1
  %9032 = lshr i32 %9002, 31
  %9033 = lshr i32 %9009, 31
  %9034 = xor i32 %9033, %9032
  %9035 = xor i32 %9029, %9032
  %9036 = add i32 %9035, %9034
  %9037 = icmp eq i32 %9036, 2
  %9038 = zext i1 %9037 to i8
  %9039 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9038, i8* %9039, align 1
  store %struct.Memory* %loadMem_416711, %struct.Memory** %MEMORY
  %loadMem_416714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9040 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9041 = getelementptr inbounds %struct.GPR, %struct.GPR* %9040, i32 0, i32 33
  %9042 = getelementptr inbounds %struct.Reg, %struct.Reg* %9041, i32 0, i32 0
  %PC.i499 = bitcast %union.anon* %9042 to i64*
  %9043 = load i64, i64* %PC.i499
  %9044 = add i64 %9043, 125
  %9045 = load i64, i64* %PC.i499
  %9046 = add i64 %9045, 6
  %9047 = load i64, i64* %PC.i499
  %9048 = add i64 %9047, 6
  store i64 %9048, i64* %PC.i499
  %9049 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %9050 = load i8, i8* %9049, align 1
  %9051 = icmp ne i8 %9050, 0
  %9052 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %9053 = load i8, i8* %9052, align 1
  %9054 = icmp ne i8 %9053, 0
  %9055 = xor i1 %9051, %9054
  %9056 = xor i1 %9055, true
  %9057 = zext i1 %9056 to i8
  store i8 %9057, i8* %BRANCH_TAKEN, align 1
  %9058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9059 = select i1 %9055, i64 %9046, i64 %9044
  store i64 %9059, i64* %9058, align 8
  store %struct.Memory* %loadMem_416714, %struct.Memory** %MEMORY
  %loadBr_416714 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416714 = icmp eq i8 %loadBr_416714, 1
  br i1 %cmpBr_416714, label %block_.L_416791, label %block_41671a

block_41671a:                                     ; preds = %block_.L_4166f0
  %loadMem_41671a = load %struct.Memory*, %struct.Memory** %MEMORY
  %9060 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9061 = getelementptr inbounds %struct.GPR, %struct.GPR* %9060, i32 0, i32 33
  %9062 = getelementptr inbounds %struct.Reg, %struct.Reg* %9061, i32 0, i32 0
  %PC.i497 = bitcast %union.anon* %9062 to i64*
  %9063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9064 = getelementptr inbounds %struct.GPR, %struct.GPR* %9063, i32 0, i32 1
  %9065 = getelementptr inbounds %struct.Reg, %struct.Reg* %9064, i32 0, i32 0
  %RAX.i498 = bitcast %union.anon* %9065 to i64*
  %9066 = load i64, i64* %PC.i497
  %9067 = add i64 %9066, 10
  store i64 %9067, i64* %PC.i497
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i498, align 8
  store %struct.Memory* %loadMem_41671a, %struct.Memory** %MEMORY
  %loadMem_416724 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9068 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9069 = getelementptr inbounds %struct.GPR, %struct.GPR* %9068, i32 0, i32 33
  %9070 = getelementptr inbounds %struct.Reg, %struct.Reg* %9069, i32 0, i32 0
  %PC.i494 = bitcast %union.anon* %9070 to i64*
  %9071 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9072 = getelementptr inbounds %struct.GPR, %struct.GPR* %9071, i32 0, i32 5
  %9073 = getelementptr inbounds %struct.Reg, %struct.Reg* %9072, i32 0, i32 0
  %RCX.i495 = bitcast %union.anon* %9073 to i64*
  %9074 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9075 = getelementptr inbounds %struct.GPR, %struct.GPR* %9074, i32 0, i32 15
  %9076 = getelementptr inbounds %struct.Reg, %struct.Reg* %9075, i32 0, i32 0
  %RBP.i496 = bitcast %union.anon* %9076 to i64*
  %9077 = load i64, i64* %RBP.i496
  %9078 = sub i64 %9077, 132
  %9079 = load i64, i64* %PC.i494
  %9080 = add i64 %9079, 7
  store i64 %9080, i64* %PC.i494
  %9081 = inttoptr i64 %9078 to i32*
  %9082 = load i32, i32* %9081
  %9083 = sext i32 %9082 to i64
  store i64 %9083, i64* %RCX.i495, align 8
  store %struct.Memory* %loadMem_416724, %struct.Memory** %MEMORY
  %loadMem_41672b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9084 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9085 = getelementptr inbounds %struct.GPR, %struct.GPR* %9084, i32 0, i32 33
  %9086 = getelementptr inbounds %struct.Reg, %struct.Reg* %9085, i32 0, i32 0
  %PC.i492 = bitcast %union.anon* %9086 to i64*
  %9087 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9088 = getelementptr inbounds %struct.GPR, %struct.GPR* %9087, i32 0, i32 5
  %9089 = getelementptr inbounds %struct.Reg, %struct.Reg* %9088, i32 0, i32 0
  %RCX.i493 = bitcast %union.anon* %9089 to i64*
  %9090 = load i64, i64* %RCX.i493
  %9091 = load i64, i64* %PC.i492
  %9092 = add i64 %9091, 7
  store i64 %9092, i64* %PC.i492
  %9093 = sext i64 %9090 to i128
  %9094 = and i128 %9093, -18446744073709551616
  %9095 = zext i64 %9090 to i128
  %9096 = or i128 %9094, %9095
  %9097 = mul i128 744, %9096
  %9098 = trunc i128 %9097 to i64
  store i64 %9098, i64* %RCX.i493, align 8
  %9099 = sext i64 %9098 to i128
  %9100 = icmp ne i128 %9099, %9097
  %9101 = zext i1 %9100 to i8
  %9102 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9101, i8* %9102, align 1
  %9103 = trunc i128 %9097 to i32
  %9104 = and i32 %9103, 255
  %9105 = call i32 @llvm.ctpop.i32(i32 %9104)
  %9106 = trunc i32 %9105 to i8
  %9107 = and i8 %9106, 1
  %9108 = xor i8 %9107, 1
  %9109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9108, i8* %9109, align 1
  %9110 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9110, align 1
  %9111 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9111, align 1
  %9112 = lshr i64 %9098, 63
  %9113 = trunc i64 %9112 to i8
  %9114 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9113, i8* %9114, align 1
  %9115 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9101, i8* %9115, align 1
  store %struct.Memory* %loadMem_41672b, %struct.Memory** %MEMORY
  %loadMem_416732 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9117 = getelementptr inbounds %struct.GPR, %struct.GPR* %9116, i32 0, i32 33
  %9118 = getelementptr inbounds %struct.Reg, %struct.Reg* %9117, i32 0, i32 0
  %PC.i489 = bitcast %union.anon* %9118 to i64*
  %9119 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9120 = getelementptr inbounds %struct.GPR, %struct.GPR* %9119, i32 0, i32 1
  %9121 = getelementptr inbounds %struct.Reg, %struct.Reg* %9120, i32 0, i32 0
  %RAX.i490 = bitcast %union.anon* %9121 to i64*
  %9122 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9123 = getelementptr inbounds %struct.GPR, %struct.GPR* %9122, i32 0, i32 7
  %9124 = getelementptr inbounds %struct.Reg, %struct.Reg* %9123, i32 0, i32 0
  %RDX.i491 = bitcast %union.anon* %9124 to i64*
  %9125 = load i64, i64* %RAX.i490
  %9126 = load i64, i64* %PC.i489
  %9127 = add i64 %9126, 3
  store i64 %9127, i64* %PC.i489
  store i64 %9125, i64* %RDX.i491, align 8
  store %struct.Memory* %loadMem_416732, %struct.Memory** %MEMORY
  %loadMem_416735 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9128 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9129 = getelementptr inbounds %struct.GPR, %struct.GPR* %9128, i32 0, i32 33
  %9130 = getelementptr inbounds %struct.Reg, %struct.Reg* %9129, i32 0, i32 0
  %PC.i486 = bitcast %union.anon* %9130 to i64*
  %9131 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9132 = getelementptr inbounds %struct.GPR, %struct.GPR* %9131, i32 0, i32 5
  %9133 = getelementptr inbounds %struct.Reg, %struct.Reg* %9132, i32 0, i32 0
  %RCX.i487 = bitcast %union.anon* %9133 to i64*
  %9134 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9135 = getelementptr inbounds %struct.GPR, %struct.GPR* %9134, i32 0, i32 7
  %9136 = getelementptr inbounds %struct.Reg, %struct.Reg* %9135, i32 0, i32 0
  %RDX.i488 = bitcast %union.anon* %9136 to i64*
  %9137 = load i64, i64* %RDX.i488
  %9138 = load i64, i64* %RCX.i487
  %9139 = load i64, i64* %PC.i486
  %9140 = add i64 %9139, 3
  store i64 %9140, i64* %PC.i486
  %9141 = add i64 %9138, %9137
  store i64 %9141, i64* %RDX.i488, align 8
  %9142 = icmp ult i64 %9141, %9137
  %9143 = icmp ult i64 %9141, %9138
  %9144 = or i1 %9142, %9143
  %9145 = zext i1 %9144 to i8
  %9146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9145, i8* %9146, align 1
  %9147 = trunc i64 %9141 to i32
  %9148 = and i32 %9147, 255
  %9149 = call i32 @llvm.ctpop.i32(i32 %9148)
  %9150 = trunc i32 %9149 to i8
  %9151 = and i8 %9150, 1
  %9152 = xor i8 %9151, 1
  %9153 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9152, i8* %9153, align 1
  %9154 = xor i64 %9138, %9137
  %9155 = xor i64 %9154, %9141
  %9156 = lshr i64 %9155, 4
  %9157 = trunc i64 %9156 to i8
  %9158 = and i8 %9157, 1
  %9159 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9158, i8* %9159, align 1
  %9160 = icmp eq i64 %9141, 0
  %9161 = zext i1 %9160 to i8
  %9162 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9161, i8* %9162, align 1
  %9163 = lshr i64 %9141, 63
  %9164 = trunc i64 %9163 to i8
  %9165 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9164, i8* %9165, align 1
  %9166 = lshr i64 %9137, 63
  %9167 = lshr i64 %9138, 63
  %9168 = xor i64 %9163, %9166
  %9169 = xor i64 %9163, %9167
  %9170 = add i64 %9168, %9169
  %9171 = icmp eq i64 %9170, 2
  %9172 = zext i1 %9171 to i8
  %9173 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9172, i8* %9173, align 1
  store %struct.Memory* %loadMem_416735, %struct.Memory** %MEMORY
  %loadMem_416738 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9174 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9175 = getelementptr inbounds %struct.GPR, %struct.GPR* %9174, i32 0, i32 33
  %9176 = getelementptr inbounds %struct.Reg, %struct.Reg* %9175, i32 0, i32 0
  %PC.i483 = bitcast %union.anon* %9176 to i64*
  %9177 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9178 = getelementptr inbounds %struct.GPR, %struct.GPR* %9177, i32 0, i32 5
  %9179 = getelementptr inbounds %struct.Reg, %struct.Reg* %9178, i32 0, i32 0
  %RCX.i484 = bitcast %union.anon* %9179 to i64*
  %9180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9181 = getelementptr inbounds %struct.GPR, %struct.GPR* %9180, i32 0, i32 15
  %9182 = getelementptr inbounds %struct.Reg, %struct.Reg* %9181, i32 0, i32 0
  %RBP.i485 = bitcast %union.anon* %9182 to i64*
  %9183 = load i64, i64* %RBP.i485
  %9184 = sub i64 %9183, 136
  %9185 = load i64, i64* %PC.i483
  %9186 = add i64 %9185, 7
  store i64 %9186, i64* %PC.i483
  %9187 = inttoptr i64 %9184 to i32*
  %9188 = load i32, i32* %9187
  %9189 = sext i32 %9188 to i64
  store i64 %9189, i64* %RCX.i484, align 8
  store %struct.Memory* %loadMem_416738, %struct.Memory** %MEMORY
  %loadMem_41673f = load %struct.Memory*, %struct.Memory** %MEMORY
  %9190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9191 = getelementptr inbounds %struct.GPR, %struct.GPR* %9190, i32 0, i32 33
  %9192 = getelementptr inbounds %struct.Reg, %struct.Reg* %9191, i32 0, i32 0
  %PC.i480 = bitcast %union.anon* %9192 to i64*
  %9193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9194 = getelementptr inbounds %struct.GPR, %struct.GPR* %9193, i32 0, i32 5
  %9195 = getelementptr inbounds %struct.Reg, %struct.Reg* %9194, i32 0, i32 0
  %RCX.i481 = bitcast %union.anon* %9195 to i64*
  %9196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9197 = getelementptr inbounds %struct.GPR, %struct.GPR* %9196, i32 0, i32 7
  %9198 = getelementptr inbounds %struct.Reg, %struct.Reg* %9197, i32 0, i32 0
  %RDX.i482 = bitcast %union.anon* %9198 to i64*
  %9199 = load i64, i64* %RDX.i482
  %9200 = load i64, i64* %RCX.i481
  %9201 = mul i64 %9200, 4
  %9202 = add i64 %9199, 100
  %9203 = add i64 %9202, %9201
  %9204 = load i64, i64* %PC.i480
  %9205 = add i64 %9204, 5
  store i64 %9205, i64* %PC.i480
  %9206 = inttoptr i64 %9203 to i32*
  %9207 = load i32, i32* %9206
  %9208 = sext i32 %9207 to i64
  store i64 %9208, i64* %RCX.i481, align 8
  store %struct.Memory* %loadMem_41673f, %struct.Memory** %MEMORY
  %loadMem_416744 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9209 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9210 = getelementptr inbounds %struct.GPR, %struct.GPR* %9209, i32 0, i32 33
  %9211 = getelementptr inbounds %struct.Reg, %struct.Reg* %9210, i32 0, i32 0
  %PC.i478 = bitcast %union.anon* %9211 to i64*
  %9212 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9213 = getelementptr inbounds %struct.GPR, %struct.GPR* %9212, i32 0, i32 5
  %9214 = getelementptr inbounds %struct.Reg, %struct.Reg* %9213, i32 0, i32 0
  %RCX.i479 = bitcast %union.anon* %9214 to i64*
  %9215 = load i64, i64* %RCX.i479
  %9216 = load i64, i64* %PC.i478
  %9217 = add i64 %9216, 7
  store i64 %9217, i64* %PC.i478
  %9218 = sext i64 %9215 to i128
  %9219 = and i128 %9218, -18446744073709551616
  %9220 = zext i64 %9215 to i128
  %9221 = or i128 %9219, %9220
  %9222 = mul i128 744, %9221
  %9223 = trunc i128 %9222 to i64
  store i64 %9223, i64* %RCX.i479, align 8
  %9224 = sext i64 %9223 to i128
  %9225 = icmp ne i128 %9224, %9222
  %9226 = zext i1 %9225 to i8
  %9227 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9226, i8* %9227, align 1
  %9228 = trunc i128 %9222 to i32
  %9229 = and i32 %9228, 255
  %9230 = call i32 @llvm.ctpop.i32(i32 %9229)
  %9231 = trunc i32 %9230 to i8
  %9232 = and i8 %9231, 1
  %9233 = xor i8 %9232, 1
  %9234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9233, i8* %9234, align 1
  %9235 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9235, align 1
  %9236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9236, align 1
  %9237 = lshr i64 %9223, 63
  %9238 = trunc i64 %9237 to i8
  %9239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9238, i8* %9239, align 1
  %9240 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9226, i8* %9240, align 1
  store %struct.Memory* %loadMem_416744, %struct.Memory** %MEMORY
  %loadMem_41674b = load %struct.Memory*, %struct.Memory** %MEMORY
  %9241 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9242 = getelementptr inbounds %struct.GPR, %struct.GPR* %9241, i32 0, i32 33
  %9243 = getelementptr inbounds %struct.Reg, %struct.Reg* %9242, i32 0, i32 0
  %PC.i475 = bitcast %union.anon* %9243 to i64*
  %9244 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9245 = getelementptr inbounds %struct.GPR, %struct.GPR* %9244, i32 0, i32 1
  %9246 = getelementptr inbounds %struct.Reg, %struct.Reg* %9245, i32 0, i32 0
  %RAX.i476 = bitcast %union.anon* %9246 to i64*
  %9247 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9248 = getelementptr inbounds %struct.GPR, %struct.GPR* %9247, i32 0, i32 5
  %9249 = getelementptr inbounds %struct.Reg, %struct.Reg* %9248, i32 0, i32 0
  %RCX.i477 = bitcast %union.anon* %9249 to i64*
  %9250 = load i64, i64* %RAX.i476
  %9251 = load i64, i64* %RCX.i477
  %9252 = load i64, i64* %PC.i475
  %9253 = add i64 %9252, 3
  store i64 %9253, i64* %PC.i475
  %9254 = add i64 %9251, %9250
  store i64 %9254, i64* %RAX.i476, align 8
  %9255 = icmp ult i64 %9254, %9250
  %9256 = icmp ult i64 %9254, %9251
  %9257 = or i1 %9255, %9256
  %9258 = zext i1 %9257 to i8
  %9259 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9258, i8* %9259, align 1
  %9260 = trunc i64 %9254 to i32
  %9261 = and i32 %9260, 255
  %9262 = call i32 @llvm.ctpop.i32(i32 %9261)
  %9263 = trunc i32 %9262 to i8
  %9264 = and i8 %9263, 1
  %9265 = xor i8 %9264, 1
  %9266 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9265, i8* %9266, align 1
  %9267 = xor i64 %9251, %9250
  %9268 = xor i64 %9267, %9254
  %9269 = lshr i64 %9268, 4
  %9270 = trunc i64 %9269 to i8
  %9271 = and i8 %9270, 1
  %9272 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9271, i8* %9272, align 1
  %9273 = icmp eq i64 %9254, 0
  %9274 = zext i1 %9273 to i8
  %9275 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9274, i8* %9275, align 1
  %9276 = lshr i64 %9254, 63
  %9277 = trunc i64 %9276 to i8
  %9278 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9277, i8* %9278, align 1
  %9279 = lshr i64 %9250, 63
  %9280 = lshr i64 %9251, 63
  %9281 = xor i64 %9276, %9279
  %9282 = xor i64 %9276, %9280
  %9283 = add i64 %9281, %9282
  %9284 = icmp eq i64 %9283, 2
  %9285 = zext i1 %9284 to i8
  %9286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9285, i8* %9286, align 1
  store %struct.Memory* %loadMem_41674b, %struct.Memory** %MEMORY
  %loadMem_41674e = load %struct.Memory*, %struct.Memory** %MEMORY
  %9287 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9288 = getelementptr inbounds %struct.GPR, %struct.GPR* %9287, i32 0, i32 33
  %9289 = getelementptr inbounds %struct.Reg, %struct.Reg* %9288, i32 0, i32 0
  %PC.i472 = bitcast %union.anon* %9289 to i64*
  %9290 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9291 = getelementptr inbounds %struct.GPR, %struct.GPR* %9290, i32 0, i32 1
  %9292 = getelementptr inbounds %struct.Reg, %struct.Reg* %9291, i32 0, i32 0
  %RAX.i473 = bitcast %union.anon* %9292 to i64*
  %9293 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9294 = getelementptr inbounds %struct.GPR, %struct.GPR* %9293, i32 0, i32 15
  %9295 = getelementptr inbounds %struct.Reg, %struct.Reg* %9294, i32 0, i32 0
  %RBP.i474 = bitcast %union.anon* %9295 to i64*
  %9296 = load i64, i64* %RBP.i474
  %9297 = sub i64 %9296, 144
  %9298 = load i64, i64* %RAX.i473
  %9299 = load i64, i64* %PC.i472
  %9300 = add i64 %9299, 7
  store i64 %9300, i64* %PC.i472
  %9301 = inttoptr i64 %9297 to i64*
  store i64 %9298, i64* %9301
  store %struct.Memory* %loadMem_41674e, %struct.Memory** %MEMORY
  %loadMem_416755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9302 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9303 = getelementptr inbounds %struct.GPR, %struct.GPR* %9302, i32 0, i32 33
  %9304 = getelementptr inbounds %struct.Reg, %struct.Reg* %9303, i32 0, i32 0
  %PC.i469 = bitcast %union.anon* %9304 to i64*
  %9305 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9306 = getelementptr inbounds %struct.GPR, %struct.GPR* %9305, i32 0, i32 1
  %9307 = getelementptr inbounds %struct.Reg, %struct.Reg* %9306, i32 0, i32 0
  %RAX.i470 = bitcast %union.anon* %9307 to i64*
  %9308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9309 = getelementptr inbounds %struct.GPR, %struct.GPR* %9308, i32 0, i32 15
  %9310 = getelementptr inbounds %struct.Reg, %struct.Reg* %9309, i32 0, i32 0
  %RBP.i471 = bitcast %union.anon* %9310 to i64*
  %9311 = load i64, i64* %RBP.i471
  %9312 = sub i64 %9311, 144
  %9313 = load i64, i64* %PC.i469
  %9314 = add i64 %9313, 7
  store i64 %9314, i64* %PC.i469
  %9315 = inttoptr i64 %9312 to i64*
  %9316 = load i64, i64* %9315
  store i64 %9316, i64* %RAX.i470, align 8
  store %struct.Memory* %loadMem_416755, %struct.Memory** %MEMORY
  %loadMem_41675c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9317 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9318 = getelementptr inbounds %struct.GPR, %struct.GPR* %9317, i32 0, i32 33
  %9319 = getelementptr inbounds %struct.Reg, %struct.Reg* %9318, i32 0, i32 0
  %PC.i467 = bitcast %union.anon* %9319 to i64*
  %9320 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9321 = getelementptr inbounds %struct.GPR, %struct.GPR* %9320, i32 0, i32 1
  %9322 = getelementptr inbounds %struct.Reg, %struct.Reg* %9321, i32 0, i32 0
  %RAX.i468 = bitcast %union.anon* %9322 to i64*
  %9323 = load i64, i64* %RAX.i468
  %9324 = add i64 %9323, 12
  %9325 = load i64, i64* %PC.i467
  %9326 = add i64 %9325, 4
  store i64 %9326, i64* %PC.i467
  %9327 = inttoptr i64 %9324 to i32*
  %9328 = load i32, i32* %9327
  %9329 = sub i32 %9328, 1
  %9330 = icmp ult i32 %9328, 1
  %9331 = zext i1 %9330 to i8
  %9332 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9331, i8* %9332, align 1
  %9333 = and i32 %9329, 255
  %9334 = call i32 @llvm.ctpop.i32(i32 %9333)
  %9335 = trunc i32 %9334 to i8
  %9336 = and i8 %9335, 1
  %9337 = xor i8 %9336, 1
  %9338 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9337, i8* %9338, align 1
  %9339 = xor i32 %9328, 1
  %9340 = xor i32 %9339, %9329
  %9341 = lshr i32 %9340, 4
  %9342 = trunc i32 %9341 to i8
  %9343 = and i8 %9342, 1
  %9344 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9343, i8* %9344, align 1
  %9345 = icmp eq i32 %9329, 0
  %9346 = zext i1 %9345 to i8
  %9347 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9346, i8* %9347, align 1
  %9348 = lshr i32 %9329, 31
  %9349 = trunc i32 %9348 to i8
  %9350 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9349, i8* %9350, align 1
  %9351 = lshr i32 %9328, 31
  %9352 = xor i32 %9348, %9351
  %9353 = add i32 %9352, %9351
  %9354 = icmp eq i32 %9353, 2
  %9355 = zext i1 %9354 to i8
  %9356 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9355, i8* %9356, align 1
  store %struct.Memory* %loadMem_41675c, %struct.Memory** %MEMORY
  %loadMem_416760 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9357 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9358 = getelementptr inbounds %struct.GPR, %struct.GPR* %9357, i32 0, i32 33
  %9359 = getelementptr inbounds %struct.Reg, %struct.Reg* %9358, i32 0, i32 0
  %PC.i466 = bitcast %union.anon* %9359 to i64*
  %9360 = load i64, i64* %PC.i466
  %9361 = add i64 %9360, 24
  %9362 = load i64, i64* %PC.i466
  %9363 = add i64 %9362, 6
  %9364 = load i64, i64* %PC.i466
  %9365 = add i64 %9364, 6
  store i64 %9365, i64* %PC.i466
  %9366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9367 = load i8, i8* %9366, align 1
  %9368 = icmp eq i8 %9367, 0
  %9369 = zext i1 %9368 to i8
  store i8 %9369, i8* %BRANCH_TAKEN, align 1
  %9370 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9371 = select i1 %9368, i64 %9361, i64 %9363
  store i64 %9371, i64* %9370, align 8
  store %struct.Memory* %loadMem_416760, %struct.Memory** %MEMORY
  %loadBr_416760 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416760 = icmp eq i8 %loadBr_416760, 1
  br i1 %cmpBr_416760, label %block_.L_416778, label %block_416766

block_416766:                                     ; preds = %block_41671a
  %loadMem_416766 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9372 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9373 = getelementptr inbounds %struct.GPR, %struct.GPR* %9372, i32 0, i32 33
  %9374 = getelementptr inbounds %struct.Reg, %struct.Reg* %9373, i32 0, i32 0
  %PC.i463 = bitcast %union.anon* %9374 to i64*
  %9375 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9376 = getelementptr inbounds %struct.GPR, %struct.GPR* %9375, i32 0, i32 1
  %9377 = getelementptr inbounds %struct.Reg, %struct.Reg* %9376, i32 0, i32 0
  %RAX.i464 = bitcast %union.anon* %9377 to i64*
  %9378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9379 = getelementptr inbounds %struct.GPR, %struct.GPR* %9378, i32 0, i32 15
  %9380 = getelementptr inbounds %struct.Reg, %struct.Reg* %9379, i32 0, i32 0
  %RBP.i465 = bitcast %union.anon* %9380 to i64*
  %9381 = load i64, i64* %RBP.i465
  %9382 = sub i64 %9381, 144
  %9383 = load i64, i64* %PC.i463
  %9384 = add i64 %9383, 7
  store i64 %9384, i64* %PC.i463
  %9385 = inttoptr i64 %9382 to i64*
  %9386 = load i64, i64* %9385
  store i64 %9386, i64* %RAX.i464, align 8
  store %struct.Memory* %loadMem_416766, %struct.Memory** %MEMORY
  %loadMem_41676d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9387 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9388 = getelementptr inbounds %struct.GPR, %struct.GPR* %9387, i32 0, i32 33
  %9389 = getelementptr inbounds %struct.Reg, %struct.Reg* %9388, i32 0, i32 0
  %PC.i460 = bitcast %union.anon* %9389 to i64*
  %9390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9391 = getelementptr inbounds %struct.GPR, %struct.GPR* %9390, i32 0, i32 1
  %9392 = getelementptr inbounds %struct.Reg, %struct.Reg* %9391, i32 0, i32 0
  %RAX.i461 = bitcast %union.anon* %9392 to i64*
  %9393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9394 = getelementptr inbounds %struct.GPR, %struct.GPR* %9393, i32 0, i32 5
  %9395 = getelementptr inbounds %struct.Reg, %struct.Reg* %9394, i32 0, i32 0
  %RCX.i462 = bitcast %union.anon* %9395 to i64*
  %9396 = load i64, i64* %RAX.i461
  %9397 = add i64 %9396, 4
  %9398 = load i64, i64* %PC.i460
  %9399 = add i64 %9398, 3
  store i64 %9399, i64* %PC.i460
  %9400 = inttoptr i64 %9397 to i32*
  %9401 = load i32, i32* %9400
  %9402 = zext i32 %9401 to i64
  store i64 %9402, i64* %RCX.i462, align 8
  store %struct.Memory* %loadMem_41676d, %struct.Memory** %MEMORY
  %loadMem_416770 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9403 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9404 = getelementptr inbounds %struct.GPR, %struct.GPR* %9403, i32 0, i32 33
  %9405 = getelementptr inbounds %struct.Reg, %struct.Reg* %9404, i32 0, i32 0
  %PC.i457 = bitcast %union.anon* %9405 to i64*
  %9406 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9407 = getelementptr inbounds %struct.GPR, %struct.GPR* %9406, i32 0, i32 1
  %9408 = getelementptr inbounds %struct.Reg, %struct.Reg* %9407, i32 0, i32 0
  %RAX.i458 = bitcast %union.anon* %9408 to i64*
  %9409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9410 = getelementptr inbounds %struct.GPR, %struct.GPR* %9409, i32 0, i32 15
  %9411 = getelementptr inbounds %struct.Reg, %struct.Reg* %9410, i32 0, i32 0
  %RBP.i459 = bitcast %union.anon* %9411 to i64*
  %9412 = load i64, i64* %RBP.i459
  %9413 = sub i64 %9412, 88
  %9414 = load i64, i64* %PC.i457
  %9415 = add i64 %9414, 4
  store i64 %9415, i64* %PC.i457
  %9416 = inttoptr i64 %9413 to i64*
  %9417 = load i64, i64* %9416
  store i64 %9417, i64* %RAX.i458, align 8
  store %struct.Memory* %loadMem_416770, %struct.Memory** %MEMORY
  %loadMem_416774 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9418 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9419 = getelementptr inbounds %struct.GPR, %struct.GPR* %9418, i32 0, i32 33
  %9420 = getelementptr inbounds %struct.Reg, %struct.Reg* %9419, i32 0, i32 0
  %PC.i454 = bitcast %union.anon* %9420 to i64*
  %9421 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9422 = getelementptr inbounds %struct.GPR, %struct.GPR* %9421, i32 0, i32 1
  %9423 = getelementptr inbounds %struct.Reg, %struct.Reg* %9422, i32 0, i32 0
  %RAX.i455 = bitcast %union.anon* %9423 to i64*
  %9424 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9425 = getelementptr inbounds %struct.GPR, %struct.GPR* %9424, i32 0, i32 5
  %9426 = getelementptr inbounds %struct.Reg, %struct.Reg* %9425, i32 0, i32 0
  %RCX.i456 = bitcast %union.anon* %9426 to i64*
  %9427 = load i64, i64* %RCX.i456
  %9428 = load i64, i64* %RAX.i455
  %9429 = load i64, i64* %PC.i454
  %9430 = add i64 %9429, 2
  store i64 %9430, i64* %PC.i454
  %9431 = trunc i64 %9427 to i32
  %9432 = inttoptr i64 %9428 to i32*
  %9433 = load i32, i32* %9432
  %9434 = add i32 %9433, %9431
  %9435 = zext i32 %9434 to i64
  store i64 %9435, i64* %RCX.i456, align 8
  %9436 = icmp ult i32 %9434, %9431
  %9437 = icmp ult i32 %9434, %9433
  %9438 = or i1 %9436, %9437
  %9439 = zext i1 %9438 to i8
  %9440 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9439, i8* %9440, align 1
  %9441 = and i32 %9434, 255
  %9442 = call i32 @llvm.ctpop.i32(i32 %9441)
  %9443 = trunc i32 %9442 to i8
  %9444 = and i8 %9443, 1
  %9445 = xor i8 %9444, 1
  %9446 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9445, i8* %9446, align 1
  %9447 = xor i32 %9433, %9431
  %9448 = xor i32 %9447, %9434
  %9449 = lshr i32 %9448, 4
  %9450 = trunc i32 %9449 to i8
  %9451 = and i8 %9450, 1
  %9452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9451, i8* %9452, align 1
  %9453 = icmp eq i32 %9434, 0
  %9454 = zext i1 %9453 to i8
  %9455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9454, i8* %9455, align 1
  %9456 = lshr i32 %9434, 31
  %9457 = trunc i32 %9456 to i8
  %9458 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9457, i8* %9458, align 1
  %9459 = lshr i32 %9431, 31
  %9460 = lshr i32 %9433, 31
  %9461 = xor i32 %9456, %9459
  %9462 = xor i32 %9456, %9460
  %9463 = add i32 %9461, %9462
  %9464 = icmp eq i32 %9463, 2
  %9465 = zext i1 %9464 to i8
  %9466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9465, i8* %9466, align 1
  store %struct.Memory* %loadMem_416774, %struct.Memory** %MEMORY
  %loadMem_416776 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9468 = getelementptr inbounds %struct.GPR, %struct.GPR* %9467, i32 0, i32 33
  %9469 = getelementptr inbounds %struct.Reg, %struct.Reg* %9468, i32 0, i32 0
  %PC.i451 = bitcast %union.anon* %9469 to i64*
  %9470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9471 = getelementptr inbounds %struct.GPR, %struct.GPR* %9470, i32 0, i32 5
  %9472 = getelementptr inbounds %struct.Reg, %struct.Reg* %9471, i32 0, i32 0
  %ECX.i452 = bitcast %union.anon* %9472 to i32*
  %9473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9474 = getelementptr inbounds %struct.GPR, %struct.GPR* %9473, i32 0, i32 1
  %9475 = getelementptr inbounds %struct.Reg, %struct.Reg* %9474, i32 0, i32 0
  %RAX.i453 = bitcast %union.anon* %9475 to i64*
  %9476 = load i64, i64* %RAX.i453
  %9477 = load i32, i32* %ECX.i452
  %9478 = zext i32 %9477 to i64
  %9479 = load i64, i64* %PC.i451
  %9480 = add i64 %9479, 2
  store i64 %9480, i64* %PC.i451
  %9481 = inttoptr i64 %9476 to i32*
  store i32 %9477, i32* %9481
  store %struct.Memory* %loadMem_416776, %struct.Memory** %MEMORY
  br label %block_.L_416778

block_.L_416778:                                  ; preds = %block_416766, %block_41671a
  %loadMem_416778 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9483 = getelementptr inbounds %struct.GPR, %struct.GPR* %9482, i32 0, i32 33
  %9484 = getelementptr inbounds %struct.Reg, %struct.Reg* %9483, i32 0, i32 0
  %PC.i450 = bitcast %union.anon* %9484 to i64*
  %9485 = load i64, i64* %PC.i450
  %9486 = add i64 %9485, 5
  %9487 = load i64, i64* %PC.i450
  %9488 = add i64 %9487, 5
  store i64 %9488, i64* %PC.i450
  %9489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9486, i64* %9489, align 8
  store %struct.Memory* %loadMem_416778, %struct.Memory** %MEMORY
  br label %block_.L_41677d

block_.L_41677d:                                  ; preds = %block_.L_416778
  %loadMem_41677d = load %struct.Memory*, %struct.Memory** %MEMORY
  %9490 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9491 = getelementptr inbounds %struct.GPR, %struct.GPR* %9490, i32 0, i32 33
  %9492 = getelementptr inbounds %struct.Reg, %struct.Reg* %9491, i32 0, i32 0
  %PC.i447 = bitcast %union.anon* %9492 to i64*
  %9493 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9494 = getelementptr inbounds %struct.GPR, %struct.GPR* %9493, i32 0, i32 1
  %9495 = getelementptr inbounds %struct.Reg, %struct.Reg* %9494, i32 0, i32 0
  %RAX.i448 = bitcast %union.anon* %9495 to i64*
  %9496 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9497 = getelementptr inbounds %struct.GPR, %struct.GPR* %9496, i32 0, i32 15
  %9498 = getelementptr inbounds %struct.Reg, %struct.Reg* %9497, i32 0, i32 0
  %RBP.i449 = bitcast %union.anon* %9498 to i64*
  %9499 = load i64, i64* %RBP.i449
  %9500 = sub i64 %9499, 136
  %9501 = load i64, i64* %PC.i447
  %9502 = add i64 %9501, 6
  store i64 %9502, i64* %PC.i447
  %9503 = inttoptr i64 %9500 to i32*
  %9504 = load i32, i32* %9503
  %9505 = zext i32 %9504 to i64
  store i64 %9505, i64* %RAX.i448, align 8
  store %struct.Memory* %loadMem_41677d, %struct.Memory** %MEMORY
  %loadMem_416783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9506 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9507 = getelementptr inbounds %struct.GPR, %struct.GPR* %9506, i32 0, i32 33
  %9508 = getelementptr inbounds %struct.Reg, %struct.Reg* %9507, i32 0, i32 0
  %PC.i445 = bitcast %union.anon* %9508 to i64*
  %9509 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9510 = getelementptr inbounds %struct.GPR, %struct.GPR* %9509, i32 0, i32 1
  %9511 = getelementptr inbounds %struct.Reg, %struct.Reg* %9510, i32 0, i32 0
  %RAX.i446 = bitcast %union.anon* %9511 to i64*
  %9512 = load i64, i64* %RAX.i446
  %9513 = load i64, i64* %PC.i445
  %9514 = add i64 %9513, 3
  store i64 %9514, i64* %PC.i445
  %9515 = trunc i64 %9512 to i32
  %9516 = add i32 1, %9515
  %9517 = zext i32 %9516 to i64
  store i64 %9517, i64* %RAX.i446, align 8
  %9518 = icmp ult i32 %9516, %9515
  %9519 = icmp ult i32 %9516, 1
  %9520 = or i1 %9518, %9519
  %9521 = zext i1 %9520 to i8
  %9522 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9521, i8* %9522, align 1
  %9523 = and i32 %9516, 255
  %9524 = call i32 @llvm.ctpop.i32(i32 %9523)
  %9525 = trunc i32 %9524 to i8
  %9526 = and i8 %9525, 1
  %9527 = xor i8 %9526, 1
  %9528 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9527, i8* %9528, align 1
  %9529 = xor i64 1, %9512
  %9530 = trunc i64 %9529 to i32
  %9531 = xor i32 %9530, %9516
  %9532 = lshr i32 %9531, 4
  %9533 = trunc i32 %9532 to i8
  %9534 = and i8 %9533, 1
  %9535 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9534, i8* %9535, align 1
  %9536 = icmp eq i32 %9516, 0
  %9537 = zext i1 %9536 to i8
  %9538 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9537, i8* %9538, align 1
  %9539 = lshr i32 %9516, 31
  %9540 = trunc i32 %9539 to i8
  %9541 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9540, i8* %9541, align 1
  %9542 = lshr i32 %9515, 31
  %9543 = xor i32 %9539, %9542
  %9544 = add i32 %9543, %9539
  %9545 = icmp eq i32 %9544, 2
  %9546 = zext i1 %9545 to i8
  %9547 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9546, i8* %9547, align 1
  store %struct.Memory* %loadMem_416783, %struct.Memory** %MEMORY
  %loadMem_416786 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9548 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9549 = getelementptr inbounds %struct.GPR, %struct.GPR* %9548, i32 0, i32 33
  %9550 = getelementptr inbounds %struct.Reg, %struct.Reg* %9549, i32 0, i32 0
  %PC.i442 = bitcast %union.anon* %9550 to i64*
  %9551 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9552 = getelementptr inbounds %struct.GPR, %struct.GPR* %9551, i32 0, i32 1
  %9553 = getelementptr inbounds %struct.Reg, %struct.Reg* %9552, i32 0, i32 0
  %EAX.i443 = bitcast %union.anon* %9553 to i32*
  %9554 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9555 = getelementptr inbounds %struct.GPR, %struct.GPR* %9554, i32 0, i32 15
  %9556 = getelementptr inbounds %struct.Reg, %struct.Reg* %9555, i32 0, i32 0
  %RBP.i444 = bitcast %union.anon* %9556 to i64*
  %9557 = load i64, i64* %RBP.i444
  %9558 = sub i64 %9557, 136
  %9559 = load i32, i32* %EAX.i443
  %9560 = zext i32 %9559 to i64
  %9561 = load i64, i64* %PC.i442
  %9562 = add i64 %9561, 6
  store i64 %9562, i64* %PC.i442
  %9563 = inttoptr i64 %9558 to i32*
  store i32 %9559, i32* %9563
  store %struct.Memory* %loadMem_416786, %struct.Memory** %MEMORY
  %loadMem_41678c = load %struct.Memory*, %struct.Memory** %MEMORY
  %9564 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9565 = getelementptr inbounds %struct.GPR, %struct.GPR* %9564, i32 0, i32 33
  %9566 = getelementptr inbounds %struct.Reg, %struct.Reg* %9565, i32 0, i32 0
  %PC.i441 = bitcast %union.anon* %9566 to i64*
  %9567 = load i64, i64* %PC.i441
  %9568 = add i64 %9567, -156
  %9569 = load i64, i64* %PC.i441
  %9570 = add i64 %9569, 5
  store i64 %9570, i64* %PC.i441
  %9571 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9568, i64* %9571, align 8
  store %struct.Memory* %loadMem_41678c, %struct.Memory** %MEMORY
  br label %block_.L_4166f0

block_.L_416791:                                  ; preds = %block_.L_4166f0
  %loadMem_416791 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9572 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9573 = getelementptr inbounds %struct.GPR, %struct.GPR* %9572, i32 0, i32 33
  %9574 = getelementptr inbounds %struct.Reg, %struct.Reg* %9573, i32 0, i32 0
  %PC.i440 = bitcast %union.anon* %9574 to i64*
  %9575 = load i64, i64* %PC.i440
  %9576 = add i64 %9575, 184
  %9577 = load i64, i64* %PC.i440
  %9578 = add i64 %9577, 5
  store i64 %9578, i64* %PC.i440
  %9579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %9576, i64* %9579, align 8
  store %struct.Memory* %loadMem_416791, %struct.Memory** %MEMORY
  br label %block_.L_416849

block_.L_416796:                                  ; preds = %block_.L_416690
  %loadMem_416796 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9580 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9581 = getelementptr inbounds %struct.GPR, %struct.GPR* %9580, i32 0, i32 33
  %9582 = getelementptr inbounds %struct.Reg, %struct.Reg* %9581, i32 0, i32 0
  %PC.i438 = bitcast %union.anon* %9582 to i64*
  %9583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9584 = getelementptr inbounds %struct.GPR, %struct.GPR* %9583, i32 0, i32 1
  %9585 = getelementptr inbounds %struct.Reg, %struct.Reg* %9584, i32 0, i32 0
  %RAX.i439 = bitcast %union.anon* %9585 to i64*
  %9586 = load i64, i64* %PC.i438
  %9587 = add i64 %9586, 10
  store i64 %9587, i64* %PC.i438
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i439, align 8
  store %struct.Memory* %loadMem_416796, %struct.Memory** %MEMORY
  %loadMem_4167a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9589 = getelementptr inbounds %struct.GPR, %struct.GPR* %9588, i32 0, i32 33
  %9590 = getelementptr inbounds %struct.Reg, %struct.Reg* %9589, i32 0, i32 0
  %PC.i435 = bitcast %union.anon* %9590 to i64*
  %9591 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9592 = getelementptr inbounds %struct.GPR, %struct.GPR* %9591, i32 0, i32 5
  %9593 = getelementptr inbounds %struct.Reg, %struct.Reg* %9592, i32 0, i32 0
  %RCX.i436 = bitcast %union.anon* %9593 to i64*
  %9594 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9595 = getelementptr inbounds %struct.GPR, %struct.GPR* %9594, i32 0, i32 15
  %9596 = getelementptr inbounds %struct.Reg, %struct.Reg* %9595, i32 0, i32 0
  %RBP.i437 = bitcast %union.anon* %9596 to i64*
  %9597 = load i64, i64* %RBP.i437
  %9598 = sub i64 %9597, 132
  %9599 = load i64, i64* %PC.i435
  %9600 = add i64 %9599, 7
  store i64 %9600, i64* %PC.i435
  %9601 = inttoptr i64 %9598 to i32*
  %9602 = load i32, i32* %9601
  %9603 = sext i32 %9602 to i64
  store i64 %9603, i64* %RCX.i436, align 8
  store %struct.Memory* %loadMem_4167a0, %struct.Memory** %MEMORY
  %loadMem_4167a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9604 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9605 = getelementptr inbounds %struct.GPR, %struct.GPR* %9604, i32 0, i32 33
  %9606 = getelementptr inbounds %struct.Reg, %struct.Reg* %9605, i32 0, i32 0
  %PC.i433 = bitcast %union.anon* %9606 to i64*
  %9607 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9608 = getelementptr inbounds %struct.GPR, %struct.GPR* %9607, i32 0, i32 5
  %9609 = getelementptr inbounds %struct.Reg, %struct.Reg* %9608, i32 0, i32 0
  %RCX.i434 = bitcast %union.anon* %9609 to i64*
  %9610 = load i64, i64* %RCX.i434
  %9611 = load i64, i64* %PC.i433
  %9612 = add i64 %9611, 7
  store i64 %9612, i64* %PC.i433
  %9613 = sext i64 %9610 to i128
  %9614 = and i128 %9613, -18446744073709551616
  %9615 = zext i64 %9610 to i128
  %9616 = or i128 %9614, %9615
  %9617 = mul i128 744, %9616
  %9618 = trunc i128 %9617 to i64
  store i64 %9618, i64* %RCX.i434, align 8
  %9619 = sext i64 %9618 to i128
  %9620 = icmp ne i128 %9619, %9617
  %9621 = zext i1 %9620 to i8
  %9622 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9621, i8* %9622, align 1
  %9623 = trunc i128 %9617 to i32
  %9624 = and i32 %9623, 255
  %9625 = call i32 @llvm.ctpop.i32(i32 %9624)
  %9626 = trunc i32 %9625 to i8
  %9627 = and i8 %9626, 1
  %9628 = xor i8 %9627, 1
  %9629 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9628, i8* %9629, align 1
  %9630 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9630, align 1
  %9631 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9631, align 1
  %9632 = lshr i64 %9618, 63
  %9633 = trunc i64 %9632 to i8
  %9634 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9633, i8* %9634, align 1
  %9635 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9621, i8* %9635, align 1
  store %struct.Memory* %loadMem_4167a7, %struct.Memory** %MEMORY
  %loadMem_4167ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %9636 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9637 = getelementptr inbounds %struct.GPR, %struct.GPR* %9636, i32 0, i32 33
  %9638 = getelementptr inbounds %struct.Reg, %struct.Reg* %9637, i32 0, i32 0
  %PC.i430 = bitcast %union.anon* %9638 to i64*
  %9639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9640 = getelementptr inbounds %struct.GPR, %struct.GPR* %9639, i32 0, i32 1
  %9641 = getelementptr inbounds %struct.Reg, %struct.Reg* %9640, i32 0, i32 0
  %RAX.i431 = bitcast %union.anon* %9641 to i64*
  %9642 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9643 = getelementptr inbounds %struct.GPR, %struct.GPR* %9642, i32 0, i32 5
  %9644 = getelementptr inbounds %struct.Reg, %struct.Reg* %9643, i32 0, i32 0
  %RCX.i432 = bitcast %union.anon* %9644 to i64*
  %9645 = load i64, i64* %RAX.i431
  %9646 = load i64, i64* %RCX.i432
  %9647 = load i64, i64* %PC.i430
  %9648 = add i64 %9647, 3
  store i64 %9648, i64* %PC.i430
  %9649 = add i64 %9646, %9645
  store i64 %9649, i64* %RAX.i431, align 8
  %9650 = icmp ult i64 %9649, %9645
  %9651 = icmp ult i64 %9649, %9646
  %9652 = or i1 %9650, %9651
  %9653 = zext i1 %9652 to i8
  %9654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9653, i8* %9654, align 1
  %9655 = trunc i64 %9649 to i32
  %9656 = and i32 %9655, 255
  %9657 = call i32 @llvm.ctpop.i32(i32 %9656)
  %9658 = trunc i32 %9657 to i8
  %9659 = and i8 %9658, 1
  %9660 = xor i8 %9659, 1
  %9661 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9660, i8* %9661, align 1
  %9662 = xor i64 %9646, %9645
  %9663 = xor i64 %9662, %9649
  %9664 = lshr i64 %9663, 4
  %9665 = trunc i64 %9664 to i8
  %9666 = and i8 %9665, 1
  %9667 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9666, i8* %9667, align 1
  %9668 = icmp eq i64 %9649, 0
  %9669 = zext i1 %9668 to i8
  %9670 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9669, i8* %9670, align 1
  %9671 = lshr i64 %9649, 63
  %9672 = trunc i64 %9671 to i8
  %9673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9672, i8* %9673, align 1
  %9674 = lshr i64 %9645, 63
  %9675 = lshr i64 %9646, 63
  %9676 = xor i64 %9671, %9674
  %9677 = xor i64 %9671, %9675
  %9678 = add i64 %9676, %9677
  %9679 = icmp eq i64 %9678, 2
  %9680 = zext i1 %9679 to i8
  %9681 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9680, i8* %9681, align 1
  store %struct.Memory* %loadMem_4167ae, %struct.Memory** %MEMORY
  %loadMem_4167b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9682 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9683 = getelementptr inbounds %struct.GPR, %struct.GPR* %9682, i32 0, i32 33
  %9684 = getelementptr inbounds %struct.Reg, %struct.Reg* %9683, i32 0, i32 0
  %PC.i428 = bitcast %union.anon* %9684 to i64*
  %9685 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9686 = getelementptr inbounds %struct.GPR, %struct.GPR* %9685, i32 0, i32 1
  %9687 = getelementptr inbounds %struct.Reg, %struct.Reg* %9686, i32 0, i32 0
  %RAX.i429 = bitcast %union.anon* %9687 to i64*
  %9688 = load i64, i64* %RAX.i429
  %9689 = add i64 %9688, 12
  %9690 = load i64, i64* %PC.i428
  %9691 = add i64 %9690, 4
  store i64 %9691, i64* %PC.i428
  %9692 = inttoptr i64 %9689 to i32*
  %9693 = load i32, i32* %9692
  %9694 = sub i32 %9693, 2
  %9695 = icmp ult i32 %9693, 2
  %9696 = zext i1 %9695 to i8
  %9697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9696, i8* %9697, align 1
  %9698 = and i32 %9694, 255
  %9699 = call i32 @llvm.ctpop.i32(i32 %9698)
  %9700 = trunc i32 %9699 to i8
  %9701 = and i8 %9700, 1
  %9702 = xor i8 %9701, 1
  %9703 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9702, i8* %9703, align 1
  %9704 = xor i32 %9693, 2
  %9705 = xor i32 %9704, %9694
  %9706 = lshr i32 %9705, 4
  %9707 = trunc i32 %9706 to i8
  %9708 = and i8 %9707, 1
  %9709 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9708, i8* %9709, align 1
  %9710 = icmp eq i32 %9694, 0
  %9711 = zext i1 %9710 to i8
  %9712 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9711, i8* %9712, align 1
  %9713 = lshr i32 %9694, 31
  %9714 = trunc i32 %9713 to i8
  %9715 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9714, i8* %9715, align 1
  %9716 = lshr i32 %9693, 31
  %9717 = xor i32 %9713, %9716
  %9718 = add i32 %9717, %9716
  %9719 = icmp eq i32 %9718, 2
  %9720 = zext i1 %9719 to i8
  %9721 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9720, i8* %9721, align 1
  store %struct.Memory* %loadMem_4167b1, %struct.Memory** %MEMORY
  %loadMem_4167b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9723 = getelementptr inbounds %struct.GPR, %struct.GPR* %9722, i32 0, i32 33
  %9724 = getelementptr inbounds %struct.Reg, %struct.Reg* %9723, i32 0, i32 0
  %PC.i427 = bitcast %union.anon* %9724 to i64*
  %9725 = load i64, i64* %PC.i427
  %9726 = add i64 %9725, 143
  %9727 = load i64, i64* %PC.i427
  %9728 = add i64 %9727, 6
  %9729 = load i64, i64* %PC.i427
  %9730 = add i64 %9729, 6
  store i64 %9730, i64* %PC.i427
  %9731 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9732 = load i8, i8* %9731, align 1
  %9733 = icmp eq i8 %9732, 0
  %9734 = zext i1 %9733 to i8
  store i8 %9734, i8* %BRANCH_TAKEN, align 1
  %9735 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9736 = select i1 %9733, i64 %9726, i64 %9728
  store i64 %9736, i64* %9735, align 8
  store %struct.Memory* %loadMem_4167b5, %struct.Memory** %MEMORY
  %loadBr_4167b5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4167b5 = icmp eq i8 %loadBr_4167b5, 1
  br i1 %cmpBr_4167b5, label %block_.L_416844, label %block_4167bb

block_4167bb:                                     ; preds = %block_.L_416796
  %loadMem_4167bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9737 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9738 = getelementptr inbounds %struct.GPR, %struct.GPR* %9737, i32 0, i32 33
  %9739 = getelementptr inbounds %struct.Reg, %struct.Reg* %9738, i32 0, i32 0
  %PC.i425 = bitcast %union.anon* %9739 to i64*
  %9740 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9741 = getelementptr inbounds %struct.GPR, %struct.GPR* %9740, i32 0, i32 1
  %9742 = getelementptr inbounds %struct.Reg, %struct.Reg* %9741, i32 0, i32 0
  %RAX.i426 = bitcast %union.anon* %9742 to i64*
  %9743 = load i64, i64* %PC.i425
  %9744 = add i64 %9743, 10
  store i64 %9744, i64* %PC.i425
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i426, align 8
  store %struct.Memory* %loadMem_4167bb, %struct.Memory** %MEMORY
  %loadMem_4167c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9745 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9746 = getelementptr inbounds %struct.GPR, %struct.GPR* %9745, i32 0, i32 33
  %9747 = getelementptr inbounds %struct.Reg, %struct.Reg* %9746, i32 0, i32 0
  %PC.i422 = bitcast %union.anon* %9747 to i64*
  %9748 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9749 = getelementptr inbounds %struct.GPR, %struct.GPR* %9748, i32 0, i32 5
  %9750 = getelementptr inbounds %struct.Reg, %struct.Reg* %9749, i32 0, i32 0
  %RCX.i423 = bitcast %union.anon* %9750 to i64*
  %9751 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9752 = getelementptr inbounds %struct.GPR, %struct.GPR* %9751, i32 0, i32 15
  %9753 = getelementptr inbounds %struct.Reg, %struct.Reg* %9752, i32 0, i32 0
  %RBP.i424 = bitcast %union.anon* %9753 to i64*
  %9754 = load i64, i64* %RBP.i424
  %9755 = sub i64 %9754, 20
  %9756 = load i64, i64* %PC.i422
  %9757 = add i64 %9756, 3
  store i64 %9757, i64* %PC.i422
  %9758 = inttoptr i64 %9755 to i32*
  %9759 = load i32, i32* %9758
  %9760 = zext i32 %9759 to i64
  store i64 %9760, i64* %RCX.i423, align 8
  store %struct.Memory* %loadMem_4167c5, %struct.Memory** %MEMORY
  %loadMem_4167c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9761 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9762 = getelementptr inbounds %struct.GPR, %struct.GPR* %9761, i32 0, i32 33
  %9763 = getelementptr inbounds %struct.Reg, %struct.Reg* %9762, i32 0, i32 0
  %PC.i420 = bitcast %union.anon* %9763 to i64*
  %9764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9765 = getelementptr inbounds %struct.GPR, %struct.GPR* %9764, i32 0, i32 5
  %9766 = getelementptr inbounds %struct.Reg, %struct.Reg* %9765, i32 0, i32 0
  %RCX.i421 = bitcast %union.anon* %9766 to i64*
  %9767 = load i64, i64* %RCX.i421
  %9768 = load i64, i64* %PC.i420
  %9769 = add i64 %9768, 3
  store i64 %9769, i64* %PC.i420
  %9770 = trunc i64 %9767 to i32
  %9771 = sub i32 %9770, 20
  %9772 = zext i32 %9771 to i64
  store i64 %9772, i64* %RCX.i421, align 8
  %9773 = icmp ult i32 %9770, 20
  %9774 = zext i1 %9773 to i8
  %9775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9774, i8* %9775, align 1
  %9776 = and i32 %9771, 255
  %9777 = call i32 @llvm.ctpop.i32(i32 %9776)
  %9778 = trunc i32 %9777 to i8
  %9779 = and i8 %9778, 1
  %9780 = xor i8 %9779, 1
  %9781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9780, i8* %9781, align 1
  %9782 = xor i64 20, %9767
  %9783 = trunc i64 %9782 to i32
  %9784 = xor i32 %9783, %9771
  %9785 = lshr i32 %9784, 4
  %9786 = trunc i32 %9785 to i8
  %9787 = and i8 %9786, 1
  %9788 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9787, i8* %9788, align 1
  %9789 = icmp eq i32 %9771, 0
  %9790 = zext i1 %9789 to i8
  %9791 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9790, i8* %9791, align 1
  %9792 = lshr i32 %9771, 31
  %9793 = trunc i32 %9792 to i8
  %9794 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9793, i8* %9794, align 1
  %9795 = lshr i32 %9770, 31
  %9796 = xor i32 %9792, %9795
  %9797 = add i32 %9796, %9795
  %9798 = icmp eq i32 %9797, 2
  %9799 = zext i1 %9798 to i8
  %9800 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9799, i8* %9800, align 1
  store %struct.Memory* %loadMem_4167c8, %struct.Memory** %MEMORY
  %loadMem_4167cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %9801 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9802 = getelementptr inbounds %struct.GPR, %struct.GPR* %9801, i32 0, i32 33
  %9803 = getelementptr inbounds %struct.Reg, %struct.Reg* %9802, i32 0, i32 0
  %PC.i417 = bitcast %union.anon* %9803 to i64*
  %9804 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9805 = getelementptr inbounds %struct.GPR, %struct.GPR* %9804, i32 0, i32 5
  %9806 = getelementptr inbounds %struct.Reg, %struct.Reg* %9805, i32 0, i32 0
  %ECX.i418 = bitcast %union.anon* %9806 to i32*
  %9807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9808 = getelementptr inbounds %struct.GPR, %struct.GPR* %9807, i32 0, i32 7
  %9809 = getelementptr inbounds %struct.Reg, %struct.Reg* %9808, i32 0, i32 0
  %RDX.i419 = bitcast %union.anon* %9809 to i64*
  %9810 = load i32, i32* %ECX.i418
  %9811 = zext i32 %9810 to i64
  %9812 = load i64, i64* %PC.i417
  %9813 = add i64 %9812, 3
  store i64 %9813, i64* %PC.i417
  %9814 = shl i64 %9811, 32
  %9815 = ashr exact i64 %9814, 32
  store i64 %9815, i64* %RDX.i419, align 8
  store %struct.Memory* %loadMem_4167cb, %struct.Memory** %MEMORY
  %loadMem_4167ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %9816 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9817 = getelementptr inbounds %struct.GPR, %struct.GPR* %9816, i32 0, i32 33
  %9818 = getelementptr inbounds %struct.Reg, %struct.Reg* %9817, i32 0, i32 0
  %PC.i415 = bitcast %union.anon* %9818 to i64*
  %9819 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9820 = getelementptr inbounds %struct.GPR, %struct.GPR* %9819, i32 0, i32 7
  %9821 = getelementptr inbounds %struct.Reg, %struct.Reg* %9820, i32 0, i32 0
  %RDX.i416 = bitcast %union.anon* %9821 to i64*
  %9822 = load i64, i64* %RDX.i416
  %9823 = mul i64 %9822, 4
  %9824 = add i64 %9823, 11187184
  %9825 = load i64, i64* %PC.i415
  %9826 = add i64 %9825, 8
  store i64 %9826, i64* %PC.i415
  %9827 = inttoptr i64 %9824 to i32*
  %9828 = load i32, i32* %9827
  %9829 = sext i32 %9828 to i64
  store i64 %9829, i64* %RDX.i416, align 8
  store %struct.Memory* %loadMem_4167ce, %struct.Memory** %MEMORY
  %loadMem_4167d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9830 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9831 = getelementptr inbounds %struct.GPR, %struct.GPR* %9830, i32 0, i32 33
  %9832 = getelementptr inbounds %struct.Reg, %struct.Reg* %9831, i32 0, i32 0
  %PC.i413 = bitcast %union.anon* %9832 to i64*
  %9833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9834 = getelementptr inbounds %struct.GPR, %struct.GPR* %9833, i32 0, i32 7
  %9835 = getelementptr inbounds %struct.Reg, %struct.Reg* %9834, i32 0, i32 0
  %RDX.i414 = bitcast %union.anon* %9835 to i64*
  %9836 = load i64, i64* %RDX.i414
  %9837 = load i64, i64* %PC.i413
  %9838 = add i64 %9837, 7
  store i64 %9838, i64* %PC.i413
  %9839 = sext i64 %9836 to i128
  %9840 = and i128 %9839, -18446744073709551616
  %9841 = zext i64 %9836 to i128
  %9842 = or i128 %9840, %9841
  %9843 = mul i128 744, %9842
  %9844 = trunc i128 %9843 to i64
  store i64 %9844, i64* %RDX.i414, align 8
  %9845 = sext i64 %9844 to i128
  %9846 = icmp ne i128 %9845, %9843
  %9847 = zext i1 %9846 to i8
  %9848 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9847, i8* %9848, align 1
  %9849 = trunc i128 %9843 to i32
  %9850 = and i32 %9849, 255
  %9851 = call i32 @llvm.ctpop.i32(i32 %9850)
  %9852 = trunc i32 %9851 to i8
  %9853 = and i8 %9852, 1
  %9854 = xor i8 %9853, 1
  %9855 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9854, i8* %9855, align 1
  %9856 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %9856, align 1
  %9857 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %9857, align 1
  %9858 = lshr i64 %9844, 63
  %9859 = trunc i64 %9858 to i8
  %9860 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9859, i8* %9860, align 1
  %9861 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9847, i8* %9861, align 1
  store %struct.Memory* %loadMem_4167d6, %struct.Memory** %MEMORY
  %loadMem_4167dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9863 = getelementptr inbounds %struct.GPR, %struct.GPR* %9862, i32 0, i32 33
  %9864 = getelementptr inbounds %struct.Reg, %struct.Reg* %9863, i32 0, i32 0
  %PC.i410 = bitcast %union.anon* %9864 to i64*
  %9865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9866 = getelementptr inbounds %struct.GPR, %struct.GPR* %9865, i32 0, i32 1
  %9867 = getelementptr inbounds %struct.Reg, %struct.Reg* %9866, i32 0, i32 0
  %RAX.i411 = bitcast %union.anon* %9867 to i64*
  %9868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9869 = getelementptr inbounds %struct.GPR, %struct.GPR* %9868, i32 0, i32 7
  %9870 = getelementptr inbounds %struct.Reg, %struct.Reg* %9869, i32 0, i32 0
  %RDX.i412 = bitcast %union.anon* %9870 to i64*
  %9871 = load i64, i64* %RAX.i411
  %9872 = load i64, i64* %RDX.i412
  %9873 = load i64, i64* %PC.i410
  %9874 = add i64 %9873, 3
  store i64 %9874, i64* %PC.i410
  %9875 = add i64 %9872, %9871
  store i64 %9875, i64* %RAX.i411, align 8
  %9876 = icmp ult i64 %9875, %9871
  %9877 = icmp ult i64 %9875, %9872
  %9878 = or i1 %9876, %9877
  %9879 = zext i1 %9878 to i8
  %9880 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9879, i8* %9880, align 1
  %9881 = trunc i64 %9875 to i32
  %9882 = and i32 %9881, 255
  %9883 = call i32 @llvm.ctpop.i32(i32 %9882)
  %9884 = trunc i32 %9883 to i8
  %9885 = and i8 %9884, 1
  %9886 = xor i8 %9885, 1
  %9887 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9886, i8* %9887, align 1
  %9888 = xor i64 %9872, %9871
  %9889 = xor i64 %9888, %9875
  %9890 = lshr i64 %9889, 4
  %9891 = trunc i64 %9890 to i8
  %9892 = and i8 %9891, 1
  %9893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9892, i8* %9893, align 1
  %9894 = icmp eq i64 %9875, 0
  %9895 = zext i1 %9894 to i8
  %9896 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9895, i8* %9896, align 1
  %9897 = lshr i64 %9875, 63
  %9898 = trunc i64 %9897 to i8
  %9899 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9898, i8* %9899, align 1
  %9900 = lshr i64 %9871, 63
  %9901 = lshr i64 %9872, 63
  %9902 = xor i64 %9897, %9900
  %9903 = xor i64 %9897, %9901
  %9904 = add i64 %9902, %9903
  %9905 = icmp eq i64 %9904, 2
  %9906 = zext i1 %9905 to i8
  %9907 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9906, i8* %9907, align 1
  store %struct.Memory* %loadMem_4167dd, %struct.Memory** %MEMORY
  %loadMem_4167e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9908 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9909 = getelementptr inbounds %struct.GPR, %struct.GPR* %9908, i32 0, i32 33
  %9910 = getelementptr inbounds %struct.Reg, %struct.Reg* %9909, i32 0, i32 0
  %PC.i407 = bitcast %union.anon* %9910 to i64*
  %9911 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9912 = getelementptr inbounds %struct.GPR, %struct.GPR* %9911, i32 0, i32 1
  %9913 = getelementptr inbounds %struct.Reg, %struct.Reg* %9912, i32 0, i32 0
  %RAX.i408 = bitcast %union.anon* %9913 to i64*
  %9914 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9915 = getelementptr inbounds %struct.GPR, %struct.GPR* %9914, i32 0, i32 5
  %9916 = getelementptr inbounds %struct.Reg, %struct.Reg* %9915, i32 0, i32 0
  %RCX.i409 = bitcast %union.anon* %9916 to i64*
  %9917 = load i64, i64* %RAX.i408
  %9918 = add i64 %9917, 740
  %9919 = load i64, i64* %PC.i407
  %9920 = add i64 %9919, 6
  store i64 %9920, i64* %PC.i407
  %9921 = inttoptr i64 %9918 to i32*
  %9922 = load i32, i32* %9921
  %9923 = zext i32 %9922 to i64
  store i64 %9923, i64* %RCX.i409, align 8
  store %struct.Memory* %loadMem_4167e0, %struct.Memory** %MEMORY
  %loadMem_4167e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9925 = getelementptr inbounds %struct.GPR, %struct.GPR* %9924, i32 0, i32 33
  %9926 = getelementptr inbounds %struct.Reg, %struct.Reg* %9925, i32 0, i32 0
  %PC.i405 = bitcast %union.anon* %9926 to i64*
  %9927 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9928 = getelementptr inbounds %struct.GPR, %struct.GPR* %9927, i32 0, i32 5
  %9929 = getelementptr inbounds %struct.Reg, %struct.Reg* %9928, i32 0, i32 0
  %ECX.i406 = bitcast %union.anon* %9929 to i32*
  %9930 = load i32, i32* %ECX.i406
  %9931 = zext i32 %9930 to i64
  %9932 = load i64, i64* %PC.i405
  %9933 = add i64 %9932, 7
  store i64 %9933, i64* %PC.i405
  %9934 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %9935 = sub i32 %9930, %9934
  %9936 = icmp ult i32 %9930, %9934
  %9937 = zext i1 %9936 to i8
  %9938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %9937, i8* %9938, align 1
  %9939 = and i32 %9935, 255
  %9940 = call i32 @llvm.ctpop.i32(i32 %9939)
  %9941 = trunc i32 %9940 to i8
  %9942 = and i8 %9941, 1
  %9943 = xor i8 %9942, 1
  %9944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %9943, i8* %9944, align 1
  %9945 = xor i32 %9934, %9930
  %9946 = xor i32 %9945, %9935
  %9947 = lshr i32 %9946, 4
  %9948 = trunc i32 %9947 to i8
  %9949 = and i8 %9948, 1
  %9950 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %9949, i8* %9950, align 1
  %9951 = icmp eq i32 %9935, 0
  %9952 = zext i1 %9951 to i8
  %9953 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %9952, i8* %9953, align 1
  %9954 = lshr i32 %9935, 31
  %9955 = trunc i32 %9954 to i8
  %9956 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %9955, i8* %9956, align 1
  %9957 = lshr i32 %9930, 31
  %9958 = lshr i32 %9934, 31
  %9959 = xor i32 %9958, %9957
  %9960 = xor i32 %9954, %9957
  %9961 = add i32 %9960, %9959
  %9962 = icmp eq i32 %9961, 2
  %9963 = zext i1 %9962 to i8
  %9964 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %9963, i8* %9964, align 1
  store %struct.Memory* %loadMem_4167e6, %struct.Memory** %MEMORY
  %loadMem_4167ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %9965 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9966 = getelementptr inbounds %struct.GPR, %struct.GPR* %9965, i32 0, i32 33
  %9967 = getelementptr inbounds %struct.Reg, %struct.Reg* %9966, i32 0, i32 0
  %PC.i404 = bitcast %union.anon* %9967 to i64*
  %9968 = load i64, i64* %PC.i404
  %9969 = add i64 %9968, 87
  %9970 = load i64, i64* %PC.i404
  %9971 = add i64 %9970, 6
  %9972 = load i64, i64* %PC.i404
  %9973 = add i64 %9972, 6
  store i64 %9973, i64* %PC.i404
  %9974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %9975 = load i8, i8* %9974, align 1
  store i8 %9975, i8* %BRANCH_TAKEN, align 1
  %9976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9977 = icmp ne i8 %9975, 0
  %9978 = select i1 %9977, i64 %9969, i64 %9971
  store i64 %9978, i64* %9976, align 8
  store %struct.Memory* %loadMem_4167ed, %struct.Memory** %MEMORY
  %loadBr_4167ed = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4167ed = icmp eq i8 %loadBr_4167ed, 1
  br i1 %cmpBr_4167ed, label %block_.L_416844, label %block_4167f3

block_4167f3:                                     ; preds = %block_4167bb
  %loadMem_4167f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %9979 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9980 = getelementptr inbounds %struct.GPR, %struct.GPR* %9979, i32 0, i32 33
  %9981 = getelementptr inbounds %struct.Reg, %struct.Reg* %9980, i32 0, i32 0
  %PC.i402 = bitcast %union.anon* %9981 to i64*
  %9982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9983 = getelementptr inbounds %struct.GPR, %struct.GPR* %9982, i32 0, i32 1
  %9984 = getelementptr inbounds %struct.Reg, %struct.Reg* %9983, i32 0, i32 0
  %RAX.i403 = bitcast %union.anon* %9984 to i64*
  %9985 = load i64, i64* %PC.i402
  %9986 = add i64 %9985, 10
  store i64 %9986, i64* %PC.i402
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i403, align 8
  store %struct.Memory* %loadMem_4167f3, %struct.Memory** %MEMORY
  %loadMem_4167fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %9987 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9988 = getelementptr inbounds %struct.GPR, %struct.GPR* %9987, i32 0, i32 33
  %9989 = getelementptr inbounds %struct.Reg, %struct.Reg* %9988, i32 0, i32 0
  %PC.i399 = bitcast %union.anon* %9989 to i64*
  %9990 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9991 = getelementptr inbounds %struct.GPR, %struct.GPR* %9990, i32 0, i32 5
  %9992 = getelementptr inbounds %struct.Reg, %struct.Reg* %9991, i32 0, i32 0
  %RCX.i400 = bitcast %union.anon* %9992 to i64*
  %9993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %9994 = getelementptr inbounds %struct.GPR, %struct.GPR* %9993, i32 0, i32 15
  %9995 = getelementptr inbounds %struct.Reg, %struct.Reg* %9994, i32 0, i32 0
  %RBP.i401 = bitcast %union.anon* %9995 to i64*
  %9996 = load i64, i64* %RBP.i401
  %9997 = sub i64 %9996, 132
  %9998 = load i64, i64* %PC.i399
  %9999 = add i64 %9998, 7
  store i64 %9999, i64* %PC.i399
  %10000 = inttoptr i64 %9997 to i32*
  %10001 = load i32, i32* %10000
  %10002 = sext i32 %10001 to i64
  store i64 %10002, i64* %RCX.i400, align 8
  store %struct.Memory* %loadMem_4167fd, %struct.Memory** %MEMORY
  %loadMem_416804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10003 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10004 = getelementptr inbounds %struct.GPR, %struct.GPR* %10003, i32 0, i32 33
  %10005 = getelementptr inbounds %struct.Reg, %struct.Reg* %10004, i32 0, i32 0
  %PC.i397 = bitcast %union.anon* %10005 to i64*
  %10006 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10007 = getelementptr inbounds %struct.GPR, %struct.GPR* %10006, i32 0, i32 5
  %10008 = getelementptr inbounds %struct.Reg, %struct.Reg* %10007, i32 0, i32 0
  %RCX.i398 = bitcast %union.anon* %10008 to i64*
  %10009 = load i64, i64* %RCX.i398
  %10010 = load i64, i64* %PC.i397
  %10011 = add i64 %10010, 7
  store i64 %10011, i64* %PC.i397
  %10012 = sext i64 %10009 to i128
  %10013 = and i128 %10012, -18446744073709551616
  %10014 = zext i64 %10009 to i128
  %10015 = or i128 %10013, %10014
  %10016 = mul i128 744, %10015
  %10017 = trunc i128 %10016 to i64
  store i64 %10017, i64* %RCX.i398, align 8
  %10018 = sext i64 %10017 to i128
  %10019 = icmp ne i128 %10018, %10016
  %10020 = zext i1 %10019 to i8
  %10021 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10020, i8* %10021, align 1
  %10022 = trunc i128 %10016 to i32
  %10023 = and i32 %10022, 255
  %10024 = call i32 @llvm.ctpop.i32(i32 %10023)
  %10025 = trunc i32 %10024 to i8
  %10026 = and i8 %10025, 1
  %10027 = xor i8 %10026, 1
  %10028 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10027, i8* %10028, align 1
  %10029 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10029, align 1
  %10030 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10030, align 1
  %10031 = lshr i64 %10017, 63
  %10032 = trunc i64 %10031 to i8
  %10033 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10032, i8* %10033, align 1
  %10034 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10020, i8* %10034, align 1
  store %struct.Memory* %loadMem_416804, %struct.Memory** %MEMORY
  %loadMem_41680b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10036 = getelementptr inbounds %struct.GPR, %struct.GPR* %10035, i32 0, i32 33
  %10037 = getelementptr inbounds %struct.Reg, %struct.Reg* %10036, i32 0, i32 0
  %PC.i394 = bitcast %union.anon* %10037 to i64*
  %10038 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10039 = getelementptr inbounds %struct.GPR, %struct.GPR* %10038, i32 0, i32 1
  %10040 = getelementptr inbounds %struct.Reg, %struct.Reg* %10039, i32 0, i32 0
  %RAX.i395 = bitcast %union.anon* %10040 to i64*
  %10041 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10042 = getelementptr inbounds %struct.GPR, %struct.GPR* %10041, i32 0, i32 7
  %10043 = getelementptr inbounds %struct.Reg, %struct.Reg* %10042, i32 0, i32 0
  %RDX.i396 = bitcast %union.anon* %10043 to i64*
  %10044 = load i64, i64* %RAX.i395
  %10045 = load i64, i64* %PC.i394
  %10046 = add i64 %10045, 3
  store i64 %10046, i64* %PC.i394
  store i64 %10044, i64* %RDX.i396, align 8
  store %struct.Memory* %loadMem_41680b, %struct.Memory** %MEMORY
  %loadMem_41680e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10047 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10048 = getelementptr inbounds %struct.GPR, %struct.GPR* %10047, i32 0, i32 33
  %10049 = getelementptr inbounds %struct.Reg, %struct.Reg* %10048, i32 0, i32 0
  %PC.i391 = bitcast %union.anon* %10049 to i64*
  %10050 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10051 = getelementptr inbounds %struct.GPR, %struct.GPR* %10050, i32 0, i32 5
  %10052 = getelementptr inbounds %struct.Reg, %struct.Reg* %10051, i32 0, i32 0
  %RCX.i392 = bitcast %union.anon* %10052 to i64*
  %10053 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10054 = getelementptr inbounds %struct.GPR, %struct.GPR* %10053, i32 0, i32 7
  %10055 = getelementptr inbounds %struct.Reg, %struct.Reg* %10054, i32 0, i32 0
  %RDX.i393 = bitcast %union.anon* %10055 to i64*
  %10056 = load i64, i64* %RDX.i393
  %10057 = load i64, i64* %RCX.i392
  %10058 = load i64, i64* %PC.i391
  %10059 = add i64 %10058, 3
  store i64 %10059, i64* %PC.i391
  %10060 = add i64 %10057, %10056
  store i64 %10060, i64* %RDX.i393, align 8
  %10061 = icmp ult i64 %10060, %10056
  %10062 = icmp ult i64 %10060, %10057
  %10063 = or i1 %10061, %10062
  %10064 = zext i1 %10063 to i8
  %10065 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10064, i8* %10065, align 1
  %10066 = trunc i64 %10060 to i32
  %10067 = and i32 %10066, 255
  %10068 = call i32 @llvm.ctpop.i32(i32 %10067)
  %10069 = trunc i32 %10068 to i8
  %10070 = and i8 %10069, 1
  %10071 = xor i8 %10070, 1
  %10072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10071, i8* %10072, align 1
  %10073 = xor i64 %10057, %10056
  %10074 = xor i64 %10073, %10060
  %10075 = lshr i64 %10074, 4
  %10076 = trunc i64 %10075 to i8
  %10077 = and i8 %10076, 1
  %10078 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10077, i8* %10078, align 1
  %10079 = icmp eq i64 %10060, 0
  %10080 = zext i1 %10079 to i8
  %10081 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10080, i8* %10081, align 1
  %10082 = lshr i64 %10060, 63
  %10083 = trunc i64 %10082 to i8
  %10084 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10083, i8* %10084, align 1
  %10085 = lshr i64 %10056, 63
  %10086 = lshr i64 %10057, 63
  %10087 = xor i64 %10082, %10085
  %10088 = xor i64 %10082, %10086
  %10089 = add i64 %10087, %10088
  %10090 = icmp eq i64 %10089, 2
  %10091 = zext i1 %10090 to i8
  %10092 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10091, i8* %10092, align 1
  store %struct.Memory* %loadMem_41680e, %struct.Memory** %MEMORY
  %loadMem_416811 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10093 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10094 = getelementptr inbounds %struct.GPR, %struct.GPR* %10093, i32 0, i32 33
  %10095 = getelementptr inbounds %struct.Reg, %struct.Reg* %10094, i32 0, i32 0
  %PC.i388 = bitcast %union.anon* %10095 to i64*
  %10096 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10097 = getelementptr inbounds %struct.GPR, %struct.GPR* %10096, i32 0, i32 7
  %10098 = getelementptr inbounds %struct.Reg, %struct.Reg* %10097, i32 0, i32 0
  %RDX.i389 = bitcast %union.anon* %10098 to i64*
  %10099 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10100 = getelementptr inbounds %struct.GPR, %struct.GPR* %10099, i32 0, i32 9
  %10101 = getelementptr inbounds %struct.Reg, %struct.Reg* %10100, i32 0, i32 0
  %RSI.i390 = bitcast %union.anon* %10101 to i64*
  %10102 = load i64, i64* %RDX.i389
  %10103 = add i64 %10102, 4
  %10104 = load i64, i64* %PC.i388
  %10105 = add i64 %10104, 3
  store i64 %10105, i64* %PC.i388
  %10106 = inttoptr i64 %10103 to i32*
  %10107 = load i32, i32* %10106
  %10108 = zext i32 %10107 to i64
  store i64 %10108, i64* %RSI.i390, align 8
  store %struct.Memory* %loadMem_416811, %struct.Memory** %MEMORY
  %loadMem_416814 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10109 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10110 = getelementptr inbounds %struct.GPR, %struct.GPR* %10109, i32 0, i32 33
  %10111 = getelementptr inbounds %struct.Reg, %struct.Reg* %10110, i32 0, i32 0
  %PC.i385 = bitcast %union.anon* %10111 to i64*
  %10112 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10113 = getelementptr inbounds %struct.GPR, %struct.GPR* %10112, i32 0, i32 5
  %10114 = getelementptr inbounds %struct.Reg, %struct.Reg* %10113, i32 0, i32 0
  %RCX.i386 = bitcast %union.anon* %10114 to i64*
  %10115 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10116 = getelementptr inbounds %struct.GPR, %struct.GPR* %10115, i32 0, i32 15
  %10117 = getelementptr inbounds %struct.Reg, %struct.Reg* %10116, i32 0, i32 0
  %RBP.i387 = bitcast %union.anon* %10117 to i64*
  %10118 = load i64, i64* %RBP.i387
  %10119 = sub i64 %10118, 80
  %10120 = load i64, i64* %PC.i385
  %10121 = add i64 %10120, 4
  store i64 %10121, i64* %PC.i385
  %10122 = inttoptr i64 %10119 to i64*
  %10123 = load i64, i64* %10122
  store i64 %10123, i64* %RCX.i386, align 8
  store %struct.Memory* %loadMem_416814, %struct.Memory** %MEMORY
  %loadMem_416818 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10124 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10125 = getelementptr inbounds %struct.GPR, %struct.GPR* %10124, i32 0, i32 33
  %10126 = getelementptr inbounds %struct.Reg, %struct.Reg* %10125, i32 0, i32 0
  %PC.i382 = bitcast %union.anon* %10126 to i64*
  %10127 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10128 = getelementptr inbounds %struct.GPR, %struct.GPR* %10127, i32 0, i32 5
  %10129 = getelementptr inbounds %struct.Reg, %struct.Reg* %10128, i32 0, i32 0
  %RCX.i383 = bitcast %union.anon* %10129 to i64*
  %10130 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10131 = getelementptr inbounds %struct.GPR, %struct.GPR* %10130, i32 0, i32 9
  %10132 = getelementptr inbounds %struct.Reg, %struct.Reg* %10131, i32 0, i32 0
  %RSI.i384 = bitcast %union.anon* %10132 to i64*
  %10133 = load i64, i64* %RSI.i384
  %10134 = load i64, i64* %RCX.i383
  %10135 = load i64, i64* %PC.i382
  %10136 = add i64 %10135, 2
  store i64 %10136, i64* %PC.i382
  %10137 = trunc i64 %10133 to i32
  %10138 = inttoptr i64 %10134 to i32*
  %10139 = load i32, i32* %10138
  %10140 = add i32 %10139, %10137
  %10141 = zext i32 %10140 to i64
  store i64 %10141, i64* %RSI.i384, align 8
  %10142 = icmp ult i32 %10140, %10137
  %10143 = icmp ult i32 %10140, %10139
  %10144 = or i1 %10142, %10143
  %10145 = zext i1 %10144 to i8
  %10146 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10145, i8* %10146, align 1
  %10147 = and i32 %10140, 255
  %10148 = call i32 @llvm.ctpop.i32(i32 %10147)
  %10149 = trunc i32 %10148 to i8
  %10150 = and i8 %10149, 1
  %10151 = xor i8 %10150, 1
  %10152 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10151, i8* %10152, align 1
  %10153 = xor i32 %10139, %10137
  %10154 = xor i32 %10153, %10140
  %10155 = lshr i32 %10154, 4
  %10156 = trunc i32 %10155 to i8
  %10157 = and i8 %10156, 1
  %10158 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10157, i8* %10158, align 1
  %10159 = icmp eq i32 %10140, 0
  %10160 = zext i1 %10159 to i8
  %10161 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10160, i8* %10161, align 1
  %10162 = lshr i32 %10140, 31
  %10163 = trunc i32 %10162 to i8
  %10164 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10163, i8* %10164, align 1
  %10165 = lshr i32 %10137, 31
  %10166 = lshr i32 %10139, 31
  %10167 = xor i32 %10162, %10165
  %10168 = xor i32 %10162, %10166
  %10169 = add i32 %10167, %10168
  %10170 = icmp eq i32 %10169, 2
  %10171 = zext i1 %10170 to i8
  %10172 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10171, i8* %10172, align 1
  store %struct.Memory* %loadMem_416818, %struct.Memory** %MEMORY
  %loadMem_41681a = load %struct.Memory*, %struct.Memory** %MEMORY
  %10173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10174 = getelementptr inbounds %struct.GPR, %struct.GPR* %10173, i32 0, i32 33
  %10175 = getelementptr inbounds %struct.Reg, %struct.Reg* %10174, i32 0, i32 0
  %PC.i379 = bitcast %union.anon* %10175 to i64*
  %10176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10177 = getelementptr inbounds %struct.GPR, %struct.GPR* %10176, i32 0, i32 9
  %10178 = getelementptr inbounds %struct.Reg, %struct.Reg* %10177, i32 0, i32 0
  %ESI.i380 = bitcast %union.anon* %10178 to i32*
  %10179 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10180 = getelementptr inbounds %struct.GPR, %struct.GPR* %10179, i32 0, i32 5
  %10181 = getelementptr inbounds %struct.Reg, %struct.Reg* %10180, i32 0, i32 0
  %RCX.i381 = bitcast %union.anon* %10181 to i64*
  %10182 = load i64, i64* %RCX.i381
  %10183 = load i32, i32* %ESI.i380
  %10184 = zext i32 %10183 to i64
  %10185 = load i64, i64* %PC.i379
  %10186 = add i64 %10185, 2
  store i64 %10186, i64* %PC.i379
  %10187 = inttoptr i64 %10182 to i32*
  store i32 %10183, i32* %10187
  store %struct.Memory* %loadMem_41681a, %struct.Memory** %MEMORY
  %loadMem_41681c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10188 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10189 = getelementptr inbounds %struct.GPR, %struct.GPR* %10188, i32 0, i32 33
  %10190 = getelementptr inbounds %struct.Reg, %struct.Reg* %10189, i32 0, i32 0
  %PC.i377 = bitcast %union.anon* %10190 to i64*
  %10191 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10192 = getelementptr inbounds %struct.GPR, %struct.GPR* %10191, i32 0, i32 9
  %10193 = getelementptr inbounds %struct.Reg, %struct.Reg* %10192, i32 0, i32 0
  %RSI.i378 = bitcast %union.anon* %10193 to i64*
  %10194 = load i64, i64* %PC.i377
  %10195 = add i64 %10194, 7
  store i64 %10195, i64* %PC.i377
  %10196 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %10197 = zext i32 %10196 to i64
  store i64 %10197, i64* %RSI.i378, align 8
  store %struct.Memory* %loadMem_41681c, %struct.Memory** %MEMORY
  %loadMem_416823 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10198 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10199 = getelementptr inbounds %struct.GPR, %struct.GPR* %10198, i32 0, i32 33
  %10200 = getelementptr inbounds %struct.Reg, %struct.Reg* %10199, i32 0, i32 0
  %PC.i374 = bitcast %union.anon* %10200 to i64*
  %10201 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10202 = getelementptr inbounds %struct.GPR, %struct.GPR* %10201, i32 0, i32 11
  %10203 = getelementptr inbounds %struct.Reg, %struct.Reg* %10202, i32 0, i32 0
  %RDI.i375 = bitcast %union.anon* %10203 to i64*
  %10204 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10205 = getelementptr inbounds %struct.GPR, %struct.GPR* %10204, i32 0, i32 15
  %10206 = getelementptr inbounds %struct.Reg, %struct.Reg* %10205, i32 0, i32 0
  %RBP.i376 = bitcast %union.anon* %10206 to i64*
  %10207 = load i64, i64* %RBP.i376
  %10208 = sub i64 %10207, 20
  %10209 = load i64, i64* %PC.i374
  %10210 = add i64 %10209, 3
  store i64 %10210, i64* %PC.i374
  %10211 = inttoptr i64 %10208 to i32*
  %10212 = load i32, i32* %10211
  %10213 = zext i32 %10212 to i64
  store i64 %10213, i64* %RDI.i375, align 8
  store %struct.Memory* %loadMem_416823, %struct.Memory** %MEMORY
  %loadMem_416826 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10214 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10215 = getelementptr inbounds %struct.GPR, %struct.GPR* %10214, i32 0, i32 33
  %10216 = getelementptr inbounds %struct.Reg, %struct.Reg* %10215, i32 0, i32 0
  %PC.i372 = bitcast %union.anon* %10216 to i64*
  %10217 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10218 = getelementptr inbounds %struct.GPR, %struct.GPR* %10217, i32 0, i32 11
  %10219 = getelementptr inbounds %struct.Reg, %struct.Reg* %10218, i32 0, i32 0
  %RDI.i373 = bitcast %union.anon* %10219 to i64*
  %10220 = load i64, i64* %RDI.i373
  %10221 = load i64, i64* %PC.i372
  %10222 = add i64 %10221, 3
  store i64 %10222, i64* %PC.i372
  %10223 = trunc i64 %10220 to i32
  %10224 = sub i32 %10223, 20
  %10225 = zext i32 %10224 to i64
  store i64 %10225, i64* %RDI.i373, align 8
  %10226 = icmp ult i32 %10223, 20
  %10227 = zext i1 %10226 to i8
  %10228 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10227, i8* %10228, align 1
  %10229 = and i32 %10224, 255
  %10230 = call i32 @llvm.ctpop.i32(i32 %10229)
  %10231 = trunc i32 %10230 to i8
  %10232 = and i8 %10231, 1
  %10233 = xor i8 %10232, 1
  %10234 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10233, i8* %10234, align 1
  %10235 = xor i64 20, %10220
  %10236 = trunc i64 %10235 to i32
  %10237 = xor i32 %10236, %10224
  %10238 = lshr i32 %10237, 4
  %10239 = trunc i32 %10238 to i8
  %10240 = and i8 %10239, 1
  %10241 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10240, i8* %10241, align 1
  %10242 = icmp eq i32 %10224, 0
  %10243 = zext i1 %10242 to i8
  %10244 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10243, i8* %10244, align 1
  %10245 = lshr i32 %10224, 31
  %10246 = trunc i32 %10245 to i8
  %10247 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10246, i8* %10247, align 1
  %10248 = lshr i32 %10223, 31
  %10249 = xor i32 %10245, %10248
  %10250 = add i32 %10249, %10248
  %10251 = icmp eq i32 %10250, 2
  %10252 = zext i1 %10251 to i8
  %10253 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10252, i8* %10253, align 1
  store %struct.Memory* %loadMem_416826, %struct.Memory** %MEMORY
  %loadMem_416829 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10255 = getelementptr inbounds %struct.GPR, %struct.GPR* %10254, i32 0, i32 33
  %10256 = getelementptr inbounds %struct.Reg, %struct.Reg* %10255, i32 0, i32 0
  %PC.i369 = bitcast %union.anon* %10256 to i64*
  %10257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10258 = getelementptr inbounds %struct.GPR, %struct.GPR* %10257, i32 0, i32 11
  %10259 = getelementptr inbounds %struct.Reg, %struct.Reg* %10258, i32 0, i32 0
  %EDI.i370 = bitcast %union.anon* %10259 to i32*
  %10260 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10261 = getelementptr inbounds %struct.GPR, %struct.GPR* %10260, i32 0, i32 5
  %10262 = getelementptr inbounds %struct.Reg, %struct.Reg* %10261, i32 0, i32 0
  %RCX.i371 = bitcast %union.anon* %10262 to i64*
  %10263 = load i32, i32* %EDI.i370
  %10264 = zext i32 %10263 to i64
  %10265 = load i64, i64* %PC.i369
  %10266 = add i64 %10265, 3
  store i64 %10266, i64* %PC.i369
  %10267 = shl i64 %10264, 32
  %10268 = ashr exact i64 %10267, 32
  store i64 %10268, i64* %RCX.i371, align 8
  store %struct.Memory* %loadMem_416829, %struct.Memory** %MEMORY
  %loadMem_41682c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10269 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10270 = getelementptr inbounds %struct.GPR, %struct.GPR* %10269, i32 0, i32 33
  %10271 = getelementptr inbounds %struct.Reg, %struct.Reg* %10270, i32 0, i32 0
  %PC.i367 = bitcast %union.anon* %10271 to i64*
  %10272 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10273 = getelementptr inbounds %struct.GPR, %struct.GPR* %10272, i32 0, i32 5
  %10274 = getelementptr inbounds %struct.Reg, %struct.Reg* %10273, i32 0, i32 0
  %RCX.i368 = bitcast %union.anon* %10274 to i64*
  %10275 = load i64, i64* %RCX.i368
  %10276 = mul i64 %10275, 4
  %10277 = add i64 %10276, 11187184
  %10278 = load i64, i64* %PC.i367
  %10279 = add i64 %10278, 8
  store i64 %10279, i64* %PC.i367
  %10280 = inttoptr i64 %10277 to i32*
  %10281 = load i32, i32* %10280
  %10282 = sext i32 %10281 to i64
  store i64 %10282, i64* %RCX.i368, align 8
  store %struct.Memory* %loadMem_41682c, %struct.Memory** %MEMORY
  %loadMem_416834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10283 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10284 = getelementptr inbounds %struct.GPR, %struct.GPR* %10283, i32 0, i32 33
  %10285 = getelementptr inbounds %struct.Reg, %struct.Reg* %10284, i32 0, i32 0
  %PC.i365 = bitcast %union.anon* %10285 to i64*
  %10286 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10287 = getelementptr inbounds %struct.GPR, %struct.GPR* %10286, i32 0, i32 5
  %10288 = getelementptr inbounds %struct.Reg, %struct.Reg* %10287, i32 0, i32 0
  %RCX.i366 = bitcast %union.anon* %10288 to i64*
  %10289 = load i64, i64* %RCX.i366
  %10290 = load i64, i64* %PC.i365
  %10291 = add i64 %10290, 7
  store i64 %10291, i64* %PC.i365
  %10292 = sext i64 %10289 to i128
  %10293 = and i128 %10292, -18446744073709551616
  %10294 = zext i64 %10289 to i128
  %10295 = or i128 %10293, %10294
  %10296 = mul i128 744, %10295
  %10297 = trunc i128 %10296 to i64
  store i64 %10297, i64* %RCX.i366, align 8
  %10298 = sext i64 %10297 to i128
  %10299 = icmp ne i128 %10298, %10296
  %10300 = zext i1 %10299 to i8
  %10301 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10300, i8* %10301, align 1
  %10302 = trunc i128 %10296 to i32
  %10303 = and i32 %10302, 255
  %10304 = call i32 @llvm.ctpop.i32(i32 %10303)
  %10305 = trunc i32 %10304 to i8
  %10306 = and i8 %10305, 1
  %10307 = xor i8 %10306, 1
  %10308 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10307, i8* %10308, align 1
  %10309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10309, align 1
  %10310 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %10310, align 1
  %10311 = lshr i64 %10297, 63
  %10312 = trunc i64 %10311 to i8
  %10313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10312, i8* %10313, align 1
  %10314 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10300, i8* %10314, align 1
  store %struct.Memory* %loadMem_416834, %struct.Memory** %MEMORY
  %loadMem_41683b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10316 = getelementptr inbounds %struct.GPR, %struct.GPR* %10315, i32 0, i32 33
  %10317 = getelementptr inbounds %struct.Reg, %struct.Reg* %10316, i32 0, i32 0
  %PC.i362 = bitcast %union.anon* %10317 to i64*
  %10318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10319 = getelementptr inbounds %struct.GPR, %struct.GPR* %10318, i32 0, i32 1
  %10320 = getelementptr inbounds %struct.Reg, %struct.Reg* %10319, i32 0, i32 0
  %RAX.i363 = bitcast %union.anon* %10320 to i64*
  %10321 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10322 = getelementptr inbounds %struct.GPR, %struct.GPR* %10321, i32 0, i32 5
  %10323 = getelementptr inbounds %struct.Reg, %struct.Reg* %10322, i32 0, i32 0
  %RCX.i364 = bitcast %union.anon* %10323 to i64*
  %10324 = load i64, i64* %RAX.i363
  %10325 = load i64, i64* %RCX.i364
  %10326 = load i64, i64* %PC.i362
  %10327 = add i64 %10326, 3
  store i64 %10327, i64* %PC.i362
  %10328 = add i64 %10325, %10324
  store i64 %10328, i64* %RAX.i363, align 8
  %10329 = icmp ult i64 %10328, %10324
  %10330 = icmp ult i64 %10328, %10325
  %10331 = or i1 %10329, %10330
  %10332 = zext i1 %10331 to i8
  %10333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10332, i8* %10333, align 1
  %10334 = trunc i64 %10328 to i32
  %10335 = and i32 %10334, 255
  %10336 = call i32 @llvm.ctpop.i32(i32 %10335)
  %10337 = trunc i32 %10336 to i8
  %10338 = and i8 %10337, 1
  %10339 = xor i8 %10338, 1
  %10340 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10339, i8* %10340, align 1
  %10341 = xor i64 %10325, %10324
  %10342 = xor i64 %10341, %10328
  %10343 = lshr i64 %10342, 4
  %10344 = trunc i64 %10343 to i8
  %10345 = and i8 %10344, 1
  %10346 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10345, i8* %10346, align 1
  %10347 = icmp eq i64 %10328, 0
  %10348 = zext i1 %10347 to i8
  %10349 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10348, i8* %10349, align 1
  %10350 = lshr i64 %10328, 63
  %10351 = trunc i64 %10350 to i8
  %10352 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10351, i8* %10352, align 1
  %10353 = lshr i64 %10324, 63
  %10354 = lshr i64 %10325, 63
  %10355 = xor i64 %10350, %10353
  %10356 = xor i64 %10350, %10354
  %10357 = add i64 %10355, %10356
  %10358 = icmp eq i64 %10357, 2
  %10359 = zext i1 %10358 to i8
  %10360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10359, i8* %10360, align 1
  store %struct.Memory* %loadMem_41683b, %struct.Memory** %MEMORY
  %loadMem_41683e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10361 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10362 = getelementptr inbounds %struct.GPR, %struct.GPR* %10361, i32 0, i32 33
  %10363 = getelementptr inbounds %struct.Reg, %struct.Reg* %10362, i32 0, i32 0
  %PC.i359 = bitcast %union.anon* %10363 to i64*
  %10364 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10365 = getelementptr inbounds %struct.GPR, %struct.GPR* %10364, i32 0, i32 9
  %10366 = getelementptr inbounds %struct.Reg, %struct.Reg* %10365, i32 0, i32 0
  %ESI.i360 = bitcast %union.anon* %10366 to i32*
  %10367 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10368 = getelementptr inbounds %struct.GPR, %struct.GPR* %10367, i32 0, i32 1
  %10369 = getelementptr inbounds %struct.Reg, %struct.Reg* %10368, i32 0, i32 0
  %RAX.i361 = bitcast %union.anon* %10369 to i64*
  %10370 = load i64, i64* %RAX.i361
  %10371 = add i64 %10370, 740
  %10372 = load i32, i32* %ESI.i360
  %10373 = zext i32 %10372 to i64
  %10374 = load i64, i64* %PC.i359
  %10375 = add i64 %10374, 6
  store i64 %10375, i64* %PC.i359
  %10376 = inttoptr i64 %10371 to i32*
  store i32 %10372, i32* %10376
  store %struct.Memory* %loadMem_41683e, %struct.Memory** %MEMORY
  br label %block_.L_416844

block_.L_416844:                                  ; preds = %block_4167f3, %block_4167bb, %block_.L_416796
  %loadMem_416844 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10377 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10378 = getelementptr inbounds %struct.GPR, %struct.GPR* %10377, i32 0, i32 33
  %10379 = getelementptr inbounds %struct.Reg, %struct.Reg* %10378, i32 0, i32 0
  %PC.i358 = bitcast %union.anon* %10379 to i64*
  %10380 = load i64, i64* %PC.i358
  %10381 = add i64 %10380, 5
  %10382 = load i64, i64* %PC.i358
  %10383 = add i64 %10382, 5
  store i64 %10383, i64* %PC.i358
  %10384 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10381, i64* %10384, align 8
  store %struct.Memory* %loadMem_416844, %struct.Memory** %MEMORY
  br label %block_.L_416849

block_.L_416849:                                  ; preds = %block_.L_416844, %block_.L_416791
  %loadMem_416849 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10385 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10386 = getelementptr inbounds %struct.GPR, %struct.GPR* %10385, i32 0, i32 33
  %10387 = getelementptr inbounds %struct.Reg, %struct.Reg* %10386, i32 0, i32 0
  %PC.i357 = bitcast %union.anon* %10387 to i64*
  %10388 = load i64, i64* %PC.i357
  %10389 = add i64 %10388, 5
  %10390 = load i64, i64* %PC.i357
  %10391 = add i64 %10390, 5
  store i64 %10391, i64* %PC.i357
  %10392 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10389, i64* %10392, align 8
  store %struct.Memory* %loadMem_416849, %struct.Memory** %MEMORY
  br label %block_.L_41684e

block_.L_41684e:                                  ; preds = %block_.L_416849, %block_.L_41668b
  %loadMem_41684e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10394 = getelementptr inbounds %struct.GPR, %struct.GPR* %10393, i32 0, i32 33
  %10395 = getelementptr inbounds %struct.Reg, %struct.Reg* %10394, i32 0, i32 0
  %PC.i356 = bitcast %union.anon* %10395 to i64*
  %10396 = load i64, i64* %PC.i356
  %10397 = add i64 %10396, 5
  %10398 = load i64, i64* %PC.i356
  %10399 = add i64 %10398, 5
  store i64 %10399, i64* %PC.i356
  %10400 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10397, i64* %10400, align 8
  store %struct.Memory* %loadMem_41684e, %struct.Memory** %MEMORY
  br label %block_.L_416853

block_.L_416853:                                  ; preds = %block_.L_41684e, %block_4165d3
  %loadMem_416853 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10402 = getelementptr inbounds %struct.GPR, %struct.GPR* %10401, i32 0, i32 33
  %10403 = getelementptr inbounds %struct.Reg, %struct.Reg* %10402, i32 0, i32 0
  %PC.i355 = bitcast %union.anon* %10403 to i64*
  %10404 = load i64, i64* %PC.i355
  %10405 = add i64 %10404, 5
  %10406 = load i64, i64* %PC.i355
  %10407 = add i64 %10406, 5
  store i64 %10407, i64* %PC.i355
  %10408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10405, i64* %10408, align 8
  store %struct.Memory* %loadMem_416853, %struct.Memory** %MEMORY
  br label %block_.L_416858

block_.L_416858:                                  ; preds = %block_.L_416853, %block_4165a9
  %loadMem_416858 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10410 = getelementptr inbounds %struct.GPR, %struct.GPR* %10409, i32 0, i32 33
  %10411 = getelementptr inbounds %struct.Reg, %struct.Reg* %10410, i32 0, i32 0
  %PC.i352 = bitcast %union.anon* %10411 to i64*
  %10412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10413 = getelementptr inbounds %struct.GPR, %struct.GPR* %10412, i32 0, i32 1
  %10414 = getelementptr inbounds %struct.Reg, %struct.Reg* %10413, i32 0, i32 0
  %RAX.i353 = bitcast %union.anon* %10414 to i64*
  %10415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10416 = getelementptr inbounds %struct.GPR, %struct.GPR* %10415, i32 0, i32 15
  %10417 = getelementptr inbounds %struct.Reg, %struct.Reg* %10416, i32 0, i32 0
  %RBP.i354 = bitcast %union.anon* %10417 to i64*
  %10418 = load i64, i64* %RBP.i354
  %10419 = sub i64 %10418, 20
  %10420 = load i64, i64* %PC.i352
  %10421 = add i64 %10420, 3
  store i64 %10421, i64* %PC.i352
  %10422 = inttoptr i64 %10419 to i32*
  %10423 = load i32, i32* %10422
  %10424 = zext i32 %10423 to i64
  store i64 %10424, i64* %RAX.i353, align 8
  store %struct.Memory* %loadMem_416858, %struct.Memory** %MEMORY
  %loadMem_41685b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10426 = getelementptr inbounds %struct.GPR, %struct.GPR* %10425, i32 0, i32 33
  %10427 = getelementptr inbounds %struct.Reg, %struct.Reg* %10426, i32 0, i32 0
  %PC.i350 = bitcast %union.anon* %10427 to i64*
  %10428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10429 = getelementptr inbounds %struct.GPR, %struct.GPR* %10428, i32 0, i32 1
  %10430 = getelementptr inbounds %struct.Reg, %struct.Reg* %10429, i32 0, i32 0
  %RAX.i351 = bitcast %union.anon* %10430 to i64*
  %10431 = load i64, i64* %RAX.i351
  %10432 = load i64, i64* %PC.i350
  %10433 = add i64 %10432, 3
  store i64 %10433, i64* %PC.i350
  %10434 = trunc i64 %10431 to i32
  %10435 = add i32 1, %10434
  %10436 = zext i32 %10435 to i64
  store i64 %10436, i64* %RAX.i351, align 8
  %10437 = icmp ult i32 %10435, %10434
  %10438 = icmp ult i32 %10435, 1
  %10439 = or i1 %10437, %10438
  %10440 = zext i1 %10439 to i8
  %10441 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10440, i8* %10441, align 1
  %10442 = and i32 %10435, 255
  %10443 = call i32 @llvm.ctpop.i32(i32 %10442)
  %10444 = trunc i32 %10443 to i8
  %10445 = and i8 %10444, 1
  %10446 = xor i8 %10445, 1
  %10447 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10446, i8* %10447, align 1
  %10448 = xor i64 1, %10431
  %10449 = trunc i64 %10448 to i32
  %10450 = xor i32 %10449, %10435
  %10451 = lshr i32 %10450, 4
  %10452 = trunc i32 %10451 to i8
  %10453 = and i8 %10452, 1
  %10454 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10453, i8* %10454, align 1
  %10455 = icmp eq i32 %10435, 0
  %10456 = zext i1 %10455 to i8
  %10457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10456, i8* %10457, align 1
  %10458 = lshr i32 %10435, 31
  %10459 = trunc i32 %10458 to i8
  %10460 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10459, i8* %10460, align 1
  %10461 = lshr i32 %10434, 31
  %10462 = xor i32 %10458, %10461
  %10463 = add i32 %10462, %10458
  %10464 = icmp eq i32 %10463, 2
  %10465 = zext i1 %10464 to i8
  %10466 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10465, i8* %10466, align 1
  store %struct.Memory* %loadMem_41685b, %struct.Memory** %MEMORY
  %loadMem_41685e = load %struct.Memory*, %struct.Memory** %MEMORY
  %10467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10468 = getelementptr inbounds %struct.GPR, %struct.GPR* %10467, i32 0, i32 33
  %10469 = getelementptr inbounds %struct.Reg, %struct.Reg* %10468, i32 0, i32 0
  %PC.i347 = bitcast %union.anon* %10469 to i64*
  %10470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10471 = getelementptr inbounds %struct.GPR, %struct.GPR* %10470, i32 0, i32 1
  %10472 = getelementptr inbounds %struct.Reg, %struct.Reg* %10471, i32 0, i32 0
  %EAX.i348 = bitcast %union.anon* %10472 to i32*
  %10473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10474 = getelementptr inbounds %struct.GPR, %struct.GPR* %10473, i32 0, i32 5
  %10475 = getelementptr inbounds %struct.Reg, %struct.Reg* %10474, i32 0, i32 0
  %RCX.i349 = bitcast %union.anon* %10475 to i64*
  %10476 = load i32, i32* %EAX.i348
  %10477 = zext i32 %10476 to i64
  %10478 = load i64, i64* %PC.i347
  %10479 = add i64 %10478, 3
  store i64 %10479, i64* %PC.i347
  %10480 = shl i64 %10477, 32
  %10481 = ashr exact i64 %10480, 32
  store i64 %10481, i64* %RCX.i349, align 8
  store %struct.Memory* %loadMem_41685e, %struct.Memory** %MEMORY
  %loadMem_416861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10482 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10483 = getelementptr inbounds %struct.GPR, %struct.GPR* %10482, i32 0, i32 33
  %10484 = getelementptr inbounds %struct.Reg, %struct.Reg* %10483, i32 0, i32 0
  %PC.i344 = bitcast %union.anon* %10484 to i64*
  %10485 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10486 = getelementptr inbounds %struct.GPR, %struct.GPR* %10485, i32 0, i32 1
  %10487 = getelementptr inbounds %struct.Reg, %struct.Reg* %10486, i32 0, i32 0
  %RAX.i345 = bitcast %union.anon* %10487 to i64*
  %10488 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10489 = getelementptr inbounds %struct.GPR, %struct.GPR* %10488, i32 0, i32 5
  %10490 = getelementptr inbounds %struct.Reg, %struct.Reg* %10489, i32 0, i32 0
  %RCX.i346 = bitcast %union.anon* %10490 to i64*
  %10491 = load i64, i64* %RCX.i346
  %10492 = add i64 %10491, 12099168
  %10493 = load i64, i64* %PC.i344
  %10494 = add i64 %10493, 8
  store i64 %10494, i64* %PC.i344
  %10495 = inttoptr i64 %10492 to i8*
  %10496 = load i8, i8* %10495
  %10497 = zext i8 %10496 to i64
  store i64 %10497, i64* %RAX.i345, align 8
  store %struct.Memory* %loadMem_416861, %struct.Memory** %MEMORY
  %loadMem_416869 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10498 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10499 = getelementptr inbounds %struct.GPR, %struct.GPR* %10498, i32 0, i32 33
  %10500 = getelementptr inbounds %struct.Reg, %struct.Reg* %10499, i32 0, i32 0
  %PC.i342 = bitcast %union.anon* %10500 to i64*
  %10501 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10502 = getelementptr inbounds %struct.GPR, %struct.GPR* %10501, i32 0, i32 1
  %10503 = getelementptr inbounds %struct.Reg, %struct.Reg* %10502, i32 0, i32 0
  %EAX.i343 = bitcast %union.anon* %10503 to i32*
  %10504 = load i32, i32* %EAX.i343
  %10505 = zext i32 %10504 to i64
  %10506 = load i64, i64* %PC.i342
  %10507 = add i64 %10506, 3
  store i64 %10507, i64* %PC.i342
  %10508 = sub i32 %10504, 3
  %10509 = icmp ult i32 %10504, 3
  %10510 = zext i1 %10509 to i8
  %10511 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10510, i8* %10511, align 1
  %10512 = and i32 %10508, 255
  %10513 = call i32 @llvm.ctpop.i32(i32 %10512)
  %10514 = trunc i32 %10513 to i8
  %10515 = and i8 %10514, 1
  %10516 = xor i8 %10515, 1
  %10517 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10516, i8* %10517, align 1
  %10518 = xor i64 3, %10505
  %10519 = trunc i64 %10518 to i32
  %10520 = xor i32 %10519, %10508
  %10521 = lshr i32 %10520, 4
  %10522 = trunc i32 %10521 to i8
  %10523 = and i8 %10522, 1
  %10524 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10523, i8* %10524, align 1
  %10525 = icmp eq i32 %10508, 0
  %10526 = zext i1 %10525 to i8
  %10527 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10526, i8* %10527, align 1
  %10528 = lshr i32 %10508, 31
  %10529 = trunc i32 %10528 to i8
  %10530 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10529, i8* %10530, align 1
  %10531 = lshr i32 %10504, 31
  %10532 = xor i32 %10528, %10531
  %10533 = add i32 %10532, %10531
  %10534 = icmp eq i32 %10533, 2
  %10535 = zext i1 %10534 to i8
  %10536 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10535, i8* %10536, align 1
  store %struct.Memory* %loadMem_416869, %struct.Memory** %MEMORY
  %loadMem_41686c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10538 = getelementptr inbounds %struct.GPR, %struct.GPR* %10537, i32 0, i32 33
  %10539 = getelementptr inbounds %struct.Reg, %struct.Reg* %10538, i32 0, i32 0
  %PC.i341 = bitcast %union.anon* %10539 to i64*
  %10540 = load i64, i64* %PC.i341
  %10541 = add i64 %10540, 22
  %10542 = load i64, i64* %PC.i341
  %10543 = add i64 %10542, 6
  %10544 = load i64, i64* %PC.i341
  %10545 = add i64 %10544, 6
  store i64 %10545, i64* %PC.i341
  %10546 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10547 = load i8, i8* %10546, align 1
  %10548 = icmp eq i8 %10547, 0
  %10549 = zext i1 %10548 to i8
  store i8 %10549, i8* %BRANCH_TAKEN, align 1
  %10550 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10551 = select i1 %10548, i64 %10541, i64 %10543
  store i64 %10551, i64* %10550, align 8
  store %struct.Memory* %loadMem_41686c, %struct.Memory** %MEMORY
  %loadBr_41686c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_41686c = icmp eq i8 %loadBr_41686c, 1
  br i1 %cmpBr_41686c, label %block_.L_416882, label %block_416872

block_416872:                                     ; preds = %block_.L_416858
  %loadMem_416872 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10552 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10553 = getelementptr inbounds %struct.GPR, %struct.GPR* %10552, i32 0, i32 33
  %10554 = getelementptr inbounds %struct.Reg, %struct.Reg* %10553, i32 0, i32 0
  %PC.i338 = bitcast %union.anon* %10554 to i64*
  %10555 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10556 = getelementptr inbounds %struct.GPR, %struct.GPR* %10555, i32 0, i32 1
  %10557 = getelementptr inbounds %struct.Reg, %struct.Reg* %10556, i32 0, i32 0
  %RAX.i339 = bitcast %union.anon* %10557 to i64*
  %10558 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10559 = getelementptr inbounds %struct.GPR, %struct.GPR* %10558, i32 0, i32 15
  %10560 = getelementptr inbounds %struct.Reg, %struct.Reg* %10559, i32 0, i32 0
  %RBP.i340 = bitcast %union.anon* %10560 to i64*
  %10561 = load i64, i64* %RBP.i340
  %10562 = sub i64 %10561, 40
  %10563 = load i64, i64* %PC.i338
  %10564 = add i64 %10563, 4
  store i64 %10564, i64* %PC.i338
  %10565 = inttoptr i64 %10562 to i64*
  %10566 = load i64, i64* %10565
  store i64 %10566, i64* %RAX.i339, align 8
  store %struct.Memory* %loadMem_416872, %struct.Memory** %MEMORY
  %loadMem_416876 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10568 = getelementptr inbounds %struct.GPR, %struct.GPR* %10567, i32 0, i32 33
  %10569 = getelementptr inbounds %struct.Reg, %struct.Reg* %10568, i32 0, i32 0
  %PC.i335 = bitcast %union.anon* %10569 to i64*
  %10570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10571 = getelementptr inbounds %struct.GPR, %struct.GPR* %10570, i32 0, i32 1
  %10572 = getelementptr inbounds %struct.Reg, %struct.Reg* %10571, i32 0, i32 0
  %RAX.i336 = bitcast %union.anon* %10572 to i64*
  %10573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10574 = getelementptr inbounds %struct.GPR, %struct.GPR* %10573, i32 0, i32 5
  %10575 = getelementptr inbounds %struct.Reg, %struct.Reg* %10574, i32 0, i32 0
  %RCX.i337 = bitcast %union.anon* %10575 to i64*
  %10576 = load i64, i64* %RAX.i336
  %10577 = load i64, i64* %PC.i335
  %10578 = add i64 %10577, 2
  store i64 %10578, i64* %PC.i335
  %10579 = inttoptr i64 %10576 to i32*
  %10580 = load i32, i32* %10579
  %10581 = zext i32 %10580 to i64
  store i64 %10581, i64* %RCX.i337, align 8
  store %struct.Memory* %loadMem_416876, %struct.Memory** %MEMORY
  %loadMem_416878 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10583 = getelementptr inbounds %struct.GPR, %struct.GPR* %10582, i32 0, i32 33
  %10584 = getelementptr inbounds %struct.Reg, %struct.Reg* %10583, i32 0, i32 0
  %PC.i333 = bitcast %union.anon* %10584 to i64*
  %10585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10586 = getelementptr inbounds %struct.GPR, %struct.GPR* %10585, i32 0, i32 5
  %10587 = getelementptr inbounds %struct.Reg, %struct.Reg* %10586, i32 0, i32 0
  %RCX.i334 = bitcast %union.anon* %10587 to i64*
  %10588 = load i64, i64* %RCX.i334
  %10589 = load i64, i64* %PC.i333
  %10590 = add i64 %10589, 3
  store i64 %10590, i64* %PC.i333
  %10591 = trunc i64 %10588 to i32
  %10592 = add i32 1, %10591
  %10593 = zext i32 %10592 to i64
  store i64 %10593, i64* %RCX.i334, align 8
  %10594 = icmp ult i32 %10592, %10591
  %10595 = icmp ult i32 %10592, 1
  %10596 = or i1 %10594, %10595
  %10597 = zext i1 %10596 to i8
  %10598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10597, i8* %10598, align 1
  %10599 = and i32 %10592, 255
  %10600 = call i32 @llvm.ctpop.i32(i32 %10599)
  %10601 = trunc i32 %10600 to i8
  %10602 = and i8 %10601, 1
  %10603 = xor i8 %10602, 1
  %10604 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10603, i8* %10604, align 1
  %10605 = xor i64 1, %10588
  %10606 = trunc i64 %10605 to i32
  %10607 = xor i32 %10606, %10592
  %10608 = lshr i32 %10607, 4
  %10609 = trunc i32 %10608 to i8
  %10610 = and i8 %10609, 1
  %10611 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10610, i8* %10611, align 1
  %10612 = icmp eq i32 %10592, 0
  %10613 = zext i1 %10612 to i8
  %10614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10613, i8* %10614, align 1
  %10615 = lshr i32 %10592, 31
  %10616 = trunc i32 %10615 to i8
  %10617 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10616, i8* %10617, align 1
  %10618 = lshr i32 %10591, 31
  %10619 = xor i32 %10615, %10618
  %10620 = add i32 %10619, %10615
  %10621 = icmp eq i32 %10620, 2
  %10622 = zext i1 %10621 to i8
  %10623 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10622, i8* %10623, align 1
  store %struct.Memory* %loadMem_416878, %struct.Memory** %MEMORY
  %loadMem_41687b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10624 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10625 = getelementptr inbounds %struct.GPR, %struct.GPR* %10624, i32 0, i32 33
  %10626 = getelementptr inbounds %struct.Reg, %struct.Reg* %10625, i32 0, i32 0
  %PC.i330 = bitcast %union.anon* %10626 to i64*
  %10627 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10628 = getelementptr inbounds %struct.GPR, %struct.GPR* %10627, i32 0, i32 5
  %10629 = getelementptr inbounds %struct.Reg, %struct.Reg* %10628, i32 0, i32 0
  %ECX.i331 = bitcast %union.anon* %10629 to i32*
  %10630 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10631 = getelementptr inbounds %struct.GPR, %struct.GPR* %10630, i32 0, i32 1
  %10632 = getelementptr inbounds %struct.Reg, %struct.Reg* %10631, i32 0, i32 0
  %RAX.i332 = bitcast %union.anon* %10632 to i64*
  %10633 = load i64, i64* %RAX.i332
  %10634 = load i32, i32* %ECX.i331
  %10635 = zext i32 %10634 to i64
  %10636 = load i64, i64* %PC.i330
  %10637 = add i64 %10636, 2
  store i64 %10637, i64* %PC.i330
  %10638 = inttoptr i64 %10633 to i32*
  store i32 %10634, i32* %10638
  store %struct.Memory* %loadMem_41687b, %struct.Memory** %MEMORY
  %loadMem_41687d = load %struct.Memory*, %struct.Memory** %MEMORY
  %10639 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10640 = getelementptr inbounds %struct.GPR, %struct.GPR* %10639, i32 0, i32 33
  %10641 = getelementptr inbounds %struct.Reg, %struct.Reg* %10640, i32 0, i32 0
  %PC.i329 = bitcast %union.anon* %10641 to i64*
  %10642 = load i64, i64* %PC.i329
  %10643 = add i64 %10642, 676
  %10644 = load i64, i64* %PC.i329
  %10645 = add i64 %10644, 5
  store i64 %10645, i64* %PC.i329
  %10646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10643, i64* %10646, align 8
  store %struct.Memory* %loadMem_41687d, %struct.Memory** %MEMORY
  br label %block_.L_416b21

block_.L_416882:                                  ; preds = %block_.L_416858
  %loadMem_416882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10647 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10648 = getelementptr inbounds %struct.GPR, %struct.GPR* %10647, i32 0, i32 33
  %10649 = getelementptr inbounds %struct.Reg, %struct.Reg* %10648, i32 0, i32 0
  %PC.i326 = bitcast %union.anon* %10649 to i64*
  %10650 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10651 = getelementptr inbounds %struct.GPR, %struct.GPR* %10650, i32 0, i32 1
  %10652 = getelementptr inbounds %struct.Reg, %struct.Reg* %10651, i32 0, i32 0
  %RAX.i327 = bitcast %union.anon* %10652 to i64*
  %10653 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10654 = getelementptr inbounds %struct.GPR, %struct.GPR* %10653, i32 0, i32 15
  %10655 = getelementptr inbounds %struct.Reg, %struct.Reg* %10654, i32 0, i32 0
  %RBP.i328 = bitcast %union.anon* %10655 to i64*
  %10656 = load i64, i64* %RBP.i328
  %10657 = sub i64 %10656, 20
  %10658 = load i64, i64* %PC.i326
  %10659 = add i64 %10658, 3
  store i64 %10659, i64* %PC.i326
  %10660 = inttoptr i64 %10657 to i32*
  %10661 = load i32, i32* %10660
  %10662 = zext i32 %10661 to i64
  store i64 %10662, i64* %RAX.i327, align 8
  store %struct.Memory* %loadMem_416882, %struct.Memory** %MEMORY
  %loadMem_416885 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10664 = getelementptr inbounds %struct.GPR, %struct.GPR* %10663, i32 0, i32 33
  %10665 = getelementptr inbounds %struct.Reg, %struct.Reg* %10664, i32 0, i32 0
  %PC.i324 = bitcast %union.anon* %10665 to i64*
  %10666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10667 = getelementptr inbounds %struct.GPR, %struct.GPR* %10666, i32 0, i32 1
  %10668 = getelementptr inbounds %struct.Reg, %struct.Reg* %10667, i32 0, i32 0
  %RAX.i325 = bitcast %union.anon* %10668 to i64*
  %10669 = load i64, i64* %RAX.i325
  %10670 = load i64, i64* %PC.i324
  %10671 = add i64 %10670, 3
  store i64 %10671, i64* %PC.i324
  %10672 = trunc i64 %10669 to i32
  %10673 = add i32 1, %10672
  %10674 = zext i32 %10673 to i64
  store i64 %10674, i64* %RAX.i325, align 8
  %10675 = icmp ult i32 %10673, %10672
  %10676 = icmp ult i32 %10673, 1
  %10677 = or i1 %10675, %10676
  %10678 = zext i1 %10677 to i8
  %10679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10678, i8* %10679, align 1
  %10680 = and i32 %10673, 255
  %10681 = call i32 @llvm.ctpop.i32(i32 %10680)
  %10682 = trunc i32 %10681 to i8
  %10683 = and i8 %10682, 1
  %10684 = xor i8 %10683, 1
  %10685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10684, i8* %10685, align 1
  %10686 = xor i64 1, %10669
  %10687 = trunc i64 %10686 to i32
  %10688 = xor i32 %10687, %10673
  %10689 = lshr i32 %10688, 4
  %10690 = trunc i32 %10689 to i8
  %10691 = and i8 %10690, 1
  %10692 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10691, i8* %10692, align 1
  %10693 = icmp eq i32 %10673, 0
  %10694 = zext i1 %10693 to i8
  %10695 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10694, i8* %10695, align 1
  %10696 = lshr i32 %10673, 31
  %10697 = trunc i32 %10696 to i8
  %10698 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10697, i8* %10698, align 1
  %10699 = lshr i32 %10672, 31
  %10700 = xor i32 %10696, %10699
  %10701 = add i32 %10700, %10696
  %10702 = icmp eq i32 %10701, 2
  %10703 = zext i1 %10702 to i8
  %10704 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10703, i8* %10704, align 1
  store %struct.Memory* %loadMem_416885, %struct.Memory** %MEMORY
  %loadMem_416888 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10705 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10706 = getelementptr inbounds %struct.GPR, %struct.GPR* %10705, i32 0, i32 33
  %10707 = getelementptr inbounds %struct.Reg, %struct.Reg* %10706, i32 0, i32 0
  %PC.i321 = bitcast %union.anon* %10707 to i64*
  %10708 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10709 = getelementptr inbounds %struct.GPR, %struct.GPR* %10708, i32 0, i32 1
  %10710 = getelementptr inbounds %struct.Reg, %struct.Reg* %10709, i32 0, i32 0
  %EAX.i322 = bitcast %union.anon* %10710 to i32*
  %10711 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10712 = getelementptr inbounds %struct.GPR, %struct.GPR* %10711, i32 0, i32 5
  %10713 = getelementptr inbounds %struct.Reg, %struct.Reg* %10712, i32 0, i32 0
  %RCX.i323 = bitcast %union.anon* %10713 to i64*
  %10714 = load i32, i32* %EAX.i322
  %10715 = zext i32 %10714 to i64
  %10716 = load i64, i64* %PC.i321
  %10717 = add i64 %10716, 3
  store i64 %10717, i64* %PC.i321
  %10718 = shl i64 %10715, 32
  %10719 = ashr exact i64 %10718, 32
  store i64 %10719, i64* %RCX.i323, align 8
  store %struct.Memory* %loadMem_416888, %struct.Memory** %MEMORY
  %loadMem_41688b = load %struct.Memory*, %struct.Memory** %MEMORY
  %10720 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10721 = getelementptr inbounds %struct.GPR, %struct.GPR* %10720, i32 0, i32 33
  %10722 = getelementptr inbounds %struct.Reg, %struct.Reg* %10721, i32 0, i32 0
  %PC.i318 = bitcast %union.anon* %10722 to i64*
  %10723 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10724 = getelementptr inbounds %struct.GPR, %struct.GPR* %10723, i32 0, i32 1
  %10725 = getelementptr inbounds %struct.Reg, %struct.Reg* %10724, i32 0, i32 0
  %RAX.i319 = bitcast %union.anon* %10725 to i64*
  %10726 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10727 = getelementptr inbounds %struct.GPR, %struct.GPR* %10726, i32 0, i32 5
  %10728 = getelementptr inbounds %struct.Reg, %struct.Reg* %10727, i32 0, i32 0
  %RCX.i320 = bitcast %union.anon* %10728 to i64*
  %10729 = load i64, i64* %RCX.i320
  %10730 = add i64 %10729, 12099168
  %10731 = load i64, i64* %PC.i318
  %10732 = add i64 %10731, 8
  store i64 %10732, i64* %PC.i318
  %10733 = inttoptr i64 %10730 to i8*
  %10734 = load i8, i8* %10733
  %10735 = zext i8 %10734 to i64
  store i64 %10735, i64* %RAX.i319, align 8
  store %struct.Memory* %loadMem_41688b, %struct.Memory** %MEMORY
  %loadMem_416893 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10736 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10737 = getelementptr inbounds %struct.GPR, %struct.GPR* %10736, i32 0, i32 33
  %10738 = getelementptr inbounds %struct.Reg, %struct.Reg* %10737, i32 0, i32 0
  %PC.i316 = bitcast %union.anon* %10738 to i64*
  %10739 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10740 = getelementptr inbounds %struct.GPR, %struct.GPR* %10739, i32 0, i32 1
  %10741 = getelementptr inbounds %struct.Reg, %struct.Reg* %10740, i32 0, i32 0
  %EAX.i317 = bitcast %union.anon* %10741 to i32*
  %10742 = load i32, i32* %EAX.i317
  %10743 = zext i32 %10742 to i64
  %10744 = load i64, i64* %PC.i316
  %10745 = add i64 %10744, 3
  store i64 %10745, i64* %PC.i316
  %10746 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %10746, align 1
  %10747 = and i32 %10742, 255
  %10748 = call i32 @llvm.ctpop.i32(i32 %10747)
  %10749 = trunc i32 %10748 to i8
  %10750 = and i8 %10749, 1
  %10751 = xor i8 %10750, 1
  %10752 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10751, i8* %10752, align 1
  %10753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %10753, align 1
  %10754 = icmp eq i32 %10742, 0
  %10755 = zext i1 %10754 to i8
  %10756 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10755, i8* %10756, align 1
  %10757 = lshr i32 %10742, 31
  %10758 = trunc i32 %10757 to i8
  %10759 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10758, i8* %10759, align 1
  %10760 = lshr i32 %10742, 31
  %10761 = xor i32 %10757, %10760
  %10762 = add i32 %10761, %10760
  %10763 = icmp eq i32 %10762, 2
  %10764 = zext i1 %10763 to i8
  %10765 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10764, i8* %10765, align 1
  store %struct.Memory* %loadMem_416893, %struct.Memory** %MEMORY
  %loadMem_416896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10766 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10767 = getelementptr inbounds %struct.GPR, %struct.GPR* %10766, i32 0, i32 33
  %10768 = getelementptr inbounds %struct.Reg, %struct.Reg* %10767, i32 0, i32 0
  %PC.i315 = bitcast %union.anon* %10768 to i64*
  %10769 = load i64, i64* %PC.i315
  %10770 = add i64 %10769, 22
  %10771 = load i64, i64* %PC.i315
  %10772 = add i64 %10771, 6
  %10773 = load i64, i64* %PC.i315
  %10774 = add i64 %10773, 6
  store i64 %10774, i64* %PC.i315
  %10775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %10776 = load i8, i8* %10775, align 1
  %10777 = icmp eq i8 %10776, 0
  %10778 = zext i1 %10777 to i8
  store i8 %10778, i8* %BRANCH_TAKEN, align 1
  %10779 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %10780 = select i1 %10777, i64 %10770, i64 %10772
  store i64 %10780, i64* %10779, align 8
  store %struct.Memory* %loadMem_416896, %struct.Memory** %MEMORY
  %loadBr_416896 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416896 = icmp eq i8 %loadBr_416896, 1
  br i1 %cmpBr_416896, label %block_.L_4168ac, label %block_41689c

block_41689c:                                     ; preds = %block_.L_416882
  %loadMem_41689c = load %struct.Memory*, %struct.Memory** %MEMORY
  %10781 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10782 = getelementptr inbounds %struct.GPR, %struct.GPR* %10781, i32 0, i32 33
  %10783 = getelementptr inbounds %struct.Reg, %struct.Reg* %10782, i32 0, i32 0
  %PC.i312 = bitcast %union.anon* %10783 to i64*
  %10784 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10785 = getelementptr inbounds %struct.GPR, %struct.GPR* %10784, i32 0, i32 1
  %10786 = getelementptr inbounds %struct.Reg, %struct.Reg* %10785, i32 0, i32 0
  %RAX.i313 = bitcast %union.anon* %10786 to i64*
  %10787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10788 = getelementptr inbounds %struct.GPR, %struct.GPR* %10787, i32 0, i32 15
  %10789 = getelementptr inbounds %struct.Reg, %struct.Reg* %10788, i32 0, i32 0
  %RBP.i314 = bitcast %union.anon* %10789 to i64*
  %10790 = load i64, i64* %RBP.i314
  %10791 = sub i64 %10790, 96
  %10792 = load i64, i64* %PC.i312
  %10793 = add i64 %10792, 4
  store i64 %10793, i64* %PC.i312
  %10794 = inttoptr i64 %10791 to i64*
  %10795 = load i64, i64* %10794
  store i64 %10795, i64* %RAX.i313, align 8
  store %struct.Memory* %loadMem_41689c, %struct.Memory** %MEMORY
  %loadMem_4168a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10796 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10797 = getelementptr inbounds %struct.GPR, %struct.GPR* %10796, i32 0, i32 33
  %10798 = getelementptr inbounds %struct.Reg, %struct.Reg* %10797, i32 0, i32 0
  %PC.i309 = bitcast %union.anon* %10798 to i64*
  %10799 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10800 = getelementptr inbounds %struct.GPR, %struct.GPR* %10799, i32 0, i32 1
  %10801 = getelementptr inbounds %struct.Reg, %struct.Reg* %10800, i32 0, i32 0
  %RAX.i310 = bitcast %union.anon* %10801 to i64*
  %10802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10803 = getelementptr inbounds %struct.GPR, %struct.GPR* %10802, i32 0, i32 5
  %10804 = getelementptr inbounds %struct.Reg, %struct.Reg* %10803, i32 0, i32 0
  %RCX.i311 = bitcast %union.anon* %10804 to i64*
  %10805 = load i64, i64* %RAX.i310
  %10806 = load i64, i64* %PC.i309
  %10807 = add i64 %10806, 2
  store i64 %10807, i64* %PC.i309
  %10808 = inttoptr i64 %10805 to i32*
  %10809 = load i32, i32* %10808
  %10810 = zext i32 %10809 to i64
  store i64 %10810, i64* %RCX.i311, align 8
  store %struct.Memory* %loadMem_4168a0, %struct.Memory** %MEMORY
  %loadMem_4168a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10812 = getelementptr inbounds %struct.GPR, %struct.GPR* %10811, i32 0, i32 33
  %10813 = getelementptr inbounds %struct.Reg, %struct.Reg* %10812, i32 0, i32 0
  %PC.i307 = bitcast %union.anon* %10813 to i64*
  %10814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10815 = getelementptr inbounds %struct.GPR, %struct.GPR* %10814, i32 0, i32 5
  %10816 = getelementptr inbounds %struct.Reg, %struct.Reg* %10815, i32 0, i32 0
  %RCX.i308 = bitcast %union.anon* %10816 to i64*
  %10817 = load i64, i64* %RCX.i308
  %10818 = load i64, i64* %PC.i307
  %10819 = add i64 %10818, 3
  store i64 %10819, i64* %PC.i307
  %10820 = trunc i64 %10817 to i32
  %10821 = add i32 1, %10820
  %10822 = zext i32 %10821 to i64
  store i64 %10822, i64* %RCX.i308, align 8
  %10823 = icmp ult i32 %10821, %10820
  %10824 = icmp ult i32 %10821, 1
  %10825 = or i1 %10823, %10824
  %10826 = zext i1 %10825 to i8
  %10827 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10826, i8* %10827, align 1
  %10828 = and i32 %10821, 255
  %10829 = call i32 @llvm.ctpop.i32(i32 %10828)
  %10830 = trunc i32 %10829 to i8
  %10831 = and i8 %10830, 1
  %10832 = xor i8 %10831, 1
  %10833 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10832, i8* %10833, align 1
  %10834 = xor i64 1, %10817
  %10835 = trunc i64 %10834 to i32
  %10836 = xor i32 %10835, %10821
  %10837 = lshr i32 %10836, 4
  %10838 = trunc i32 %10837 to i8
  %10839 = and i8 %10838, 1
  %10840 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10839, i8* %10840, align 1
  %10841 = icmp eq i32 %10821, 0
  %10842 = zext i1 %10841 to i8
  %10843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10842, i8* %10843, align 1
  %10844 = lshr i32 %10821, 31
  %10845 = trunc i32 %10844 to i8
  %10846 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10845, i8* %10846, align 1
  %10847 = lshr i32 %10820, 31
  %10848 = xor i32 %10844, %10847
  %10849 = add i32 %10848, %10844
  %10850 = icmp eq i32 %10849, 2
  %10851 = zext i1 %10850 to i8
  %10852 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10851, i8* %10852, align 1
  store %struct.Memory* %loadMem_4168a2, %struct.Memory** %MEMORY
  %loadMem_4168a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10853 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10854 = getelementptr inbounds %struct.GPR, %struct.GPR* %10853, i32 0, i32 33
  %10855 = getelementptr inbounds %struct.Reg, %struct.Reg* %10854, i32 0, i32 0
  %PC.i304 = bitcast %union.anon* %10855 to i64*
  %10856 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10857 = getelementptr inbounds %struct.GPR, %struct.GPR* %10856, i32 0, i32 5
  %10858 = getelementptr inbounds %struct.Reg, %struct.Reg* %10857, i32 0, i32 0
  %ECX.i305 = bitcast %union.anon* %10858 to i32*
  %10859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10860 = getelementptr inbounds %struct.GPR, %struct.GPR* %10859, i32 0, i32 1
  %10861 = getelementptr inbounds %struct.Reg, %struct.Reg* %10860, i32 0, i32 0
  %RAX.i306 = bitcast %union.anon* %10861 to i64*
  %10862 = load i64, i64* %RAX.i306
  %10863 = load i32, i32* %ECX.i305
  %10864 = zext i32 %10863 to i64
  %10865 = load i64, i64* %PC.i304
  %10866 = add i64 %10865, 2
  store i64 %10866, i64* %PC.i304
  %10867 = inttoptr i64 %10862 to i32*
  store i32 %10863, i32* %10867
  store %struct.Memory* %loadMem_4168a5, %struct.Memory** %MEMORY
  %loadMem_4168a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10868 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10869 = getelementptr inbounds %struct.GPR, %struct.GPR* %10868, i32 0, i32 33
  %10870 = getelementptr inbounds %struct.Reg, %struct.Reg* %10869, i32 0, i32 0
  %PC.i303 = bitcast %union.anon* %10870 to i64*
  %10871 = load i64, i64* %PC.i303
  %10872 = add i64 %10871, 629
  %10873 = load i64, i64* %PC.i303
  %10874 = add i64 %10873, 5
  store i64 %10874, i64* %PC.i303
  %10875 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %10872, i64* %10875, align 8
  store %struct.Memory* %loadMem_4168a7, %struct.Memory** %MEMORY
  br label %block_.L_416b1c

block_.L_4168ac:                                  ; preds = %block_.L_416882
  %loadMem_4168ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %10876 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10877 = getelementptr inbounds %struct.GPR, %struct.GPR* %10876, i32 0, i32 33
  %10878 = getelementptr inbounds %struct.Reg, %struct.Reg* %10877, i32 0, i32 0
  %PC.i300 = bitcast %union.anon* %10878 to i64*
  %10879 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10880 = getelementptr inbounds %struct.GPR, %struct.GPR* %10879, i32 0, i32 1
  %10881 = getelementptr inbounds %struct.Reg, %struct.Reg* %10880, i32 0, i32 0
  %RAX.i301 = bitcast %union.anon* %10881 to i64*
  %10882 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10883 = getelementptr inbounds %struct.GPR, %struct.GPR* %10882, i32 0, i32 15
  %10884 = getelementptr inbounds %struct.Reg, %struct.Reg* %10883, i32 0, i32 0
  %RBP.i302 = bitcast %union.anon* %10884 to i64*
  %10885 = load i64, i64* %RBP.i302
  %10886 = sub i64 %10885, 20
  %10887 = load i64, i64* %PC.i300
  %10888 = add i64 %10887, 3
  store i64 %10888, i64* %PC.i300
  %10889 = inttoptr i64 %10886 to i32*
  %10890 = load i32, i32* %10889
  %10891 = zext i32 %10890 to i64
  store i64 %10891, i64* %RAX.i301, align 8
  store %struct.Memory* %loadMem_4168ac, %struct.Memory** %MEMORY
  %loadMem_4168af = load %struct.Memory*, %struct.Memory** %MEMORY
  %10892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10893 = getelementptr inbounds %struct.GPR, %struct.GPR* %10892, i32 0, i32 33
  %10894 = getelementptr inbounds %struct.Reg, %struct.Reg* %10893, i32 0, i32 0
  %PC.i298 = bitcast %union.anon* %10894 to i64*
  %10895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10896 = getelementptr inbounds %struct.GPR, %struct.GPR* %10895, i32 0, i32 1
  %10897 = getelementptr inbounds %struct.Reg, %struct.Reg* %10896, i32 0, i32 0
  %RAX.i299 = bitcast %union.anon* %10897 to i64*
  %10898 = load i64, i64* %RAX.i299
  %10899 = load i64, i64* %PC.i298
  %10900 = add i64 %10899, 3
  store i64 %10900, i64* %PC.i298
  %10901 = trunc i64 %10898 to i32
  %10902 = add i32 1, %10901
  %10903 = zext i32 %10902 to i64
  store i64 %10903, i64* %RAX.i299, align 8
  %10904 = icmp ult i32 %10902, %10901
  %10905 = icmp ult i32 %10902, 1
  %10906 = or i1 %10904, %10905
  %10907 = zext i1 %10906 to i8
  %10908 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %10907, i8* %10908, align 1
  %10909 = and i32 %10902, 255
  %10910 = call i32 @llvm.ctpop.i32(i32 %10909)
  %10911 = trunc i32 %10910 to i8
  %10912 = and i8 %10911, 1
  %10913 = xor i8 %10912, 1
  %10914 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %10913, i8* %10914, align 1
  %10915 = xor i64 1, %10898
  %10916 = trunc i64 %10915 to i32
  %10917 = xor i32 %10916, %10902
  %10918 = lshr i32 %10917, 4
  %10919 = trunc i32 %10918 to i8
  %10920 = and i8 %10919, 1
  %10921 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %10920, i8* %10921, align 1
  %10922 = icmp eq i32 %10902, 0
  %10923 = zext i1 %10922 to i8
  %10924 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %10923, i8* %10924, align 1
  %10925 = lshr i32 %10902, 31
  %10926 = trunc i32 %10925 to i8
  %10927 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %10926, i8* %10927, align 1
  %10928 = lshr i32 %10901, 31
  %10929 = xor i32 %10925, %10928
  %10930 = add i32 %10929, %10925
  %10931 = icmp eq i32 %10930, 2
  %10932 = zext i1 %10931 to i8
  %10933 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %10932, i8* %10933, align 1
  store %struct.Memory* %loadMem_4168af, %struct.Memory** %MEMORY
  %loadMem_4168b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10934 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10935 = getelementptr inbounds %struct.GPR, %struct.GPR* %10934, i32 0, i32 33
  %10936 = getelementptr inbounds %struct.Reg, %struct.Reg* %10935, i32 0, i32 0
  %PC.i295 = bitcast %union.anon* %10936 to i64*
  %10937 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10938 = getelementptr inbounds %struct.GPR, %struct.GPR* %10937, i32 0, i32 1
  %10939 = getelementptr inbounds %struct.Reg, %struct.Reg* %10938, i32 0, i32 0
  %EAX.i296 = bitcast %union.anon* %10939 to i32*
  %10940 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10941 = getelementptr inbounds %struct.GPR, %struct.GPR* %10940, i32 0, i32 5
  %10942 = getelementptr inbounds %struct.Reg, %struct.Reg* %10941, i32 0, i32 0
  %RCX.i297 = bitcast %union.anon* %10942 to i64*
  %10943 = load i32, i32* %EAX.i296
  %10944 = zext i32 %10943 to i64
  %10945 = load i64, i64* %PC.i295
  %10946 = add i64 %10945, 3
  store i64 %10946, i64* %PC.i295
  %10947 = shl i64 %10944, 32
  %10948 = ashr exact i64 %10947, 32
  store i64 %10948, i64* %RCX.i297, align 8
  store %struct.Memory* %loadMem_4168b2, %struct.Memory** %MEMORY
  %loadMem_4168b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10949 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10950 = getelementptr inbounds %struct.GPR, %struct.GPR* %10949, i32 0, i32 33
  %10951 = getelementptr inbounds %struct.Reg, %struct.Reg* %10950, i32 0, i32 0
  %PC.i292 = bitcast %union.anon* %10951 to i64*
  %10952 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10953 = getelementptr inbounds %struct.GPR, %struct.GPR* %10952, i32 0, i32 1
  %10954 = getelementptr inbounds %struct.Reg, %struct.Reg* %10953, i32 0, i32 0
  %RAX.i293 = bitcast %union.anon* %10954 to i64*
  %10955 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10956 = getelementptr inbounds %struct.GPR, %struct.GPR* %10955, i32 0, i32 5
  %10957 = getelementptr inbounds %struct.Reg, %struct.Reg* %10956, i32 0, i32 0
  %RCX.i294 = bitcast %union.anon* %10957 to i64*
  %10958 = load i64, i64* %RCX.i294
  %10959 = mul i64 %10958, 4
  %10960 = add i64 %10959, 11187184
  %10961 = load i64, i64* %PC.i292
  %10962 = add i64 %10961, 7
  store i64 %10962, i64* %PC.i292
  %10963 = inttoptr i64 %10960 to i32*
  %10964 = load i32, i32* %10963
  %10965 = zext i32 %10964 to i64
  store i64 %10965, i64* %RAX.i293, align 8
  store %struct.Memory* %loadMem_4168b5, %struct.Memory** %MEMORY
  %loadMem_4168bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %10966 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10967 = getelementptr inbounds %struct.GPR, %struct.GPR* %10966, i32 0, i32 33
  %10968 = getelementptr inbounds %struct.Reg, %struct.Reg* %10967, i32 0, i32 0
  %PC.i289 = bitcast %union.anon* %10968 to i64*
  %10969 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10970 = getelementptr inbounds %struct.GPR, %struct.GPR* %10969, i32 0, i32 1
  %10971 = getelementptr inbounds %struct.Reg, %struct.Reg* %10970, i32 0, i32 0
  %EAX.i290 = bitcast %union.anon* %10971 to i32*
  %10972 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10973 = getelementptr inbounds %struct.GPR, %struct.GPR* %10972, i32 0, i32 15
  %10974 = getelementptr inbounds %struct.Reg, %struct.Reg* %10973, i32 0, i32 0
  %RBP.i291 = bitcast %union.anon* %10974 to i64*
  %10975 = load i64, i64* %RBP.i291
  %10976 = sub i64 %10975, 148
  %10977 = load i32, i32* %EAX.i290
  %10978 = zext i32 %10977 to i64
  %10979 = load i64, i64* %PC.i289
  %10980 = add i64 %10979, 6
  store i64 %10980, i64* %PC.i289
  %10981 = inttoptr i64 %10976 to i32*
  store i32 %10977, i32* %10981
  store %struct.Memory* %loadMem_4168bc, %struct.Memory** %MEMORY
  %loadMem_4168c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10982 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10983 = getelementptr inbounds %struct.GPR, %struct.GPR* %10982, i32 0, i32 33
  %10984 = getelementptr inbounds %struct.Reg, %struct.Reg* %10983, i32 0, i32 0
  %PC.i286 = bitcast %union.anon* %10984 to i64*
  %10985 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10986 = getelementptr inbounds %struct.GPR, %struct.GPR* %10985, i32 0, i32 5
  %10987 = getelementptr inbounds %struct.Reg, %struct.Reg* %10986, i32 0, i32 0
  %RCX.i287 = bitcast %union.anon* %10987 to i64*
  %10988 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10989 = getelementptr inbounds %struct.GPR, %struct.GPR* %10988, i32 0, i32 15
  %10990 = getelementptr inbounds %struct.Reg, %struct.Reg* %10989, i32 0, i32 0
  %RBP.i288 = bitcast %union.anon* %10990 to i64*
  %10991 = load i64, i64* %RBP.i288
  %10992 = sub i64 %10991, 28
  %10993 = load i64, i64* %PC.i286
  %10994 = add i64 %10993, 4
  store i64 %10994, i64* %PC.i286
  %10995 = inttoptr i64 %10992 to i32*
  %10996 = load i32, i32* %10995
  %10997 = sext i32 %10996 to i64
  store i64 %10997, i64* %RCX.i287, align 8
  store %struct.Memory* %loadMem_4168c2, %struct.Memory** %MEMORY
  %loadMem_4168c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %10998 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10999 = getelementptr inbounds %struct.GPR, %struct.GPR* %10998, i32 0, i32 33
  %11000 = getelementptr inbounds %struct.Reg, %struct.Reg* %10999, i32 0, i32 0
  %PC.i283 = bitcast %union.anon* %11000 to i64*
  %11001 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11002 = getelementptr inbounds %struct.GPR, %struct.GPR* %11001, i32 0, i32 1
  %11003 = getelementptr inbounds %struct.Reg, %struct.Reg* %11002, i32 0, i32 0
  %RAX.i284 = bitcast %union.anon* %11003 to i64*
  %11004 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11005 = getelementptr inbounds %struct.GPR, %struct.GPR* %11004, i32 0, i32 5
  %11006 = getelementptr inbounds %struct.Reg, %struct.Reg* %11005, i32 0, i32 0
  %RCX.i285 = bitcast %union.anon* %11006 to i64*
  %11007 = load i64, i64* %RCX.i285
  %11008 = mul i64 %11007, 4
  %11009 = add i64 %11008, 11187184
  %11010 = load i64, i64* %PC.i283
  %11011 = add i64 %11010, 7
  store i64 %11011, i64* %PC.i283
  %11012 = inttoptr i64 %11009 to i32*
  %11013 = load i32, i32* %11012
  %11014 = zext i32 %11013 to i64
  store i64 %11014, i64* %RAX.i284, align 8
  store %struct.Memory* %loadMem_4168c6, %struct.Memory** %MEMORY
  %loadMem_4168cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11015 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11016 = getelementptr inbounds %struct.GPR, %struct.GPR* %11015, i32 0, i32 33
  %11017 = getelementptr inbounds %struct.Reg, %struct.Reg* %11016, i32 0, i32 0
  %PC.i280 = bitcast %union.anon* %11017 to i64*
  %11018 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11019 = getelementptr inbounds %struct.GPR, %struct.GPR* %11018, i32 0, i32 1
  %11020 = getelementptr inbounds %struct.Reg, %struct.Reg* %11019, i32 0, i32 0
  %EAX.i281 = bitcast %union.anon* %11020 to i32*
  %11021 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11022 = getelementptr inbounds %struct.GPR, %struct.GPR* %11021, i32 0, i32 15
  %11023 = getelementptr inbounds %struct.Reg, %struct.Reg* %11022, i32 0, i32 0
  %RBP.i282 = bitcast %union.anon* %11023 to i64*
  %11024 = load i32, i32* %EAX.i281
  %11025 = zext i32 %11024 to i64
  %11026 = load i64, i64* %RBP.i282
  %11027 = sub i64 %11026, 148
  %11028 = load i64, i64* %PC.i280
  %11029 = add i64 %11028, 6
  store i64 %11029, i64* %PC.i280
  %11030 = inttoptr i64 %11027 to i32*
  %11031 = load i32, i32* %11030
  %11032 = sub i32 %11024, %11031
  %11033 = icmp ult i32 %11024, %11031
  %11034 = zext i1 %11033 to i8
  %11035 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11034, i8* %11035, align 1
  %11036 = and i32 %11032, 255
  %11037 = call i32 @llvm.ctpop.i32(i32 %11036)
  %11038 = trunc i32 %11037 to i8
  %11039 = and i8 %11038, 1
  %11040 = xor i8 %11039, 1
  %11041 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11040, i8* %11041, align 1
  %11042 = xor i32 %11031, %11024
  %11043 = xor i32 %11042, %11032
  %11044 = lshr i32 %11043, 4
  %11045 = trunc i32 %11044 to i8
  %11046 = and i8 %11045, 1
  %11047 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11046, i8* %11047, align 1
  %11048 = icmp eq i32 %11032, 0
  %11049 = zext i1 %11048 to i8
  %11050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11049, i8* %11050, align 1
  %11051 = lshr i32 %11032, 31
  %11052 = trunc i32 %11051 to i8
  %11053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11052, i8* %11053, align 1
  %11054 = lshr i32 %11024, 31
  %11055 = lshr i32 %11031, 31
  %11056 = xor i32 %11055, %11054
  %11057 = xor i32 %11051, %11054
  %11058 = add i32 %11057, %11056
  %11059 = icmp eq i32 %11058, 2
  %11060 = zext i1 %11059 to i8
  %11061 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11060, i8* %11061, align 1
  store %struct.Memory* %loadMem_4168cd, %struct.Memory** %MEMORY
  %loadMem_4168d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11062 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11063 = getelementptr inbounds %struct.GPR, %struct.GPR* %11062, i32 0, i32 33
  %11064 = getelementptr inbounds %struct.Reg, %struct.Reg* %11063, i32 0, i32 0
  %PC.i279 = bitcast %union.anon* %11064 to i64*
  %11065 = load i64, i64* %PC.i279
  %11066 = add i64 %11065, 17
  %11067 = load i64, i64* %PC.i279
  %11068 = add i64 %11067, 6
  %11069 = load i64, i64* %PC.i279
  %11070 = add i64 %11069, 6
  store i64 %11070, i64* %PC.i279
  %11071 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11072 = load i8, i8* %11071, align 1
  %11073 = icmp eq i8 %11072, 0
  %11074 = zext i1 %11073 to i8
  store i8 %11074, i8* %BRANCH_TAKEN, align 1
  %11075 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11076 = select i1 %11073, i64 %11066, i64 %11068
  store i64 %11076, i64* %11075, align 8
  store %struct.Memory* %loadMem_4168d3, %struct.Memory** %MEMORY
  %loadBr_4168d3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4168d3 = icmp eq i8 %loadBr_4168d3, 1
  br i1 %cmpBr_4168d3, label %block_.L_4168e4, label %block_4168d9

block_4168d9:                                     ; preds = %block_.L_4168ac
  %loadMem_4168d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11077 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11078 = getelementptr inbounds %struct.GPR, %struct.GPR* %11077, i32 0, i32 33
  %11079 = getelementptr inbounds %struct.Reg, %struct.Reg* %11078, i32 0, i32 0
  %PC.i276 = bitcast %union.anon* %11079 to i64*
  %11080 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11081 = getelementptr inbounds %struct.GPR, %struct.GPR* %11080, i32 0, i32 1
  %11082 = getelementptr inbounds %struct.Reg, %struct.Reg* %11081, i32 0, i32 0
  %RAX.i277 = bitcast %union.anon* %11082 to i64*
  %11083 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11084 = getelementptr inbounds %struct.GPR, %struct.GPR* %11083, i32 0, i32 15
  %11085 = getelementptr inbounds %struct.Reg, %struct.Reg* %11084, i32 0, i32 0
  %RBP.i278 = bitcast %union.anon* %11085 to i64*
  %11086 = load i64, i64* %RBP.i278
  %11087 = sub i64 %11086, 48
  %11088 = load i64, i64* %PC.i276
  %11089 = add i64 %11088, 4
  store i64 %11089, i64* %PC.i276
  %11090 = inttoptr i64 %11087 to i64*
  %11091 = load i64, i64* %11090
  store i64 %11091, i64* %RAX.i277, align 8
  store %struct.Memory* %loadMem_4168d9, %struct.Memory** %MEMORY
  %loadMem_4168dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %11092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11093 = getelementptr inbounds %struct.GPR, %struct.GPR* %11092, i32 0, i32 33
  %11094 = getelementptr inbounds %struct.Reg, %struct.Reg* %11093, i32 0, i32 0
  %PC.i273 = bitcast %union.anon* %11094 to i64*
  %11095 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11096 = getelementptr inbounds %struct.GPR, %struct.GPR* %11095, i32 0, i32 1
  %11097 = getelementptr inbounds %struct.Reg, %struct.Reg* %11096, i32 0, i32 0
  %RAX.i274 = bitcast %union.anon* %11097 to i64*
  %11098 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11099 = getelementptr inbounds %struct.GPR, %struct.GPR* %11098, i32 0, i32 5
  %11100 = getelementptr inbounds %struct.Reg, %struct.Reg* %11099, i32 0, i32 0
  %RCX.i275 = bitcast %union.anon* %11100 to i64*
  %11101 = load i64, i64* %RAX.i274
  %11102 = load i64, i64* %PC.i273
  %11103 = add i64 %11102, 2
  store i64 %11103, i64* %PC.i273
  %11104 = inttoptr i64 %11101 to i32*
  %11105 = load i32, i32* %11104
  %11106 = zext i32 %11105 to i64
  store i64 %11106, i64* %RCX.i275, align 8
  store %struct.Memory* %loadMem_4168dd, %struct.Memory** %MEMORY
  %loadMem_4168df = load %struct.Memory*, %struct.Memory** %MEMORY
  %11107 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11108 = getelementptr inbounds %struct.GPR, %struct.GPR* %11107, i32 0, i32 33
  %11109 = getelementptr inbounds %struct.Reg, %struct.Reg* %11108, i32 0, i32 0
  %PC.i271 = bitcast %union.anon* %11109 to i64*
  %11110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11111 = getelementptr inbounds %struct.GPR, %struct.GPR* %11110, i32 0, i32 5
  %11112 = getelementptr inbounds %struct.Reg, %struct.Reg* %11111, i32 0, i32 0
  %RCX.i272 = bitcast %union.anon* %11112 to i64*
  %11113 = load i64, i64* %RCX.i272
  %11114 = load i64, i64* %PC.i271
  %11115 = add i64 %11114, 3
  store i64 %11115, i64* %PC.i271
  %11116 = trunc i64 %11113 to i32
  %11117 = add i32 1, %11116
  %11118 = zext i32 %11117 to i64
  store i64 %11118, i64* %RCX.i272, align 8
  %11119 = icmp ult i32 %11117, %11116
  %11120 = icmp ult i32 %11117, 1
  %11121 = or i1 %11119, %11120
  %11122 = zext i1 %11121 to i8
  %11123 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11122, i8* %11123, align 1
  %11124 = and i32 %11117, 255
  %11125 = call i32 @llvm.ctpop.i32(i32 %11124)
  %11126 = trunc i32 %11125 to i8
  %11127 = and i8 %11126, 1
  %11128 = xor i8 %11127, 1
  %11129 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11128, i8* %11129, align 1
  %11130 = xor i64 1, %11113
  %11131 = trunc i64 %11130 to i32
  %11132 = xor i32 %11131, %11117
  %11133 = lshr i32 %11132, 4
  %11134 = trunc i32 %11133 to i8
  %11135 = and i8 %11134, 1
  %11136 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11135, i8* %11136, align 1
  %11137 = icmp eq i32 %11117, 0
  %11138 = zext i1 %11137 to i8
  %11139 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11138, i8* %11139, align 1
  %11140 = lshr i32 %11117, 31
  %11141 = trunc i32 %11140 to i8
  %11142 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11141, i8* %11142, align 1
  %11143 = lshr i32 %11116, 31
  %11144 = xor i32 %11140, %11143
  %11145 = add i32 %11144, %11140
  %11146 = icmp eq i32 %11145, 2
  %11147 = zext i1 %11146 to i8
  %11148 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11147, i8* %11148, align 1
  store %struct.Memory* %loadMem_4168df, %struct.Memory** %MEMORY
  %loadMem_4168e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11149 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11150 = getelementptr inbounds %struct.GPR, %struct.GPR* %11149, i32 0, i32 33
  %11151 = getelementptr inbounds %struct.Reg, %struct.Reg* %11150, i32 0, i32 0
  %PC.i268 = bitcast %union.anon* %11151 to i64*
  %11152 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11153 = getelementptr inbounds %struct.GPR, %struct.GPR* %11152, i32 0, i32 5
  %11154 = getelementptr inbounds %struct.Reg, %struct.Reg* %11153, i32 0, i32 0
  %ECX.i269 = bitcast %union.anon* %11154 to i32*
  %11155 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11156 = getelementptr inbounds %struct.GPR, %struct.GPR* %11155, i32 0, i32 1
  %11157 = getelementptr inbounds %struct.Reg, %struct.Reg* %11156, i32 0, i32 0
  %RAX.i270 = bitcast %union.anon* %11157 to i64*
  %11158 = load i64, i64* %RAX.i270
  %11159 = load i32, i32* %ECX.i269
  %11160 = zext i32 %11159 to i64
  %11161 = load i64, i64* %PC.i268
  %11162 = add i64 %11161, 2
  store i64 %11162, i64* %PC.i268
  %11163 = inttoptr i64 %11158 to i32*
  store i32 %11159, i32* %11163
  store %struct.Memory* %loadMem_4168e2, %struct.Memory** %MEMORY
  br label %block_.L_4168e4

block_.L_4168e4:                                  ; preds = %block_4168d9, %block_.L_4168ac
  %loadMem_4168e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11164 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11165 = getelementptr inbounds %struct.GPR, %struct.GPR* %11164, i32 0, i32 33
  %11166 = getelementptr inbounds %struct.Reg, %struct.Reg* %11165, i32 0, i32 0
  %PC.i265 = bitcast %union.anon* %11166 to i64*
  %11167 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11168 = getelementptr inbounds %struct.GPR, %struct.GPR* %11167, i32 0, i32 1
  %11169 = getelementptr inbounds %struct.Reg, %struct.Reg* %11168, i32 0, i32 0
  %RAX.i266 = bitcast %union.anon* %11169 to i64*
  %11170 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11171 = getelementptr inbounds %struct.GPR, %struct.GPR* %11170, i32 0, i32 15
  %11172 = getelementptr inbounds %struct.Reg, %struct.Reg* %11171, i32 0, i32 0
  %RBP.i267 = bitcast %union.anon* %11172 to i64*
  %11173 = load i64, i64* %RBP.i267
  %11174 = sub i64 %11173, 20
  %11175 = load i64, i64* %PC.i265
  %11176 = add i64 %11175, 3
  store i64 %11176, i64* %PC.i265
  %11177 = inttoptr i64 %11174 to i32*
  %11178 = load i32, i32* %11177
  %11179 = zext i32 %11178 to i64
  store i64 %11179, i64* %RAX.i266, align 8
  store %struct.Memory* %loadMem_4168e4, %struct.Memory** %MEMORY
  %loadMem_4168e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11180 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11181 = getelementptr inbounds %struct.GPR, %struct.GPR* %11180, i32 0, i32 33
  %11182 = getelementptr inbounds %struct.Reg, %struct.Reg* %11181, i32 0, i32 0
  %PC.i263 = bitcast %union.anon* %11182 to i64*
  %11183 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11184 = getelementptr inbounds %struct.GPR, %struct.GPR* %11183, i32 0, i32 1
  %11185 = getelementptr inbounds %struct.Reg, %struct.Reg* %11184, i32 0, i32 0
  %RAX.i264 = bitcast %union.anon* %11185 to i64*
  %11186 = load i64, i64* %RAX.i264
  %11187 = load i64, i64* %PC.i263
  %11188 = add i64 %11187, 3
  store i64 %11188, i64* %PC.i263
  %11189 = trunc i64 %11186 to i32
  %11190 = add i32 1, %11189
  %11191 = zext i32 %11190 to i64
  store i64 %11191, i64* %RAX.i264, align 8
  %11192 = icmp ult i32 %11190, %11189
  %11193 = icmp ult i32 %11190, 1
  %11194 = or i1 %11192, %11193
  %11195 = zext i1 %11194 to i8
  %11196 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11195, i8* %11196, align 1
  %11197 = and i32 %11190, 255
  %11198 = call i32 @llvm.ctpop.i32(i32 %11197)
  %11199 = trunc i32 %11198 to i8
  %11200 = and i8 %11199, 1
  %11201 = xor i8 %11200, 1
  %11202 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11201, i8* %11202, align 1
  %11203 = xor i64 1, %11186
  %11204 = trunc i64 %11203 to i32
  %11205 = xor i32 %11204, %11190
  %11206 = lshr i32 %11205, 4
  %11207 = trunc i32 %11206 to i8
  %11208 = and i8 %11207, 1
  %11209 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11208, i8* %11209, align 1
  %11210 = icmp eq i32 %11190, 0
  %11211 = zext i1 %11210 to i8
  %11212 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11211, i8* %11212, align 1
  %11213 = lshr i32 %11190, 31
  %11214 = trunc i32 %11213 to i8
  %11215 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11214, i8* %11215, align 1
  %11216 = lshr i32 %11189, 31
  %11217 = xor i32 %11213, %11216
  %11218 = add i32 %11217, %11213
  %11219 = icmp eq i32 %11218, 2
  %11220 = zext i1 %11219 to i8
  %11221 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11220, i8* %11221, align 1
  store %struct.Memory* %loadMem_4168e7, %struct.Memory** %MEMORY
  %loadMem_4168ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %11222 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11223 = getelementptr inbounds %struct.GPR, %struct.GPR* %11222, i32 0, i32 33
  %11224 = getelementptr inbounds %struct.Reg, %struct.Reg* %11223, i32 0, i32 0
  %PC.i260 = bitcast %union.anon* %11224 to i64*
  %11225 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11226 = getelementptr inbounds %struct.GPR, %struct.GPR* %11225, i32 0, i32 1
  %11227 = getelementptr inbounds %struct.Reg, %struct.Reg* %11226, i32 0, i32 0
  %EAX.i261 = bitcast %union.anon* %11227 to i32*
  %11228 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11229 = getelementptr inbounds %struct.GPR, %struct.GPR* %11228, i32 0, i32 5
  %11230 = getelementptr inbounds %struct.Reg, %struct.Reg* %11229, i32 0, i32 0
  %RCX.i262 = bitcast %union.anon* %11230 to i64*
  %11231 = load i32, i32* %EAX.i261
  %11232 = zext i32 %11231 to i64
  %11233 = load i64, i64* %PC.i260
  %11234 = add i64 %11233, 3
  store i64 %11234, i64* %PC.i260
  %11235 = shl i64 %11232, 32
  %11236 = ashr exact i64 %11235, 32
  store i64 %11236, i64* %RCX.i262, align 8
  store %struct.Memory* %loadMem_4168ea, %struct.Memory** %MEMORY
  %loadMem_4168ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %11237 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11238 = getelementptr inbounds %struct.GPR, %struct.GPR* %11237, i32 0, i32 33
  %11239 = getelementptr inbounds %struct.Reg, %struct.Reg* %11238, i32 0, i32 0
  %PC.i257 = bitcast %union.anon* %11239 to i64*
  %11240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11241 = getelementptr inbounds %struct.GPR, %struct.GPR* %11240, i32 0, i32 1
  %11242 = getelementptr inbounds %struct.Reg, %struct.Reg* %11241, i32 0, i32 0
  %RAX.i258 = bitcast %union.anon* %11242 to i64*
  %11243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11244 = getelementptr inbounds %struct.GPR, %struct.GPR* %11243, i32 0, i32 5
  %11245 = getelementptr inbounds %struct.Reg, %struct.Reg* %11244, i32 0, i32 0
  %RCX.i259 = bitcast %union.anon* %11245 to i64*
  %11246 = load i64, i64* %RCX.i259
  %11247 = add i64 %11246, 12099168
  %11248 = load i64, i64* %PC.i257
  %11249 = add i64 %11248, 8
  store i64 %11249, i64* %PC.i257
  %11250 = inttoptr i64 %11247 to i8*
  %11251 = load i8, i8* %11250
  %11252 = zext i8 %11251 to i64
  store i64 %11252, i64* %RAX.i258, align 8
  store %struct.Memory* %loadMem_4168ed, %struct.Memory** %MEMORY
  %loadMem_4168f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11253 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11254 = getelementptr inbounds %struct.GPR, %struct.GPR* %11253, i32 0, i32 33
  %11255 = getelementptr inbounds %struct.Reg, %struct.Reg* %11254, i32 0, i32 0
  %PC.i254 = bitcast %union.anon* %11255 to i64*
  %11256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11257 = getelementptr inbounds %struct.GPR, %struct.GPR* %11256, i32 0, i32 1
  %11258 = getelementptr inbounds %struct.Reg, %struct.Reg* %11257, i32 0, i32 0
  %EAX.i255 = bitcast %union.anon* %11258 to i32*
  %11259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11260 = getelementptr inbounds %struct.GPR, %struct.GPR* %11259, i32 0, i32 15
  %11261 = getelementptr inbounds %struct.Reg, %struct.Reg* %11260, i32 0, i32 0
  %RBP.i256 = bitcast %union.anon* %11261 to i64*
  %11262 = load i32, i32* %EAX.i255
  %11263 = zext i32 %11262 to i64
  %11264 = load i64, i64* %RBP.i256
  %11265 = sub i64 %11264, 24
  %11266 = load i64, i64* %PC.i254
  %11267 = add i64 %11266, 3
  store i64 %11267, i64* %PC.i254
  %11268 = inttoptr i64 %11265 to i32*
  %11269 = load i32, i32* %11268
  %11270 = sub i32 %11262, %11269
  %11271 = icmp ult i32 %11262, %11269
  %11272 = zext i1 %11271 to i8
  %11273 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11272, i8* %11273, align 1
  %11274 = and i32 %11270, 255
  %11275 = call i32 @llvm.ctpop.i32(i32 %11274)
  %11276 = trunc i32 %11275 to i8
  %11277 = and i8 %11276, 1
  %11278 = xor i8 %11277, 1
  %11279 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11278, i8* %11279, align 1
  %11280 = xor i32 %11269, %11262
  %11281 = xor i32 %11280, %11270
  %11282 = lshr i32 %11281, 4
  %11283 = trunc i32 %11282 to i8
  %11284 = and i8 %11283, 1
  %11285 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11284, i8* %11285, align 1
  %11286 = icmp eq i32 %11270, 0
  %11287 = zext i1 %11286 to i8
  %11288 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11287, i8* %11288, align 1
  %11289 = lshr i32 %11270, 31
  %11290 = trunc i32 %11289 to i8
  %11291 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11290, i8* %11291, align 1
  %11292 = lshr i32 %11262, 31
  %11293 = lshr i32 %11269, 31
  %11294 = xor i32 %11293, %11292
  %11295 = xor i32 %11289, %11292
  %11296 = add i32 %11295, %11294
  %11297 = icmp eq i32 %11296, 2
  %11298 = zext i1 %11297 to i8
  %11299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11298, i8* %11299, align 1
  store %struct.Memory* %loadMem_4168f5, %struct.Memory** %MEMORY
  %loadMem_4168f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11300 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11301 = getelementptr inbounds %struct.GPR, %struct.GPR* %11300, i32 0, i32 33
  %11302 = getelementptr inbounds %struct.Reg, %struct.Reg* %11301, i32 0, i32 0
  %PC.i253 = bitcast %union.anon* %11302 to i64*
  %11303 = load i64, i64* %PC.i253
  %11304 = add i64 %11303, 97
  %11305 = load i64, i64* %PC.i253
  %11306 = add i64 %11305, 6
  %11307 = load i64, i64* %PC.i253
  %11308 = add i64 %11307, 6
  store i64 %11308, i64* %PC.i253
  %11309 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11310 = load i8, i8* %11309, align 1
  %11311 = icmp eq i8 %11310, 0
  %11312 = zext i1 %11311 to i8
  store i8 %11312, i8* %BRANCH_TAKEN, align 1
  %11313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11314 = select i1 %11311, i64 %11304, i64 %11306
  store i64 %11314, i64* %11313, align 8
  store %struct.Memory* %loadMem_4168f8, %struct.Memory** %MEMORY
  %loadBr_4168f8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4168f8 = icmp eq i8 %loadBr_4168f8, 1
  br i1 %cmpBr_4168f8, label %block_.L_416959, label %block_4168fe

block_4168fe:                                     ; preds = %block_.L_4168e4
  %loadMem_4168fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %11315 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11316 = getelementptr inbounds %struct.GPR, %struct.GPR* %11315, i32 0, i32 33
  %11317 = getelementptr inbounds %struct.Reg, %struct.Reg* %11316, i32 0, i32 0
  %PC.i251 = bitcast %union.anon* %11317 to i64*
  %11318 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11319 = getelementptr inbounds %struct.GPR, %struct.GPR* %11318, i32 0, i32 1
  %11320 = getelementptr inbounds %struct.Reg, %struct.Reg* %11319, i32 0, i32 0
  %RAX.i252 = bitcast %union.anon* %11320 to i64*
  %11321 = load i64, i64* %PC.i251
  %11322 = add i64 %11321, 10
  store i64 %11322, i64* %PC.i251
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i252, align 8
  store %struct.Memory* %loadMem_4168fe, %struct.Memory** %MEMORY
  %loadMem_416908 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11323 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11324 = getelementptr inbounds %struct.GPR, %struct.GPR* %11323, i32 0, i32 33
  %11325 = getelementptr inbounds %struct.Reg, %struct.Reg* %11324, i32 0, i32 0
  %PC.i248 = bitcast %union.anon* %11325 to i64*
  %11326 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11327 = getelementptr inbounds %struct.GPR, %struct.GPR* %11326, i32 0, i32 5
  %11328 = getelementptr inbounds %struct.Reg, %struct.Reg* %11327, i32 0, i32 0
  %RCX.i249 = bitcast %union.anon* %11328 to i64*
  %11329 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11330 = getelementptr inbounds %struct.GPR, %struct.GPR* %11329, i32 0, i32 15
  %11331 = getelementptr inbounds %struct.Reg, %struct.Reg* %11330, i32 0, i32 0
  %RBP.i250 = bitcast %union.anon* %11331 to i64*
  %11332 = load i64, i64* %RBP.i250
  %11333 = sub i64 %11332, 56
  %11334 = load i64, i64* %PC.i248
  %11335 = add i64 %11334, 4
  store i64 %11335, i64* %PC.i248
  %11336 = inttoptr i64 %11333 to i64*
  %11337 = load i64, i64* %11336
  store i64 %11337, i64* %RCX.i249, align 8
  store %struct.Memory* %loadMem_416908, %struct.Memory** %MEMORY
  %loadMem_41690c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11338 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11339 = getelementptr inbounds %struct.GPR, %struct.GPR* %11338, i32 0, i32 33
  %11340 = getelementptr inbounds %struct.Reg, %struct.Reg* %11339, i32 0, i32 0
  %PC.i245 = bitcast %union.anon* %11340 to i64*
  %11341 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11342 = getelementptr inbounds %struct.GPR, %struct.GPR* %11341, i32 0, i32 5
  %11343 = getelementptr inbounds %struct.Reg, %struct.Reg* %11342, i32 0, i32 0
  %RCX.i246 = bitcast %union.anon* %11343 to i64*
  %11344 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11345 = getelementptr inbounds %struct.GPR, %struct.GPR* %11344, i32 0, i32 7
  %11346 = getelementptr inbounds %struct.Reg, %struct.Reg* %11345, i32 0, i32 0
  %RDX.i247 = bitcast %union.anon* %11346 to i64*
  %11347 = load i64, i64* %RCX.i246
  %11348 = load i64, i64* %PC.i245
  %11349 = add i64 %11348, 2
  store i64 %11349, i64* %PC.i245
  %11350 = inttoptr i64 %11347 to i32*
  %11351 = load i32, i32* %11350
  %11352 = zext i32 %11351 to i64
  store i64 %11352, i64* %RDX.i247, align 8
  store %struct.Memory* %loadMem_41690c, %struct.Memory** %MEMORY
  %loadMem_41690e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11353 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11354 = getelementptr inbounds %struct.GPR, %struct.GPR* %11353, i32 0, i32 33
  %11355 = getelementptr inbounds %struct.Reg, %struct.Reg* %11354, i32 0, i32 0
  %PC.i243 = bitcast %union.anon* %11355 to i64*
  %11356 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11357 = getelementptr inbounds %struct.GPR, %struct.GPR* %11356, i32 0, i32 7
  %11358 = getelementptr inbounds %struct.Reg, %struct.Reg* %11357, i32 0, i32 0
  %RDX.i244 = bitcast %union.anon* %11358 to i64*
  %11359 = load i64, i64* %RDX.i244
  %11360 = load i64, i64* %PC.i243
  %11361 = add i64 %11360, 3
  store i64 %11361, i64* %PC.i243
  %11362 = trunc i64 %11359 to i32
  %11363 = add i32 1, %11362
  %11364 = zext i32 %11363 to i64
  store i64 %11364, i64* %RDX.i244, align 8
  %11365 = icmp ult i32 %11363, %11362
  %11366 = icmp ult i32 %11363, 1
  %11367 = or i1 %11365, %11366
  %11368 = zext i1 %11367 to i8
  %11369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11368, i8* %11369, align 1
  %11370 = and i32 %11363, 255
  %11371 = call i32 @llvm.ctpop.i32(i32 %11370)
  %11372 = trunc i32 %11371 to i8
  %11373 = and i8 %11372, 1
  %11374 = xor i8 %11373, 1
  %11375 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11374, i8* %11375, align 1
  %11376 = xor i64 1, %11359
  %11377 = trunc i64 %11376 to i32
  %11378 = xor i32 %11377, %11363
  %11379 = lshr i32 %11378, 4
  %11380 = trunc i32 %11379 to i8
  %11381 = and i8 %11380, 1
  %11382 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11381, i8* %11382, align 1
  %11383 = icmp eq i32 %11363, 0
  %11384 = zext i1 %11383 to i8
  %11385 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11384, i8* %11385, align 1
  %11386 = lshr i32 %11363, 31
  %11387 = trunc i32 %11386 to i8
  %11388 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11387, i8* %11388, align 1
  %11389 = lshr i32 %11362, 31
  %11390 = xor i32 %11386, %11389
  %11391 = add i32 %11390, %11386
  %11392 = icmp eq i32 %11391, 2
  %11393 = zext i1 %11392 to i8
  %11394 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11393, i8* %11394, align 1
  store %struct.Memory* %loadMem_41690e, %struct.Memory** %MEMORY
  %loadMem_416911 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11395 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11396 = getelementptr inbounds %struct.GPR, %struct.GPR* %11395, i32 0, i32 33
  %11397 = getelementptr inbounds %struct.Reg, %struct.Reg* %11396, i32 0, i32 0
  %PC.i240 = bitcast %union.anon* %11397 to i64*
  %11398 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11399 = getelementptr inbounds %struct.GPR, %struct.GPR* %11398, i32 0, i32 7
  %11400 = getelementptr inbounds %struct.Reg, %struct.Reg* %11399, i32 0, i32 0
  %EDX.i241 = bitcast %union.anon* %11400 to i32*
  %11401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11402 = getelementptr inbounds %struct.GPR, %struct.GPR* %11401, i32 0, i32 5
  %11403 = getelementptr inbounds %struct.Reg, %struct.Reg* %11402, i32 0, i32 0
  %RCX.i242 = bitcast %union.anon* %11403 to i64*
  %11404 = load i64, i64* %RCX.i242
  %11405 = load i32, i32* %EDX.i241
  %11406 = zext i32 %11405 to i64
  %11407 = load i64, i64* %PC.i240
  %11408 = add i64 %11407, 2
  store i64 %11408, i64* %PC.i240
  %11409 = inttoptr i64 %11404 to i32*
  store i32 %11405, i32* %11409
  store %struct.Memory* %loadMem_416911, %struct.Memory** %MEMORY
  %loadMem_416913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11410 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11411 = getelementptr inbounds %struct.GPR, %struct.GPR* %11410, i32 0, i32 33
  %11412 = getelementptr inbounds %struct.Reg, %struct.Reg* %11411, i32 0, i32 0
  %PC.i237 = bitcast %union.anon* %11412 to i64*
  %11413 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11414 = getelementptr inbounds %struct.GPR, %struct.GPR* %11413, i32 0, i32 5
  %11415 = getelementptr inbounds %struct.Reg, %struct.Reg* %11414, i32 0, i32 0
  %RCX.i238 = bitcast %union.anon* %11415 to i64*
  %11416 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11417 = getelementptr inbounds %struct.GPR, %struct.GPR* %11416, i32 0, i32 15
  %11418 = getelementptr inbounds %struct.Reg, %struct.Reg* %11417, i32 0, i32 0
  %RBP.i239 = bitcast %union.anon* %11418 to i64*
  %11419 = load i64, i64* %RBP.i239
  %11420 = sub i64 %11419, 148
  %11421 = load i64, i64* %PC.i237
  %11422 = add i64 %11421, 7
  store i64 %11422, i64* %PC.i237
  %11423 = inttoptr i64 %11420 to i32*
  %11424 = load i32, i32* %11423
  %11425 = sext i32 %11424 to i64
  store i64 %11425, i64* %RCX.i238, align 8
  store %struct.Memory* %loadMem_416913, %struct.Memory** %MEMORY
  %loadMem_41691a = load %struct.Memory*, %struct.Memory** %MEMORY
  %11426 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11427 = getelementptr inbounds %struct.GPR, %struct.GPR* %11426, i32 0, i32 33
  %11428 = getelementptr inbounds %struct.Reg, %struct.Reg* %11427, i32 0, i32 0
  %PC.i235 = bitcast %union.anon* %11428 to i64*
  %11429 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11430 = getelementptr inbounds %struct.GPR, %struct.GPR* %11429, i32 0, i32 5
  %11431 = getelementptr inbounds %struct.Reg, %struct.Reg* %11430, i32 0, i32 0
  %RCX.i236 = bitcast %union.anon* %11431 to i64*
  %11432 = load i64, i64* %RCX.i236
  %11433 = load i64, i64* %PC.i235
  %11434 = add i64 %11433, 7
  store i64 %11434, i64* %PC.i235
  %11435 = sext i64 %11432 to i128
  %11436 = and i128 %11435, -18446744073709551616
  %11437 = zext i64 %11432 to i128
  %11438 = or i128 %11436, %11437
  %11439 = mul i128 744, %11438
  %11440 = trunc i128 %11439 to i64
  store i64 %11440, i64* %RCX.i236, align 8
  %11441 = sext i64 %11440 to i128
  %11442 = icmp ne i128 %11441, %11439
  %11443 = zext i1 %11442 to i8
  %11444 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11443, i8* %11444, align 1
  %11445 = trunc i128 %11439 to i32
  %11446 = and i32 %11445, 255
  %11447 = call i32 @llvm.ctpop.i32(i32 %11446)
  %11448 = trunc i32 %11447 to i8
  %11449 = and i8 %11448, 1
  %11450 = xor i8 %11449, 1
  %11451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11450, i8* %11451, align 1
  %11452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11452, align 1
  %11453 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11453, align 1
  %11454 = lshr i64 %11440, 63
  %11455 = trunc i64 %11454 to i8
  %11456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11455, i8* %11456, align 1
  %11457 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11443, i8* %11457, align 1
  store %struct.Memory* %loadMem_41691a, %struct.Memory** %MEMORY
  %loadMem_416921 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11459 = getelementptr inbounds %struct.GPR, %struct.GPR* %11458, i32 0, i32 33
  %11460 = getelementptr inbounds %struct.Reg, %struct.Reg* %11459, i32 0, i32 0
  %PC.i232 = bitcast %union.anon* %11460 to i64*
  %11461 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11462 = getelementptr inbounds %struct.GPR, %struct.GPR* %11461, i32 0, i32 1
  %11463 = getelementptr inbounds %struct.Reg, %struct.Reg* %11462, i32 0, i32 0
  %RAX.i233 = bitcast %union.anon* %11463 to i64*
  %11464 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11465 = getelementptr inbounds %struct.GPR, %struct.GPR* %11464, i32 0, i32 5
  %11466 = getelementptr inbounds %struct.Reg, %struct.Reg* %11465, i32 0, i32 0
  %RCX.i234 = bitcast %union.anon* %11466 to i64*
  %11467 = load i64, i64* %RAX.i233
  %11468 = load i64, i64* %RCX.i234
  %11469 = load i64, i64* %PC.i232
  %11470 = add i64 %11469, 3
  store i64 %11470, i64* %PC.i232
  %11471 = add i64 %11468, %11467
  store i64 %11471, i64* %RAX.i233, align 8
  %11472 = icmp ult i64 %11471, %11467
  %11473 = icmp ult i64 %11471, %11468
  %11474 = or i1 %11472, %11473
  %11475 = zext i1 %11474 to i8
  %11476 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11475, i8* %11476, align 1
  %11477 = trunc i64 %11471 to i32
  %11478 = and i32 %11477, 255
  %11479 = call i32 @llvm.ctpop.i32(i32 %11478)
  %11480 = trunc i32 %11479 to i8
  %11481 = and i8 %11480, 1
  %11482 = xor i8 %11481, 1
  %11483 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11482, i8* %11483, align 1
  %11484 = xor i64 %11468, %11467
  %11485 = xor i64 %11484, %11471
  %11486 = lshr i64 %11485, 4
  %11487 = trunc i64 %11486 to i8
  %11488 = and i8 %11487, 1
  %11489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11488, i8* %11489, align 1
  %11490 = icmp eq i64 %11471, 0
  %11491 = zext i1 %11490 to i8
  %11492 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11491, i8* %11492, align 1
  %11493 = lshr i64 %11471, 63
  %11494 = trunc i64 %11493 to i8
  %11495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11494, i8* %11495, align 1
  %11496 = lshr i64 %11467, 63
  %11497 = lshr i64 %11468, 63
  %11498 = xor i64 %11493, %11496
  %11499 = xor i64 %11493, %11497
  %11500 = add i64 %11498, %11499
  %11501 = icmp eq i64 %11500, 2
  %11502 = zext i1 %11501 to i8
  %11503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11502, i8* %11503, align 1
  store %struct.Memory* %loadMem_416921, %struct.Memory** %MEMORY
  %loadMem_416924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11504 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11505 = getelementptr inbounds %struct.GPR, %struct.GPR* %11504, i32 0, i32 33
  %11506 = getelementptr inbounds %struct.Reg, %struct.Reg* %11505, i32 0, i32 0
  %PC.i230 = bitcast %union.anon* %11506 to i64*
  %11507 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11508 = getelementptr inbounds %struct.GPR, %struct.GPR* %11507, i32 0, i32 1
  %11509 = getelementptr inbounds %struct.Reg, %struct.Reg* %11508, i32 0, i32 0
  %RAX.i231 = bitcast %union.anon* %11509 to i64*
  %11510 = load i64, i64* %RAX.i231
  %11511 = add i64 %11510, 12
  %11512 = load i64, i64* %PC.i230
  %11513 = add i64 %11512, 4
  store i64 %11513, i64* %PC.i230
  %11514 = inttoptr i64 %11511 to i32*
  %11515 = load i32, i32* %11514
  %11516 = sub i32 %11515, 1
  %11517 = icmp ult i32 %11515, 1
  %11518 = zext i1 %11517 to i8
  %11519 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11518, i8* %11519, align 1
  %11520 = and i32 %11516, 255
  %11521 = call i32 @llvm.ctpop.i32(i32 %11520)
  %11522 = trunc i32 %11521 to i8
  %11523 = and i8 %11522, 1
  %11524 = xor i8 %11523, 1
  %11525 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11524, i8* %11525, align 1
  %11526 = xor i32 %11515, 1
  %11527 = xor i32 %11526, %11516
  %11528 = lshr i32 %11527, 4
  %11529 = trunc i32 %11528 to i8
  %11530 = and i8 %11529, 1
  %11531 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11530, i8* %11531, align 1
  %11532 = icmp eq i32 %11516, 0
  %11533 = zext i1 %11532 to i8
  %11534 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11533, i8* %11534, align 1
  %11535 = lshr i32 %11516, 31
  %11536 = trunc i32 %11535 to i8
  %11537 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11536, i8* %11537, align 1
  %11538 = lshr i32 %11515, 31
  %11539 = xor i32 %11535, %11538
  %11540 = add i32 %11539, %11538
  %11541 = icmp eq i32 %11540, 2
  %11542 = zext i1 %11541 to i8
  %11543 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11542, i8* %11543, align 1
  store %struct.Memory* %loadMem_416924, %struct.Memory** %MEMORY
  %loadMem_416928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11545 = getelementptr inbounds %struct.GPR, %struct.GPR* %11544, i32 0, i32 33
  %11546 = getelementptr inbounds %struct.Reg, %struct.Reg* %11545, i32 0, i32 0
  %PC.i229 = bitcast %union.anon* %11546 to i64*
  %11547 = load i64, i64* %PC.i229
  %11548 = add i64 %11547, 44
  %11549 = load i64, i64* %PC.i229
  %11550 = add i64 %11549, 6
  %11551 = load i64, i64* %PC.i229
  %11552 = add i64 %11551, 6
  store i64 %11552, i64* %PC.i229
  %11553 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %11554 = load i8, i8* %11553, align 1
  %11555 = icmp eq i8 %11554, 0
  %11556 = zext i1 %11555 to i8
  store i8 %11556, i8* %BRANCH_TAKEN, align 1
  %11557 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %11558 = select i1 %11555, i64 %11548, i64 %11550
  store i64 %11558, i64* %11557, align 8
  store %struct.Memory* %loadMem_416928, %struct.Memory** %MEMORY
  %loadBr_416928 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416928 = icmp eq i8 %loadBr_416928, 1
  br i1 %cmpBr_416928, label %block_.L_416954, label %block_41692e

block_41692e:                                     ; preds = %block_4168fe
  %loadMem_41692e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11559 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11560 = getelementptr inbounds %struct.GPR, %struct.GPR* %11559, i32 0, i32 33
  %11561 = getelementptr inbounds %struct.Reg, %struct.Reg* %11560, i32 0, i32 0
  %PC.i227 = bitcast %union.anon* %11561 to i64*
  %11562 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11563 = getelementptr inbounds %struct.GPR, %struct.GPR* %11562, i32 0, i32 1
  %11564 = getelementptr inbounds %struct.Reg, %struct.Reg* %11563, i32 0, i32 0
  %RAX.i228 = bitcast %union.anon* %11564 to i64*
  %11565 = load i64, i64* %PC.i227
  %11566 = add i64 %11565, 10
  store i64 %11566, i64* %PC.i227
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i228, align 8
  store %struct.Memory* %loadMem_41692e, %struct.Memory** %MEMORY
  %loadMem_416938 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11567 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11568 = getelementptr inbounds %struct.GPR, %struct.GPR* %11567, i32 0, i32 33
  %11569 = getelementptr inbounds %struct.Reg, %struct.Reg* %11568, i32 0, i32 0
  %PC.i224 = bitcast %union.anon* %11569 to i64*
  %11570 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11571 = getelementptr inbounds %struct.GPR, %struct.GPR* %11570, i32 0, i32 5
  %11572 = getelementptr inbounds %struct.Reg, %struct.Reg* %11571, i32 0, i32 0
  %RCX.i225 = bitcast %union.anon* %11572 to i64*
  %11573 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11574 = getelementptr inbounds %struct.GPR, %struct.GPR* %11573, i32 0, i32 15
  %11575 = getelementptr inbounds %struct.Reg, %struct.Reg* %11574, i32 0, i32 0
  %RBP.i226 = bitcast %union.anon* %11575 to i64*
  %11576 = load i64, i64* %RBP.i226
  %11577 = sub i64 %11576, 148
  %11578 = load i64, i64* %PC.i224
  %11579 = add i64 %11578, 7
  store i64 %11579, i64* %PC.i224
  %11580 = inttoptr i64 %11577 to i32*
  %11581 = load i32, i32* %11580
  %11582 = sext i32 %11581 to i64
  store i64 %11582, i64* %RCX.i225, align 8
  store %struct.Memory* %loadMem_416938, %struct.Memory** %MEMORY
  %loadMem_41693f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11583 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11584 = getelementptr inbounds %struct.GPR, %struct.GPR* %11583, i32 0, i32 33
  %11585 = getelementptr inbounds %struct.Reg, %struct.Reg* %11584, i32 0, i32 0
  %PC.i222 = bitcast %union.anon* %11585 to i64*
  %11586 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11587 = getelementptr inbounds %struct.GPR, %struct.GPR* %11586, i32 0, i32 5
  %11588 = getelementptr inbounds %struct.Reg, %struct.Reg* %11587, i32 0, i32 0
  %RCX.i223 = bitcast %union.anon* %11588 to i64*
  %11589 = load i64, i64* %RCX.i223
  %11590 = load i64, i64* %PC.i222
  %11591 = add i64 %11590, 7
  store i64 %11591, i64* %PC.i222
  %11592 = sext i64 %11589 to i128
  %11593 = and i128 %11592, -18446744073709551616
  %11594 = zext i64 %11589 to i128
  %11595 = or i128 %11593, %11594
  %11596 = mul i128 744, %11595
  %11597 = trunc i128 %11596 to i64
  store i64 %11597, i64* %RCX.i223, align 8
  %11598 = sext i64 %11597 to i128
  %11599 = icmp ne i128 %11598, %11596
  %11600 = zext i1 %11599 to i8
  %11601 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11600, i8* %11601, align 1
  %11602 = trunc i128 %11596 to i32
  %11603 = and i32 %11602, 255
  %11604 = call i32 @llvm.ctpop.i32(i32 %11603)
  %11605 = trunc i32 %11604 to i8
  %11606 = and i8 %11605, 1
  %11607 = xor i8 %11606, 1
  %11608 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11607, i8* %11608, align 1
  %11609 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11609, align 1
  %11610 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11610, align 1
  %11611 = lshr i64 %11597, 63
  %11612 = trunc i64 %11611 to i8
  %11613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11612, i8* %11613, align 1
  %11614 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11600, i8* %11614, align 1
  store %struct.Memory* %loadMem_41693f, %struct.Memory** %MEMORY
  %loadMem_416946 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11615 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11616 = getelementptr inbounds %struct.GPR, %struct.GPR* %11615, i32 0, i32 33
  %11617 = getelementptr inbounds %struct.Reg, %struct.Reg* %11616, i32 0, i32 0
  %PC.i219 = bitcast %union.anon* %11617 to i64*
  %11618 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11619 = getelementptr inbounds %struct.GPR, %struct.GPR* %11618, i32 0, i32 1
  %11620 = getelementptr inbounds %struct.Reg, %struct.Reg* %11619, i32 0, i32 0
  %RAX.i220 = bitcast %union.anon* %11620 to i64*
  %11621 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11622 = getelementptr inbounds %struct.GPR, %struct.GPR* %11621, i32 0, i32 5
  %11623 = getelementptr inbounds %struct.Reg, %struct.Reg* %11622, i32 0, i32 0
  %RCX.i221 = bitcast %union.anon* %11623 to i64*
  %11624 = load i64, i64* %RAX.i220
  %11625 = load i64, i64* %RCX.i221
  %11626 = load i64, i64* %PC.i219
  %11627 = add i64 %11626, 3
  store i64 %11627, i64* %PC.i219
  %11628 = add i64 %11625, %11624
  store i64 %11628, i64* %RAX.i220, align 8
  %11629 = icmp ult i64 %11628, %11624
  %11630 = icmp ult i64 %11628, %11625
  %11631 = or i1 %11629, %11630
  %11632 = zext i1 %11631 to i8
  %11633 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11632, i8* %11633, align 1
  %11634 = trunc i64 %11628 to i32
  %11635 = and i32 %11634, 255
  %11636 = call i32 @llvm.ctpop.i32(i32 %11635)
  %11637 = trunc i32 %11636 to i8
  %11638 = and i8 %11637, 1
  %11639 = xor i8 %11638, 1
  %11640 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11639, i8* %11640, align 1
  %11641 = xor i64 %11625, %11624
  %11642 = xor i64 %11641, %11628
  %11643 = lshr i64 %11642, 4
  %11644 = trunc i64 %11643 to i8
  %11645 = and i8 %11644, 1
  %11646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11645, i8* %11646, align 1
  %11647 = icmp eq i64 %11628, 0
  %11648 = zext i1 %11647 to i8
  %11649 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11648, i8* %11649, align 1
  %11650 = lshr i64 %11628, 63
  %11651 = trunc i64 %11650 to i8
  %11652 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11651, i8* %11652, align 1
  %11653 = lshr i64 %11624, 63
  %11654 = lshr i64 %11625, 63
  %11655 = xor i64 %11650, %11653
  %11656 = xor i64 %11650, %11654
  %11657 = add i64 %11655, %11656
  %11658 = icmp eq i64 %11657, 2
  %11659 = zext i1 %11658 to i8
  %11660 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11659, i8* %11660, align 1
  store %struct.Memory* %loadMem_416946, %struct.Memory** %MEMORY
  %loadMem_416949 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11662 = getelementptr inbounds %struct.GPR, %struct.GPR* %11661, i32 0, i32 33
  %11663 = getelementptr inbounds %struct.Reg, %struct.Reg* %11662, i32 0, i32 0
  %PC.i216 = bitcast %union.anon* %11663 to i64*
  %11664 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11665 = getelementptr inbounds %struct.GPR, %struct.GPR* %11664, i32 0, i32 1
  %11666 = getelementptr inbounds %struct.Reg, %struct.Reg* %11665, i32 0, i32 0
  %RAX.i217 = bitcast %union.anon* %11666 to i64*
  %11667 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11668 = getelementptr inbounds %struct.GPR, %struct.GPR* %11667, i32 0, i32 7
  %11669 = getelementptr inbounds %struct.Reg, %struct.Reg* %11668, i32 0, i32 0
  %RDX.i218 = bitcast %union.anon* %11669 to i64*
  %11670 = load i64, i64* %RAX.i217
  %11671 = add i64 %11670, 4
  %11672 = load i64, i64* %PC.i216
  %11673 = add i64 %11672, 3
  store i64 %11673, i64* %PC.i216
  %11674 = inttoptr i64 %11671 to i32*
  %11675 = load i32, i32* %11674
  %11676 = zext i32 %11675 to i64
  store i64 %11676, i64* %RDX.i218, align 8
  store %struct.Memory* %loadMem_416949, %struct.Memory** %MEMORY
  %loadMem_41694c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11677 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11678 = getelementptr inbounds %struct.GPR, %struct.GPR* %11677, i32 0, i32 33
  %11679 = getelementptr inbounds %struct.Reg, %struct.Reg* %11678, i32 0, i32 0
  %PC.i213 = bitcast %union.anon* %11679 to i64*
  %11680 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11681 = getelementptr inbounds %struct.GPR, %struct.GPR* %11680, i32 0, i32 1
  %11682 = getelementptr inbounds %struct.Reg, %struct.Reg* %11681, i32 0, i32 0
  %RAX.i214 = bitcast %union.anon* %11682 to i64*
  %11683 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11684 = getelementptr inbounds %struct.GPR, %struct.GPR* %11683, i32 0, i32 15
  %11685 = getelementptr inbounds %struct.Reg, %struct.Reg* %11684, i32 0, i32 0
  %RBP.i215 = bitcast %union.anon* %11685 to i64*
  %11686 = load i64, i64* %RBP.i215
  %11687 = sub i64 %11686, 88
  %11688 = load i64, i64* %PC.i213
  %11689 = add i64 %11688, 4
  store i64 %11689, i64* %PC.i213
  %11690 = inttoptr i64 %11687 to i64*
  %11691 = load i64, i64* %11690
  store i64 %11691, i64* %RAX.i214, align 8
  store %struct.Memory* %loadMem_41694c, %struct.Memory** %MEMORY
  %loadMem_416950 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11692 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11693 = getelementptr inbounds %struct.GPR, %struct.GPR* %11692, i32 0, i32 33
  %11694 = getelementptr inbounds %struct.Reg, %struct.Reg* %11693, i32 0, i32 0
  %PC.i210 = bitcast %union.anon* %11694 to i64*
  %11695 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11696 = getelementptr inbounds %struct.GPR, %struct.GPR* %11695, i32 0, i32 1
  %11697 = getelementptr inbounds %struct.Reg, %struct.Reg* %11696, i32 0, i32 0
  %RAX.i211 = bitcast %union.anon* %11697 to i64*
  %11698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11699 = getelementptr inbounds %struct.GPR, %struct.GPR* %11698, i32 0, i32 7
  %11700 = getelementptr inbounds %struct.Reg, %struct.Reg* %11699, i32 0, i32 0
  %RDX.i212 = bitcast %union.anon* %11700 to i64*
  %11701 = load i64, i64* %RDX.i212
  %11702 = load i64, i64* %RAX.i211
  %11703 = load i64, i64* %PC.i210
  %11704 = add i64 %11703, 2
  store i64 %11704, i64* %PC.i210
  %11705 = trunc i64 %11701 to i32
  %11706 = inttoptr i64 %11702 to i32*
  %11707 = load i32, i32* %11706
  %11708 = add i32 %11707, %11705
  %11709 = zext i32 %11708 to i64
  store i64 %11709, i64* %RDX.i212, align 8
  %11710 = icmp ult i32 %11708, %11705
  %11711 = icmp ult i32 %11708, %11707
  %11712 = or i1 %11710, %11711
  %11713 = zext i1 %11712 to i8
  %11714 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11713, i8* %11714, align 1
  %11715 = and i32 %11708, 255
  %11716 = call i32 @llvm.ctpop.i32(i32 %11715)
  %11717 = trunc i32 %11716 to i8
  %11718 = and i8 %11717, 1
  %11719 = xor i8 %11718, 1
  %11720 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11719, i8* %11720, align 1
  %11721 = xor i32 %11707, %11705
  %11722 = xor i32 %11721, %11708
  %11723 = lshr i32 %11722, 4
  %11724 = trunc i32 %11723 to i8
  %11725 = and i8 %11724, 1
  %11726 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11725, i8* %11726, align 1
  %11727 = icmp eq i32 %11708, 0
  %11728 = zext i1 %11727 to i8
  %11729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11728, i8* %11729, align 1
  %11730 = lshr i32 %11708, 31
  %11731 = trunc i32 %11730 to i8
  %11732 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11731, i8* %11732, align 1
  %11733 = lshr i32 %11705, 31
  %11734 = lshr i32 %11707, 31
  %11735 = xor i32 %11730, %11733
  %11736 = xor i32 %11730, %11734
  %11737 = add i32 %11735, %11736
  %11738 = icmp eq i32 %11737, 2
  %11739 = zext i1 %11738 to i8
  %11740 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11739, i8* %11740, align 1
  store %struct.Memory* %loadMem_416950, %struct.Memory** %MEMORY
  %loadMem_416952 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11741 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11742 = getelementptr inbounds %struct.GPR, %struct.GPR* %11741, i32 0, i32 33
  %11743 = getelementptr inbounds %struct.Reg, %struct.Reg* %11742, i32 0, i32 0
  %PC.i207 = bitcast %union.anon* %11743 to i64*
  %11744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11745 = getelementptr inbounds %struct.GPR, %struct.GPR* %11744, i32 0, i32 7
  %11746 = getelementptr inbounds %struct.Reg, %struct.Reg* %11745, i32 0, i32 0
  %EDX.i208 = bitcast %union.anon* %11746 to i32*
  %11747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11748 = getelementptr inbounds %struct.GPR, %struct.GPR* %11747, i32 0, i32 1
  %11749 = getelementptr inbounds %struct.Reg, %struct.Reg* %11748, i32 0, i32 0
  %RAX.i209 = bitcast %union.anon* %11749 to i64*
  %11750 = load i64, i64* %RAX.i209
  %11751 = load i32, i32* %EDX.i208
  %11752 = zext i32 %11751 to i64
  %11753 = load i64, i64* %PC.i207
  %11754 = add i64 %11753, 2
  store i64 %11754, i64* %PC.i207
  %11755 = inttoptr i64 %11750 to i32*
  store i32 %11751, i32* %11755
  store %struct.Memory* %loadMem_416952, %struct.Memory** %MEMORY
  br label %block_.L_416954

block_.L_416954:                                  ; preds = %block_41692e, %block_4168fe
  %loadMem_416954 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11756 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11757 = getelementptr inbounds %struct.GPR, %struct.GPR* %11756, i32 0, i32 33
  %11758 = getelementptr inbounds %struct.Reg, %struct.Reg* %11757, i32 0, i32 0
  %PC.i206 = bitcast %union.anon* %11758 to i64*
  %11759 = load i64, i64* %PC.i206
  %11760 = add i64 %11759, 451
  %11761 = load i64, i64* %PC.i206
  %11762 = add i64 %11761, 5
  store i64 %11762, i64* %PC.i206
  %11763 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %11760, i64* %11763, align 8
  store %struct.Memory* %loadMem_416954, %struct.Memory** %MEMORY
  br label %block_.L_416b17

block_.L_416959:                                  ; preds = %block_.L_4168e4
  %loadMem_416959 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11764 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11765 = getelementptr inbounds %struct.GPR, %struct.GPR* %11764, i32 0, i32 33
  %11766 = getelementptr inbounds %struct.Reg, %struct.Reg* %11765, i32 0, i32 0
  %PC.i204 = bitcast %union.anon* %11766 to i64*
  %11767 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11768 = getelementptr inbounds %struct.GPR, %struct.GPR* %11767, i32 0, i32 1
  %11769 = getelementptr inbounds %struct.Reg, %struct.Reg* %11768, i32 0, i32 0
  %RAX.i205 = bitcast %union.anon* %11769 to i64*
  %11770 = load i64, i64* %PC.i204
  %11771 = add i64 %11770, 10
  store i64 %11771, i64* %PC.i204
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i205, align 8
  store %struct.Memory* %loadMem_416959, %struct.Memory** %MEMORY
  %loadMem_416963 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11772 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11773 = getelementptr inbounds %struct.GPR, %struct.GPR* %11772, i32 0, i32 33
  %11774 = getelementptr inbounds %struct.Reg, %struct.Reg* %11773, i32 0, i32 0
  %PC.i201 = bitcast %union.anon* %11774 to i64*
  %11775 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11776 = getelementptr inbounds %struct.GPR, %struct.GPR* %11775, i32 0, i32 5
  %11777 = getelementptr inbounds %struct.Reg, %struct.Reg* %11776, i32 0, i32 0
  %RCX.i202 = bitcast %union.anon* %11777 to i64*
  %11778 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11779 = getelementptr inbounds %struct.GPR, %struct.GPR* %11778, i32 0, i32 15
  %11780 = getelementptr inbounds %struct.Reg, %struct.Reg* %11779, i32 0, i32 0
  %RBP.i203 = bitcast %union.anon* %11780 to i64*
  %11781 = load i64, i64* %RBP.i203
  %11782 = sub i64 %11781, 64
  %11783 = load i64, i64* %PC.i201
  %11784 = add i64 %11783, 4
  store i64 %11784, i64* %PC.i201
  %11785 = inttoptr i64 %11782 to i64*
  %11786 = load i64, i64* %11785
  store i64 %11786, i64* %RCX.i202, align 8
  store %struct.Memory* %loadMem_416963, %struct.Memory** %MEMORY
  %loadMem_416967 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11787 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11788 = getelementptr inbounds %struct.GPR, %struct.GPR* %11787, i32 0, i32 33
  %11789 = getelementptr inbounds %struct.Reg, %struct.Reg* %11788, i32 0, i32 0
  %PC.i198 = bitcast %union.anon* %11789 to i64*
  %11790 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11791 = getelementptr inbounds %struct.GPR, %struct.GPR* %11790, i32 0, i32 5
  %11792 = getelementptr inbounds %struct.Reg, %struct.Reg* %11791, i32 0, i32 0
  %RCX.i199 = bitcast %union.anon* %11792 to i64*
  %11793 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11794 = getelementptr inbounds %struct.GPR, %struct.GPR* %11793, i32 0, i32 7
  %11795 = getelementptr inbounds %struct.Reg, %struct.Reg* %11794, i32 0, i32 0
  %RDX.i200 = bitcast %union.anon* %11795 to i64*
  %11796 = load i64, i64* %RCX.i199
  %11797 = load i64, i64* %PC.i198
  %11798 = add i64 %11797, 2
  store i64 %11798, i64* %PC.i198
  %11799 = inttoptr i64 %11796 to i32*
  %11800 = load i32, i32* %11799
  %11801 = zext i32 %11800 to i64
  store i64 %11801, i64* %RDX.i200, align 8
  store %struct.Memory* %loadMem_416967, %struct.Memory** %MEMORY
  %loadMem_416969 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11802 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11803 = getelementptr inbounds %struct.GPR, %struct.GPR* %11802, i32 0, i32 33
  %11804 = getelementptr inbounds %struct.Reg, %struct.Reg* %11803, i32 0, i32 0
  %PC.i196 = bitcast %union.anon* %11804 to i64*
  %11805 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11806 = getelementptr inbounds %struct.GPR, %struct.GPR* %11805, i32 0, i32 7
  %11807 = getelementptr inbounds %struct.Reg, %struct.Reg* %11806, i32 0, i32 0
  %RDX.i197 = bitcast %union.anon* %11807 to i64*
  %11808 = load i64, i64* %RDX.i197
  %11809 = load i64, i64* %PC.i196
  %11810 = add i64 %11809, 3
  store i64 %11810, i64* %PC.i196
  %11811 = trunc i64 %11808 to i32
  %11812 = add i32 1, %11811
  %11813 = zext i32 %11812 to i64
  store i64 %11813, i64* %RDX.i197, align 8
  %11814 = icmp ult i32 %11812, %11811
  %11815 = icmp ult i32 %11812, 1
  %11816 = or i1 %11814, %11815
  %11817 = zext i1 %11816 to i8
  %11818 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11817, i8* %11818, align 1
  %11819 = and i32 %11812, 255
  %11820 = call i32 @llvm.ctpop.i32(i32 %11819)
  %11821 = trunc i32 %11820 to i8
  %11822 = and i8 %11821, 1
  %11823 = xor i8 %11822, 1
  %11824 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11823, i8* %11824, align 1
  %11825 = xor i64 1, %11808
  %11826 = trunc i64 %11825 to i32
  %11827 = xor i32 %11826, %11812
  %11828 = lshr i32 %11827, 4
  %11829 = trunc i32 %11828 to i8
  %11830 = and i8 %11829, 1
  %11831 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11830, i8* %11831, align 1
  %11832 = icmp eq i32 %11812, 0
  %11833 = zext i1 %11832 to i8
  %11834 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11833, i8* %11834, align 1
  %11835 = lshr i32 %11812, 31
  %11836 = trunc i32 %11835 to i8
  %11837 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11836, i8* %11837, align 1
  %11838 = lshr i32 %11811, 31
  %11839 = xor i32 %11835, %11838
  %11840 = add i32 %11839, %11835
  %11841 = icmp eq i32 %11840, 2
  %11842 = zext i1 %11841 to i8
  %11843 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11842, i8* %11843, align 1
  store %struct.Memory* %loadMem_416969, %struct.Memory** %MEMORY
  %loadMem_41696c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11844 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11845 = getelementptr inbounds %struct.GPR, %struct.GPR* %11844, i32 0, i32 33
  %11846 = getelementptr inbounds %struct.Reg, %struct.Reg* %11845, i32 0, i32 0
  %PC.i193 = bitcast %union.anon* %11846 to i64*
  %11847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11848 = getelementptr inbounds %struct.GPR, %struct.GPR* %11847, i32 0, i32 7
  %11849 = getelementptr inbounds %struct.Reg, %struct.Reg* %11848, i32 0, i32 0
  %EDX.i194 = bitcast %union.anon* %11849 to i32*
  %11850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11851 = getelementptr inbounds %struct.GPR, %struct.GPR* %11850, i32 0, i32 5
  %11852 = getelementptr inbounds %struct.Reg, %struct.Reg* %11851, i32 0, i32 0
  %RCX.i195 = bitcast %union.anon* %11852 to i64*
  %11853 = load i64, i64* %RCX.i195
  %11854 = load i32, i32* %EDX.i194
  %11855 = zext i32 %11854 to i64
  %11856 = load i64, i64* %PC.i193
  %11857 = add i64 %11856, 2
  store i64 %11857, i64* %PC.i193
  %11858 = inttoptr i64 %11853 to i32*
  store i32 %11854, i32* %11858
  store %struct.Memory* %loadMem_41696c, %struct.Memory** %MEMORY
  %loadMem_41696e = load %struct.Memory*, %struct.Memory** %MEMORY
  %11859 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11860 = getelementptr inbounds %struct.GPR, %struct.GPR* %11859, i32 0, i32 33
  %11861 = getelementptr inbounds %struct.Reg, %struct.Reg* %11860, i32 0, i32 0
  %PC.i190 = bitcast %union.anon* %11861 to i64*
  %11862 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11863 = getelementptr inbounds %struct.GPR, %struct.GPR* %11862, i32 0, i32 5
  %11864 = getelementptr inbounds %struct.Reg, %struct.Reg* %11863, i32 0, i32 0
  %RCX.i191 = bitcast %union.anon* %11864 to i64*
  %11865 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11866 = getelementptr inbounds %struct.GPR, %struct.GPR* %11865, i32 0, i32 15
  %11867 = getelementptr inbounds %struct.Reg, %struct.Reg* %11866, i32 0, i32 0
  %RBP.i192 = bitcast %union.anon* %11867 to i64*
  %11868 = load i64, i64* %RBP.i192
  %11869 = sub i64 %11868, 148
  %11870 = load i64, i64* %PC.i190
  %11871 = add i64 %11870, 7
  store i64 %11871, i64* %PC.i190
  %11872 = inttoptr i64 %11869 to i32*
  %11873 = load i32, i32* %11872
  %11874 = sext i32 %11873 to i64
  store i64 %11874, i64* %RCX.i191, align 8
  store %struct.Memory* %loadMem_41696e, %struct.Memory** %MEMORY
  %loadMem_416975 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11875 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11876 = getelementptr inbounds %struct.GPR, %struct.GPR* %11875, i32 0, i32 33
  %11877 = getelementptr inbounds %struct.Reg, %struct.Reg* %11876, i32 0, i32 0
  %PC.i188 = bitcast %union.anon* %11877 to i64*
  %11878 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11879 = getelementptr inbounds %struct.GPR, %struct.GPR* %11878, i32 0, i32 5
  %11880 = getelementptr inbounds %struct.Reg, %struct.Reg* %11879, i32 0, i32 0
  %RCX.i189 = bitcast %union.anon* %11880 to i64*
  %11881 = load i64, i64* %RCX.i189
  %11882 = load i64, i64* %PC.i188
  %11883 = add i64 %11882, 7
  store i64 %11883, i64* %PC.i188
  %11884 = sext i64 %11881 to i128
  %11885 = and i128 %11884, -18446744073709551616
  %11886 = zext i64 %11881 to i128
  %11887 = or i128 %11885, %11886
  %11888 = mul i128 744, %11887
  %11889 = trunc i128 %11888 to i64
  store i64 %11889, i64* %RCX.i189, align 8
  %11890 = sext i64 %11889 to i128
  %11891 = icmp ne i128 %11890, %11888
  %11892 = zext i1 %11891 to i8
  %11893 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11892, i8* %11893, align 1
  %11894 = trunc i128 %11888 to i32
  %11895 = and i32 %11894, 255
  %11896 = call i32 @llvm.ctpop.i32(i32 %11895)
  %11897 = trunc i32 %11896 to i8
  %11898 = and i8 %11897, 1
  %11899 = xor i8 %11898, 1
  %11900 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11899, i8* %11900, align 1
  %11901 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %11901, align 1
  %11902 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %11902, align 1
  %11903 = lshr i64 %11889, 63
  %11904 = trunc i64 %11903 to i8
  %11905 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11904, i8* %11905, align 1
  %11906 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11892, i8* %11906, align 1
  store %struct.Memory* %loadMem_416975, %struct.Memory** %MEMORY
  %loadMem_41697c = load %struct.Memory*, %struct.Memory** %MEMORY
  %11907 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11908 = getelementptr inbounds %struct.GPR, %struct.GPR* %11907, i32 0, i32 33
  %11909 = getelementptr inbounds %struct.Reg, %struct.Reg* %11908, i32 0, i32 0
  %PC.i185 = bitcast %union.anon* %11909 to i64*
  %11910 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11911 = getelementptr inbounds %struct.GPR, %struct.GPR* %11910, i32 0, i32 1
  %11912 = getelementptr inbounds %struct.Reg, %struct.Reg* %11911, i32 0, i32 0
  %RAX.i186 = bitcast %union.anon* %11912 to i64*
  %11913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11914 = getelementptr inbounds %struct.GPR, %struct.GPR* %11913, i32 0, i32 5
  %11915 = getelementptr inbounds %struct.Reg, %struct.Reg* %11914, i32 0, i32 0
  %RCX.i187 = bitcast %union.anon* %11915 to i64*
  %11916 = load i64, i64* %RAX.i186
  %11917 = load i64, i64* %RCX.i187
  %11918 = load i64, i64* %PC.i185
  %11919 = add i64 %11918, 3
  store i64 %11919, i64* %PC.i185
  %11920 = add i64 %11917, %11916
  store i64 %11920, i64* %RAX.i186, align 8
  %11921 = icmp ult i64 %11920, %11916
  %11922 = icmp ult i64 %11920, %11917
  %11923 = or i1 %11921, %11922
  %11924 = zext i1 %11923 to i8
  %11925 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11924, i8* %11925, align 1
  %11926 = trunc i64 %11920 to i32
  %11927 = and i32 %11926, 255
  %11928 = call i32 @llvm.ctpop.i32(i32 %11927)
  %11929 = trunc i32 %11928 to i8
  %11930 = and i8 %11929, 1
  %11931 = xor i8 %11930, 1
  %11932 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11931, i8* %11932, align 1
  %11933 = xor i64 %11917, %11916
  %11934 = xor i64 %11933, %11920
  %11935 = lshr i64 %11934, 4
  %11936 = trunc i64 %11935 to i8
  %11937 = and i8 %11936, 1
  %11938 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11937, i8* %11938, align 1
  %11939 = icmp eq i64 %11920, 0
  %11940 = zext i1 %11939 to i8
  %11941 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11940, i8* %11941, align 1
  %11942 = lshr i64 %11920, 63
  %11943 = trunc i64 %11942 to i8
  %11944 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11943, i8* %11944, align 1
  %11945 = lshr i64 %11916, 63
  %11946 = lshr i64 %11917, 63
  %11947 = xor i64 %11942, %11945
  %11948 = xor i64 %11942, %11946
  %11949 = add i64 %11947, %11948
  %11950 = icmp eq i64 %11949, 2
  %11951 = zext i1 %11950 to i8
  %11952 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11951, i8* %11952, align 1
  store %struct.Memory* %loadMem_41697c, %struct.Memory** %MEMORY
  %loadMem_41697f = load %struct.Memory*, %struct.Memory** %MEMORY
  %11953 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11954 = getelementptr inbounds %struct.GPR, %struct.GPR* %11953, i32 0, i32 33
  %11955 = getelementptr inbounds %struct.Reg, %struct.Reg* %11954, i32 0, i32 0
  %PC.i183 = bitcast %union.anon* %11955 to i64*
  %11956 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11957 = getelementptr inbounds %struct.GPR, %struct.GPR* %11956, i32 0, i32 1
  %11958 = getelementptr inbounds %struct.Reg, %struct.Reg* %11957, i32 0, i32 0
  %RAX.i184 = bitcast %union.anon* %11958 to i64*
  %11959 = load i64, i64* %RAX.i184
  %11960 = add i64 %11959, 12
  %11961 = load i64, i64* %PC.i183
  %11962 = add i64 %11961, 4
  store i64 %11962, i64* %PC.i183
  %11963 = inttoptr i64 %11960 to i32*
  %11964 = load i32, i32* %11963
  %11965 = sub i32 %11964, 1
  %11966 = icmp ult i32 %11964, 1
  %11967 = zext i1 %11966 to i8
  %11968 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %11967, i8* %11968, align 1
  %11969 = and i32 %11965, 255
  %11970 = call i32 @llvm.ctpop.i32(i32 %11969)
  %11971 = trunc i32 %11970 to i8
  %11972 = and i8 %11971, 1
  %11973 = xor i8 %11972, 1
  %11974 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %11973, i8* %11974, align 1
  %11975 = xor i32 %11964, 1
  %11976 = xor i32 %11975, %11965
  %11977 = lshr i32 %11976, 4
  %11978 = trunc i32 %11977 to i8
  %11979 = and i8 %11978, 1
  %11980 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %11979, i8* %11980, align 1
  %11981 = icmp eq i32 %11965, 0
  %11982 = zext i1 %11981 to i8
  %11983 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %11982, i8* %11983, align 1
  %11984 = lshr i32 %11965, 31
  %11985 = trunc i32 %11984 to i8
  %11986 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %11985, i8* %11986, align 1
  %11987 = lshr i32 %11964, 31
  %11988 = xor i32 %11984, %11987
  %11989 = add i32 %11988, %11987
  %11990 = icmp eq i32 %11989, 2
  %11991 = zext i1 %11990 to i8
  %11992 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %11991, i8* %11992, align 1
  store %struct.Memory* %loadMem_41697f, %struct.Memory** %MEMORY
  %loadMem_416983 = load %struct.Memory*, %struct.Memory** %MEMORY
  %11993 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11994 = getelementptr inbounds %struct.GPR, %struct.GPR* %11993, i32 0, i32 33
  %11995 = getelementptr inbounds %struct.Reg, %struct.Reg* %11994, i32 0, i32 0
  %PC.i182 = bitcast %union.anon* %11995 to i64*
  %11996 = load i64, i64* %PC.i182
  %11997 = add i64 %11996, 220
  %11998 = load i64, i64* %PC.i182
  %11999 = add i64 %11998, 6
  %12000 = load i64, i64* %PC.i182
  %12001 = add i64 %12000, 6
  store i64 %12001, i64* %PC.i182
  %12002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12003 = load i8, i8* %12002, align 1
  %12004 = icmp eq i8 %12003, 0
  %12005 = zext i1 %12004 to i8
  store i8 %12005, i8* %BRANCH_TAKEN, align 1
  %12006 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12007 = select i1 %12004, i64 %11997, i64 %11999
  store i64 %12007, i64* %12006, align 8
  store %struct.Memory* %loadMem_416983, %struct.Memory** %MEMORY
  %loadBr_416983 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416983 = icmp eq i8 %loadBr_416983, 1
  br i1 %cmpBr_416983, label %block_.L_416a5f, label %block_416989

block_416989:                                     ; preds = %block_.L_416959
  %loadMem_416989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12008 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12009 = getelementptr inbounds %struct.GPR, %struct.GPR* %12008, i32 0, i32 33
  %12010 = getelementptr inbounds %struct.Reg, %struct.Reg* %12009, i32 0, i32 0
  %PC.i180 = bitcast %union.anon* %12010 to i64*
  %12011 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12012 = getelementptr inbounds %struct.GPR, %struct.GPR* %12011, i32 0, i32 1
  %12013 = getelementptr inbounds %struct.Reg, %struct.Reg* %12012, i32 0, i32 0
  %RAX.i181 = bitcast %union.anon* %12013 to i64*
  %12014 = load i64, i64* %PC.i180
  %12015 = add i64 %12014, 10
  store i64 %12015, i64* %PC.i180
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i181, align 8
  store %struct.Memory* %loadMem_416989, %struct.Memory** %MEMORY
  %loadMem_416993 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12016 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12017 = getelementptr inbounds %struct.GPR, %struct.GPR* %12016, i32 0, i32 33
  %12018 = getelementptr inbounds %struct.Reg, %struct.Reg* %12017, i32 0, i32 0
  %PC.i177 = bitcast %union.anon* %12018 to i64*
  %12019 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12020 = getelementptr inbounds %struct.GPR, %struct.GPR* %12019, i32 0, i32 5
  %12021 = getelementptr inbounds %struct.Reg, %struct.Reg* %12020, i32 0, i32 0
  %RCX.i178 = bitcast %union.anon* %12021 to i64*
  %12022 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12023 = getelementptr inbounds %struct.GPR, %struct.GPR* %12022, i32 0, i32 15
  %12024 = getelementptr inbounds %struct.Reg, %struct.Reg* %12023, i32 0, i32 0
  %RBP.i179 = bitcast %union.anon* %12024 to i64*
  %12025 = load i64, i64* %RBP.i179
  %12026 = sub i64 %12025, 148
  %12027 = load i64, i64* %PC.i177
  %12028 = add i64 %12027, 7
  store i64 %12028, i64* %PC.i177
  %12029 = inttoptr i64 %12026 to i32*
  %12030 = load i32, i32* %12029
  %12031 = sext i32 %12030 to i64
  store i64 %12031, i64* %RCX.i178, align 8
  store %struct.Memory* %loadMem_416993, %struct.Memory** %MEMORY
  %loadMem_41699a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12032 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12033 = getelementptr inbounds %struct.GPR, %struct.GPR* %12032, i32 0, i32 33
  %12034 = getelementptr inbounds %struct.Reg, %struct.Reg* %12033, i32 0, i32 0
  %PC.i175 = bitcast %union.anon* %12034 to i64*
  %12035 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12036 = getelementptr inbounds %struct.GPR, %struct.GPR* %12035, i32 0, i32 5
  %12037 = getelementptr inbounds %struct.Reg, %struct.Reg* %12036, i32 0, i32 0
  %RCX.i176 = bitcast %union.anon* %12037 to i64*
  %12038 = load i64, i64* %RCX.i176
  %12039 = load i64, i64* %PC.i175
  %12040 = add i64 %12039, 7
  store i64 %12040, i64* %PC.i175
  %12041 = sext i64 %12038 to i128
  %12042 = and i128 %12041, -18446744073709551616
  %12043 = zext i64 %12038 to i128
  %12044 = or i128 %12042, %12043
  %12045 = mul i128 744, %12044
  %12046 = trunc i128 %12045 to i64
  store i64 %12046, i64* %RCX.i176, align 8
  %12047 = sext i64 %12046 to i128
  %12048 = icmp ne i128 %12047, %12045
  %12049 = zext i1 %12048 to i8
  %12050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12049, i8* %12050, align 1
  %12051 = trunc i128 %12045 to i32
  %12052 = and i32 %12051, 255
  %12053 = call i32 @llvm.ctpop.i32(i32 %12052)
  %12054 = trunc i32 %12053 to i8
  %12055 = and i8 %12054, 1
  %12056 = xor i8 %12055, 1
  %12057 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12056, i8* %12057, align 1
  %12058 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12058, align 1
  %12059 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12059, align 1
  %12060 = lshr i64 %12046, 63
  %12061 = trunc i64 %12060 to i8
  %12062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12061, i8* %12062, align 1
  %12063 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12049, i8* %12063, align 1
  store %struct.Memory* %loadMem_41699a, %struct.Memory** %MEMORY
  %loadMem_4169a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12064 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12065 = getelementptr inbounds %struct.GPR, %struct.GPR* %12064, i32 0, i32 33
  %12066 = getelementptr inbounds %struct.Reg, %struct.Reg* %12065, i32 0, i32 0
  %PC.i172 = bitcast %union.anon* %12066 to i64*
  %12067 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12068 = getelementptr inbounds %struct.GPR, %struct.GPR* %12067, i32 0, i32 1
  %12069 = getelementptr inbounds %struct.Reg, %struct.Reg* %12068, i32 0, i32 0
  %RAX.i173 = bitcast %union.anon* %12069 to i64*
  %12070 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12071 = getelementptr inbounds %struct.GPR, %struct.GPR* %12070, i32 0, i32 5
  %12072 = getelementptr inbounds %struct.Reg, %struct.Reg* %12071, i32 0, i32 0
  %RCX.i174 = bitcast %union.anon* %12072 to i64*
  %12073 = load i64, i64* %RAX.i173
  %12074 = load i64, i64* %RCX.i174
  %12075 = load i64, i64* %PC.i172
  %12076 = add i64 %12075, 3
  store i64 %12076, i64* %PC.i172
  %12077 = add i64 %12074, %12073
  store i64 %12077, i64* %RAX.i173, align 8
  %12078 = icmp ult i64 %12077, %12073
  %12079 = icmp ult i64 %12077, %12074
  %12080 = or i1 %12078, %12079
  %12081 = zext i1 %12080 to i8
  %12082 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12081, i8* %12082, align 1
  %12083 = trunc i64 %12077 to i32
  %12084 = and i32 %12083, 255
  %12085 = call i32 @llvm.ctpop.i32(i32 %12084)
  %12086 = trunc i32 %12085 to i8
  %12087 = and i8 %12086, 1
  %12088 = xor i8 %12087, 1
  %12089 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12088, i8* %12089, align 1
  %12090 = xor i64 %12074, %12073
  %12091 = xor i64 %12090, %12077
  %12092 = lshr i64 %12091, 4
  %12093 = trunc i64 %12092 to i8
  %12094 = and i8 %12093, 1
  %12095 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12094, i8* %12095, align 1
  %12096 = icmp eq i64 %12077, 0
  %12097 = zext i1 %12096 to i8
  %12098 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12097, i8* %12098, align 1
  %12099 = lshr i64 %12077, 63
  %12100 = trunc i64 %12099 to i8
  %12101 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12100, i8* %12101, align 1
  %12102 = lshr i64 %12073, 63
  %12103 = lshr i64 %12074, 63
  %12104 = xor i64 %12099, %12102
  %12105 = xor i64 %12099, %12103
  %12106 = add i64 %12104, %12105
  %12107 = icmp eq i64 %12106, 2
  %12108 = zext i1 %12107 to i8
  %12109 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12108, i8* %12109, align 1
  store %struct.Memory* %loadMem_4169a1, %struct.Memory** %MEMORY
  %loadMem_4169a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12110 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12111 = getelementptr inbounds %struct.GPR, %struct.GPR* %12110, i32 0, i32 33
  %12112 = getelementptr inbounds %struct.Reg, %struct.Reg* %12111, i32 0, i32 0
  %PC.i169 = bitcast %union.anon* %12112 to i64*
  %12113 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12114 = getelementptr inbounds %struct.GPR, %struct.GPR* %12113, i32 0, i32 1
  %12115 = getelementptr inbounds %struct.Reg, %struct.Reg* %12114, i32 0, i32 0
  %RAX.i170 = bitcast %union.anon* %12115 to i64*
  %12116 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12117 = getelementptr inbounds %struct.GPR, %struct.GPR* %12116, i32 0, i32 7
  %12118 = getelementptr inbounds %struct.Reg, %struct.Reg* %12117, i32 0, i32 0
  %RDX.i171 = bitcast %union.anon* %12118 to i64*
  %12119 = load i64, i64* %RAX.i170
  %12120 = add i64 %12119, 4
  %12121 = load i64, i64* %PC.i169
  %12122 = add i64 %12121, 3
  store i64 %12122, i64* %PC.i169
  %12123 = inttoptr i64 %12120 to i32*
  %12124 = load i32, i32* %12123
  %12125 = zext i32 %12124 to i64
  store i64 %12125, i64* %RDX.i171, align 8
  store %struct.Memory* %loadMem_4169a4, %struct.Memory** %MEMORY
  %loadMem_4169a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12126 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12127 = getelementptr inbounds %struct.GPR, %struct.GPR* %12126, i32 0, i32 33
  %12128 = getelementptr inbounds %struct.Reg, %struct.Reg* %12127, i32 0, i32 0
  %PC.i166 = bitcast %union.anon* %12128 to i64*
  %12129 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12130 = getelementptr inbounds %struct.GPR, %struct.GPR* %12129, i32 0, i32 1
  %12131 = getelementptr inbounds %struct.Reg, %struct.Reg* %12130, i32 0, i32 0
  %RAX.i167 = bitcast %union.anon* %12131 to i64*
  %12132 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12133 = getelementptr inbounds %struct.GPR, %struct.GPR* %12132, i32 0, i32 15
  %12134 = getelementptr inbounds %struct.Reg, %struct.Reg* %12133, i32 0, i32 0
  %RBP.i168 = bitcast %union.anon* %12134 to i64*
  %12135 = load i64, i64* %RBP.i168
  %12136 = sub i64 %12135, 72
  %12137 = load i64, i64* %PC.i166
  %12138 = add i64 %12137, 4
  store i64 %12138, i64* %PC.i166
  %12139 = inttoptr i64 %12136 to i64*
  %12140 = load i64, i64* %12139
  store i64 %12140, i64* %RAX.i167, align 8
  store %struct.Memory* %loadMem_4169a7, %struct.Memory** %MEMORY
  %loadMem_4169ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %12141 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12142 = getelementptr inbounds %struct.GPR, %struct.GPR* %12141, i32 0, i32 33
  %12143 = getelementptr inbounds %struct.Reg, %struct.Reg* %12142, i32 0, i32 0
  %PC.i163 = bitcast %union.anon* %12143 to i64*
  %12144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12145 = getelementptr inbounds %struct.GPR, %struct.GPR* %12144, i32 0, i32 1
  %12146 = getelementptr inbounds %struct.Reg, %struct.Reg* %12145, i32 0, i32 0
  %RAX.i164 = bitcast %union.anon* %12146 to i64*
  %12147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12148 = getelementptr inbounds %struct.GPR, %struct.GPR* %12147, i32 0, i32 7
  %12149 = getelementptr inbounds %struct.Reg, %struct.Reg* %12148, i32 0, i32 0
  %RDX.i165 = bitcast %union.anon* %12149 to i64*
  %12150 = load i64, i64* %RDX.i165
  %12151 = load i64, i64* %RAX.i164
  %12152 = load i64, i64* %PC.i163
  %12153 = add i64 %12152, 2
  store i64 %12153, i64* %PC.i163
  %12154 = trunc i64 %12150 to i32
  %12155 = inttoptr i64 %12151 to i32*
  %12156 = load i32, i32* %12155
  %12157 = add i32 %12156, %12154
  %12158 = zext i32 %12157 to i64
  store i64 %12158, i64* %RDX.i165, align 8
  %12159 = icmp ult i32 %12157, %12154
  %12160 = icmp ult i32 %12157, %12156
  %12161 = or i1 %12159, %12160
  %12162 = zext i1 %12161 to i8
  %12163 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12162, i8* %12163, align 1
  %12164 = and i32 %12157, 255
  %12165 = call i32 @llvm.ctpop.i32(i32 %12164)
  %12166 = trunc i32 %12165 to i8
  %12167 = and i8 %12166, 1
  %12168 = xor i8 %12167, 1
  %12169 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12168, i8* %12169, align 1
  %12170 = xor i32 %12156, %12154
  %12171 = xor i32 %12170, %12157
  %12172 = lshr i32 %12171, 4
  %12173 = trunc i32 %12172 to i8
  %12174 = and i8 %12173, 1
  %12175 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12174, i8* %12175, align 1
  %12176 = icmp eq i32 %12157, 0
  %12177 = zext i1 %12176 to i8
  %12178 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12177, i8* %12178, align 1
  %12179 = lshr i32 %12157, 31
  %12180 = trunc i32 %12179 to i8
  %12181 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12180, i8* %12181, align 1
  %12182 = lshr i32 %12154, 31
  %12183 = lshr i32 %12156, 31
  %12184 = xor i32 %12179, %12182
  %12185 = xor i32 %12179, %12183
  %12186 = add i32 %12184, %12185
  %12187 = icmp eq i32 %12186, 2
  %12188 = zext i1 %12187 to i8
  %12189 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12188, i8* %12189, align 1
  store %struct.Memory* %loadMem_4169ab, %struct.Memory** %MEMORY
  %loadMem_4169ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %12190 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12191 = getelementptr inbounds %struct.GPR, %struct.GPR* %12190, i32 0, i32 33
  %12192 = getelementptr inbounds %struct.Reg, %struct.Reg* %12191, i32 0, i32 0
  %PC.i161 = bitcast %union.anon* %12192 to i64*
  %12193 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12194 = getelementptr inbounds %struct.GPR, %struct.GPR* %12193, i32 0, i32 7
  %12195 = getelementptr inbounds %struct.Reg, %struct.Reg* %12194, i32 0, i32 0
  %EDX.i = bitcast %union.anon* %12195 to i32*
  %12196 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12197 = getelementptr inbounds %struct.GPR, %struct.GPR* %12196, i32 0, i32 1
  %12198 = getelementptr inbounds %struct.Reg, %struct.Reg* %12197, i32 0, i32 0
  %RAX.i162 = bitcast %union.anon* %12198 to i64*
  %12199 = load i64, i64* %RAX.i162
  %12200 = load i32, i32* %EDX.i
  %12201 = zext i32 %12200 to i64
  %12202 = load i64, i64* %PC.i161
  %12203 = add i64 %12202, 2
  store i64 %12203, i64* %PC.i161
  %12204 = inttoptr i64 %12199 to i32*
  store i32 %12200, i32* %12204
  store %struct.Memory* %loadMem_4169ad, %struct.Memory** %MEMORY
  %loadMem_4169af = load %struct.Memory*, %struct.Memory** %MEMORY
  %12205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12206 = getelementptr inbounds %struct.GPR, %struct.GPR* %12205, i32 0, i32 33
  %12207 = getelementptr inbounds %struct.Reg, %struct.Reg* %12206, i32 0, i32 0
  %PC.i159 = bitcast %union.anon* %12207 to i64*
  %12208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12209 = getelementptr inbounds %struct.GPR, %struct.GPR* %12208, i32 0, i32 15
  %12210 = getelementptr inbounds %struct.Reg, %struct.Reg* %12209, i32 0, i32 0
  %RBP.i160 = bitcast %union.anon* %12210 to i64*
  %12211 = load i64, i64* %RBP.i160
  %12212 = sub i64 %12211, 152
  %12213 = load i64, i64* %PC.i159
  %12214 = add i64 %12213, 10
  store i64 %12214, i64* %PC.i159
  %12215 = inttoptr i64 %12212 to i32*
  store i32 0, i32* %12215
  store %struct.Memory* %loadMem_4169af, %struct.Memory** %MEMORY
  br label %block_.L_4169b9

block_.L_4169b9:                                  ; preds = %block_.L_416a46, %block_416989
  %loadMem_4169b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12216 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12217 = getelementptr inbounds %struct.GPR, %struct.GPR* %12216, i32 0, i32 33
  %12218 = getelementptr inbounds %struct.Reg, %struct.Reg* %12217, i32 0, i32 0
  %PC.i157 = bitcast %union.anon* %12218 to i64*
  %12219 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12220 = getelementptr inbounds %struct.GPR, %struct.GPR* %12219, i32 0, i32 1
  %12221 = getelementptr inbounds %struct.Reg, %struct.Reg* %12220, i32 0, i32 0
  %RAX.i158 = bitcast %union.anon* %12221 to i64*
  %12222 = load i64, i64* %PC.i157
  %12223 = add i64 %12222, 10
  store i64 %12223, i64* %PC.i157
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i158, align 8
  store %struct.Memory* %loadMem_4169b9, %struct.Memory** %MEMORY
  %loadMem_4169c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12224 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12225 = getelementptr inbounds %struct.GPR, %struct.GPR* %12224, i32 0, i32 33
  %12226 = getelementptr inbounds %struct.Reg, %struct.Reg* %12225, i32 0, i32 0
  %PC.i154 = bitcast %union.anon* %12226 to i64*
  %12227 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12228 = getelementptr inbounds %struct.GPR, %struct.GPR* %12227, i32 0, i32 5
  %12229 = getelementptr inbounds %struct.Reg, %struct.Reg* %12228, i32 0, i32 0
  %RCX.i155 = bitcast %union.anon* %12229 to i64*
  %12230 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12231 = getelementptr inbounds %struct.GPR, %struct.GPR* %12230, i32 0, i32 15
  %12232 = getelementptr inbounds %struct.Reg, %struct.Reg* %12231, i32 0, i32 0
  %RBP.i156 = bitcast %union.anon* %12232 to i64*
  %12233 = load i64, i64* %RBP.i156
  %12234 = sub i64 %12233, 152
  %12235 = load i64, i64* %PC.i154
  %12236 = add i64 %12235, 6
  store i64 %12236, i64* %PC.i154
  %12237 = inttoptr i64 %12234 to i32*
  %12238 = load i32, i32* %12237
  %12239 = zext i32 %12238 to i64
  store i64 %12239, i64* %RCX.i155, align 8
  store %struct.Memory* %loadMem_4169c3, %struct.Memory** %MEMORY
  %loadMem_4169c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12240 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12241 = getelementptr inbounds %struct.GPR, %struct.GPR* %12240, i32 0, i32 33
  %12242 = getelementptr inbounds %struct.Reg, %struct.Reg* %12241, i32 0, i32 0
  %PC.i151 = bitcast %union.anon* %12242 to i64*
  %12243 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12244 = getelementptr inbounds %struct.GPR, %struct.GPR* %12243, i32 0, i32 7
  %12245 = getelementptr inbounds %struct.Reg, %struct.Reg* %12244, i32 0, i32 0
  %RDX.i152 = bitcast %union.anon* %12245 to i64*
  %12246 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12247 = getelementptr inbounds %struct.GPR, %struct.GPR* %12246, i32 0, i32 15
  %12248 = getelementptr inbounds %struct.Reg, %struct.Reg* %12247, i32 0, i32 0
  %RBP.i153 = bitcast %union.anon* %12248 to i64*
  %12249 = load i64, i64* %RBP.i153
  %12250 = sub i64 %12249, 148
  %12251 = load i64, i64* %PC.i151
  %12252 = add i64 %12251, 7
  store i64 %12252, i64* %PC.i151
  %12253 = inttoptr i64 %12250 to i32*
  %12254 = load i32, i32* %12253
  %12255 = sext i32 %12254 to i64
  store i64 %12255, i64* %RDX.i152, align 8
  store %struct.Memory* %loadMem_4169c9, %struct.Memory** %MEMORY
  %loadMem_4169d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12256 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12257 = getelementptr inbounds %struct.GPR, %struct.GPR* %12256, i32 0, i32 33
  %12258 = getelementptr inbounds %struct.Reg, %struct.Reg* %12257, i32 0, i32 0
  %PC.i149 = bitcast %union.anon* %12258 to i64*
  %12259 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12260 = getelementptr inbounds %struct.GPR, %struct.GPR* %12259, i32 0, i32 7
  %12261 = getelementptr inbounds %struct.Reg, %struct.Reg* %12260, i32 0, i32 0
  %RDX.i150 = bitcast %union.anon* %12261 to i64*
  %12262 = load i64, i64* %RDX.i150
  %12263 = load i64, i64* %PC.i149
  %12264 = add i64 %12263, 7
  store i64 %12264, i64* %PC.i149
  %12265 = sext i64 %12262 to i128
  %12266 = and i128 %12265, -18446744073709551616
  %12267 = zext i64 %12262 to i128
  %12268 = or i128 %12266, %12267
  %12269 = mul i128 744, %12268
  %12270 = trunc i128 %12269 to i64
  store i64 %12270, i64* %RDX.i150, align 8
  %12271 = sext i64 %12270 to i128
  %12272 = icmp ne i128 %12271, %12269
  %12273 = zext i1 %12272 to i8
  %12274 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12273, i8* %12274, align 1
  %12275 = trunc i128 %12269 to i32
  %12276 = and i32 %12275, 255
  %12277 = call i32 @llvm.ctpop.i32(i32 %12276)
  %12278 = trunc i32 %12277 to i8
  %12279 = and i8 %12278, 1
  %12280 = xor i8 %12279, 1
  %12281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12280, i8* %12281, align 1
  %12282 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12282, align 1
  %12283 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12283, align 1
  %12284 = lshr i64 %12270, 63
  %12285 = trunc i64 %12284 to i8
  %12286 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12285, i8* %12286, align 1
  %12287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12273, i8* %12287, align 1
  store %struct.Memory* %loadMem_4169d0, %struct.Memory** %MEMORY
  %loadMem_4169d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12288 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12289 = getelementptr inbounds %struct.GPR, %struct.GPR* %12288, i32 0, i32 33
  %12290 = getelementptr inbounds %struct.Reg, %struct.Reg* %12289, i32 0, i32 0
  %PC.i146 = bitcast %union.anon* %12290 to i64*
  %12291 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12292 = getelementptr inbounds %struct.GPR, %struct.GPR* %12291, i32 0, i32 1
  %12293 = getelementptr inbounds %struct.Reg, %struct.Reg* %12292, i32 0, i32 0
  %RAX.i147 = bitcast %union.anon* %12293 to i64*
  %12294 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12295 = getelementptr inbounds %struct.GPR, %struct.GPR* %12294, i32 0, i32 7
  %12296 = getelementptr inbounds %struct.Reg, %struct.Reg* %12295, i32 0, i32 0
  %RDX.i148 = bitcast %union.anon* %12296 to i64*
  %12297 = load i64, i64* %RAX.i147
  %12298 = load i64, i64* %RDX.i148
  %12299 = load i64, i64* %PC.i146
  %12300 = add i64 %12299, 3
  store i64 %12300, i64* %PC.i146
  %12301 = add i64 %12298, %12297
  store i64 %12301, i64* %RAX.i147, align 8
  %12302 = icmp ult i64 %12301, %12297
  %12303 = icmp ult i64 %12301, %12298
  %12304 = or i1 %12302, %12303
  %12305 = zext i1 %12304 to i8
  %12306 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12305, i8* %12306, align 1
  %12307 = trunc i64 %12301 to i32
  %12308 = and i32 %12307, 255
  %12309 = call i32 @llvm.ctpop.i32(i32 %12308)
  %12310 = trunc i32 %12309 to i8
  %12311 = and i8 %12310, 1
  %12312 = xor i8 %12311, 1
  %12313 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12312, i8* %12313, align 1
  %12314 = xor i64 %12298, %12297
  %12315 = xor i64 %12314, %12301
  %12316 = lshr i64 %12315, 4
  %12317 = trunc i64 %12316 to i8
  %12318 = and i8 %12317, 1
  %12319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12318, i8* %12319, align 1
  %12320 = icmp eq i64 %12301, 0
  %12321 = zext i1 %12320 to i8
  %12322 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12321, i8* %12322, align 1
  %12323 = lshr i64 %12301, 63
  %12324 = trunc i64 %12323 to i8
  %12325 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12324, i8* %12325, align 1
  %12326 = lshr i64 %12297, 63
  %12327 = lshr i64 %12298, 63
  %12328 = xor i64 %12323, %12326
  %12329 = xor i64 %12323, %12327
  %12330 = add i64 %12328, %12329
  %12331 = icmp eq i64 %12330, 2
  %12332 = zext i1 %12331 to i8
  %12333 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12332, i8* %12333, align 1
  store %struct.Memory* %loadMem_4169d7, %struct.Memory** %MEMORY
  %loadMem_4169da = load %struct.Memory*, %struct.Memory** %MEMORY
  %12334 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12335 = getelementptr inbounds %struct.GPR, %struct.GPR* %12334, i32 0, i32 33
  %12336 = getelementptr inbounds %struct.Reg, %struct.Reg* %12335, i32 0, i32 0
  %PC.i143 = bitcast %union.anon* %12336 to i64*
  %12337 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12338 = getelementptr inbounds %struct.GPR, %struct.GPR* %12337, i32 0, i32 5
  %12339 = getelementptr inbounds %struct.Reg, %struct.Reg* %12338, i32 0, i32 0
  %ECX.i144 = bitcast %union.anon* %12339 to i32*
  %12340 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12341 = getelementptr inbounds %struct.GPR, %struct.GPR* %12340, i32 0, i32 1
  %12342 = getelementptr inbounds %struct.Reg, %struct.Reg* %12341, i32 0, i32 0
  %RAX.i145 = bitcast %union.anon* %12342 to i64*
  %12343 = load i32, i32* %ECX.i144
  %12344 = zext i32 %12343 to i64
  %12345 = load i64, i64* %RAX.i145
  %12346 = add i64 %12345, 96
  %12347 = load i64, i64* %PC.i143
  %12348 = add i64 %12347, 3
  store i64 %12348, i64* %PC.i143
  %12349 = inttoptr i64 %12346 to i32*
  %12350 = load i32, i32* %12349
  %12351 = sub i32 %12343, %12350
  %12352 = icmp ult i32 %12343, %12350
  %12353 = zext i1 %12352 to i8
  %12354 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12353, i8* %12354, align 1
  %12355 = and i32 %12351, 255
  %12356 = call i32 @llvm.ctpop.i32(i32 %12355)
  %12357 = trunc i32 %12356 to i8
  %12358 = and i8 %12357, 1
  %12359 = xor i8 %12358, 1
  %12360 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12359, i8* %12360, align 1
  %12361 = xor i32 %12350, %12343
  %12362 = xor i32 %12361, %12351
  %12363 = lshr i32 %12362, 4
  %12364 = trunc i32 %12363 to i8
  %12365 = and i8 %12364, 1
  %12366 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12365, i8* %12366, align 1
  %12367 = icmp eq i32 %12351, 0
  %12368 = zext i1 %12367 to i8
  %12369 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12368, i8* %12369, align 1
  %12370 = lshr i32 %12351, 31
  %12371 = trunc i32 %12370 to i8
  %12372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12371, i8* %12372, align 1
  %12373 = lshr i32 %12343, 31
  %12374 = lshr i32 %12350, 31
  %12375 = xor i32 %12374, %12373
  %12376 = xor i32 %12370, %12373
  %12377 = add i32 %12376, %12375
  %12378 = icmp eq i32 %12377, 2
  %12379 = zext i1 %12378 to i8
  %12380 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12379, i8* %12380, align 1
  store %struct.Memory* %loadMem_4169da, %struct.Memory** %MEMORY
  %loadMem_4169dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %12381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12382 = getelementptr inbounds %struct.GPR, %struct.GPR* %12381, i32 0, i32 33
  %12383 = getelementptr inbounds %struct.Reg, %struct.Reg* %12382, i32 0, i32 0
  %PC.i142 = bitcast %union.anon* %12383 to i64*
  %12384 = load i64, i64* %PC.i142
  %12385 = add i64 %12384, 125
  %12386 = load i64, i64* %PC.i142
  %12387 = add i64 %12386, 6
  %12388 = load i64, i64* %PC.i142
  %12389 = add i64 %12388, 6
  store i64 %12389, i64* %PC.i142
  %12390 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %12391 = load i8, i8* %12390, align 1
  %12392 = icmp ne i8 %12391, 0
  %12393 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %12394 = load i8, i8* %12393, align 1
  %12395 = icmp ne i8 %12394, 0
  %12396 = xor i1 %12392, %12395
  %12397 = xor i1 %12396, true
  %12398 = zext i1 %12397 to i8
  store i8 %12398, i8* %BRANCH_TAKEN, align 1
  %12399 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12400 = select i1 %12396, i64 %12387, i64 %12385
  store i64 %12400, i64* %12399, align 8
  store %struct.Memory* %loadMem_4169dd, %struct.Memory** %MEMORY
  %loadBr_4169dd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4169dd = icmp eq i8 %loadBr_4169dd, 1
  br i1 %cmpBr_4169dd, label %block_.L_416a5a, label %block_4169e3

block_4169e3:                                     ; preds = %block_.L_4169b9
  %loadMem_4169e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12401 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12402 = getelementptr inbounds %struct.GPR, %struct.GPR* %12401, i32 0, i32 33
  %12403 = getelementptr inbounds %struct.Reg, %struct.Reg* %12402, i32 0, i32 0
  %PC.i140 = bitcast %union.anon* %12403 to i64*
  %12404 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12405 = getelementptr inbounds %struct.GPR, %struct.GPR* %12404, i32 0, i32 1
  %12406 = getelementptr inbounds %struct.Reg, %struct.Reg* %12405, i32 0, i32 0
  %RAX.i141 = bitcast %union.anon* %12406 to i64*
  %12407 = load i64, i64* %PC.i140
  %12408 = add i64 %12407, 10
  store i64 %12408, i64* %PC.i140
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i141, align 8
  store %struct.Memory* %loadMem_4169e3, %struct.Memory** %MEMORY
  %loadMem_4169ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %12409 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12410 = getelementptr inbounds %struct.GPR, %struct.GPR* %12409, i32 0, i32 33
  %12411 = getelementptr inbounds %struct.Reg, %struct.Reg* %12410, i32 0, i32 0
  %PC.i137 = bitcast %union.anon* %12411 to i64*
  %12412 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12413 = getelementptr inbounds %struct.GPR, %struct.GPR* %12412, i32 0, i32 5
  %12414 = getelementptr inbounds %struct.Reg, %struct.Reg* %12413, i32 0, i32 0
  %RCX.i138 = bitcast %union.anon* %12414 to i64*
  %12415 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12416 = getelementptr inbounds %struct.GPR, %struct.GPR* %12415, i32 0, i32 15
  %12417 = getelementptr inbounds %struct.Reg, %struct.Reg* %12416, i32 0, i32 0
  %RBP.i139 = bitcast %union.anon* %12417 to i64*
  %12418 = load i64, i64* %RBP.i139
  %12419 = sub i64 %12418, 148
  %12420 = load i64, i64* %PC.i137
  %12421 = add i64 %12420, 7
  store i64 %12421, i64* %PC.i137
  %12422 = inttoptr i64 %12419 to i32*
  %12423 = load i32, i32* %12422
  %12424 = sext i32 %12423 to i64
  store i64 %12424, i64* %RCX.i138, align 8
  store %struct.Memory* %loadMem_4169ed, %struct.Memory** %MEMORY
  %loadMem_4169f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12425 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12426 = getelementptr inbounds %struct.GPR, %struct.GPR* %12425, i32 0, i32 33
  %12427 = getelementptr inbounds %struct.Reg, %struct.Reg* %12426, i32 0, i32 0
  %PC.i135 = bitcast %union.anon* %12427 to i64*
  %12428 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12429 = getelementptr inbounds %struct.GPR, %struct.GPR* %12428, i32 0, i32 5
  %12430 = getelementptr inbounds %struct.Reg, %struct.Reg* %12429, i32 0, i32 0
  %RCX.i136 = bitcast %union.anon* %12430 to i64*
  %12431 = load i64, i64* %RCX.i136
  %12432 = load i64, i64* %PC.i135
  %12433 = add i64 %12432, 7
  store i64 %12433, i64* %PC.i135
  %12434 = sext i64 %12431 to i128
  %12435 = and i128 %12434, -18446744073709551616
  %12436 = zext i64 %12431 to i128
  %12437 = or i128 %12435, %12436
  %12438 = mul i128 744, %12437
  %12439 = trunc i128 %12438 to i64
  store i64 %12439, i64* %RCX.i136, align 8
  %12440 = sext i64 %12439 to i128
  %12441 = icmp ne i128 %12440, %12438
  %12442 = zext i1 %12441 to i8
  %12443 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12442, i8* %12443, align 1
  %12444 = trunc i128 %12438 to i32
  %12445 = and i32 %12444, 255
  %12446 = call i32 @llvm.ctpop.i32(i32 %12445)
  %12447 = trunc i32 %12446 to i8
  %12448 = and i8 %12447, 1
  %12449 = xor i8 %12448, 1
  %12450 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12449, i8* %12450, align 1
  %12451 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12451, align 1
  %12452 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12452, align 1
  %12453 = lshr i64 %12439, 63
  %12454 = trunc i64 %12453 to i8
  %12455 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12454, i8* %12455, align 1
  %12456 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12442, i8* %12456, align 1
  store %struct.Memory* %loadMem_4169f4, %struct.Memory** %MEMORY
  %loadMem_4169fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %12457 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12458 = getelementptr inbounds %struct.GPR, %struct.GPR* %12457, i32 0, i32 33
  %12459 = getelementptr inbounds %struct.Reg, %struct.Reg* %12458, i32 0, i32 0
  %PC.i132 = bitcast %union.anon* %12459 to i64*
  %12460 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12461 = getelementptr inbounds %struct.GPR, %struct.GPR* %12460, i32 0, i32 1
  %12462 = getelementptr inbounds %struct.Reg, %struct.Reg* %12461, i32 0, i32 0
  %RAX.i133 = bitcast %union.anon* %12462 to i64*
  %12463 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12464 = getelementptr inbounds %struct.GPR, %struct.GPR* %12463, i32 0, i32 7
  %12465 = getelementptr inbounds %struct.Reg, %struct.Reg* %12464, i32 0, i32 0
  %RDX.i134 = bitcast %union.anon* %12465 to i64*
  %12466 = load i64, i64* %RAX.i133
  %12467 = load i64, i64* %PC.i132
  %12468 = add i64 %12467, 3
  store i64 %12468, i64* %PC.i132
  store i64 %12466, i64* %RDX.i134, align 8
  store %struct.Memory* %loadMem_4169fb, %struct.Memory** %MEMORY
  %loadMem_4169fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %12469 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12470 = getelementptr inbounds %struct.GPR, %struct.GPR* %12469, i32 0, i32 33
  %12471 = getelementptr inbounds %struct.Reg, %struct.Reg* %12470, i32 0, i32 0
  %PC.i129 = bitcast %union.anon* %12471 to i64*
  %12472 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12473 = getelementptr inbounds %struct.GPR, %struct.GPR* %12472, i32 0, i32 5
  %12474 = getelementptr inbounds %struct.Reg, %struct.Reg* %12473, i32 0, i32 0
  %RCX.i130 = bitcast %union.anon* %12474 to i64*
  %12475 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12476 = getelementptr inbounds %struct.GPR, %struct.GPR* %12475, i32 0, i32 7
  %12477 = getelementptr inbounds %struct.Reg, %struct.Reg* %12476, i32 0, i32 0
  %RDX.i131 = bitcast %union.anon* %12477 to i64*
  %12478 = load i64, i64* %RDX.i131
  %12479 = load i64, i64* %RCX.i130
  %12480 = load i64, i64* %PC.i129
  %12481 = add i64 %12480, 3
  store i64 %12481, i64* %PC.i129
  %12482 = add i64 %12479, %12478
  store i64 %12482, i64* %RDX.i131, align 8
  %12483 = icmp ult i64 %12482, %12478
  %12484 = icmp ult i64 %12482, %12479
  %12485 = or i1 %12483, %12484
  %12486 = zext i1 %12485 to i8
  %12487 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12486, i8* %12487, align 1
  %12488 = trunc i64 %12482 to i32
  %12489 = and i32 %12488, 255
  %12490 = call i32 @llvm.ctpop.i32(i32 %12489)
  %12491 = trunc i32 %12490 to i8
  %12492 = and i8 %12491, 1
  %12493 = xor i8 %12492, 1
  %12494 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12493, i8* %12494, align 1
  %12495 = xor i64 %12479, %12478
  %12496 = xor i64 %12495, %12482
  %12497 = lshr i64 %12496, 4
  %12498 = trunc i64 %12497 to i8
  %12499 = and i8 %12498, 1
  %12500 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12499, i8* %12500, align 1
  %12501 = icmp eq i64 %12482, 0
  %12502 = zext i1 %12501 to i8
  %12503 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12502, i8* %12503, align 1
  %12504 = lshr i64 %12482, 63
  %12505 = trunc i64 %12504 to i8
  %12506 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12505, i8* %12506, align 1
  %12507 = lshr i64 %12478, 63
  %12508 = lshr i64 %12479, 63
  %12509 = xor i64 %12504, %12507
  %12510 = xor i64 %12504, %12508
  %12511 = add i64 %12509, %12510
  %12512 = icmp eq i64 %12511, 2
  %12513 = zext i1 %12512 to i8
  %12514 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12513, i8* %12514, align 1
  store %struct.Memory* %loadMem_4169fe, %struct.Memory** %MEMORY
  %loadMem_416a01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12515 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12516 = getelementptr inbounds %struct.GPR, %struct.GPR* %12515, i32 0, i32 33
  %12517 = getelementptr inbounds %struct.Reg, %struct.Reg* %12516, i32 0, i32 0
  %PC.i126 = bitcast %union.anon* %12517 to i64*
  %12518 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12519 = getelementptr inbounds %struct.GPR, %struct.GPR* %12518, i32 0, i32 5
  %12520 = getelementptr inbounds %struct.Reg, %struct.Reg* %12519, i32 0, i32 0
  %RCX.i127 = bitcast %union.anon* %12520 to i64*
  %12521 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12522 = getelementptr inbounds %struct.GPR, %struct.GPR* %12521, i32 0, i32 15
  %12523 = getelementptr inbounds %struct.Reg, %struct.Reg* %12522, i32 0, i32 0
  %RBP.i128 = bitcast %union.anon* %12523 to i64*
  %12524 = load i64, i64* %RBP.i128
  %12525 = sub i64 %12524, 152
  %12526 = load i64, i64* %PC.i126
  %12527 = add i64 %12526, 7
  store i64 %12527, i64* %PC.i126
  %12528 = inttoptr i64 %12525 to i32*
  %12529 = load i32, i32* %12528
  %12530 = sext i32 %12529 to i64
  store i64 %12530, i64* %RCX.i127, align 8
  store %struct.Memory* %loadMem_416a01, %struct.Memory** %MEMORY
  %loadMem_416a08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12532 = getelementptr inbounds %struct.GPR, %struct.GPR* %12531, i32 0, i32 33
  %12533 = getelementptr inbounds %struct.Reg, %struct.Reg* %12532, i32 0, i32 0
  %PC.i123 = bitcast %union.anon* %12533 to i64*
  %12534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12535 = getelementptr inbounds %struct.GPR, %struct.GPR* %12534, i32 0, i32 5
  %12536 = getelementptr inbounds %struct.Reg, %struct.Reg* %12535, i32 0, i32 0
  %RCX.i124 = bitcast %union.anon* %12536 to i64*
  %12537 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12538 = getelementptr inbounds %struct.GPR, %struct.GPR* %12537, i32 0, i32 7
  %12539 = getelementptr inbounds %struct.Reg, %struct.Reg* %12538, i32 0, i32 0
  %RDX.i125 = bitcast %union.anon* %12539 to i64*
  %12540 = load i64, i64* %RDX.i125
  %12541 = load i64, i64* %RCX.i124
  %12542 = mul i64 %12541, 4
  %12543 = add i64 %12540, 100
  %12544 = add i64 %12543, %12542
  %12545 = load i64, i64* %PC.i123
  %12546 = add i64 %12545, 5
  store i64 %12546, i64* %PC.i123
  %12547 = inttoptr i64 %12544 to i32*
  %12548 = load i32, i32* %12547
  %12549 = sext i32 %12548 to i64
  store i64 %12549, i64* %RCX.i124, align 8
  store %struct.Memory* %loadMem_416a08, %struct.Memory** %MEMORY
  %loadMem_416a0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12550 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12551 = getelementptr inbounds %struct.GPR, %struct.GPR* %12550, i32 0, i32 33
  %12552 = getelementptr inbounds %struct.Reg, %struct.Reg* %12551, i32 0, i32 0
  %PC.i121 = bitcast %union.anon* %12552 to i64*
  %12553 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12554 = getelementptr inbounds %struct.GPR, %struct.GPR* %12553, i32 0, i32 5
  %12555 = getelementptr inbounds %struct.Reg, %struct.Reg* %12554, i32 0, i32 0
  %RCX.i122 = bitcast %union.anon* %12555 to i64*
  %12556 = load i64, i64* %RCX.i122
  %12557 = load i64, i64* %PC.i121
  %12558 = add i64 %12557, 7
  store i64 %12558, i64* %PC.i121
  %12559 = sext i64 %12556 to i128
  %12560 = and i128 %12559, -18446744073709551616
  %12561 = zext i64 %12556 to i128
  %12562 = or i128 %12560, %12561
  %12563 = mul i128 744, %12562
  %12564 = trunc i128 %12563 to i64
  store i64 %12564, i64* %RCX.i122, align 8
  %12565 = sext i64 %12564 to i128
  %12566 = icmp ne i128 %12565, %12563
  %12567 = zext i1 %12566 to i8
  %12568 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12567, i8* %12568, align 1
  %12569 = trunc i128 %12563 to i32
  %12570 = and i32 %12569, 255
  %12571 = call i32 @llvm.ctpop.i32(i32 %12570)
  %12572 = trunc i32 %12571 to i8
  %12573 = and i8 %12572, 1
  %12574 = xor i8 %12573, 1
  %12575 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12574, i8* %12575, align 1
  %12576 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12576, align 1
  %12577 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12577, align 1
  %12578 = lshr i64 %12564, 63
  %12579 = trunc i64 %12578 to i8
  %12580 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12579, i8* %12580, align 1
  %12581 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12567, i8* %12581, align 1
  store %struct.Memory* %loadMem_416a0d, %struct.Memory** %MEMORY
  %loadMem_416a14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12582 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12583 = getelementptr inbounds %struct.GPR, %struct.GPR* %12582, i32 0, i32 33
  %12584 = getelementptr inbounds %struct.Reg, %struct.Reg* %12583, i32 0, i32 0
  %PC.i118 = bitcast %union.anon* %12584 to i64*
  %12585 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12586 = getelementptr inbounds %struct.GPR, %struct.GPR* %12585, i32 0, i32 1
  %12587 = getelementptr inbounds %struct.Reg, %struct.Reg* %12586, i32 0, i32 0
  %RAX.i119 = bitcast %union.anon* %12587 to i64*
  %12588 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12589 = getelementptr inbounds %struct.GPR, %struct.GPR* %12588, i32 0, i32 5
  %12590 = getelementptr inbounds %struct.Reg, %struct.Reg* %12589, i32 0, i32 0
  %RCX.i120 = bitcast %union.anon* %12590 to i64*
  %12591 = load i64, i64* %RAX.i119
  %12592 = load i64, i64* %RCX.i120
  %12593 = load i64, i64* %PC.i118
  %12594 = add i64 %12593, 3
  store i64 %12594, i64* %PC.i118
  %12595 = add i64 %12592, %12591
  store i64 %12595, i64* %RAX.i119, align 8
  %12596 = icmp ult i64 %12595, %12591
  %12597 = icmp ult i64 %12595, %12592
  %12598 = or i1 %12596, %12597
  %12599 = zext i1 %12598 to i8
  %12600 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12599, i8* %12600, align 1
  %12601 = trunc i64 %12595 to i32
  %12602 = and i32 %12601, 255
  %12603 = call i32 @llvm.ctpop.i32(i32 %12602)
  %12604 = trunc i32 %12603 to i8
  %12605 = and i8 %12604, 1
  %12606 = xor i8 %12605, 1
  %12607 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12606, i8* %12607, align 1
  %12608 = xor i64 %12592, %12591
  %12609 = xor i64 %12608, %12595
  %12610 = lshr i64 %12609, 4
  %12611 = trunc i64 %12610 to i8
  %12612 = and i8 %12611, 1
  %12613 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12612, i8* %12613, align 1
  %12614 = icmp eq i64 %12595, 0
  %12615 = zext i1 %12614 to i8
  %12616 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12615, i8* %12616, align 1
  %12617 = lshr i64 %12595, 63
  %12618 = trunc i64 %12617 to i8
  %12619 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12618, i8* %12619, align 1
  %12620 = lshr i64 %12591, 63
  %12621 = lshr i64 %12592, 63
  %12622 = xor i64 %12617, %12620
  %12623 = xor i64 %12617, %12621
  %12624 = add i64 %12622, %12623
  %12625 = icmp eq i64 %12624, 2
  %12626 = zext i1 %12625 to i8
  %12627 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12626, i8* %12627, align 1
  store %struct.Memory* %loadMem_416a14, %struct.Memory** %MEMORY
  %loadMem_416a17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12629 = getelementptr inbounds %struct.GPR, %struct.GPR* %12628, i32 0, i32 33
  %12630 = getelementptr inbounds %struct.Reg, %struct.Reg* %12629, i32 0, i32 0
  %PC.i115 = bitcast %union.anon* %12630 to i64*
  %12631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12632 = getelementptr inbounds %struct.GPR, %struct.GPR* %12631, i32 0, i32 1
  %12633 = getelementptr inbounds %struct.Reg, %struct.Reg* %12632, i32 0, i32 0
  %RAX.i116 = bitcast %union.anon* %12633 to i64*
  %12634 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12635 = getelementptr inbounds %struct.GPR, %struct.GPR* %12634, i32 0, i32 15
  %12636 = getelementptr inbounds %struct.Reg, %struct.Reg* %12635, i32 0, i32 0
  %RBP.i117 = bitcast %union.anon* %12636 to i64*
  %12637 = load i64, i64* %RBP.i117
  %12638 = sub i64 %12637, 160
  %12639 = load i64, i64* %RAX.i116
  %12640 = load i64, i64* %PC.i115
  %12641 = add i64 %12640, 7
  store i64 %12641, i64* %PC.i115
  %12642 = inttoptr i64 %12638 to i64*
  store i64 %12639, i64* %12642
  store %struct.Memory* %loadMem_416a17, %struct.Memory** %MEMORY
  %loadMem_416a1e = load %struct.Memory*, %struct.Memory** %MEMORY
  %12643 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12644 = getelementptr inbounds %struct.GPR, %struct.GPR* %12643, i32 0, i32 33
  %12645 = getelementptr inbounds %struct.Reg, %struct.Reg* %12644, i32 0, i32 0
  %PC.i112 = bitcast %union.anon* %12645 to i64*
  %12646 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12647 = getelementptr inbounds %struct.GPR, %struct.GPR* %12646, i32 0, i32 1
  %12648 = getelementptr inbounds %struct.Reg, %struct.Reg* %12647, i32 0, i32 0
  %RAX.i113 = bitcast %union.anon* %12648 to i64*
  %12649 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12650 = getelementptr inbounds %struct.GPR, %struct.GPR* %12649, i32 0, i32 15
  %12651 = getelementptr inbounds %struct.Reg, %struct.Reg* %12650, i32 0, i32 0
  %RBP.i114 = bitcast %union.anon* %12651 to i64*
  %12652 = load i64, i64* %RBP.i114
  %12653 = sub i64 %12652, 160
  %12654 = load i64, i64* %PC.i112
  %12655 = add i64 %12654, 7
  store i64 %12655, i64* %PC.i112
  %12656 = inttoptr i64 %12653 to i64*
  %12657 = load i64, i64* %12656
  store i64 %12657, i64* %RAX.i113, align 8
  store %struct.Memory* %loadMem_416a1e, %struct.Memory** %MEMORY
  %loadMem_416a25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12658 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12659 = getelementptr inbounds %struct.GPR, %struct.GPR* %12658, i32 0, i32 33
  %12660 = getelementptr inbounds %struct.Reg, %struct.Reg* %12659, i32 0, i32 0
  %PC.i110 = bitcast %union.anon* %12660 to i64*
  %12661 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12662 = getelementptr inbounds %struct.GPR, %struct.GPR* %12661, i32 0, i32 1
  %12663 = getelementptr inbounds %struct.Reg, %struct.Reg* %12662, i32 0, i32 0
  %RAX.i111 = bitcast %union.anon* %12663 to i64*
  %12664 = load i64, i64* %RAX.i111
  %12665 = add i64 %12664, 12
  %12666 = load i64, i64* %PC.i110
  %12667 = add i64 %12666, 4
  store i64 %12667, i64* %PC.i110
  %12668 = inttoptr i64 %12665 to i32*
  %12669 = load i32, i32* %12668
  %12670 = sub i32 %12669, 1
  %12671 = icmp ult i32 %12669, 1
  %12672 = zext i1 %12671 to i8
  %12673 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12672, i8* %12673, align 1
  %12674 = and i32 %12670, 255
  %12675 = call i32 @llvm.ctpop.i32(i32 %12674)
  %12676 = trunc i32 %12675 to i8
  %12677 = and i8 %12676, 1
  %12678 = xor i8 %12677, 1
  %12679 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12678, i8* %12679, align 1
  %12680 = xor i32 %12669, 1
  %12681 = xor i32 %12680, %12670
  %12682 = lshr i32 %12681, 4
  %12683 = trunc i32 %12682 to i8
  %12684 = and i8 %12683, 1
  %12685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12684, i8* %12685, align 1
  %12686 = icmp eq i32 %12670, 0
  %12687 = zext i1 %12686 to i8
  %12688 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12687, i8* %12688, align 1
  %12689 = lshr i32 %12670, 31
  %12690 = trunc i32 %12689 to i8
  %12691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12690, i8* %12691, align 1
  %12692 = lshr i32 %12669, 31
  %12693 = xor i32 %12689, %12692
  %12694 = add i32 %12693, %12692
  %12695 = icmp eq i32 %12694, 2
  %12696 = zext i1 %12695 to i8
  %12697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12696, i8* %12697, align 1
  store %struct.Memory* %loadMem_416a25, %struct.Memory** %MEMORY
  %loadMem_416a29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12698 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12699 = getelementptr inbounds %struct.GPR, %struct.GPR* %12698, i32 0, i32 33
  %12700 = getelementptr inbounds %struct.Reg, %struct.Reg* %12699, i32 0, i32 0
  %PC.i109 = bitcast %union.anon* %12700 to i64*
  %12701 = load i64, i64* %PC.i109
  %12702 = add i64 %12701, 24
  %12703 = load i64, i64* %PC.i109
  %12704 = add i64 %12703, 6
  %12705 = load i64, i64* %PC.i109
  %12706 = add i64 %12705, 6
  store i64 %12706, i64* %PC.i109
  %12707 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %12708 = load i8, i8* %12707, align 1
  %12709 = icmp eq i8 %12708, 0
  %12710 = zext i1 %12709 to i8
  store i8 %12710, i8* %BRANCH_TAKEN, align 1
  %12711 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %12712 = select i1 %12709, i64 %12702, i64 %12704
  store i64 %12712, i64* %12711, align 8
  store %struct.Memory* %loadMem_416a29, %struct.Memory** %MEMORY
  %loadBr_416a29 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416a29 = icmp eq i8 %loadBr_416a29, 1
  br i1 %cmpBr_416a29, label %block_.L_416a41, label %block_416a2f

block_416a2f:                                     ; preds = %block_4169e3
  %loadMem_416a2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12713 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12714 = getelementptr inbounds %struct.GPR, %struct.GPR* %12713, i32 0, i32 33
  %12715 = getelementptr inbounds %struct.Reg, %struct.Reg* %12714, i32 0, i32 0
  %PC.i106 = bitcast %union.anon* %12715 to i64*
  %12716 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12717 = getelementptr inbounds %struct.GPR, %struct.GPR* %12716, i32 0, i32 1
  %12718 = getelementptr inbounds %struct.Reg, %struct.Reg* %12717, i32 0, i32 0
  %RAX.i107 = bitcast %union.anon* %12718 to i64*
  %12719 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12720 = getelementptr inbounds %struct.GPR, %struct.GPR* %12719, i32 0, i32 15
  %12721 = getelementptr inbounds %struct.Reg, %struct.Reg* %12720, i32 0, i32 0
  %RBP.i108 = bitcast %union.anon* %12721 to i64*
  %12722 = load i64, i64* %RBP.i108
  %12723 = sub i64 %12722, 160
  %12724 = load i64, i64* %PC.i106
  %12725 = add i64 %12724, 7
  store i64 %12725, i64* %PC.i106
  %12726 = inttoptr i64 %12723 to i64*
  %12727 = load i64, i64* %12726
  store i64 %12727, i64* %RAX.i107, align 8
  store %struct.Memory* %loadMem_416a2f, %struct.Memory** %MEMORY
  %loadMem_416a36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12728 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12729 = getelementptr inbounds %struct.GPR, %struct.GPR* %12728, i32 0, i32 33
  %12730 = getelementptr inbounds %struct.Reg, %struct.Reg* %12729, i32 0, i32 0
  %PC.i103 = bitcast %union.anon* %12730 to i64*
  %12731 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12732 = getelementptr inbounds %struct.GPR, %struct.GPR* %12731, i32 0, i32 1
  %12733 = getelementptr inbounds %struct.Reg, %struct.Reg* %12732, i32 0, i32 0
  %RAX.i104 = bitcast %union.anon* %12733 to i64*
  %12734 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12735 = getelementptr inbounds %struct.GPR, %struct.GPR* %12734, i32 0, i32 5
  %12736 = getelementptr inbounds %struct.Reg, %struct.Reg* %12735, i32 0, i32 0
  %RCX.i105 = bitcast %union.anon* %12736 to i64*
  %12737 = load i64, i64* %RAX.i104
  %12738 = add i64 %12737, 4
  %12739 = load i64, i64* %PC.i103
  %12740 = add i64 %12739, 3
  store i64 %12740, i64* %PC.i103
  %12741 = inttoptr i64 %12738 to i32*
  %12742 = load i32, i32* %12741
  %12743 = zext i32 %12742 to i64
  store i64 %12743, i64* %RCX.i105, align 8
  store %struct.Memory* %loadMem_416a36, %struct.Memory** %MEMORY
  %loadMem_416a39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12744 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12745 = getelementptr inbounds %struct.GPR, %struct.GPR* %12744, i32 0, i32 33
  %12746 = getelementptr inbounds %struct.Reg, %struct.Reg* %12745, i32 0, i32 0
  %PC.i100 = bitcast %union.anon* %12746 to i64*
  %12747 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12748 = getelementptr inbounds %struct.GPR, %struct.GPR* %12747, i32 0, i32 1
  %12749 = getelementptr inbounds %struct.Reg, %struct.Reg* %12748, i32 0, i32 0
  %RAX.i101 = bitcast %union.anon* %12749 to i64*
  %12750 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12751 = getelementptr inbounds %struct.GPR, %struct.GPR* %12750, i32 0, i32 15
  %12752 = getelementptr inbounds %struct.Reg, %struct.Reg* %12751, i32 0, i32 0
  %RBP.i102 = bitcast %union.anon* %12752 to i64*
  %12753 = load i64, i64* %RBP.i102
  %12754 = sub i64 %12753, 88
  %12755 = load i64, i64* %PC.i100
  %12756 = add i64 %12755, 4
  store i64 %12756, i64* %PC.i100
  %12757 = inttoptr i64 %12754 to i64*
  %12758 = load i64, i64* %12757
  store i64 %12758, i64* %RAX.i101, align 8
  store %struct.Memory* %loadMem_416a39, %struct.Memory** %MEMORY
  %loadMem_416a3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %12759 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12760 = getelementptr inbounds %struct.GPR, %struct.GPR* %12759, i32 0, i32 33
  %12761 = getelementptr inbounds %struct.Reg, %struct.Reg* %12760, i32 0, i32 0
  %PC.i97 = bitcast %union.anon* %12761 to i64*
  %12762 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12763 = getelementptr inbounds %struct.GPR, %struct.GPR* %12762, i32 0, i32 1
  %12764 = getelementptr inbounds %struct.Reg, %struct.Reg* %12763, i32 0, i32 0
  %RAX.i98 = bitcast %union.anon* %12764 to i64*
  %12765 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12766 = getelementptr inbounds %struct.GPR, %struct.GPR* %12765, i32 0, i32 5
  %12767 = getelementptr inbounds %struct.Reg, %struct.Reg* %12766, i32 0, i32 0
  %RCX.i99 = bitcast %union.anon* %12767 to i64*
  %12768 = load i64, i64* %RCX.i99
  %12769 = load i64, i64* %RAX.i98
  %12770 = load i64, i64* %PC.i97
  %12771 = add i64 %12770, 2
  store i64 %12771, i64* %PC.i97
  %12772 = trunc i64 %12768 to i32
  %12773 = inttoptr i64 %12769 to i32*
  %12774 = load i32, i32* %12773
  %12775 = add i32 %12774, %12772
  %12776 = zext i32 %12775 to i64
  store i64 %12776, i64* %RCX.i99, align 8
  %12777 = icmp ult i32 %12775, %12772
  %12778 = icmp ult i32 %12775, %12774
  %12779 = or i1 %12777, %12778
  %12780 = zext i1 %12779 to i8
  %12781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12780, i8* %12781, align 1
  %12782 = and i32 %12775, 255
  %12783 = call i32 @llvm.ctpop.i32(i32 %12782)
  %12784 = trunc i32 %12783 to i8
  %12785 = and i8 %12784, 1
  %12786 = xor i8 %12785, 1
  %12787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12786, i8* %12787, align 1
  %12788 = xor i32 %12774, %12772
  %12789 = xor i32 %12788, %12775
  %12790 = lshr i32 %12789, 4
  %12791 = trunc i32 %12790 to i8
  %12792 = and i8 %12791, 1
  %12793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12792, i8* %12793, align 1
  %12794 = icmp eq i32 %12775, 0
  %12795 = zext i1 %12794 to i8
  %12796 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12795, i8* %12796, align 1
  %12797 = lshr i32 %12775, 31
  %12798 = trunc i32 %12797 to i8
  %12799 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12798, i8* %12799, align 1
  %12800 = lshr i32 %12772, 31
  %12801 = lshr i32 %12774, 31
  %12802 = xor i32 %12797, %12800
  %12803 = xor i32 %12797, %12801
  %12804 = add i32 %12802, %12803
  %12805 = icmp eq i32 %12804, 2
  %12806 = zext i1 %12805 to i8
  %12807 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12806, i8* %12807, align 1
  store %struct.Memory* %loadMem_416a3d, %struct.Memory** %MEMORY
  %loadMem_416a3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12808 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12809 = getelementptr inbounds %struct.GPR, %struct.GPR* %12808, i32 0, i32 33
  %12810 = getelementptr inbounds %struct.Reg, %struct.Reg* %12809, i32 0, i32 0
  %PC.i94 = bitcast %union.anon* %12810 to i64*
  %12811 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12812 = getelementptr inbounds %struct.GPR, %struct.GPR* %12811, i32 0, i32 5
  %12813 = getelementptr inbounds %struct.Reg, %struct.Reg* %12812, i32 0, i32 0
  %ECX.i95 = bitcast %union.anon* %12813 to i32*
  %12814 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12815 = getelementptr inbounds %struct.GPR, %struct.GPR* %12814, i32 0, i32 1
  %12816 = getelementptr inbounds %struct.Reg, %struct.Reg* %12815, i32 0, i32 0
  %RAX.i96 = bitcast %union.anon* %12816 to i64*
  %12817 = load i64, i64* %RAX.i96
  %12818 = load i32, i32* %ECX.i95
  %12819 = zext i32 %12818 to i64
  %12820 = load i64, i64* %PC.i94
  %12821 = add i64 %12820, 2
  store i64 %12821, i64* %PC.i94
  %12822 = inttoptr i64 %12817 to i32*
  store i32 %12818, i32* %12822
  store %struct.Memory* %loadMem_416a3f, %struct.Memory** %MEMORY
  br label %block_.L_416a41

block_.L_416a41:                                  ; preds = %block_416a2f, %block_4169e3
  %loadMem_416a41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12824 = getelementptr inbounds %struct.GPR, %struct.GPR* %12823, i32 0, i32 33
  %12825 = getelementptr inbounds %struct.Reg, %struct.Reg* %12824, i32 0, i32 0
  %PC.i93 = bitcast %union.anon* %12825 to i64*
  %12826 = load i64, i64* %PC.i93
  %12827 = add i64 %12826, 5
  %12828 = load i64, i64* %PC.i93
  %12829 = add i64 %12828, 5
  store i64 %12829, i64* %PC.i93
  %12830 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12827, i64* %12830, align 8
  store %struct.Memory* %loadMem_416a41, %struct.Memory** %MEMORY
  br label %block_.L_416a46

block_.L_416a46:                                  ; preds = %block_.L_416a41
  %loadMem_416a46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12831 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12832 = getelementptr inbounds %struct.GPR, %struct.GPR* %12831, i32 0, i32 33
  %12833 = getelementptr inbounds %struct.Reg, %struct.Reg* %12832, i32 0, i32 0
  %PC.i90 = bitcast %union.anon* %12833 to i64*
  %12834 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12835 = getelementptr inbounds %struct.GPR, %struct.GPR* %12834, i32 0, i32 1
  %12836 = getelementptr inbounds %struct.Reg, %struct.Reg* %12835, i32 0, i32 0
  %RAX.i91 = bitcast %union.anon* %12836 to i64*
  %12837 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12838 = getelementptr inbounds %struct.GPR, %struct.GPR* %12837, i32 0, i32 15
  %12839 = getelementptr inbounds %struct.Reg, %struct.Reg* %12838, i32 0, i32 0
  %RBP.i92 = bitcast %union.anon* %12839 to i64*
  %12840 = load i64, i64* %RBP.i92
  %12841 = sub i64 %12840, 152
  %12842 = load i64, i64* %PC.i90
  %12843 = add i64 %12842, 6
  store i64 %12843, i64* %PC.i90
  %12844 = inttoptr i64 %12841 to i32*
  %12845 = load i32, i32* %12844
  %12846 = zext i32 %12845 to i64
  store i64 %12846, i64* %RAX.i91, align 8
  store %struct.Memory* %loadMem_416a46, %struct.Memory** %MEMORY
  %loadMem_416a4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %12847 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12848 = getelementptr inbounds %struct.GPR, %struct.GPR* %12847, i32 0, i32 33
  %12849 = getelementptr inbounds %struct.Reg, %struct.Reg* %12848, i32 0, i32 0
  %PC.i88 = bitcast %union.anon* %12849 to i64*
  %12850 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12851 = getelementptr inbounds %struct.GPR, %struct.GPR* %12850, i32 0, i32 1
  %12852 = getelementptr inbounds %struct.Reg, %struct.Reg* %12851, i32 0, i32 0
  %RAX.i89 = bitcast %union.anon* %12852 to i64*
  %12853 = load i64, i64* %RAX.i89
  %12854 = load i64, i64* %PC.i88
  %12855 = add i64 %12854, 3
  store i64 %12855, i64* %PC.i88
  %12856 = trunc i64 %12853 to i32
  %12857 = add i32 1, %12856
  %12858 = zext i32 %12857 to i64
  store i64 %12858, i64* %RAX.i89, align 8
  %12859 = icmp ult i32 %12857, %12856
  %12860 = icmp ult i32 %12857, 1
  %12861 = or i1 %12859, %12860
  %12862 = zext i1 %12861 to i8
  %12863 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12862, i8* %12863, align 1
  %12864 = and i32 %12857, 255
  %12865 = call i32 @llvm.ctpop.i32(i32 %12864)
  %12866 = trunc i32 %12865 to i8
  %12867 = and i8 %12866, 1
  %12868 = xor i8 %12867, 1
  %12869 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12868, i8* %12869, align 1
  %12870 = xor i64 1, %12853
  %12871 = trunc i64 %12870 to i32
  %12872 = xor i32 %12871, %12857
  %12873 = lshr i32 %12872, 4
  %12874 = trunc i32 %12873 to i8
  %12875 = and i8 %12874, 1
  %12876 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %12875, i8* %12876, align 1
  %12877 = icmp eq i32 %12857, 0
  %12878 = zext i1 %12877 to i8
  %12879 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %12878, i8* %12879, align 1
  %12880 = lshr i32 %12857, 31
  %12881 = trunc i32 %12880 to i8
  %12882 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12881, i8* %12882, align 1
  %12883 = lshr i32 %12856, 31
  %12884 = xor i32 %12880, %12883
  %12885 = add i32 %12884, %12880
  %12886 = icmp eq i32 %12885, 2
  %12887 = zext i1 %12886 to i8
  %12888 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12887, i8* %12888, align 1
  store %struct.Memory* %loadMem_416a4c, %struct.Memory** %MEMORY
  %loadMem_416a4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12889 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12890 = getelementptr inbounds %struct.GPR, %struct.GPR* %12889, i32 0, i32 33
  %12891 = getelementptr inbounds %struct.Reg, %struct.Reg* %12890, i32 0, i32 0
  %PC.i86 = bitcast %union.anon* %12891 to i64*
  %12892 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12893 = getelementptr inbounds %struct.GPR, %struct.GPR* %12892, i32 0, i32 1
  %12894 = getelementptr inbounds %struct.Reg, %struct.Reg* %12893, i32 0, i32 0
  %EAX.i = bitcast %union.anon* %12894 to i32*
  %12895 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12896 = getelementptr inbounds %struct.GPR, %struct.GPR* %12895, i32 0, i32 15
  %12897 = getelementptr inbounds %struct.Reg, %struct.Reg* %12896, i32 0, i32 0
  %RBP.i87 = bitcast %union.anon* %12897 to i64*
  %12898 = load i64, i64* %RBP.i87
  %12899 = sub i64 %12898, 152
  %12900 = load i32, i32* %EAX.i
  %12901 = zext i32 %12900 to i64
  %12902 = load i64, i64* %PC.i86
  %12903 = add i64 %12902, 6
  store i64 %12903, i64* %PC.i86
  %12904 = inttoptr i64 %12899 to i32*
  store i32 %12900, i32* %12904
  store %struct.Memory* %loadMem_416a4f, %struct.Memory** %MEMORY
  %loadMem_416a55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12905 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12906 = getelementptr inbounds %struct.GPR, %struct.GPR* %12905, i32 0, i32 33
  %12907 = getelementptr inbounds %struct.Reg, %struct.Reg* %12906, i32 0, i32 0
  %PC.i85 = bitcast %union.anon* %12907 to i64*
  %12908 = load i64, i64* %PC.i85
  %12909 = add i64 %12908, -156
  %12910 = load i64, i64* %PC.i85
  %12911 = add i64 %12910, 5
  store i64 %12911, i64* %PC.i85
  %12912 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12909, i64* %12912, align 8
  store %struct.Memory* %loadMem_416a55, %struct.Memory** %MEMORY
  br label %block_.L_4169b9

block_.L_416a5a:                                  ; preds = %block_.L_4169b9
  %loadMem_416a5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %12913 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12914 = getelementptr inbounds %struct.GPR, %struct.GPR* %12913, i32 0, i32 33
  %12915 = getelementptr inbounds %struct.Reg, %struct.Reg* %12914, i32 0, i32 0
  %PC.i84 = bitcast %union.anon* %12915 to i64*
  %12916 = load i64, i64* %PC.i84
  %12917 = add i64 %12916, 184
  %12918 = load i64, i64* %PC.i84
  %12919 = add i64 %12918, 5
  store i64 %12919, i64* %PC.i84
  %12920 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %12917, i64* %12920, align 8
  store %struct.Memory* %loadMem_416a5a, %struct.Memory** %MEMORY
  br label %block_.L_416b12

block_.L_416a5f:                                  ; preds = %block_.L_416959
  %loadMem_416a5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %12921 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12922 = getelementptr inbounds %struct.GPR, %struct.GPR* %12921, i32 0, i32 33
  %12923 = getelementptr inbounds %struct.Reg, %struct.Reg* %12922, i32 0, i32 0
  %PC.i82 = bitcast %union.anon* %12923 to i64*
  %12924 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12925 = getelementptr inbounds %struct.GPR, %struct.GPR* %12924, i32 0, i32 1
  %12926 = getelementptr inbounds %struct.Reg, %struct.Reg* %12925, i32 0, i32 0
  %RAX.i83 = bitcast %union.anon* %12926 to i64*
  %12927 = load i64, i64* %PC.i82
  %12928 = add i64 %12927, 10
  store i64 %12928, i64* %PC.i82
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i83, align 8
  store %struct.Memory* %loadMem_416a5f, %struct.Memory** %MEMORY
  %loadMem_416a69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12929 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12930 = getelementptr inbounds %struct.GPR, %struct.GPR* %12929, i32 0, i32 33
  %12931 = getelementptr inbounds %struct.Reg, %struct.Reg* %12930, i32 0, i32 0
  %PC.i79 = bitcast %union.anon* %12931 to i64*
  %12932 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12933 = getelementptr inbounds %struct.GPR, %struct.GPR* %12932, i32 0, i32 5
  %12934 = getelementptr inbounds %struct.Reg, %struct.Reg* %12933, i32 0, i32 0
  %RCX.i80 = bitcast %union.anon* %12934 to i64*
  %12935 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12936 = getelementptr inbounds %struct.GPR, %struct.GPR* %12935, i32 0, i32 15
  %12937 = getelementptr inbounds %struct.Reg, %struct.Reg* %12936, i32 0, i32 0
  %RBP.i81 = bitcast %union.anon* %12937 to i64*
  %12938 = load i64, i64* %RBP.i81
  %12939 = sub i64 %12938, 148
  %12940 = load i64, i64* %PC.i79
  %12941 = add i64 %12940, 7
  store i64 %12941, i64* %PC.i79
  %12942 = inttoptr i64 %12939 to i32*
  %12943 = load i32, i32* %12942
  %12944 = sext i32 %12943 to i64
  store i64 %12944, i64* %RCX.i80, align 8
  store %struct.Memory* %loadMem_416a69, %struct.Memory** %MEMORY
  %loadMem_416a70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12945 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12946 = getelementptr inbounds %struct.GPR, %struct.GPR* %12945, i32 0, i32 33
  %12947 = getelementptr inbounds %struct.Reg, %struct.Reg* %12946, i32 0, i32 0
  %PC.i77 = bitcast %union.anon* %12947 to i64*
  %12948 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12949 = getelementptr inbounds %struct.GPR, %struct.GPR* %12948, i32 0, i32 5
  %12950 = getelementptr inbounds %struct.Reg, %struct.Reg* %12949, i32 0, i32 0
  %RCX.i78 = bitcast %union.anon* %12950 to i64*
  %12951 = load i64, i64* %RCX.i78
  %12952 = load i64, i64* %PC.i77
  %12953 = add i64 %12952, 7
  store i64 %12953, i64* %PC.i77
  %12954 = sext i64 %12951 to i128
  %12955 = and i128 %12954, -18446744073709551616
  %12956 = zext i64 %12951 to i128
  %12957 = or i128 %12955, %12956
  %12958 = mul i128 744, %12957
  %12959 = trunc i128 %12958 to i64
  store i64 %12959, i64* %RCX.i78, align 8
  %12960 = sext i64 %12959 to i128
  %12961 = icmp ne i128 %12960, %12958
  %12962 = zext i1 %12961 to i8
  %12963 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12962, i8* %12963, align 1
  %12964 = trunc i128 %12958 to i32
  %12965 = and i32 %12964, 255
  %12966 = call i32 @llvm.ctpop.i32(i32 %12965)
  %12967 = trunc i32 %12966 to i8
  %12968 = and i8 %12967, 1
  %12969 = xor i8 %12968, 1
  %12970 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %12969, i8* %12970, align 1
  %12971 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %12971, align 1
  %12972 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %12972, align 1
  %12973 = lshr i64 %12959, 63
  %12974 = trunc i64 %12973 to i8
  %12975 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %12974, i8* %12975, align 1
  %12976 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %12962, i8* %12976, align 1
  store %struct.Memory* %loadMem_416a70, %struct.Memory** %MEMORY
  %loadMem_416a77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %12977 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12978 = getelementptr inbounds %struct.GPR, %struct.GPR* %12977, i32 0, i32 33
  %12979 = getelementptr inbounds %struct.Reg, %struct.Reg* %12978, i32 0, i32 0
  %PC.i74 = bitcast %union.anon* %12979 to i64*
  %12980 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12981 = getelementptr inbounds %struct.GPR, %struct.GPR* %12980, i32 0, i32 1
  %12982 = getelementptr inbounds %struct.Reg, %struct.Reg* %12981, i32 0, i32 0
  %RAX.i75 = bitcast %union.anon* %12982 to i64*
  %12983 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %12984 = getelementptr inbounds %struct.GPR, %struct.GPR* %12983, i32 0, i32 5
  %12985 = getelementptr inbounds %struct.Reg, %struct.Reg* %12984, i32 0, i32 0
  %RCX.i76 = bitcast %union.anon* %12985 to i64*
  %12986 = load i64, i64* %RAX.i75
  %12987 = load i64, i64* %RCX.i76
  %12988 = load i64, i64* %PC.i74
  %12989 = add i64 %12988, 3
  store i64 %12989, i64* %PC.i74
  %12990 = add i64 %12987, %12986
  store i64 %12990, i64* %RAX.i75, align 8
  %12991 = icmp ult i64 %12990, %12986
  %12992 = icmp ult i64 %12990, %12987
  %12993 = or i1 %12991, %12992
  %12994 = zext i1 %12993 to i8
  %12995 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %12994, i8* %12995, align 1
  %12996 = trunc i64 %12990 to i32
  %12997 = and i32 %12996, 255
  %12998 = call i32 @llvm.ctpop.i32(i32 %12997)
  %12999 = trunc i32 %12998 to i8
  %13000 = and i8 %12999, 1
  %13001 = xor i8 %13000, 1
  %13002 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13001, i8* %13002, align 1
  %13003 = xor i64 %12987, %12986
  %13004 = xor i64 %13003, %12990
  %13005 = lshr i64 %13004, 4
  %13006 = trunc i64 %13005 to i8
  %13007 = and i8 %13006, 1
  %13008 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13007, i8* %13008, align 1
  %13009 = icmp eq i64 %12990, 0
  %13010 = zext i1 %13009 to i8
  %13011 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13010, i8* %13011, align 1
  %13012 = lshr i64 %12990, 63
  %13013 = trunc i64 %13012 to i8
  %13014 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13013, i8* %13014, align 1
  %13015 = lshr i64 %12986, 63
  %13016 = lshr i64 %12987, 63
  %13017 = xor i64 %13012, %13015
  %13018 = xor i64 %13012, %13016
  %13019 = add i64 %13017, %13018
  %13020 = icmp eq i64 %13019, 2
  %13021 = zext i1 %13020 to i8
  %13022 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13021, i8* %13022, align 1
  store %struct.Memory* %loadMem_416a77, %struct.Memory** %MEMORY
  %loadMem_416a7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %13023 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13024 = getelementptr inbounds %struct.GPR, %struct.GPR* %13023, i32 0, i32 33
  %13025 = getelementptr inbounds %struct.Reg, %struct.Reg* %13024, i32 0, i32 0
  %PC.i72 = bitcast %union.anon* %13025 to i64*
  %13026 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13027 = getelementptr inbounds %struct.GPR, %struct.GPR* %13026, i32 0, i32 1
  %13028 = getelementptr inbounds %struct.Reg, %struct.Reg* %13027, i32 0, i32 0
  %RAX.i73 = bitcast %union.anon* %13028 to i64*
  %13029 = load i64, i64* %RAX.i73
  %13030 = add i64 %13029, 12
  %13031 = load i64, i64* %PC.i72
  %13032 = add i64 %13031, 4
  store i64 %13032, i64* %PC.i72
  %13033 = inttoptr i64 %13030 to i32*
  %13034 = load i32, i32* %13033
  %13035 = sub i32 %13034, 2
  %13036 = icmp ult i32 %13034, 2
  %13037 = zext i1 %13036 to i8
  %13038 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13037, i8* %13038, align 1
  %13039 = and i32 %13035, 255
  %13040 = call i32 @llvm.ctpop.i32(i32 %13039)
  %13041 = trunc i32 %13040 to i8
  %13042 = and i8 %13041, 1
  %13043 = xor i8 %13042, 1
  %13044 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13043, i8* %13044, align 1
  %13045 = xor i32 %13034, 2
  %13046 = xor i32 %13045, %13035
  %13047 = lshr i32 %13046, 4
  %13048 = trunc i32 %13047 to i8
  %13049 = and i8 %13048, 1
  %13050 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13049, i8* %13050, align 1
  %13051 = icmp eq i32 %13035, 0
  %13052 = zext i1 %13051 to i8
  %13053 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13052, i8* %13053, align 1
  %13054 = lshr i32 %13035, 31
  %13055 = trunc i32 %13054 to i8
  %13056 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13055, i8* %13056, align 1
  %13057 = lshr i32 %13034, 31
  %13058 = xor i32 %13054, %13057
  %13059 = add i32 %13058, %13057
  %13060 = icmp eq i32 %13059, 2
  %13061 = zext i1 %13060 to i8
  %13062 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13061, i8* %13062, align 1
  store %struct.Memory* %loadMem_416a7a, %struct.Memory** %MEMORY
  %loadMem_416a7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13063 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13064 = getelementptr inbounds %struct.GPR, %struct.GPR* %13063, i32 0, i32 33
  %13065 = getelementptr inbounds %struct.Reg, %struct.Reg* %13064, i32 0, i32 0
  %PC.i71 = bitcast %union.anon* %13065 to i64*
  %13066 = load i64, i64* %PC.i71
  %13067 = add i64 %13066, 143
  %13068 = load i64, i64* %PC.i71
  %13069 = add i64 %13068, 6
  %13070 = load i64, i64* %PC.i71
  %13071 = add i64 %13070, 6
  store i64 %13071, i64* %PC.i71
  %13072 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13073 = load i8, i8* %13072, align 1
  %13074 = icmp eq i8 %13073, 0
  %13075 = zext i1 %13074 to i8
  store i8 %13075, i8* %BRANCH_TAKEN, align 1
  %13076 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13077 = select i1 %13074, i64 %13067, i64 %13069
  store i64 %13077, i64* %13076, align 8
  store %struct.Memory* %loadMem_416a7e, %struct.Memory** %MEMORY
  %loadBr_416a7e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416a7e = icmp eq i8 %loadBr_416a7e, 1
  br i1 %cmpBr_416a7e, label %block_.L_416b0d, label %block_416a84

block_416a84:                                     ; preds = %block_.L_416a5f
  %loadMem_416a84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13078 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13079 = getelementptr inbounds %struct.GPR, %struct.GPR* %13078, i32 0, i32 33
  %13080 = getelementptr inbounds %struct.Reg, %struct.Reg* %13079, i32 0, i32 0
  %PC.i69 = bitcast %union.anon* %13080 to i64*
  %13081 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13082 = getelementptr inbounds %struct.GPR, %struct.GPR* %13081, i32 0, i32 1
  %13083 = getelementptr inbounds %struct.Reg, %struct.Reg* %13082, i32 0, i32 0
  %RAX.i70 = bitcast %union.anon* %13083 to i64*
  %13084 = load i64, i64* %PC.i69
  %13085 = add i64 %13084, 10
  store i64 %13085, i64* %PC.i69
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i70, align 8
  store %struct.Memory* %loadMem_416a84, %struct.Memory** %MEMORY
  %loadMem_416a8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %13086 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13087 = getelementptr inbounds %struct.GPR, %struct.GPR* %13086, i32 0, i32 33
  %13088 = getelementptr inbounds %struct.Reg, %struct.Reg* %13087, i32 0, i32 0
  %PC.i66 = bitcast %union.anon* %13088 to i64*
  %13089 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13090 = getelementptr inbounds %struct.GPR, %struct.GPR* %13089, i32 0, i32 5
  %13091 = getelementptr inbounds %struct.Reg, %struct.Reg* %13090, i32 0, i32 0
  %RCX.i67 = bitcast %union.anon* %13091 to i64*
  %13092 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13093 = getelementptr inbounds %struct.GPR, %struct.GPR* %13092, i32 0, i32 15
  %13094 = getelementptr inbounds %struct.Reg, %struct.Reg* %13093, i32 0, i32 0
  %RBP.i68 = bitcast %union.anon* %13094 to i64*
  %13095 = load i64, i64* %RBP.i68
  %13096 = sub i64 %13095, 20
  %13097 = load i64, i64* %PC.i66
  %13098 = add i64 %13097, 3
  store i64 %13098, i64* %PC.i66
  %13099 = inttoptr i64 %13096 to i32*
  %13100 = load i32, i32* %13099
  %13101 = zext i32 %13100 to i64
  store i64 %13101, i64* %RCX.i67, align 8
  store %struct.Memory* %loadMem_416a8e, %struct.Memory** %MEMORY
  %loadMem_416a91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13102 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13103 = getelementptr inbounds %struct.GPR, %struct.GPR* %13102, i32 0, i32 33
  %13104 = getelementptr inbounds %struct.Reg, %struct.Reg* %13103, i32 0, i32 0
  %PC.i64 = bitcast %union.anon* %13104 to i64*
  %13105 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13106 = getelementptr inbounds %struct.GPR, %struct.GPR* %13105, i32 0, i32 5
  %13107 = getelementptr inbounds %struct.Reg, %struct.Reg* %13106, i32 0, i32 0
  %RCX.i65 = bitcast %union.anon* %13107 to i64*
  %13108 = load i64, i64* %RCX.i65
  %13109 = load i64, i64* %PC.i64
  %13110 = add i64 %13109, 3
  store i64 %13110, i64* %PC.i64
  %13111 = trunc i64 %13108 to i32
  %13112 = add i32 1, %13111
  %13113 = zext i32 %13112 to i64
  store i64 %13113, i64* %RCX.i65, align 8
  %13114 = icmp ult i32 %13112, %13111
  %13115 = icmp ult i32 %13112, 1
  %13116 = or i1 %13114, %13115
  %13117 = zext i1 %13116 to i8
  %13118 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13117, i8* %13118, align 1
  %13119 = and i32 %13112, 255
  %13120 = call i32 @llvm.ctpop.i32(i32 %13119)
  %13121 = trunc i32 %13120 to i8
  %13122 = and i8 %13121, 1
  %13123 = xor i8 %13122, 1
  %13124 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13123, i8* %13124, align 1
  %13125 = xor i64 1, %13108
  %13126 = trunc i64 %13125 to i32
  %13127 = xor i32 %13126, %13112
  %13128 = lshr i32 %13127, 4
  %13129 = trunc i32 %13128 to i8
  %13130 = and i8 %13129, 1
  %13131 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13130, i8* %13131, align 1
  %13132 = icmp eq i32 %13112, 0
  %13133 = zext i1 %13132 to i8
  %13134 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13133, i8* %13134, align 1
  %13135 = lshr i32 %13112, 31
  %13136 = trunc i32 %13135 to i8
  %13137 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13136, i8* %13137, align 1
  %13138 = lshr i32 %13111, 31
  %13139 = xor i32 %13135, %13138
  %13140 = add i32 %13139, %13135
  %13141 = icmp eq i32 %13140, 2
  %13142 = zext i1 %13141 to i8
  %13143 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13142, i8* %13143, align 1
  store %struct.Memory* %loadMem_416a91, %struct.Memory** %MEMORY
  %loadMem_416a94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13144 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13145 = getelementptr inbounds %struct.GPR, %struct.GPR* %13144, i32 0, i32 33
  %13146 = getelementptr inbounds %struct.Reg, %struct.Reg* %13145, i32 0, i32 0
  %PC.i61 = bitcast %union.anon* %13146 to i64*
  %13147 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13148 = getelementptr inbounds %struct.GPR, %struct.GPR* %13147, i32 0, i32 5
  %13149 = getelementptr inbounds %struct.Reg, %struct.Reg* %13148, i32 0, i32 0
  %ECX.i62 = bitcast %union.anon* %13149 to i32*
  %13150 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13151 = getelementptr inbounds %struct.GPR, %struct.GPR* %13150, i32 0, i32 7
  %13152 = getelementptr inbounds %struct.Reg, %struct.Reg* %13151, i32 0, i32 0
  %RDX.i63 = bitcast %union.anon* %13152 to i64*
  %13153 = load i32, i32* %ECX.i62
  %13154 = zext i32 %13153 to i64
  %13155 = load i64, i64* %PC.i61
  %13156 = add i64 %13155, 3
  store i64 %13156, i64* %PC.i61
  %13157 = shl i64 %13154, 32
  %13158 = ashr exact i64 %13157, 32
  store i64 %13158, i64* %RDX.i63, align 8
  store %struct.Memory* %loadMem_416a94, %struct.Memory** %MEMORY
  %loadMem_416a97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13159 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13160 = getelementptr inbounds %struct.GPR, %struct.GPR* %13159, i32 0, i32 33
  %13161 = getelementptr inbounds %struct.Reg, %struct.Reg* %13160, i32 0, i32 0
  %PC.i59 = bitcast %union.anon* %13161 to i64*
  %13162 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13163 = getelementptr inbounds %struct.GPR, %struct.GPR* %13162, i32 0, i32 7
  %13164 = getelementptr inbounds %struct.Reg, %struct.Reg* %13163, i32 0, i32 0
  %RDX.i60 = bitcast %union.anon* %13164 to i64*
  %13165 = load i64, i64* %RDX.i60
  %13166 = mul i64 %13165, 4
  %13167 = add i64 %13166, 11187184
  %13168 = load i64, i64* %PC.i59
  %13169 = add i64 %13168, 8
  store i64 %13169, i64* %PC.i59
  %13170 = inttoptr i64 %13167 to i32*
  %13171 = load i32, i32* %13170
  %13172 = sext i32 %13171 to i64
  store i64 %13172, i64* %RDX.i60, align 8
  store %struct.Memory* %loadMem_416a97, %struct.Memory** %MEMORY
  %loadMem_416a9f = load %struct.Memory*, %struct.Memory** %MEMORY
  %13173 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13174 = getelementptr inbounds %struct.GPR, %struct.GPR* %13173, i32 0, i32 33
  %13175 = getelementptr inbounds %struct.Reg, %struct.Reg* %13174, i32 0, i32 0
  %PC.i57 = bitcast %union.anon* %13175 to i64*
  %13176 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13177 = getelementptr inbounds %struct.GPR, %struct.GPR* %13176, i32 0, i32 7
  %13178 = getelementptr inbounds %struct.Reg, %struct.Reg* %13177, i32 0, i32 0
  %RDX.i58 = bitcast %union.anon* %13178 to i64*
  %13179 = load i64, i64* %RDX.i58
  %13180 = load i64, i64* %PC.i57
  %13181 = add i64 %13180, 7
  store i64 %13181, i64* %PC.i57
  %13182 = sext i64 %13179 to i128
  %13183 = and i128 %13182, -18446744073709551616
  %13184 = zext i64 %13179 to i128
  %13185 = or i128 %13183, %13184
  %13186 = mul i128 744, %13185
  %13187 = trunc i128 %13186 to i64
  store i64 %13187, i64* %RDX.i58, align 8
  %13188 = sext i64 %13187 to i128
  %13189 = icmp ne i128 %13188, %13186
  %13190 = zext i1 %13189 to i8
  %13191 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13190, i8* %13191, align 1
  %13192 = trunc i128 %13186 to i32
  %13193 = and i32 %13192, 255
  %13194 = call i32 @llvm.ctpop.i32(i32 %13193)
  %13195 = trunc i32 %13194 to i8
  %13196 = and i8 %13195, 1
  %13197 = xor i8 %13196, 1
  %13198 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13197, i8* %13198, align 1
  %13199 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13199, align 1
  %13200 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13200, align 1
  %13201 = lshr i64 %13187, 63
  %13202 = trunc i64 %13201 to i8
  %13203 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13202, i8* %13203, align 1
  %13204 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13190, i8* %13204, align 1
  store %struct.Memory* %loadMem_416a9f, %struct.Memory** %MEMORY
  %loadMem_416aa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13205 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13206 = getelementptr inbounds %struct.GPR, %struct.GPR* %13205, i32 0, i32 33
  %13207 = getelementptr inbounds %struct.Reg, %struct.Reg* %13206, i32 0, i32 0
  %PC.i54 = bitcast %union.anon* %13207 to i64*
  %13208 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13209 = getelementptr inbounds %struct.GPR, %struct.GPR* %13208, i32 0, i32 1
  %13210 = getelementptr inbounds %struct.Reg, %struct.Reg* %13209, i32 0, i32 0
  %RAX.i55 = bitcast %union.anon* %13210 to i64*
  %13211 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13212 = getelementptr inbounds %struct.GPR, %struct.GPR* %13211, i32 0, i32 7
  %13213 = getelementptr inbounds %struct.Reg, %struct.Reg* %13212, i32 0, i32 0
  %RDX.i56 = bitcast %union.anon* %13213 to i64*
  %13214 = load i64, i64* %RAX.i55
  %13215 = load i64, i64* %RDX.i56
  %13216 = load i64, i64* %PC.i54
  %13217 = add i64 %13216, 3
  store i64 %13217, i64* %PC.i54
  %13218 = add i64 %13215, %13214
  store i64 %13218, i64* %RAX.i55, align 8
  %13219 = icmp ult i64 %13218, %13214
  %13220 = icmp ult i64 %13218, %13215
  %13221 = or i1 %13219, %13220
  %13222 = zext i1 %13221 to i8
  %13223 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13222, i8* %13223, align 1
  %13224 = trunc i64 %13218 to i32
  %13225 = and i32 %13224, 255
  %13226 = call i32 @llvm.ctpop.i32(i32 %13225)
  %13227 = trunc i32 %13226 to i8
  %13228 = and i8 %13227, 1
  %13229 = xor i8 %13228, 1
  %13230 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13229, i8* %13230, align 1
  %13231 = xor i64 %13215, %13214
  %13232 = xor i64 %13231, %13218
  %13233 = lshr i64 %13232, 4
  %13234 = trunc i64 %13233 to i8
  %13235 = and i8 %13234, 1
  %13236 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13235, i8* %13236, align 1
  %13237 = icmp eq i64 %13218, 0
  %13238 = zext i1 %13237 to i8
  %13239 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13238, i8* %13239, align 1
  %13240 = lshr i64 %13218, 63
  %13241 = trunc i64 %13240 to i8
  %13242 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13241, i8* %13242, align 1
  %13243 = lshr i64 %13214, 63
  %13244 = lshr i64 %13215, 63
  %13245 = xor i64 %13240, %13243
  %13246 = xor i64 %13240, %13244
  %13247 = add i64 %13245, %13246
  %13248 = icmp eq i64 %13247, 2
  %13249 = zext i1 %13248 to i8
  %13250 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13249, i8* %13250, align 1
  store %struct.Memory* %loadMem_416aa6, %struct.Memory** %MEMORY
  %loadMem_416aa9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13251 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13252 = getelementptr inbounds %struct.GPR, %struct.GPR* %13251, i32 0, i32 33
  %13253 = getelementptr inbounds %struct.Reg, %struct.Reg* %13252, i32 0, i32 0
  %PC.i51 = bitcast %union.anon* %13253 to i64*
  %13254 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13255 = getelementptr inbounds %struct.GPR, %struct.GPR* %13254, i32 0, i32 1
  %13256 = getelementptr inbounds %struct.Reg, %struct.Reg* %13255, i32 0, i32 0
  %RAX.i52 = bitcast %union.anon* %13256 to i64*
  %13257 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13258 = getelementptr inbounds %struct.GPR, %struct.GPR* %13257, i32 0, i32 5
  %13259 = getelementptr inbounds %struct.Reg, %struct.Reg* %13258, i32 0, i32 0
  %RCX.i53 = bitcast %union.anon* %13259 to i64*
  %13260 = load i64, i64* %RAX.i52
  %13261 = add i64 %13260, 740
  %13262 = load i64, i64* %PC.i51
  %13263 = add i64 %13262, 6
  store i64 %13263, i64* %PC.i51
  %13264 = inttoptr i64 %13261 to i32*
  %13265 = load i32, i32* %13264
  %13266 = zext i32 %13265 to i64
  store i64 %13266, i64* %RCX.i53, align 8
  store %struct.Memory* %loadMem_416aa9, %struct.Memory** %MEMORY
  %loadMem_416aaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %13267 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13268 = getelementptr inbounds %struct.GPR, %struct.GPR* %13267, i32 0, i32 33
  %13269 = getelementptr inbounds %struct.Reg, %struct.Reg* %13268, i32 0, i32 0
  %PC.i50 = bitcast %union.anon* %13269 to i64*
  %13270 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13271 = getelementptr inbounds %struct.GPR, %struct.GPR* %13270, i32 0, i32 5
  %13272 = getelementptr inbounds %struct.Reg, %struct.Reg* %13271, i32 0, i32 0
  %ECX.i = bitcast %union.anon* %13272 to i32*
  %13273 = load i32, i32* %ECX.i
  %13274 = zext i32 %13273 to i64
  %13275 = load i64, i64* %PC.i50
  %13276 = add i64 %13275, 7
  store i64 %13276, i64* %PC.i50
  %13277 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %13278 = sub i32 %13273, %13277
  %13279 = icmp ult i32 %13273, %13277
  %13280 = zext i1 %13279 to i8
  %13281 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13280, i8* %13281, align 1
  %13282 = and i32 %13278, 255
  %13283 = call i32 @llvm.ctpop.i32(i32 %13282)
  %13284 = trunc i32 %13283 to i8
  %13285 = and i8 %13284, 1
  %13286 = xor i8 %13285, 1
  %13287 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13286, i8* %13287, align 1
  %13288 = xor i32 %13277, %13273
  %13289 = xor i32 %13288, %13278
  %13290 = lshr i32 %13289, 4
  %13291 = trunc i32 %13290 to i8
  %13292 = and i8 %13291, 1
  %13293 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13292, i8* %13293, align 1
  %13294 = icmp eq i32 %13278, 0
  %13295 = zext i1 %13294 to i8
  %13296 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13295, i8* %13296, align 1
  %13297 = lshr i32 %13278, 31
  %13298 = trunc i32 %13297 to i8
  %13299 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13298, i8* %13299, align 1
  %13300 = lshr i32 %13273, 31
  %13301 = lshr i32 %13277, 31
  %13302 = xor i32 %13301, %13300
  %13303 = xor i32 %13297, %13300
  %13304 = add i32 %13303, %13302
  %13305 = icmp eq i32 %13304, 2
  %13306 = zext i1 %13305 to i8
  %13307 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13306, i8* %13307, align 1
  store %struct.Memory* %loadMem_416aaf, %struct.Memory** %MEMORY
  %loadMem_416ab6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13308 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13309 = getelementptr inbounds %struct.GPR, %struct.GPR* %13308, i32 0, i32 33
  %13310 = getelementptr inbounds %struct.Reg, %struct.Reg* %13309, i32 0, i32 0
  %PC.i49 = bitcast %union.anon* %13310 to i64*
  %13311 = load i64, i64* %PC.i49
  %13312 = add i64 %13311, 87
  %13313 = load i64, i64* %PC.i49
  %13314 = add i64 %13313, 6
  %13315 = load i64, i64* %PC.i49
  %13316 = add i64 %13315, 6
  store i64 %13316, i64* %PC.i49
  %13317 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13318 = load i8, i8* %13317, align 1
  store i8 %13318, i8* %BRANCH_TAKEN, align 1
  %13319 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13320 = icmp ne i8 %13318, 0
  %13321 = select i1 %13320, i64 %13312, i64 %13314
  store i64 %13321, i64* %13319, align 8
  store %struct.Memory* %loadMem_416ab6, %struct.Memory** %MEMORY
  %loadBr_416ab6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_416ab6 = icmp eq i8 %loadBr_416ab6, 1
  br i1 %cmpBr_416ab6, label %block_.L_416b0d, label %block_416abc

block_416abc:                                     ; preds = %block_416a84
  %loadMem_416abc = load %struct.Memory*, %struct.Memory** %MEMORY
  %13322 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13323 = getelementptr inbounds %struct.GPR, %struct.GPR* %13322, i32 0, i32 33
  %13324 = getelementptr inbounds %struct.Reg, %struct.Reg* %13323, i32 0, i32 0
  %PC.i47 = bitcast %union.anon* %13324 to i64*
  %13325 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13326 = getelementptr inbounds %struct.GPR, %struct.GPR* %13325, i32 0, i32 1
  %13327 = getelementptr inbounds %struct.Reg, %struct.Reg* %13326, i32 0, i32 0
  %RAX.i48 = bitcast %union.anon* %13327 to i64*
  %13328 = load i64, i64* %PC.i47
  %13329 = add i64 %13328, 10
  store i64 %13329, i64* %PC.i47
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX.i48, align 8
  store %struct.Memory* %loadMem_416abc, %struct.Memory** %MEMORY
  %loadMem_416ac6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13330 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13331 = getelementptr inbounds %struct.GPR, %struct.GPR* %13330, i32 0, i32 33
  %13332 = getelementptr inbounds %struct.Reg, %struct.Reg* %13331, i32 0, i32 0
  %PC.i44 = bitcast %union.anon* %13332 to i64*
  %13333 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13334 = getelementptr inbounds %struct.GPR, %struct.GPR* %13333, i32 0, i32 5
  %13335 = getelementptr inbounds %struct.Reg, %struct.Reg* %13334, i32 0, i32 0
  %RCX.i45 = bitcast %union.anon* %13335 to i64*
  %13336 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13337 = getelementptr inbounds %struct.GPR, %struct.GPR* %13336, i32 0, i32 15
  %13338 = getelementptr inbounds %struct.Reg, %struct.Reg* %13337, i32 0, i32 0
  %RBP.i46 = bitcast %union.anon* %13338 to i64*
  %13339 = load i64, i64* %RBP.i46
  %13340 = sub i64 %13339, 148
  %13341 = load i64, i64* %PC.i44
  %13342 = add i64 %13341, 7
  store i64 %13342, i64* %PC.i44
  %13343 = inttoptr i64 %13340 to i32*
  %13344 = load i32, i32* %13343
  %13345 = sext i32 %13344 to i64
  store i64 %13345, i64* %RCX.i45, align 8
  store %struct.Memory* %loadMem_416ac6, %struct.Memory** %MEMORY
  %loadMem_416acd = load %struct.Memory*, %struct.Memory** %MEMORY
  %13346 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13347 = getelementptr inbounds %struct.GPR, %struct.GPR* %13346, i32 0, i32 33
  %13348 = getelementptr inbounds %struct.Reg, %struct.Reg* %13347, i32 0, i32 0
  %PC.i42 = bitcast %union.anon* %13348 to i64*
  %13349 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13350 = getelementptr inbounds %struct.GPR, %struct.GPR* %13349, i32 0, i32 5
  %13351 = getelementptr inbounds %struct.Reg, %struct.Reg* %13350, i32 0, i32 0
  %RCX.i43 = bitcast %union.anon* %13351 to i64*
  %13352 = load i64, i64* %RCX.i43
  %13353 = load i64, i64* %PC.i42
  %13354 = add i64 %13353, 7
  store i64 %13354, i64* %PC.i42
  %13355 = sext i64 %13352 to i128
  %13356 = and i128 %13355, -18446744073709551616
  %13357 = zext i64 %13352 to i128
  %13358 = or i128 %13356, %13357
  %13359 = mul i128 744, %13358
  %13360 = trunc i128 %13359 to i64
  store i64 %13360, i64* %RCX.i43, align 8
  %13361 = sext i64 %13360 to i128
  %13362 = icmp ne i128 %13361, %13359
  %13363 = zext i1 %13362 to i8
  %13364 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13363, i8* %13364, align 1
  %13365 = trunc i128 %13359 to i32
  %13366 = and i32 %13365, 255
  %13367 = call i32 @llvm.ctpop.i32(i32 %13366)
  %13368 = trunc i32 %13367 to i8
  %13369 = and i8 %13368, 1
  %13370 = xor i8 %13369, 1
  %13371 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13370, i8* %13371, align 1
  %13372 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13372, align 1
  %13373 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13373, align 1
  %13374 = lshr i64 %13360, 63
  %13375 = trunc i64 %13374 to i8
  %13376 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13375, i8* %13376, align 1
  %13377 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13363, i8* %13377, align 1
  store %struct.Memory* %loadMem_416acd, %struct.Memory** %MEMORY
  %loadMem_416ad4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13378 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13379 = getelementptr inbounds %struct.GPR, %struct.GPR* %13378, i32 0, i32 33
  %13380 = getelementptr inbounds %struct.Reg, %struct.Reg* %13379, i32 0, i32 0
  %PC.i39 = bitcast %union.anon* %13380 to i64*
  %13381 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13382 = getelementptr inbounds %struct.GPR, %struct.GPR* %13381, i32 0, i32 1
  %13383 = getelementptr inbounds %struct.Reg, %struct.Reg* %13382, i32 0, i32 0
  %RAX.i40 = bitcast %union.anon* %13383 to i64*
  %13384 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13385 = getelementptr inbounds %struct.GPR, %struct.GPR* %13384, i32 0, i32 7
  %13386 = getelementptr inbounds %struct.Reg, %struct.Reg* %13385, i32 0, i32 0
  %RDX.i41 = bitcast %union.anon* %13386 to i64*
  %13387 = load i64, i64* %RAX.i40
  %13388 = load i64, i64* %PC.i39
  %13389 = add i64 %13388, 3
  store i64 %13389, i64* %PC.i39
  store i64 %13387, i64* %RDX.i41, align 8
  store %struct.Memory* %loadMem_416ad4, %struct.Memory** %MEMORY
  %loadMem_416ad7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13390 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13391 = getelementptr inbounds %struct.GPR, %struct.GPR* %13390, i32 0, i32 33
  %13392 = getelementptr inbounds %struct.Reg, %struct.Reg* %13391, i32 0, i32 0
  %PC.i36 = bitcast %union.anon* %13392 to i64*
  %13393 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13394 = getelementptr inbounds %struct.GPR, %struct.GPR* %13393, i32 0, i32 5
  %13395 = getelementptr inbounds %struct.Reg, %struct.Reg* %13394, i32 0, i32 0
  %RCX.i37 = bitcast %union.anon* %13395 to i64*
  %13396 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13397 = getelementptr inbounds %struct.GPR, %struct.GPR* %13396, i32 0, i32 7
  %13398 = getelementptr inbounds %struct.Reg, %struct.Reg* %13397, i32 0, i32 0
  %RDX.i38 = bitcast %union.anon* %13398 to i64*
  %13399 = load i64, i64* %RDX.i38
  %13400 = load i64, i64* %RCX.i37
  %13401 = load i64, i64* %PC.i36
  %13402 = add i64 %13401, 3
  store i64 %13402, i64* %PC.i36
  %13403 = add i64 %13400, %13399
  store i64 %13403, i64* %RDX.i38, align 8
  %13404 = icmp ult i64 %13403, %13399
  %13405 = icmp ult i64 %13403, %13400
  %13406 = or i1 %13404, %13405
  %13407 = zext i1 %13406 to i8
  %13408 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13407, i8* %13408, align 1
  %13409 = trunc i64 %13403 to i32
  %13410 = and i32 %13409, 255
  %13411 = call i32 @llvm.ctpop.i32(i32 %13410)
  %13412 = trunc i32 %13411 to i8
  %13413 = and i8 %13412, 1
  %13414 = xor i8 %13413, 1
  %13415 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13414, i8* %13415, align 1
  %13416 = xor i64 %13400, %13399
  %13417 = xor i64 %13416, %13403
  %13418 = lshr i64 %13417, 4
  %13419 = trunc i64 %13418 to i8
  %13420 = and i8 %13419, 1
  %13421 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13420, i8* %13421, align 1
  %13422 = icmp eq i64 %13403, 0
  %13423 = zext i1 %13422 to i8
  %13424 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13423, i8* %13424, align 1
  %13425 = lshr i64 %13403, 63
  %13426 = trunc i64 %13425 to i8
  %13427 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13426, i8* %13427, align 1
  %13428 = lshr i64 %13399, 63
  %13429 = lshr i64 %13400, 63
  %13430 = xor i64 %13425, %13428
  %13431 = xor i64 %13425, %13429
  %13432 = add i64 %13430, %13431
  %13433 = icmp eq i64 %13432, 2
  %13434 = zext i1 %13433 to i8
  %13435 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13434, i8* %13435, align 1
  store %struct.Memory* %loadMem_416ad7, %struct.Memory** %MEMORY
  %loadMem_416ada = load %struct.Memory*, %struct.Memory** %MEMORY
  %13436 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13437 = getelementptr inbounds %struct.GPR, %struct.GPR* %13436, i32 0, i32 33
  %13438 = getelementptr inbounds %struct.Reg, %struct.Reg* %13437, i32 0, i32 0
  %PC.i34 = bitcast %union.anon* %13438 to i64*
  %13439 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13440 = getelementptr inbounds %struct.GPR, %struct.GPR* %13439, i32 0, i32 7
  %13441 = getelementptr inbounds %struct.Reg, %struct.Reg* %13440, i32 0, i32 0
  %RDX.i = bitcast %union.anon* %13441 to i64*
  %13442 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13443 = getelementptr inbounds %struct.GPR, %struct.GPR* %13442, i32 0, i32 9
  %13444 = getelementptr inbounds %struct.Reg, %struct.Reg* %13443, i32 0, i32 0
  %RSI.i35 = bitcast %union.anon* %13444 to i64*
  %13445 = load i64, i64* %RDX.i
  %13446 = add i64 %13445, 4
  %13447 = load i64, i64* %PC.i34
  %13448 = add i64 %13447, 3
  store i64 %13448, i64* %PC.i34
  %13449 = inttoptr i64 %13446 to i32*
  %13450 = load i32, i32* %13449
  %13451 = zext i32 %13450 to i64
  store i64 %13451, i64* %RSI.i35, align 8
  store %struct.Memory* %loadMem_416ada, %struct.Memory** %MEMORY
  %loadMem_416add = load %struct.Memory*, %struct.Memory** %MEMORY
  %13452 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13453 = getelementptr inbounds %struct.GPR, %struct.GPR* %13452, i32 0, i32 33
  %13454 = getelementptr inbounds %struct.Reg, %struct.Reg* %13453, i32 0, i32 0
  %PC.i31 = bitcast %union.anon* %13454 to i64*
  %13455 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13456 = getelementptr inbounds %struct.GPR, %struct.GPR* %13455, i32 0, i32 5
  %13457 = getelementptr inbounds %struct.Reg, %struct.Reg* %13456, i32 0, i32 0
  %RCX.i32 = bitcast %union.anon* %13457 to i64*
  %13458 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13459 = getelementptr inbounds %struct.GPR, %struct.GPR* %13458, i32 0, i32 15
  %13460 = getelementptr inbounds %struct.Reg, %struct.Reg* %13459, i32 0, i32 0
  %RBP.i33 = bitcast %union.anon* %13460 to i64*
  %13461 = load i64, i64* %RBP.i33
  %13462 = sub i64 %13461, 80
  %13463 = load i64, i64* %PC.i31
  %13464 = add i64 %13463, 4
  store i64 %13464, i64* %PC.i31
  %13465 = inttoptr i64 %13462 to i64*
  %13466 = load i64, i64* %13465
  store i64 %13466, i64* %RCX.i32, align 8
  store %struct.Memory* %loadMem_416add, %struct.Memory** %MEMORY
  %loadMem_416ae1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13467 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13468 = getelementptr inbounds %struct.GPR, %struct.GPR* %13467, i32 0, i32 33
  %13469 = getelementptr inbounds %struct.Reg, %struct.Reg* %13468, i32 0, i32 0
  %PC.i28 = bitcast %union.anon* %13469 to i64*
  %13470 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13471 = getelementptr inbounds %struct.GPR, %struct.GPR* %13470, i32 0, i32 5
  %13472 = getelementptr inbounds %struct.Reg, %struct.Reg* %13471, i32 0, i32 0
  %RCX.i29 = bitcast %union.anon* %13472 to i64*
  %13473 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13474 = getelementptr inbounds %struct.GPR, %struct.GPR* %13473, i32 0, i32 9
  %13475 = getelementptr inbounds %struct.Reg, %struct.Reg* %13474, i32 0, i32 0
  %RSI.i30 = bitcast %union.anon* %13475 to i64*
  %13476 = load i64, i64* %RSI.i30
  %13477 = load i64, i64* %RCX.i29
  %13478 = load i64, i64* %PC.i28
  %13479 = add i64 %13478, 2
  store i64 %13479, i64* %PC.i28
  %13480 = trunc i64 %13476 to i32
  %13481 = inttoptr i64 %13477 to i32*
  %13482 = load i32, i32* %13481
  %13483 = add i32 %13482, %13480
  %13484 = zext i32 %13483 to i64
  store i64 %13484, i64* %RSI.i30, align 8
  %13485 = icmp ult i32 %13483, %13480
  %13486 = icmp ult i32 %13483, %13482
  %13487 = or i1 %13485, %13486
  %13488 = zext i1 %13487 to i8
  %13489 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13488, i8* %13489, align 1
  %13490 = and i32 %13483, 255
  %13491 = call i32 @llvm.ctpop.i32(i32 %13490)
  %13492 = trunc i32 %13491 to i8
  %13493 = and i8 %13492, 1
  %13494 = xor i8 %13493, 1
  %13495 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13494, i8* %13495, align 1
  %13496 = xor i32 %13482, %13480
  %13497 = xor i32 %13496, %13483
  %13498 = lshr i32 %13497, 4
  %13499 = trunc i32 %13498 to i8
  %13500 = and i8 %13499, 1
  %13501 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13500, i8* %13501, align 1
  %13502 = icmp eq i32 %13483, 0
  %13503 = zext i1 %13502 to i8
  %13504 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13503, i8* %13504, align 1
  %13505 = lshr i32 %13483, 31
  %13506 = trunc i32 %13505 to i8
  %13507 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13506, i8* %13507, align 1
  %13508 = lshr i32 %13480, 31
  %13509 = lshr i32 %13482, 31
  %13510 = xor i32 %13505, %13508
  %13511 = xor i32 %13505, %13509
  %13512 = add i32 %13510, %13511
  %13513 = icmp eq i32 %13512, 2
  %13514 = zext i1 %13513 to i8
  %13515 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13514, i8* %13515, align 1
  store %struct.Memory* %loadMem_416ae1, %struct.Memory** %MEMORY
  %loadMem_416ae3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13516 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13517 = getelementptr inbounds %struct.GPR, %struct.GPR* %13516, i32 0, i32 33
  %13518 = getelementptr inbounds %struct.Reg, %struct.Reg* %13517, i32 0, i32 0
  %PC.i25 = bitcast %union.anon* %13518 to i64*
  %13519 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13520 = getelementptr inbounds %struct.GPR, %struct.GPR* %13519, i32 0, i32 9
  %13521 = getelementptr inbounds %struct.Reg, %struct.Reg* %13520, i32 0, i32 0
  %ESI.i26 = bitcast %union.anon* %13521 to i32*
  %13522 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13523 = getelementptr inbounds %struct.GPR, %struct.GPR* %13522, i32 0, i32 5
  %13524 = getelementptr inbounds %struct.Reg, %struct.Reg* %13523, i32 0, i32 0
  %RCX.i27 = bitcast %union.anon* %13524 to i64*
  %13525 = load i64, i64* %RCX.i27
  %13526 = load i32, i32* %ESI.i26
  %13527 = zext i32 %13526 to i64
  %13528 = load i64, i64* %PC.i25
  %13529 = add i64 %13528, 2
  store i64 %13529, i64* %PC.i25
  %13530 = inttoptr i64 %13525 to i32*
  store i32 %13526, i32* %13530
  store %struct.Memory* %loadMem_416ae3, %struct.Memory** %MEMORY
  %loadMem_416ae5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13531 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13532 = getelementptr inbounds %struct.GPR, %struct.GPR* %13531, i32 0, i32 33
  %13533 = getelementptr inbounds %struct.Reg, %struct.Reg* %13532, i32 0, i32 0
  %PC.i24 = bitcast %union.anon* %13533 to i64*
  %13534 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13535 = getelementptr inbounds %struct.GPR, %struct.GPR* %13534, i32 0, i32 9
  %13536 = getelementptr inbounds %struct.Reg, %struct.Reg* %13535, i32 0, i32 0
  %RSI.i = bitcast %union.anon* %13536 to i64*
  %13537 = load i64, i64* %PC.i24
  %13538 = add i64 %13537, 7
  store i64 %13538, i64* %PC.i24
  %13539 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %13540 = zext i32 %13539 to i64
  store i64 %13540, i64* %RSI.i, align 8
  store %struct.Memory* %loadMem_416ae5, %struct.Memory** %MEMORY
  %loadMem_416aec = load %struct.Memory*, %struct.Memory** %MEMORY
  %13541 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13542 = getelementptr inbounds %struct.GPR, %struct.GPR* %13541, i32 0, i32 33
  %13543 = getelementptr inbounds %struct.Reg, %struct.Reg* %13542, i32 0, i32 0
  %PC.i21 = bitcast %union.anon* %13543 to i64*
  %13544 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13545 = getelementptr inbounds %struct.GPR, %struct.GPR* %13544, i32 0, i32 11
  %13546 = getelementptr inbounds %struct.Reg, %struct.Reg* %13545, i32 0, i32 0
  %RDI.i22 = bitcast %union.anon* %13546 to i64*
  %13547 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13548 = getelementptr inbounds %struct.GPR, %struct.GPR* %13547, i32 0, i32 15
  %13549 = getelementptr inbounds %struct.Reg, %struct.Reg* %13548, i32 0, i32 0
  %RBP.i23 = bitcast %union.anon* %13549 to i64*
  %13550 = load i64, i64* %RBP.i23
  %13551 = sub i64 %13550, 20
  %13552 = load i64, i64* %PC.i21
  %13553 = add i64 %13552, 3
  store i64 %13553, i64* %PC.i21
  %13554 = inttoptr i64 %13551 to i32*
  %13555 = load i32, i32* %13554
  %13556 = zext i32 %13555 to i64
  store i64 %13556, i64* %RDI.i22, align 8
  store %struct.Memory* %loadMem_416aec, %struct.Memory** %MEMORY
  %loadMem_416aef = load %struct.Memory*, %struct.Memory** %MEMORY
  %13557 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13558 = getelementptr inbounds %struct.GPR, %struct.GPR* %13557, i32 0, i32 33
  %13559 = getelementptr inbounds %struct.Reg, %struct.Reg* %13558, i32 0, i32 0
  %PC.i20 = bitcast %union.anon* %13559 to i64*
  %13560 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13561 = getelementptr inbounds %struct.GPR, %struct.GPR* %13560, i32 0, i32 11
  %13562 = getelementptr inbounds %struct.Reg, %struct.Reg* %13561, i32 0, i32 0
  %RDI.i = bitcast %union.anon* %13562 to i64*
  %13563 = load i64, i64* %RDI.i
  %13564 = load i64, i64* %PC.i20
  %13565 = add i64 %13564, 3
  store i64 %13565, i64* %PC.i20
  %13566 = trunc i64 %13563 to i32
  %13567 = add i32 1, %13566
  %13568 = zext i32 %13567 to i64
  store i64 %13568, i64* %RDI.i, align 8
  %13569 = icmp ult i32 %13567, %13566
  %13570 = icmp ult i32 %13567, 1
  %13571 = or i1 %13569, %13570
  %13572 = zext i1 %13571 to i8
  %13573 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13572, i8* %13573, align 1
  %13574 = and i32 %13567, 255
  %13575 = call i32 @llvm.ctpop.i32(i32 %13574)
  %13576 = trunc i32 %13575 to i8
  %13577 = and i8 %13576, 1
  %13578 = xor i8 %13577, 1
  %13579 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13578, i8* %13579, align 1
  %13580 = xor i64 1, %13563
  %13581 = trunc i64 %13580 to i32
  %13582 = xor i32 %13581, %13567
  %13583 = lshr i32 %13582, 4
  %13584 = trunc i32 %13583 to i8
  %13585 = and i8 %13584, 1
  %13586 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13585, i8* %13586, align 1
  %13587 = icmp eq i32 %13567, 0
  %13588 = zext i1 %13587 to i8
  %13589 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13588, i8* %13589, align 1
  %13590 = lshr i32 %13567, 31
  %13591 = trunc i32 %13590 to i8
  %13592 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13591, i8* %13592, align 1
  %13593 = lshr i32 %13566, 31
  %13594 = xor i32 %13590, %13593
  %13595 = add i32 %13594, %13590
  %13596 = icmp eq i32 %13595, 2
  %13597 = zext i1 %13596 to i8
  %13598 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13597, i8* %13598, align 1
  store %struct.Memory* %loadMem_416aef, %struct.Memory** %MEMORY
  %loadMem_416af2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13599 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13600 = getelementptr inbounds %struct.GPR, %struct.GPR* %13599, i32 0, i32 33
  %13601 = getelementptr inbounds %struct.Reg, %struct.Reg* %13600, i32 0, i32 0
  %PC.i18 = bitcast %union.anon* %13601 to i64*
  %13602 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13603 = getelementptr inbounds %struct.GPR, %struct.GPR* %13602, i32 0, i32 11
  %13604 = getelementptr inbounds %struct.Reg, %struct.Reg* %13603, i32 0, i32 0
  %EDI.i = bitcast %union.anon* %13604 to i32*
  %13605 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13606 = getelementptr inbounds %struct.GPR, %struct.GPR* %13605, i32 0, i32 5
  %13607 = getelementptr inbounds %struct.Reg, %struct.Reg* %13606, i32 0, i32 0
  %RCX.i19 = bitcast %union.anon* %13607 to i64*
  %13608 = load i32, i32* %EDI.i
  %13609 = zext i32 %13608 to i64
  %13610 = load i64, i64* %PC.i18
  %13611 = add i64 %13610, 3
  store i64 %13611, i64* %PC.i18
  %13612 = shl i64 %13609, 32
  %13613 = ashr exact i64 %13612, 32
  store i64 %13613, i64* %RCX.i19, align 8
  store %struct.Memory* %loadMem_416af2, %struct.Memory** %MEMORY
  %loadMem_416af5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13614 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13615 = getelementptr inbounds %struct.GPR, %struct.GPR* %13614, i32 0, i32 33
  %13616 = getelementptr inbounds %struct.Reg, %struct.Reg* %13615, i32 0, i32 0
  %PC.i16 = bitcast %union.anon* %13616 to i64*
  %13617 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13618 = getelementptr inbounds %struct.GPR, %struct.GPR* %13617, i32 0, i32 5
  %13619 = getelementptr inbounds %struct.Reg, %struct.Reg* %13618, i32 0, i32 0
  %RCX.i17 = bitcast %union.anon* %13619 to i64*
  %13620 = load i64, i64* %RCX.i17
  %13621 = mul i64 %13620, 4
  %13622 = add i64 %13621, 11187184
  %13623 = load i64, i64* %PC.i16
  %13624 = add i64 %13623, 8
  store i64 %13624, i64* %PC.i16
  %13625 = inttoptr i64 %13622 to i32*
  %13626 = load i32, i32* %13625
  %13627 = sext i32 %13626 to i64
  store i64 %13627, i64* %RCX.i17, align 8
  store %struct.Memory* %loadMem_416af5, %struct.Memory** %MEMORY
  %loadMem_416afd = load %struct.Memory*, %struct.Memory** %MEMORY
  %13628 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13629 = getelementptr inbounds %struct.GPR, %struct.GPR* %13628, i32 0, i32 33
  %13630 = getelementptr inbounds %struct.Reg, %struct.Reg* %13629, i32 0, i32 0
  %PC.i14 = bitcast %union.anon* %13630 to i64*
  %13631 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13632 = getelementptr inbounds %struct.GPR, %struct.GPR* %13631, i32 0, i32 5
  %13633 = getelementptr inbounds %struct.Reg, %struct.Reg* %13632, i32 0, i32 0
  %RCX.i15 = bitcast %union.anon* %13633 to i64*
  %13634 = load i64, i64* %RCX.i15
  %13635 = load i64, i64* %PC.i14
  %13636 = add i64 %13635, 7
  store i64 %13636, i64* %PC.i14
  %13637 = sext i64 %13634 to i128
  %13638 = and i128 %13637, -18446744073709551616
  %13639 = zext i64 %13634 to i128
  %13640 = or i128 %13638, %13639
  %13641 = mul i128 744, %13640
  %13642 = trunc i128 %13641 to i64
  store i64 %13642, i64* %RCX.i15, align 8
  %13643 = sext i64 %13642 to i128
  %13644 = icmp ne i128 %13643, %13641
  %13645 = zext i1 %13644 to i8
  %13646 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13645, i8* %13646, align 1
  %13647 = trunc i128 %13641 to i32
  %13648 = and i32 %13647, 255
  %13649 = call i32 @llvm.ctpop.i32(i32 %13648)
  %13650 = trunc i32 %13649 to i8
  %13651 = and i8 %13650, 1
  %13652 = xor i8 %13651, 1
  %13653 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13652, i8* %13653, align 1
  %13654 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %13654, align 1
  %13655 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %13655, align 1
  %13656 = lshr i64 %13642, 63
  %13657 = trunc i64 %13656 to i8
  %13658 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13657, i8* %13658, align 1
  %13659 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13645, i8* %13659, align 1
  store %struct.Memory* %loadMem_416afd, %struct.Memory** %MEMORY
  %loadMem_416b04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13660 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13661 = getelementptr inbounds %struct.GPR, %struct.GPR* %13660, i32 0, i32 33
  %13662 = getelementptr inbounds %struct.Reg, %struct.Reg* %13661, i32 0, i32 0
  %PC.i12 = bitcast %union.anon* %13662 to i64*
  %13663 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13664 = getelementptr inbounds %struct.GPR, %struct.GPR* %13663, i32 0, i32 1
  %13665 = getelementptr inbounds %struct.Reg, %struct.Reg* %13664, i32 0, i32 0
  %RAX.i13 = bitcast %union.anon* %13665 to i64*
  %13666 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13667 = getelementptr inbounds %struct.GPR, %struct.GPR* %13666, i32 0, i32 5
  %13668 = getelementptr inbounds %struct.Reg, %struct.Reg* %13667, i32 0, i32 0
  %RCX.i = bitcast %union.anon* %13668 to i64*
  %13669 = load i64, i64* %RAX.i13
  %13670 = load i64, i64* %RCX.i
  %13671 = load i64, i64* %PC.i12
  %13672 = add i64 %13671, 3
  store i64 %13672, i64* %PC.i12
  %13673 = add i64 %13670, %13669
  store i64 %13673, i64* %RAX.i13, align 8
  %13674 = icmp ult i64 %13673, %13669
  %13675 = icmp ult i64 %13673, %13670
  %13676 = or i1 %13674, %13675
  %13677 = zext i1 %13676 to i8
  %13678 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13677, i8* %13678, align 1
  %13679 = trunc i64 %13673 to i32
  %13680 = and i32 %13679, 255
  %13681 = call i32 @llvm.ctpop.i32(i32 %13680)
  %13682 = trunc i32 %13681 to i8
  %13683 = and i8 %13682, 1
  %13684 = xor i8 %13683, 1
  %13685 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13684, i8* %13685, align 1
  %13686 = xor i64 %13670, %13669
  %13687 = xor i64 %13686, %13673
  %13688 = lshr i64 %13687, 4
  %13689 = trunc i64 %13688 to i8
  %13690 = and i8 %13689, 1
  %13691 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13690, i8* %13691, align 1
  %13692 = icmp eq i64 %13673, 0
  %13693 = zext i1 %13692 to i8
  %13694 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13693, i8* %13694, align 1
  %13695 = lshr i64 %13673, 63
  %13696 = trunc i64 %13695 to i8
  %13697 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13696, i8* %13697, align 1
  %13698 = lshr i64 %13669, 63
  %13699 = lshr i64 %13670, 63
  %13700 = xor i64 %13695, %13698
  %13701 = xor i64 %13695, %13699
  %13702 = add i64 %13700, %13701
  %13703 = icmp eq i64 %13702, 2
  %13704 = zext i1 %13703 to i8
  %13705 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13704, i8* %13705, align 1
  store %struct.Memory* %loadMem_416b04, %struct.Memory** %MEMORY
  %loadMem_416b07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13706 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13707 = getelementptr inbounds %struct.GPR, %struct.GPR* %13706, i32 0, i32 33
  %13708 = getelementptr inbounds %struct.Reg, %struct.Reg* %13707, i32 0, i32 0
  %PC.i11 = bitcast %union.anon* %13708 to i64*
  %13709 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13710 = getelementptr inbounds %struct.GPR, %struct.GPR* %13709, i32 0, i32 9
  %13711 = getelementptr inbounds %struct.Reg, %struct.Reg* %13710, i32 0, i32 0
  %ESI.i = bitcast %union.anon* %13711 to i32*
  %13712 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13713 = getelementptr inbounds %struct.GPR, %struct.GPR* %13712, i32 0, i32 1
  %13714 = getelementptr inbounds %struct.Reg, %struct.Reg* %13713, i32 0, i32 0
  %RAX.i = bitcast %union.anon* %13714 to i64*
  %13715 = load i64, i64* %RAX.i
  %13716 = add i64 %13715, 740
  %13717 = load i32, i32* %ESI.i
  %13718 = zext i32 %13717 to i64
  %13719 = load i64, i64* %PC.i11
  %13720 = add i64 %13719, 6
  store i64 %13720, i64* %PC.i11
  %13721 = inttoptr i64 %13716 to i32*
  store i32 %13717, i32* %13721
  store %struct.Memory* %loadMem_416b07, %struct.Memory** %MEMORY
  br label %block_.L_416b0d

block_.L_416b0d:                                  ; preds = %block_416abc, %block_416a84, %block_.L_416a5f
  %loadMem_416b0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %13722 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13723 = getelementptr inbounds %struct.GPR, %struct.GPR* %13722, i32 0, i32 33
  %13724 = getelementptr inbounds %struct.Reg, %struct.Reg* %13723, i32 0, i32 0
  %PC.i10 = bitcast %union.anon* %13724 to i64*
  %13725 = load i64, i64* %PC.i10
  %13726 = add i64 %13725, 5
  %13727 = load i64, i64* %PC.i10
  %13728 = add i64 %13727, 5
  store i64 %13728, i64* %PC.i10
  %13729 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13726, i64* %13729, align 8
  store %struct.Memory* %loadMem_416b0d, %struct.Memory** %MEMORY
  br label %block_.L_416b12

block_.L_416b12:                                  ; preds = %block_.L_416b0d, %block_.L_416a5a
  %loadMem_416b12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13730 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13731 = getelementptr inbounds %struct.GPR, %struct.GPR* %13730, i32 0, i32 33
  %13732 = getelementptr inbounds %struct.Reg, %struct.Reg* %13731, i32 0, i32 0
  %PC.i9 = bitcast %union.anon* %13732 to i64*
  %13733 = load i64, i64* %PC.i9
  %13734 = add i64 %13733, 5
  %13735 = load i64, i64* %PC.i9
  %13736 = add i64 %13735, 5
  store i64 %13736, i64* %PC.i9
  %13737 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13734, i64* %13737, align 8
  store %struct.Memory* %loadMem_416b12, %struct.Memory** %MEMORY
  br label %block_.L_416b17

block_.L_416b17:                                  ; preds = %block_.L_416b12, %block_.L_416954
  %loadMem_416b17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13738 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13739 = getelementptr inbounds %struct.GPR, %struct.GPR* %13738, i32 0, i32 33
  %13740 = getelementptr inbounds %struct.Reg, %struct.Reg* %13739, i32 0, i32 0
  %PC.i8 = bitcast %union.anon* %13740 to i64*
  %13741 = load i64, i64* %PC.i8
  %13742 = add i64 %13741, 5
  %13743 = load i64, i64* %PC.i8
  %13744 = add i64 %13743, 5
  store i64 %13744, i64* %PC.i8
  %13745 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13742, i64* %13745, align 8
  store %struct.Memory* %loadMem_416b17, %struct.Memory** %MEMORY
  br label %block_.L_416b1c

block_.L_416b1c:                                  ; preds = %block_.L_416b17, %block_41689c
  %loadMem_416b1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %13746 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13747 = getelementptr inbounds %struct.GPR, %struct.GPR* %13746, i32 0, i32 33
  %13748 = getelementptr inbounds %struct.Reg, %struct.Reg* %13747, i32 0, i32 0
  %PC.i7 = bitcast %union.anon* %13748 to i64*
  %13749 = load i64, i64* %PC.i7
  %13750 = add i64 %13749, 5
  %13751 = load i64, i64* %PC.i7
  %13752 = add i64 %13751, 5
  store i64 %13752, i64* %PC.i7
  %13753 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %13750, i64* %13753, align 8
  store %struct.Memory* %loadMem_416b1c, %struct.Memory** %MEMORY
  br label %block_.L_416b21

block_.L_416b21:                                  ; preds = %block_.L_416b1c, %block_416872
  %loadMem_416b21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13754 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13755 = getelementptr inbounds %struct.GPR, %struct.GPR* %13754, i32 0, i32 33
  %13756 = getelementptr inbounds %struct.Reg, %struct.Reg* %13755, i32 0, i32 0
  %PC.i6 = bitcast %union.anon* %13756 to i64*
  %13757 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13758 = getelementptr inbounds %struct.GPR, %struct.GPR* %13757, i32 0, i32 13
  %13759 = getelementptr inbounds %struct.Reg, %struct.Reg* %13758, i32 0, i32 0
  %RSP.i = bitcast %union.anon* %13759 to i64*
  %13760 = load i64, i64* %RSP.i
  %13761 = load i64, i64* %PC.i6
  %13762 = add i64 %13761, 4
  store i64 %13762, i64* %PC.i6
  %13763 = add i64 16, %13760
  store i64 %13763, i64* %RSP.i, align 8
  %13764 = icmp ult i64 %13763, %13760
  %13765 = icmp ult i64 %13763, 16
  %13766 = or i1 %13764, %13765
  %13767 = zext i1 %13766 to i8
  %13768 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %13767, i8* %13768, align 1
  %13769 = trunc i64 %13763 to i32
  %13770 = and i32 %13769, 255
  %13771 = call i32 @llvm.ctpop.i32(i32 %13770)
  %13772 = trunc i32 %13771 to i8
  %13773 = and i8 %13772, 1
  %13774 = xor i8 %13773, 1
  %13775 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %13774, i8* %13775, align 1
  %13776 = xor i64 16, %13760
  %13777 = xor i64 %13776, %13763
  %13778 = lshr i64 %13777, 4
  %13779 = trunc i64 %13778 to i8
  %13780 = and i8 %13779, 1
  %13781 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %13780, i8* %13781, align 1
  %13782 = icmp eq i64 %13763, 0
  %13783 = zext i1 %13782 to i8
  %13784 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %13783, i8* %13784, align 1
  %13785 = lshr i64 %13763, 63
  %13786 = trunc i64 %13785 to i8
  %13787 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %13786, i8* %13787, align 1
  %13788 = lshr i64 %13760, 63
  %13789 = xor i64 %13785, %13788
  %13790 = add i64 %13789, %13785
  %13791 = icmp eq i64 %13790, 2
  %13792 = zext i1 %13791 to i8
  %13793 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %13792, i8* %13793, align 1
  store %struct.Memory* %loadMem_416b21, %struct.Memory** %MEMORY
  %loadMem_416b25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13794 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13795 = getelementptr inbounds %struct.GPR, %struct.GPR* %13794, i32 0, i32 33
  %13796 = getelementptr inbounds %struct.Reg, %struct.Reg* %13795, i32 0, i32 0
  %PC.i5 = bitcast %union.anon* %13796 to i64*
  %13797 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13798 = getelementptr inbounds %struct.GPR, %struct.GPR* %13797, i32 0, i32 3
  %13799 = getelementptr inbounds %struct.Reg, %struct.Reg* %13798, i32 0, i32 0
  %RBX.i = bitcast %union.anon* %13799 to i64*
  %13800 = load i64, i64* %PC.i5
  %13801 = add i64 %13800, 1
  store i64 %13801, i64* %PC.i5
  %13802 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13803 = load i64, i64* %13802, align 8
  %13804 = add i64 %13803, 8
  %13805 = inttoptr i64 %13803 to i64*
  %13806 = load i64, i64* %13805
  store i64 %13806, i64* %RBX.i, align 8
  store i64 %13804, i64* %13802, align 8
  store %struct.Memory* %loadMem_416b25, %struct.Memory** %MEMORY
  %loadMem_416b26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13807 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13808 = getelementptr inbounds %struct.GPR, %struct.GPR* %13807, i32 0, i32 33
  %13809 = getelementptr inbounds %struct.Reg, %struct.Reg* %13808, i32 0, i32 0
  %PC.i4 = bitcast %union.anon* %13809 to i64*
  %13810 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13811 = getelementptr inbounds %struct.GPR, %struct.GPR* %13810, i32 0, i32 29
  %13812 = getelementptr inbounds %struct.Reg, %struct.Reg* %13811, i32 0, i32 0
  %R14.i = bitcast %union.anon* %13812 to i64*
  %13813 = load i64, i64* %PC.i4
  %13814 = add i64 %13813, 2
  store i64 %13814, i64* %PC.i4
  %13815 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13816 = load i64, i64* %13815, align 8
  %13817 = add i64 %13816, 8
  %13818 = inttoptr i64 %13816 to i64*
  %13819 = load i64, i64* %13818
  store i64 %13819, i64* %R14.i, align 8
  store i64 %13817, i64* %13815, align 8
  store %struct.Memory* %loadMem_416b26, %struct.Memory** %MEMORY
  %loadMem_416b28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13820 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13821 = getelementptr inbounds %struct.GPR, %struct.GPR* %13820, i32 0, i32 33
  %13822 = getelementptr inbounds %struct.Reg, %struct.Reg* %13821, i32 0, i32 0
  %PC.i2 = bitcast %union.anon* %13822 to i64*
  %13823 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13824 = getelementptr inbounds %struct.GPR, %struct.GPR* %13823, i32 0, i32 15
  %13825 = getelementptr inbounds %struct.Reg, %struct.Reg* %13824, i32 0, i32 0
  %RBP.i3 = bitcast %union.anon* %13825 to i64*
  %13826 = load i64, i64* %PC.i2
  %13827 = add i64 %13826, 1
  store i64 %13827, i64* %PC.i2
  %13828 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13829 = load i64, i64* %13828, align 8
  %13830 = add i64 %13829, 8
  %13831 = inttoptr i64 %13829 to i64*
  %13832 = load i64, i64* %13831
  store i64 %13832, i64* %RBP.i3, align 8
  store i64 %13830, i64* %13828, align 8
  store %struct.Memory* %loadMem_416b28, %struct.Memory** %MEMORY
  %loadMem_416b29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %13833 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13834 = getelementptr inbounds %struct.GPR, %struct.GPR* %13833, i32 0, i32 33
  %13835 = getelementptr inbounds %struct.Reg, %struct.Reg* %13834, i32 0, i32 0
  %PC.i1 = bitcast %union.anon* %13835 to i64*
  %13836 = load i64, i64* %PC.i1
  %13837 = add i64 %13836, 1
  store i64 %13837, i64* %PC.i1
  %13838 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %13839 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13840 = load i64, i64* %13839, align 8
  %13841 = inttoptr i64 %13840 to i64*
  %13842 = load i64, i64* %13841
  store i64 %13842, i64* %13838, align 8
  %13843 = add i64 %13840, 8
  store i64 %13843, i64* %13839, align 8
  store %struct.Memory* %loadMem_416b29, %struct.Memory** %MEMORY
  ret %struct.Memory* %loadMem_416b29
}

define %struct.Memory* @routine_pushq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RBP, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R14
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_pushq__rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -8
  %15 = inttoptr i64 %14 to i64*
  store i64 %9, i64* %15
  store i64 %14, i64* %12, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subq__0x10___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = sub i64 %9, 16
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %9, 16
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = trunc i64 %12 to i32
  %17 = and i32 %16, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 16, %9
  %24 = xor i64 %23, %12
  %25 = lshr i64 %24, 4
  %26 = trunc i64 %25 to i8
  %27 = and i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp eq i64 %12, 0
  %30 = zext i1 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %30, i8* %31, align 1
  %32 = lshr i64 %12, 63
  %33 = trunc i64 %32 to i8
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %33, i8* %34, align 1
  %35 = lshr i64 %9, 63
  %36 = xor i64 %32, %35
  %37 = add i64 %36, %35
  %38 = icmp eq i64 %37, 2
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %39, i8* %40, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x30__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x28__rbp____r10(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x20__rbp____r11(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x18__rbp____rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RBX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_0x10__rbp____r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 29
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R14 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %R14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edi__MINUS0x14__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__MINUS0x18__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 24
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__MINUS0x1c__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rcx__MINUS0x28__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r8__MINUS0x30__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %R8
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r9__MINUS0x38__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %R9
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r14__MINUS0x40__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 29
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R14 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %R14
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rbx__MINUS0x48__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %RBX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r11__MINUS0x50__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %R11
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__r10__MINUS0x58__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %R10
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x60__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x99da08___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx__0x99da08(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  store i32 %9, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3___edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EDX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 3
  %14 = icmp ult i32 %9, 3
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 3, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_416093(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__ecx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4162fc(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__eax___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i8*
  %17 = load i8, i8* %16
  %18 = zext i8 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = call i32 @llvm.ctpop.i32(i32 %14)
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %20, align 1
  %21 = icmp eq i32 %9, 0
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %22, i8* %23, align 1
  %24 = lshr i32 %9, 31
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %9, 31
  %28 = xor i32 %24, %27
  %29 = add i32 %28, %27
  %30 = icmp eq i32 %29, 2
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %31, i8* %32, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4160bd(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x60__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4162f7(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0xaab3f0___rcx_4____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = mul i64 %12, 4
  %14 = add i64 %13, 11187184
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %14 to i32*
  %18 = load i32, i32* %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x64__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x64__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 100
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4160ef(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x30__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x18__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 24
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41615e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__0xa7f430___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  store i64 ptrtoint (%G__0xa7f430_type* @G__0xa7f430 to i64), i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x38__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 56
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl___rcx____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = inttoptr i64 %12 to i32*
  %16 = load i32, i32* %15
  %17 = zext i32 %16 to i64
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x64__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x2e8___rcx___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 744, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RCX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x1__0xc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 1
  %16 = icmp ult i32 %14, 1
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 1
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_416159(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x58__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rax____edx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = trunc i64 %12 to i32
  %17 = inttoptr i64 %13 to i32*
  %18 = load i32, i32* %17
  %19 = add i32 %18, %16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RDX, align 8
  %21 = icmp ult i32 %19, %16
  %22 = icmp ult i32 %19, %18
  %23 = or i1 %21, %22
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i32 %18, %16
  %33 = xor i32 %32, %19
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %19, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %19, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %16, 31
  %45 = lshr i32 %18, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__edx____rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4162f2(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x40__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_416240(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x48__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 104
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x68__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x64__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 100
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_imulq__0x2e8___rdx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = sext i64 %9 to i128
  %13 = and i128 %12, -18446744073709551616
  %14 = zext i64 %9 to i128
  %15 = or i128 %13, %14
  %16 = mul i128 744, %15
  %17 = trunc i128 %16 to i64
  store i64 %17, i64* %RDX, align 8
  %18 = sext i64 %17 to i128
  %19 = icmp ne i128 %18, %16
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i128 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 0, i8* %30, align 1
  %31 = lshr i64 %17, 63
  %32 = trunc i64 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %20, i8* %34, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rdx___rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RAX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x60__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RAX
  %15 = add i64 %14, 96
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_41623b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  store i64 %12, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__rcx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = add i64 %13, %12
  store i64 %16, i64* %RDX, align 8
  %17 = icmp ult i64 %16, %12
  %18 = icmp ult i64 %16, %13
  %19 = or i1 %17, %18
  %20 = zext i1 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %20, i8* %21, align 1
  %22 = trunc i64 %16 to i32
  %23 = and i32 %22, 255
  %24 = call i32 @llvm.ctpop.i32(i32 %23)
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = xor i8 %26, 1
  %28 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %27, i8* %28, align 1
  %29 = xor i64 %13, %12
  %30 = xor i64 %29, %16
  %31 = lshr i64 %30, 4
  %32 = trunc i64 %31 to i8
  %33 = and i8 %32, 1
  %34 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i64 %16, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %36, i8* %37, align 1
  %38 = lshr i64 %16, 63
  %39 = trunc i64 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %39, i8* %40, align 1
  %41 = lshr i64 %12, 63
  %42 = lshr i64 %13, 63
  %43 = xor i64 %38, %41
  %44 = xor i64 %38, %42
  %45 = add i64 %43, %44
  %46 = icmp eq i64 %45, 2
  %47 = zext i1 %46 to i8
  %48 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %47, i8* %48, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x68__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0x64__rdx__rcx_4____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, 100
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 5
  store i64 %18, i64* %PC
  %19 = inttoptr i64 %16 to i32*
  %20 = load i32, i32* %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x70__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x70__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 112
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_416228(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = trunc i64 %12 to i32
  %17 = inttoptr i64 %13 to i32*
  %18 = load i32, i32* %17
  %19 = add i32 %18, %16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RCX, align 8
  %21 = icmp ult i32 %19, %16
  %22 = icmp ult i32 %19, %18
  %23 = or i1 %21, %22
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i32 %18, %16
  %33 = xor i32 %32, %19
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %19, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %19, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %16, 31
  %45 = lshr i32 %18, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41622d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x68__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x68__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 104
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4161b5(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4162ed(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x2__0xc__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 12
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  %14 = load i32, i32* %13
  %15 = sub i32 %14, 2
  %16 = icmp ult i32 %14, 2
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %15, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i32 %14, 2
  %26 = xor i32 %25, %15
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %15, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %15, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %14, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4162e8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xaab3f0___rdx_4____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 11187184
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x2e4__rax____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 740
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_0x99da08___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %14 = sub i32 %9, %13
  %15 = icmp ult i32 %9, %13
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %14, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i32 %13, %9
  %25 = xor i32 %24, %14
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %14, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %14, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = lshr i32 %13, 31
  %38 = xor i32 %37, %36
  %39 = xor i32 %33, %36
  %40 = add i32 %39, %38
  %41 = icmp eq i32 %40, 2
  %42 = zext i1 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %42, i8* %43, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_4162e8(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x4__rdx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x50__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl___rcx____esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = trunc i64 %12 to i32
  %17 = inttoptr i64 %13 to i32*
  %18 = load i32, i32* %17
  %19 = add i32 %18, %16
  %20 = zext i32 %19 to i64
  store i64 %20, i64* %RSI, align 8
  %21 = icmp ult i32 %19, %16
  %22 = icmp ult i32 %19, %18
  %23 = or i1 %21, %22
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %24, i8* %25, align 1
  %26 = and i32 %19, 255
  %27 = call i32 @llvm.ctpop.i32(i32 %26)
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = xor i8 %29, 1
  %31 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %30, i8* %31, align 1
  %32 = xor i32 %18, %16
  %33 = xor i32 %32, %19
  %34 = lshr i32 %33, 4
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %36, i8* %37, align 1
  %38 = icmp eq i32 %19, 0
  %39 = zext i1 %38 to i8
  %40 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %39, i8* %40, align 1
  %41 = lshr i32 %19, 31
  %42 = trunc i32 %41 to i8
  %43 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %42, i8* %43, align 1
  %44 = lshr i32 %16, 31
  %45 = lshr i32 %18, 31
  %46 = xor i32 %41, %44
  %47 = xor i32 %41, %45
  %48 = add i32 %46, %47
  %49 = icmp eq i32 %48, 2
  %50 = zext i1 %49 to i8
  %51 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %50, i8* %51, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi____rcx_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %12 to i32*
  store i32 %13, i32* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_0x99da08___esi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = load i32, i32* bitcast (%G_0x99da08_type* @G_0x99da08 to i32*)
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %RSI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x14__rbp____edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 20
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RDI, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x14___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 20, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 20
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 20, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq__edi___rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EDI
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = shl i64 %13, 32
  %17 = ashr exact i64 %16, 32
  store i64 %17, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_0xaab3f0___rcx_4____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = mul i64 %9, 4
  %11 = add i64 %10, 11187184
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 8
  store i64 %13, i64* %PC
  %14 = inttoptr i64 %11 to i32*
  %15 = load i32, i32* %14
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__esi__0x2e4__rax_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 740
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = sub i32 %9, 3
  %14 = icmp ult i32 %9, 3
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %15, i8* %16, align 1
  %17 = and i32 %13, 255
  %18 = call i32 @llvm.ctpop.i32(i32 %17)
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  %21 = xor i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %21, i8* %22, align 1
  %23 = xor i64 3, %10
  %24 = trunc i64 %23 to i32
  %25 = xor i32 %24, %13
  %26 = lshr i32 %25, 4
  %27 = trunc i32 %26 to i8
  %28 = and i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %28, i8* %29, align 1
  %30 = icmp eq i32 %13, 0
  %31 = zext i1 %30 to i8
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %31, i8* %32, align 1
  %33 = lshr i32 %13, 31
  %34 = trunc i32 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %9, 31
  %37 = xor i32 %33, %36
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_416326(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41658f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_416350(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41658a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x74__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x74__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 116
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_416382(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4163f1(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x74__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4163ec(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_416585(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4164d3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 120
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x78__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x74__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 116
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_4164ce(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x78__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x80__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x80__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 128
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4164bb(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4164c0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x78__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x78__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 120
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_416448(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_416580(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41657b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_41657b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 1
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %12, 1
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 1, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 20
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RAX, align 8
  %15 = icmp ult i32 %12, 20
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 20, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4165b9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_416858(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4165e3(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_416853(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x84__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x84__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 132
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41661b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_416690(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x84__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_41668b(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41684e(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_416796(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 136
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x88__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x84__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 132
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_416791(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x88__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0x90__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0x90__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 144
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_416778(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_41677d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x88__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x88__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 136
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4166f0(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_416849(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_416844(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 20
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RCX, align 8
  %15 = icmp ult i32 %12, 20
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 20, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_416844(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_subl__0x14___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = sub i32 %12, 20
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %12, 20
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = and i32 %13, 255
  %19 = call i32 @llvm.ctpop.i32(i32 %18)
  %20 = trunc i32 %19 to i8
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %22, i8* %23, align 1
  %24 = xor i64 20, %9
  %25 = trunc i64 %24 to i32
  %26 = xor i32 %25, %13
  %27 = lshr i32 %26, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i32 %13, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %13, 31
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i32 %12, 31
  %38 = xor i32 %34, %37
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_416882(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_416b21(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4168ac(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_416b1c(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x94__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_cmpl_MINUS0x94__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 148
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %15 to i32*
  %19 = load i32, i32* %18
  %20 = sub i32 %12, %19
  %21 = icmp ult i32 %12, %19
  %22 = zext i1 %21 to i8
  %23 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %22, i8* %23, align 1
  %24 = and i32 %20, 255
  %25 = call i32 @llvm.ctpop.i32(i32 %24)
  %26 = trunc i32 %25 to i8
  %27 = and i8 %26, 1
  %28 = xor i8 %27, 1
  %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %28, i8* %29, align 1
  %30 = xor i32 %19, %12
  %31 = xor i32 %30, %20
  %32 = lshr i32 %31, 4
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %34, i8* %35, align 1
  %36 = icmp eq i32 %20, 0
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %20, 31
  %40 = trunc i32 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %40, i8* %41, align 1
  %42 = lshr i32 %12, 31
  %43 = lshr i32 %19, 31
  %44 = xor i32 %43, %42
  %45 = xor i32 %39, %42
  %46 = add i32 %45, %44
  %47 = icmp eq i32 %46, 2
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %48, i8* %49, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_4168e4(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_416959(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x94__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_416954(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_416b17(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_416a5f(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__0x0__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 152
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = inttoptr i64 %10 to i32*
  store i32 0, i32* %13
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x98__rbp____ecx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x94__rbp____rdx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 148
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RDX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jge_.L_416a5a(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  %16 = load i8, i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  %18 = xor i1 %14, %17
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %BRANCH_TAKEN, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %22 = select i1 %18, i64 %9, i64 %7
  store i64 %22, i64* %21, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movslq_MINUS0x98__rbp____rcx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = sext i32 %17 to i64
  store i64 %18, i64* %RCX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq__rax__MINUS0xa0__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = inttoptr i64 %13 to i64*
  store i64 %14, i64* %17
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movq_MINUS0xa0__rbp____rax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 160
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i64*
  %17 = load i64, i64* %16
  store i64 %17, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_416a41(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_416a46(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl_MINUS0x98__rbp____eax(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = inttoptr i64 %13 to i32*
  %17 = load i32, i32* %16
  %18 = zext i32 %17 to i64
  store i64 %18, i64* %RAX, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_movl__eax__MINUS0x98__rbp_(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 152
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = inttoptr i64 %13 to i32*
  store i32 %14, i32* %18
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_4169b9(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jmpq_.L_416b12(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %7, i64* %10, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_jne_.L_416b0d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %BRANCH_TAKEN, align 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %17 = select i1 %14, i64 %7, i64 %9
  store i64 %17, i64* %16, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_je_.L_416b0d(%struct.State* dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %BRANCH_TAKEN, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = icmp ne i8 %13, 0
  %16 = select i1 %15, i64 %7, i64 %9
  store i64 %16, i64* %14, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addl__0x1___edi(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = trunc i64 %9 to i32
  %13 = add i32 1, %12
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %RDI, align 8
  %15 = icmp ult i32 %13, %12
  %16 = icmp ult i32 %13, 1
  %17 = or i1 %15, %16
  %18 = zext i1 %17 to i8
  %19 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %18, i8* %19, align 1
  %20 = and i32 %13, 255
  %21 = call i32 @llvm.ctpop.i32(i32 %20)
  %22 = trunc i32 %21 to i8
  %23 = and i8 %22, 1
  %24 = xor i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %24, i8* %25, align 1
  %26 = xor i64 1, %9
  %27 = trunc i64 %26 to i32
  %28 = xor i32 %27, %13
  %29 = lshr i32 %28, 4
  %30 = trunc i32 %29 to i8
  %31 = and i8 %30, 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %31, i8* %32, align 1
  %33 = icmp eq i32 %13, 0
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %34, i8* %35, align 1
  %36 = lshr i32 %13, 31
  %37 = trunc i32 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %37, i8* %38, align 1
  %39 = lshr i32 %12, 31
  %40 = xor i32 %36, %39
  %41 = add i32 %40, %36
  %42 = icmp eq i32 %41, 2
  %43 = zext i1 %42 to i8
  %44 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %43, i8* %44, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_addq__0x10___rsp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = add i64 16, %9
  store i64 %12, i64* %RSP, align 8
  %13 = icmp ult i64 %12, %9
  %14 = icmp ult i64 %12, 16
  %15 = or i1 %13, %14
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1
  store i8 %16, i8* %17, align 1
  %18 = trunc i64 %12 to i32
  %19 = and i32 %18, 255
  %20 = call i32 @llvm.ctpop.i32(i32 %19)
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = xor i64 16, %9
  %26 = xor i64 %25, %12
  %27 = lshr i64 %26, 4
  %28 = trunc i64 %27 to i8
  %29 = and i8 %28, 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5
  store i8 %29, i8* %30, align 1
  %31 = icmp eq i64 %12, 0
  %32 = zext i1 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7
  store i8 %32, i8* %33, align 1
  %34 = lshr i64 %12, 63
  %35 = trunc i64 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9
  store i8 %35, i8* %36, align 1
  %37 = lshr i64 %9, 63
  %38 = xor i64 %34, %37
  %39 = add i64 %38, %34
  %40 = icmp eq i64 %39, 2
  %41 = zext i1 %40 to i8
  %42 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13
  store i8 %41, i8* %42, align 1
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbx(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBX, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__r14(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %R14, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_popq__rbp(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 8
  %14 = inttoptr i64 %12 to i64*
  %15 = load i64, i64* %14
  store i64 %15, i64* %RBP, align 8
  store i64 %13, i64* %11, align 8
  ret %struct.Memory* %2
}

define %struct.Memory* @routine_retq(%struct.State* dereferenceable(3376), i64, %struct.Memory*) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11
  store i64 %12, i64* %8, align 8
  %13 = add i64 %10, 8
  store i64 %13, i64* %9, align 8
  ret %struct.Memory* %2
}

attributes #0 = { argmemonly nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
