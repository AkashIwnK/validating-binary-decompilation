; ModuleID = 'test.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu-elf"
%union.anon = type { i64 }
%seg_400388__init_type = type <{ [23 x i8] }>
%seg_4003a0__text_type = type <{ [354 x i8] }>
%seg_400504__fini_type = type <{ [9 x i8] }>
%seg_400510__rodata_type = type <{ [4 x i8] }>
%seg_400514__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400548__eh_frame_type = type <{ [208 x i8] }>
%seg_600e40__init_array_type = type <{ i64, i64 }>
%seg_601018__data_type = type <{ [16 x i8] }>
%__bss_start_type = type <{ [8 x i8] }>
%struct.State = type { %struct.ArchState, [32 x %union.VectorReg], %struct.ArithFlags, %union.anon, %struct.Segments, %struct.AddressSpace, %struct.GPR, %struct.X87Stack, %struct.MMX, %struct.FPUStatusFlags, %union.anon, %union.FPU, %struct.SegmentCaches }
%struct.ArchState = type { i32, i32, %union.anon }
%union.VectorReg = type { %union.vec512_t }
%union.vec512_t = type { %struct.uint64v8_t }
%struct.uint64v8_t = type { [8 x i64] }
%struct.ArithFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Segments = type { i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector }
%union.SegmentSelector = type { i16 }
%struct.AddressSpace = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.Reg = type { %union.anon }
%struct.GPR = type { i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg, i64, %struct.Reg }
%struct.X87Stack = type { [8 x %struct.anon.3] }
%struct.anon.3 = type { i64, double }
%struct.MMX = type { [8 x %struct.anon.4] }
%struct.anon.4 = type { i64, %union.vec64_t }
%union.vec64_t = type { %struct.uint64v1_t }
%struct.uint64v1_t = type { [1 x i64] }
%struct.FPUStatusFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8] }
%union.FPU = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.FpuFXSAVE, [96 x i8] }
%struct.FpuFXSAVE = type { %union.SegmentSelector, %union.SegmentSelector, %union.FPUAbridgedTagWord, i8, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, %union.FPUControlStatus, %union.FPUControlStatus, [8 x %struct.FPUStackElem], [16 x %union.vec128_t] }
%union.FPUAbridgedTagWord = type { i8 }
%union.FPUControlStatus = type { i32 }
%struct.FPUStackElem = type { %union.anon.11, [6 x i8] }
%union.anon.11 = type { %struct.float80_t }
%struct.float80_t = type { [10 x i8] }
%union.vec128_t = type { %struct.uint128v1_t }
%struct.uint128v1_t = type { [1 x i128] }
%struct.SegmentCaches = type { %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow, %struct.SegmentShadow }
%struct.SegmentShadow = type { %union.anon, i32, i32 }
%struct.Memory = type opaque
%struct.uint8v32_t = type { [32 x i8] }
%struct.anon.2 = type { i8, i8 }
%struct.int32v8_t = type { [8 x i32] }
%struct.float32v8_t = type { [8 x float] }
%struct.uint8v8_t = type { [8 x i8] }
%struct.uint8v16_t = type { [16 x i8] }
%struct.uint16v8_t = type { [8 x i16] }
%struct.uint8v4_t = type { [4 x i8] }
%struct.int16v4_t = type { [4 x i16] }
%struct.int32v4_t = type { [4 x i32] }
%struct.uint64v2_t = type { [2 x i64] }
%struct.uint64v4_t = type { [4 x i64] }
%struct.uint128v2_t = type { [2 x i128] }
%struct.uint16v16_t = type { [16 x i16] }
%struct.float64v4_t = type { [4 x double] }
%"class.(anonymous namespace)::BitMatrix" = type { %"class.std::bitset", [16 x [16 x i8]] }
%"class.std::bitset" = type { %struct.uint64v4_t }
%struct.bcd80_t = type { [9 x %union.FPUAbridgedTagWord], %union.FPUAbridgedTagWord }
%struct.FpuFSAVE = type { %union.SegmentSelector, i16, %union.SegmentSelector, i16, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, i32, %union.SegmentSelector, i16, [8 x %struct.FPUStackElem] }
%struct.anon.5 = type { i32, i32 }
@switch.table = private unnamed_addr constant [4 x i32] [i32 2048, i32 3072, i32 0, i32 1024]
@DR0 = external global i64, align 8
@DR1 = external global i64, align 8
@DR2 = external global i64, align 8
@DR3 = external global i64, align 8
@DR4 = external global i64, align 8
@DR5 = external global i64, align 8
@DR6 = external global i64, align 8
@DR7 = external global i64, align 8
@gCR0 = external global %union.anon, align 1
@gCR1 = external global %union.anon, align 1
@gCR2 = external global %union.anon, align 1
@gCR3 = external global %union.anon, align 1
@gCR4 = external global %union.anon, align 1
@gCR8 = external global %union.anon, align 1
@seg_400388__init = internal constant %seg_400388__init_type <{ [23 x i8] c"H\83\EC\08H\8B\05e\0C \00H\85\C0t\02\FF\D0H\83\C4\08\C3" }>
@seg_4003a0__text = internal constant %seg_4003a0__text_type <{ [354 x i8] c"1\EDI\89\D1^H\89\E2H\83\E4\F0PTI\C7\C0\00\05@\00H\C7\C1\90\04@\00H\C7\C7\88\04@\00\FF\15&\0C \00\F4\0F\1FD\00\00\F3\C3f.\0F\1F\84\00\00\00\00\00\0F\1F@\00U\B8(\10`\00H=(\10`\00H\89\E5t\17\B8\00\00\00\00H\85\C0t\0D]\BF(\10`\00\FF\E0\0F\1FD\00\00]\C3f\0F\1FD\00\00\BE(\10`\00UH\81\EE(\10`\00H\89\E5H\C1\FE\03H\89\F0H\C1\E8?H\01\C6H\D1\FEt\15\B8\00\00\00\00H\85\C0t\0B]\BF(\10`\00\FF\E0\0F\1F\00]\C3f\0F\1FD\00\00\80=\D1\0B \00\00u\17UH\89\E5\E8~\FF\FF\FF\C6\05\BF\0B \00\01]\C3\0F\1FD\00\00\F3\C3\0F\1F@\00f.\0F\1F\84\00\00\00\00\00UH\89\E5]\EB\89\90U\C3f\0F\1FD\00\00AWAVI\89\D7AUATL\8D%\9E\09 \00UH\8D-\9E\09 \00SA\89\FDI\89\F6L)\E5H\83\EC\08H\C1\FD\03\E8\C7\FE\FF\FFH\85\EDt 1\DB\0F\1F\84\00\00\00\00\00L\89\FAL\89\F6D\89\EFA\FF\14\DCH\83\C3\01H9\DDu\EAH\83\C4\08[]A\5CA]A^A_\C3\90f.\0F\1F\84\00\00\00\00\00\F3\C3" }>
@seg_400504__fini = internal constant %seg_400504__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400510__rodata = internal constant %seg_400510__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400514__eh_frame_hdr = internal constant %seg_400514__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00\8C\FE\FF\FFL\00\00\00\BC\FE\FF\FFx\00\00\00t\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400548__eh_frame = internal constant %seg_400548__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\008\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00<\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\E0\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>
@seg_601018__data = internal global %seg_601018__data_type zeroinitializer
@__bss_start = global %__bss_start_type zeroinitializer
@0 = internal global i1 false
%seg_400514__fini_type = type <{ [9 x i8] }>
%seg_400520__rodata_type = type <{ [4 x i8] }>
%seg_400524__eh_frame_hdr_type = type <{ [52 x i8] }>
%seg_400558__eh_frame_type = type <{ [208 x i8] }>
@seg_400514__fini = internal constant %seg_400514__fini_type <{ [9 x i8] c"H\83\EC\08H\83\C4\08\C3" }>
@seg_400520__rodata = internal constant %seg_400520__rodata_type <{ [4 x i8] c"\01\00\02\00" }>
@seg_400524__eh_frame_hdr = internal constant %seg_400524__eh_frame_hdr_type <{ [52 x i8] c"\01\1B\03;0\00\00\00\05\00\00\00|\FE\FF\FFL\00\00\00\AC\FE\FF\FFx\00\00\00d\FF\FF\FF\8C\00\00\00|\FF\FF\FF\A4\00\00\00\EC\FF\FF\FF\EC\00\00\00" }>
@seg_400558__eh_frame = internal constant %seg_400558__eh_frame_type <{ [208 x i8] c"\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\07\10\10\00\00\00\1C\00\00\00(\FE\FF\FF+\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01zR\00\01x\10\01\1B\0C\07\08\90\01\00\00\10\00\00\00\1C\00\00\00,\FE\FF\FF\02\00\00\00\00\00\00\00\14\00\00\000\00\00\00\D0\FE\FF\FF\0B\00\00\00\00\00\00\00\00\00\00\00D\00\00\00H\00\00\00\D0\FE\FF\FFe\00\00\00\00B\0E\10\8F\02B\0E\18\8E\03E\0E \8D\04B\0E(\8C\05H\0E0\86\06H\0E8\83\07M\0E@r\0E8A\0E0A\0E(B\0E B\0E\18B\0E\10B\0E\08\00\10\00\00\00\90\00\00\00\F8\FE\FF\FF\02\00\00\00\00\00\00\00\00\00\00\00" }>

; Function Declaraions
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_pthread_create(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @pthread_create to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pthread_join(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pthread_join to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

declare %struct.Memory* @sub_452090.abortgo(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_417ee0.get_read_result2(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_451db0.gprintf(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_418320.sgf_trace2(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_441720.owl_find_lunches(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_441ef0.owl_determine_life(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_42fb50.matchpat(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_43baf0.min_eyes(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_43b010.max_eyes(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_443630.owl_escape_route(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_443670.owl_shapes(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_443730.get_next_move_from_list(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_443e90.liberty_of_goal(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_46bc30.safe_move(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_443f90.semeai_move_value(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_444230.owl_add_move(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_444490.find_semeai_backfilling_move(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4141e0.find_origin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40f780.countlib(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_45db40.attack(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4445e0.close_pattern_list(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40d930.semeai_trymove(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_409930.dump_stack(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4447c0.push_owl(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_4449e0.owl_update_goal(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_444ba0.owl_update_boundary_marks(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_43edf0.do_owl_analyze_semeai(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_444d50.pop_owl(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)
declare %struct.Memory* @sub_40dd60.popgo(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias readnone returned)

; Data Access Globals
%G_0x7ae438_type = type <{ [4 x i8] }>
@G_0x7ae438= global %G_0x7ae438_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x7ae43c_type = type <{ [4 x i8] }>
@G_0x7ae43c= global %G_0x7ae43c_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0x7ae448_type = type <{ [1 x i8] }>
@G_0x7ae448= global %G_0x7ae448_type <{ [1 x i8] c"\00" }>
%G_0x7ae450_type = type <{ [4 x i8] }>
@G_0x7ae450= global %G_0x7ae450_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xab0eec_type = type <{ [4 x i8] }>
@G_0xab0eec= global %G_0xab0eec_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xab0ef8_type = type <{ [8 x i8] }>
@G_0xab0ef8= global %G_0xab0ef8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xab0f24_type = type <{ [4 x i8] }>
@G_0xab0f24= global %G_0xab0f24_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xab0f28_type = type <{ [1 x i8] }>
@G_0xab0f28= global %G_0xab0f28_type <{ [1 x i8] c"\00" }>
%G_0xac22d0_type = type <{ [4 x i8] }>
@G_0xac22d0= global %G_0xac22d0_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xac22d4_type = type <{ [4 x i8] }>
@G_0xac22d4= global %G_0xac22d4_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xac22d8_type = type <{ [8 x i8] }>
@G_0xac22d8= global %G_0xac22d8_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G_0xac22e0_type = type <{ [4 x i8] }>
@G_0xac22e0= global %G_0xac22e0_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xb54ce4_type = type <{ [4 x i8] }>
@G_0xb54ce4= global %G_0xb54ce4_type <{ [4 x i8] c"\00\00\00\00" }>
%G_0xb6e910_type = type <{ [4 x i8] }>
@G_0xb6e910= global %G_0xb6e910_type <{ [4 x i8] c"\00\00\00\00" }>
%G__0x443270_type = type <{ [8 x i8] }>
@G__0x443270= global %G__0x443270_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57dd2e_type = type <{ [8 x i8] }>
@G__0x57dd2e= global %G__0x57dd2e_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57de24_type = type <{ [8 x i8] }>
@G__0x57de24= global %G__0x57de24_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57de3a_type = type <{ [8 x i8] }>
@G__0x57de3a= global %G__0x57de3a_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57de55_type = type <{ [8 x i8] }>
@G__0x57de55= global %G__0x57de55_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57de70_type = type <{ [8 x i8] }>
@G__0x57de70= global %G__0x57de70_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57de94_type = type <{ [8 x i8] }>
@G__0x57de94= global %G__0x57de94_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57deb7_type = type <{ [8 x i8] }>
@G__0x57deb7= global %G__0x57deb7_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57dee3_type = type <{ [8 x i8] }>
@G__0x57dee3= global %G__0x57dee3_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57deea_type = type <{ [8 x i8] }>
@G__0x57deea= global %G__0x57deea_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57deff_type = type <{ [8 x i8] }>
@G__0x57deff= global %G__0x57deff_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57df14_type = type <{ [8 x i8] }>
@G__0x57df14= global %G__0x57df14_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57df28_type = type <{ [8 x i8] }>
@G__0x57df28= global %G__0x57df28_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57df47_type = type <{ [8 x i8] }>
@G__0x57df47= global %G__0x57df47_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57df65_type = type <{ [8 x i8] }>
@G__0x57df65= global %G__0x57df65_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57df6f_type = type <{ [8 x i8] }>
@G__0x57df6f= global %G__0x57df6f_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57df7f_type = type <{ [8 x i8] }>
@G__0x57df7f= global %G__0x57df7f_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57df94_type = type <{ [8 x i8] }>
@G__0x57df94= global %G__0x57df94_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57dfa7_type = type <{ [8 x i8] }>
@G__0x57dfa7= global %G__0x57dfa7_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57dfbc_type = type <{ [8 x i8] }>
@G__0x57dfbc= global %G__0x57dfbc_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57dfcd_type = type <{ [8 x i8] }>
@G__0x57dfcd= global %G__0x57dfcd_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57dfe1_type = type <{ [8 x i8] }>
@G__0x57dfe1= global %G__0x57dfe1_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x57dfe6_type = type <{ [8 x i8] }>
@G__0x57dfe6= global %G__0x57dfe6_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x919b70_type = type <{ [8 x i8] }>
@G__0x919b70= global %G__0x919b70_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x92aa50_type = type <{ [8 x i8] }>
@G__0x92aa50= global %G__0x92aa50_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0x941118_type = type <{ [8 x i8] }>
@G__0x941118= global %G__0x941118_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>
%G__0xac22f0_type = type <{ [8 x i8] }>
@G__0xac22f0= global %G__0xac22f0_type <{ [8 x i8] c"\00\00\00\00\00\00\00\00" }>


define %struct.Memory* @do_owl_analyze_semeai(%struct.State* noalias , i64, %struct.Memory* noalias) alwaysinline  {
entry:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %1, i64* %3, align 8
  %BRANCH_TAKEN = alloca i8, align 1
  store i8 0, i8* %BRANCH_TAKEN, align 1
  %MEMORY = alloca %struct.Memory*, align 8
  store %struct.Memory* %2, %struct.Memory** %MEMORY, align 8

  ; Code: .do_owl_analyze_semeai:	 RIP: 43edf0	 Bytes: 0
  ; Code: pushq %rbp	 RIP: 43edf0	 Bytes: 1
  %loadMem_43edf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43edf0 = call %struct.Memory* @routine_pushq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43edf0)
  store %struct.Memory* %call_43edf0, %struct.Memory** %MEMORY

  ; Code: movq %rsp, %rbp	 RIP: 43edf1	 Bytes: 3
  %loadMem_43edf1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43edf1 = call %struct.Memory* @routine_movq__rsp___rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43edf1)
  store %struct.Memory* %call_43edf1, %struct.Memory** %MEMORY

  ; Code: pushq %r15	 RIP: 43edf4	 Bytes: 2
  %loadMem_43edf4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43edf4 = call %struct.Memory* @routine_pushq__r15(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43edf4)
  store %struct.Memory* %call_43edf4, %struct.Memory** %MEMORY

  ; Code: pushq %r14	 RIP: 43edf6	 Bytes: 2
  %loadMem_43edf6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43edf6 = call %struct.Memory* @routine_pushq__r14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43edf6)
  store %struct.Memory* %call_43edf6, %struct.Memory** %MEMORY

  ; Code: pushq %rbx	 RIP: 43edf8	 Bytes: 1
  %loadMem_43edf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43edf8 = call %struct.Memory* @routine_pushq__rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43edf8)
  store %struct.Memory* %call_43edf8, %struct.Memory** %MEMORY

  ; Code: subq $0xdf8, %rsp	 RIP: 43edf9	 Bytes: 7
  %loadMem_43edf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43edf9 = call %struct.Memory* @routine_subq__0xdf8___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43edf9)
  store %struct.Memory* %call_43edf9, %struct.Memory** %MEMORY

  ; Code: movl 0x28(%rbp), %eax	 RIP: 43ee00	 Bytes: 3
  %loadMem_43ee00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee00 = call %struct.Memory* @routine_movl_0x28__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee00)
  store %struct.Memory* %call_43ee00, %struct.Memory** %MEMORY

  ; Code: movl 0x20(%rbp), %r10d	 RIP: 43ee03	 Bytes: 4
  %loadMem_43ee03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee03 = call %struct.Memory* @routine_movl_0x20__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee03)
  store %struct.Memory* %call_43ee03, %struct.Memory** %MEMORY

  ; Code: movq 0x18(%rbp), %r11	 RIP: 43ee07	 Bytes: 4
  %loadMem_43ee07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee07 = call %struct.Memory* @routine_movq_0x18__rbp____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee07)
  store %struct.Memory* %call_43ee07, %struct.Memory** %MEMORY

  ; Code: movq 0x10(%rbp), %rbx	 RIP: 43ee0b	 Bytes: 4
  %loadMem_43ee0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee0b = call %struct.Memory* @routine_movq_0x10__rbp____rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee0b)
  store %struct.Memory* %call_43ee0b, %struct.Memory** %MEMORY

  ; Code: movq $0x57de24, %r14	 RIP: 43ee0f	 Bytes: 10
  %loadMem_43ee0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee0f = call %struct.Memory* @routine_movq__0x57de24___r14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee0f)
  store %struct.Memory* %call_43ee0f, %struct.Memory** %MEMORY

  ; Code: movl $0x3, %r15d	 RIP: 43ee19	 Bytes: 6
  %loadMem_43ee19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee19 = call %struct.Memory* @routine_movl__0x3___r15d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee19)
  store %struct.Memory* %call_43ee19, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0x1c(%rbp)	 RIP: 43ee1f	 Bytes: 3
  %loadMem_43ee1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee1f = call %struct.Memory* @routine_movl__edi__MINUS0x1c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee1f)
  store %struct.Memory* %call_43ee1f, %struct.Memory** %MEMORY

  ; Code: movl %esi, -0x20(%rbp)	 RIP: 43ee22	 Bytes: 3
  %loadMem_43ee22 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee22 = call %struct.Memory* @routine_movl__esi__MINUS0x20__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee22)
  store %struct.Memory* %call_43ee22, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0x28(%rbp)	 RIP: 43ee25	 Bytes: 4
  %loadMem_43ee25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee25 = call %struct.Memory* @routine_movq__rdx__MINUS0x28__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee25)
  store %struct.Memory* %call_43ee25, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x30(%rbp)	 RIP: 43ee29	 Bytes: 4
  %loadMem_43ee29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee29 = call %struct.Memory* @routine_movq__rcx__MINUS0x30__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee29)
  store %struct.Memory* %call_43ee29, %struct.Memory** %MEMORY

  ; Code: movl %r8d, -0x34(%rbp)	 RIP: 43ee2d	 Bytes: 4
  %loadMem_43ee2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee2d = call %struct.Memory* @routine_movl__r8d__MINUS0x34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee2d)
  store %struct.Memory* %call_43ee2d, %struct.Memory** %MEMORY

  ; Code: movq %r9, -0x40(%rbp)	 RIP: 43ee31	 Bytes: 4
  %loadMem_43ee31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee31 = call %struct.Memory* @routine_movq__r9__MINUS0x40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee31)
  store %struct.Memory* %call_43ee31, %struct.Memory** %MEMORY

  ; Code: movq %rbx, -0x48(%rbp)	 RIP: 43ee35	 Bytes: 4
  %loadMem_43ee35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee35 = call %struct.Memory* @routine_movq__rbx__MINUS0x48__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee35)
  store %struct.Memory* %call_43ee35, %struct.Memory** %MEMORY

  ; Code: movq %r11, -0x50(%rbp)	 RIP: 43ee39	 Bytes: 4
  %loadMem_43ee39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee39 = call %struct.Memory* @routine_movq__r11__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee39)
  store %struct.Memory* %call_43ee39, %struct.Memory** %MEMORY

  ; Code: movl %r10d, -0x54(%rbp)	 RIP: 43ee3d	 Bytes: 4
  %loadMem_43ee3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee3d = call %struct.Memory* @routine_movl__r10d__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee3d)
  store %struct.Memory* %call_43ee3d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x58(%rbp)	 RIP: 43ee41	 Bytes: 3
  %loadMem_43ee41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee41 = call %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee41)
  store %struct.Memory* %call_43ee41, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rcx	 RIP: 43ee44	 Bytes: 4
  %loadMem_43ee44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee44 = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee44)
  store %struct.Memory* %call_43ee44, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 43ee48	 Bytes: 8
  %loadMem_43ee48 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee48 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee48)
  store %struct.Memory* %call_43ee48, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x5c(%rbp)	 RIP: 43ee50	 Bytes: 3
  %loadMem_43ee50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee50 = call %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee50)
  store %struct.Memory* %call_43ee50, %struct.Memory** %MEMORY

  ; Code: subl -0x5c(%rbp), %r15d	 RIP: 43ee53	 Bytes: 4
  %loadMem_43ee53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee53 = call %struct.Memory* @routine_subl_MINUS0x5c__rbp____r15d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee53)
  store %struct.Memory* %call_43ee53, %struct.Memory** %MEMORY

  ; Code: movl %r15d, -0x60(%rbp)	 RIP: 43ee57	 Bytes: 4
  %loadMem_43ee57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee57 = call %struct.Memory* @routine_movl__r15d__MINUS0x60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee57)
  store %struct.Memory* %call_43ee57, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x4d4(%rbp)	 RIP: 43ee5b	 Bytes: 10
  %loadMem_43ee5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee5b = call %struct.Memory* @routine_movl__0x0__MINUS0x4d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee5b)
  store %struct.Memory* %call_43ee5b, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x4d8(%rbp)	 RIP: 43ee65	 Bytes: 10
  %loadMem_43ee65 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee65 = call %struct.Memory* @routine_movl__0x0__MINUS0x4d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee65)
  store %struct.Memory* %call_43ee65, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x4dc(%rbp)	 RIP: 43ee6f	 Bytes: 10
  %loadMem_43ee6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee6f = call %struct.Memory* @routine_movl__0x0__MINUS0x4dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee6f)
  store %struct.Memory* %call_43ee6f, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x4e0(%rbp)	 RIP: 43ee79	 Bytes: 10
  %loadMem_43ee79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee79 = call %struct.Memory* @routine_movl__0x0__MINUS0x4e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee79)
  store %struct.Memory* %call_43ee79, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x4e4(%rbp)	 RIP: 43ee83	 Bytes: 10
  %loadMem_43ee83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee83 = call %struct.Memory* @routine_movl__0x0__MINUS0x4e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee83)
  store %struct.Memory* %call_43ee83, %struct.Memory** %MEMORY

  ; Code: movq 0xab0ef8, %rcx	 RIP: 43ee8d	 Bytes: 8
  %loadMem_43ee8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee8d = call %struct.Memory* @routine_movq_0xab0ef8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee8d)
  store %struct.Memory* %call_43ee8d, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0x698(%rbp)	 RIP: 43ee95	 Bytes: 7
  %loadMem_43ee95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee95 = call %struct.Memory* @routine_movq__rcx__MINUS0x698__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee95)
  store %struct.Memory* %call_43ee95, %struct.Memory** %MEMORY

  ; Code: movl 0xab0eec, %eax	 RIP: 43ee9c	 Bytes: 7
  %loadMem_43ee9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ee9c = call %struct.Memory* @routine_movl_0xab0eec___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ee9c)
  store %struct.Memory* %call_43ee9c, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x69c(%rbp)	 RIP: 43eea3	 Bytes: 6
  %loadMem_43eea3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43eea3 = call %struct.Memory* @routine_movl__eax__MINUS0x69c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43eea3)
  store %struct.Memory* %call_43eea3, %struct.Memory** %MEMORY

  ; Code: movl $0x3, -0x6a4(%rbp)	 RIP: 43eea9	 Bytes: 10
  %loadMem_43eea9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43eea9 = call %struct.Memory* @routine_movl__0x3__MINUS0x6a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43eea9)
  store %struct.Memory* %call_43eea9, %struct.Memory** %MEMORY

  ; Code: movl $0x3, -0x6a8(%rbp)	 RIP: 43eeb3	 Bytes: 10
  %loadMem_43eeb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43eeb3 = call %struct.Memory* @routine_movl__0x3__MINUS0x6a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43eeb3)
  store %struct.Memory* %call_43eeb3, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x6ac(%rbp)	 RIP: 43eebd	 Bytes: 10
  %loadMem_43eebd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43eebd = call %struct.Memory* @routine_movl__0x0__MINUS0x6ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43eebd)
  store %struct.Memory* %call_43eebd, %struct.Memory** %MEMORY

  ; Code: movl $0x3, -0x6b0(%rbp)	 RIP: 43eec7	 Bytes: 10
  %loadMem_43eec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43eec7 = call %struct.Memory* @routine_movl__0x3__MINUS0x6b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43eec7)
  store %struct.Memory* %call_43eec7, %struct.Memory** %MEMORY

  ; Code: movl $0x3, -0x6b4(%rbp)	 RIP: 43eed1	 Bytes: 10
  %loadMem_43eed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43eed1 = call %struct.Memory* @routine_movl__0x3__MINUS0x6b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43eed1)
  store %struct.Memory* %call_43eed1, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, -0x6b8(%rbp)	 RIP: 43eedb	 Bytes: 10
  %loadMem_43eedb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43eedb = call %struct.Memory* @routine_movl__0xffffffff__MINUS0x6b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43eedb)
  store %struct.Memory* %call_43eedb, %struct.Memory** %MEMORY

  ; Code: movl 0xab0eec, %eax	 RIP: 43eee5	 Bytes: 7
  %loadMem_43eee5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43eee5 = call %struct.Memory* @routine_movl_0xab0eec___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43eee5)
  store %struct.Memory* %call_43eee5, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 43eeec	 Bytes: 3
  %loadMem_43eeec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43eeec = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43eeec)
  store %struct.Memory* %call_43eeec, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6c4(%rbp)	 RIP: 43eeef	 Bytes: 6
  %loadMem_43eeef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43eeef = call %struct.Memory* @routine_movl__eax__MINUS0x6c4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43eeef)
  store %struct.Memory* %call_43eeef, %struct.Memory** %MEMORY

  ; Code: movq %r14, -0x6d0(%rbp)	 RIP: 43eef5	 Bytes: 7
  %loadMem_43eef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43eef5 = call %struct.Memory* @routine_movq__r14__MINUS0x6d0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43eef5)
  store %struct.Memory* %call_43eef5, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %eax	 RIP: 43eefc	 Bytes: 3
  %loadMem_43eefc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43eefc = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43eefc)
  store %struct.Memory* %call_43eefc, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6d4(%rbp)	 RIP: 43eeff	 Bytes: 6
  %loadMem_43eeff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43eeff = call %struct.Memory* @routine_movl__eax__MINUS0x6d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43eeff)
  store %struct.Memory* %call_43eeff, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %eax	 RIP: 43ef05	 Bytes: 3
  %loadMem_43ef05 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef05 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef05)
  store %struct.Memory* %call_43ef05, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6d8(%rbp)	 RIP: 43ef08	 Bytes: 6
  %loadMem_43ef08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef08 = call %struct.Memory* @routine_movl__eax__MINUS0x6d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef08)
  store %struct.Memory* %call_43ef08, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, -0x50(%rbp)	 RIP: 43ef0e	 Bytes: 5
  %loadMem_43ef0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef0e = call %struct.Memory* @routine_cmpq__0x0__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef0e)
  store %struct.Memory* %call_43ef0e, %struct.Memory** %MEMORY

  ; Code: jne .L_43ef24	 RIP: 43ef13	 Bytes: 6
  %loadMem_43ef13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef13 = call %struct.Memory* @routine_jne_.L_43ef24(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef13, i8* %BRANCH_TAKEN, i64 17, i64 6, i64 6)
  store %struct.Memory* %call_43ef13, %struct.Memory** %MEMORY

  %loadBr_43ef13 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ef13 = icmp eq i8 %loadBr_43ef13, 1
  br i1 %cmpBr_43ef13, label %block_.L_43ef24, label %block_43ef19

block_43ef19:
  ; Code: leaq -0x6c8(%rbp), %rax	 RIP: 43ef19	 Bytes: 7
  %loadMem_43ef19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef19 = call %struct.Memory* @routine_leaq_MINUS0x6c8__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef19)
  store %struct.Memory* %call_43ef19, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0x50(%rbp)	 RIP: 43ef20	 Bytes: 4
  %loadMem_43ef20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef20 = call %struct.Memory* @routine_movq__rax__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef20)
  store %struct.Memory* %call_43ef20, %struct.Memory** %MEMORY

  ; Code: .L_43ef24:	 RIP: 43ef24	 Bytes: 0
  br label %block_.L_43ef24
block_.L_43ef24:

  ; Code: movl $0x0, -0x200(%rbp)	 RIP: 43ef24	 Bytes: 10
  %loadMem_43ef24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef24 = call %struct.Memory* @routine_movl__0x0__MINUS0x200__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef24)
  store %struct.Memory* %call_43ef24, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x220(%rbp)	 RIP: 43ef2e	 Bytes: 10
  %loadMem_43ef2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef2e = call %struct.Memory* @routine_movl__0x0__MINUS0x220__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef2e)
  store %struct.Memory* %call_43ef2e, %struct.Memory** %MEMORY

  ; Code: movl 0xac22d4, %eax	 RIP: 43ef38	 Bytes: 7
  %loadMem_43ef38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef38 = call %struct.Memory* @routine_movl_0xac22d4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef38)
  store %struct.Memory* %call_43ef38, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43ef3f	 Bytes: 3
  %loadMem_43ef3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef3f = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef3f)
  store %struct.Memory* %call_43ef3f, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0xac22d4	 RIP: 43ef42	 Bytes: 7
  %loadMem_43ef42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef42 = call %struct.Memory* @routine_movl__eax__0xac22d4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef42)
  store %struct.Memory* %call_43ef42, %struct.Memory** %MEMORY

  ; Code: movl 0xac22d0, %eax	 RIP: 43ef49	 Bytes: 7
  %loadMem_43ef49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef49 = call %struct.Memory* @routine_movl_0xac22d0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef49)
  store %struct.Memory* %call_43ef49, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43ef50	 Bytes: 3
  %loadMem_43ef50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef50 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef50)
  store %struct.Memory* %call_43ef50, %struct.Memory** %MEMORY

  ; Code: movl %eax, 0xac22d0	 RIP: 43ef53	 Bytes: 7
  %loadMem_43ef53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef53 = call %struct.Memory* @routine_movl__eax__0xac22d0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef53)
  store %struct.Memory* %call_43ef53, %struct.Memory** %MEMORY

  ; Code: movslq -0x1c(%rbp), %rcx	 RIP: 43ef5a	 Bytes: 4
  %loadMem_43ef5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef5a = call %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef5a)
  store %struct.Memory* %call_43ef5a, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 43ef5e	 Bytes: 8
  %loadMem_43ef5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef5e = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef5e)
  store %struct.Memory* %call_43ef5e, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rcx	 RIP: 43ef66	 Bytes: 4
  %loadMem_43ef66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef66 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef66)
  store %struct.Memory* %call_43ef66, %struct.Memory** %MEMORY

  ; Code: cmpl 0x4b0(%rcx), %eax	 RIP: 43ef6a	 Bytes: 6
  %loadMem_43ef6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef6a = call %struct.Memory* @routine_cmpl_0x4b0__rcx____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef6a)
  store %struct.Memory* %call_43ef6a, %struct.Memory** %MEMORY

  ; Code: jne .L_43ef7b	 RIP: 43ef70	 Bytes: 6
  %loadMem_43ef70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef70 = call %struct.Memory* @routine_jne_.L_43ef7b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef70, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43ef70, %struct.Memory** %MEMORY

  %loadBr_43ef70 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ef70 = icmp eq i8 %loadBr_43ef70, 1
  br i1 %cmpBr_43ef70, label %block_.L_43ef7b, label %block_43ef76

block_43ef76:
  ; Code: jmpq .L_43efa3	 RIP: 43ef76	 Bytes: 5
  %loadMem_43ef76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef76 = call %struct.Memory* @routine_jmpq_.L_43efa3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef76, i64 45, i64 5)
  store %struct.Memory* %call_43ef76, %struct.Memory** %MEMORY

  br label %block_.L_43efa3

  ; Code: .L_43ef7b:	 RIP: 43ef7b	 Bytes: 0
block_.L_43ef7b:

  ; Code: movq $0x57dd2e, %rdi	 RIP: 43ef7b	 Bytes: 10
  %loadMem_43ef7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef7b = call %struct.Memory* @routine_movq__0x57dd2e___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef7b)
  store %struct.Memory* %call_43ef7b, %struct.Memory** %MEMORY

  ; Code: movl $0x164, %esi	 RIP: 43ef85	 Bytes: 5
  %loadMem_43ef85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef85 = call %struct.Memory* @routine_movl__0x164___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef85)
  store %struct.Memory* %call_43ef85, %struct.Memory** %MEMORY

  ; Code: movq $0x57de3a, %rdx	 RIP: 43ef8a	 Bytes: 10
  %loadMem_43ef8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef8a = call %struct.Memory* @routine_movq__0x57de3a___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef8a)
  store %struct.Memory* %call_43ef8a, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, %eax	 RIP: 43ef94	 Bytes: 5
  %loadMem_43ef94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef94 = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef94)
  store %struct.Memory* %call_43ef94, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 43ef99	 Bytes: 2
  %loadMem_43ef99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef99 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef99)
  store %struct.Memory* %call_43ef99, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r8d	 RIP: 43ef9b	 Bytes: 3
  %loadMem_43ef9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ef9b = call %struct.Memory* @routine_movl__eax___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ef9b)
  store %struct.Memory* %call_43ef9b, %struct.Memory** %MEMORY

  ; Code: callq .abortgo	 RIP: 43ef9e	 Bytes: 5
  %loadMem1_43ef9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ef9e = call %struct.Memory* @routine_callq_.abortgo(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ef9e, i64 78066, i64 5, i64 5)
  store %struct.Memory* %call1_43ef9e, %struct.Memory** %MEMORY

  %loadMem2_43ef9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ef9e = load i64, i64* %3
  %call2_43ef9e = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64  %loadPC_43ef9e, %struct.Memory* %loadMem2_43ef9e)
  store %struct.Memory* %call2_43ef9e, %struct.Memory** %MEMORY

  ; Code: .L_43efa3:	 RIP: 43efa3	 Bytes: 0
  br label %block_.L_43efa3
block_.L_43efa3:

  ; Code: movslq -0x20(%rbp), %rax	 RIP: 43efa3	 Bytes: 4
  %loadMem_43efa3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43efa3 = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43efa3)
  store %struct.Memory* %call_43efa3, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 43efa7	 Bytes: 8
  %loadMem_43efa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43efa7 = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43efa7)
  store %struct.Memory* %call_43efa7, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rax	 RIP: 43efaf	 Bytes: 4
  %loadMem_43efaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43efaf = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43efaf)
  store %struct.Memory* %call_43efaf, %struct.Memory** %MEMORY

  ; Code: cmpl 0x4b0(%rax), %ecx	 RIP: 43efb3	 Bytes: 6
  %loadMem_43efb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43efb3 = call %struct.Memory* @routine_cmpl_0x4b0__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43efb3)
  store %struct.Memory* %call_43efb3, %struct.Memory** %MEMORY

  ; Code: jne .L_43efc4	 RIP: 43efb9	 Bytes: 6
  %loadMem_43efb9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43efb9 = call %struct.Memory* @routine_jne_.L_43efc4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43efb9, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43efb9, %struct.Memory** %MEMORY

  %loadBr_43efb9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43efb9 = icmp eq i8 %loadBr_43efb9, 1
  br i1 %cmpBr_43efb9, label %block_.L_43efc4, label %block_43efbf

block_43efbf:
  ; Code: jmpq .L_43efec	 RIP: 43efbf	 Bytes: 5
  %loadMem_43efbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43efbf = call %struct.Memory* @routine_jmpq_.L_43efec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43efbf, i64 45, i64 5)
  store %struct.Memory* %call_43efbf, %struct.Memory** %MEMORY

  br label %block_.L_43efec

  ; Code: .L_43efc4:	 RIP: 43efc4	 Bytes: 0
block_.L_43efc4:

  ; Code: movq $0x57dd2e, %rdi	 RIP: 43efc4	 Bytes: 10
  %loadMem_43efc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43efc4 = call %struct.Memory* @routine_movq__0x57dd2e___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43efc4)
  store %struct.Memory* %call_43efc4, %struct.Memory** %MEMORY

  ; Code: movl $0x165, %esi	 RIP: 43efce	 Bytes: 5
  %loadMem_43efce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43efce = call %struct.Memory* @routine_movl__0x165___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43efce)
  store %struct.Memory* %call_43efce, %struct.Memory** %MEMORY

  ; Code: movq $0x57de55, %rdx	 RIP: 43efd3	 Bytes: 10
  %loadMem_43efd3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43efd3 = call %struct.Memory* @routine_movq__0x57de55___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43efd3)
  store %struct.Memory* %call_43efd3, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, %eax	 RIP: 43efdd	 Bytes: 5
  %loadMem_43efdd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43efdd = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43efdd)
  store %struct.Memory* %call_43efdd, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 43efe2	 Bytes: 2
  %loadMem_43efe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43efe2 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43efe2)
  store %struct.Memory* %call_43efe2, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r8d	 RIP: 43efe4	 Bytes: 3
  %loadMem_43efe4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43efe4 = call %struct.Memory* @routine_movl__eax___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43efe4)
  store %struct.Memory* %call_43efe4, %struct.Memory** %MEMORY

  ; Code: callq .abortgo	 RIP: 43efe7	 Bytes: 5
  %loadMem1_43efe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43efe7 = call %struct.Memory* @routine_callq_.abortgo(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43efe7, i64 77993, i64 5, i64 5)
  store %struct.Memory* %call1_43efe7, %struct.Memory** %MEMORY

  %loadMem2_43efe7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43efe7 = load i64, i64* %3
  %call2_43efe7 = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64  %loadPC_43efe7, %struct.Memory* %loadMem2_43efe7)
  store %struct.Memory* %call2_43efe7, %struct.Memory** %MEMORY

  ; Code: .L_43efec:	 RIP: 43efec	 Bytes: 0
  br label %block_.L_43efec
block_.L_43efec:

  ; Code: movl 0xb54ce4, %eax	 RIP: 43efec	 Bytes: 7
  %loadMem_43efec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43efec = call %struct.Memory* @routine_movl_0xb54ce4___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43efec)
  store %struct.Memory* %call_43efec, %struct.Memory** %MEMORY

  ; Code: cmpl 0xb6e910, %eax	 RIP: 43eff3	 Bytes: 7
  %loadMem_43eff3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43eff3 = call %struct.Memory* @routine_cmpl_0xb6e910___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43eff3)
  store %struct.Memory* %call_43eff3, %struct.Memory** %MEMORY

  ; Code: jg .L_43f30a	 RIP: 43effa	 Bytes: 6
  %loadMem_43effa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43effa = call %struct.Memory* @routine_jg_.L_43f30a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43effa, i8* %BRANCH_TAKEN, i64 784, i64 6, i64 6)
  store %struct.Memory* %call_43effa, %struct.Memory** %MEMORY

  %loadBr_43effa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43effa = icmp eq i8 %loadBr_43effa, 1
  br i1 %cmpBr_43effa, label %block_.L_43f30a, label %block_43f000

block_43f000:
  ; Code: movl 0x7ae43c, %eax	 RIP: 43f000	 Bytes: 7
  %loadMem_43f000 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f000 = call %struct.Memory* @routine_movl_0x7ae43c___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f000)
  store %struct.Memory* %call_43f000, %struct.Memory** %MEMORY

  ; Code: andl $0x400, %eax	 RIP: 43f007	 Bytes: 5
  %loadMem_43f007 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f007 = call %struct.Memory* @routine_andl__0x400___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f007)
  store %struct.Memory* %call_43f007, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43f00c	 Bytes: 3
  %loadMem_43f00c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f00c = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f00c)
  store %struct.Memory* %call_43f00c, %struct.Memory** %MEMORY

  ; Code: je .L_43f30a	 RIP: 43f00f	 Bytes: 6
  %loadMem_43f00f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f00f = call %struct.Memory* @routine_je_.L_43f30a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f00f, i8* %BRANCH_TAKEN, i64 763, i64 6, i64 6)
  store %struct.Memory* %call_43f00f, %struct.Memory** %MEMORY

  %loadBr_43f00f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f00f = icmp eq i8 %loadBr_43f00f, 1
  br i1 %cmpBr_43f00f, label %block_.L_43f30a, label %block_43f015

block_43f015:
  ; Code: cmpl $0x0, -0x54(%rbp)	 RIP: 43f015	 Bytes: 4
  %loadMem_43f015 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f015 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f015)
  store %struct.Memory* %call_43f015, %struct.Memory** %MEMORY

  ; Code: jne .L_43f30a	 RIP: 43f019	 Bytes: 6
  %loadMem_43f019 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f019 = call %struct.Memory* @routine_jne_.L_43f30a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f019, i8* %BRANCH_TAKEN, i64 753, i64 6, i64 6)
  store %struct.Memory* %call_43f019, %struct.Memory** %MEMORY

  %loadBr_43f019 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f019 = icmp eq i8 %loadBr_43f019, 1
  br i1 %cmpBr_43f019, label %block_.L_43f30a, label %block_43f01f

block_43f01f:
  ; Code: cmpl $0x0, -0x58(%rbp)	 RIP: 43f01f	 Bytes: 4
  %loadMem_43f01f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f01f = call %struct.Memory* @routine_cmpl__0x0__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f01f)
  store %struct.Memory* %call_43f01f, %struct.Memory** %MEMORY

  ; Code: je .L_43f30a	 RIP: 43f023	 Bytes: 6
  %loadMem_43f023 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f023 = call %struct.Memory* @routine_je_.L_43f30a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f023, i8* %BRANCH_TAKEN, i64 743, i64 6, i64 6)
  store %struct.Memory* %call_43f023, %struct.Memory** %MEMORY

  %loadBr_43f023 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f023 = icmp eq i8 %loadBr_43f023, 1
  br i1 %cmpBr_43f023, label %block_.L_43f30a, label %block_43f029

block_43f029:
  ; Code: movl $0x2, %edi	 RIP: 43f029	 Bytes: 5
  %loadMem_43f029 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f029 = call %struct.Memory* @routine_movl__0x2___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f029)
  store %struct.Memory* %call_43f029, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 43f02e	 Bytes: 2
  %loadMem_43f02e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f02e = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f02e)
  store %struct.Memory* %call_43f02e, %struct.Memory** %MEMORY

  ; Code: leaq -0x1c(%rbp), %rcx	 RIP: 43f030	 Bytes: 4
  %loadMem_43f030 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f030 = call %struct.Memory* @routine_leaq_MINUS0x1c__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f030)
  store %struct.Memory* %call_43f030, %struct.Memory** %MEMORY

  ; Code: leaq -0x20(%rbp), %r8	 RIP: 43f034	 Bytes: 4
  %loadMem_43f034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f034 = call %struct.Memory* @routine_leaq_MINUS0x20__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f034)
  store %struct.Memory* %call_43f034, %struct.Memory** %MEMORY

  ; Code: leaq -0x6c0(%rbp), %r9	 RIP: 43f038	 Bytes: 7
  %loadMem_43f038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f038 = call %struct.Memory* @routine_leaq_MINUS0x6c0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f038)
  store %struct.Memory* %call_43f038, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 43f03f	 Bytes: 2
  %loadMem_43f03f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f03f = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f03f)
  store %struct.Memory* %call_43f03f, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 43f041	 Bytes: 2
  %loadMem_43f041 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f041 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f041)
  store %struct.Memory* %call_43f041, %struct.Memory** %MEMORY

  ; Code: callq .get_read_result2	 RIP: 43f043	 Bytes: 5
  %loadMem1_43f043 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f043 = call %struct.Memory* @routine_callq_.get_read_result2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f043, i64 -160099, i64 5, i64 5)
  store %struct.Memory* %call1_43f043, %struct.Memory** %MEMORY

  %loadMem2_43f043 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f043 = load i64, i64* %3
  %call2_43f043 = call %struct.Memory* @sub_417ee0.get_read_result2(%struct.State* %0, i64  %loadPC_43f043, %struct.Memory* %loadMem2_43f043)
  store %struct.Memory* %call2_43f043, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43f048	 Bytes: 3
  %loadMem_43f048 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f048 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f048)
  store %struct.Memory* %call_43f048, %struct.Memory** %MEMORY

  ; Code: je .L_43f305	 RIP: 43f04b	 Bytes: 6
  %loadMem_43f04b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f04b = call %struct.Memory* @routine_je_.L_43f305(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f04b, i8* %BRANCH_TAKEN, i64 698, i64 6, i64 6)
  store %struct.Memory* %call_43f04b, %struct.Memory** %MEMORY

  %loadBr_43f04b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f04b = icmp eq i8 %loadBr_43f04b, 1
  br i1 %cmpBr_43f04b, label %block_.L_43f305, label %block_43f051

block_43f051:
  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43f051	 Bytes: 7
  %loadMem_43f051 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f051 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f051)
  store %struct.Memory* %call_43f051, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 43f058	 Bytes: 3
  %loadMem_43f058 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f058 = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f058)
  store %struct.Memory* %call_43f058, %struct.Memory** %MEMORY

  ; Code: shrl $0x18, %ecx	 RIP: 43f05b	 Bytes: 3
  %loadMem_43f05b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f05b = call %struct.Memory* @routine_shrl__0x18___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f05b)
  store %struct.Memory* %call_43f05b, %struct.Memory** %MEMORY

  ; Code: andl $0xf, %ecx	 RIP: 43f05e	 Bytes: 3
  %loadMem_43f05e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f05e = call %struct.Memory* @routine_andl__0xf___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f05e)
  store %struct.Memory* %call_43f05e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 43f061	 Bytes: 3
  %loadMem_43f061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f061 = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f061)
  store %struct.Memory* %call_43f061, %struct.Memory** %MEMORY

  ; Code: je .L_43f083	 RIP: 43f064	 Bytes: 6
  %loadMem_43f064 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f064 = call %struct.Memory* @routine_je_.L_43f083(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f064, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_43f064, %struct.Memory** %MEMORY

  %loadBr_43f064 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f064 = icmp eq i8 %loadBr_43f064, 1
  br i1 %cmpBr_43f064, label %block_.L_43f083, label %block_43f06a

block_43f06a:
  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43f06a	 Bytes: 7
  %loadMem_43f06a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f06a = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f06a)
  store %struct.Memory* %call_43f06a, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 43f071	 Bytes: 3
  %loadMem_43f071 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f071 = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f071)
  store %struct.Memory* %call_43f071, %struct.Memory** %MEMORY

  ; Code: shrl $0xa, %ecx	 RIP: 43f074	 Bytes: 3
  %loadMem_43f074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f074 = call %struct.Memory* @routine_shrl__0xa___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f074)
  store %struct.Memory* %call_43f074, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %ecx	 RIP: 43f077	 Bytes: 6
  %loadMem_43f077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f077 = call %struct.Memory* @routine_andl__0x3ff___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f077)
  store %struct.Memory* %call_43f077, %struct.Memory** %MEMORY

  ; Code: movq -0x50(%rbp), %rax	 RIP: 43f07d	 Bytes: 4
  %loadMem_43f07d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f07d = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f07d)
  store %struct.Memory* %call_43f07d, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rax)	 RIP: 43f081	 Bytes: 2
  %loadMem_43f081 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f081 = call %struct.Memory* @routine_movl__ecx____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f081)
  store %struct.Memory* %call_43f081, %struct.Memory** %MEMORY

  ; Code: .L_43f083:	 RIP: 43f083	 Bytes: 0
  br label %block_.L_43f083
block_.L_43f083:

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43f083	 Bytes: 7
  %loadMem_43f083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f083 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f083)
  store %struct.Memory* %call_43f083, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 43f08a	 Bytes: 3
  %loadMem_43f08a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f08a = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f08a)
  store %struct.Memory* %call_43f08a, %struct.Memory** %MEMORY

  ; Code: shrl $0x18, %ecx	 RIP: 43f08d	 Bytes: 3
  %loadMem_43f08d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f08d = call %struct.Memory* @routine_shrl__0x18___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f08d)
  store %struct.Memory* %call_43f08d, %struct.Memory** %MEMORY

  ; Code: andl $0xf, %ecx	 RIP: 43f090	 Bytes: 3
  %loadMem_43f090 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f090 = call %struct.Memory* @routine_andl__0xf___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f090)
  store %struct.Memory* %call_43f090, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %ecx	 RIP: 43f093	 Bytes: 3
  %loadMem_43f093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f093 = call %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f093)
  store %struct.Memory* %call_43f093, %struct.Memory** %MEMORY

  ; Code: jne .L_43f0d4	 RIP: 43f096	 Bytes: 6
  %loadMem_43f096 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f096 = call %struct.Memory* @routine_jne_.L_43f0d4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f096, i8* %BRANCH_TAKEN, i64 62, i64 6, i64 6)
  store %struct.Memory* %call_43f096, %struct.Memory** %MEMORY

  %loadBr_43f096 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f096 = icmp eq i8 %loadBr_43f096, 1
  br i1 %cmpBr_43f096, label %block_.L_43f0d4, label %block_43f09c

block_43f09c:
  ; Code: cmpl $0x0, 0xab0f28	 RIP: 43f09c	 Bytes: 8
  %loadMem_43f09c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f09c = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f09c)
  store %struct.Memory* %call_43f09c, %struct.Memory** %MEMORY

  ; Code: jne .L_43f0af	 RIP: 43f0a4	 Bytes: 6
  %loadMem_43f0a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f0a4 = call %struct.Memory* @routine_jne_.L_43f0af(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f0a4, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43f0a4, %struct.Memory** %MEMORY

  %loadBr_43f0a4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f0a4 = icmp eq i8 %loadBr_43f0a4, 1
  br i1 %cmpBr_43f0a4, label %block_.L_43f0af, label %block_43f0aa

block_43f0aa:
  ; Code: jmpq .L_43f0cf	 RIP: 43f0aa	 Bytes: 5
  %loadMem_43f0aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f0aa = call %struct.Memory* @routine_jmpq_.L_43f0cf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f0aa, i64 37, i64 5)
  store %struct.Memory* %call_43f0aa, %struct.Memory** %MEMORY

  br label %block_.L_43f0cf

  ; Code: .L_43f0af:	 RIP: 43f0af	 Bytes: 0
block_.L_43f0af:

  ; Code: movq $0x57de70, %rdi	 RIP: 43f0af	 Bytes: 10
  %loadMem_43f0af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f0af = call %struct.Memory* @routine_movq__0x57de70___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f0af)
  store %struct.Memory* %call_43f0af, %struct.Memory** %MEMORY

  ; Code: movl -0x6c4(%rbp), %esi	 RIP: 43f0b9	 Bytes: 6
  %loadMem_43f0b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f0b9 = call %struct.Memory* @routine_movl_MINUS0x6c4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f0b9)
  store %struct.Memory* %call_43f0b9, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %edx	 RIP: 43f0bf	 Bytes: 3
  %loadMem_43f0bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f0bf = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f0bf)
  store %struct.Memory* %call_43f0bf, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43f0c2	 Bytes: 2
  %loadMem_43f0c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f0c2 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f0c2)
  store %struct.Memory* %call_43f0c2, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 43f0c4	 Bytes: 5
  %loadMem1_43f0c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f0c4 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f0c4, i64 77036, i64 5, i64 5)
  store %struct.Memory* %call1_43f0c4, %struct.Memory** %MEMORY

  %loadMem2_43f0c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f0c4 = load i64, i64* %3
  %call2_43f0c4 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_43f0c4, %struct.Memory* %loadMem2_43f0c4)
  store %struct.Memory* %call2_43f0c4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd44(%rbp)	 RIP: 43f0c9	 Bytes: 6
  %loadMem_43f0c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f0c9 = call %struct.Memory* @routine_movl__eax__MINUS0xd44__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f0c9)
  store %struct.Memory* %call_43f0c9, %struct.Memory** %MEMORY

  ; Code: .L_43f0cf:	 RIP: 43f0cf	 Bytes: 0
  br label %block_.L_43f0cf
block_.L_43f0cf:

  ; Code: jmpq .L_43f180	 RIP: 43f0cf	 Bytes: 5
  %loadMem_43f0cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f0cf = call %struct.Memory* @routine_jmpq_.L_43f180(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f0cf, i64 177, i64 5)
  store %struct.Memory* %call_43f0cf, %struct.Memory** %MEMORY

  br label %block_.L_43f180

  ; Code: .L_43f0d4:	 RIP: 43f0d4	 Bytes: 0
block_.L_43f0d4:

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43f0d4	 Bytes: 7
  %loadMem_43f0d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f0d4 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f0d4)
  store %struct.Memory* %call_43f0d4, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 43f0db	 Bytes: 3
  %loadMem_43f0db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f0db = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f0db)
  store %struct.Memory* %call_43f0db, %struct.Memory** %MEMORY

  ; Code: shrl $0x18, %ecx	 RIP: 43f0de	 Bytes: 3
  %loadMem_43f0de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f0de = call %struct.Memory* @routine_shrl__0x18___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f0de)
  store %struct.Memory* %call_43f0de, %struct.Memory** %MEMORY

  ; Code: andl $0xf, %ecx	 RIP: 43f0e1	 Bytes: 3
  %loadMem_43f0e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f0e1 = call %struct.Memory* @routine_andl__0xf___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f0e1)
  store %struct.Memory* %call_43f0e1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 43f0e4	 Bytes: 3
  %loadMem_43f0e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f0e4 = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f0e4)
  store %struct.Memory* %call_43f0e4, %struct.Memory** %MEMORY

  ; Code: jne .L_43f125	 RIP: 43f0e7	 Bytes: 6
  %loadMem_43f0e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f0e7 = call %struct.Memory* @routine_jne_.L_43f125(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f0e7, i8* %BRANCH_TAKEN, i64 62, i64 6, i64 6)
  store %struct.Memory* %call_43f0e7, %struct.Memory** %MEMORY

  %loadBr_43f0e7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f0e7 = icmp eq i8 %loadBr_43f0e7, 1
  br i1 %cmpBr_43f0e7, label %block_.L_43f125, label %block_43f0ed

block_43f0ed:
  ; Code: cmpl $0x0, 0xab0f28	 RIP: 43f0ed	 Bytes: 8
  %loadMem_43f0ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f0ed = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f0ed)
  store %struct.Memory* %call_43f0ed, %struct.Memory** %MEMORY

  ; Code: jne .L_43f100	 RIP: 43f0f5	 Bytes: 6
  %loadMem_43f0f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f0f5 = call %struct.Memory* @routine_jne_.L_43f100(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f0f5, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43f0f5, %struct.Memory** %MEMORY

  %loadBr_43f0f5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f0f5 = icmp eq i8 %loadBr_43f0f5, 1
  br i1 %cmpBr_43f0f5, label %block_.L_43f100, label %block_43f0fb

block_43f0fb:
  ; Code: jmpq .L_43f120	 RIP: 43f0fb	 Bytes: 5
  %loadMem_43f0fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f0fb = call %struct.Memory* @routine_jmpq_.L_43f120(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f0fb, i64 37, i64 5)
  store %struct.Memory* %call_43f0fb, %struct.Memory** %MEMORY

  br label %block_.L_43f120

  ; Code: .L_43f100:	 RIP: 43f100	 Bytes: 0
block_.L_43f100:

  ; Code: movq $0x57de94, %rdi	 RIP: 43f100	 Bytes: 10
  %loadMem_43f100 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f100 = call %struct.Memory* @routine_movq__0x57de94___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f100)
  store %struct.Memory* %call_43f100, %struct.Memory** %MEMORY

  ; Code: movl -0x6c4(%rbp), %esi	 RIP: 43f10a	 Bytes: 6
  %loadMem_43f10a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f10a = call %struct.Memory* @routine_movl_MINUS0x6c4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f10a)
  store %struct.Memory* %call_43f10a, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %edx	 RIP: 43f110	 Bytes: 3
  %loadMem_43f110 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f110 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f110)
  store %struct.Memory* %call_43f110, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43f113	 Bytes: 2
  %loadMem_43f113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f113 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f113)
  store %struct.Memory* %call_43f113, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 43f115	 Bytes: 5
  %loadMem1_43f115 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f115 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f115, i64 76955, i64 5, i64 5)
  store %struct.Memory* %call1_43f115, %struct.Memory** %MEMORY

  %loadMem2_43f115 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f115 = load i64, i64* %3
  %call2_43f115 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_43f115, %struct.Memory* %loadMem2_43f115)
  store %struct.Memory* %call2_43f115, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd48(%rbp)	 RIP: 43f11a	 Bytes: 6
  %loadMem_43f11a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f11a = call %struct.Memory* @routine_movl__eax__MINUS0xd48__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f11a)
  store %struct.Memory* %call_43f11a, %struct.Memory** %MEMORY

  ; Code: .L_43f120:	 RIP: 43f120	 Bytes: 0
  br label %block_.L_43f120
block_.L_43f120:

  ; Code: jmpq .L_43f17b	 RIP: 43f120	 Bytes: 5
  %loadMem_43f120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f120 = call %struct.Memory* @routine_jmpq_.L_43f17b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f120, i64 91, i64 5)
  store %struct.Memory* %call_43f120, %struct.Memory** %MEMORY

  br label %block_.L_43f17b

  ; Code: .L_43f125:	 RIP: 43f125	 Bytes: 0
block_.L_43f125:

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43f125	 Bytes: 7
  %loadMem_43f125 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f125 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f125)
  store %struct.Memory* %call_43f125, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 43f12c	 Bytes: 3
  %loadMem_43f12c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f12c = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f12c)
  store %struct.Memory* %call_43f12c, %struct.Memory** %MEMORY

  ; Code: shrl $0x18, %ecx	 RIP: 43f12f	 Bytes: 3
  %loadMem_43f12f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f12f = call %struct.Memory* @routine_shrl__0x18___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f12f)
  store %struct.Memory* %call_43f12f, %struct.Memory** %MEMORY

  ; Code: andl $0xf, %ecx	 RIP: 43f132	 Bytes: 3
  %loadMem_43f132 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f132 = call %struct.Memory* @routine_andl__0xf___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f132)
  store %struct.Memory* %call_43f132, %struct.Memory** %MEMORY

  ; Code: cmpl $0x7, %ecx	 RIP: 43f135	 Bytes: 3
  %loadMem_43f135 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f135 = call %struct.Memory* @routine_cmpl__0x7___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f135)
  store %struct.Memory* %call_43f135, %struct.Memory** %MEMORY

  ; Code: jne .L_43f176	 RIP: 43f138	 Bytes: 6
  %loadMem_43f138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f138 = call %struct.Memory* @routine_jne_.L_43f176(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f138, i8* %BRANCH_TAKEN, i64 62, i64 6, i64 6)
  store %struct.Memory* %call_43f138, %struct.Memory** %MEMORY

  %loadBr_43f138 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f138 = icmp eq i8 %loadBr_43f138, 1
  br i1 %cmpBr_43f138, label %block_.L_43f176, label %block_43f13e

block_43f13e:
  ; Code: cmpl $0x0, 0xab0f28	 RIP: 43f13e	 Bytes: 8
  %loadMem_43f13e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f13e = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f13e)
  store %struct.Memory* %call_43f13e, %struct.Memory** %MEMORY

  ; Code: jne .L_43f151	 RIP: 43f146	 Bytes: 6
  %loadMem_43f146 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f146 = call %struct.Memory* @routine_jne_.L_43f151(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f146, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43f146, %struct.Memory** %MEMORY

  %loadBr_43f146 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f146 = icmp eq i8 %loadBr_43f146, 1
  br i1 %cmpBr_43f146, label %block_.L_43f151, label %block_43f14c

block_43f14c:
  ; Code: jmpq .L_43f171	 RIP: 43f14c	 Bytes: 5
  %loadMem_43f14c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f14c = call %struct.Memory* @routine_jmpq_.L_43f171(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f14c, i64 37, i64 5)
  store %struct.Memory* %call_43f14c, %struct.Memory** %MEMORY

  br label %block_.L_43f171

  ; Code: .L_43f151:	 RIP: 43f151	 Bytes: 0
block_.L_43f151:

  ; Code: movq $0x57deb7, %rdi	 RIP: 43f151	 Bytes: 10
  %loadMem_43f151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f151 = call %struct.Memory* @routine_movq__0x57deb7___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f151)
  store %struct.Memory* %call_43f151, %struct.Memory** %MEMORY

  ; Code: movl -0x6c4(%rbp), %esi	 RIP: 43f15b	 Bytes: 6
  %loadMem_43f15b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f15b = call %struct.Memory* @routine_movl_MINUS0x6c4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f15b)
  store %struct.Memory* %call_43f15b, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %edx	 RIP: 43f161	 Bytes: 3
  %loadMem_43f161 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f161 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f161)
  store %struct.Memory* %call_43f161, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43f164	 Bytes: 2
  %loadMem_43f164 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f164 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f164)
  store %struct.Memory* %call_43f164, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 43f166	 Bytes: 5
  %loadMem1_43f166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f166 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f166, i64 76874, i64 5, i64 5)
  store %struct.Memory* %call1_43f166, %struct.Memory** %MEMORY

  %loadMem2_43f166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f166 = load i64, i64* %3
  %call2_43f166 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_43f166, %struct.Memory* %loadMem2_43f166)
  store %struct.Memory* %call2_43f166, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd4c(%rbp)	 RIP: 43f16b	 Bytes: 6
  %loadMem_43f16b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f16b = call %struct.Memory* @routine_movl__eax__MINUS0xd4c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f16b)
  store %struct.Memory* %call_43f16b, %struct.Memory** %MEMORY

  ; Code: .L_43f171:	 RIP: 43f171	 Bytes: 0
  br label %block_.L_43f171
block_.L_43f171:

  ; Code: jmpq .L_43f176	 RIP: 43f171	 Bytes: 5
  %loadMem_43f171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f171 = call %struct.Memory* @routine_jmpq_.L_43f176(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f171, i64 5, i64 5)
  store %struct.Memory* %call_43f171, %struct.Memory** %MEMORY

  br label %block_.L_43f176

  ; Code: .L_43f176:	 RIP: 43f176	 Bytes: 0
block_.L_43f176:

  ; Code: jmpq .L_43f17b	 RIP: 43f176	 Bytes: 5
  %loadMem_43f176 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f176 = call %struct.Memory* @routine_jmpq_.L_43f17b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f176, i64 5, i64 5)
  store %struct.Memory* %call_43f176, %struct.Memory** %MEMORY

  br label %block_.L_43f17b

  ; Code: .L_43f17b:	 RIP: 43f17b	 Bytes: 0
block_.L_43f17b:

  ; Code: jmpq .L_43f180	 RIP: 43f17b	 Bytes: 5
  %loadMem_43f17b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f17b = call %struct.Memory* @routine_jmpq_.L_43f180(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f17b, i64 5, i64 5)
  store %struct.Memory* %call_43f17b, %struct.Memory** %MEMORY

  br label %block_.L_43f180

  ; Code: .L_43f180:	 RIP: 43f180	 Bytes: 0
block_.L_43f180:

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43f180	 Bytes: 7
  %loadMem_43f180 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f180 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f180)
  store %struct.Memory* %call_43f180, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 43f187	 Bytes: 3
  %loadMem_43f187 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f187 = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f187)
  store %struct.Memory* %call_43f187, %struct.Memory** %MEMORY

  ; Code: shrl $0x14, %ecx	 RIP: 43f18a	 Bytes: 3
  %loadMem_43f18a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f18a = call %struct.Memory* @routine_shrl__0x14___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f18a)
  store %struct.Memory* %call_43f18a, %struct.Memory** %MEMORY

  ; Code: andl $0xf, %ecx	 RIP: 43f18d	 Bytes: 3
  %loadMem_43f18d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f18d = call %struct.Memory* @routine_andl__0xf___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f18d)
  store %struct.Memory* %call_43f18d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x1, %ecx	 RIP: 43f190	 Bytes: 3
  %loadMem_43f190 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f190 = call %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f190)
  store %struct.Memory* %call_43f190, %struct.Memory** %MEMORY

  ; Code: jne .L_43f1d1	 RIP: 43f193	 Bytes: 6
  %loadMem_43f193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f193 = call %struct.Memory* @routine_jne_.L_43f1d1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f193, i8* %BRANCH_TAKEN, i64 62, i64 6, i64 6)
  store %struct.Memory* %call_43f193, %struct.Memory** %MEMORY

  %loadBr_43f193 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f193 = icmp eq i8 %loadBr_43f193, 1
  br i1 %cmpBr_43f193, label %block_.L_43f1d1, label %block_43f199

block_43f199:
  ; Code: cmpl $0x0, 0xab0f28	 RIP: 43f199	 Bytes: 8
  %loadMem_43f199 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f199 = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f199)
  store %struct.Memory* %call_43f199, %struct.Memory** %MEMORY

  ; Code: jne .L_43f1ac	 RIP: 43f1a1	 Bytes: 6
  %loadMem_43f1a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f1a1 = call %struct.Memory* @routine_jne_.L_43f1ac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f1a1, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43f1a1, %struct.Memory** %MEMORY

  %loadBr_43f1a1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f1a1 = icmp eq i8 %loadBr_43f1a1, 1
  br i1 %cmpBr_43f1a1, label %block_.L_43f1ac, label %block_43f1a7

block_43f1a7:
  ; Code: jmpq .L_43f1cc	 RIP: 43f1a7	 Bytes: 5
  %loadMem_43f1a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f1a7 = call %struct.Memory* @routine_jmpq_.L_43f1cc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f1a7, i64 37, i64 5)
  store %struct.Memory* %call_43f1a7, %struct.Memory** %MEMORY

  br label %block_.L_43f1cc

  ; Code: .L_43f1ac:	 RIP: 43f1ac	 Bytes: 0
block_.L_43f1ac:

  ; Code: movq $0x57de70, %rdi	 RIP: 43f1ac	 Bytes: 10
  %loadMem_43f1ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f1ac = call %struct.Memory* @routine_movq__0x57de70___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f1ac)
  store %struct.Memory* %call_43f1ac, %struct.Memory** %MEMORY

  ; Code: movl -0x6c4(%rbp), %esi	 RIP: 43f1b6	 Bytes: 6
  %loadMem_43f1b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f1b6 = call %struct.Memory* @routine_movl_MINUS0x6c4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f1b6)
  store %struct.Memory* %call_43f1b6, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %edx	 RIP: 43f1bc	 Bytes: 3
  %loadMem_43f1bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f1bc = call %struct.Memory* @routine_movl_MINUS0x20__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f1bc)
  store %struct.Memory* %call_43f1bc, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43f1bf	 Bytes: 2
  %loadMem_43f1bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f1bf = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f1bf)
  store %struct.Memory* %call_43f1bf, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 43f1c1	 Bytes: 5
  %loadMem1_43f1c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f1c1 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f1c1, i64 76783, i64 5, i64 5)
  store %struct.Memory* %call1_43f1c1, %struct.Memory** %MEMORY

  %loadMem2_43f1c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f1c1 = load i64, i64* %3
  %call2_43f1c1 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_43f1c1, %struct.Memory* %loadMem2_43f1c1)
  store %struct.Memory* %call2_43f1c1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd50(%rbp)	 RIP: 43f1c6	 Bytes: 6
  %loadMem_43f1c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f1c6 = call %struct.Memory* @routine_movl__eax__MINUS0xd50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f1c6)
  store %struct.Memory* %call_43f1c6, %struct.Memory** %MEMORY

  ; Code: .L_43f1cc:	 RIP: 43f1cc	 Bytes: 0
  br label %block_.L_43f1cc
block_.L_43f1cc:

  ; Code: jmpq .L_43f27d	 RIP: 43f1cc	 Bytes: 5
  %loadMem_43f1cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f1cc = call %struct.Memory* @routine_jmpq_.L_43f27d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f1cc, i64 177, i64 5)
  store %struct.Memory* %call_43f1cc, %struct.Memory** %MEMORY

  br label %block_.L_43f27d

  ; Code: .L_43f1d1:	 RIP: 43f1d1	 Bytes: 0
block_.L_43f1d1:

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43f1d1	 Bytes: 7
  %loadMem_43f1d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f1d1 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f1d1)
  store %struct.Memory* %call_43f1d1, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 43f1d8	 Bytes: 3
  %loadMem_43f1d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f1d8 = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f1d8)
  store %struct.Memory* %call_43f1d8, %struct.Memory** %MEMORY

  ; Code: shrl $0x14, %ecx	 RIP: 43f1db	 Bytes: 3
  %loadMem_43f1db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f1db = call %struct.Memory* @routine_shrl__0x14___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f1db)
  store %struct.Memory* %call_43f1db, %struct.Memory** %MEMORY

  ; Code: andl $0xf, %ecx	 RIP: 43f1de	 Bytes: 3
  %loadMem_43f1de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f1de = call %struct.Memory* @routine_andl__0xf___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f1de)
  store %struct.Memory* %call_43f1de, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 43f1e1	 Bytes: 3
  %loadMem_43f1e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f1e1 = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f1e1)
  store %struct.Memory* %call_43f1e1, %struct.Memory** %MEMORY

  ; Code: jne .L_43f222	 RIP: 43f1e4	 Bytes: 6
  %loadMem_43f1e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f1e4 = call %struct.Memory* @routine_jne_.L_43f222(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f1e4, i8* %BRANCH_TAKEN, i64 62, i64 6, i64 6)
  store %struct.Memory* %call_43f1e4, %struct.Memory** %MEMORY

  %loadBr_43f1e4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f1e4 = icmp eq i8 %loadBr_43f1e4, 1
  br i1 %cmpBr_43f1e4, label %block_.L_43f222, label %block_43f1ea

block_43f1ea:
  ; Code: cmpl $0x0, 0xab0f28	 RIP: 43f1ea	 Bytes: 8
  %loadMem_43f1ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f1ea = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f1ea)
  store %struct.Memory* %call_43f1ea, %struct.Memory** %MEMORY

  ; Code: jne .L_43f1fd	 RIP: 43f1f2	 Bytes: 6
  %loadMem_43f1f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f1f2 = call %struct.Memory* @routine_jne_.L_43f1fd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f1f2, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43f1f2, %struct.Memory** %MEMORY

  %loadBr_43f1f2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f1f2 = icmp eq i8 %loadBr_43f1f2, 1
  br i1 %cmpBr_43f1f2, label %block_.L_43f1fd, label %block_43f1f8

block_43f1f8:
  ; Code: jmpq .L_43f21d	 RIP: 43f1f8	 Bytes: 5
  %loadMem_43f1f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f1f8 = call %struct.Memory* @routine_jmpq_.L_43f21d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f1f8, i64 37, i64 5)
  store %struct.Memory* %call_43f1f8, %struct.Memory** %MEMORY

  br label %block_.L_43f21d

  ; Code: .L_43f1fd:	 RIP: 43f1fd	 Bytes: 0
block_.L_43f1fd:

  ; Code: movq $0x57de94, %rdi	 RIP: 43f1fd	 Bytes: 10
  %loadMem_43f1fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f1fd = call %struct.Memory* @routine_movq__0x57de94___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f1fd)
  store %struct.Memory* %call_43f1fd, %struct.Memory** %MEMORY

  ; Code: movl -0x6c4(%rbp), %esi	 RIP: 43f207	 Bytes: 6
  %loadMem_43f207 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f207 = call %struct.Memory* @routine_movl_MINUS0x6c4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f207)
  store %struct.Memory* %call_43f207, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %edx	 RIP: 43f20d	 Bytes: 3
  %loadMem_43f20d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f20d = call %struct.Memory* @routine_movl_MINUS0x20__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f20d)
  store %struct.Memory* %call_43f20d, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43f210	 Bytes: 2
  %loadMem_43f210 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f210 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f210)
  store %struct.Memory* %call_43f210, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 43f212	 Bytes: 5
  %loadMem1_43f212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f212 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f212, i64 76702, i64 5, i64 5)
  store %struct.Memory* %call1_43f212, %struct.Memory** %MEMORY

  %loadMem2_43f212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f212 = load i64, i64* %3
  %call2_43f212 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_43f212, %struct.Memory* %loadMem2_43f212)
  store %struct.Memory* %call2_43f212, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd54(%rbp)	 RIP: 43f217	 Bytes: 6
  %loadMem_43f217 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f217 = call %struct.Memory* @routine_movl__eax__MINUS0xd54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f217)
  store %struct.Memory* %call_43f217, %struct.Memory** %MEMORY

  ; Code: .L_43f21d:	 RIP: 43f21d	 Bytes: 0
  br label %block_.L_43f21d
block_.L_43f21d:

  ; Code: jmpq .L_43f278	 RIP: 43f21d	 Bytes: 5
  %loadMem_43f21d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f21d = call %struct.Memory* @routine_jmpq_.L_43f278(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f21d, i64 91, i64 5)
  store %struct.Memory* %call_43f21d, %struct.Memory** %MEMORY

  br label %block_.L_43f278

  ; Code: .L_43f222:	 RIP: 43f222	 Bytes: 0
block_.L_43f222:

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43f222	 Bytes: 7
  %loadMem_43f222 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f222 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f222)
  store %struct.Memory* %call_43f222, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 43f229	 Bytes: 3
  %loadMem_43f229 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f229 = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f229)
  store %struct.Memory* %call_43f229, %struct.Memory** %MEMORY

  ; Code: shrl $0x14, %ecx	 RIP: 43f22c	 Bytes: 3
  %loadMem_43f22c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f22c = call %struct.Memory* @routine_shrl__0x14___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f22c)
  store %struct.Memory* %call_43f22c, %struct.Memory** %MEMORY

  ; Code: andl $0xf, %ecx	 RIP: 43f22f	 Bytes: 3
  %loadMem_43f22f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f22f = call %struct.Memory* @routine_andl__0xf___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f22f)
  store %struct.Memory* %call_43f22f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x7, %ecx	 RIP: 43f232	 Bytes: 3
  %loadMem_43f232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f232 = call %struct.Memory* @routine_cmpl__0x7___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f232)
  store %struct.Memory* %call_43f232, %struct.Memory** %MEMORY

  ; Code: jne .L_43f273	 RIP: 43f235	 Bytes: 6
  %loadMem_43f235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f235 = call %struct.Memory* @routine_jne_.L_43f273(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f235, i8* %BRANCH_TAKEN, i64 62, i64 6, i64 6)
  store %struct.Memory* %call_43f235, %struct.Memory** %MEMORY

  %loadBr_43f235 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f235 = icmp eq i8 %loadBr_43f235, 1
  br i1 %cmpBr_43f235, label %block_.L_43f273, label %block_43f23b

block_43f23b:
  ; Code: cmpl $0x0, 0xab0f28	 RIP: 43f23b	 Bytes: 8
  %loadMem_43f23b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f23b = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f23b)
  store %struct.Memory* %call_43f23b, %struct.Memory** %MEMORY

  ; Code: jne .L_43f24e	 RIP: 43f243	 Bytes: 6
  %loadMem_43f243 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f243 = call %struct.Memory* @routine_jne_.L_43f24e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f243, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43f243, %struct.Memory** %MEMORY

  %loadBr_43f243 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f243 = icmp eq i8 %loadBr_43f243, 1
  br i1 %cmpBr_43f243, label %block_.L_43f24e, label %block_43f249

block_43f249:
  ; Code: jmpq .L_43f26e	 RIP: 43f249	 Bytes: 5
  %loadMem_43f249 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f249 = call %struct.Memory* @routine_jmpq_.L_43f26e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f249, i64 37, i64 5)
  store %struct.Memory* %call_43f249, %struct.Memory** %MEMORY

  br label %block_.L_43f26e

  ; Code: .L_43f24e:	 RIP: 43f24e	 Bytes: 0
block_.L_43f24e:

  ; Code: movq $0x57deb7, %rdi	 RIP: 43f24e	 Bytes: 10
  %loadMem_43f24e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f24e = call %struct.Memory* @routine_movq__0x57deb7___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f24e)
  store %struct.Memory* %call_43f24e, %struct.Memory** %MEMORY

  ; Code: movl -0x6c4(%rbp), %esi	 RIP: 43f258	 Bytes: 6
  %loadMem_43f258 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f258 = call %struct.Memory* @routine_movl_MINUS0x6c4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f258)
  store %struct.Memory* %call_43f258, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %edx	 RIP: 43f25e	 Bytes: 3
  %loadMem_43f25e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f25e = call %struct.Memory* @routine_movl_MINUS0x20__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f25e)
  store %struct.Memory* %call_43f25e, %struct.Memory** %MEMORY

  ; Code: movb $0x0, %al	 RIP: 43f261	 Bytes: 2
  %loadMem_43f261 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f261 = call %struct.Memory* @routine_movb__0x0___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f261)
  store %struct.Memory* %call_43f261, %struct.Memory** %MEMORY

  ; Code: callq .gprintf	 RIP: 43f263	 Bytes: 5
  %loadMem1_43f263 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f263 = call %struct.Memory* @routine_callq_.gprintf(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f263, i64 76621, i64 5, i64 5)
  store %struct.Memory* %call1_43f263, %struct.Memory** %MEMORY

  %loadMem2_43f263 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f263 = load i64, i64* %3
  %call2_43f263 = call %struct.Memory* @sub_451db0.gprintf(%struct.State* %0, i64  %loadPC_43f263, %struct.Memory* %loadMem2_43f263)
  store %struct.Memory* %call2_43f263, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd58(%rbp)	 RIP: 43f268	 Bytes: 6
  %loadMem_43f268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f268 = call %struct.Memory* @routine_movl__eax__MINUS0xd58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f268)
  store %struct.Memory* %call_43f268, %struct.Memory** %MEMORY

  ; Code: .L_43f26e:	 RIP: 43f26e	 Bytes: 0
  br label %block_.L_43f26e
block_.L_43f26e:

  ; Code: jmpq .L_43f273	 RIP: 43f26e	 Bytes: 5
  %loadMem_43f26e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f26e = call %struct.Memory* @routine_jmpq_.L_43f273(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f26e, i64 5, i64 5)
  store %struct.Memory* %call_43f26e, %struct.Memory** %MEMORY

  br label %block_.L_43f273

  ; Code: .L_43f273:	 RIP: 43f273	 Bytes: 0
block_.L_43f273:

  ; Code: jmpq .L_43f278	 RIP: 43f273	 Bytes: 5
  %loadMem_43f273 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f273 = call %struct.Memory* @routine_jmpq_.L_43f278(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f273, i64 5, i64 5)
  store %struct.Memory* %call_43f273, %struct.Memory** %MEMORY

  br label %block_.L_43f278

  ; Code: .L_43f278:	 RIP: 43f278	 Bytes: 0
block_.L_43f278:

  ; Code: jmpq .L_43f27d	 RIP: 43f278	 Bytes: 5
  %loadMem_43f278 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f278 = call %struct.Memory* @routine_jmpq_.L_43f27d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f278, i64 5, i64 5)
  store %struct.Memory* %call_43f278, %struct.Memory** %MEMORY

  br label %block_.L_43f27d

  ; Code: .L_43f27d:	 RIP: 43f27d	 Bytes: 0
block_.L_43f27d:

  ; Code: cmpq $0x0, 0xab0ef8	 RIP: 43f27d	 Bytes: 9
  %loadMem_43f27d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f27d = call %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f27d)
  store %struct.Memory* %call_43f27d, %struct.Memory** %MEMORY

  ; Code: je .L_43f2d4	 RIP: 43f286	 Bytes: 6
  %loadMem_43f286 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f286 = call %struct.Memory* @routine_je_.L_43f2d4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f286, i8* %BRANCH_TAKEN, i64 78, i64 6, i64 6)
  store %struct.Memory* %call_43f286, %struct.Memory** %MEMORY

  %loadBr_43f286 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f286 = icmp eq i8 %loadBr_43f286, 1
  br i1 %cmpBr_43f286, label %block_.L_43f2d4, label %block_43f28c

block_43f28c:
  ; Code: movq $0x57dee3, %r9	 RIP: 43f28c	 Bytes: 10
  %loadMem_43f28c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f28c = call %struct.Memory* @routine_movq__0x57dee3___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f28c)
  store %struct.Memory* %call_43f28c, %struct.Memory** %MEMORY

  ; Code: movq -0x6d0(%rbp), %rdi	 RIP: 43f296	 Bytes: 7
  %loadMem_43f296 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f296 = call %struct.Memory* @routine_movq_MINUS0x6d0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f296)
  store %struct.Memory* %call_43f296, %struct.Memory** %MEMORY

  ; Code: movl -0x6d4(%rbp), %esi	 RIP: 43f29d	 Bytes: 6
  %loadMem_43f29d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f29d = call %struct.Memory* @routine_movl_MINUS0x6d4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f29d)
  store %struct.Memory* %call_43f29d, %struct.Memory** %MEMORY

  ; Code: movl -0x6d8(%rbp), %edx	 RIP: 43f2a3	 Bytes: 6
  %loadMem_43f2a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2a3 = call %struct.Memory* @routine_movl_MINUS0x6d8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2a3)
  store %struct.Memory* %call_43f2a3, %struct.Memory** %MEMORY

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43f2a9	 Bytes: 7
  %loadMem_43f2a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2a9 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2a9)
  store %struct.Memory* %call_43f2a9, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 43f2b0	 Bytes: 3
  %loadMem_43f2b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2b0 = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2b0)
  store %struct.Memory* %call_43f2b0, %struct.Memory** %MEMORY

  ; Code: shrl $0xa, %ecx	 RIP: 43f2b3	 Bytes: 3
  %loadMem_43f2b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2b3 = call %struct.Memory* @routine_shrl__0xa___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2b3)
  store %struct.Memory* %call_43f2b3, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %ecx	 RIP: 43f2b6	 Bytes: 6
  %loadMem_43f2b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2b6 = call %struct.Memory* @routine_andl__0x3ff___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2b6)
  store %struct.Memory* %call_43f2b6, %struct.Memory** %MEMORY

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43f2bc	 Bytes: 7
  %loadMem_43f2bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2bc = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2bc)
  store %struct.Memory* %call_43f2bc, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %r8d	 RIP: 43f2c3	 Bytes: 4
  %loadMem_43f2c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2c3 = call %struct.Memory* @routine_movl_0x4__rax____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2c3)
  store %struct.Memory* %call_43f2c3, %struct.Memory** %MEMORY

  ; Code: shrl $0x18, %r8d	 RIP: 43f2c7	 Bytes: 4
  %loadMem_43f2c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2c7 = call %struct.Memory* @routine_shrl__0x18___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2c7)
  store %struct.Memory* %call_43f2c7, %struct.Memory** %MEMORY

  ; Code: andl $0xf, %r8d	 RIP: 43f2cb	 Bytes: 4
  %loadMem_43f2cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2cb = call %struct.Memory* @routine_andl__0xf___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2cb)
  store %struct.Memory* %call_43f2cb, %struct.Memory** %MEMORY

  ; Code: callq .sgf_trace2	 RIP: 43f2cf	 Bytes: 5
  %loadMem1_43f2cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f2cf = call %struct.Memory* @routine_callq_.sgf_trace2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f2cf, i64 -159663, i64 5, i64 5)
  store %struct.Memory* %call1_43f2cf, %struct.Memory** %MEMORY

  %loadMem2_43f2cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f2cf = load i64, i64* %3
  %call2_43f2cf = call %struct.Memory* @sub_418320.sgf_trace2(%struct.State* %0, i64  %loadPC_43f2cf, %struct.Memory* %loadMem2_43f2cf)
  store %struct.Memory* %call2_43f2cf, %struct.Memory** %MEMORY

  ; Code: .L_43f2d4:	 RIP: 43f2d4	 Bytes: 0
  br label %block_.L_43f2d4
block_.L_43f2d4:

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43f2d4	 Bytes: 7
  %loadMem_43f2d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2d4 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2d4)
  store %struct.Memory* %call_43f2d4, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 43f2db	 Bytes: 3
  %loadMem_43f2db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2db = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2db)
  store %struct.Memory* %call_43f2db, %struct.Memory** %MEMORY

  ; Code: shrl $0x18, %ecx	 RIP: 43f2de	 Bytes: 3
  %loadMem_43f2de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2de = call %struct.Memory* @routine_shrl__0x18___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2de)
  store %struct.Memory* %call_43f2de, %struct.Memory** %MEMORY

  ; Code: andl $0xf, %ecx	 RIP: 43f2e1	 Bytes: 3
  %loadMem_43f2e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2e1 = call %struct.Memory* @routine_andl__0xf___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2e1)
  store %struct.Memory* %call_43f2e1, %struct.Memory** %MEMORY

  ; Code: movq -0x40(%rbp), %rax	 RIP: 43f2e4	 Bytes: 4
  %loadMem_43f2e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2e4 = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2e4)
  store %struct.Memory* %call_43f2e4, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rax)	 RIP: 43f2e8	 Bytes: 2
  %loadMem_43f2e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2e8 = call %struct.Memory* @routine_movl__ecx____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2e8)
  store %struct.Memory* %call_43f2e8, %struct.Memory** %MEMORY

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43f2ea	 Bytes: 7
  %loadMem_43f2ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2ea = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2ea)
  store %struct.Memory* %call_43f2ea, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 43f2f1	 Bytes: 3
  %loadMem_43f2f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2f1 = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2f1)
  store %struct.Memory* %call_43f2f1, %struct.Memory** %MEMORY

  ; Code: shrl $0x14, %ecx	 RIP: 43f2f4	 Bytes: 3
  %loadMem_43f2f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2f4 = call %struct.Memory* @routine_shrl__0x14___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2f4)
  store %struct.Memory* %call_43f2f4, %struct.Memory** %MEMORY

  ; Code: andl $0xf, %ecx	 RIP: 43f2f7	 Bytes: 3
  %loadMem_43f2f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2f7 = call %struct.Memory* @routine_andl__0xf___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2f7)
  store %struct.Memory* %call_43f2f7, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rax	 RIP: 43f2fa	 Bytes: 4
  %loadMem_43f2fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2fa = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2fa)
  store %struct.Memory* %call_43f2fa, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rax)	 RIP: 43f2fe	 Bytes: 2
  %loadMem_43f2fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f2fe = call %struct.Memory* @routine_movl__ecx____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f2fe)
  store %struct.Memory* %call_43f2fe, %struct.Memory** %MEMORY

  ; Code: jmpq .L_441708	 RIP: 43f300	 Bytes: 5
  %loadMem_43f300 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f300 = call %struct.Memory* @routine_jmpq_.L_441708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f300, i64 9224, i64 5)
  store %struct.Memory* %call_43f300, %struct.Memory** %MEMORY

  br label %block_.L_441708

  ; Code: .L_43f305:	 RIP: 43f305	 Bytes: 0
block_.L_43f305:

  ; Code: jmpq .L_43f315	 RIP: 43f305	 Bytes: 5
  %loadMem_43f305 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f305 = call %struct.Memory* @routine_jmpq_.L_43f315(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f305, i64 16, i64 5)
  store %struct.Memory* %call_43f305, %struct.Memory** %MEMORY

  br label %block_.L_43f315

  ; Code: .L_43f30a:	 RIP: 43f30a	 Bytes: 0
block_.L_43f30a:

  ; Code: movq $0x0, -0x6c0(%rbp)	 RIP: 43f30a	 Bytes: 11
  %loadMem_43f30a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f30a = call %struct.Memory* @routine_movq__0x0__MINUS0x6c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f30a)
  store %struct.Memory* %call_43f30a, %struct.Memory** %MEMORY

  ; Code: .L_43f315:	 RIP: 43f315	 Bytes: 0
  br label %block_.L_43f315
block_.L_43f315:

  ; Code: movl $0x0, -0x300(%rbp)	 RIP: 43f315	 Bytes: 10
  %loadMem_43f315 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f315 = call %struct.Memory* @routine_movl__0x0__MINUS0x300__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f315)
  store %struct.Memory* %call_43f315, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x320(%rbp)	 RIP: 43f31f	 Bytes: 10
  %loadMem_43f31f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f31f = call %struct.Memory* @routine_movl__0x0__MINUS0x320__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f31f)
  store %struct.Memory* %call_43f31f, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x340(%rbp)	 RIP: 43f329	 Bytes: 10
  %loadMem_43f329 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f329 = call %struct.Memory* @routine_movl__0x0__MINUS0x340__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f329)
  store %struct.Memory* %call_43f329, %struct.Memory** %MEMORY

  ; Code: movq $0x0, 0xab0ef8	 RIP: 43f333	 Bytes: 12
  %loadMem_43f333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f333 = call %struct.Memory* @routine_movq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f333)
  store %struct.Memory* %call_43f333, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0xab0eec	 RIP: 43f33f	 Bytes: 11
  %loadMem_43f33f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f33f = call %struct.Memory* @routine_movl__0x0__0xab0eec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f33f)
  store %struct.Memory* %call_43f33f, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x684(%rbp)	 RIP: 43f34a	 Bytes: 10
  %loadMem_43f34a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f34a = call %struct.Memory* @routine_movl__0x0__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f34a)
  store %struct.Memory* %call_43f34a, %struct.Memory** %MEMORY

  ; Code: .L_43f354:	 RIP: 43f354	 Bytes: 0
  br label %block_.L_43f354
block_.L_43f354:

  ; Code: cmpl $0x6, -0x684(%rbp)	 RIP: 43f354	 Bytes: 7
  %loadMem_43f354 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f354 = call %struct.Memory* @routine_cmpl__0x6__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f354)
  store %struct.Memory* %call_43f354, %struct.Memory** %MEMORY

  ; Code: jge .L_43f3d9	 RIP: 43f35b	 Bytes: 6
  %loadMem_43f35b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f35b = call %struct.Memory* @routine_jge_.L_43f3d9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f35b, i8* %BRANCH_TAKEN, i64 126, i64 6, i64 6)
  store %struct.Memory* %call_43f35b, %struct.Memory** %MEMORY

  %loadBr_43f35b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f35b = icmp eq i8 %loadBr_43f35b, 1
  br i1 %cmpBr_43f35b, label %block_.L_43f3d9, label %block_43f361

block_43f361:
  ; Code: leaq -0x2e0(%rbp), %rax	 RIP: 43f361	 Bytes: 7
  %loadMem_43f361 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f361 = call %struct.Memory* @routine_leaq_MINUS0x2e0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f361)
  store %struct.Memory* %call_43f361, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 43f368	 Bytes: 7
  %loadMem_43f368 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f368 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f368)
  store %struct.Memory* %call_43f368, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 43f36f	 Bytes: 4
  %loadMem_43f36f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f36f = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f36f)
  store %struct.Memory* %call_43f36f, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 43f373	 Bytes: 3
  %loadMem_43f373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f373 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f373)
  store %struct.Memory* %call_43f373, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 43f376	 Bytes: 3
  %loadMem_43f376 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f376 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f376)
  store %struct.Memory* %call_43f376, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rdx)	 RIP: 43f379	 Bytes: 6
  %loadMem_43f379 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f379 = call %struct.Memory* @routine_movl__0x0____rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f379)
  store %struct.Memory* %call_43f379, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 43f37f	 Bytes: 7
  %loadMem_43f37f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f37f = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f37f)
  store %struct.Memory* %call_43f37f, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 43f386	 Bytes: 4
  %loadMem_43f386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f386 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f386)
  store %struct.Memory* %call_43f386, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 43f38a	 Bytes: 3
  %loadMem_43f38a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f38a = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f38a)
  store %struct.Memory* %call_43f38a, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 43f38d	 Bytes: 3
  %loadMem_43f38d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f38d = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f38d)
  store %struct.Memory* %call_43f38d, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, 0x4(%rdx)	 RIP: 43f390	 Bytes: 7
  %loadMem_43f390 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f390 = call %struct.Memory* @routine_movl__0xffffffff__0x4__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f390)
  store %struct.Memory* %call_43f390, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 43f397	 Bytes: 7
  %loadMem_43f397 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f397 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f397)
  store %struct.Memory* %call_43f397, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 43f39e	 Bytes: 4
  %loadMem_43f39e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f39e = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f39e)
  store %struct.Memory* %call_43f39e, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 43f3a2	 Bytes: 3
  %loadMem_43f3a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3a2 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3a2)
  store %struct.Memory* %call_43f3a2, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 43f3a5	 Bytes: 3
  %loadMem_43f3a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3a5 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3a5)
  store %struct.Memory* %call_43f3a5, %struct.Memory** %MEMORY

  ; Code: movq $0x0, 0x8(%rdx)	 RIP: 43f3a8	 Bytes: 8
  %loadMem_43f3a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3a8 = call %struct.Memory* @routine_movq__0x0__0x8__rdx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3a8)
  store %struct.Memory* %call_43f3a8, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 43f3b0	 Bytes: 7
  %loadMem_43f3b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3b0 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3b0)
  store %struct.Memory* %call_43f3b0, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 43f3b7	 Bytes: 4
  %loadMem_43f3b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3b7 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3b7)
  store %struct.Memory* %call_43f3b7, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43f3bb	 Bytes: 3
  %loadMem_43f3bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3bb = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3bb)
  store %struct.Memory* %call_43f3bb, %struct.Memory** %MEMORY

  ; Code: movl $0x2, 0x10(%rax)	 RIP: 43f3be	 Bytes: 7
  %loadMem_43f3be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3be = call %struct.Memory* @routine_movl__0x2__0x10__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3be)
  store %struct.Memory* %call_43f3be, %struct.Memory** %MEMORY

  ; Code: movl -0x684(%rbp), %eax	 RIP: 43f3c5	 Bytes: 6
  %loadMem_43f3c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3c5 = call %struct.Memory* @routine_movl_MINUS0x684__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3c5)
  store %struct.Memory* %call_43f3c5, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43f3cb	 Bytes: 3
  %loadMem_43f3cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3cb = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3cb)
  store %struct.Memory* %call_43f3cb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x684(%rbp)	 RIP: 43f3ce	 Bytes: 6
  %loadMem_43f3ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3ce = call %struct.Memory* @routine_movl__eax__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3ce)
  store %struct.Memory* %call_43f3ce, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43f354	 RIP: 43f3d4	 Bytes: 5
  %loadMem_43f3d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3d4 = call %struct.Memory* @routine_jmpq_.L_43f354(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3d4, i64 -128, i64 5)
  store %struct.Memory* %call_43f3d4, %struct.Memory** %MEMORY

  br label %block_.L_43f354

  ; Code: .L_43f3d9:	 RIP: 43f3d9	 Bytes: 0
block_.L_43f3d9:

  ; Code: movl -0x60(%rbp), %eax	 RIP: 43f3d9	 Bytes: 3
  %loadMem_43f3d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3d9 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3d9)
  store %struct.Memory* %call_43f3d9, %struct.Memory** %MEMORY

  ; Code: movslq -0x20(%rbp), %rcx	 RIP: 43f3dc	 Bytes: 4
  %loadMem_43f3dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3dc = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3dc)
  store %struct.Memory* %call_43f3dc, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %edx	 RIP: 43f3e0	 Bytes: 8
  %loadMem_43f3e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3e0 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3e0)
  store %struct.Memory* %call_43f3e0, %struct.Memory** %MEMORY

  ; Code: cmpl %edx, %eax	 RIP: 43f3e8	 Bytes: 2
  %loadMem_43f3e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3e8 = call %struct.Memory* @routine_cmpl__edx___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3e8)
  store %struct.Memory* %call_43f3e8, %struct.Memory** %MEMORY

  ; Code: jne .L_43f3f5	 RIP: 43f3ea	 Bytes: 6
  %loadMem_43f3ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3ea = call %struct.Memory* @routine_jne_.L_43f3f5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3ea, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43f3ea, %struct.Memory** %MEMORY

  %loadBr_43f3ea = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f3ea = icmp eq i8 %loadBr_43f3ea, 1
  br i1 %cmpBr_43f3ea, label %block_.L_43f3f5, label %block_43f3f0

block_43f3f0:
  ; Code: jmpq .L_43f41d	 RIP: 43f3f0	 Bytes: 5
  %loadMem_43f3f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3f0 = call %struct.Memory* @routine_jmpq_.L_43f41d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3f0, i64 45, i64 5)
  store %struct.Memory* %call_43f3f0, %struct.Memory** %MEMORY

  br label %block_.L_43f41d

  ; Code: .L_43f3f5:	 RIP: 43f3f5	 Bytes: 0
block_.L_43f3f5:

  ; Code: movq $0x57dd2e, %rdi	 RIP: 43f3f5	 Bytes: 10
  %loadMem_43f3f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3f5 = call %struct.Memory* @routine_movq__0x57dd2e___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3f5)
  store %struct.Memory* %call_43f3f5, %struct.Memory** %MEMORY

  ; Code: movl $0x19c, %esi	 RIP: 43f3ff	 Bytes: 5
  %loadMem_43f3ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f3ff = call %struct.Memory* @routine_movl__0x19c___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f3ff)
  store %struct.Memory* %call_43f3ff, %struct.Memory** %MEMORY

  ; Code: movq $0x57deea, %rdx	 RIP: 43f404	 Bytes: 10
  %loadMem_43f404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f404 = call %struct.Memory* @routine_movq__0x57deea___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f404)
  store %struct.Memory* %call_43f404, %struct.Memory** %MEMORY

  ; Code: movl $0xffffffff, %eax	 RIP: 43f40e	 Bytes: 5
  %loadMem_43f40e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f40e = call %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f40e)
  store %struct.Memory* %call_43f40e, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 43f413	 Bytes: 2
  %loadMem_43f413 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f413 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f413)
  store %struct.Memory* %call_43f413, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r8d	 RIP: 43f415	 Bytes: 3
  %loadMem_43f415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f415 = call %struct.Memory* @routine_movl__eax___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f415)
  store %struct.Memory* %call_43f415, %struct.Memory** %MEMORY

  ; Code: callq .abortgo	 RIP: 43f418	 Bytes: 5
  %loadMem1_43f418 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f418 = call %struct.Memory* @routine_callq_.abortgo(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f418, i64 76920, i64 5, i64 5)
  store %struct.Memory* %call1_43f418, %struct.Memory** %MEMORY

  %loadMem2_43f418 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f418 = load i64, i64* %3
  %call2_43f418 = call %struct.Memory* @sub_452090.abortgo(%struct.State* %0, i64  %loadPC_43f418, %struct.Memory* %loadMem2_43f418)
  store %struct.Memory* %call2_43f418, %struct.Memory** %MEMORY

  ; Code: .L_43f41d:	 RIP: 43f41d	 Bytes: 0
  br label %block_.L_43f41d
block_.L_43f41d:

  ; Code: xorl %esi, %esi	 RIP: 43f41d	 Bytes: 2
  %loadMem_43f41d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f41d = call %struct.Memory* @routine_xorl__esi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f41d)
  store %struct.Memory* %call_43f41d, %struct.Memory** %MEMORY

  ; Code: movl $0x190, %eax	 RIP: 43f41f	 Bytes: 5
  %loadMem_43f41f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f41f = call %struct.Memory* @routine_movl__0x190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f41f)
  store %struct.Memory* %call_43f41f, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 43f424	 Bytes: 2
  %loadMem_43f424 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f424 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f424)
  store %struct.Memory* %call_43f424, %struct.Memory** %MEMORY

  ; Code: leaq -0x680(%rbp), %rdi	 RIP: 43f426	 Bytes: 7
  %loadMem_43f426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f426 = call %struct.Memory* @routine_leaq_MINUS0x680__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f426)
  store %struct.Memory* %call_43f426, %struct.Memory** %MEMORY

  ; Code: callq .memset_plt	 RIP: 43f42d	 Bytes: 5
  %loadMem1_43f42d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f42d = call %struct.Memory* @routine_callq_.memset_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f42d, i64 -254909, i64 5, i64 5)
  store %struct.Memory* %call1_43f42d, %struct.Memory** %MEMORY

  %loadMem2_43f42d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f42d = load i64, i64* %3
  %call2_43f42d = call %struct.Memory* @ext_memset(%struct.State* %0, i64  %loadPC_43f42d, %struct.Memory* %loadMem2_43f42d)
  store %struct.Memory* %call2_43f42d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x58(%rbp)	 RIP: 43f432	 Bytes: 4
  %loadMem_43f432 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f432 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f432)
  store %struct.Memory* %call_43f432, %struct.Memory** %MEMORY

  ; Code: je .L_4408c9	 RIP: 43f436	 Bytes: 6
  %loadMem_43f436 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f436 = call %struct.Memory* @routine_je_.L_4408c9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f436, i8* %BRANCH_TAKEN, i64 5267, i64 6, i64 6)
  store %struct.Memory* %call_43f436, %struct.Memory** %MEMORY

  %loadBr_43f436 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f436 = icmp eq i8 %loadBr_43f436, 1
  br i1 %cmpBr_43f436, label %block_.L_4408c9, label %block_43f43c

block_43f43c:
  ; Code: movq -0x28(%rbp), %rdi	 RIP: 43f43c	 Bytes: 4
  %loadMem_43f43c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f43c = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f43c)
  store %struct.Memory* %call_43f43c, %struct.Memory** %MEMORY

  ; Code: callq .owl_find_lunches	 RIP: 43f440	 Bytes: 5
  %loadMem1_43f440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f440 = call %struct.Memory* @routine_callq_.owl_find_lunches(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f440, i64 8928, i64 5, i64 5)
  store %struct.Memory* %call1_43f440, %struct.Memory** %MEMORY

  %loadMem2_43f440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f440 = load i64, i64* %3
  %call2_43f440 = call %struct.Memory* @sub_441720.owl_find_lunches(%struct.State* %0, i64  %loadPC_43f440, %struct.Memory* %loadMem2_43f440)
  store %struct.Memory* %call2_43f440, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rdi	 RIP: 43f445	 Bytes: 4
  %loadMem_43f445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f445 = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f445)
  store %struct.Memory* %call_43f445, %struct.Memory** %MEMORY

  ; Code: callq .owl_find_lunches	 RIP: 43f449	 Bytes: 5
  %loadMem1_43f449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f449 = call %struct.Memory* @routine_callq_.owl_find_lunches(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f449, i64 8919, i64 5, i64 5)
  store %struct.Memory* %call1_43f449, %struct.Memory** %MEMORY

  %loadMem2_43f449 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f449 = load i64, i64* %3
  %call2_43f449 = call %struct.Memory* @sub_441720.owl_find_lunches(%struct.State* %0, i64  %loadPC_43f449, %struct.Memory* %loadMem2_43f449)
  store %struct.Memory* %call2_43f449, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x684(%rbp)	 RIP: 43f44e	 Bytes: 10
  %loadMem_43f44e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f44e = call %struct.Memory* @routine_movl__0x0__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f44e)
  store %struct.Memory* %call_43f44e, %struct.Memory** %MEMORY

  ; Code: .L_43f458:	 RIP: 43f458	 Bytes: 0
  br label %block_.L_43f458
block_.L_43f458:

  ; Code: cmpl $0xa, -0x684(%rbp)	 RIP: 43f458	 Bytes: 7
  %loadMem_43f458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f458 = call %struct.Memory* @routine_cmpl__0xa__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f458)
  store %struct.Memory* %call_43f458, %struct.Memory** %MEMORY

  ; Code: jge .L_43f4d1	 RIP: 43f45f	 Bytes: 6
  %loadMem_43f45f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f45f = call %struct.Memory* @routine_jge_.L_43f4d1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f45f, i8* %BRANCH_TAKEN, i64 114, i64 6, i64 6)
  store %struct.Memory* %call_43f45f, %struct.Memory** %MEMORY

  %loadBr_43f45f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f45f = icmp eq i8 %loadBr_43f45f, 1
  br i1 %cmpBr_43f45f, label %block_.L_43f4d1, label %block_43f465

block_43f465:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 43f465	 Bytes: 4
  %loadMem_43f465 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f465 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f465)
  store %struct.Memory* %call_43f465, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 43f469	 Bytes: 7
  %loadMem_43f469 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f469 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f469)
  store %struct.Memory* %call_43f469, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, 0x87f4(%rax,%rcx,4)	 RIP: 43f470	 Bytes: 8
  %loadMem_43f470 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f470 = call %struct.Memory* @routine_cmpl__0x0__0x87f4__rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f470)
  store %struct.Memory* %call_43f470, %struct.Memory** %MEMORY

  ; Code: je .L_43f4b8	 RIP: 43f478	 Bytes: 6
  %loadMem_43f478 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f478 = call %struct.Memory* @routine_je_.L_43f4b8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f478, i8* %BRANCH_TAKEN, i64 64, i64 6, i64 6)
  store %struct.Memory* %call_43f478, %struct.Memory** %MEMORY

  %loadBr_43f478 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f478 = icmp eq i8 %loadBr_43f478, 1
  br i1 %cmpBr_43f478, label %block_.L_43f4b8, label %block_43f47e

block_43f47e:
  ; Code: movq -0x30(%rbp), %rax	 RIP: 43f47e	 Bytes: 4
  %loadMem_43f47e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f47e = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f47e)
  store %struct.Memory* %call_43f47e, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rcx	 RIP: 43f482	 Bytes: 4
  %loadMem_43f482 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f482 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f482)
  store %struct.Memory* %call_43f482, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rdx	 RIP: 43f486	 Bytes: 7
  %loadMem_43f486 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f486 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f486)
  store %struct.Memory* %call_43f486, %struct.Memory** %MEMORY

  ; Code: movslq 0x87f4(%rcx,%rdx,4), %rcx	 RIP: 43f48d	 Bytes: 8
  %loadMem_43f48d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f48d = call %struct.Memory* @routine_movslq_0x87f4__rcx__rdx_4____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f48d)
  store %struct.Memory* %call_43f48d, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax,%rcx,1), %esi	 RIP: 43f495	 Bytes: 4
  %loadMem_43f495 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f495 = call %struct.Memory* @routine_movsbl___rax__rcx_1____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f495)
  store %struct.Memory* %call_43f495, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %esi	 RIP: 43f499	 Bytes: 3
  %loadMem_43f499 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f499 = call %struct.Memory* @routine_cmpl__0x0___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f499)
  store %struct.Memory* %call_43f499, %struct.Memory** %MEMORY

  ; Code: je .L_43f4b8	 RIP: 43f49c	 Bytes: 6
  %loadMem_43f49c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f49c = call %struct.Memory* @routine_je_.L_43f4b8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f49c, i8* %BRANCH_TAKEN, i64 28, i64 6, i64 6)
  store %struct.Memory* %call_43f49c, %struct.Memory** %MEMORY

  %loadBr_43f49c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f49c = icmp eq i8 %loadBr_43f49c, 1
  br i1 %cmpBr_43f49c, label %block_.L_43f4b8, label %block_43f4a2

block_43f4a2:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 43f4a2	 Bytes: 4
  %loadMem_43f4a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4a2 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4a2)
  store %struct.Memory* %call_43f4a2, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 43f4a6	 Bytes: 7
  %loadMem_43f4a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4a6 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4a6)
  store %struct.Memory* %call_43f4a6, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x87f4(%rax,%rcx,4)	 RIP: 43f4ad	 Bytes: 11
  %loadMem_43f4ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4ad = call %struct.Memory* @routine_movl__0x0__0x87f4__rax__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4ad)
  store %struct.Memory* %call_43f4ad, %struct.Memory** %MEMORY

  ; Code: .L_43f4b8:	 RIP: 43f4b8	 Bytes: 0
  br label %block_.L_43f4b8
block_.L_43f4b8:

  ; Code: jmpq .L_43f4bd	 RIP: 43f4b8	 Bytes: 5
  %loadMem_43f4b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4b8 = call %struct.Memory* @routine_jmpq_.L_43f4bd(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4b8, i64 5, i64 5)
  store %struct.Memory* %call_43f4b8, %struct.Memory** %MEMORY

  br label %block_.L_43f4bd

  ; Code: .L_43f4bd:	 RIP: 43f4bd	 Bytes: 0
block_.L_43f4bd:

  ; Code: movl -0x684(%rbp), %eax	 RIP: 43f4bd	 Bytes: 6
  %loadMem_43f4bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4bd = call %struct.Memory* @routine_movl_MINUS0x684__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4bd)
  store %struct.Memory* %call_43f4bd, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43f4c3	 Bytes: 3
  %loadMem_43f4c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4c3 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4c3)
  store %struct.Memory* %call_43f4c3, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x684(%rbp)	 RIP: 43f4c6	 Bytes: 6
  %loadMem_43f4c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4c6 = call %struct.Memory* @routine_movl__eax__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4c6)
  store %struct.Memory* %call_43f4c6, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43f458	 RIP: 43f4cc	 Bytes: 5
  %loadMem_43f4cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4cc = call %struct.Memory* @routine_jmpq_.L_43f458(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4cc, i64 -116, i64 5)
  store %struct.Memory* %call_43f4cc, %struct.Memory** %MEMORY

  br label %block_.L_43f458

  ; Code: .L_43f4d1:	 RIP: 43f4d1	 Bytes: 0
block_.L_43f4d1:

  ; Code: movl $0x1, %ecx	 RIP: 43f4d1	 Bytes: 5
  %loadMem_43f4d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4d1 = call %struct.Memory* @routine_movl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4d1)
  store %struct.Memory* %call_43f4d1, %struct.Memory** %MEMORY

  ; Code: leaq -0x6e0(%rbp), %r9	 RIP: 43f4d6	 Bytes: 7
  %loadMem_43f4d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4d6 = call %struct.Memory* @routine_leaq_MINUS0x6e0__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4d6)
  store %struct.Memory* %call_43f4d6, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 43f4dd	 Bytes: 2
  %loadMem_43f4dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4dd = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4dd)
  store %struct.Memory* %call_43f4dd, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 43f4df	 Bytes: 2
  %loadMem_43f4df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4df = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4df)
  store %struct.Memory* %call_43f4df, %struct.Memory** %MEMORY

  ; Code: leaq -0xc0(%rbp), %r8	 RIP: 43f4e1	 Bytes: 7
  %loadMem_43f4e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4e1 = call %struct.Memory* @routine_leaq_MINUS0xc0__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4e1)
  store %struct.Memory* %call_43f4e1, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rdi	 RIP: 43f4e8	 Bytes: 4
  %loadMem_43f4e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4e8 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4e8)
  store %struct.Memory* %call_43f4e8, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rsi	 RIP: 43f4ec	 Bytes: 4
  %loadMem_43f4ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4ec = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4ec)
  store %struct.Memory* %call_43f4ec, %struct.Memory** %MEMORY

  ; Code: movl -0x34(%rbp), %eax	 RIP: 43f4f0	 Bytes: 3
  %loadMem_43f4f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4f0 = call %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4f0)
  store %struct.Memory* %call_43f4f0, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0xd60(%rbp)	 RIP: 43f4f3	 Bytes: 7
  %loadMem_43f4f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4f3 = call %struct.Memory* @routine_movq__rdx__MINUS0xd60__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4f3)
  store %struct.Memory* %call_43f4f3, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 43f4fa	 Bytes: 2
  %loadMem_43f4fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4fa = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4fa)
  store %struct.Memory* %call_43f4fa, %struct.Memory** %MEMORY

  ; Code: movq $0x0, (%rsp)	 RIP: 43f4fc	 Bytes: 8
  %loadMem_43f4fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f4fc = call %struct.Memory* @routine_movq__0x0____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f4fc)
  store %struct.Memory* %call_43f4fc, %struct.Memory** %MEMORY

  ; Code: movq $0x0, 0x8(%rsp)	 RIP: 43f504	 Bytes: 9
  %loadMem_43f504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f504 = call %struct.Memory* @routine_movq__0x0__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f504)
  store %struct.Memory* %call_43f504, %struct.Memory** %MEMORY

  ; Code: callq .owl_determine_life	 RIP: 43f50d	 Bytes: 5
  %loadMem1_43f50d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f50d = call %struct.Memory* @routine_callq_.owl_determine_life(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f50d, i64 10723, i64 5, i64 5)
  store %struct.Memory* %call1_43f50d, %struct.Memory** %MEMORY

  %loadMem2_43f50d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f50d = load i64, i64* %3
  %call2_43f50d = call %struct.Memory* @sub_441ef0.owl_determine_life(%struct.State* %0, i64  %loadPC_43f50d, %struct.Memory* %loadMem2_43f50d)
  store %struct.Memory* %call2_43f50d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x9, 0x7ae448	 RIP: 43f512	 Bytes: 8
  %loadMem_43f512 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f512 = call %struct.Memory* @routine_cmpl__0x9__0x7ae448(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f512)
  store %struct.Memory* %call_43f512, %struct.Memory** %MEMORY

  ; Code: jl .L_43f5f3	 RIP: 43f51a	 Bytes: 6
  %loadMem_43f51a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f51a = call %struct.Memory* @routine_jl_.L_43f5f3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f51a, i8* %BRANCH_TAKEN, i64 217, i64 6, i64 6)
  store %struct.Memory* %call_43f51a, %struct.Memory** %MEMORY

  %loadBr_43f51a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f51a = icmp eq i8 %loadBr_43f51a, 1
  br i1 %cmpBr_43f51a, label %block_.L_43f5f3, label %block_43f520

block_43f520:
  ; Code: movq $0x443270, %rdi	 RIP: 43f520	 Bytes: 10
  %loadMem_43f520 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f520 = call %struct.Memory* @routine_movq__0x443270___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f520)
  store %struct.Memory* %call_43f520, %struct.Memory** %MEMORY

  ; Code: movq $0x941118, %rdx	 RIP: 43f52a	 Bytes: 10
  %loadMem_43f52a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f52a = call %struct.Memory* @routine_movq__0x941118___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f52a)
  store %struct.Memory* %call_43f52a, %struct.Memory** %MEMORY

  ; Code: leaq -0xc0(%rbp), %rax	 RIP: 43f534	 Bytes: 7
  %loadMem_43f534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f534 = call %struct.Memory* @routine_leaq_MINUS0xc0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f534)
  store %struct.Memory* %call_43f534, %struct.Memory** %MEMORY

  ; Code: movq $0xac22f0, %rcx	 RIP: 43f53b	 Bytes: 10
  %loadMem_43f53b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f53b = call %struct.Memory* @routine_movq__0xac22f0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f53b)
  store %struct.Memory* %call_43f53b, %struct.Memory** %MEMORY

  ; Code: xorl %esi, %esi	 RIP: 43f545	 Bytes: 2
  %loadMem_43f545 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f545 = call %struct.Memory* @routine_xorl__esi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f545)
  store %struct.Memory* %call_43f545, %struct.Memory** %MEMORY

  ; Code: movl $0x190, %r8d	 RIP: 43f547	 Bytes: 6
  %loadMem_43f547 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f547 = call %struct.Memory* @routine_movl__0x190___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f547)
  store %struct.Memory* %call_43f547, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %r9d	 RIP: 43f54d	 Bytes: 3
  %loadMem_43f54d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f54d = call %struct.Memory* @routine_movl__r8d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f54d)
  store %struct.Memory* %call_43f54d, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %r10	 RIP: 43f550	 Bytes: 4
  %loadMem_43f550 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f550 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f550)
  store %struct.Memory* %call_43f550, %struct.Memory** %MEMORY

  ; Code: movq %r10, 0xac22d8	 RIP: 43f554	 Bytes: 8
  %loadMem_43f554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f554 = call %struct.Memory* @routine_movq__r10__0xac22d8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f554)
  store %struct.Memory* %call_43f554, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0xac22e0	 RIP: 43f55c	 Bytes: 11
  %loadMem_43f55c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f55c = call %struct.Memory* @routine_movl__0x0__0xac22e0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f55c)
  store %struct.Memory* %call_43f55c, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0xd68(%rbp)	 RIP: 43f567	 Bytes: 7
  %loadMem_43f567 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f567 = call %struct.Memory* @routine_movq__rdi__MINUS0xd68__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f567)
  store %struct.Memory* %call_43f567, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdi	 RIP: 43f56e	 Bytes: 3
  %loadMem_43f56e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f56e = call %struct.Memory* @routine_movq__rcx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f56e)
  store %struct.Memory* %call_43f56e, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0xd70(%rbp)	 RIP: 43f571	 Bytes: 7
  %loadMem_43f571 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f571 = call %struct.Memory* @routine_movq__rdx__MINUS0xd70__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f571)
  store %struct.Memory* %call_43f571, %struct.Memory** %MEMORY

  ; Code: movq %r9, %rdx	 RIP: 43f578	 Bytes: 3
  %loadMem_43f578 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f578 = call %struct.Memory* @routine_movq__r9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f578)
  store %struct.Memory* %call_43f578, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0xd78(%rbp)	 RIP: 43f57b	 Bytes: 7
  %loadMem_43f57b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f57b = call %struct.Memory* @routine_movq__rax__MINUS0xd78__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f57b)
  store %struct.Memory* %call_43f57b, %struct.Memory** %MEMORY

  ; Code: callq .memset_plt	 RIP: 43f582	 Bytes: 5
  %loadMem1_43f582 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f582 = call %struct.Memory* @routine_callq_.memset_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f582, i64 -255250, i64 5, i64 5)
  store %struct.Memory* %call1_43f582, %struct.Memory** %MEMORY

  %loadMem2_43f582 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f582 = load i64, i64* %3
  %call2_43f582 = call %struct.Memory* @ext_memset(%struct.State* %0, i64  %loadPC_43f582, %struct.Memory* %loadMem2_43f582)
  store %struct.Memory* %call2_43f582, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %esi	 RIP: 43f587	 Bytes: 3
  %loadMem_43f587 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f587 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f587)
  store %struct.Memory* %call_43f587, %struct.Memory** %MEMORY

  ; Code: movq -0xd78(%rbp), %rax	 RIP: 43f58a	 Bytes: 7
  %loadMem_43f58a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f58a = call %struct.Memory* @routine_movq_MINUS0xd78__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f58a)
  store %struct.Memory* %call_43f58a, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %r8	 RIP: 43f591	 Bytes: 4
  %loadMem_43f591 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f591 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f591)
  store %struct.Memory* %call_43f591, %struct.Memory** %MEMORY

  ; Code: movq -0xd68(%rbp), %rdi	 RIP: 43f595	 Bytes: 7
  %loadMem_43f595 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f595 = call %struct.Memory* @routine_movq_MINUS0xd68__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f595)
  store %struct.Memory* %call_43f595, %struct.Memory** %MEMORY

  ; Code: movq -0xd70(%rbp), %rdx	 RIP: 43f59c	 Bytes: 7
  %loadMem_43f59c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f59c = call %struct.Memory* @routine_movq_MINUS0xd70__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f59c)
  store %struct.Memory* %call_43f59c, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rcx	 RIP: 43f5a3	 Bytes: 3
  %loadMem_43f5a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f5a3 = call %struct.Memory* @routine_movq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f5a3)
  store %struct.Memory* %call_43f5a3, %struct.Memory** %MEMORY

  ; Code: callq .matchpat	 RIP: 43f5a6	 Bytes: 5
  %loadMem1_43f5a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f5a6 = call %struct.Memory* @routine_callq_.matchpat(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f5a6, i64 -64086, i64 5, i64 5)
  store %struct.Memory* %call1_43f5a6, %struct.Memory** %MEMORY

  %loadMem2_43f5a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f5a6 = load i64, i64* %3
  %call2_43f5a6 = call %struct.Memory* @sub_42fb50.matchpat(%struct.State* %0, i64  %loadPC_43f5a6, %struct.Memory* %loadMem2_43f5a6)
  store %struct.Memory* %call2_43f5a6, %struct.Memory** %MEMORY

  ; Code: movzbl -0x6df(%rbp), %esi	 RIP: 43f5ab	 Bytes: 7
  %loadMem_43f5ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f5ab = call %struct.Memory* @routine_movzbl_MINUS0x6df__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f5ab)
  store %struct.Memory* %call_43f5ab, %struct.Memory** %MEMORY

  ; Code: cmpl 0xac22e0, %esi	 RIP: 43f5b2	 Bytes: 7
  %loadMem_43f5b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f5b2 = call %struct.Memory* @routine_cmpl_0xac22e0___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f5b2)
  store %struct.Memory* %call_43f5b2, %struct.Memory** %MEMORY

  ; Code: jle .L_43f5dc	 RIP: 43f5b9	 Bytes: 6
  %loadMem_43f5b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f5b9 = call %struct.Memory* @routine_jle_.L_43f5dc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f5b9, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_43f5b9, %struct.Memory** %MEMORY

  %loadBr_43f5b9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f5b9 = icmp eq i8 %loadBr_43f5b9, 1
  br i1 %cmpBr_43f5b9, label %block_.L_43f5dc, label %block_43f5bf

block_43f5bf:
  ; Code: movl 0xac22e0, %eax	 RIP: 43f5bf	 Bytes: 7
  %loadMem_43f5bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f5bf = call %struct.Memory* @routine_movl_0xac22e0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f5bf)
  store %struct.Memory* %call_43f5bf, %struct.Memory** %MEMORY

  ; Code: movzbl -0x6df(%rbp), %ecx	 RIP: 43f5c6	 Bytes: 7
  %loadMem_43f5c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f5c6 = call %struct.Memory* @routine_movzbl_MINUS0x6df__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f5c6)
  store %struct.Memory* %call_43f5c6, %struct.Memory** %MEMORY

  ; Code: subl %eax, %ecx	 RIP: 43f5cd	 Bytes: 2
  %loadMem_43f5cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f5cd = call %struct.Memory* @routine_subl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f5cd)
  store %struct.Memory* %call_43f5cd, %struct.Memory** %MEMORY

  ; Code: movb %cl, %dl	 RIP: 43f5cf	 Bytes: 2
  %loadMem_43f5cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f5cf = call %struct.Memory* @routine_movb__cl___dl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f5cf)
  store %struct.Memory* %call_43f5cf, %struct.Memory** %MEMORY

  ; Code: movb %dl, -0x6df(%rbp)	 RIP: 43f5d1	 Bytes: 6
  %loadMem_43f5d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f5d1 = call %struct.Memory* @routine_movb__dl__MINUS0x6df__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f5d1)
  store %struct.Memory* %call_43f5d1, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43f5ee	 RIP: 43f5d7	 Bytes: 5
  %loadMem_43f5d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f5d7 = call %struct.Memory* @routine_jmpq_.L_43f5ee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f5d7, i64 23, i64 5)
  store %struct.Memory* %call_43f5d7, %struct.Memory** %MEMORY

  br label %block_.L_43f5ee

  ; Code: .L_43f5dc:	 RIP: 43f5dc	 Bytes: 0
block_.L_43f5dc:

  ; Code: movzbl -0x6df(%rbp), %eax	 RIP: 43f5dc	 Bytes: 7
  %loadMem_43f5dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f5dc = call %struct.Memory* @routine_movzbl_MINUS0x6df__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f5dc)
  store %struct.Memory* %call_43f5dc, %struct.Memory** %MEMORY

  ; Code: subl $0x0, %eax	 RIP: 43f5e3	 Bytes: 3
  %loadMem_43f5e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f5e3 = call %struct.Memory* @routine_subl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f5e3)
  store %struct.Memory* %call_43f5e3, %struct.Memory** %MEMORY

  ; Code: movb %al, %cl	 RIP: 43f5e6	 Bytes: 2
  %loadMem_43f5e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f5e6 = call %struct.Memory* @routine_movb__al___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f5e6)
  store %struct.Memory* %call_43f5e6, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0x6df(%rbp)	 RIP: 43f5e8	 Bytes: 6
  %loadMem_43f5e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f5e8 = call %struct.Memory* @routine_movb__cl__MINUS0x6df__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f5e8)
  store %struct.Memory* %call_43f5e8, %struct.Memory** %MEMORY

  ; Code: .L_43f5ee:	 RIP: 43f5ee	 Bytes: 0
  br label %block_.L_43f5ee
block_.L_43f5ee:

  ; Code: jmpq .L_43f5f3	 RIP: 43f5ee	 Bytes: 5
  %loadMem_43f5ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f5ee = call %struct.Memory* @routine_jmpq_.L_43f5f3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f5ee, i64 5, i64 5)
  store %struct.Memory* %call_43f5ee, %struct.Memory** %MEMORY

  br label %block_.L_43f5f3

  ; Code: .L_43f5f3:	 RIP: 43f5f3	 Bytes: 0
block_.L_43f5f3:

  ; Code: movl $0x1, %ecx	 RIP: 43f5f3	 Bytes: 5
  %loadMem_43f5f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f5f3 = call %struct.Memory* @routine_movl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f5f3)
  store %struct.Memory* %call_43f5f3, %struct.Memory** %MEMORY

  ; Code: leaq -0x6e8(%rbp), %r9	 RIP: 43f5f8	 Bytes: 7
  %loadMem_43f5f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f5f8 = call %struct.Memory* @routine_leaq_MINUS0x6e8__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f5f8)
  store %struct.Memory* %call_43f5f8, %struct.Memory** %MEMORY

  ; Code: xorl %eax, %eax	 RIP: 43f5ff	 Bytes: 2
  %loadMem_43f5ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f5ff = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f5ff)
  store %struct.Memory* %call_43f5ff, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 43f601	 Bytes: 2
  %loadMem_43f601 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f601 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f601)
  store %struct.Memory* %call_43f601, %struct.Memory** %MEMORY

  ; Code: leaq -0x120(%rbp), %r8	 RIP: 43f603	 Bytes: 7
  %loadMem_43f603 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f603 = call %struct.Memory* @routine_leaq_MINUS0x120__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f603)
  store %struct.Memory* %call_43f603, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rdi	 RIP: 43f60a	 Bytes: 4
  %loadMem_43f60a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f60a = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f60a)
  store %struct.Memory* %call_43f60a, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rsi	 RIP: 43f60e	 Bytes: 4
  %loadMem_43f60e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f60e = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f60e)
  store %struct.Memory* %call_43f60e, %struct.Memory** %MEMORY

  ; Code: movl -0x34(%rbp), %eax	 RIP: 43f612	 Bytes: 3
  %loadMem_43f612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f612 = call %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f612)
  store %struct.Memory* %call_43f612, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0xd80(%rbp)	 RIP: 43f615	 Bytes: 7
  %loadMem_43f615 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f615 = call %struct.Memory* @routine_movq__rdx__MINUS0xd80__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f615)
  store %struct.Memory* %call_43f615, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 43f61c	 Bytes: 2
  %loadMem_43f61c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f61c = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f61c)
  store %struct.Memory* %call_43f61c, %struct.Memory** %MEMORY

  ; Code: movq $0x0, (%rsp)	 RIP: 43f61e	 Bytes: 8
  %loadMem_43f61e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f61e = call %struct.Memory* @routine_movq__0x0____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f61e)
  store %struct.Memory* %call_43f61e, %struct.Memory** %MEMORY

  ; Code: movq $0x0, 0x8(%rsp)	 RIP: 43f626	 Bytes: 9
  %loadMem_43f626 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f626 = call %struct.Memory* @routine_movq__0x0__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f626)
  store %struct.Memory* %call_43f626, %struct.Memory** %MEMORY

  ; Code: callq .owl_determine_life	 RIP: 43f62f	 Bytes: 5
  %loadMem1_43f62f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f62f = call %struct.Memory* @routine_callq_.owl_determine_life(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f62f, i64 10433, i64 5, i64 5)
  store %struct.Memory* %call1_43f62f, %struct.Memory** %MEMORY

  %loadMem2_43f62f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f62f = load i64, i64* %3
  %call2_43f62f = call %struct.Memory* @sub_441ef0.owl_determine_life(%struct.State* %0, i64  %loadPC_43f62f, %struct.Memory* %loadMem2_43f62f)
  store %struct.Memory* %call2_43f62f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x9, 0x7ae448	 RIP: 43f634	 Bytes: 8
  %loadMem_43f634 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f634 = call %struct.Memory* @routine_cmpl__0x9__0x7ae448(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f634)
  store %struct.Memory* %call_43f634, %struct.Memory** %MEMORY

  ; Code: jl .L_43f70a	 RIP: 43f63c	 Bytes: 6
  %loadMem_43f63c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f63c = call %struct.Memory* @routine_jl_.L_43f70a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f63c, i8* %BRANCH_TAKEN, i64 206, i64 6, i64 6)
  store %struct.Memory* %call_43f63c, %struct.Memory** %MEMORY

  %loadBr_43f63c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f63c = icmp eq i8 %loadBr_43f63c, 1
  br i1 %cmpBr_43f63c, label %block_.L_43f70a, label %block_43f642

block_43f642:
  ; Code: movq $0x443270, %rdi	 RIP: 43f642	 Bytes: 10
  %loadMem_43f642 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f642 = call %struct.Memory* @routine_movq__0x443270___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f642)
  store %struct.Memory* %call_43f642, %struct.Memory** %MEMORY

  ; Code: movq $0x941118, %rdx	 RIP: 43f64c	 Bytes: 10
  %loadMem_43f64c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f64c = call %struct.Memory* @routine_movq__0x941118___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f64c)
  store %struct.Memory* %call_43f64c, %struct.Memory** %MEMORY

  ; Code: leaq -0x120(%rbp), %rax	 RIP: 43f656	 Bytes: 7
  %loadMem_43f656 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f656 = call %struct.Memory* @routine_leaq_MINUS0x120__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f656)
  store %struct.Memory* %call_43f656, %struct.Memory** %MEMORY

  ; Code: movq $0xac22f0, %rcx	 RIP: 43f65d	 Bytes: 10
  %loadMem_43f65d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f65d = call %struct.Memory* @routine_movq__0xac22f0___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f65d)
  store %struct.Memory* %call_43f65d, %struct.Memory** %MEMORY

  ; Code: xorl %esi, %esi	 RIP: 43f667	 Bytes: 2
  %loadMem_43f667 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f667 = call %struct.Memory* @routine_xorl__esi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f667)
  store %struct.Memory* %call_43f667, %struct.Memory** %MEMORY

  ; Code: movl $0x190, %r8d	 RIP: 43f669	 Bytes: 6
  %loadMem_43f669 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f669 = call %struct.Memory* @routine_movl__0x190___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f669)
  store %struct.Memory* %call_43f669, %struct.Memory** %MEMORY

  ; Code: movl %r8d, %r9d	 RIP: 43f66f	 Bytes: 3
  %loadMem_43f66f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f66f = call %struct.Memory* @routine_movl__r8d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f66f)
  store %struct.Memory* %call_43f66f, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %r10	 RIP: 43f672	 Bytes: 4
  %loadMem_43f672 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f672 = call %struct.Memory* @routine_movq_MINUS0x30__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f672)
  store %struct.Memory* %call_43f672, %struct.Memory** %MEMORY

  ; Code: movq %r10, 0xac22d8	 RIP: 43f676	 Bytes: 8
  %loadMem_43f676 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f676 = call %struct.Memory* @routine_movq__r10__0xac22d8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f676)
  store %struct.Memory* %call_43f676, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0xac22e0	 RIP: 43f67e	 Bytes: 11
  %loadMem_43f67e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f67e = call %struct.Memory* @routine_movl__0x0__0xac22e0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f67e)
  store %struct.Memory* %call_43f67e, %struct.Memory** %MEMORY

  ; Code: movq %rdi, -0xd88(%rbp)	 RIP: 43f689	 Bytes: 7
  %loadMem_43f689 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f689 = call %struct.Memory* @routine_movq__rdi__MINUS0xd88__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f689)
  store %struct.Memory* %call_43f689, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdi	 RIP: 43f690	 Bytes: 3
  %loadMem_43f690 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f690 = call %struct.Memory* @routine_movq__rcx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f690)
  store %struct.Memory* %call_43f690, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0xd90(%rbp)	 RIP: 43f693	 Bytes: 7
  %loadMem_43f693 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f693 = call %struct.Memory* @routine_movq__rdx__MINUS0xd90__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f693)
  store %struct.Memory* %call_43f693, %struct.Memory** %MEMORY

  ; Code: movq %r9, %rdx	 RIP: 43f69a	 Bytes: 3
  %loadMem_43f69a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f69a = call %struct.Memory* @routine_movq__r9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f69a)
  store %struct.Memory* %call_43f69a, %struct.Memory** %MEMORY

  ; Code: movq %rax, -0xd98(%rbp)	 RIP: 43f69d	 Bytes: 7
  %loadMem_43f69d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f69d = call %struct.Memory* @routine_movq__rax__MINUS0xd98__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f69d)
  store %struct.Memory* %call_43f69d, %struct.Memory** %MEMORY

  ; Code: callq .memset_plt	 RIP: 43f6a4	 Bytes: 5
  %loadMem1_43f6a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f6a4 = call %struct.Memory* @routine_callq_.memset_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f6a4, i64 -255540, i64 5, i64 5)
  store %struct.Memory* %call1_43f6a4, %struct.Memory** %MEMORY

  %loadMem2_43f6a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f6a4 = load i64, i64* %3
  %call2_43f6a4 = call %struct.Memory* @ext_memset(%struct.State* %0, i64  %loadPC_43f6a4, %struct.Memory* %loadMem2_43f6a4)
  store %struct.Memory* %call2_43f6a4, %struct.Memory** %MEMORY

  ; Code: movl -0x60(%rbp), %esi	 RIP: 43f6a9	 Bytes: 3
  %loadMem_43f6a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f6a9 = call %struct.Memory* @routine_movl_MINUS0x60__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f6a9)
  store %struct.Memory* %call_43f6a9, %struct.Memory** %MEMORY

  ; Code: movq -0xd98(%rbp), %rax	 RIP: 43f6ac	 Bytes: 7
  %loadMem_43f6ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f6ac = call %struct.Memory* @routine_movq_MINUS0xd98__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f6ac)
  store %struct.Memory* %call_43f6ac, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %r8	 RIP: 43f6b3	 Bytes: 4
  %loadMem_43f6b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f6b3 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f6b3)
  store %struct.Memory* %call_43f6b3, %struct.Memory** %MEMORY

  ; Code: movq -0xd88(%rbp), %rdi	 RIP: 43f6b7	 Bytes: 7
  %loadMem_43f6b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f6b7 = call %struct.Memory* @routine_movq_MINUS0xd88__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f6b7)
  store %struct.Memory* %call_43f6b7, %struct.Memory** %MEMORY

  ; Code: movq -0xd90(%rbp), %rdx	 RIP: 43f6be	 Bytes: 7
  %loadMem_43f6be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f6be = call %struct.Memory* @routine_movq_MINUS0xd90__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f6be)
  store %struct.Memory* %call_43f6be, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rcx	 RIP: 43f6c5	 Bytes: 3
  %loadMem_43f6c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f6c5 = call %struct.Memory* @routine_movq__rax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f6c5)
  store %struct.Memory* %call_43f6c5, %struct.Memory** %MEMORY

  ; Code: callq .matchpat	 RIP: 43f6c8	 Bytes: 5
  %loadMem1_43f6c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f6c8 = call %struct.Memory* @routine_callq_.matchpat(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f6c8, i64 -64376, i64 5, i64 5)
  store %struct.Memory* %call1_43f6c8, %struct.Memory** %MEMORY

  %loadMem2_43f6c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f6c8 = load i64, i64* %3
  %call2_43f6c8 = call %struct.Memory* @sub_42fb50.matchpat(%struct.State* %0, i64  %loadPC_43f6c8, %struct.Memory* %loadMem2_43f6c8)
  store %struct.Memory* %call2_43f6c8, %struct.Memory** %MEMORY

  ; Code: movzbl -0x6e7(%rbp), %esi	 RIP: 43f6cd	 Bytes: 7
  %loadMem_43f6cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f6cd = call %struct.Memory* @routine_movzbl_MINUS0x6e7__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f6cd)
  store %struct.Memory* %call_43f6cd, %struct.Memory** %MEMORY

  ; Code: cmpl 0xac22e0, %esi	 RIP: 43f6d4	 Bytes: 7
  %loadMem_43f6d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f6d4 = call %struct.Memory* @routine_cmpl_0xac22e0___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f6d4)
  store %struct.Memory* %call_43f6d4, %struct.Memory** %MEMORY

  ; Code: jle .L_43f6fe	 RIP: 43f6db	 Bytes: 6
  %loadMem_43f6db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f6db = call %struct.Memory* @routine_jle_.L_43f6fe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f6db, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_43f6db, %struct.Memory** %MEMORY

  %loadBr_43f6db = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f6db = icmp eq i8 %loadBr_43f6db, 1
  br i1 %cmpBr_43f6db, label %block_.L_43f6fe, label %block_43f6e1

block_43f6e1:
  ; Code: movl 0xac22e0, %eax	 RIP: 43f6e1	 Bytes: 7
  %loadMem_43f6e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f6e1 = call %struct.Memory* @routine_movl_0xac22e0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f6e1)
  store %struct.Memory* %call_43f6e1, %struct.Memory** %MEMORY

  ; Code: movzbl -0x6e7(%rbp), %ecx	 RIP: 43f6e8	 Bytes: 7
  %loadMem_43f6e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f6e8 = call %struct.Memory* @routine_movzbl_MINUS0x6e7__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f6e8)
  store %struct.Memory* %call_43f6e8, %struct.Memory** %MEMORY

  ; Code: subl %eax, %ecx	 RIP: 43f6ef	 Bytes: 2
  %loadMem_43f6ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f6ef = call %struct.Memory* @routine_subl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f6ef)
  store %struct.Memory* %call_43f6ef, %struct.Memory** %MEMORY

  ; Code: movb %cl, %dl	 RIP: 43f6f1	 Bytes: 2
  %loadMem_43f6f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f6f1 = call %struct.Memory* @routine_movb__cl___dl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f6f1)
  store %struct.Memory* %call_43f6f1, %struct.Memory** %MEMORY

  ; Code: movb %dl, -0x6e7(%rbp)	 RIP: 43f6f3	 Bytes: 6
  %loadMem_43f6f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f6f3 = call %struct.Memory* @routine_movb__dl__MINUS0x6e7__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f6f3)
  store %struct.Memory* %call_43f6f3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43f705	 RIP: 43f6f9	 Bytes: 5
  %loadMem_43f6f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f6f9 = call %struct.Memory* @routine_jmpq_.L_43f705(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f6f9, i64 12, i64 5)
  store %struct.Memory* %call_43f6f9, %struct.Memory** %MEMORY

  br label %block_.L_43f705

  ; Code: .L_43f6fe:	 RIP: 43f6fe	 Bytes: 0
block_.L_43f6fe:

  ; Code: movb $0x0, -0x6e7(%rbp)	 RIP: 43f6fe	 Bytes: 7
  %loadMem_43f6fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f6fe = call %struct.Memory* @routine_movb__0x0__MINUS0x6e7__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f6fe)
  store %struct.Memory* %call_43f6fe, %struct.Memory** %MEMORY

  ; Code: .L_43f705:	 RIP: 43f705	 Bytes: 0
  br label %block_.L_43f705
block_.L_43f705:

  ; Code: jmpq .L_43f70a	 RIP: 43f705	 Bytes: 5
  %loadMem_43f705 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f705 = call %struct.Memory* @routine_jmpq_.L_43f70a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f705, i64 5, i64 5)
  store %struct.Memory* %call_43f705, %struct.Memory** %MEMORY

  br label %block_.L_43f70a

  ; Code: .L_43f70a:	 RIP: 43f70a	 Bytes: 0
block_.L_43f70a:

  ; Code: leaq -0x6e0(%rbp), %rdi	 RIP: 43f70a	 Bytes: 7
  %loadMem_43f70a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f70a = call %struct.Memory* @routine_leaq_MINUS0x6e0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f70a)
  store %struct.Memory* %call_43f70a, %struct.Memory** %MEMORY

  ; Code: callq .min_eyes	 RIP: 43f711	 Bytes: 5
  %loadMem1_43f711 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f711 = call %struct.Memory* @routine_callq_.min_eyes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f711, i64 -15393, i64 5, i64 5)
  store %struct.Memory* %call1_43f711, %struct.Memory** %MEMORY

  %loadMem2_43f711 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f711 = load i64, i64* %3
  %call2_43f711 = call %struct.Memory* @sub_43baf0.min_eyes(%struct.State* %0, i64  %loadPC_43f711, %struct.Memory* %loadMem2_43f711)
  store %struct.Memory* %call2_43f711, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 43f716	 Bytes: 3
  %loadMem_43f716 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f716 = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f716)
  store %struct.Memory* %call_43f716, %struct.Memory** %MEMORY

  ; Code: jl .L_43f852	 RIP: 43f719	 Bytes: 6
  %loadMem_43f719 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f719 = call %struct.Memory* @routine_jl_.L_43f852(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f719, i8* %BRANCH_TAKEN, i64 313, i64 6, i64 6)
  store %struct.Memory* %call_43f719, %struct.Memory** %MEMORY

  %loadBr_43f719 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f719 = icmp eq i8 %loadBr_43f719, 1
  br i1 %cmpBr_43f719, label %block_.L_43f852, label %block_43f71f

block_43f71f:
  ; Code: leaq -0x6e8(%rbp), %rdi	 RIP: 43f71f	 Bytes: 7
  %loadMem_43f71f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f71f = call %struct.Memory* @routine_leaq_MINUS0x6e8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f71f)
  store %struct.Memory* %call_43f71f, %struct.Memory** %MEMORY

  ; Code: callq .max_eyes	 RIP: 43f726	 Bytes: 5
  %loadMem1_43f726 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f726 = call %struct.Memory* @routine_callq_.max_eyes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f726, i64 -18198, i64 5, i64 5)
  store %struct.Memory* %call1_43f726, %struct.Memory** %MEMORY

  %loadMem2_43f726 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f726 = load i64, i64* %3
  %call2_43f726 = call %struct.Memory* @sub_43b010.max_eyes(%struct.State* %0, i64  %loadPC_43f726, %struct.Memory* %loadMem2_43f726)
  store %struct.Memory* %call2_43f726, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 43f72b	 Bytes: 3
  %loadMem_43f72b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f72b = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f72b)
  store %struct.Memory* %call_43f72b, %struct.Memory** %MEMORY

  ; Code: jge .L_43f852	 RIP: 43f72e	 Bytes: 6
  %loadMem_43f72e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f72e = call %struct.Memory* @routine_jge_.L_43f852(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f72e, i8* %BRANCH_TAKEN, i64 292, i64 6, i64 6)
  store %struct.Memory* %call_43f72e, %struct.Memory** %MEMORY

  %loadBr_43f72e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f72e = icmp eq i8 %loadBr_43f72e, 1
  br i1 %cmpBr_43f72e, label %block_.L_43f852, label %block_43f734

block_43f734:
  ; Code: leaq -0x6e8(%rbp), %rdi	 RIP: 43f734	 Bytes: 7
  %loadMem_43f734 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f734 = call %struct.Memory* @routine_leaq_MINUS0x6e8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f734)
  store %struct.Memory* %call_43f734, %struct.Memory** %MEMORY

  ; Code: movq -0x40(%rbp), %rax	 RIP: 43f73b	 Bytes: 4
  %loadMem_43f73b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f73b = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f73b)
  store %struct.Memory* %call_43f73b, %struct.Memory** %MEMORY

  ; Code: movl $0x1, (%rax)	 RIP: 43f73f	 Bytes: 6
  %loadMem_43f73f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f73f = call %struct.Memory* @routine_movl__0x1____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f73f)
  store %struct.Memory* %call_43f73f, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rax	 RIP: 43f745	 Bytes: 4
  %loadMem_43f745 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f745 = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f745)
  store %struct.Memory* %call_43f745, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 43f749	 Bytes: 6
  %loadMem_43f749 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f749 = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f749)
  store %struct.Memory* %call_43f749, %struct.Memory** %MEMORY

  ; Code: movq -0x50(%rbp), %rax	 RIP: 43f74f	 Bytes: 4
  %loadMem_43f74f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f74f = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f74f)
  store %struct.Memory* %call_43f74f, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 43f753	 Bytes: 6
  %loadMem_43f753 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f753 = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f753)
  store %struct.Memory* %call_43f753, %struct.Memory** %MEMORY

  ; Code: movq -0x698(%rbp), %rax	 RIP: 43f759	 Bytes: 7
  %loadMem_43f759 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f759 = call %struct.Memory* @routine_movq_MINUS0x698__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f759)
  store %struct.Memory* %call_43f759, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0xab0ef8	 RIP: 43f760	 Bytes: 8
  %loadMem_43f760 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f760 = call %struct.Memory* @routine_movq__rax__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f760)
  store %struct.Memory* %call_43f760, %struct.Memory** %MEMORY

  ; Code: movl -0x69c(%rbp), %ecx	 RIP: 43f768	 Bytes: 6
  %loadMem_43f768 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f768 = call %struct.Memory* @routine_movl_MINUS0x69c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f768)
  store %struct.Memory* %call_43f768, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0xab0eec	 RIP: 43f76e	 Bytes: 7
  %loadMem_43f76e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f76e = call %struct.Memory* @routine_movl__ecx__0xab0eec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f76e)
  store %struct.Memory* %call_43f76e, %struct.Memory** %MEMORY

  ; Code: callq .max_eyes	 RIP: 43f775	 Bytes: 5
  %loadMem1_43f775 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f775 = call %struct.Memory* @routine_callq_.max_eyes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f775, i64 -18277, i64 5, i64 5)
  store %struct.Memory* %call1_43f775, %struct.Memory** %MEMORY

  %loadMem2_43f775 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f775 = load i64, i64* %3
  %call2_43f775 = call %struct.Memory* @sub_43b010.max_eyes(%struct.State* %0, i64  %loadPC_43f775, %struct.Memory* %loadMem2_43f775)
  store %struct.Memory* %call2_43f775, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43f77a	 Bytes: 3
  %loadMem_43f77a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f77a = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f77a)
  store %struct.Memory* %call_43f77a, %struct.Memory** %MEMORY

  ; Code: jne .L_43f7c1	 RIP: 43f77d	 Bytes: 6
  %loadMem_43f77d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f77d = call %struct.Memory* @routine_jne_.L_43f7c1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f77d, i8* %BRANCH_TAKEN, i64 68, i64 6, i64 6)
  store %struct.Memory* %call_43f77d, %struct.Memory** %MEMORY

  %loadBr_43f77d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f77d = icmp eq i8 %loadBr_43f77d, 1
  br i1 %cmpBr_43f77d, label %block_.L_43f7c1, label %block_43f783

block_43f783:
  ; Code: cmpq $0x0, 0xab0ef8	 RIP: 43f783	 Bytes: 9
  %loadMem_43f783 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f783 = call %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f783)
  store %struct.Memory* %call_43f783, %struct.Memory** %MEMORY

  ; Code: je .L_43f7bc	 RIP: 43f78c	 Bytes: 6
  %loadMem_43f78c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f78c = call %struct.Memory* @routine_je_.L_43f7bc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f78c, i8* %BRANCH_TAKEN, i64 48, i64 6, i64 6)
  store %struct.Memory* %call_43f78c, %struct.Memory** %MEMORY

  %loadBr_43f78c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f78c = icmp eq i8 %loadBr_43f78c, 1
  br i1 %cmpBr_43f78c, label %block_.L_43f7bc, label %block_43f792

block_43f792:
  ; Code: xorl %ecx, %ecx	 RIP: 43f792	 Bytes: 2
  %loadMem_43f792 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f792 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f792)
  store %struct.Memory* %call_43f792, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %r8d	 RIP: 43f794	 Bytes: 6
  %loadMem_43f794 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f794 = call %struct.Memory* @routine_movl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f794)
  store %struct.Memory* %call_43f794, %struct.Memory** %MEMORY

  ; Code: movq $0x57deff, %r9	 RIP: 43f79a	 Bytes: 10
  %loadMem_43f79a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f79a = call %struct.Memory* @routine_movq__0x57deff___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f79a)
  store %struct.Memory* %call_43f79a, %struct.Memory** %MEMORY

  ; Code: movq -0x6d0(%rbp), %rdi	 RIP: 43f7a4	 Bytes: 7
  %loadMem_43f7a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f7a4 = call %struct.Memory* @routine_movq_MINUS0x6d0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f7a4)
  store %struct.Memory* %call_43f7a4, %struct.Memory** %MEMORY

  ; Code: movl -0x6d4(%rbp), %esi	 RIP: 43f7ab	 Bytes: 6
  %loadMem_43f7ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f7ab = call %struct.Memory* @routine_movl_MINUS0x6d4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f7ab)
  store %struct.Memory* %call_43f7ab, %struct.Memory** %MEMORY

  ; Code: movl -0x6d8(%rbp), %edx	 RIP: 43f7b1	 Bytes: 6
  %loadMem_43f7b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f7b1 = call %struct.Memory* @routine_movl_MINUS0x6d8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f7b1)
  store %struct.Memory* %call_43f7b1, %struct.Memory** %MEMORY

  ; Code: callq .sgf_trace2	 RIP: 43f7b7	 Bytes: 5
  %loadMem1_43f7b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f7b7 = call %struct.Memory* @routine_callq_.sgf_trace2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f7b7, i64 -160919, i64 5, i64 5)
  store %struct.Memory* %call1_43f7b7, %struct.Memory** %MEMORY

  %loadMem2_43f7b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f7b7 = load i64, i64* %3
  %call2_43f7b7 = call %struct.Memory* @sub_418320.sgf_trace2(%struct.State* %0, i64  %loadPC_43f7b7, %struct.Memory* %loadMem2_43f7b7)
  store %struct.Memory* %call2_43f7b7, %struct.Memory** %MEMORY

  ; Code: .L_43f7bc:	 RIP: 43f7bc	 Bytes: 0
  br label %block_.L_43f7bc
block_.L_43f7bc:

  ; Code: jmpq .L_43f7ff	 RIP: 43f7bc	 Bytes: 5
  %loadMem_43f7bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f7bc = call %struct.Memory* @routine_jmpq_.L_43f7ff(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f7bc, i64 67, i64 5)
  store %struct.Memory* %call_43f7bc, %struct.Memory** %MEMORY

  br label %block_.L_43f7ff

  ; Code: .L_43f7c1:	 RIP: 43f7c1	 Bytes: 0
block_.L_43f7c1:

  ; Code: cmpq $0x0, 0xab0ef8	 RIP: 43f7c1	 Bytes: 9
  %loadMem_43f7c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f7c1 = call %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f7c1)
  store %struct.Memory* %call_43f7c1, %struct.Memory** %MEMORY

  ; Code: je .L_43f7fa	 RIP: 43f7ca	 Bytes: 6
  %loadMem_43f7ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f7ca = call %struct.Memory* @routine_je_.L_43f7fa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f7ca, i8* %BRANCH_TAKEN, i64 48, i64 6, i64 6)
  store %struct.Memory* %call_43f7ca, %struct.Memory** %MEMORY

  %loadBr_43f7ca = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f7ca = icmp eq i8 %loadBr_43f7ca, 1
  br i1 %cmpBr_43f7ca, label %block_.L_43f7fa, label %block_43f7d0

block_43f7d0:
  ; Code: xorl %ecx, %ecx	 RIP: 43f7d0	 Bytes: 2
  %loadMem_43f7d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f7d0 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f7d0)
  store %struct.Memory* %call_43f7d0, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %r8d	 RIP: 43f7d2	 Bytes: 6
  %loadMem_43f7d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f7d2 = call %struct.Memory* @routine_movl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f7d2)
  store %struct.Memory* %call_43f7d2, %struct.Memory** %MEMORY

  ; Code: movq $0x57df14, %r9	 RIP: 43f7d8	 Bytes: 10
  %loadMem_43f7d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f7d8 = call %struct.Memory* @routine_movq__0x57df14___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f7d8)
  store %struct.Memory* %call_43f7d8, %struct.Memory** %MEMORY

  ; Code: movq -0x6d0(%rbp), %rdi	 RIP: 43f7e2	 Bytes: 7
  %loadMem_43f7e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f7e2 = call %struct.Memory* @routine_movq_MINUS0x6d0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f7e2)
  store %struct.Memory* %call_43f7e2, %struct.Memory** %MEMORY

  ; Code: movl -0x6d4(%rbp), %esi	 RIP: 43f7e9	 Bytes: 6
  %loadMem_43f7e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f7e9 = call %struct.Memory* @routine_movl_MINUS0x6d4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f7e9)
  store %struct.Memory* %call_43f7e9, %struct.Memory** %MEMORY

  ; Code: movl -0x6d8(%rbp), %edx	 RIP: 43f7ef	 Bytes: 6
  %loadMem_43f7ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f7ef = call %struct.Memory* @routine_movl_MINUS0x6d8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f7ef)
  store %struct.Memory* %call_43f7ef, %struct.Memory** %MEMORY

  ; Code: callq .sgf_trace2	 RIP: 43f7f5	 Bytes: 5
  %loadMem1_43f7f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f7f5 = call %struct.Memory* @routine_callq_.sgf_trace2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f7f5, i64 -160981, i64 5, i64 5)
  store %struct.Memory* %call1_43f7f5, %struct.Memory** %MEMORY

  %loadMem2_43f7f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f7f5 = load i64, i64* %3
  %call2_43f7f5 = call %struct.Memory* @sub_418320.sgf_trace2(%struct.State* %0, i64  %loadPC_43f7f5, %struct.Memory* %loadMem2_43f7f5)
  store %struct.Memory* %call2_43f7f5, %struct.Memory** %MEMORY

  ; Code: .L_43f7fa:	 RIP: 43f7fa	 Bytes: 0
  br label %block_.L_43f7fa
block_.L_43f7fa:

  ; Code: jmpq .L_43f7ff	 RIP: 43f7fa	 Bytes: 5
  %loadMem_43f7fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f7fa = call %struct.Memory* @routine_jmpq_.L_43f7ff(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f7fa, i64 5, i64 5)
  store %struct.Memory* %call_43f7fa, %struct.Memory** %MEMORY

  br label %block_.L_43f7ff

  ; Code: .L_43f7ff:	 RIP: 43f7ff	 Bytes: 0
block_.L_43f7ff:

  ; Code: jmpq .L_43f804	 RIP: 43f7ff	 Bytes: 5
  %loadMem_43f7ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f7ff = call %struct.Memory* @routine_jmpq_.L_43f804(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f7ff, i64 5, i64 5)
  store %struct.Memory* %call_43f7ff, %struct.Memory** %MEMORY

  br label %block_.L_43f804

  ; Code: .L_43f804:	 RIP: 43f804	 Bytes: 0
block_.L_43f804:

  ; Code: cmpq $0x0, -0x50(%rbp)	 RIP: 43f804	 Bytes: 5
  %loadMem_43f804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f804 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f804)
  store %struct.Memory* %call_43f804, %struct.Memory** %MEMORY

  ; Code: je .L_43f819	 RIP: 43f809	 Bytes: 6
  %loadMem_43f809 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f809 = call %struct.Memory* @routine_je_.L_43f819(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f809, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_43f809, %struct.Memory** %MEMORY

  %loadBr_43f809 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f809 = icmp eq i8 %loadBr_43f809, 1
  br i1 %cmpBr_43f809, label %block_.L_43f819, label %block_43f80f

block_43f80f:
  ; Code: movq -0x50(%rbp), %rax	 RIP: 43f80f	 Bytes: 4
  %loadMem_43f80f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f80f = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f80f)
  store %struct.Memory* %call_43f80f, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 43f813	 Bytes: 6
  %loadMem_43f813 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f813 = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f813)
  store %struct.Memory* %call_43f813, %struct.Memory** %MEMORY

  ; Code: .L_43f819:	 RIP: 43f819	 Bytes: 0
  br label %block_.L_43f819
block_.L_43f819:

  ; Code: cmpq $0x0, -0x6c0(%rbp)	 RIP: 43f819	 Bytes: 8
  %loadMem_43f819 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f819 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x6c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f819)
  store %struct.Memory* %call_43f819, %struct.Memory** %MEMORY

  ; Code: je .L_43f84d	 RIP: 43f821	 Bytes: 6
  %loadMem_43f821 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f821 = call %struct.Memory* @routine_je_.L_43f84d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f821, i8* %BRANCH_TAKEN, i64 44, i64 6, i64 6)
  store %struct.Memory* %call_43f821, %struct.Memory** %MEMORY

  %loadBr_43f821 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f821 = icmp eq i8 %loadBr_43f821, 1
  br i1 %cmpBr_43f821, label %block_.L_43f84d, label %block_43f827

block_43f827:
  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43f827	 Bytes: 7
  %loadMem_43f827 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f827 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f827)
  store %struct.Memory* %call_43f827, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 43f82e	 Bytes: 3
  %loadMem_43f82e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f82e = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f82e)
  store %struct.Memory* %call_43f82e, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %ecx	 RIP: 43f831	 Bytes: 6
  %loadMem_43f831 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f831 = call %struct.Memory* @routine_andl__0x3ff___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f831)
  store %struct.Memory* %call_43f831, %struct.Memory** %MEMORY

  ; Code: orl $0x20000000, %ecx	 RIP: 43f837	 Bytes: 6
  %loadMem_43f837 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f837 = call %struct.Memory* @routine_orl__0x20000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f837)
  store %struct.Memory* %call_43f837, %struct.Memory** %MEMORY

  ; Code: orl $0x1000000, %ecx	 RIP: 43f83d	 Bytes: 6
  %loadMem_43f83d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f83d = call %struct.Memory* @routine_orl__0x1000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f83d)
  store %struct.Memory* %call_43f83d, %struct.Memory** %MEMORY

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43f843	 Bytes: 7
  %loadMem_43f843 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f843 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f843)
  store %struct.Memory* %call_43f843, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x4(%rax)	 RIP: 43f84a	 Bytes: 3
  %loadMem_43f84a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f84a = call %struct.Memory* @routine_movl__ecx__0x4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f84a)
  store %struct.Memory* %call_43f84a, %struct.Memory** %MEMORY

  ; Code: .L_43f84d:	 RIP: 43f84d	 Bytes: 0
  br label %block_.L_43f84d
block_.L_43f84d:

  ; Code: jmpq .L_441708	 RIP: 43f84d	 Bytes: 5
  %loadMem_43f84d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f84d = call %struct.Memory* @routine_jmpq_.L_441708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f84d, i64 7867, i64 5)
  store %struct.Memory* %call_43f84d, %struct.Memory** %MEMORY

  br label %block_.L_441708

  ; Code: .L_43f852:	 RIP: 43f852	 Bytes: 0
block_.L_43f852:

  ; Code: leaq -0x6e0(%rbp), %rdi	 RIP: 43f852	 Bytes: 7
  %loadMem_43f852 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f852 = call %struct.Memory* @routine_leaq_MINUS0x6e0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f852)
  store %struct.Memory* %call_43f852, %struct.Memory** %MEMORY

  ; Code: callq .min_eyes	 RIP: 43f859	 Bytes: 5
  %loadMem1_43f859 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f859 = call %struct.Memory* @routine_callq_.min_eyes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f859, i64 -15721, i64 5, i64 5)
  store %struct.Memory* %call1_43f859, %struct.Memory** %MEMORY

  %loadMem2_43f859 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f859 = load i64, i64* %3
  %call2_43f859 = call %struct.Memory* @sub_43baf0.min_eyes(%struct.State* %0, i64  %loadPC_43f859, %struct.Memory* %loadMem2_43f859)
  store %struct.Memory* %call2_43f859, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 43f85e	 Bytes: 3
  %loadMem_43f85e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f85e = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f85e)
  store %struct.Memory* %call_43f85e, %struct.Memory** %MEMORY

  ; Code: jge .L_43f887	 RIP: 43f861	 Bytes: 6
  %loadMem_43f861 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f861 = call %struct.Memory* @routine_jge_.L_43f887(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f861, i8* %BRANCH_TAKEN, i64 38, i64 6, i64 6)
  store %struct.Memory* %call_43f861, %struct.Memory** %MEMORY

  %loadBr_43f861 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f861 = icmp eq i8 %loadBr_43f861, 1
  br i1 %cmpBr_43f861, label %block_.L_43f887, label %block_43f867

block_43f867:
  ; Code: cmpl $0x2, 0xb54ce4	 RIP: 43f867	 Bytes: 8
  %loadMem_43f867 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f867 = call %struct.Memory* @routine_cmpl__0x2__0xb54ce4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f867)
  store %struct.Memory* %call_43f867, %struct.Memory** %MEMORY

  ; Code: jle .L_43fbf2	 RIP: 43f86f	 Bytes: 6
  %loadMem_43f86f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f86f = call %struct.Memory* @routine_jle_.L_43fbf2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f86f, i8* %BRANCH_TAKEN, i64 899, i64 6, i64 6)
  store %struct.Memory* %call_43f86f, %struct.Memory** %MEMORY

  %loadBr_43f86f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f86f = icmp eq i8 %loadBr_43f86f, 1
  br i1 %cmpBr_43f86f, label %block_.L_43fbf2, label %block_43f875

block_43f875:
  ; Code: movq -0x28(%rbp), %rdi	 RIP: 43f875	 Bytes: 4
  %loadMem_43f875 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f875 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f875)
  store %struct.Memory* %call_43f875, %struct.Memory** %MEMORY

  ; Code: callq .owl_escape_route	 RIP: 43f879	 Bytes: 5
  %loadMem1_43f879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f879 = call %struct.Memory* @routine_callq_.owl_escape_route(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f879, i64 15799, i64 5, i64 5)
  store %struct.Memory* %call1_43f879, %struct.Memory** %MEMORY

  %loadMem2_43f879 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f879 = load i64, i64* %3
  %call2_43f879 = call %struct.Memory* @sub_443630.owl_escape_route(%struct.State* %0, i64  %loadPC_43f879, %struct.Memory* %loadMem2_43f879)
  store %struct.Memory* %call2_43f879, %struct.Memory** %MEMORY

  ; Code: cmpl $0x5, %eax	 RIP: 43f87e	 Bytes: 3
  %loadMem_43f87e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f87e = call %struct.Memory* @routine_cmpl__0x5___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f87e)
  store %struct.Memory* %call_43f87e, %struct.Memory** %MEMORY

  ; Code: jl .L_43fbf2	 RIP: 43f881	 Bytes: 6
  %loadMem_43f881 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f881 = call %struct.Memory* @routine_jl_.L_43fbf2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f881, i8* %BRANCH_TAKEN, i64 881, i64 6, i64 6)
  store %struct.Memory* %call_43f881, %struct.Memory** %MEMORY

  %loadBr_43f881 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f881 = icmp eq i8 %loadBr_43f881, 1
  br i1 %cmpBr_43f881, label %block_.L_43fbf2, label %block_.L_43f887

  ; Code: .L_43f887:	 RIP: 43f887	 Bytes: 0
block_.L_43f887:

  ; Code: leaq -0x6e8(%rbp), %rdi	 RIP: 43f887	 Bytes: 7
  %loadMem_43f887 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f887 = call %struct.Memory* @routine_leaq_MINUS0x6e8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f887)
  store %struct.Memory* %call_43f887, %struct.Memory** %MEMORY

  ; Code: callq .max_eyes	 RIP: 43f88e	 Bytes: 5
  %loadMem1_43f88e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f88e = call %struct.Memory* @routine_callq_.max_eyes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f88e, i64 -18558, i64 5, i64 5)
  store %struct.Memory* %call1_43f88e, %struct.Memory** %MEMORY

  %loadMem2_43f88e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f88e = load i64, i64* %3
  %call2_43f88e = call %struct.Memory* @sub_43b010.max_eyes(%struct.State* %0, i64  %loadPC_43f88e, %struct.Memory* %loadMem2_43f88e)
  store %struct.Memory* %call2_43f88e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 43f893	 Bytes: 3
  %loadMem_43f893 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f893 = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f893)
  store %struct.Memory* %call_43f893, %struct.Memory** %MEMORY

  ; Code: jge .L_43f9ba	 RIP: 43f896	 Bytes: 6
  %loadMem_43f896 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f896 = call %struct.Memory* @routine_jge_.L_43f9ba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f896, i8* %BRANCH_TAKEN, i64 292, i64 6, i64 6)
  store %struct.Memory* %call_43f896, %struct.Memory** %MEMORY

  %loadBr_43f896 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f896 = icmp eq i8 %loadBr_43f896, 1
  br i1 %cmpBr_43f896, label %block_.L_43f9ba, label %block_43f89c

block_43f89c:
  ; Code: leaq -0x6e8(%rbp), %rdi	 RIP: 43f89c	 Bytes: 7
  %loadMem_43f89c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f89c = call %struct.Memory* @routine_leaq_MINUS0x6e8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f89c)
  store %struct.Memory* %call_43f89c, %struct.Memory** %MEMORY

  ; Code: movq -0x40(%rbp), %rax	 RIP: 43f8a3	 Bytes: 4
  %loadMem_43f8a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f8a3 = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f8a3)
  store %struct.Memory* %call_43f8a3, %struct.Memory** %MEMORY

  ; Code: movl $0x1, (%rax)	 RIP: 43f8a7	 Bytes: 6
  %loadMem_43f8a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f8a7 = call %struct.Memory* @routine_movl__0x1____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f8a7)
  store %struct.Memory* %call_43f8a7, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rax	 RIP: 43f8ad	 Bytes: 4
  %loadMem_43f8ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f8ad = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f8ad)
  store %struct.Memory* %call_43f8ad, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 43f8b1	 Bytes: 6
  %loadMem_43f8b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f8b1 = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f8b1)
  store %struct.Memory* %call_43f8b1, %struct.Memory** %MEMORY

  ; Code: movq -0x50(%rbp), %rax	 RIP: 43f8b7	 Bytes: 4
  %loadMem_43f8b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f8b7 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f8b7)
  store %struct.Memory* %call_43f8b7, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 43f8bb	 Bytes: 6
  %loadMem_43f8bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f8bb = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f8bb)
  store %struct.Memory* %call_43f8bb, %struct.Memory** %MEMORY

  ; Code: movq -0x698(%rbp), %rax	 RIP: 43f8c1	 Bytes: 7
  %loadMem_43f8c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f8c1 = call %struct.Memory* @routine_movq_MINUS0x698__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f8c1)
  store %struct.Memory* %call_43f8c1, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0xab0ef8	 RIP: 43f8c8	 Bytes: 8
  %loadMem_43f8c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f8c8 = call %struct.Memory* @routine_movq__rax__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f8c8)
  store %struct.Memory* %call_43f8c8, %struct.Memory** %MEMORY

  ; Code: movl -0x69c(%rbp), %ecx	 RIP: 43f8d0	 Bytes: 6
  %loadMem_43f8d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f8d0 = call %struct.Memory* @routine_movl_MINUS0x69c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f8d0)
  store %struct.Memory* %call_43f8d0, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0xab0eec	 RIP: 43f8d6	 Bytes: 7
  %loadMem_43f8d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f8d6 = call %struct.Memory* @routine_movl__ecx__0xab0eec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f8d6)
  store %struct.Memory* %call_43f8d6, %struct.Memory** %MEMORY

  ; Code: callq .max_eyes	 RIP: 43f8dd	 Bytes: 5
  %loadMem1_43f8dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f8dd = call %struct.Memory* @routine_callq_.max_eyes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f8dd, i64 -18637, i64 5, i64 5)
  store %struct.Memory* %call1_43f8dd, %struct.Memory** %MEMORY

  %loadMem2_43f8dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f8dd = load i64, i64* %3
  %call2_43f8dd = call %struct.Memory* @sub_43b010.max_eyes(%struct.State* %0, i64  %loadPC_43f8dd, %struct.Memory* %loadMem2_43f8dd)
  store %struct.Memory* %call2_43f8dd, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43f8e2	 Bytes: 3
  %loadMem_43f8e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f8e2 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f8e2)
  store %struct.Memory* %call_43f8e2, %struct.Memory** %MEMORY

  ; Code: jne .L_43f929	 RIP: 43f8e5	 Bytes: 6
  %loadMem_43f8e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f8e5 = call %struct.Memory* @routine_jne_.L_43f929(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f8e5, i8* %BRANCH_TAKEN, i64 68, i64 6, i64 6)
  store %struct.Memory* %call_43f8e5, %struct.Memory** %MEMORY

  %loadBr_43f8e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f8e5 = icmp eq i8 %loadBr_43f8e5, 1
  br i1 %cmpBr_43f8e5, label %block_.L_43f929, label %block_43f8eb

block_43f8eb:
  ; Code: cmpq $0x0, 0xab0ef8	 RIP: 43f8eb	 Bytes: 9
  %loadMem_43f8eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f8eb = call %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f8eb)
  store %struct.Memory* %call_43f8eb, %struct.Memory** %MEMORY

  ; Code: je .L_43f924	 RIP: 43f8f4	 Bytes: 6
  %loadMem_43f8f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f8f4 = call %struct.Memory* @routine_je_.L_43f924(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f8f4, i8* %BRANCH_TAKEN, i64 48, i64 6, i64 6)
  store %struct.Memory* %call_43f8f4, %struct.Memory** %MEMORY

  %loadBr_43f8f4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f8f4 = icmp eq i8 %loadBr_43f8f4, 1
  br i1 %cmpBr_43f8f4, label %block_.L_43f924, label %block_43f8fa

block_43f8fa:
  ; Code: xorl %ecx, %ecx	 RIP: 43f8fa	 Bytes: 2
  %loadMem_43f8fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f8fa = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f8fa)
  store %struct.Memory* %call_43f8fa, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %r8d	 RIP: 43f8fc	 Bytes: 6
  %loadMem_43f8fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f8fc = call %struct.Memory* @routine_movl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f8fc)
  store %struct.Memory* %call_43f8fc, %struct.Memory** %MEMORY

  ; Code: movq $0x57df28, %r9	 RIP: 43f902	 Bytes: 10
  %loadMem_43f902 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f902 = call %struct.Memory* @routine_movq__0x57df28___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f902)
  store %struct.Memory* %call_43f902, %struct.Memory** %MEMORY

  ; Code: movq -0x6d0(%rbp), %rdi	 RIP: 43f90c	 Bytes: 7
  %loadMem_43f90c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f90c = call %struct.Memory* @routine_movq_MINUS0x6d0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f90c)
  store %struct.Memory* %call_43f90c, %struct.Memory** %MEMORY

  ; Code: movl -0x6d4(%rbp), %esi	 RIP: 43f913	 Bytes: 6
  %loadMem_43f913 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f913 = call %struct.Memory* @routine_movl_MINUS0x6d4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f913)
  store %struct.Memory* %call_43f913, %struct.Memory** %MEMORY

  ; Code: movl -0x6d8(%rbp), %edx	 RIP: 43f919	 Bytes: 6
  %loadMem_43f919 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f919 = call %struct.Memory* @routine_movl_MINUS0x6d8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f919)
  store %struct.Memory* %call_43f919, %struct.Memory** %MEMORY

  ; Code: callq .sgf_trace2	 RIP: 43f91f	 Bytes: 5
  %loadMem1_43f91f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f91f = call %struct.Memory* @routine_callq_.sgf_trace2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f91f, i64 -161279, i64 5, i64 5)
  store %struct.Memory* %call1_43f91f, %struct.Memory** %MEMORY

  %loadMem2_43f91f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f91f = load i64, i64* %3
  %call2_43f91f = call %struct.Memory* @sub_418320.sgf_trace2(%struct.State* %0, i64  %loadPC_43f91f, %struct.Memory* %loadMem2_43f91f)
  store %struct.Memory* %call2_43f91f, %struct.Memory** %MEMORY

  ; Code: .L_43f924:	 RIP: 43f924	 Bytes: 0
  br label %block_.L_43f924
block_.L_43f924:

  ; Code: jmpq .L_43f967	 RIP: 43f924	 Bytes: 5
  %loadMem_43f924 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f924 = call %struct.Memory* @routine_jmpq_.L_43f967(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f924, i64 67, i64 5)
  store %struct.Memory* %call_43f924, %struct.Memory** %MEMORY

  br label %block_.L_43f967

  ; Code: .L_43f929:	 RIP: 43f929	 Bytes: 0
block_.L_43f929:

  ; Code: cmpq $0x0, 0xab0ef8	 RIP: 43f929	 Bytes: 9
  %loadMem_43f929 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f929 = call %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f929)
  store %struct.Memory* %call_43f929, %struct.Memory** %MEMORY

  ; Code: je .L_43f962	 RIP: 43f932	 Bytes: 6
  %loadMem_43f932 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f932 = call %struct.Memory* @routine_je_.L_43f962(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f932, i8* %BRANCH_TAKEN, i64 48, i64 6, i64 6)
  store %struct.Memory* %call_43f932, %struct.Memory** %MEMORY

  %loadBr_43f932 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f932 = icmp eq i8 %loadBr_43f932, 1
  br i1 %cmpBr_43f932, label %block_.L_43f962, label %block_43f938

block_43f938:
  ; Code: xorl %ecx, %ecx	 RIP: 43f938	 Bytes: 2
  %loadMem_43f938 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f938 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f938)
  store %struct.Memory* %call_43f938, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %r8d	 RIP: 43f93a	 Bytes: 6
  %loadMem_43f93a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f93a = call %struct.Memory* @routine_movl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f93a)
  store %struct.Memory* %call_43f93a, %struct.Memory** %MEMORY

  ; Code: movq $0x57df47, %r9	 RIP: 43f940	 Bytes: 10
  %loadMem_43f940 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f940 = call %struct.Memory* @routine_movq__0x57df47___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f940)
  store %struct.Memory* %call_43f940, %struct.Memory** %MEMORY

  ; Code: movq -0x6d0(%rbp), %rdi	 RIP: 43f94a	 Bytes: 7
  %loadMem_43f94a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f94a = call %struct.Memory* @routine_movq_MINUS0x6d0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f94a)
  store %struct.Memory* %call_43f94a, %struct.Memory** %MEMORY

  ; Code: movl -0x6d4(%rbp), %esi	 RIP: 43f951	 Bytes: 6
  %loadMem_43f951 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f951 = call %struct.Memory* @routine_movl_MINUS0x6d4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f951)
  store %struct.Memory* %call_43f951, %struct.Memory** %MEMORY

  ; Code: movl -0x6d8(%rbp), %edx	 RIP: 43f957	 Bytes: 6
  %loadMem_43f957 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f957 = call %struct.Memory* @routine_movl_MINUS0x6d8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f957)
  store %struct.Memory* %call_43f957, %struct.Memory** %MEMORY

  ; Code: callq .sgf_trace2	 RIP: 43f95d	 Bytes: 5
  %loadMem1_43f95d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f95d = call %struct.Memory* @routine_callq_.sgf_trace2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f95d, i64 -161341, i64 5, i64 5)
  store %struct.Memory* %call1_43f95d, %struct.Memory** %MEMORY

  %loadMem2_43f95d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f95d = load i64, i64* %3
  %call2_43f95d = call %struct.Memory* @sub_418320.sgf_trace2(%struct.State* %0, i64  %loadPC_43f95d, %struct.Memory* %loadMem2_43f95d)
  store %struct.Memory* %call2_43f95d, %struct.Memory** %MEMORY

  ; Code: .L_43f962:	 RIP: 43f962	 Bytes: 0
  br label %block_.L_43f962
block_.L_43f962:

  ; Code: jmpq .L_43f967	 RIP: 43f962	 Bytes: 5
  %loadMem_43f962 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f962 = call %struct.Memory* @routine_jmpq_.L_43f967(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f962, i64 5, i64 5)
  store %struct.Memory* %call_43f962, %struct.Memory** %MEMORY

  br label %block_.L_43f967

  ; Code: .L_43f967:	 RIP: 43f967	 Bytes: 0
block_.L_43f967:

  ; Code: jmpq .L_43f96c	 RIP: 43f967	 Bytes: 5
  %loadMem_43f967 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f967 = call %struct.Memory* @routine_jmpq_.L_43f96c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f967, i64 5, i64 5)
  store %struct.Memory* %call_43f967, %struct.Memory** %MEMORY

  br label %block_.L_43f96c

  ; Code: .L_43f96c:	 RIP: 43f96c	 Bytes: 0
block_.L_43f96c:

  ; Code: cmpq $0x0, -0x50(%rbp)	 RIP: 43f96c	 Bytes: 5
  %loadMem_43f96c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f96c = call %struct.Memory* @routine_cmpq__0x0__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f96c)
  store %struct.Memory* %call_43f96c, %struct.Memory** %MEMORY

  ; Code: je .L_43f981	 RIP: 43f971	 Bytes: 6
  %loadMem_43f971 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f971 = call %struct.Memory* @routine_je_.L_43f981(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f971, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_43f971, %struct.Memory** %MEMORY

  %loadBr_43f971 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f971 = icmp eq i8 %loadBr_43f971, 1
  br i1 %cmpBr_43f971, label %block_.L_43f981, label %block_43f977

block_43f977:
  ; Code: movq -0x50(%rbp), %rax	 RIP: 43f977	 Bytes: 4
  %loadMem_43f977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f977 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f977)
  store %struct.Memory* %call_43f977, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 43f97b	 Bytes: 6
  %loadMem_43f97b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f97b = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f97b)
  store %struct.Memory* %call_43f97b, %struct.Memory** %MEMORY

  ; Code: .L_43f981:	 RIP: 43f981	 Bytes: 0
  br label %block_.L_43f981
block_.L_43f981:

  ; Code: cmpq $0x0, -0x6c0(%rbp)	 RIP: 43f981	 Bytes: 8
  %loadMem_43f981 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f981 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x6c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f981)
  store %struct.Memory* %call_43f981, %struct.Memory** %MEMORY

  ; Code: je .L_43f9b5	 RIP: 43f989	 Bytes: 6
  %loadMem_43f989 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f989 = call %struct.Memory* @routine_je_.L_43f9b5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f989, i8* %BRANCH_TAKEN, i64 44, i64 6, i64 6)
  store %struct.Memory* %call_43f989, %struct.Memory** %MEMORY

  %loadBr_43f989 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f989 = icmp eq i8 %loadBr_43f989, 1
  br i1 %cmpBr_43f989, label %block_.L_43f9b5, label %block_43f98f

block_43f98f:
  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43f98f	 Bytes: 7
  %loadMem_43f98f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f98f = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f98f)
  store %struct.Memory* %call_43f98f, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 43f996	 Bytes: 3
  %loadMem_43f996 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f996 = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f996)
  store %struct.Memory* %call_43f996, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %ecx	 RIP: 43f999	 Bytes: 6
  %loadMem_43f999 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f999 = call %struct.Memory* @routine_andl__0x3ff___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f999)
  store %struct.Memory* %call_43f999, %struct.Memory** %MEMORY

  ; Code: orl $0x20000000, %ecx	 RIP: 43f99f	 Bytes: 6
  %loadMem_43f99f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f99f = call %struct.Memory* @routine_orl__0x20000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f99f)
  store %struct.Memory* %call_43f99f, %struct.Memory** %MEMORY

  ; Code: orl $0x1000000, %ecx	 RIP: 43f9a5	 Bytes: 6
  %loadMem_43f9a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f9a5 = call %struct.Memory* @routine_orl__0x1000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f9a5)
  store %struct.Memory* %call_43f9a5, %struct.Memory** %MEMORY

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43f9ab	 Bytes: 7
  %loadMem_43f9ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f9ab = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f9ab)
  store %struct.Memory* %call_43f9ab, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x4(%rax)	 RIP: 43f9b2	 Bytes: 3
  %loadMem_43f9b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f9b2 = call %struct.Memory* @routine_movl__ecx__0x4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f9b2)
  store %struct.Memory* %call_43f9b2, %struct.Memory** %MEMORY

  ; Code: .L_43f9b5:	 RIP: 43f9b5	 Bytes: 0
  br label %block_.L_43f9b5
block_.L_43f9b5:

  ; Code: jmpq .L_441708	 RIP: 43f9b5	 Bytes: 5
  %loadMem_43f9b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f9b5 = call %struct.Memory* @routine_jmpq_.L_441708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f9b5, i64 7507, i64 5)
  store %struct.Memory* %call_43f9b5, %struct.Memory** %MEMORY

  br label %block_.L_441708

  ; Code: .L_43f9ba:	 RIP: 43f9ba	 Bytes: 0
block_.L_43f9ba:

  ; Code: leaq -0x6e8(%rbp), %rdi	 RIP: 43f9ba	 Bytes: 7
  %loadMem_43f9ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f9ba = call %struct.Memory* @routine_leaq_MINUS0x6e8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f9ba)
  store %struct.Memory* %call_43f9ba, %struct.Memory** %MEMORY

  ; Code: callq .min_eyes	 RIP: 43f9c1	 Bytes: 5
  %loadMem1_43f9c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43f9c1 = call %struct.Memory* @routine_callq_.min_eyes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43f9c1, i64 -16081, i64 5, i64 5)
  store %struct.Memory* %call1_43f9c1, %struct.Memory** %MEMORY

  %loadMem2_43f9c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43f9c1 = load i64, i64* %3
  %call2_43f9c1 = call %struct.Memory* @sub_43baf0.min_eyes(%struct.State* %0, i64  %loadPC_43f9c1, %struct.Memory* %loadMem2_43f9c1)
  store %struct.Memory* %call2_43f9c1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 43f9c6	 Bytes: 3
  %loadMem_43f9c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f9c6 = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f9c6)
  store %struct.Memory* %call_43f9c6, %struct.Memory** %MEMORY

  ; Code: jl .L_43fa9b	 RIP: 43f9c9	 Bytes: 6
  %loadMem_43f9c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f9c9 = call %struct.Memory* @routine_jl_.L_43fa9b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f9c9, i8* %BRANCH_TAKEN, i64 210, i64 6, i64 6)
  store %struct.Memory* %call_43f9c9, %struct.Memory** %MEMORY

  %loadBr_43f9c9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43f9c9 = icmp eq i8 %loadBr_43f9c9, 1
  br i1 %cmpBr_43f9c9, label %block_.L_43fa9b, label %block_43f9cf

block_43f9cf:
  ; Code: movq -0x40(%rbp), %rax	 RIP: 43f9cf	 Bytes: 4
  %loadMem_43f9cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f9cf = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f9cf)
  store %struct.Memory* %call_43f9cf, %struct.Memory** %MEMORY

  ; Code: movl $0x1, (%rax)	 RIP: 43f9d3	 Bytes: 6
  %loadMem_43f9d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f9d3 = call %struct.Memory* @routine_movl__0x1____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f9d3)
  store %struct.Memory* %call_43f9d3, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rax	 RIP: 43f9d9	 Bytes: 4
  %loadMem_43f9d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f9d9 = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f9d9)
  store %struct.Memory* %call_43f9d9, %struct.Memory** %MEMORY

  ; Code: movl $0x1, (%rax)	 RIP: 43f9dd	 Bytes: 6
  %loadMem_43f9dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f9dd = call %struct.Memory* @routine_movl__0x1____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f9dd)
  store %struct.Memory* %call_43f9dd, %struct.Memory** %MEMORY

  ; Code: movq -0x50(%rbp), %rax	 RIP: 43f9e3	 Bytes: 4
  %loadMem_43f9e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f9e3 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f9e3)
  store %struct.Memory* %call_43f9e3, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 43f9e7	 Bytes: 6
  %loadMem_43f9e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f9e7 = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f9e7)
  store %struct.Memory* %call_43f9e7, %struct.Memory** %MEMORY

  ; Code: movq -0x698(%rbp), %rax	 RIP: 43f9ed	 Bytes: 7
  %loadMem_43f9ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f9ed = call %struct.Memory* @routine_movq_MINUS0x698__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f9ed)
  store %struct.Memory* %call_43f9ed, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0xab0ef8	 RIP: 43f9f4	 Bytes: 8
  %loadMem_43f9f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f9f4 = call %struct.Memory* @routine_movq__rax__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f9f4)
  store %struct.Memory* %call_43f9f4, %struct.Memory** %MEMORY

  ; Code: movl -0x69c(%rbp), %ecx	 RIP: 43f9fc	 Bytes: 6
  %loadMem_43f9fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43f9fc = call %struct.Memory* @routine_movl_MINUS0x69c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43f9fc)
  store %struct.Memory* %call_43f9fc, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0xab0eec	 RIP: 43fa02	 Bytes: 7
  %loadMem_43fa02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa02 = call %struct.Memory* @routine_movl__ecx__0xab0eec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa02)
  store %struct.Memory* %call_43fa02, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, 0xab0ef8	 RIP: 43fa09	 Bytes: 9
  %loadMem_43fa09 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa09 = call %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa09)
  store %struct.Memory* %call_43fa09, %struct.Memory** %MEMORY

  ; Code: je .L_43fa42	 RIP: 43fa12	 Bytes: 6
  %loadMem_43fa12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa12 = call %struct.Memory* @routine_je_.L_43fa42(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa12, i8* %BRANCH_TAKEN, i64 48, i64 6, i64 6)
  store %struct.Memory* %call_43fa12, %struct.Memory** %MEMORY

  %loadBr_43fa12 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fa12 = icmp eq i8 %loadBr_43fa12, 1
  br i1 %cmpBr_43fa12, label %block_.L_43fa42, label %block_43fa18

block_43fa18:
  ; Code: xorl %ecx, %ecx	 RIP: 43fa18	 Bytes: 2
  %loadMem_43fa18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa18 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa18)
  store %struct.Memory* %call_43fa18, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %r8d	 RIP: 43fa1a	 Bytes: 6
  %loadMem_43fa1a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa1a = call %struct.Memory* @routine_movl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa1a)
  store %struct.Memory* %call_43fa1a, %struct.Memory** %MEMORY

  ; Code: movq $0x57df65, %r9	 RIP: 43fa20	 Bytes: 10
  %loadMem_43fa20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa20 = call %struct.Memory* @routine_movq__0x57df65___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa20)
  store %struct.Memory* %call_43fa20, %struct.Memory** %MEMORY

  ; Code: movq -0x6d0(%rbp), %rdi	 RIP: 43fa2a	 Bytes: 7
  %loadMem_43fa2a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa2a = call %struct.Memory* @routine_movq_MINUS0x6d0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa2a)
  store %struct.Memory* %call_43fa2a, %struct.Memory** %MEMORY

  ; Code: movl -0x6d4(%rbp), %esi	 RIP: 43fa31	 Bytes: 6
  %loadMem_43fa31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa31 = call %struct.Memory* @routine_movl_MINUS0x6d4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa31)
  store %struct.Memory* %call_43fa31, %struct.Memory** %MEMORY

  ; Code: movl -0x6d8(%rbp), %edx	 RIP: 43fa37	 Bytes: 6
  %loadMem_43fa37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa37 = call %struct.Memory* @routine_movl_MINUS0x6d8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa37)
  store %struct.Memory* %call_43fa37, %struct.Memory** %MEMORY

  ; Code: callq .sgf_trace2	 RIP: 43fa3d	 Bytes: 5
  %loadMem1_43fa3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43fa3d = call %struct.Memory* @routine_callq_.sgf_trace2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43fa3d, i64 -161565, i64 5, i64 5)
  store %struct.Memory* %call1_43fa3d, %struct.Memory** %MEMORY

  %loadMem2_43fa3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43fa3d = load i64, i64* %3
  %call2_43fa3d = call %struct.Memory* @sub_418320.sgf_trace2(%struct.State* %0, i64  %loadPC_43fa3d, %struct.Memory* %loadMem2_43fa3d)
  store %struct.Memory* %call2_43fa3d, %struct.Memory** %MEMORY

  ; Code: .L_43fa42:	 RIP: 43fa42	 Bytes: 0
  br label %block_.L_43fa42
block_.L_43fa42:

  ; Code: jmpq .L_43fa47	 RIP: 43fa42	 Bytes: 5
  %loadMem_43fa42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa42 = call %struct.Memory* @routine_jmpq_.L_43fa47(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa42, i64 5, i64 5)
  store %struct.Memory* %call_43fa42, %struct.Memory** %MEMORY

  br label %block_.L_43fa47

  ; Code: .L_43fa47:	 RIP: 43fa47	 Bytes: 0
block_.L_43fa47:

  ; Code: cmpq $0x0, -0x50(%rbp)	 RIP: 43fa47	 Bytes: 5
  %loadMem_43fa47 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa47 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa47)
  store %struct.Memory* %call_43fa47, %struct.Memory** %MEMORY

  ; Code: je .L_43fa5c	 RIP: 43fa4c	 Bytes: 6
  %loadMem_43fa4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa4c = call %struct.Memory* @routine_je_.L_43fa5c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa4c, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_43fa4c, %struct.Memory** %MEMORY

  %loadBr_43fa4c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fa4c = icmp eq i8 %loadBr_43fa4c, 1
  br i1 %cmpBr_43fa4c, label %block_.L_43fa5c, label %block_43fa52

block_43fa52:
  ; Code: movq -0x50(%rbp), %rax	 RIP: 43fa52	 Bytes: 4
  %loadMem_43fa52 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa52 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa52)
  store %struct.Memory* %call_43fa52, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 43fa56	 Bytes: 6
  %loadMem_43fa56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa56 = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa56)
  store %struct.Memory* %call_43fa56, %struct.Memory** %MEMORY

  ; Code: .L_43fa5c:	 RIP: 43fa5c	 Bytes: 0
  br label %block_.L_43fa5c
block_.L_43fa5c:

  ; Code: cmpq $0x0, -0x6c0(%rbp)	 RIP: 43fa5c	 Bytes: 8
  %loadMem_43fa5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa5c = call %struct.Memory* @routine_cmpq__0x0__MINUS0x6c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa5c)
  store %struct.Memory* %call_43fa5c, %struct.Memory** %MEMORY

  ; Code: je .L_43fa96	 RIP: 43fa64	 Bytes: 6
  %loadMem_43fa64 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa64 = call %struct.Memory* @routine_je_.L_43fa96(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa64, i8* %BRANCH_TAKEN, i64 50, i64 6, i64 6)
  store %struct.Memory* %call_43fa64, %struct.Memory** %MEMORY

  %loadBr_43fa64 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fa64 = icmp eq i8 %loadBr_43fa64, 1
  br i1 %cmpBr_43fa64, label %block_.L_43fa96, label %block_43fa6a

block_43fa6a:
  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43fa6a	 Bytes: 7
  %loadMem_43fa6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa6a = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa6a)
  store %struct.Memory* %call_43fa6a, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 43fa71	 Bytes: 3
  %loadMem_43fa71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa71 = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa71)
  store %struct.Memory* %call_43fa71, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %ecx	 RIP: 43fa74	 Bytes: 6
  %loadMem_43fa74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa74 = call %struct.Memory* @routine_andl__0x3ff___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa74)
  store %struct.Memory* %call_43fa74, %struct.Memory** %MEMORY

  ; Code: orl $0x20000000, %ecx	 RIP: 43fa7a	 Bytes: 6
  %loadMem_43fa7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa7a = call %struct.Memory* @routine_orl__0x20000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa7a)
  store %struct.Memory* %call_43fa7a, %struct.Memory** %MEMORY

  ; Code: orl $0x1000000, %ecx	 RIP: 43fa80	 Bytes: 6
  %loadMem_43fa80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa80 = call %struct.Memory* @routine_orl__0x1000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa80)
  store %struct.Memory* %call_43fa80, %struct.Memory** %MEMORY

  ; Code: orl $0x100000, %ecx	 RIP: 43fa86	 Bytes: 6
  %loadMem_43fa86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa86 = call %struct.Memory* @routine_orl__0x100000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa86)
  store %struct.Memory* %call_43fa86, %struct.Memory** %MEMORY

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43fa8c	 Bytes: 7
  %loadMem_43fa8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa8c = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa8c)
  store %struct.Memory* %call_43fa8c, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x4(%rax)	 RIP: 43fa93	 Bytes: 3
  %loadMem_43fa93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa93 = call %struct.Memory* @routine_movl__ecx__0x4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa93)
  store %struct.Memory* %call_43fa93, %struct.Memory** %MEMORY

  ; Code: .L_43fa96:	 RIP: 43fa96	 Bytes: 0
  br label %block_.L_43fa96
block_.L_43fa96:

  ; Code: jmpq .L_441708	 RIP: 43fa96	 Bytes: 5
  %loadMem_43fa96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa96 = call %struct.Memory* @routine_jmpq_.L_441708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa96, i64 7282, i64 5)
  store %struct.Memory* %call_43fa96, %struct.Memory** %MEMORY

  br label %block_.L_441708

  ; Code: .L_43fa9b:	 RIP: 43fa9b	 Bytes: 0
block_.L_43fa9b:

  ; Code: cmpl $0x0, -0x120(%rbp)	 RIP: 43fa9b	 Bytes: 7
  %loadMem_43fa9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fa9b = call %struct.Memory* @routine_cmpl__0x0__MINUS0x120__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fa9b)
  store %struct.Memory* %call_43fa9b, %struct.Memory** %MEMORY

  ; Code: je .L_43fbe3	 RIP: 43faa2	 Bytes: 6
  %loadMem_43faa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43faa2 = call %struct.Memory* @routine_je_.L_43fbe3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43faa2, i8* %BRANCH_TAKEN, i64 321, i64 6, i64 6)
  store %struct.Memory* %call_43faa2, %struct.Memory** %MEMORY

  %loadBr_43faa2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43faa2 = icmp eq i8 %loadBr_43faa2, 1
  br i1 %cmpBr_43faa2, label %block_.L_43fbe3, label %block_43faa8

block_43faa8:
  ; Code: leaq -0x6e8(%rbp), %rdi	 RIP: 43faa8	 Bytes: 7
  %loadMem_43faa8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43faa8 = call %struct.Memory* @routine_leaq_MINUS0x6e8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43faa8)
  store %struct.Memory* %call_43faa8, %struct.Memory** %MEMORY

  ; Code: movq -0x40(%rbp), %rax	 RIP: 43faaf	 Bytes: 4
  %loadMem_43faaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43faaf = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43faaf)
  store %struct.Memory* %call_43faaf, %struct.Memory** %MEMORY

  ; Code: movl $0x1, (%rax)	 RIP: 43fab3	 Bytes: 6
  %loadMem_43fab3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fab3 = call %struct.Memory* @routine_movl__0x1____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fab3)
  store %struct.Memory* %call_43fab3, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rax	 RIP: 43fab9	 Bytes: 4
  %loadMem_43fab9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fab9 = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fab9)
  store %struct.Memory* %call_43fab9, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 43fabd	 Bytes: 6
  %loadMem_43fabd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fabd = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fabd)
  store %struct.Memory* %call_43fabd, %struct.Memory** %MEMORY

  ; Code: movl -0x120(%rbp), %ecx	 RIP: 43fac3	 Bytes: 6
  %loadMem_43fac3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fac3 = call %struct.Memory* @routine_movl_MINUS0x120__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fac3)
  store %struct.Memory* %call_43fac3, %struct.Memory** %MEMORY

  ; Code: movq -0x50(%rbp), %rax	 RIP: 43fac9	 Bytes: 4
  %loadMem_43fac9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fac9 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fac9)
  store %struct.Memory* %call_43fac9, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rax)	 RIP: 43facd	 Bytes: 2
  %loadMem_43facd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43facd = call %struct.Memory* @routine_movl__ecx____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43facd)
  store %struct.Memory* %call_43facd, %struct.Memory** %MEMORY

  ; Code: movq -0x698(%rbp), %rax	 RIP: 43facf	 Bytes: 7
  %loadMem_43facf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43facf = call %struct.Memory* @routine_movq_MINUS0x698__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43facf)
  store %struct.Memory* %call_43facf, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0xab0ef8	 RIP: 43fad6	 Bytes: 8
  %loadMem_43fad6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fad6 = call %struct.Memory* @routine_movq__rax__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fad6)
  store %struct.Memory* %call_43fad6, %struct.Memory** %MEMORY

  ; Code: movl -0x69c(%rbp), %ecx	 RIP: 43fade	 Bytes: 6
  %loadMem_43fade = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fade = call %struct.Memory* @routine_movl_MINUS0x69c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fade)
  store %struct.Memory* %call_43fade, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0xab0eec	 RIP: 43fae4	 Bytes: 7
  %loadMem_43fae4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fae4 = call %struct.Memory* @routine_movl__ecx__0xab0eec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fae4)
  store %struct.Memory* %call_43fae4, %struct.Memory** %MEMORY

  ; Code: callq .min_eyes	 RIP: 43faeb	 Bytes: 5
  %loadMem1_43faeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43faeb = call %struct.Memory* @routine_callq_.min_eyes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43faeb, i64 -16379, i64 5, i64 5)
  store %struct.Memory* %call1_43faeb, %struct.Memory** %MEMORY

  %loadMem2_43faeb = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43faeb = load i64, i64* %3
  %call2_43faeb = call %struct.Memory* @sub_43baf0.min_eyes(%struct.State* %0, i64  %loadPC_43faeb, %struct.Memory* %loadMem2_43faeb)
  store %struct.Memory* %call2_43faeb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43faf0	 Bytes: 3
  %loadMem_43faf0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43faf0 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43faf0)
  store %struct.Memory* %call_43faf0, %struct.Memory** %MEMORY

  ; Code: jne .L_43fb3b	 RIP: 43faf3	 Bytes: 6
  %loadMem_43faf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43faf3 = call %struct.Memory* @routine_jne_.L_43fb3b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43faf3, i8* %BRANCH_TAKEN, i64 72, i64 6, i64 6)
  store %struct.Memory* %call_43faf3, %struct.Memory** %MEMORY

  %loadBr_43faf3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43faf3 = icmp eq i8 %loadBr_43faf3, 1
  br i1 %cmpBr_43faf3, label %block_.L_43fb3b, label %block_43faf9

block_43faf9:
  ; Code: cmpq $0x0, 0xab0ef8	 RIP: 43faf9	 Bytes: 9
  %loadMem_43faf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43faf9 = call %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43faf9)
  store %struct.Memory* %call_43faf9, %struct.Memory** %MEMORY

  ; Code: je .L_43fb36	 RIP: 43fb02	 Bytes: 6
  %loadMem_43fb02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb02 = call %struct.Memory* @routine_je_.L_43fb36(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb02, i8* %BRANCH_TAKEN, i64 52, i64 6, i64 6)
  store %struct.Memory* %call_43fb02, %struct.Memory** %MEMORY

  %loadBr_43fb02 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fb02 = icmp eq i8 %loadBr_43fb02, 1
  br i1 %cmpBr_43fb02, label %block_.L_43fb36, label %block_43fb08

block_43fb08:
  ; Code: movl $0x1, %r8d	 RIP: 43fb08	 Bytes: 6
  %loadMem_43fb08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb08 = call %struct.Memory* @routine_movl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb08)
  store %struct.Memory* %call_43fb08, %struct.Memory** %MEMORY

  ; Code: movq $0x57df28, %r9	 RIP: 43fb0e	 Bytes: 10
  %loadMem_43fb0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb0e = call %struct.Memory* @routine_movq__0x57df28___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb0e)
  store %struct.Memory* %call_43fb0e, %struct.Memory** %MEMORY

  ; Code: movq -0x6d0(%rbp), %rdi	 RIP: 43fb18	 Bytes: 7
  %loadMem_43fb18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb18 = call %struct.Memory* @routine_movq_MINUS0x6d0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb18)
  store %struct.Memory* %call_43fb18, %struct.Memory** %MEMORY

  ; Code: movl -0x6d4(%rbp), %esi	 RIP: 43fb1f	 Bytes: 6
  %loadMem_43fb1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb1f = call %struct.Memory* @routine_movl_MINUS0x6d4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb1f)
  store %struct.Memory* %call_43fb1f, %struct.Memory** %MEMORY

  ; Code: movl -0x6d8(%rbp), %edx	 RIP: 43fb25	 Bytes: 6
  %loadMem_43fb25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb25 = call %struct.Memory* @routine_movl_MINUS0x6d8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb25)
  store %struct.Memory* %call_43fb25, %struct.Memory** %MEMORY

  ; Code: movl -0x120(%rbp), %ecx	 RIP: 43fb2b	 Bytes: 6
  %loadMem_43fb2b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb2b = call %struct.Memory* @routine_movl_MINUS0x120__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb2b)
  store %struct.Memory* %call_43fb2b, %struct.Memory** %MEMORY

  ; Code: callq .sgf_trace2	 RIP: 43fb31	 Bytes: 5
  %loadMem1_43fb31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43fb31 = call %struct.Memory* @routine_callq_.sgf_trace2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43fb31, i64 -161809, i64 5, i64 5)
  store %struct.Memory* %call1_43fb31, %struct.Memory** %MEMORY

  %loadMem2_43fb31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43fb31 = load i64, i64* %3
  %call2_43fb31 = call %struct.Memory* @sub_418320.sgf_trace2(%struct.State* %0, i64  %loadPC_43fb31, %struct.Memory* %loadMem2_43fb31)
  store %struct.Memory* %call2_43fb31, %struct.Memory** %MEMORY

  ; Code: .L_43fb36:	 RIP: 43fb36	 Bytes: 0
  br label %block_.L_43fb36
block_.L_43fb36:

  ; Code: jmpq .L_43fb7d	 RIP: 43fb36	 Bytes: 5
  %loadMem_43fb36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb36 = call %struct.Memory* @routine_jmpq_.L_43fb7d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb36, i64 71, i64 5)
  store %struct.Memory* %call_43fb36, %struct.Memory** %MEMORY

  br label %block_.L_43fb7d

  ; Code: .L_43fb3b:	 RIP: 43fb3b	 Bytes: 0
block_.L_43fb3b:

  ; Code: cmpq $0x0, 0xab0ef8	 RIP: 43fb3b	 Bytes: 9
  %loadMem_43fb3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb3b = call %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb3b)
  store %struct.Memory* %call_43fb3b, %struct.Memory** %MEMORY

  ; Code: je .L_43fb78	 RIP: 43fb44	 Bytes: 6
  %loadMem_43fb44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb44 = call %struct.Memory* @routine_je_.L_43fb78(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb44, i8* %BRANCH_TAKEN, i64 52, i64 6, i64 6)
  store %struct.Memory* %call_43fb44, %struct.Memory** %MEMORY

  %loadBr_43fb44 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fb44 = icmp eq i8 %loadBr_43fb44, 1
  br i1 %cmpBr_43fb44, label %block_.L_43fb78, label %block_43fb4a

block_43fb4a:
  ; Code: movl $0x1, %r8d	 RIP: 43fb4a	 Bytes: 6
  %loadMem_43fb4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb4a = call %struct.Memory* @routine_movl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb4a)
  store %struct.Memory* %call_43fb4a, %struct.Memory** %MEMORY

  ; Code: movq $0x57df47, %r9	 RIP: 43fb50	 Bytes: 10
  %loadMem_43fb50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb50 = call %struct.Memory* @routine_movq__0x57df47___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb50)
  store %struct.Memory* %call_43fb50, %struct.Memory** %MEMORY

  ; Code: movq -0x6d0(%rbp), %rdi	 RIP: 43fb5a	 Bytes: 7
  %loadMem_43fb5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb5a = call %struct.Memory* @routine_movq_MINUS0x6d0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb5a)
  store %struct.Memory* %call_43fb5a, %struct.Memory** %MEMORY

  ; Code: movl -0x6d4(%rbp), %esi	 RIP: 43fb61	 Bytes: 6
  %loadMem_43fb61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb61 = call %struct.Memory* @routine_movl_MINUS0x6d4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb61)
  store %struct.Memory* %call_43fb61, %struct.Memory** %MEMORY

  ; Code: movl -0x6d8(%rbp), %edx	 RIP: 43fb67	 Bytes: 6
  %loadMem_43fb67 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb67 = call %struct.Memory* @routine_movl_MINUS0x6d8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb67)
  store %struct.Memory* %call_43fb67, %struct.Memory** %MEMORY

  ; Code: movl -0x120(%rbp), %ecx	 RIP: 43fb6d	 Bytes: 6
  %loadMem_43fb6d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb6d = call %struct.Memory* @routine_movl_MINUS0x120__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb6d)
  store %struct.Memory* %call_43fb6d, %struct.Memory** %MEMORY

  ; Code: callq .sgf_trace2	 RIP: 43fb73	 Bytes: 5
  %loadMem1_43fb73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43fb73 = call %struct.Memory* @routine_callq_.sgf_trace2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43fb73, i64 -161875, i64 5, i64 5)
  store %struct.Memory* %call1_43fb73, %struct.Memory** %MEMORY

  %loadMem2_43fb73 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43fb73 = load i64, i64* %3
  %call2_43fb73 = call %struct.Memory* @sub_418320.sgf_trace2(%struct.State* %0, i64  %loadPC_43fb73, %struct.Memory* %loadMem2_43fb73)
  store %struct.Memory* %call2_43fb73, %struct.Memory** %MEMORY

  ; Code: .L_43fb78:	 RIP: 43fb78	 Bytes: 0
  br label %block_.L_43fb78
block_.L_43fb78:

  ; Code: jmpq .L_43fb7d	 RIP: 43fb78	 Bytes: 5
  %loadMem_43fb78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb78 = call %struct.Memory* @routine_jmpq_.L_43fb7d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb78, i64 5, i64 5)
  store %struct.Memory* %call_43fb78, %struct.Memory** %MEMORY

  br label %block_.L_43fb7d

  ; Code: .L_43fb7d:	 RIP: 43fb7d	 Bytes: 0
block_.L_43fb7d:

  ; Code: jmpq .L_43fb82	 RIP: 43fb7d	 Bytes: 5
  %loadMem_43fb7d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb7d = call %struct.Memory* @routine_jmpq_.L_43fb82(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb7d, i64 5, i64 5)
  store %struct.Memory* %call_43fb7d, %struct.Memory** %MEMORY

  br label %block_.L_43fb82

  ; Code: .L_43fb82:	 RIP: 43fb82	 Bytes: 0
block_.L_43fb82:

  ; Code: cmpq $0x0, -0x50(%rbp)	 RIP: 43fb82	 Bytes: 5
  %loadMem_43fb82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb82 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb82)
  store %struct.Memory* %call_43fb82, %struct.Memory** %MEMORY

  ; Code: je .L_43fb99	 RIP: 43fb87	 Bytes: 6
  %loadMem_43fb87 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb87 = call %struct.Memory* @routine_je_.L_43fb99(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb87, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_43fb87, %struct.Memory** %MEMORY

  %loadBr_43fb87 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fb87 = icmp eq i8 %loadBr_43fb87, 1
  br i1 %cmpBr_43fb87, label %block_.L_43fb99, label %block_43fb8d

block_43fb8d:
  ; Code: movl -0x120(%rbp), %eax	 RIP: 43fb8d	 Bytes: 6
  %loadMem_43fb8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb8d = call %struct.Memory* @routine_movl_MINUS0x120__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb8d)
  store %struct.Memory* %call_43fb8d, %struct.Memory** %MEMORY

  ; Code: movq -0x50(%rbp), %rcx	 RIP: 43fb93	 Bytes: 4
  %loadMem_43fb93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb93 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb93)
  store %struct.Memory* %call_43fb93, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 43fb97	 Bytes: 2
  %loadMem_43fb97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb97 = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb97)
  store %struct.Memory* %call_43fb97, %struct.Memory** %MEMORY

  ; Code: .L_43fb99:	 RIP: 43fb99	 Bytes: 0
  br label %block_.L_43fb99
block_.L_43fb99:

  ; Code: cmpq $0x0, -0x6c0(%rbp)	 RIP: 43fb99	 Bytes: 8
  %loadMem_43fb99 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fb99 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x6c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fb99)
  store %struct.Memory* %call_43fb99, %struct.Memory** %MEMORY

  ; Code: je .L_43fbde	 RIP: 43fba1	 Bytes: 6
  %loadMem_43fba1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fba1 = call %struct.Memory* @routine_je_.L_43fbde(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fba1, i8* %BRANCH_TAKEN, i64 61, i64 6, i64 6)
  store %struct.Memory* %call_43fba1, %struct.Memory** %MEMORY

  %loadBr_43fba1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fba1 = icmp eq i8 %loadBr_43fba1, 1
  br i1 %cmpBr_43fba1, label %block_.L_43fbde, label %block_43fba7

block_43fba7:
  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43fba7	 Bytes: 7
  %loadMem_43fba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fba7 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fba7)
  store %struct.Memory* %call_43fba7, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 43fbae	 Bytes: 3
  %loadMem_43fbae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fbae = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fbae)
  store %struct.Memory* %call_43fbae, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %ecx	 RIP: 43fbb1	 Bytes: 6
  %loadMem_43fbb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fbb1 = call %struct.Memory* @routine_andl__0x3ff___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fbb1)
  store %struct.Memory* %call_43fbb1, %struct.Memory** %MEMORY

  ; Code: orl $0x20000000, %ecx	 RIP: 43fbb7	 Bytes: 6
  %loadMem_43fbb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fbb7 = call %struct.Memory* @routine_orl__0x20000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fbb7)
  store %struct.Memory* %call_43fbb7, %struct.Memory** %MEMORY

  ; Code: orl $0x1000000, %ecx	 RIP: 43fbbd	 Bytes: 6
  %loadMem_43fbbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fbbd = call %struct.Memory* @routine_orl__0x1000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fbbd)
  store %struct.Memory* %call_43fbbd, %struct.Memory** %MEMORY

  ; Code: movl -0x120(%rbp), %edx	 RIP: 43fbc3	 Bytes: 6
  %loadMem_43fbc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fbc3 = call %struct.Memory* @routine_movl_MINUS0x120__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fbc3)
  store %struct.Memory* %call_43fbc3, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %edx	 RIP: 43fbc9	 Bytes: 6
  %loadMem_43fbc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fbc9 = call %struct.Memory* @routine_andl__0x3ff___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fbc9)
  store %struct.Memory* %call_43fbc9, %struct.Memory** %MEMORY

  ; Code: shll $0xa, %edx	 RIP: 43fbcf	 Bytes: 3
  %loadMem_43fbcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fbcf = call %struct.Memory* @routine_shll__0xa___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fbcf)
  store %struct.Memory* %call_43fbcf, %struct.Memory** %MEMORY

  ; Code: orl %edx, %ecx	 RIP: 43fbd2	 Bytes: 2
  %loadMem_43fbd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fbd2 = call %struct.Memory* @routine_orl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fbd2)
  store %struct.Memory* %call_43fbd2, %struct.Memory** %MEMORY

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43fbd4	 Bytes: 7
  %loadMem_43fbd4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fbd4 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fbd4)
  store %struct.Memory* %call_43fbd4, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x4(%rax)	 RIP: 43fbdb	 Bytes: 3
  %loadMem_43fbdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fbdb = call %struct.Memory* @routine_movl__ecx__0x4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fbdb)
  store %struct.Memory* %call_43fbdb, %struct.Memory** %MEMORY

  ; Code: .L_43fbde:	 RIP: 43fbde	 Bytes: 0
  br label %block_.L_43fbde
block_.L_43fbde:

  ; Code: jmpq .L_441708	 RIP: 43fbde	 Bytes: 5
  %loadMem_43fbde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fbde = call %struct.Memory* @routine_jmpq_.L_441708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fbde, i64 6954, i64 5)
  store %struct.Memory* %call_43fbde, %struct.Memory** %MEMORY

  br label %block_.L_441708

  ; Code: .L_43fbe3:	 RIP: 43fbe3	 Bytes: 0
block_.L_43fbe3:

  ; Code: jmpq .L_43fbe8	 RIP: 43fbe3	 Bytes: 5
  %loadMem_43fbe3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fbe3 = call %struct.Memory* @routine_jmpq_.L_43fbe8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fbe3, i64 5, i64 5)
  store %struct.Memory* %call_43fbe3, %struct.Memory** %MEMORY

  br label %block_.L_43fbe8

  ; Code: .L_43fbe8:	 RIP: 43fbe8	 Bytes: 0
block_.L_43fbe8:

  ; Code: jmpq .L_43fbed	 RIP: 43fbe8	 Bytes: 5
  %loadMem_43fbe8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fbe8 = call %struct.Memory* @routine_jmpq_.L_43fbed(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fbe8, i64 5, i64 5)
  store %struct.Memory* %call_43fbe8, %struct.Memory** %MEMORY

  br label %block_.L_43fbed

  ; Code: .L_43fbed:	 RIP: 43fbed	 Bytes: 0
block_.L_43fbed:

  ; Code: jmpq .L_43fbf2	 RIP: 43fbed	 Bytes: 5
  %loadMem_43fbed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fbed = call %struct.Memory* @routine_jmpq_.L_43fbf2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fbed, i64 5, i64 5)
  store %struct.Memory* %call_43fbed, %struct.Memory** %MEMORY

  br label %block_.L_43fbf2

  ; Code: .L_43fbf2:	 RIP: 43fbf2	 Bytes: 0
block_.L_43fbf2:

  ; Code: leaq -0x6e8(%rbp), %rdi	 RIP: 43fbf2	 Bytes: 7
  %loadMem_43fbf2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fbf2 = call %struct.Memory* @routine_leaq_MINUS0x6e8__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fbf2)
  store %struct.Memory* %call_43fbf2, %struct.Memory** %MEMORY

  ; Code: callq .min_eyes	 RIP: 43fbf9	 Bytes: 5
  %loadMem1_43fbf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43fbf9 = call %struct.Memory* @routine_callq_.min_eyes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43fbf9, i64 -16649, i64 5, i64 5)
  store %struct.Memory* %call1_43fbf9, %struct.Memory** %MEMORY

  %loadMem2_43fbf9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43fbf9 = load i64, i64* %3
  %call2_43fbf9 = call %struct.Memory* @sub_43baf0.min_eyes(%struct.State* %0, i64  %loadPC_43fbf9, %struct.Memory* %loadMem2_43fbf9)
  store %struct.Memory* %call2_43fbf9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 43fbfe	 Bytes: 3
  %loadMem_43fbfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fbfe = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fbfe)
  store %struct.Memory* %call_43fbfe, %struct.Memory** %MEMORY

  ; Code: jge .L_43fc19	 RIP: 43fc01	 Bytes: 6
  %loadMem_43fc01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc01 = call %struct.Memory* @routine_jge_.L_43fc19(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc01, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_43fc01, %struct.Memory** %MEMORY

  %loadBr_43fc01 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fc01 = icmp eq i8 %loadBr_43fc01, 1
  br i1 %cmpBr_43fc01, label %block_.L_43fc19, label %block_43fc07

block_43fc07:
  ; Code: movq -0x30(%rbp), %rdi	 RIP: 43fc07	 Bytes: 4
  %loadMem_43fc07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc07 = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc07)
  store %struct.Memory* %call_43fc07, %struct.Memory** %MEMORY

  ; Code: callq .owl_escape_route	 RIP: 43fc0b	 Bytes: 5
  %loadMem1_43fc0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43fc0b = call %struct.Memory* @routine_callq_.owl_escape_route(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43fc0b, i64 14885, i64 5, i64 5)
  store %struct.Memory* %call1_43fc0b, %struct.Memory** %MEMORY

  %loadMem2_43fc0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43fc0b = load i64, i64* %3
  %call2_43fc0b = call %struct.Memory* @sub_443630.owl_escape_route(%struct.State* %0, i64  %loadPC_43fc0b, %struct.Memory* %loadMem2_43fc0b)
  store %struct.Memory* %call2_43fc0b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x5, %eax	 RIP: 43fc10	 Bytes: 3
  %loadMem_43fc10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc10 = call %struct.Memory* @routine_cmpl__0x5___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc10)
  store %struct.Memory* %call_43fc10, %struct.Memory** %MEMORY

  ; Code: jl .L_43fec0	 RIP: 43fc13	 Bytes: 6
  %loadMem_43fc13 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc13 = call %struct.Memory* @routine_jl_.L_43fec0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc13, i8* %BRANCH_TAKEN, i64 685, i64 6, i64 6)
  store %struct.Memory* %call_43fc13, %struct.Memory** %MEMORY

  %loadBr_43fc13 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fc13 = icmp eq i8 %loadBr_43fc13, 1
  br i1 %cmpBr_43fc13, label %block_.L_43fec0, label %block_.L_43fc19

  ; Code: .L_43fc19:	 RIP: 43fc19	 Bytes: 0
block_.L_43fc19:

  ; Code: leaq -0x6e0(%rbp), %rdi	 RIP: 43fc19	 Bytes: 7
  %loadMem_43fc19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc19 = call %struct.Memory* @routine_leaq_MINUS0x6e0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc19)
  store %struct.Memory* %call_43fc19, %struct.Memory** %MEMORY

  ; Code: callq .max_eyes	 RIP: 43fc20	 Bytes: 5
  %loadMem1_43fc20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43fc20 = call %struct.Memory* @routine_callq_.max_eyes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43fc20, i64 -19472, i64 5, i64 5)
  store %struct.Memory* %call1_43fc20, %struct.Memory** %MEMORY

  %loadMem2_43fc20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43fc20 = load i64, i64* %3
  %call2_43fc20 = call %struct.Memory* @sub_43b010.max_eyes(%struct.State* %0, i64  %loadPC_43fc20, %struct.Memory* %loadMem2_43fc20)
  store %struct.Memory* %call2_43fc20, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 43fc25	 Bytes: 3
  %loadMem_43fc25 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc25 = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc25)
  store %struct.Memory* %call_43fc25, %struct.Memory** %MEMORY

  ; Code: jge .L_43fcde	 RIP: 43fc28	 Bytes: 6
  %loadMem_43fc28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc28 = call %struct.Memory* @routine_jge_.L_43fcde(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc28, i8* %BRANCH_TAKEN, i64 182, i64 6, i64 6)
  store %struct.Memory* %call_43fc28, %struct.Memory** %MEMORY

  %loadBr_43fc28 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fc28 = icmp eq i8 %loadBr_43fc28, 1
  br i1 %cmpBr_43fc28, label %block_.L_43fcde, label %block_43fc2e

block_43fc2e:
  ; Code: movq -0x40(%rbp), %rax	 RIP: 43fc2e	 Bytes: 4
  %loadMem_43fc2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc2e = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc2e)
  store %struct.Memory* %call_43fc2e, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 43fc32	 Bytes: 6
  %loadMem_43fc32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc32 = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc32)
  store %struct.Memory* %call_43fc32, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rax	 RIP: 43fc38	 Bytes: 4
  %loadMem_43fc38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc38 = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc38)
  store %struct.Memory* %call_43fc38, %struct.Memory** %MEMORY

  ; Code: movl $0x1, (%rax)	 RIP: 43fc3c	 Bytes: 6
  %loadMem_43fc3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc3c = call %struct.Memory* @routine_movl__0x1____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc3c)
  store %struct.Memory* %call_43fc3c, %struct.Memory** %MEMORY

  ; Code: movq -0x50(%rbp), %rax	 RIP: 43fc42	 Bytes: 4
  %loadMem_43fc42 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc42 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc42)
  store %struct.Memory* %call_43fc42, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 43fc46	 Bytes: 6
  %loadMem_43fc46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc46 = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc46)
  store %struct.Memory* %call_43fc46, %struct.Memory** %MEMORY

  ; Code: movq -0x698(%rbp), %rax	 RIP: 43fc4c	 Bytes: 7
  %loadMem_43fc4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc4c = call %struct.Memory* @routine_movq_MINUS0x698__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc4c)
  store %struct.Memory* %call_43fc4c, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0xab0ef8	 RIP: 43fc53	 Bytes: 8
  %loadMem_43fc53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc53 = call %struct.Memory* @routine_movq__rax__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc53)
  store %struct.Memory* %call_43fc53, %struct.Memory** %MEMORY

  ; Code: movl -0x69c(%rbp), %ecx	 RIP: 43fc5b	 Bytes: 6
  %loadMem_43fc5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc5b = call %struct.Memory* @routine_movl_MINUS0x69c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc5b)
  store %struct.Memory* %call_43fc5b, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0xab0eec	 RIP: 43fc61	 Bytes: 7
  %loadMem_43fc61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc61 = call %struct.Memory* @routine_movl__ecx__0xab0eec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc61)
  store %struct.Memory* %call_43fc61, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, 0xab0ef8	 RIP: 43fc68	 Bytes: 9
  %loadMem_43fc68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc68 = call %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc68)
  store %struct.Memory* %call_43fc68, %struct.Memory** %MEMORY

  ; Code: je .L_43fca0	 RIP: 43fc71	 Bytes: 6
  %loadMem_43fc71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc71 = call %struct.Memory* @routine_je_.L_43fca0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc71, i8* %BRANCH_TAKEN, i64 47, i64 6, i64 6)
  store %struct.Memory* %call_43fc71, %struct.Memory** %MEMORY

  %loadBr_43fc71 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fc71 = icmp eq i8 %loadBr_43fc71, 1
  br i1 %cmpBr_43fc71, label %block_.L_43fca0, label %block_43fc77

block_43fc77:
  ; Code: xorl %eax, %eax	 RIP: 43fc77	 Bytes: 2
  %loadMem_43fc77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc77 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc77)
  store %struct.Memory* %call_43fc77, %struct.Memory** %MEMORY

  ; Code: movq $0x57df6f, %r9	 RIP: 43fc79	 Bytes: 10
  %loadMem_43fc79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc79 = call %struct.Memory* @routine_movq__0x57df6f___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc79)
  store %struct.Memory* %call_43fc79, %struct.Memory** %MEMORY

  ; Code: movq -0x6d0(%rbp), %rdi	 RIP: 43fc83	 Bytes: 7
  %loadMem_43fc83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc83 = call %struct.Memory* @routine_movq_MINUS0x6d0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc83)
  store %struct.Memory* %call_43fc83, %struct.Memory** %MEMORY

  ; Code: movl -0x6d4(%rbp), %esi	 RIP: 43fc8a	 Bytes: 6
  %loadMem_43fc8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc8a = call %struct.Memory* @routine_movl_MINUS0x6d4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc8a)
  store %struct.Memory* %call_43fc8a, %struct.Memory** %MEMORY

  ; Code: movl -0x6d8(%rbp), %edx	 RIP: 43fc90	 Bytes: 6
  %loadMem_43fc90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc90 = call %struct.Memory* @routine_movl_MINUS0x6d8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc90)
  store %struct.Memory* %call_43fc90, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 43fc96	 Bytes: 2
  %loadMem_43fc96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc96 = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc96)
  store %struct.Memory* %call_43fc96, %struct.Memory** %MEMORY

  ; Code: movl %eax, %r8d	 RIP: 43fc98	 Bytes: 3
  %loadMem_43fc98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fc98 = call %struct.Memory* @routine_movl__eax___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fc98)
  store %struct.Memory* %call_43fc98, %struct.Memory** %MEMORY

  ; Code: callq .sgf_trace2	 RIP: 43fc9b	 Bytes: 5
  %loadMem1_43fc9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43fc9b = call %struct.Memory* @routine_callq_.sgf_trace2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43fc9b, i64 -162171, i64 5, i64 5)
  store %struct.Memory* %call1_43fc9b, %struct.Memory** %MEMORY

  %loadMem2_43fc9b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43fc9b = load i64, i64* %3
  %call2_43fc9b = call %struct.Memory* @sub_418320.sgf_trace2(%struct.State* %0, i64  %loadPC_43fc9b, %struct.Memory* %loadMem2_43fc9b)
  store %struct.Memory* %call2_43fc9b, %struct.Memory** %MEMORY

  ; Code: .L_43fca0:	 RIP: 43fca0	 Bytes: 0
  br label %block_.L_43fca0
block_.L_43fca0:

  ; Code: jmpq .L_43fca5	 RIP: 43fca0	 Bytes: 5
  %loadMem_43fca0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fca0 = call %struct.Memory* @routine_jmpq_.L_43fca5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fca0, i64 5, i64 5)
  store %struct.Memory* %call_43fca0, %struct.Memory** %MEMORY

  br label %block_.L_43fca5

  ; Code: .L_43fca5:	 RIP: 43fca5	 Bytes: 0
block_.L_43fca5:

  ; Code: cmpq $0x0, -0x6c0(%rbp)	 RIP: 43fca5	 Bytes: 8
  %loadMem_43fca5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fca5 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x6c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fca5)
  store %struct.Memory* %call_43fca5, %struct.Memory** %MEMORY

  ; Code: je .L_43fcd9	 RIP: 43fcad	 Bytes: 6
  %loadMem_43fcad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fcad = call %struct.Memory* @routine_je_.L_43fcd9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fcad, i8* %BRANCH_TAKEN, i64 44, i64 6, i64 6)
  store %struct.Memory* %call_43fcad, %struct.Memory** %MEMORY

  %loadBr_43fcad = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fcad = icmp eq i8 %loadBr_43fcad, 1
  br i1 %cmpBr_43fcad, label %block_.L_43fcd9, label %block_43fcb3

block_43fcb3:
  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43fcb3	 Bytes: 7
  %loadMem_43fcb3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fcb3 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fcb3)
  store %struct.Memory* %call_43fcb3, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 43fcba	 Bytes: 3
  %loadMem_43fcba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fcba = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fcba)
  store %struct.Memory* %call_43fcba, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %ecx	 RIP: 43fcbd	 Bytes: 6
  %loadMem_43fcbd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fcbd = call %struct.Memory* @routine_andl__0x3ff___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fcbd)
  store %struct.Memory* %call_43fcbd, %struct.Memory** %MEMORY

  ; Code: orl $0x20000000, %ecx	 RIP: 43fcc3	 Bytes: 6
  %loadMem_43fcc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fcc3 = call %struct.Memory* @routine_orl__0x20000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fcc3)
  store %struct.Memory* %call_43fcc3, %struct.Memory** %MEMORY

  ; Code: orl $0x100000, %ecx	 RIP: 43fcc9	 Bytes: 6
  %loadMem_43fcc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fcc9 = call %struct.Memory* @routine_orl__0x100000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fcc9)
  store %struct.Memory* %call_43fcc9, %struct.Memory** %MEMORY

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43fccf	 Bytes: 7
  %loadMem_43fccf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fccf = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fccf)
  store %struct.Memory* %call_43fccf, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x4(%rax)	 RIP: 43fcd6	 Bytes: 3
  %loadMem_43fcd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fcd6 = call %struct.Memory* @routine_movl__ecx__0x4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fcd6)
  store %struct.Memory* %call_43fcd6, %struct.Memory** %MEMORY

  ; Code: .L_43fcd9:	 RIP: 43fcd9	 Bytes: 0
  br label %block_.L_43fcd9
block_.L_43fcd9:

  ; Code: jmpq .L_441708	 RIP: 43fcd9	 Bytes: 5
  %loadMem_43fcd9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fcd9 = call %struct.Memory* @routine_jmpq_.L_441708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fcd9, i64 6703, i64 5)
  store %struct.Memory* %call_43fcd9, %struct.Memory** %MEMORY

  br label %block_.L_441708

  ; Code: .L_43fcde:	 RIP: 43fcde	 Bytes: 0
block_.L_43fcde:

  ; Code: leaq -0x6e0(%rbp), %rdi	 RIP: 43fcde	 Bytes: 7
  %loadMem_43fcde = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fcde = call %struct.Memory* @routine_leaq_MINUS0x6e0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fcde)
  store %struct.Memory* %call_43fcde, %struct.Memory** %MEMORY

  ; Code: callq .min_eyes	 RIP: 43fce5	 Bytes: 5
  %loadMem1_43fce5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43fce5 = call %struct.Memory* @routine_callq_.min_eyes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43fce5, i64 -16885, i64 5, i64 5)
  store %struct.Memory* %call1_43fce5, %struct.Memory** %MEMORY

  %loadMem2_43fce5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43fce5 = load i64, i64* %3
  %call2_43fce5 = call %struct.Memory* @sub_43baf0.min_eyes(%struct.State* %0, i64  %loadPC_43fce5, %struct.Memory* %loadMem2_43fce5)
  store %struct.Memory* %call2_43fce5, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, %eax	 RIP: 43fcea	 Bytes: 3
  %loadMem_43fcea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fcea = call %struct.Memory* @routine_cmpl__0x2___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fcea)
  store %struct.Memory* %call_43fcea, %struct.Memory** %MEMORY

  ; Code: jl .L_43fdbf	 RIP: 43fced	 Bytes: 6
  %loadMem_43fced = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fced = call %struct.Memory* @routine_jl_.L_43fdbf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fced, i8* %BRANCH_TAKEN, i64 210, i64 6, i64 6)
  store %struct.Memory* %call_43fced, %struct.Memory** %MEMORY

  %loadBr_43fced = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fced = icmp eq i8 %loadBr_43fced, 1
  br i1 %cmpBr_43fced, label %block_.L_43fdbf, label %block_43fcf3

block_43fcf3:
  ; Code: movq -0x40(%rbp), %rax	 RIP: 43fcf3	 Bytes: 4
  %loadMem_43fcf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fcf3 = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fcf3)
  store %struct.Memory* %call_43fcf3, %struct.Memory** %MEMORY

  ; Code: movl $0x1, (%rax)	 RIP: 43fcf7	 Bytes: 6
  %loadMem_43fcf7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fcf7 = call %struct.Memory* @routine_movl__0x1____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fcf7)
  store %struct.Memory* %call_43fcf7, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rax	 RIP: 43fcfd	 Bytes: 4
  %loadMem_43fcfd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fcfd = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fcfd)
  store %struct.Memory* %call_43fcfd, %struct.Memory** %MEMORY

  ; Code: movl $0x1, (%rax)	 RIP: 43fd01	 Bytes: 6
  %loadMem_43fd01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd01 = call %struct.Memory* @routine_movl__0x1____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd01)
  store %struct.Memory* %call_43fd01, %struct.Memory** %MEMORY

  ; Code: movq -0x50(%rbp), %rax	 RIP: 43fd07	 Bytes: 4
  %loadMem_43fd07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd07 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd07)
  store %struct.Memory* %call_43fd07, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 43fd0b	 Bytes: 6
  %loadMem_43fd0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd0b = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd0b)
  store %struct.Memory* %call_43fd0b, %struct.Memory** %MEMORY

  ; Code: movq -0x698(%rbp), %rax	 RIP: 43fd11	 Bytes: 7
  %loadMem_43fd11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd11 = call %struct.Memory* @routine_movq_MINUS0x698__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd11)
  store %struct.Memory* %call_43fd11, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0xab0ef8	 RIP: 43fd18	 Bytes: 8
  %loadMem_43fd18 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd18 = call %struct.Memory* @routine_movq__rax__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd18)
  store %struct.Memory* %call_43fd18, %struct.Memory** %MEMORY

  ; Code: movl -0x69c(%rbp), %ecx	 RIP: 43fd20	 Bytes: 6
  %loadMem_43fd20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd20 = call %struct.Memory* @routine_movl_MINUS0x69c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd20)
  store %struct.Memory* %call_43fd20, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0xab0eec	 RIP: 43fd26	 Bytes: 7
  %loadMem_43fd26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd26 = call %struct.Memory* @routine_movl__ecx__0xab0eec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd26)
  store %struct.Memory* %call_43fd26, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, 0xab0ef8	 RIP: 43fd2d	 Bytes: 9
  %loadMem_43fd2d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd2d = call %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd2d)
  store %struct.Memory* %call_43fd2d, %struct.Memory** %MEMORY

  ; Code: je .L_43fd66	 RIP: 43fd36	 Bytes: 6
  %loadMem_43fd36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd36 = call %struct.Memory* @routine_je_.L_43fd66(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd36, i8* %BRANCH_TAKEN, i64 48, i64 6, i64 6)
  store %struct.Memory* %call_43fd36, %struct.Memory** %MEMORY

  %loadBr_43fd36 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fd36 = icmp eq i8 %loadBr_43fd36, 1
  br i1 %cmpBr_43fd36, label %block_.L_43fd66, label %block_43fd3c

block_43fd3c:
  ; Code: xorl %ecx, %ecx	 RIP: 43fd3c	 Bytes: 2
  %loadMem_43fd3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd3c = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd3c)
  store %struct.Memory* %call_43fd3c, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %r8d	 RIP: 43fd3e	 Bytes: 6
  %loadMem_43fd3e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd3e = call %struct.Memory* @routine_movl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd3e)
  store %struct.Memory* %call_43fd3e, %struct.Memory** %MEMORY

  ; Code: movq $0x57df65, %r9	 RIP: 43fd44	 Bytes: 10
  %loadMem_43fd44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd44 = call %struct.Memory* @routine_movq__0x57df65___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd44)
  store %struct.Memory* %call_43fd44, %struct.Memory** %MEMORY

  ; Code: movq -0x6d0(%rbp), %rdi	 RIP: 43fd4e	 Bytes: 7
  %loadMem_43fd4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd4e = call %struct.Memory* @routine_movq_MINUS0x6d0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd4e)
  store %struct.Memory* %call_43fd4e, %struct.Memory** %MEMORY

  ; Code: movl -0x6d4(%rbp), %esi	 RIP: 43fd55	 Bytes: 6
  %loadMem_43fd55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd55 = call %struct.Memory* @routine_movl_MINUS0x6d4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd55)
  store %struct.Memory* %call_43fd55, %struct.Memory** %MEMORY

  ; Code: movl -0x6d8(%rbp), %edx	 RIP: 43fd5b	 Bytes: 6
  %loadMem_43fd5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd5b = call %struct.Memory* @routine_movl_MINUS0x6d8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd5b)
  store %struct.Memory* %call_43fd5b, %struct.Memory** %MEMORY

  ; Code: callq .sgf_trace2	 RIP: 43fd61	 Bytes: 5
  %loadMem1_43fd61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43fd61 = call %struct.Memory* @routine_callq_.sgf_trace2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43fd61, i64 -162369, i64 5, i64 5)
  store %struct.Memory* %call1_43fd61, %struct.Memory** %MEMORY

  %loadMem2_43fd61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43fd61 = load i64, i64* %3
  %call2_43fd61 = call %struct.Memory* @sub_418320.sgf_trace2(%struct.State* %0, i64  %loadPC_43fd61, %struct.Memory* %loadMem2_43fd61)
  store %struct.Memory* %call2_43fd61, %struct.Memory** %MEMORY

  ; Code: .L_43fd66:	 RIP: 43fd66	 Bytes: 0
  br label %block_.L_43fd66
block_.L_43fd66:

  ; Code: jmpq .L_43fd6b	 RIP: 43fd66	 Bytes: 5
  %loadMem_43fd66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd66 = call %struct.Memory* @routine_jmpq_.L_43fd6b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd66, i64 5, i64 5)
  store %struct.Memory* %call_43fd66, %struct.Memory** %MEMORY

  br label %block_.L_43fd6b

  ; Code: .L_43fd6b:	 RIP: 43fd6b	 Bytes: 0
block_.L_43fd6b:

  ; Code: cmpq $0x0, -0x50(%rbp)	 RIP: 43fd6b	 Bytes: 5
  %loadMem_43fd6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd6b = call %struct.Memory* @routine_cmpq__0x0__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd6b)
  store %struct.Memory* %call_43fd6b, %struct.Memory** %MEMORY

  ; Code: je .L_43fd80	 RIP: 43fd70	 Bytes: 6
  %loadMem_43fd70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd70 = call %struct.Memory* @routine_je_.L_43fd80(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd70, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_43fd70, %struct.Memory** %MEMORY

  %loadBr_43fd70 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fd70 = icmp eq i8 %loadBr_43fd70, 1
  br i1 %cmpBr_43fd70, label %block_.L_43fd80, label %block_43fd76

block_43fd76:
  ; Code: movq -0x50(%rbp), %rax	 RIP: 43fd76	 Bytes: 4
  %loadMem_43fd76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd76 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd76)
  store %struct.Memory* %call_43fd76, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 43fd7a	 Bytes: 6
  %loadMem_43fd7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd7a = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd7a)
  store %struct.Memory* %call_43fd7a, %struct.Memory** %MEMORY

  ; Code: .L_43fd80:	 RIP: 43fd80	 Bytes: 0
  br label %block_.L_43fd80
block_.L_43fd80:

  ; Code: cmpq $0x0, -0x6c0(%rbp)	 RIP: 43fd80	 Bytes: 8
  %loadMem_43fd80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd80 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x6c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd80)
  store %struct.Memory* %call_43fd80, %struct.Memory** %MEMORY

  ; Code: je .L_43fdba	 RIP: 43fd88	 Bytes: 6
  %loadMem_43fd88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd88 = call %struct.Memory* @routine_je_.L_43fdba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd88, i8* %BRANCH_TAKEN, i64 50, i64 6, i64 6)
  store %struct.Memory* %call_43fd88, %struct.Memory** %MEMORY

  %loadBr_43fd88 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fd88 = icmp eq i8 %loadBr_43fd88, 1
  br i1 %cmpBr_43fd88, label %block_.L_43fdba, label %block_43fd8e

block_43fd8e:
  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43fd8e	 Bytes: 7
  %loadMem_43fd8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd8e = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd8e)
  store %struct.Memory* %call_43fd8e, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 43fd95	 Bytes: 3
  %loadMem_43fd95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd95 = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd95)
  store %struct.Memory* %call_43fd95, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %ecx	 RIP: 43fd98	 Bytes: 6
  %loadMem_43fd98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd98 = call %struct.Memory* @routine_andl__0x3ff___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd98)
  store %struct.Memory* %call_43fd98, %struct.Memory** %MEMORY

  ; Code: orl $0x20000000, %ecx	 RIP: 43fd9e	 Bytes: 6
  %loadMem_43fd9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fd9e = call %struct.Memory* @routine_orl__0x20000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fd9e)
  store %struct.Memory* %call_43fd9e, %struct.Memory** %MEMORY

  ; Code: orl $0x1000000, %ecx	 RIP: 43fda4	 Bytes: 6
  %loadMem_43fda4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fda4 = call %struct.Memory* @routine_orl__0x1000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fda4)
  store %struct.Memory* %call_43fda4, %struct.Memory** %MEMORY

  ; Code: orl $0x100000, %ecx	 RIP: 43fdaa	 Bytes: 6
  %loadMem_43fdaa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fdaa = call %struct.Memory* @routine_orl__0x100000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fdaa)
  store %struct.Memory* %call_43fdaa, %struct.Memory** %MEMORY

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43fdb0	 Bytes: 7
  %loadMem_43fdb0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fdb0 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fdb0)
  store %struct.Memory* %call_43fdb0, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x4(%rax)	 RIP: 43fdb7	 Bytes: 3
  %loadMem_43fdb7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fdb7 = call %struct.Memory* @routine_movl__ecx__0x4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fdb7)
  store %struct.Memory* %call_43fdb7, %struct.Memory** %MEMORY

  ; Code: .L_43fdba:	 RIP: 43fdba	 Bytes: 0
  br label %block_.L_43fdba
block_.L_43fdba:

  ; Code: jmpq .L_441708	 RIP: 43fdba	 Bytes: 5
  %loadMem_43fdba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fdba = call %struct.Memory* @routine_jmpq_.L_441708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fdba, i64 6478, i64 5)
  store %struct.Memory* %call_43fdba, %struct.Memory** %MEMORY

  br label %block_.L_441708

  ; Code: .L_43fdbf:	 RIP: 43fdbf	 Bytes: 0
block_.L_43fdbf:

  ; Code: cmpl $0x0, -0xc0(%rbp)	 RIP: 43fdbf	 Bytes: 7
  %loadMem_43fdbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fdbf = call %struct.Memory* @routine_cmpl__0x0__MINUS0xc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fdbf)
  store %struct.Memory* %call_43fdbf, %struct.Memory** %MEMORY

  ; Code: je .L_43feb1	 RIP: 43fdc6	 Bytes: 6
  %loadMem_43fdc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fdc6 = call %struct.Memory* @routine_je_.L_43feb1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fdc6, i8* %BRANCH_TAKEN, i64 235, i64 6, i64 6)
  store %struct.Memory* %call_43fdc6, %struct.Memory** %MEMORY

  %loadBr_43fdc6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fdc6 = icmp eq i8 %loadBr_43fdc6, 1
  br i1 %cmpBr_43fdc6, label %block_.L_43feb1, label %block_43fdcc

block_43fdcc:
  ; Code: movq -0x40(%rbp), %rax	 RIP: 43fdcc	 Bytes: 4
  %loadMem_43fdcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fdcc = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fdcc)
  store %struct.Memory* %call_43fdcc, %struct.Memory** %MEMORY

  ; Code: movl $0x1, (%rax)	 RIP: 43fdd0	 Bytes: 6
  %loadMem_43fdd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fdd0 = call %struct.Memory* @routine_movl__0x1____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fdd0)
  store %struct.Memory* %call_43fdd0, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rax	 RIP: 43fdd6	 Bytes: 4
  %loadMem_43fdd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fdd6 = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fdd6)
  store %struct.Memory* %call_43fdd6, %struct.Memory** %MEMORY

  ; Code: movl $0x1, (%rax)	 RIP: 43fdda	 Bytes: 6
  %loadMem_43fdda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fdda = call %struct.Memory* @routine_movl__0x1____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fdda)
  store %struct.Memory* %call_43fdda, %struct.Memory** %MEMORY

  ; Code: movl -0xc0(%rbp), %ecx	 RIP: 43fde0	 Bytes: 6
  %loadMem_43fde0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fde0 = call %struct.Memory* @routine_movl_MINUS0xc0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fde0)
  store %struct.Memory* %call_43fde0, %struct.Memory** %MEMORY

  ; Code: movq -0x50(%rbp), %rax	 RIP: 43fde6	 Bytes: 4
  %loadMem_43fde6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fde6 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fde6)
  store %struct.Memory* %call_43fde6, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rax)	 RIP: 43fdea	 Bytes: 2
  %loadMem_43fdea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fdea = call %struct.Memory* @routine_movl__ecx____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fdea)
  store %struct.Memory* %call_43fdea, %struct.Memory** %MEMORY

  ; Code: movq -0x698(%rbp), %rax	 RIP: 43fdec	 Bytes: 7
  %loadMem_43fdec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fdec = call %struct.Memory* @routine_movq_MINUS0x698__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fdec)
  store %struct.Memory* %call_43fdec, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0xab0ef8	 RIP: 43fdf3	 Bytes: 8
  %loadMem_43fdf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fdf3 = call %struct.Memory* @routine_movq__rax__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fdf3)
  store %struct.Memory* %call_43fdf3, %struct.Memory** %MEMORY

  ; Code: movl -0x69c(%rbp), %ecx	 RIP: 43fdfb	 Bytes: 6
  %loadMem_43fdfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fdfb = call %struct.Memory* @routine_movl_MINUS0x69c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fdfb)
  store %struct.Memory* %call_43fdfb, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0xab0eec	 RIP: 43fe01	 Bytes: 7
  %loadMem_43fe01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe01 = call %struct.Memory* @routine_movl__ecx__0xab0eec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe01)
  store %struct.Memory* %call_43fe01, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, 0xab0ef8	 RIP: 43fe08	 Bytes: 9
  %loadMem_43fe08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe08 = call %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe08)
  store %struct.Memory* %call_43fe08, %struct.Memory** %MEMORY

  ; Code: je .L_43fe45	 RIP: 43fe11	 Bytes: 6
  %loadMem_43fe11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe11 = call %struct.Memory* @routine_je_.L_43fe45(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe11, i8* %BRANCH_TAKEN, i64 52, i64 6, i64 6)
  store %struct.Memory* %call_43fe11, %struct.Memory** %MEMORY

  %loadBr_43fe11 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fe11 = icmp eq i8 %loadBr_43fe11, 1
  br i1 %cmpBr_43fe11, label %block_.L_43fe45, label %block_43fe17

block_43fe17:
  ; Code: movl $0x1, %r8d	 RIP: 43fe17	 Bytes: 6
  %loadMem_43fe17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe17 = call %struct.Memory* @routine_movl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe17)
  store %struct.Memory* %call_43fe17, %struct.Memory** %MEMORY

  ; Code: movq $0x57df65, %r9	 RIP: 43fe1d	 Bytes: 10
  %loadMem_43fe1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe1d = call %struct.Memory* @routine_movq__0x57df65___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe1d)
  store %struct.Memory* %call_43fe1d, %struct.Memory** %MEMORY

  ; Code: movq -0x6d0(%rbp), %rdi	 RIP: 43fe27	 Bytes: 7
  %loadMem_43fe27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe27 = call %struct.Memory* @routine_movq_MINUS0x6d0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe27)
  store %struct.Memory* %call_43fe27, %struct.Memory** %MEMORY

  ; Code: movl -0x6d4(%rbp), %esi	 RIP: 43fe2e	 Bytes: 6
  %loadMem_43fe2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe2e = call %struct.Memory* @routine_movl_MINUS0x6d4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe2e)
  store %struct.Memory* %call_43fe2e, %struct.Memory** %MEMORY

  ; Code: movl -0x6d8(%rbp), %edx	 RIP: 43fe34	 Bytes: 6
  %loadMem_43fe34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe34 = call %struct.Memory* @routine_movl_MINUS0x6d8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe34)
  store %struct.Memory* %call_43fe34, %struct.Memory** %MEMORY

  ; Code: movl -0xc0(%rbp), %ecx	 RIP: 43fe3a	 Bytes: 6
  %loadMem_43fe3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe3a = call %struct.Memory* @routine_movl_MINUS0xc0__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe3a)
  store %struct.Memory* %call_43fe3a, %struct.Memory** %MEMORY

  ; Code: callq .sgf_trace2	 RIP: 43fe40	 Bytes: 5
  %loadMem1_43fe40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43fe40 = call %struct.Memory* @routine_callq_.sgf_trace2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43fe40, i64 -162592, i64 5, i64 5)
  store %struct.Memory* %call1_43fe40, %struct.Memory** %MEMORY

  %loadMem2_43fe40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43fe40 = load i64, i64* %3
  %call2_43fe40 = call %struct.Memory* @sub_418320.sgf_trace2(%struct.State* %0, i64  %loadPC_43fe40, %struct.Memory* %loadMem2_43fe40)
  store %struct.Memory* %call2_43fe40, %struct.Memory** %MEMORY

  ; Code: .L_43fe45:	 RIP: 43fe45	 Bytes: 0
  br label %block_.L_43fe45
block_.L_43fe45:

  ; Code: jmpq .L_43fe4a	 RIP: 43fe45	 Bytes: 5
  %loadMem_43fe45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe45 = call %struct.Memory* @routine_jmpq_.L_43fe4a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe45, i64 5, i64 5)
  store %struct.Memory* %call_43fe45, %struct.Memory** %MEMORY

  br label %block_.L_43fe4a

  ; Code: .L_43fe4a:	 RIP: 43fe4a	 Bytes: 0
block_.L_43fe4a:

  ; Code: cmpq $0x0, -0x50(%rbp)	 RIP: 43fe4a	 Bytes: 5
  %loadMem_43fe4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe4a = call %struct.Memory* @routine_cmpq__0x0__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe4a)
  store %struct.Memory* %call_43fe4a, %struct.Memory** %MEMORY

  ; Code: je .L_43fe61	 RIP: 43fe4f	 Bytes: 6
  %loadMem_43fe4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe4f = call %struct.Memory* @routine_je_.L_43fe61(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe4f, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_43fe4f, %struct.Memory** %MEMORY

  %loadBr_43fe4f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fe4f = icmp eq i8 %loadBr_43fe4f, 1
  br i1 %cmpBr_43fe4f, label %block_.L_43fe61, label %block_43fe55

block_43fe55:
  ; Code: movl -0xc0(%rbp), %eax	 RIP: 43fe55	 Bytes: 6
  %loadMem_43fe55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe55 = call %struct.Memory* @routine_movl_MINUS0xc0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe55)
  store %struct.Memory* %call_43fe55, %struct.Memory** %MEMORY

  ; Code: movq -0x50(%rbp), %rcx	 RIP: 43fe5b	 Bytes: 4
  %loadMem_43fe5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe5b = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe5b)
  store %struct.Memory* %call_43fe5b, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 43fe5f	 Bytes: 2
  %loadMem_43fe5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe5f = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe5f)
  store %struct.Memory* %call_43fe5f, %struct.Memory** %MEMORY

  ; Code: .L_43fe61:	 RIP: 43fe61	 Bytes: 0
  br label %block_.L_43fe61
block_.L_43fe61:

  ; Code: cmpq $0x0, -0x6c0(%rbp)	 RIP: 43fe61	 Bytes: 8
  %loadMem_43fe61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe61 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x6c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe61)
  store %struct.Memory* %call_43fe61, %struct.Memory** %MEMORY

  ; Code: je .L_43feac	 RIP: 43fe69	 Bytes: 6
  %loadMem_43fe69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe69 = call %struct.Memory* @routine_je_.L_43feac(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe69, i8* %BRANCH_TAKEN, i64 67, i64 6, i64 6)
  store %struct.Memory* %call_43fe69, %struct.Memory** %MEMORY

  %loadBr_43fe69 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fe69 = icmp eq i8 %loadBr_43fe69, 1
  br i1 %cmpBr_43fe69, label %block_.L_43feac, label %block_43fe6f

block_43fe6f:
  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43fe6f	 Bytes: 7
  %loadMem_43fe6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe6f = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe6f)
  store %struct.Memory* %call_43fe6f, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 43fe76	 Bytes: 3
  %loadMem_43fe76 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe76 = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe76)
  store %struct.Memory* %call_43fe76, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %ecx	 RIP: 43fe79	 Bytes: 6
  %loadMem_43fe79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe79 = call %struct.Memory* @routine_andl__0x3ff___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe79)
  store %struct.Memory* %call_43fe79, %struct.Memory** %MEMORY

  ; Code: orl $0x20000000, %ecx	 RIP: 43fe7f	 Bytes: 6
  %loadMem_43fe7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe7f = call %struct.Memory* @routine_orl__0x20000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe7f)
  store %struct.Memory* %call_43fe7f, %struct.Memory** %MEMORY

  ; Code: orl $0x1000000, %ecx	 RIP: 43fe85	 Bytes: 6
  %loadMem_43fe85 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe85 = call %struct.Memory* @routine_orl__0x1000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe85)
  store %struct.Memory* %call_43fe85, %struct.Memory** %MEMORY

  ; Code: orl $0x100000, %ecx	 RIP: 43fe8b	 Bytes: 6
  %loadMem_43fe8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe8b = call %struct.Memory* @routine_orl__0x100000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe8b)
  store %struct.Memory* %call_43fe8b, %struct.Memory** %MEMORY

  ; Code: movl -0xc0(%rbp), %edx	 RIP: 43fe91	 Bytes: 6
  %loadMem_43fe91 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe91 = call %struct.Memory* @routine_movl_MINUS0xc0__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe91)
  store %struct.Memory* %call_43fe91, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %edx	 RIP: 43fe97	 Bytes: 6
  %loadMem_43fe97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe97 = call %struct.Memory* @routine_andl__0x3ff___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe97)
  store %struct.Memory* %call_43fe97, %struct.Memory** %MEMORY

  ; Code: shll $0xa, %edx	 RIP: 43fe9d	 Bytes: 3
  %loadMem_43fe9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fe9d = call %struct.Memory* @routine_shll__0xa___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fe9d)
  store %struct.Memory* %call_43fe9d, %struct.Memory** %MEMORY

  ; Code: orl %edx, %ecx	 RIP: 43fea0	 Bytes: 2
  %loadMem_43fea0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fea0 = call %struct.Memory* @routine_orl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fea0)
  store %struct.Memory* %call_43fea0, %struct.Memory** %MEMORY

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 43fea2	 Bytes: 7
  %loadMem_43fea2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fea2 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fea2)
  store %struct.Memory* %call_43fea2, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x4(%rax)	 RIP: 43fea9	 Bytes: 3
  %loadMem_43fea9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fea9 = call %struct.Memory* @routine_movl__ecx__0x4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fea9)
  store %struct.Memory* %call_43fea9, %struct.Memory** %MEMORY

  ; Code: .L_43feac:	 RIP: 43feac	 Bytes: 0
  br label %block_.L_43feac
block_.L_43feac:

  ; Code: jmpq .L_441708	 RIP: 43feac	 Bytes: 5
  %loadMem_43feac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43feac = call %struct.Memory* @routine_jmpq_.L_441708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43feac, i64 6236, i64 5)
  store %struct.Memory* %call_43feac, %struct.Memory** %MEMORY

  br label %block_.L_441708

  ; Code: .L_43feb1:	 RIP: 43feb1	 Bytes: 0
block_.L_43feb1:

  ; Code: jmpq .L_43feb6	 RIP: 43feb1	 Bytes: 5
  %loadMem_43feb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43feb1 = call %struct.Memory* @routine_jmpq_.L_43feb6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43feb1, i64 5, i64 5)
  store %struct.Memory* %call_43feb1, %struct.Memory** %MEMORY

  br label %block_.L_43feb6

  ; Code: .L_43feb6:	 RIP: 43feb6	 Bytes: 0
block_.L_43feb6:

  ; Code: jmpq .L_43febb	 RIP: 43feb6	 Bytes: 5
  %loadMem_43feb6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43feb6 = call %struct.Memory* @routine_jmpq_.L_43febb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43feb6, i64 5, i64 5)
  store %struct.Memory* %call_43feb6, %struct.Memory** %MEMORY

  br label %block_.L_43febb

  ; Code: .L_43febb:	 RIP: 43febb	 Bytes: 0
block_.L_43febb:

  ; Code: jmpq .L_43fec0	 RIP: 43febb	 Bytes: 5
  %loadMem_43febb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43febb = call %struct.Memory* @routine_jmpq_.L_43fec0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43febb, i64 5, i64 5)
  store %struct.Memory* %call_43febb, %struct.Memory** %MEMORY

  br label %block_.L_43fec0

  ; Code: .L_43fec0:	 RIP: 43fec0	 Bytes: 0
block_.L_43fec0:

  ; Code: leaq -0x220(%rbp), %rdi	 RIP: 43fec0	 Bytes: 7
  %loadMem_43fec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fec0 = call %struct.Memory* @routine_leaq_MINUS0x220__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fec0)
  store %struct.Memory* %call_43fec0, %struct.Memory** %MEMORY

  ; Code: movq $0x92aa50, %r8	 RIP: 43fec7	 Bytes: 10
  %loadMem_43fec7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fec7 = call %struct.Memory* @routine_movq__0x92aa50___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fec7)
  store %struct.Memory* %call_43fec7, %struct.Memory** %MEMORY

  ; Code: leaq -0x180(%rbp), %rsi	 RIP: 43fed1	 Bytes: 7
  %loadMem_43fed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fed1 = call %struct.Memory* @routine_leaq_MINUS0x180__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fed1)
  store %struct.Memory* %call_43fed1, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %edx	 RIP: 43fed8	 Bytes: 3
  %loadMem_43fed8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fed8 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fed8)
  store %struct.Memory* %call_43fed8, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rcx	 RIP: 43fedb	 Bytes: 4
  %loadMem_43fedb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fedb = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fedb)
  store %struct.Memory* %call_43fedb, %struct.Memory** %MEMORY

  ; Code: callq .owl_shapes	 RIP: 43fedf	 Bytes: 5
  %loadMem1_43fedf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43fedf = call %struct.Memory* @routine_callq_.owl_shapes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43fedf, i64 14225, i64 5, i64 5)
  store %struct.Memory* %call1_43fedf, %struct.Memory** %MEMORY

  %loadMem2_43fedf = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43fedf = load i64, i64* %3
  %call2_43fedf = call %struct.Memory* @sub_443670.owl_shapes(%struct.State* %0, i64  %loadPC_43fedf, %struct.Memory* %loadMem2_43fedf)
  store %struct.Memory* %call2_43fedf, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x684(%rbp)	 RIP: 43fee4	 Bytes: 10
  %loadMem_43fee4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fee4 = call %struct.Memory* @routine_movl__0x0__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fee4)
  store %struct.Memory* %call_43fee4, %struct.Memory** %MEMORY

  ; Code: .L_43feee:	 RIP: 43feee	 Bytes: 0
  br label %block_.L_43feee
block_.L_43feee:

  ; Code: cmpl $0x2, -0x684(%rbp)	 RIP: 43feee	 Bytes: 7
  %loadMem_43feee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43feee = call %struct.Memory* @routine_cmpl__0x2__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43feee)
  store %struct.Memory* %call_43feee, %struct.Memory** %MEMORY

  ; Code: jge .L_43ff3d	 RIP: 43fef5	 Bytes: 6
  %loadMem_43fef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fef5 = call %struct.Memory* @routine_jge_.L_43ff3d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fef5, i8* %BRANCH_TAKEN, i64 72, i64 6, i64 6)
  store %struct.Memory* %call_43fef5, %struct.Memory** %MEMORY

  %loadBr_43fef5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43fef5 = icmp eq i8 %loadBr_43fef5, 1
  br i1 %cmpBr_43fef5, label %block_.L_43ff3d, label %block_43fefb

block_43fefb:
  ; Code: leaq -0x220(%rbp), %rdi	 RIP: 43fefb	 Bytes: 7
  %loadMem_43fefb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fefb = call %struct.Memory* @routine_leaq_MINUS0x220__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fefb)
  store %struct.Memory* %call_43fefb, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %ecx	 RIP: 43ff02	 Bytes: 5
  %loadMem_43ff02 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff02 = call %struct.Memory* @routine_movl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff02)
  store %struct.Memory* %call_43ff02, %struct.Memory** %MEMORY

  ; Code: leaq -0x180(%rbp), %rdx	 RIP: 43ff07	 Bytes: 7
  %loadMem_43ff07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff07 = call %struct.Memory* @routine_leaq_MINUS0x180__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff07)
  store %struct.Memory* %call_43ff07, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %esi	 RIP: 43ff0e	 Bytes: 3
  %loadMem_43ff0e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff0e = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff0e)
  store %struct.Memory* %call_43ff0e, %struct.Memory** %MEMORY

  ; Code: callq .get_next_move_from_list	 RIP: 43ff11	 Bytes: 5
  %loadMem1_43ff11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ff11 = call %struct.Memory* @routine_callq_.get_next_move_from_list(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ff11, i64 14367, i64 5, i64 5)
  store %struct.Memory* %call1_43ff11, %struct.Memory** %MEMORY

  %loadMem2_43ff11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ff11 = load i64, i64* %3
  %call2_43ff11 = call %struct.Memory* @sub_443730.get_next_move_from_list(%struct.State* %0, i64  %loadPC_43ff11, %struct.Memory* %loadMem2_43ff11)
  store %struct.Memory* %call2_43ff11, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43ff16	 Bytes: 3
  %loadMem_43ff16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff16 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff16)
  store %struct.Memory* %call_43ff16, %struct.Memory** %MEMORY

  ; Code: jne .L_43ff24	 RIP: 43ff19	 Bytes: 6
  %loadMem_43ff19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff19 = call %struct.Memory* @routine_jne_.L_43ff24(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff19, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43ff19, %struct.Memory** %MEMORY

  %loadBr_43ff19 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ff19 = icmp eq i8 %loadBr_43ff19, 1
  br i1 %cmpBr_43ff19, label %block_.L_43ff24, label %block_43ff1f

block_43ff1f:
  ; Code: jmpq .L_43ff3d	 RIP: 43ff1f	 Bytes: 5
  %loadMem_43ff1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff1f = call %struct.Memory* @routine_jmpq_.L_43ff3d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff1f, i64 30, i64 5)
  store %struct.Memory* %call_43ff1f, %struct.Memory** %MEMORY

  br label %block_.L_43ff3d

  ; Code: .L_43ff24:	 RIP: 43ff24	 Bytes: 0
block_.L_43ff24:

  ; Code: jmpq .L_43ff29	 RIP: 43ff24	 Bytes: 5
  %loadMem_43ff24 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff24 = call %struct.Memory* @routine_jmpq_.L_43ff29(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff24, i64 5, i64 5)
  store %struct.Memory* %call_43ff24, %struct.Memory** %MEMORY

  br label %block_.L_43ff29

  ; Code: .L_43ff29:	 RIP: 43ff29	 Bytes: 0
block_.L_43ff29:

  ; Code: movl -0x684(%rbp), %eax	 RIP: 43ff29	 Bytes: 6
  %loadMem_43ff29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff29 = call %struct.Memory* @routine_movl_MINUS0x684__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff29)
  store %struct.Memory* %call_43ff29, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43ff2f	 Bytes: 3
  %loadMem_43ff2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff2f = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff2f)
  store %struct.Memory* %call_43ff2f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x684(%rbp)	 RIP: 43ff32	 Bytes: 6
  %loadMem_43ff32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff32 = call %struct.Memory* @routine_movl__eax__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff32)
  store %struct.Memory* %call_43ff32, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43feee	 RIP: 43ff38	 Bytes: 5
  %loadMem_43ff38 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff38 = call %struct.Memory* @routine_jmpq_.L_43feee(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff38, i64 -74, i64 5)
  store %struct.Memory* %call_43ff38, %struct.Memory** %MEMORY

  br label %block_.L_43feee

  ; Code: .L_43ff3d:	 RIP: 43ff3d	 Bytes: 0
block_.L_43ff3d:

  ; Code: leaq -0x200(%rbp), %rdi	 RIP: 43ff3d	 Bytes: 7
  %loadMem_43ff3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff3d = call %struct.Memory* @routine_leaq_MINUS0x200__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff3d)
  store %struct.Memory* %call_43ff3d, %struct.Memory** %MEMORY

  ; Code: movq $0x919b70, %r8	 RIP: 43ff44	 Bytes: 10
  %loadMem_43ff44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff44 = call %struct.Memory* @routine_movq__0x919b70___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff44)
  store %struct.Memory* %call_43ff44, %struct.Memory** %MEMORY

  ; Code: leaq -0x1e0(%rbp), %rsi	 RIP: 43ff4e	 Bytes: 7
  %loadMem_43ff4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff4e = call %struct.Memory* @routine_leaq_MINUS0x1e0__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff4e)
  store %struct.Memory* %call_43ff4e, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %edx	 RIP: 43ff55	 Bytes: 3
  %loadMem_43ff55 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff55 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff55)
  store %struct.Memory* %call_43ff55, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rcx	 RIP: 43ff58	 Bytes: 4
  %loadMem_43ff58 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff58 = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff58)
  store %struct.Memory* %call_43ff58, %struct.Memory** %MEMORY

  ; Code: callq .owl_shapes	 RIP: 43ff5c	 Bytes: 5
  %loadMem1_43ff5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ff5c = call %struct.Memory* @routine_callq_.owl_shapes(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ff5c, i64 14100, i64 5, i64 5)
  store %struct.Memory* %call1_43ff5c, %struct.Memory** %MEMORY

  %loadMem2_43ff5c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ff5c = load i64, i64* %3
  %call2_43ff5c = call %struct.Memory* @sub_443670.owl_shapes(%struct.State* %0, i64  %loadPC_43ff5c, %struct.Memory* %loadMem2_43ff5c)
  store %struct.Memory* %call2_43ff5c, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x684(%rbp)	 RIP: 43ff61	 Bytes: 10
  %loadMem_43ff61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff61 = call %struct.Memory* @routine_movl__0x0__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff61)
  store %struct.Memory* %call_43ff61, %struct.Memory** %MEMORY

  ; Code: .L_43ff6b:	 RIP: 43ff6b	 Bytes: 0
  br label %block_.L_43ff6b
block_.L_43ff6b:

  ; Code: cmpl $0x2, -0x684(%rbp)	 RIP: 43ff6b	 Bytes: 7
  %loadMem_43ff6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff6b = call %struct.Memory* @routine_cmpl__0x2__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff6b)
  store %struct.Memory* %call_43ff6b, %struct.Memory** %MEMORY

  ; Code: jge .L_43ffba	 RIP: 43ff72	 Bytes: 6
  %loadMem_43ff72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff72 = call %struct.Memory* @routine_jge_.L_43ffba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff72, i8* %BRANCH_TAKEN, i64 72, i64 6, i64 6)
  store %struct.Memory* %call_43ff72, %struct.Memory** %MEMORY

  %loadBr_43ff72 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ff72 = icmp eq i8 %loadBr_43ff72, 1
  br i1 %cmpBr_43ff72, label %block_.L_43ffba, label %block_43ff78

block_43ff78:
  ; Code: leaq -0x200(%rbp), %rdi	 RIP: 43ff78	 Bytes: 7
  %loadMem_43ff78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff78 = call %struct.Memory* @routine_leaq_MINUS0x200__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff78)
  store %struct.Memory* %call_43ff78, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %ecx	 RIP: 43ff7f	 Bytes: 5
  %loadMem_43ff7f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff7f = call %struct.Memory* @routine_movl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff7f)
  store %struct.Memory* %call_43ff7f, %struct.Memory** %MEMORY

  ; Code: leaq -0x1e0(%rbp), %rdx	 RIP: 43ff84	 Bytes: 7
  %loadMem_43ff84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff84 = call %struct.Memory* @routine_leaq_MINUS0x1e0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff84)
  store %struct.Memory* %call_43ff84, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %esi	 RIP: 43ff8b	 Bytes: 3
  %loadMem_43ff8b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff8b = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff8b)
  store %struct.Memory* %call_43ff8b, %struct.Memory** %MEMORY

  ; Code: callq .get_next_move_from_list	 RIP: 43ff8e	 Bytes: 5
  %loadMem1_43ff8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_43ff8e = call %struct.Memory* @routine_callq_.get_next_move_from_list(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_43ff8e, i64 14242, i64 5, i64 5)
  store %struct.Memory* %call1_43ff8e, %struct.Memory** %MEMORY

  %loadMem2_43ff8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_43ff8e = load i64, i64* %3
  %call2_43ff8e = call %struct.Memory* @sub_443730.get_next_move_from_list(%struct.State* %0, i64  %loadPC_43ff8e, %struct.Memory* %loadMem2_43ff8e)
  store %struct.Memory* %call2_43ff8e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 43ff93	 Bytes: 3
  %loadMem_43ff93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff93 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff93)
  store %struct.Memory* %call_43ff93, %struct.Memory** %MEMORY

  ; Code: jne .L_43ffa1	 RIP: 43ff96	 Bytes: 6
  %loadMem_43ff96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff96 = call %struct.Memory* @routine_jne_.L_43ffa1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff96, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_43ff96, %struct.Memory** %MEMORY

  %loadBr_43ff96 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ff96 = icmp eq i8 %loadBr_43ff96, 1
  br i1 %cmpBr_43ff96, label %block_.L_43ffa1, label %block_43ff9c

block_43ff9c:
  ; Code: jmpq .L_43ffba	 RIP: 43ff9c	 Bytes: 5
  %loadMem_43ff9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ff9c = call %struct.Memory* @routine_jmpq_.L_43ffba(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ff9c, i64 30, i64 5)
  store %struct.Memory* %call_43ff9c, %struct.Memory** %MEMORY

  br label %block_.L_43ffba

  ; Code: .L_43ffa1:	 RIP: 43ffa1	 Bytes: 0
block_.L_43ffa1:

  ; Code: jmpq .L_43ffa6	 RIP: 43ffa1	 Bytes: 5
  %loadMem_43ffa1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ffa1 = call %struct.Memory* @routine_jmpq_.L_43ffa6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ffa1, i64 5, i64 5)
  store %struct.Memory* %call_43ffa1, %struct.Memory** %MEMORY

  br label %block_.L_43ffa6

  ; Code: .L_43ffa6:	 RIP: 43ffa6	 Bytes: 0
block_.L_43ffa6:

  ; Code: movl -0x684(%rbp), %eax	 RIP: 43ffa6	 Bytes: 6
  %loadMem_43ffa6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ffa6 = call %struct.Memory* @routine_movl_MINUS0x684__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ffa6)
  store %struct.Memory* %call_43ffa6, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 43ffac	 Bytes: 3
  %loadMem_43ffac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ffac = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ffac)
  store %struct.Memory* %call_43ffac, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x684(%rbp)	 RIP: 43ffaf	 Bytes: 6
  %loadMem_43ffaf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ffaf = call %struct.Memory* @routine_movl__eax__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ffaf)
  store %struct.Memory* %call_43ffaf, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43ff6b	 RIP: 43ffb5	 Bytes: 5
  %loadMem_43ffb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ffb5 = call %struct.Memory* @routine_jmpq_.L_43ff6b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ffb5, i64 -74, i64 5)
  store %struct.Memory* %call_43ffb5, %struct.Memory** %MEMORY

  br label %block_.L_43ff6b

  ; Code: .L_43ffba:	 RIP: 43ffba	 Bytes: 0
block_.L_43ffba:

  ; Code: movl $0x0, -0x684(%rbp)	 RIP: 43ffba	 Bytes: 10
  %loadMem_43ffba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ffba = call %struct.Memory* @routine_movl__0x0__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ffba)
  store %struct.Memory* %call_43ffba, %struct.Memory** %MEMORY

  ; Code: .L_43ffc4:	 RIP: 43ffc4	 Bytes: 0
  br label %block_.L_43ffc4
block_.L_43ffc4:

  ; Code: xorl %eax, %eax	 RIP: 43ffc4	 Bytes: 2
  %loadMem_43ffc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ffc4 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ffc4)
  store %struct.Memory* %call_43ffc4, %struct.Memory** %MEMORY

  ; Code: movb %al, %cl	 RIP: 43ffc6	 Bytes: 2
  %loadMem_43ffc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ffc6 = call %struct.Memory* @routine_movb__al___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ffc6)
  store %struct.Memory* %call_43ffc6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, -0x684(%rbp)	 RIP: 43ffc8	 Bytes: 7
  %loadMem_43ffc8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ffc8 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ffc8)
  store %struct.Memory* %call_43ffc8, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0xd99(%rbp)	 RIP: 43ffcf	 Bytes: 6
  %loadMem_43ffcf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ffcf = call %struct.Memory* @routine_movb__cl__MINUS0xd99__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ffcf)
  store %struct.Memory* %call_43ffcf, %struct.Memory** %MEMORY

  ; Code: jge .L_43fffc	 RIP: 43ffd5	 Bytes: 6
  %loadMem_43ffd5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ffd5 = call %struct.Memory* @routine_jge_.L_43fffc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ffd5, i8* %BRANCH_TAKEN, i64 39, i64 6, i64 6)
  store %struct.Memory* %call_43ffd5, %struct.Memory** %MEMORY

  %loadBr_43ffd5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_43ffd5 = icmp eq i8 %loadBr_43ffd5, 1
  br i1 %cmpBr_43ffd5, label %block_.L_43fffc, label %block_43ffdb

block_43ffdb:
  ; Code: leaq -0xc0(%rbp), %rax	 RIP: 43ffdb	 Bytes: 7
  %loadMem_43ffdb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ffdb = call %struct.Memory* @routine_leaq_MINUS0xc0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ffdb)
  store %struct.Memory* %call_43ffdb, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 43ffe2	 Bytes: 7
  %loadMem_43ffe2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ffe2 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ffe2)
  store %struct.Memory* %call_43ffe2, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 43ffe9	 Bytes: 4
  %loadMem_43ffe9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ffe9 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ffe9)
  store %struct.Memory* %call_43ffe9, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 43ffed	 Bytes: 3
  %loadMem_43ffed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43ffed = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43ffed)
  store %struct.Memory* %call_43ffed, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax)	 RIP: 43fff0	 Bytes: 3
  %loadMem_43fff0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fff0 = call %struct.Memory* @routine_cmpl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fff0)
  store %struct.Memory* %call_43fff0, %struct.Memory** %MEMORY

  ; Code: setne %dl	 RIP: 43fff3	 Bytes: 3
  %loadMem_43fff3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fff3 = call %struct.Memory* @routine_setne__dl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fff3)
  store %struct.Memory* %call_43fff3, %struct.Memory** %MEMORY

  ; Code: movb %dl, -0xd99(%rbp)	 RIP: 43fff6	 Bytes: 6
  %loadMem_43fff6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fff6 = call %struct.Memory* @routine_movb__dl__MINUS0xd99__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fff6)
  store %struct.Memory* %call_43fff6, %struct.Memory** %MEMORY

  ; Code: .L_43fffc:	 RIP: 43fffc	 Bytes: 0
  br label %block_.L_43fffc
block_.L_43fffc:

  ; Code: movb -0xd99(%rbp), %al	 RIP: 43fffc	 Bytes: 6
  %loadMem_43fffc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_43fffc = call %struct.Memory* @routine_movb_MINUS0xd99__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_43fffc)
  store %struct.Memory* %call_43fffc, %struct.Memory** %MEMORY

  ; Code: testb $0x1, %al	 RIP: 440002	 Bytes: 2
  %loadMem_440002 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440002 = call %struct.Memory* @routine_testb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440002)
  store %struct.Memory* %call_440002, %struct.Memory** %MEMORY

  ; Code: jne .L_44000f	 RIP: 440004	 Bytes: 6
  %loadMem_440004 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440004 = call %struct.Memory* @routine_jne_.L_44000f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440004, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_440004, %struct.Memory** %MEMORY

  %loadBr_440004 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440004 = icmp eq i8 %loadBr_440004, 1
  br i1 %cmpBr_440004, label %block_.L_44000f, label %block_44000a

block_44000a:
  ; Code: jmpq .L_4401d6	 RIP: 44000a	 Bytes: 5
  %loadMem_44000a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44000a = call %struct.Memory* @routine_jmpq_.L_4401d6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44000a, i64 460, i64 5)
  store %struct.Memory* %call_44000a, %struct.Memory** %MEMORY

  br label %block_.L_4401d6

  ; Code: .L_44000f:	 RIP: 44000f	 Bytes: 0
block_.L_44000f:

  ; Code: leaq -0xc0(%rbp), %rax	 RIP: 44000f	 Bytes: 7
  %loadMem_44000f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44000f = call %struct.Memory* @routine_leaq_MINUS0xc0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44000f)
  store %struct.Memory* %call_44000f, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 440016	 Bytes: 7
  %loadMem_440016 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440016 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440016)
  store %struct.Memory* %call_440016, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 44001d	 Bytes: 4
  %loadMem_44001d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44001d = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44001d)
  store %struct.Memory* %call_44001d, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 440021	 Bytes: 3
  %loadMem_440021 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440021 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440021)
  store %struct.Memory* %call_440021, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edi	 RIP: 440024	 Bytes: 2
  %loadMem_440024 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440024 = call %struct.Memory* @routine_movl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440024)
  store %struct.Memory* %call_440024, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rsi	 RIP: 440026	 Bytes: 4
  %loadMem_440026 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440026 = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440026)
  store %struct.Memory* %call_440026, %struct.Memory** %MEMORY

  ; Code: callq .liberty_of_goal	 RIP: 44002a	 Bytes: 5
  %loadMem1_44002a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_44002a = call %struct.Memory* @routine_callq_.liberty_of_goal(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_44002a, i64 15974, i64 5, i64 5)
  store %struct.Memory* %call1_44002a, %struct.Memory** %MEMORY

  %loadMem2_44002a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44002a = load i64, i64* %3
  %call2_44002a = call %struct.Memory* @sub_443e90.liberty_of_goal(%struct.State* %0, i64  %loadPC_44002a, %struct.Memory* %loadMem2_44002a)
  store %struct.Memory* %call2_44002a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 44002f	 Bytes: 3
  %loadMem_44002f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44002f = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44002f)
  store %struct.Memory* %call_44002f, %struct.Memory** %MEMORY

  ; Code: je .L_4400f2	 RIP: 440032	 Bytes: 6
  %loadMem_440032 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440032 = call %struct.Memory* @routine_je_.L_4400f2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440032, i8* %BRANCH_TAKEN, i64 192, i64 6, i64 6)
  store %struct.Memory* %call_440032, %struct.Memory** %MEMORY

  %loadBr_440032 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440032 = icmp eq i8 %loadBr_440032, 1
  br i1 %cmpBr_440032, label %block_.L_4400f2, label %block_440038

block_440038:
  ; Code: leaq -0xc0(%rbp), %rax	 RIP: 440038	 Bytes: 7
  %loadMem_440038 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440038 = call %struct.Memory* @routine_leaq_MINUS0xc0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440038)
  store %struct.Memory* %call_440038, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 44003f	 Bytes: 7
  %loadMem_44003f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44003f = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44003f)
  store %struct.Memory* %call_44003f, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 440046	 Bytes: 4
  %loadMem_440046 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440046 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440046)
  store %struct.Memory* %call_440046, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 44004a	 Bytes: 3
  %loadMem_44004a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44004a = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44004a)
  store %struct.Memory* %call_44004a, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edi	 RIP: 44004d	 Bytes: 2
  %loadMem_44004d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44004d = call %struct.Memory* @routine_movl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44004d)
  store %struct.Memory* %call_44004d, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rsi	 RIP: 44004f	 Bytes: 4
  %loadMem_44004f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44004f = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44004f)
  store %struct.Memory* %call_44004f, %struct.Memory** %MEMORY

  ; Code: callq .liberty_of_goal	 RIP: 440053	 Bytes: 5
  %loadMem1_440053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440053 = call %struct.Memory* @routine_callq_.liberty_of_goal(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440053, i64 15933, i64 5, i64 5)
  store %struct.Memory* %call1_440053, %struct.Memory** %MEMORY

  %loadMem2_440053 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440053 = load i64, i64* %3
  %call2_440053 = call %struct.Memory* @sub_443e90.liberty_of_goal(%struct.State* %0, i64  %loadPC_440053, %struct.Memory* %loadMem2_440053)
  store %struct.Memory* %call2_440053, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 440058	 Bytes: 3
  %loadMem_440058 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440058 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440058)
  store %struct.Memory* %call_440058, %struct.Memory** %MEMORY

  ; Code: jne .L_4400a7	 RIP: 44005b	 Bytes: 6
  %loadMem_44005b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44005b = call %struct.Memory* @routine_jne_.L_4400a7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44005b, i8* %BRANCH_TAKEN, i64 76, i64 6, i64 6)
  store %struct.Memory* %call_44005b, %struct.Memory** %MEMORY

  %loadBr_44005b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44005b = icmp eq i8 %loadBr_44005b, 1
  br i1 %cmpBr_44005b, label %block_.L_4400a7, label %block_440061

block_440061:
  ; Code: leaq -0xc0(%rbp), %rax	 RIP: 440061	 Bytes: 7
  %loadMem_440061 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440061 = call %struct.Memory* @routine_leaq_MINUS0xc0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440061)
  store %struct.Memory* %call_440061, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 440068	 Bytes: 7
  %loadMem_440068 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440068 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440068)
  store %struct.Memory* %call_440068, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 44006f	 Bytes: 4
  %loadMem_44006f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44006f = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44006f)
  store %struct.Memory* %call_44006f, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 440073	 Bytes: 3
  %loadMem_440073 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440073 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440073)
  store %struct.Memory* %call_440073, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edi	 RIP: 440076	 Bytes: 2
  %loadMem_440076 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440076 = call %struct.Memory* @routine_movl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440076)
  store %struct.Memory* %call_440076, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %esi	 RIP: 440078	 Bytes: 3
  %loadMem_440078 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440078 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440078)
  store %struct.Memory* %call_440078, %struct.Memory** %MEMORY

  ; Code: callq .safe_move	 RIP: 44007b	 Bytes: 5
  %loadMem1_44007b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_44007b = call %struct.Memory* @routine_callq_.safe_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_44007b, i64 179125, i64 5, i64 5)
  store %struct.Memory* %call1_44007b, %struct.Memory** %MEMORY

  %loadMem2_44007b = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44007b = load i64, i64* %3
  %call2_44007b = call %struct.Memory* @sub_46bc30.safe_move(%struct.State* %0, i64  %loadPC_44007b, %struct.Memory* %loadMem2_44007b)
  store %struct.Memory* %call2_44007b, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 440080	 Bytes: 3
  %loadMem_440080 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440080 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440080)
  store %struct.Memory* %call_440080, %struct.Memory** %MEMORY

  ; Code: je .L_440098	 RIP: 440083	 Bytes: 6
  %loadMem_440083 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440083 = call %struct.Memory* @routine_je_.L_440098(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440083, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_440083, %struct.Memory** %MEMORY

  %loadBr_440083 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440083 = icmp eq i8 %loadBr_440083, 1
  br i1 %cmpBr_440083, label %block_.L_440098, label %block_440089

block_440089:
  ; Code: movl $0x1, -0x4d4(%rbp)	 RIP: 440089	 Bytes: 10
  %loadMem_440089 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440089 = call %struct.Memory* @routine_movl__0x1__MINUS0x4d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440089)
  store %struct.Memory* %call_440089, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4400a2	 RIP: 440093	 Bytes: 5
  %loadMem_440093 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440093 = call %struct.Memory* @routine_jmpq_.L_4400a2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440093, i64 15, i64 5)
  store %struct.Memory* %call_440093, %struct.Memory** %MEMORY

  br label %block_.L_4400a2

  ; Code: .L_440098:	 RIP: 440098	 Bytes: 0
block_.L_440098:

  ; Code: movl $0x1, -0x4d8(%rbp)	 RIP: 440098	 Bytes: 10
  %loadMem_440098 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440098 = call %struct.Memory* @routine_movl__0x1__MINUS0x4d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440098)
  store %struct.Memory* %call_440098, %struct.Memory** %MEMORY

  ; Code: .L_4400a2:	 RIP: 4400a2	 Bytes: 0
  br label %block_.L_4400a2
block_.L_4400a2:

  ; Code: jmpq .L_4400ed	 RIP: 4400a2	 Bytes: 5
  %loadMem_4400a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4400a2 = call %struct.Memory* @routine_jmpq_.L_4400ed(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4400a2, i64 75, i64 5)
  store %struct.Memory* %call_4400a2, %struct.Memory** %MEMORY

  br label %block_.L_4400ed

  ; Code: .L_4400a7:	 RIP: 4400a7	 Bytes: 0
block_.L_4400a7:

  ; Code: leaq -0xc0(%rbp), %rax	 RIP: 4400a7	 Bytes: 7
  %loadMem_4400a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4400a7 = call %struct.Memory* @routine_leaq_MINUS0xc0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4400a7)
  store %struct.Memory* %call_4400a7, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 4400ae	 Bytes: 7
  %loadMem_4400ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4400ae = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4400ae)
  store %struct.Memory* %call_4400ae, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 4400b5	 Bytes: 4
  %loadMem_4400b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4400b5 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4400b5)
  store %struct.Memory* %call_4400b5, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4400b9	 Bytes: 3
  %loadMem_4400b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4400b9 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4400b9)
  store %struct.Memory* %call_4400b9, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edi	 RIP: 4400bc	 Bytes: 2
  %loadMem_4400bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4400bc = call %struct.Memory* @routine_movl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4400bc)
  store %struct.Memory* %call_4400bc, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %esi	 RIP: 4400be	 Bytes: 3
  %loadMem_4400be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4400be = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4400be)
  store %struct.Memory* %call_4400be, %struct.Memory** %MEMORY

  ; Code: callq .safe_move	 RIP: 4400c1	 Bytes: 5
  %loadMem1_4400c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4400c1 = call %struct.Memory* @routine_callq_.safe_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4400c1, i64 179055, i64 5, i64 5)
  store %struct.Memory* %call1_4400c1, %struct.Memory** %MEMORY

  %loadMem2_4400c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4400c1 = load i64, i64* %3
  %call2_4400c1 = call %struct.Memory* @sub_46bc30.safe_move(%struct.State* %0, i64  %loadPC_4400c1, %struct.Memory* %loadMem2_4400c1)
  store %struct.Memory* %call2_4400c1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4400c6	 Bytes: 3
  %loadMem_4400c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4400c6 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4400c6)
  store %struct.Memory* %call_4400c6, %struct.Memory** %MEMORY

  ; Code: je .L_4400de	 RIP: 4400c9	 Bytes: 6
  %loadMem_4400c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4400c9 = call %struct.Memory* @routine_je_.L_4400de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4400c9, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_4400c9, %struct.Memory** %MEMORY

  %loadBr_4400c9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4400c9 = icmp eq i8 %loadBr_4400c9, 1
  br i1 %cmpBr_4400c9, label %block_.L_4400de, label %block_4400cf

block_4400cf:
  ; Code: movl $0x1, -0x4dc(%rbp)	 RIP: 4400cf	 Bytes: 10
  %loadMem_4400cf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4400cf = call %struct.Memory* @routine_movl__0x1__MINUS0x4dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4400cf)
  store %struct.Memory* %call_4400cf, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4400e8	 RIP: 4400d9	 Bytes: 5
  %loadMem_4400d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4400d9 = call %struct.Memory* @routine_jmpq_.L_4400e8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4400d9, i64 15, i64 5)
  store %struct.Memory* %call_4400d9, %struct.Memory** %MEMORY

  br label %block_.L_4400e8

  ; Code: .L_4400de:	 RIP: 4400de	 Bytes: 0
block_.L_4400de:

  ; Code: movl $0x1, -0x4e0(%rbp)	 RIP: 4400de	 Bytes: 10
  %loadMem_4400de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4400de = call %struct.Memory* @routine_movl__0x1__MINUS0x4e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4400de)
  store %struct.Memory* %call_4400de, %struct.Memory** %MEMORY

  ; Code: .L_4400e8:	 RIP: 4400e8	 Bytes: 0
  br label %block_.L_4400e8
block_.L_4400e8:

  ; Code: jmpq .L_4400ed	 RIP: 4400e8	 Bytes: 5
  %loadMem_4400e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4400e8 = call %struct.Memory* @routine_jmpq_.L_4400ed(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4400e8, i64 5, i64 5)
  store %struct.Memory* %call_4400e8, %struct.Memory** %MEMORY

  br label %block_.L_4400ed

  ; Code: .L_4400ed:	 RIP: 4400ed	 Bytes: 0
block_.L_4400ed:

  ; Code: jmpq .L_4400f2	 RIP: 4400ed	 Bytes: 5
  %loadMem_4400ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4400ed = call %struct.Memory* @routine_jmpq_.L_4400f2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4400ed, i64 5, i64 5)
  store %struct.Memory* %call_4400ed, %struct.Memory** %MEMORY

  br label %block_.L_4400f2

  ; Code: .L_4400f2:	 RIP: 4400f2	 Bytes: 0
block_.L_4400f2:

  ; Code: leaq -0xc0(%rbp), %rax	 RIP: 4400f2	 Bytes: 7
  %loadMem_4400f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4400f2 = call %struct.Memory* @routine_leaq_MINUS0xc0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4400f2)
  store %struct.Memory* %call_4400f2, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 4400f9	 Bytes: 7
  %loadMem_4400f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4400f9 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4400f9)
  store %struct.Memory* %call_4400f9, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 440100	 Bytes: 4
  %loadMem_440100 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440100 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440100)
  store %struct.Memory* %call_440100, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 440104	 Bytes: 3
  %loadMem_440104 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440104 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440104)
  store %struct.Memory* %call_440104, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 440107	 Bytes: 3
  %loadMem_440107 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440107 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440107)
  store %struct.Memory* %call_440107, %struct.Memory** %MEMORY

  ; Code: movslq (%rdx), %rcx	 RIP: 44010a	 Bytes: 3
  %loadMem_44010a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44010a = call %struct.Memory* @routine_movslq___rdx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44010a)
  store %struct.Memory* %call_44010a, %struct.Memory** %MEMORY

  ; Code: movb $0x1, -0x680(%rbp,%rcx,1)	 RIP: 44010d	 Bytes: 8
  %loadMem_44010d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44010d = call %struct.Memory* @routine_movb__0x1__MINUS0x680__rbp__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44010d)
  store %struct.Memory* %call_44010d, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 440115	 Bytes: 7
  %loadMem_440115 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440115 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440115)
  store %struct.Memory* %call_440115, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 44011c	 Bytes: 4
  %loadMem_44011c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44011c = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44011c)
  store %struct.Memory* %call_44011c, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 440120	 Bytes: 3
  %loadMem_440120 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440120 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440120)
  store %struct.Memory* %call_440120, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 440123	 Bytes: 3
  %loadMem_440123 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440123 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440123)
  store %struct.Memory* %call_440123, %struct.Memory** %MEMORY

  ; Code: movl (%rdx), %edi	 RIP: 440126	 Bytes: 2
  %loadMem_440126 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440126 = call %struct.Memory* @routine_movl___rdx____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440126)
  store %struct.Memory* %call_440126, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rsi	 RIP: 440128	 Bytes: 4
  %loadMem_440128 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440128 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440128)
  store %struct.Memory* %call_440128, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rdx	 RIP: 44012c	 Bytes: 4
  %loadMem_44012c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44012c = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44012c)
  store %struct.Memory* %call_44012c, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 440130	 Bytes: 7
  %loadMem_440130 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440130 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440130)
  store %struct.Memory* %call_440130, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 440137	 Bytes: 4
  %loadMem_440137 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440137 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440137)
  store %struct.Memory* %call_440137, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 44013b	 Bytes: 3
  %loadMem_44013b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44013b = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44013b)
  store %struct.Memory* %call_44013b, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 44013e	 Bytes: 3
  %loadMem_44013e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44013e = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44013e)
  store %struct.Memory* %call_44013e, %struct.Memory** %MEMORY

  ; Code: callq .semeai_move_value	 RIP: 440141	 Bytes: 5
  %loadMem1_440141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440141 = call %struct.Memory* @routine_callq_.semeai_move_value(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440141, i64 15951, i64 5, i64 5)
  store %struct.Memory* %call1_440141, %struct.Memory** %MEMORY

  %loadMem2_440141 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440141 = load i64, i64* %3
  %call2_440141 = call %struct.Memory* @sub_443f90.semeai_move_value(%struct.State* %0, i64  %loadPC_440141, %struct.Memory* %loadMem2_440141)
  store %struct.Memory* %call2_440141, %struct.Memory** %MEMORY

  ; Code: movq $0x57df7f, %rcx	 RIP: 440146	 Bytes: 10
  %loadMem_440146 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440146 = call %struct.Memory* @routine_movq__0x57df7f___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440146)
  store %struct.Memory* %call_440146, %struct.Memory** %MEMORY

  ; Code: xorl %edi, %edi	 RIP: 440150	 Bytes: 2
  %loadMem_440150 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440150 = call %struct.Memory* @routine_xorl__edi___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440150)
  store %struct.Memory* %call_440150, %struct.Memory** %MEMORY

  ; Code: leaq -0xc0(%rbp), %rdx	 RIP: 440152	 Bytes: 7
  %loadMem_440152 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440152 = call %struct.Memory* @routine_leaq_MINUS0xc0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440152)
  store %struct.Memory* %call_440152, %struct.Memory** %MEMORY

  ; Code: leaq -0x2e0(%rbp), %rsi	 RIP: 440159	 Bytes: 7
  %loadMem_440159 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440159 = call %struct.Memory* @routine_leaq_MINUS0x2e0__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440159)
  store %struct.Memory* %call_440159, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6a0(%rbp)	 RIP: 440160	 Bytes: 6
  %loadMem_440160 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440160 = call %struct.Memory* @routine_movl__eax__MINUS0x6a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440160)
  store %struct.Memory* %call_440160, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %r8	 RIP: 440166	 Bytes: 7
  %loadMem_440166 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440166 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440166)
  store %struct.Memory* %call_440166, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r8	 RIP: 44016d	 Bytes: 4
  %loadMem_44016d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44016d = call %struct.Memory* @routine_shlq__0x5___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44016d)
  store %struct.Memory* %call_44016d, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %r9	 RIP: 440171	 Bytes: 3
  %loadMem_440171 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440171 = call %struct.Memory* @routine_movq__rdx___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440171)
  store %struct.Memory* %call_440171, %struct.Memory** %MEMORY

  ; Code: addq %r8, %r9	 RIP: 440174	 Bytes: 3
  %loadMem_440174 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440174 = call %struct.Memory* @routine_addq__r8___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440174)
  store %struct.Memory* %call_440174, %struct.Memory** %MEMORY

  ; Code: movl (%r9), %eax	 RIP: 440177	 Bytes: 3
  %loadMem_440177 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440177 = call %struct.Memory* @routine_movl___r9____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440177)
  store %struct.Memory* %call_440177, %struct.Memory** %MEMORY

  ; Code: movl -0x6a0(%rbp), %r10d	 RIP: 44017a	 Bytes: 7
  %loadMem_44017a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44017a = call %struct.Memory* @routine_movl_MINUS0x6a0__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44017a)
  store %struct.Memory* %call_44017a, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %r8	 RIP: 440181	 Bytes: 7
  %loadMem_440181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440181 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440181)
  store %struct.Memory* %call_440181, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r8	 RIP: 440188	 Bytes: 4
  %loadMem_440188 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440188 = call %struct.Memory* @routine_shlq__0x5___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440188)
  store %struct.Memory* %call_440188, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %r9	 RIP: 44018c	 Bytes: 3
  %loadMem_44018c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44018c = call %struct.Memory* @routine_movq__rdx___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44018c)
  store %struct.Memory* %call_44018c, %struct.Memory** %MEMORY

  ; Code: addq %r8, %r9	 RIP: 44018f	 Bytes: 3
  %loadMem_44018f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44018f = call %struct.Memory* @routine_addq__r8___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44018f)
  store %struct.Memory* %call_44018f, %struct.Memory** %MEMORY

  ; Code: movl 0x10(%r9), %r8d	 RIP: 440192	 Bytes: 4
  %loadMem_440192 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440192 = call %struct.Memory* @routine_movl_0x10__r9____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440192)
  store %struct.Memory* %call_440192, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %r9	 RIP: 440196	 Bytes: 7
  %loadMem_440196 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440196 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440196)
  store %struct.Memory* %call_440196, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r9	 RIP: 44019d	 Bytes: 4
  %loadMem_44019d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44019d = call %struct.Memory* @routine_shlq__0x5___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44019d)
  store %struct.Memory* %call_44019d, %struct.Memory** %MEMORY

  ; Code: addq %r9, %rdx	 RIP: 4401a1	 Bytes: 3
  %loadMem_4401a1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401a1 = call %struct.Memory* @routine_addq__r9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401a1)
  store %struct.Memory* %call_4401a1, %struct.Memory** %MEMORY

  ; Code: movl 0x14(%rdx), %r9d	 RIP: 4401a4	 Bytes: 4
  %loadMem_4401a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401a4 = call %struct.Memory* @routine_movl_0x14__rdx____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401a4)
  store %struct.Memory* %call_4401a4, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0xda0(%rbp)	 RIP: 4401a8	 Bytes: 6
  %loadMem_4401a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401a8 = call %struct.Memory* @routine_movl__edi__MINUS0xda0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401a8)
  store %struct.Memory* %call_4401a8, %struct.Memory** %MEMORY

  ; Code: movq %rsi, %rdi	 RIP: 4401ae	 Bytes: 3
  %loadMem_4401ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401ae = call %struct.Memory* @routine_movq__rsi___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401ae)
  store %struct.Memory* %call_4401ae, %struct.Memory** %MEMORY

  ; Code: movl %eax, %esi	 RIP: 4401b1	 Bytes: 2
  %loadMem_4401b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401b1 = call %struct.Memory* @routine_movl__eax___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401b1)
  store %struct.Memory* %call_4401b1, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %edx	 RIP: 4401b3	 Bytes: 3
  %loadMem_4401b3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401b3 = call %struct.Memory* @routine_movl__r10d___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401b3)
  store %struct.Memory* %call_4401b3, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rsp)	 RIP: 4401b6	 Bytes: 7
  %loadMem_4401b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401b6 = call %struct.Memory* @routine_movl__0x0____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401b6)
  store %struct.Memory* %call_4401b6, %struct.Memory** %MEMORY

  ; Code: callq .owl_add_move	 RIP: 4401bd	 Bytes: 5
  %loadMem1_4401bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4401bd = call %struct.Memory* @routine_callq_.owl_add_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4401bd, i64 16499, i64 5, i64 5)
  store %struct.Memory* %call1_4401bd, %struct.Memory** %MEMORY

  %loadMem2_4401bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4401bd = load i64, i64* %3
  %call2_4401bd = call %struct.Memory* @sub_444230.owl_add_move(%struct.State* %0, i64  %loadPC_4401bd, %struct.Memory* %loadMem2_4401bd)
  store %struct.Memory* %call2_4401bd, %struct.Memory** %MEMORY

  ; Code: movl -0x684(%rbp), %eax	 RIP: 4401c2	 Bytes: 6
  %loadMem_4401c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401c2 = call %struct.Memory* @routine_movl_MINUS0x684__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401c2)
  store %struct.Memory* %call_4401c2, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4401c8	 Bytes: 3
  %loadMem_4401c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401c8 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401c8)
  store %struct.Memory* %call_4401c8, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x684(%rbp)	 RIP: 4401cb	 Bytes: 6
  %loadMem_4401cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401cb = call %struct.Memory* @routine_movl__eax__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401cb)
  store %struct.Memory* %call_4401cb, %struct.Memory** %MEMORY

  ; Code: jmpq .L_43ffc4	 RIP: 4401d1	 Bytes: 5
  %loadMem_4401d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401d1 = call %struct.Memory* @routine_jmpq_.L_43ffc4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401d1, i64 -525, i64 5)
  store %struct.Memory* %call_4401d1, %struct.Memory** %MEMORY

  br label %block_.L_43ffc4

  ; Code: .L_4401d6:	 RIP: 4401d6	 Bytes: 0
block_.L_4401d6:

  ; Code: movl $0x0, -0x684(%rbp)	 RIP: 4401d6	 Bytes: 10
  %loadMem_4401d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401d6 = call %struct.Memory* @routine_movl__0x0__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401d6)
  store %struct.Memory* %call_4401d6, %struct.Memory** %MEMORY

  ; Code: .L_4401e0:	 RIP: 4401e0	 Bytes: 0
  br label %block_.L_4401e0
block_.L_4401e0:

  ; Code: xorl %eax, %eax	 RIP: 4401e0	 Bytes: 2
  %loadMem_4401e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401e0 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401e0)
  store %struct.Memory* %call_4401e0, %struct.Memory** %MEMORY

  ; Code: movb %al, %cl	 RIP: 4401e2	 Bytes: 2
  %loadMem_4401e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401e2 = call %struct.Memory* @routine_movb__al___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401e2)
  store %struct.Memory* %call_4401e2, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, -0x684(%rbp)	 RIP: 4401e4	 Bytes: 7
  %loadMem_4401e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401e4 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401e4)
  store %struct.Memory* %call_4401e4, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0xda1(%rbp)	 RIP: 4401eb	 Bytes: 6
  %loadMem_4401eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401eb = call %struct.Memory* @routine_movb__cl__MINUS0xda1__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401eb)
  store %struct.Memory* %call_4401eb, %struct.Memory** %MEMORY

  ; Code: jge .L_440218	 RIP: 4401f1	 Bytes: 6
  %loadMem_4401f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401f1 = call %struct.Memory* @routine_jge_.L_440218(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401f1, i8* %BRANCH_TAKEN, i64 39, i64 6, i64 6)
  store %struct.Memory* %call_4401f1, %struct.Memory** %MEMORY

  %loadBr_4401f1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4401f1 = icmp eq i8 %loadBr_4401f1, 1
  br i1 %cmpBr_4401f1, label %block_.L_440218, label %block_4401f7

block_4401f7:
  ; Code: leaq -0x120(%rbp), %rax	 RIP: 4401f7	 Bytes: 7
  %loadMem_4401f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401f7 = call %struct.Memory* @routine_leaq_MINUS0x120__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401f7)
  store %struct.Memory* %call_4401f7, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 4401fe	 Bytes: 7
  %loadMem_4401fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4401fe = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4401fe)
  store %struct.Memory* %call_4401fe, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 440205	 Bytes: 4
  %loadMem_440205 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440205 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440205)
  store %struct.Memory* %call_440205, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 440209	 Bytes: 3
  %loadMem_440209 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440209 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440209)
  store %struct.Memory* %call_440209, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax)	 RIP: 44020c	 Bytes: 3
  %loadMem_44020c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44020c = call %struct.Memory* @routine_cmpl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44020c)
  store %struct.Memory* %call_44020c, %struct.Memory** %MEMORY

  ; Code: setne %dl	 RIP: 44020f	 Bytes: 3
  %loadMem_44020f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44020f = call %struct.Memory* @routine_setne__dl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44020f)
  store %struct.Memory* %call_44020f, %struct.Memory** %MEMORY

  ; Code: movb %dl, -0xda1(%rbp)	 RIP: 440212	 Bytes: 6
  %loadMem_440212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440212 = call %struct.Memory* @routine_movb__dl__MINUS0xda1__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440212)
  store %struct.Memory* %call_440212, %struct.Memory** %MEMORY

  ; Code: .L_440218:	 RIP: 440218	 Bytes: 0
  br label %block_.L_440218
block_.L_440218:

  ; Code: movb -0xda1(%rbp), %al	 RIP: 440218	 Bytes: 6
  %loadMem_440218 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440218 = call %struct.Memory* @routine_movb_MINUS0xda1__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440218)
  store %struct.Memory* %call_440218, %struct.Memory** %MEMORY

  ; Code: testb $0x1, %al	 RIP: 44021e	 Bytes: 2
  %loadMem_44021e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44021e = call %struct.Memory* @routine_testb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44021e)
  store %struct.Memory* %call_44021e, %struct.Memory** %MEMORY

  ; Code: jne .L_44022b	 RIP: 440220	 Bytes: 6
  %loadMem_440220 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440220 = call %struct.Memory* @routine_jne_.L_44022b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440220, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_440220, %struct.Memory** %MEMORY

  %loadBr_440220 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440220 = icmp eq i8 %loadBr_440220, 1
  br i1 %cmpBr_440220, label %block_.L_44022b, label %block_440226

block_440226:
  ; Code: jmpq .L_440430	 RIP: 440226	 Bytes: 5
  %loadMem_440226 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440226 = call %struct.Memory* @routine_jmpq_.L_440430(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440226, i64 522, i64 5)
  store %struct.Memory* %call_440226, %struct.Memory** %MEMORY

  br label %block_.L_440430

  ; Code: .L_44022b:	 RIP: 44022b	 Bytes: 0
block_.L_44022b:

  ; Code: leaq -0x120(%rbp), %rax	 RIP: 44022b	 Bytes: 7
  %loadMem_44022b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44022b = call %struct.Memory* @routine_leaq_MINUS0x120__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44022b)
  store %struct.Memory* %call_44022b, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 440232	 Bytes: 7
  %loadMem_440232 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440232 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440232)
  store %struct.Memory* %call_440232, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 440239	 Bytes: 4
  %loadMem_440239 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440239 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440239)
  store %struct.Memory* %call_440239, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 44023d	 Bytes: 3
  %loadMem_44023d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44023d = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44023d)
  store %struct.Memory* %call_44023d, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edi	 RIP: 440240	 Bytes: 2
  %loadMem_440240 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440240 = call %struct.Memory* @routine_movl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440240)
  store %struct.Memory* %call_440240, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rsi	 RIP: 440242	 Bytes: 4
  %loadMem_440242 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440242 = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440242)
  store %struct.Memory* %call_440242, %struct.Memory** %MEMORY

  ; Code: callq .liberty_of_goal	 RIP: 440246	 Bytes: 5
  %loadMem1_440246 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440246 = call %struct.Memory* @routine_callq_.liberty_of_goal(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440246, i64 15434, i64 5, i64 5)
  store %struct.Memory* %call1_440246, %struct.Memory** %MEMORY

  %loadMem2_440246 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440246 = load i64, i64* %3
  %call2_440246 = call %struct.Memory* @sub_443e90.liberty_of_goal(%struct.State* %0, i64  %loadPC_440246, %struct.Memory* %loadMem2_440246)
  store %struct.Memory* %call2_440246, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 44024b	 Bytes: 3
  %loadMem_44024b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44024b = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44024b)
  store %struct.Memory* %call_44024b, %struct.Memory** %MEMORY

  ; Code: je .L_44030e	 RIP: 44024e	 Bytes: 6
  %loadMem_44024e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44024e = call %struct.Memory* @routine_je_.L_44030e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44024e, i8* %BRANCH_TAKEN, i64 192, i64 6, i64 6)
  store %struct.Memory* %call_44024e, %struct.Memory** %MEMORY

  %loadBr_44024e = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44024e = icmp eq i8 %loadBr_44024e, 1
  br i1 %cmpBr_44024e, label %block_.L_44030e, label %block_440254

block_440254:
  ; Code: leaq -0x120(%rbp), %rax	 RIP: 440254	 Bytes: 7
  %loadMem_440254 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440254 = call %struct.Memory* @routine_leaq_MINUS0x120__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440254)
  store %struct.Memory* %call_440254, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 44025b	 Bytes: 7
  %loadMem_44025b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44025b = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44025b)
  store %struct.Memory* %call_44025b, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 440262	 Bytes: 4
  %loadMem_440262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440262 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440262)
  store %struct.Memory* %call_440262, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 440266	 Bytes: 3
  %loadMem_440266 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440266 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440266)
  store %struct.Memory* %call_440266, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edi	 RIP: 440269	 Bytes: 2
  %loadMem_440269 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440269 = call %struct.Memory* @routine_movl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440269)
  store %struct.Memory* %call_440269, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rsi	 RIP: 44026b	 Bytes: 4
  %loadMem_44026b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44026b = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44026b)
  store %struct.Memory* %call_44026b, %struct.Memory** %MEMORY

  ; Code: callq .liberty_of_goal	 RIP: 44026f	 Bytes: 5
  %loadMem1_44026f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_44026f = call %struct.Memory* @routine_callq_.liberty_of_goal(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_44026f, i64 15393, i64 5, i64 5)
  store %struct.Memory* %call1_44026f, %struct.Memory** %MEMORY

  %loadMem2_44026f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44026f = load i64, i64* %3
  %call2_44026f = call %struct.Memory* @sub_443e90.liberty_of_goal(%struct.State* %0, i64  %loadPC_44026f, %struct.Memory* %loadMem2_44026f)
  store %struct.Memory* %call2_44026f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 440274	 Bytes: 3
  %loadMem_440274 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440274 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440274)
  store %struct.Memory* %call_440274, %struct.Memory** %MEMORY

  ; Code: jne .L_4402c3	 RIP: 440277	 Bytes: 6
  %loadMem_440277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440277 = call %struct.Memory* @routine_jne_.L_4402c3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440277, i8* %BRANCH_TAKEN, i64 76, i64 6, i64 6)
  store %struct.Memory* %call_440277, %struct.Memory** %MEMORY

  %loadBr_440277 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440277 = icmp eq i8 %loadBr_440277, 1
  br i1 %cmpBr_440277, label %block_.L_4402c3, label %block_44027d

block_44027d:
  ; Code: leaq -0x120(%rbp), %rax	 RIP: 44027d	 Bytes: 7
  %loadMem_44027d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44027d = call %struct.Memory* @routine_leaq_MINUS0x120__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44027d)
  store %struct.Memory* %call_44027d, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 440284	 Bytes: 7
  %loadMem_440284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440284 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440284)
  store %struct.Memory* %call_440284, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 44028b	 Bytes: 4
  %loadMem_44028b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44028b = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44028b)
  store %struct.Memory* %call_44028b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 44028f	 Bytes: 3
  %loadMem_44028f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44028f = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44028f)
  store %struct.Memory* %call_44028f, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edi	 RIP: 440292	 Bytes: 2
  %loadMem_440292 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440292 = call %struct.Memory* @routine_movl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440292)
  store %struct.Memory* %call_440292, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %esi	 RIP: 440294	 Bytes: 3
  %loadMem_440294 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440294 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440294)
  store %struct.Memory* %call_440294, %struct.Memory** %MEMORY

  ; Code: callq .safe_move	 RIP: 440297	 Bytes: 5
  %loadMem1_440297 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440297 = call %struct.Memory* @routine_callq_.safe_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440297, i64 178585, i64 5, i64 5)
  store %struct.Memory* %call1_440297, %struct.Memory** %MEMORY

  %loadMem2_440297 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440297 = load i64, i64* %3
  %call2_440297 = call %struct.Memory* @sub_46bc30.safe_move(%struct.State* %0, i64  %loadPC_440297, %struct.Memory* %loadMem2_440297)
  store %struct.Memory* %call2_440297, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 44029c	 Bytes: 3
  %loadMem_44029c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44029c = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44029c)
  store %struct.Memory* %call_44029c, %struct.Memory** %MEMORY

  ; Code: je .L_4402b4	 RIP: 44029f	 Bytes: 6
  %loadMem_44029f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44029f = call %struct.Memory* @routine_je_.L_4402b4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44029f, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_44029f, %struct.Memory** %MEMORY

  %loadBr_44029f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44029f = icmp eq i8 %loadBr_44029f, 1
  br i1 %cmpBr_44029f, label %block_.L_4402b4, label %block_4402a5

block_4402a5:
  ; Code: movl $0x1, -0x4d4(%rbp)	 RIP: 4402a5	 Bytes: 10
  %loadMem_4402a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4402a5 = call %struct.Memory* @routine_movl__0x1__MINUS0x4d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4402a5)
  store %struct.Memory* %call_4402a5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4402be	 RIP: 4402af	 Bytes: 5
  %loadMem_4402af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4402af = call %struct.Memory* @routine_jmpq_.L_4402be(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4402af, i64 15, i64 5)
  store %struct.Memory* %call_4402af, %struct.Memory** %MEMORY

  br label %block_.L_4402be

  ; Code: .L_4402b4:	 RIP: 4402b4	 Bytes: 0
block_.L_4402b4:

  ; Code: movl $0x1, -0x4d8(%rbp)	 RIP: 4402b4	 Bytes: 10
  %loadMem_4402b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4402b4 = call %struct.Memory* @routine_movl__0x1__MINUS0x4d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4402b4)
  store %struct.Memory* %call_4402b4, %struct.Memory** %MEMORY

  ; Code: .L_4402be:	 RIP: 4402be	 Bytes: 0
  br label %block_.L_4402be
block_.L_4402be:

  ; Code: jmpq .L_440309	 RIP: 4402be	 Bytes: 5
  %loadMem_4402be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4402be = call %struct.Memory* @routine_jmpq_.L_440309(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4402be, i64 75, i64 5)
  store %struct.Memory* %call_4402be, %struct.Memory** %MEMORY

  br label %block_.L_440309

  ; Code: .L_4402c3:	 RIP: 4402c3	 Bytes: 0
block_.L_4402c3:

  ; Code: leaq -0x120(%rbp), %rax	 RIP: 4402c3	 Bytes: 7
  %loadMem_4402c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4402c3 = call %struct.Memory* @routine_leaq_MINUS0x120__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4402c3)
  store %struct.Memory* %call_4402c3, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 4402ca	 Bytes: 7
  %loadMem_4402ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4402ca = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4402ca)
  store %struct.Memory* %call_4402ca, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 4402d1	 Bytes: 4
  %loadMem_4402d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4402d1 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4402d1)
  store %struct.Memory* %call_4402d1, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4402d5	 Bytes: 3
  %loadMem_4402d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4402d5 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4402d5)
  store %struct.Memory* %call_4402d5, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edi	 RIP: 4402d8	 Bytes: 2
  %loadMem_4402d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4402d8 = call %struct.Memory* @routine_movl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4402d8)
  store %struct.Memory* %call_4402d8, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %esi	 RIP: 4402da	 Bytes: 3
  %loadMem_4402da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4402da = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4402da)
  store %struct.Memory* %call_4402da, %struct.Memory** %MEMORY

  ; Code: callq .safe_move	 RIP: 4402dd	 Bytes: 5
  %loadMem1_4402dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4402dd = call %struct.Memory* @routine_callq_.safe_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4402dd, i64 178515, i64 5, i64 5)
  store %struct.Memory* %call1_4402dd, %struct.Memory** %MEMORY

  %loadMem2_4402dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4402dd = load i64, i64* %3
  %call2_4402dd = call %struct.Memory* @sub_46bc30.safe_move(%struct.State* %0, i64  %loadPC_4402dd, %struct.Memory* %loadMem2_4402dd)
  store %struct.Memory* %call2_4402dd, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4402e2	 Bytes: 3
  %loadMem_4402e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4402e2 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4402e2)
  store %struct.Memory* %call_4402e2, %struct.Memory** %MEMORY

  ; Code: je .L_4402fa	 RIP: 4402e5	 Bytes: 6
  %loadMem_4402e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4402e5 = call %struct.Memory* @routine_je_.L_4402fa(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4402e5, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_4402e5, %struct.Memory** %MEMORY

  %loadBr_4402e5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4402e5 = icmp eq i8 %loadBr_4402e5, 1
  br i1 %cmpBr_4402e5, label %block_.L_4402fa, label %block_4402eb

block_4402eb:
  ; Code: movl $0x1, -0x4dc(%rbp)	 RIP: 4402eb	 Bytes: 10
  %loadMem_4402eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4402eb = call %struct.Memory* @routine_movl__0x1__MINUS0x4dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4402eb)
  store %struct.Memory* %call_4402eb, %struct.Memory** %MEMORY

  ; Code: jmpq .L_440304	 RIP: 4402f5	 Bytes: 5
  %loadMem_4402f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4402f5 = call %struct.Memory* @routine_jmpq_.L_440304(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4402f5, i64 15, i64 5)
  store %struct.Memory* %call_4402f5, %struct.Memory** %MEMORY

  br label %block_.L_440304

  ; Code: .L_4402fa:	 RIP: 4402fa	 Bytes: 0
block_.L_4402fa:

  ; Code: movl $0x1, -0x4e0(%rbp)	 RIP: 4402fa	 Bytes: 10
  %loadMem_4402fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4402fa = call %struct.Memory* @routine_movl__0x1__MINUS0x4e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4402fa)
  store %struct.Memory* %call_4402fa, %struct.Memory** %MEMORY

  ; Code: .L_440304:	 RIP: 440304	 Bytes: 0
  br label %block_.L_440304
block_.L_440304:

  ; Code: jmpq .L_440309	 RIP: 440304	 Bytes: 5
  %loadMem_440304 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440304 = call %struct.Memory* @routine_jmpq_.L_440309(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440304, i64 5, i64 5)
  store %struct.Memory* %call_440304, %struct.Memory** %MEMORY

  br label %block_.L_440309

  ; Code: .L_440309:	 RIP: 440309	 Bytes: 0
block_.L_440309:

  ; Code: jmpq .L_44030e	 RIP: 440309	 Bytes: 5
  %loadMem_440309 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440309 = call %struct.Memory* @routine_jmpq_.L_44030e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440309, i64 5, i64 5)
  store %struct.Memory* %call_440309, %struct.Memory** %MEMORY

  br label %block_.L_44030e

  ; Code: .L_44030e:	 RIP: 44030e	 Bytes: 0
block_.L_44030e:

  ; Code: leaq -0x120(%rbp), %rax	 RIP: 44030e	 Bytes: 7
  %loadMem_44030e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44030e = call %struct.Memory* @routine_leaq_MINUS0x120__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44030e)
  store %struct.Memory* %call_44030e, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 440315	 Bytes: 7
  %loadMem_440315 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440315 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440315)
  store %struct.Memory* %call_440315, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 44031c	 Bytes: 4
  %loadMem_44031c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44031c = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44031c)
  store %struct.Memory* %call_44031c, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 440320	 Bytes: 3
  %loadMem_440320 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440320 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440320)
  store %struct.Memory* %call_440320, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 440323	 Bytes: 3
  %loadMem_440323 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440323 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440323)
  store %struct.Memory* %call_440323, %struct.Memory** %MEMORY

  ; Code: movslq (%rdx), %rcx	 RIP: 440326	 Bytes: 3
  %loadMem_440326 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440326 = call %struct.Memory* @routine_movslq___rdx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440326)
  store %struct.Memory* %call_440326, %struct.Memory** %MEMORY

  ; Code: movb $0x1, -0x680(%rbp,%rcx,1)	 RIP: 440329	 Bytes: 8
  %loadMem_440329 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440329 = call %struct.Memory* @routine_movb__0x1__MINUS0x680__rbp__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440329)
  store %struct.Memory* %call_440329, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 440331	 Bytes: 7
  %loadMem_440331 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440331 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440331)
  store %struct.Memory* %call_440331, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 440338	 Bytes: 4
  %loadMem_440338 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440338 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440338)
  store %struct.Memory* %call_440338, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 44033c	 Bytes: 3
  %loadMem_44033c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44033c = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44033c)
  store %struct.Memory* %call_44033c, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edi	 RIP: 44033f	 Bytes: 2
  %loadMem_44033f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44033f = call %struct.Memory* @routine_movl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44033f)
  store %struct.Memory* %call_44033f, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rsi	 RIP: 440341	 Bytes: 4
  %loadMem_440341 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440341 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440341)
  store %struct.Memory* %call_440341, %struct.Memory** %MEMORY

  ; Code: callq .liberty_of_goal	 RIP: 440345	 Bytes: 5
  %loadMem1_440345 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440345 = call %struct.Memory* @routine_callq_.liberty_of_goal(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440345, i64 15179, i64 5, i64 5)
  store %struct.Memory* %call1_440345, %struct.Memory** %MEMORY

  %loadMem2_440345 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440345 = load i64, i64* %3
  %call2_440345 = call %struct.Memory* @sub_443e90.liberty_of_goal(%struct.State* %0, i64  %loadPC_440345, %struct.Memory* %loadMem2_440345)
  store %struct.Memory* %call2_440345, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 44034a	 Bytes: 3
  %loadMem_44034a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44034a = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44034a)
  store %struct.Memory* %call_44034a, %struct.Memory** %MEMORY

  ; Code: je .L_440362	 RIP: 44034d	 Bytes: 6
  %loadMem_44034d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44034d = call %struct.Memory* @routine_je_.L_440362(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44034d, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_44034d, %struct.Memory** %MEMORY

  %loadBr_44034d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44034d = icmp eq i8 %loadBr_44034d, 1
  br i1 %cmpBr_44034d, label %block_.L_440362, label %block_440353

block_440353:
  ; Code: movl $0x2, -0x690(%rbp)	 RIP: 440353	 Bytes: 10
  %loadMem_440353 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440353 = call %struct.Memory* @routine_movl__0x2__MINUS0x690__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440353)
  store %struct.Memory* %call_440353, %struct.Memory** %MEMORY

  ; Code: jmpq .L_44036c	 RIP: 44035d	 Bytes: 5
  %loadMem_44035d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44035d = call %struct.Memory* @routine_jmpq_.L_44036c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44035d, i64 15, i64 5)
  store %struct.Memory* %call_44035d, %struct.Memory** %MEMORY

  br label %block_.L_44036c

  ; Code: .L_440362:	 RIP: 440362	 Bytes: 0
block_.L_440362:

  ; Code: movl $0x0, -0x690(%rbp)	 RIP: 440362	 Bytes: 10
  %loadMem_440362 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440362 = call %struct.Memory* @routine_movl__0x0__MINUS0x690__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440362)
  store %struct.Memory* %call_440362, %struct.Memory** %MEMORY

  ; Code: .L_44036c:	 RIP: 44036c	 Bytes: 0
  br label %block_.L_44036c
block_.L_44036c:

  ; Code: leaq -0x120(%rbp), %rax	 RIP: 44036c	 Bytes: 7
  %loadMem_44036c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44036c = call %struct.Memory* @routine_leaq_MINUS0x120__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44036c)
  store %struct.Memory* %call_44036c, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 440373	 Bytes: 7
  %loadMem_440373 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440373 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440373)
  store %struct.Memory* %call_440373, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 44037a	 Bytes: 4
  %loadMem_44037a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44037a = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44037a)
  store %struct.Memory* %call_44037a, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 44037e	 Bytes: 3
  %loadMem_44037e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44037e = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44037e)
  store %struct.Memory* %call_44037e, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 440381	 Bytes: 3
  %loadMem_440381 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440381 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440381)
  store %struct.Memory* %call_440381, %struct.Memory** %MEMORY

  ; Code: movl (%rdx), %edi	 RIP: 440384	 Bytes: 2
  %loadMem_440384 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440384 = call %struct.Memory* @routine_movl___rdx____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440384)
  store %struct.Memory* %call_440384, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rsi	 RIP: 440386	 Bytes: 4
  %loadMem_440386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440386 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440386)
  store %struct.Memory* %call_440386, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rdx	 RIP: 44038a	 Bytes: 4
  %loadMem_44038a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44038a = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44038a)
  store %struct.Memory* %call_44038a, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 44038e	 Bytes: 7
  %loadMem_44038e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44038e = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44038e)
  store %struct.Memory* %call_44038e, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 440395	 Bytes: 4
  %loadMem_440395 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440395 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440395)
  store %struct.Memory* %call_440395, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 440399	 Bytes: 3
  %loadMem_440399 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440399 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440399)
  store %struct.Memory* %call_440399, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 44039c	 Bytes: 3
  %loadMem_44039c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44039c = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44039c)
  store %struct.Memory* %call_44039c, %struct.Memory** %MEMORY

  ; Code: callq .semeai_move_value	 RIP: 44039f	 Bytes: 5
  %loadMem1_44039f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_44039f = call %struct.Memory* @routine_callq_.semeai_move_value(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_44039f, i64 15345, i64 5, i64 5)
  store %struct.Memory* %call1_44039f, %struct.Memory** %MEMORY

  %loadMem2_44039f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44039f = load i64, i64* %3
  %call2_44039f = call %struct.Memory* @sub_443f90.semeai_move_value(%struct.State* %0, i64  %loadPC_44039f, %struct.Memory* %loadMem2_44039f)
  store %struct.Memory* %call2_44039f, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 4403a4	 Bytes: 2
  %loadMem_4403a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403a4 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403a4)
  store %struct.Memory* %call_4403a4, %struct.Memory** %MEMORY

  ; Code: leaq -0x120(%rbp), %rdx	 RIP: 4403a6	 Bytes: 7
  %loadMem_4403a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403a6 = call %struct.Memory* @routine_leaq_MINUS0x120__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403a6)
  store %struct.Memory* %call_4403a6, %struct.Memory** %MEMORY

  ; Code: leaq -0x2e0(%rbp), %rdi	 RIP: 4403ad	 Bytes: 7
  %loadMem_4403ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403ad = call %struct.Memory* @routine_leaq_MINUS0x2e0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403ad)
  store %struct.Memory* %call_4403ad, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6a0(%rbp)	 RIP: 4403b4	 Bytes: 6
  %loadMem_4403b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403b4 = call %struct.Memory* @routine_movl__eax__MINUS0x6a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403b4)
  store %struct.Memory* %call_4403b4, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rsi	 RIP: 4403ba	 Bytes: 7
  %loadMem_4403ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403ba = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403ba)
  store %struct.Memory* %call_4403ba, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rsi	 RIP: 4403c1	 Bytes: 4
  %loadMem_4403c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403c1 = call %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403c1)
  store %struct.Memory* %call_4403c1, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %r8	 RIP: 4403c5	 Bytes: 3
  %loadMem_4403c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403c5 = call %struct.Memory* @routine_movq__rdx___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403c5)
  store %struct.Memory* %call_4403c5, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %r8	 RIP: 4403c8	 Bytes: 3
  %loadMem_4403c8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403c8 = call %struct.Memory* @routine_addq__rsi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403c8)
  store %struct.Memory* %call_4403c8, %struct.Memory** %MEMORY

  ; Code: movl (%r8), %esi	 RIP: 4403cb	 Bytes: 3
  %loadMem_4403cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403cb = call %struct.Memory* @routine_movl___r8____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403cb)
  store %struct.Memory* %call_4403cb, %struct.Memory** %MEMORY

  ; Code: movl -0x6a0(%rbp), %eax	 RIP: 4403ce	 Bytes: 6
  %loadMem_4403ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403ce = call %struct.Memory* @routine_movl_MINUS0x6a0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403ce)
  store %struct.Memory* %call_4403ce, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %r8	 RIP: 4403d4	 Bytes: 7
  %loadMem_4403d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403d4 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403d4)
  store %struct.Memory* %call_4403d4, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r8	 RIP: 4403db	 Bytes: 4
  %loadMem_4403db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403db = call %struct.Memory* @routine_shlq__0x5___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403db)
  store %struct.Memory* %call_4403db, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %r9	 RIP: 4403df	 Bytes: 3
  %loadMem_4403df = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403df = call %struct.Memory* @routine_movq__rdx___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403df)
  store %struct.Memory* %call_4403df, %struct.Memory** %MEMORY

  ; Code: addq %r8, %r9	 RIP: 4403e2	 Bytes: 3
  %loadMem_4403e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403e2 = call %struct.Memory* @routine_addq__r8___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403e2)
  store %struct.Memory* %call_4403e2, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%r9), %r8	 RIP: 4403e5	 Bytes: 4
  %loadMem_4403e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403e5 = call %struct.Memory* @routine_movq_0x8__r9____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403e5)
  store %struct.Memory* %call_4403e5, %struct.Memory** %MEMORY

  ; Code: movl -0x690(%rbp), %r10d	 RIP: 4403e9	 Bytes: 7
  %loadMem_4403e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403e9 = call %struct.Memory* @routine_movl_MINUS0x690__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403e9)
  store %struct.Memory* %call_4403e9, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %r9	 RIP: 4403f0	 Bytes: 7
  %loadMem_4403f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403f0 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403f0)
  store %struct.Memory* %call_4403f0, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r9	 RIP: 4403f7	 Bytes: 4
  %loadMem_4403f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403f7 = call %struct.Memory* @routine_shlq__0x5___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403f7)
  store %struct.Memory* %call_4403f7, %struct.Memory** %MEMORY

  ; Code: addq %r9, %rdx	 RIP: 4403fb	 Bytes: 3
  %loadMem_4403fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403fb = call %struct.Memory* @routine_addq__r9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403fb)
  store %struct.Memory* %call_4403fb, %struct.Memory** %MEMORY

  ; Code: movl 0x14(%rdx), %r9d	 RIP: 4403fe	 Bytes: 4
  %loadMem_4403fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4403fe = call %struct.Memory* @routine_movl_0x14__rdx____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4403fe)
  store %struct.Memory* %call_4403fe, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 440402	 Bytes: 2
  %loadMem_440402 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440402 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440402)
  store %struct.Memory* %call_440402, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xda8(%rbp)	 RIP: 440404	 Bytes: 6
  %loadMem_440404 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440404 = call %struct.Memory* @routine_movl__ecx__MINUS0xda8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440404)
  store %struct.Memory* %call_440404, %struct.Memory** %MEMORY

  ; Code: movq %r8, %rcx	 RIP: 44040a	 Bytes: 3
  %loadMem_44040a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44040a = call %struct.Memory* @routine_movq__r8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44040a)
  store %struct.Memory* %call_44040a, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %r8d	 RIP: 44040d	 Bytes: 3
  %loadMem_44040d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44040d = call %struct.Memory* @routine_movl__r10d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44040d)
  store %struct.Memory* %call_44040d, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rsp)	 RIP: 440410	 Bytes: 7
  %loadMem_440410 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440410 = call %struct.Memory* @routine_movl__0x0____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440410)
  store %struct.Memory* %call_440410, %struct.Memory** %MEMORY

  ; Code: callq .owl_add_move	 RIP: 440417	 Bytes: 5
  %loadMem1_440417 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440417 = call %struct.Memory* @routine_callq_.owl_add_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440417, i64 15897, i64 5, i64 5)
  store %struct.Memory* %call1_440417, %struct.Memory** %MEMORY

  %loadMem2_440417 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440417 = load i64, i64* %3
  %call2_440417 = call %struct.Memory* @sub_444230.owl_add_move(%struct.State* %0, i64  %loadPC_440417, %struct.Memory* %loadMem2_440417)
  store %struct.Memory* %call2_440417, %struct.Memory** %MEMORY

  ; Code: movl -0x684(%rbp), %eax	 RIP: 44041c	 Bytes: 6
  %loadMem_44041c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44041c = call %struct.Memory* @routine_movl_MINUS0x684__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44041c)
  store %struct.Memory* %call_44041c, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 440422	 Bytes: 3
  %loadMem_440422 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440422 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440422)
  store %struct.Memory* %call_440422, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x684(%rbp)	 RIP: 440425	 Bytes: 6
  %loadMem_440425 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440425 = call %struct.Memory* @routine_movl__eax__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440425)
  store %struct.Memory* %call_440425, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4401e0	 RIP: 44042b	 Bytes: 5
  %loadMem_44042b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44042b = call %struct.Memory* @routine_jmpq_.L_4401e0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44042b, i64 -587, i64 5)
  store %struct.Memory* %call_44042b, %struct.Memory** %MEMORY

  br label %block_.L_4401e0

  ; Code: .L_440430:	 RIP: 440430	 Bytes: 0
block_.L_440430:

  ; Code: movl $0x0, -0x684(%rbp)	 RIP: 440430	 Bytes: 10
  %loadMem_440430 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440430 = call %struct.Memory* @routine_movl__0x0__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440430)
  store %struct.Memory* %call_440430, %struct.Memory** %MEMORY

  ; Code: .L_44043a:	 RIP: 44043a	 Bytes: 0
  br label %block_.L_44043a
block_.L_44043a:

  ; Code: xorl %eax, %eax	 RIP: 44043a	 Bytes: 2
  %loadMem_44043a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44043a = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44043a)
  store %struct.Memory* %call_44043a, %struct.Memory** %MEMORY

  ; Code: movb %al, %cl	 RIP: 44043c	 Bytes: 2
  %loadMem_44043c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44043c = call %struct.Memory* @routine_movb__al___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44043c)
  store %struct.Memory* %call_44043c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, -0x684(%rbp)	 RIP: 44043e	 Bytes: 7
  %loadMem_44043e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44043e = call %struct.Memory* @routine_cmpl__0x2__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44043e)
  store %struct.Memory* %call_44043e, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0xda9(%rbp)	 RIP: 440445	 Bytes: 6
  %loadMem_440445 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440445 = call %struct.Memory* @routine_movb__cl__MINUS0xda9__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440445)
  store %struct.Memory* %call_440445, %struct.Memory** %MEMORY

  ; Code: jge .L_440472	 RIP: 44044b	 Bytes: 6
  %loadMem_44044b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44044b = call %struct.Memory* @routine_jge_.L_440472(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44044b, i8* %BRANCH_TAKEN, i64 39, i64 6, i64 6)
  store %struct.Memory* %call_44044b, %struct.Memory** %MEMORY

  %loadBr_44044b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44044b = icmp eq i8 %loadBr_44044b, 1
  br i1 %cmpBr_44044b, label %block_.L_440472, label %block_440451

block_440451:
  ; Code: leaq -0x180(%rbp), %rax	 RIP: 440451	 Bytes: 7
  %loadMem_440451 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440451 = call %struct.Memory* @routine_leaq_MINUS0x180__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440451)
  store %struct.Memory* %call_440451, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 440458	 Bytes: 7
  %loadMem_440458 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440458 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440458)
  store %struct.Memory* %call_440458, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 44045f	 Bytes: 4
  %loadMem_44045f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44045f = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44045f)
  store %struct.Memory* %call_44045f, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 440463	 Bytes: 3
  %loadMem_440463 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440463 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440463)
  store %struct.Memory* %call_440463, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax)	 RIP: 440466	 Bytes: 3
  %loadMem_440466 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440466 = call %struct.Memory* @routine_cmpl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440466)
  store %struct.Memory* %call_440466, %struct.Memory** %MEMORY

  ; Code: setne %dl	 RIP: 440469	 Bytes: 3
  %loadMem_440469 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440469 = call %struct.Memory* @routine_setne__dl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440469)
  store %struct.Memory* %call_440469, %struct.Memory** %MEMORY

  ; Code: movb %dl, -0xda9(%rbp)	 RIP: 44046c	 Bytes: 6
  %loadMem_44046c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44046c = call %struct.Memory* @routine_movb__dl__MINUS0xda9__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44046c)
  store %struct.Memory* %call_44046c, %struct.Memory** %MEMORY

  ; Code: .L_440472:	 RIP: 440472	 Bytes: 0
  br label %block_.L_440472
block_.L_440472:

  ; Code: movb -0xda9(%rbp), %al	 RIP: 440472	 Bytes: 6
  %loadMem_440472 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440472 = call %struct.Memory* @routine_movb_MINUS0xda9__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440472)
  store %struct.Memory* %call_440472, %struct.Memory** %MEMORY

  ; Code: testb $0x1, %al	 RIP: 440478	 Bytes: 2
  %loadMem_440478 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440478 = call %struct.Memory* @routine_testb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440478)
  store %struct.Memory* %call_440478, %struct.Memory** %MEMORY

  ; Code: jne .L_440485	 RIP: 44047a	 Bytes: 6
  %loadMem_44047a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44047a = call %struct.Memory* @routine_jne_.L_440485(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44047a, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_44047a, %struct.Memory** %MEMORY

  %loadBr_44047a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44047a = icmp eq i8 %loadBr_44047a, 1
  br i1 %cmpBr_44047a, label %block_.L_440485, label %block_440480

block_440480:
  ; Code: jmpq .L_440656	 RIP: 440480	 Bytes: 5
  %loadMem_440480 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440480 = call %struct.Memory* @routine_jmpq_.L_440656(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440480, i64 470, i64 5)
  store %struct.Memory* %call_440480, %struct.Memory** %MEMORY

  br label %block_.L_440656

  ; Code: .L_440485:	 RIP: 440485	 Bytes: 0
block_.L_440485:

  ; Code: leaq -0x180(%rbp), %rax	 RIP: 440485	 Bytes: 7
  %loadMem_440485 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440485 = call %struct.Memory* @routine_leaq_MINUS0x180__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440485)
  store %struct.Memory* %call_440485, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 44048c	 Bytes: 7
  %loadMem_44048c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44048c = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44048c)
  store %struct.Memory* %call_44048c, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 440493	 Bytes: 4
  %loadMem_440493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440493 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440493)
  store %struct.Memory* %call_440493, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 440497	 Bytes: 3
  %loadMem_440497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440497 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440497)
  store %struct.Memory* %call_440497, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edi	 RIP: 44049a	 Bytes: 2
  %loadMem_44049a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44049a = call %struct.Memory* @routine_movl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44049a)
  store %struct.Memory* %call_44049a, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rsi	 RIP: 44049c	 Bytes: 4
  %loadMem_44049c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44049c = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44049c)
  store %struct.Memory* %call_44049c, %struct.Memory** %MEMORY

  ; Code: callq .liberty_of_goal	 RIP: 4404a0	 Bytes: 5
  %loadMem1_4404a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4404a0 = call %struct.Memory* @routine_callq_.liberty_of_goal(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4404a0, i64 14832, i64 5, i64 5)
  store %struct.Memory* %call1_4404a0, %struct.Memory** %MEMORY

  %loadMem2_4404a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4404a0 = load i64, i64* %3
  %call2_4404a0 = call %struct.Memory* @sub_443e90.liberty_of_goal(%struct.State* %0, i64  %loadPC_4404a0, %struct.Memory* %loadMem2_4404a0)
  store %struct.Memory* %call2_4404a0, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4404a5	 Bytes: 3
  %loadMem_4404a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404a5 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404a5)
  store %struct.Memory* %call_4404a5, %struct.Memory** %MEMORY

  ; Code: je .L_440568	 RIP: 4404a8	 Bytes: 6
  %loadMem_4404a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404a8 = call %struct.Memory* @routine_je_.L_440568(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404a8, i8* %BRANCH_TAKEN, i64 192, i64 6, i64 6)
  store %struct.Memory* %call_4404a8, %struct.Memory** %MEMORY

  %loadBr_4404a8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4404a8 = icmp eq i8 %loadBr_4404a8, 1
  br i1 %cmpBr_4404a8, label %block_.L_440568, label %block_4404ae

block_4404ae:
  ; Code: leaq -0x180(%rbp), %rax	 RIP: 4404ae	 Bytes: 7
  %loadMem_4404ae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404ae = call %struct.Memory* @routine_leaq_MINUS0x180__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404ae)
  store %struct.Memory* %call_4404ae, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 4404b5	 Bytes: 7
  %loadMem_4404b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404b5 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404b5)
  store %struct.Memory* %call_4404b5, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 4404bc	 Bytes: 4
  %loadMem_4404bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404bc = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404bc)
  store %struct.Memory* %call_4404bc, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4404c0	 Bytes: 3
  %loadMem_4404c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404c0 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404c0)
  store %struct.Memory* %call_4404c0, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edi	 RIP: 4404c3	 Bytes: 2
  %loadMem_4404c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404c3 = call %struct.Memory* @routine_movl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404c3)
  store %struct.Memory* %call_4404c3, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rsi	 RIP: 4404c5	 Bytes: 4
  %loadMem_4404c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404c5 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404c5)
  store %struct.Memory* %call_4404c5, %struct.Memory** %MEMORY

  ; Code: callq .liberty_of_goal	 RIP: 4404c9	 Bytes: 5
  %loadMem1_4404c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4404c9 = call %struct.Memory* @routine_callq_.liberty_of_goal(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4404c9, i64 14791, i64 5, i64 5)
  store %struct.Memory* %call1_4404c9, %struct.Memory** %MEMORY

  %loadMem2_4404c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4404c9 = load i64, i64* %3
  %call2_4404c9 = call %struct.Memory* @sub_443e90.liberty_of_goal(%struct.State* %0, i64  %loadPC_4404c9, %struct.Memory* %loadMem2_4404c9)
  store %struct.Memory* %call2_4404c9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4404ce	 Bytes: 3
  %loadMem_4404ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404ce = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404ce)
  store %struct.Memory* %call_4404ce, %struct.Memory** %MEMORY

  ; Code: jne .L_44051d	 RIP: 4404d1	 Bytes: 6
  %loadMem_4404d1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404d1 = call %struct.Memory* @routine_jne_.L_44051d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404d1, i8* %BRANCH_TAKEN, i64 76, i64 6, i64 6)
  store %struct.Memory* %call_4404d1, %struct.Memory** %MEMORY

  %loadBr_4404d1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4404d1 = icmp eq i8 %loadBr_4404d1, 1
  br i1 %cmpBr_4404d1, label %block_.L_44051d, label %block_4404d7

block_4404d7:
  ; Code: leaq -0x180(%rbp), %rax	 RIP: 4404d7	 Bytes: 7
  %loadMem_4404d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404d7 = call %struct.Memory* @routine_leaq_MINUS0x180__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404d7)
  store %struct.Memory* %call_4404d7, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 4404de	 Bytes: 7
  %loadMem_4404de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404de = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404de)
  store %struct.Memory* %call_4404de, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 4404e5	 Bytes: 4
  %loadMem_4404e5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404e5 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404e5)
  store %struct.Memory* %call_4404e5, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4404e9	 Bytes: 3
  %loadMem_4404e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404e9 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404e9)
  store %struct.Memory* %call_4404e9, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edi	 RIP: 4404ec	 Bytes: 2
  %loadMem_4404ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404ec = call %struct.Memory* @routine_movl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404ec)
  store %struct.Memory* %call_4404ec, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %esi	 RIP: 4404ee	 Bytes: 3
  %loadMem_4404ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404ee = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404ee)
  store %struct.Memory* %call_4404ee, %struct.Memory** %MEMORY

  ; Code: callq .safe_move	 RIP: 4404f1	 Bytes: 5
  %loadMem1_4404f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4404f1 = call %struct.Memory* @routine_callq_.safe_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4404f1, i64 177983, i64 5, i64 5)
  store %struct.Memory* %call1_4404f1, %struct.Memory** %MEMORY

  %loadMem2_4404f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4404f1 = load i64, i64* %3
  %call2_4404f1 = call %struct.Memory* @sub_46bc30.safe_move(%struct.State* %0, i64  %loadPC_4404f1, %struct.Memory* %loadMem2_4404f1)
  store %struct.Memory* %call2_4404f1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4404f6	 Bytes: 3
  %loadMem_4404f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404f6 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404f6)
  store %struct.Memory* %call_4404f6, %struct.Memory** %MEMORY

  ; Code: je .L_44050e	 RIP: 4404f9	 Bytes: 6
  %loadMem_4404f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404f9 = call %struct.Memory* @routine_je_.L_44050e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404f9, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_4404f9, %struct.Memory** %MEMORY

  %loadBr_4404f9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4404f9 = icmp eq i8 %loadBr_4404f9, 1
  br i1 %cmpBr_4404f9, label %block_.L_44050e, label %block_4404ff

block_4404ff:
  ; Code: movl $0x1, -0x4d4(%rbp)	 RIP: 4404ff	 Bytes: 10
  %loadMem_4404ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4404ff = call %struct.Memory* @routine_movl__0x1__MINUS0x4d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4404ff)
  store %struct.Memory* %call_4404ff, %struct.Memory** %MEMORY

  ; Code: jmpq .L_440518	 RIP: 440509	 Bytes: 5
  %loadMem_440509 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440509 = call %struct.Memory* @routine_jmpq_.L_440518(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440509, i64 15, i64 5)
  store %struct.Memory* %call_440509, %struct.Memory** %MEMORY

  br label %block_.L_440518

  ; Code: .L_44050e:	 RIP: 44050e	 Bytes: 0
block_.L_44050e:

  ; Code: movl $0x1, -0x4d8(%rbp)	 RIP: 44050e	 Bytes: 10
  %loadMem_44050e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44050e = call %struct.Memory* @routine_movl__0x1__MINUS0x4d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44050e)
  store %struct.Memory* %call_44050e, %struct.Memory** %MEMORY

  ; Code: .L_440518:	 RIP: 440518	 Bytes: 0
  br label %block_.L_440518
block_.L_440518:

  ; Code: jmpq .L_440563	 RIP: 440518	 Bytes: 5
  %loadMem_440518 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440518 = call %struct.Memory* @routine_jmpq_.L_440563(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440518, i64 75, i64 5)
  store %struct.Memory* %call_440518, %struct.Memory** %MEMORY

  br label %block_.L_440563

  ; Code: .L_44051d:	 RIP: 44051d	 Bytes: 0
block_.L_44051d:

  ; Code: leaq -0x180(%rbp), %rax	 RIP: 44051d	 Bytes: 7
  %loadMem_44051d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44051d = call %struct.Memory* @routine_leaq_MINUS0x180__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44051d)
  store %struct.Memory* %call_44051d, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 440524	 Bytes: 7
  %loadMem_440524 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440524 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440524)
  store %struct.Memory* %call_440524, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 44052b	 Bytes: 4
  %loadMem_44052b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44052b = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44052b)
  store %struct.Memory* %call_44052b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 44052f	 Bytes: 3
  %loadMem_44052f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44052f = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44052f)
  store %struct.Memory* %call_44052f, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edi	 RIP: 440532	 Bytes: 2
  %loadMem_440532 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440532 = call %struct.Memory* @routine_movl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440532)
  store %struct.Memory* %call_440532, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %esi	 RIP: 440534	 Bytes: 3
  %loadMem_440534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440534 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440534)
  store %struct.Memory* %call_440534, %struct.Memory** %MEMORY

  ; Code: callq .safe_move	 RIP: 440537	 Bytes: 5
  %loadMem1_440537 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440537 = call %struct.Memory* @routine_callq_.safe_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440537, i64 177913, i64 5, i64 5)
  store %struct.Memory* %call1_440537, %struct.Memory** %MEMORY

  %loadMem2_440537 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440537 = load i64, i64* %3
  %call2_440537 = call %struct.Memory* @sub_46bc30.safe_move(%struct.State* %0, i64  %loadPC_440537, %struct.Memory* %loadMem2_440537)
  store %struct.Memory* %call2_440537, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 44053c	 Bytes: 3
  %loadMem_44053c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44053c = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44053c)
  store %struct.Memory* %call_44053c, %struct.Memory** %MEMORY

  ; Code: je .L_440554	 RIP: 44053f	 Bytes: 6
  %loadMem_44053f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44053f = call %struct.Memory* @routine_je_.L_440554(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44053f, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_44053f, %struct.Memory** %MEMORY

  %loadBr_44053f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44053f = icmp eq i8 %loadBr_44053f, 1
  br i1 %cmpBr_44053f, label %block_.L_440554, label %block_440545

block_440545:
  ; Code: movl $0x1, -0x4dc(%rbp)	 RIP: 440545	 Bytes: 10
  %loadMem_440545 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440545 = call %struct.Memory* @routine_movl__0x1__MINUS0x4dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440545)
  store %struct.Memory* %call_440545, %struct.Memory** %MEMORY

  ; Code: jmpq .L_44055e	 RIP: 44054f	 Bytes: 5
  %loadMem_44054f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44054f = call %struct.Memory* @routine_jmpq_.L_44055e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44054f, i64 15, i64 5)
  store %struct.Memory* %call_44054f, %struct.Memory** %MEMORY

  br label %block_.L_44055e

  ; Code: .L_440554:	 RIP: 440554	 Bytes: 0
block_.L_440554:

  ; Code: movl $0x1, -0x4e0(%rbp)	 RIP: 440554	 Bytes: 10
  %loadMem_440554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440554 = call %struct.Memory* @routine_movl__0x1__MINUS0x4e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440554)
  store %struct.Memory* %call_440554, %struct.Memory** %MEMORY

  ; Code: .L_44055e:	 RIP: 44055e	 Bytes: 0
  br label %block_.L_44055e
block_.L_44055e:

  ; Code: jmpq .L_440563	 RIP: 44055e	 Bytes: 5
  %loadMem_44055e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44055e = call %struct.Memory* @routine_jmpq_.L_440563(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44055e, i64 5, i64 5)
  store %struct.Memory* %call_44055e, %struct.Memory** %MEMORY

  br label %block_.L_440563

  ; Code: .L_440563:	 RIP: 440563	 Bytes: 0
block_.L_440563:

  ; Code: jmpq .L_440568	 RIP: 440563	 Bytes: 5
  %loadMem_440563 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440563 = call %struct.Memory* @routine_jmpq_.L_440568(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440563, i64 5, i64 5)
  store %struct.Memory* %call_440563, %struct.Memory** %MEMORY

  br label %block_.L_440568

  ; Code: .L_440568:	 RIP: 440568	 Bytes: 0
block_.L_440568:

  ; Code: leaq -0x180(%rbp), %rax	 RIP: 440568	 Bytes: 7
  %loadMem_440568 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440568 = call %struct.Memory* @routine_leaq_MINUS0x180__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440568)
  store %struct.Memory* %call_440568, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 44056f	 Bytes: 7
  %loadMem_44056f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44056f = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44056f)
  store %struct.Memory* %call_44056f, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 440576	 Bytes: 4
  %loadMem_440576 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440576 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440576)
  store %struct.Memory* %call_440576, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 44057a	 Bytes: 3
  %loadMem_44057a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44057a = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44057a)
  store %struct.Memory* %call_44057a, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 44057d	 Bytes: 3
  %loadMem_44057d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44057d = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44057d)
  store %struct.Memory* %call_44057d, %struct.Memory** %MEMORY

  ; Code: movslq (%rdx), %rcx	 RIP: 440580	 Bytes: 3
  %loadMem_440580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440580 = call %struct.Memory* @routine_movslq___rdx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440580)
  store %struct.Memory* %call_440580, %struct.Memory** %MEMORY

  ; Code: movb $0x1, -0x680(%rbp,%rcx,1)	 RIP: 440583	 Bytes: 8
  %loadMem_440583 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440583 = call %struct.Memory* @routine_movb__0x1__MINUS0x680__rbp__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440583)
  store %struct.Memory* %call_440583, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 44058b	 Bytes: 7
  %loadMem_44058b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44058b = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44058b)
  store %struct.Memory* %call_44058b, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 440592	 Bytes: 4
  %loadMem_440592 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440592 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440592)
  store %struct.Memory* %call_440592, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 440596	 Bytes: 3
  %loadMem_440596 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440596 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440596)
  store %struct.Memory* %call_440596, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 440599	 Bytes: 3
  %loadMem_440599 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440599 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440599)
  store %struct.Memory* %call_440599, %struct.Memory** %MEMORY

  ; Code: movl (%rdx), %edi	 RIP: 44059c	 Bytes: 2
  %loadMem_44059c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44059c = call %struct.Memory* @routine_movl___rdx____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44059c)
  store %struct.Memory* %call_44059c, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rsi	 RIP: 44059e	 Bytes: 4
  %loadMem_44059e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44059e = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44059e)
  store %struct.Memory* %call_44059e, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rdx	 RIP: 4405a2	 Bytes: 4
  %loadMem_4405a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405a2 = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405a2)
  store %struct.Memory* %call_4405a2, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 4405a6	 Bytes: 7
  %loadMem_4405a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405a6 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405a6)
  store %struct.Memory* %call_4405a6, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 4405ad	 Bytes: 4
  %loadMem_4405ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405ad = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405ad)
  store %struct.Memory* %call_4405ad, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4405b1	 Bytes: 3
  %loadMem_4405b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405b1 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405b1)
  store %struct.Memory* %call_4405b1, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 4405b4	 Bytes: 3
  %loadMem_4405b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405b4 = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405b4)
  store %struct.Memory* %call_4405b4, %struct.Memory** %MEMORY

  ; Code: callq .semeai_move_value	 RIP: 4405b7	 Bytes: 5
  %loadMem1_4405b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4405b7 = call %struct.Memory* @routine_callq_.semeai_move_value(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4405b7, i64 14809, i64 5, i64 5)
  store %struct.Memory* %call1_4405b7, %struct.Memory** %MEMORY

  %loadMem2_4405b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4405b7 = load i64, i64* %3
  %call2_4405b7 = call %struct.Memory* @sub_443f90.semeai_move_value(%struct.State* %0, i64  %loadPC_4405b7, %struct.Memory* %loadMem2_4405b7)
  store %struct.Memory* %call2_4405b7, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 4405bc	 Bytes: 2
  %loadMem_4405bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405bc = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405bc)
  store %struct.Memory* %call_4405bc, %struct.Memory** %MEMORY

  ; Code: leaq -0x180(%rbp), %rdx	 RIP: 4405be	 Bytes: 7
  %loadMem_4405be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405be = call %struct.Memory* @routine_leaq_MINUS0x180__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405be)
  store %struct.Memory* %call_4405be, %struct.Memory** %MEMORY

  ; Code: leaq -0x2e0(%rbp), %rdi	 RIP: 4405c5	 Bytes: 7
  %loadMem_4405c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405c5 = call %struct.Memory* @routine_leaq_MINUS0x2e0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405c5)
  store %struct.Memory* %call_4405c5, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6a0(%rbp)	 RIP: 4405cc	 Bytes: 6
  %loadMem_4405cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405cc = call %struct.Memory* @routine_movl__eax__MINUS0x6a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405cc)
  store %struct.Memory* %call_4405cc, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rsi	 RIP: 4405d2	 Bytes: 7
  %loadMem_4405d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405d2 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405d2)
  store %struct.Memory* %call_4405d2, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rsi	 RIP: 4405d9	 Bytes: 4
  %loadMem_4405d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405d9 = call %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405d9)
  store %struct.Memory* %call_4405d9, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %r8	 RIP: 4405dd	 Bytes: 3
  %loadMem_4405dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405dd = call %struct.Memory* @routine_movq__rdx___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405dd)
  store %struct.Memory* %call_4405dd, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %r8	 RIP: 4405e0	 Bytes: 3
  %loadMem_4405e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405e0 = call %struct.Memory* @routine_addq__rsi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405e0)
  store %struct.Memory* %call_4405e0, %struct.Memory** %MEMORY

  ; Code: movl (%r8), %esi	 RIP: 4405e3	 Bytes: 3
  %loadMem_4405e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405e3 = call %struct.Memory* @routine_movl___r8____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405e3)
  store %struct.Memory* %call_4405e3, %struct.Memory** %MEMORY

  ; Code: movl -0x6a0(%rbp), %eax	 RIP: 4405e6	 Bytes: 6
  %loadMem_4405e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405e6 = call %struct.Memory* @routine_movl_MINUS0x6a0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405e6)
  store %struct.Memory* %call_4405e6, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %r8	 RIP: 4405ec	 Bytes: 7
  %loadMem_4405ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405ec = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405ec)
  store %struct.Memory* %call_4405ec, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r8	 RIP: 4405f3	 Bytes: 4
  %loadMem_4405f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405f3 = call %struct.Memory* @routine_shlq__0x5___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405f3)
  store %struct.Memory* %call_4405f3, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %r9	 RIP: 4405f7	 Bytes: 3
  %loadMem_4405f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405f7 = call %struct.Memory* @routine_movq__rdx___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405f7)
  store %struct.Memory* %call_4405f7, %struct.Memory** %MEMORY

  ; Code: addq %r8, %r9	 RIP: 4405fa	 Bytes: 3
  %loadMem_4405fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405fa = call %struct.Memory* @routine_addq__r8___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405fa)
  store %struct.Memory* %call_4405fa, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%r9), %r8	 RIP: 4405fd	 Bytes: 4
  %loadMem_4405fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4405fd = call %struct.Memory* @routine_movq_0x8__r9____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4405fd)
  store %struct.Memory* %call_4405fd, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %r9	 RIP: 440601	 Bytes: 7
  %loadMem_440601 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440601 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440601)
  store %struct.Memory* %call_440601, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r9	 RIP: 440608	 Bytes: 4
  %loadMem_440608 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440608 = call %struct.Memory* @routine_shlq__0x5___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440608)
  store %struct.Memory* %call_440608, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %r10	 RIP: 44060c	 Bytes: 3
  %loadMem_44060c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44060c = call %struct.Memory* @routine_movq__rdx___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44060c)
  store %struct.Memory* %call_44060c, %struct.Memory** %MEMORY

  ; Code: addq %r9, %r10	 RIP: 44060f	 Bytes: 3
  %loadMem_44060f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44060f = call %struct.Memory* @routine_addq__r9___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44060f)
  store %struct.Memory* %call_44060f, %struct.Memory** %MEMORY

  ; Code: movl 0x10(%r10), %r11d	 RIP: 440612	 Bytes: 4
  %loadMem_440612 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440612 = call %struct.Memory* @routine_movl_0x10__r10____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440612)
  store %struct.Memory* %call_440612, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %r9	 RIP: 440616	 Bytes: 7
  %loadMem_440616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440616 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440616)
  store %struct.Memory* %call_440616, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r9	 RIP: 44061d	 Bytes: 4
  %loadMem_44061d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44061d = call %struct.Memory* @routine_shlq__0x5___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44061d)
  store %struct.Memory* %call_44061d, %struct.Memory** %MEMORY

  ; Code: addq %r9, %rdx	 RIP: 440621	 Bytes: 3
  %loadMem_440621 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440621 = call %struct.Memory* @routine_addq__r9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440621)
  store %struct.Memory* %call_440621, %struct.Memory** %MEMORY

  ; Code: movl 0x14(%rdx), %r9d	 RIP: 440624	 Bytes: 4
  %loadMem_440624 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440624 = call %struct.Memory* @routine_movl_0x14__rdx____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440624)
  store %struct.Memory* %call_440624, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 440628	 Bytes: 2
  %loadMem_440628 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440628 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440628)
  store %struct.Memory* %call_440628, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xdb0(%rbp)	 RIP: 44062a	 Bytes: 6
  %loadMem_44062a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44062a = call %struct.Memory* @routine_movl__ecx__MINUS0xdb0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44062a)
  store %struct.Memory* %call_44062a, %struct.Memory** %MEMORY

  ; Code: movq %r8, %rcx	 RIP: 440630	 Bytes: 3
  %loadMem_440630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440630 = call %struct.Memory* @routine_movq__r8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440630)
  store %struct.Memory* %call_440630, %struct.Memory** %MEMORY

  ; Code: movl %r11d, %r8d	 RIP: 440633	 Bytes: 3
  %loadMem_440633 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440633 = call %struct.Memory* @routine_movl__r11d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440633)
  store %struct.Memory* %call_440633, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rsp)	 RIP: 440636	 Bytes: 7
  %loadMem_440636 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440636 = call %struct.Memory* @routine_movl__0x0____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440636)
  store %struct.Memory* %call_440636, %struct.Memory** %MEMORY

  ; Code: callq .owl_add_move	 RIP: 44063d	 Bytes: 5
  %loadMem1_44063d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_44063d = call %struct.Memory* @routine_callq_.owl_add_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_44063d, i64 15347, i64 5, i64 5)
  store %struct.Memory* %call1_44063d, %struct.Memory** %MEMORY

  %loadMem2_44063d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44063d = load i64, i64* %3
  %call2_44063d = call %struct.Memory* @sub_444230.owl_add_move(%struct.State* %0, i64  %loadPC_44063d, %struct.Memory* %loadMem2_44063d)
  store %struct.Memory* %call2_44063d, %struct.Memory** %MEMORY

  ; Code: movl -0x684(%rbp), %eax	 RIP: 440642	 Bytes: 6
  %loadMem_440642 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440642 = call %struct.Memory* @routine_movl_MINUS0x684__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440642)
  store %struct.Memory* %call_440642, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 440648	 Bytes: 3
  %loadMem_440648 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440648 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440648)
  store %struct.Memory* %call_440648, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x684(%rbp)	 RIP: 44064b	 Bytes: 6
  %loadMem_44064b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44064b = call %struct.Memory* @routine_movl__eax__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44064b)
  store %struct.Memory* %call_44064b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_44043a	 RIP: 440651	 Bytes: 5
  %loadMem_440651 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440651 = call %struct.Memory* @routine_jmpq_.L_44043a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440651, i64 -535, i64 5)
  store %struct.Memory* %call_440651, %struct.Memory** %MEMORY

  br label %block_.L_44043a

  ; Code: .L_440656:	 RIP: 440656	 Bytes: 0
block_.L_440656:

  ; Code: movl $0x0, -0x684(%rbp)	 RIP: 440656	 Bytes: 10
  %loadMem_440656 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440656 = call %struct.Memory* @routine_movl__0x0__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440656)
  store %struct.Memory* %call_440656, %struct.Memory** %MEMORY

  ; Code: .L_440660:	 RIP: 440660	 Bytes: 0
  br label %block_.L_440660
block_.L_440660:

  ; Code: xorl %eax, %eax	 RIP: 440660	 Bytes: 2
  %loadMem_440660 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440660 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440660)
  store %struct.Memory* %call_440660, %struct.Memory** %MEMORY

  ; Code: movb %al, %cl	 RIP: 440662	 Bytes: 2
  %loadMem_440662 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440662 = call %struct.Memory* @routine_movb__al___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440662)
  store %struct.Memory* %call_440662, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, -0x684(%rbp)	 RIP: 440664	 Bytes: 7
  %loadMem_440664 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440664 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440664)
  store %struct.Memory* %call_440664, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0xdb1(%rbp)	 RIP: 44066b	 Bytes: 6
  %loadMem_44066b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44066b = call %struct.Memory* @routine_movb__cl__MINUS0xdb1__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44066b)
  store %struct.Memory* %call_44066b, %struct.Memory** %MEMORY

  ; Code: jge .L_440698	 RIP: 440671	 Bytes: 6
  %loadMem_440671 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440671 = call %struct.Memory* @routine_jge_.L_440698(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440671, i8* %BRANCH_TAKEN, i64 39, i64 6, i64 6)
  store %struct.Memory* %call_440671, %struct.Memory** %MEMORY

  %loadBr_440671 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440671 = icmp eq i8 %loadBr_440671, 1
  br i1 %cmpBr_440671, label %block_.L_440698, label %block_440677

block_440677:
  ; Code: leaq -0x1e0(%rbp), %rax	 RIP: 440677	 Bytes: 7
  %loadMem_440677 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440677 = call %struct.Memory* @routine_leaq_MINUS0x1e0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440677)
  store %struct.Memory* %call_440677, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 44067e	 Bytes: 7
  %loadMem_44067e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44067e = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44067e)
  store %struct.Memory* %call_44067e, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 440685	 Bytes: 4
  %loadMem_440685 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440685 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440685)
  store %struct.Memory* %call_440685, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 440689	 Bytes: 3
  %loadMem_440689 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440689 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440689)
  store %struct.Memory* %call_440689, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax)	 RIP: 44068c	 Bytes: 3
  %loadMem_44068c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44068c = call %struct.Memory* @routine_cmpl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44068c)
  store %struct.Memory* %call_44068c, %struct.Memory** %MEMORY

  ; Code: setne %dl	 RIP: 44068f	 Bytes: 3
  %loadMem_44068f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44068f = call %struct.Memory* @routine_setne__dl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44068f)
  store %struct.Memory* %call_44068f, %struct.Memory** %MEMORY

  ; Code: movb %dl, -0xdb1(%rbp)	 RIP: 440692	 Bytes: 6
  %loadMem_440692 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440692 = call %struct.Memory* @routine_movb__dl__MINUS0xdb1__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440692)
  store %struct.Memory* %call_440692, %struct.Memory** %MEMORY

  ; Code: .L_440698:	 RIP: 440698	 Bytes: 0
  br label %block_.L_440698
block_.L_440698:

  ; Code: movb -0xdb1(%rbp), %al	 RIP: 440698	 Bytes: 6
  %loadMem_440698 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440698 = call %struct.Memory* @routine_movb_MINUS0xdb1__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440698)
  store %struct.Memory* %call_440698, %struct.Memory** %MEMORY

  ; Code: testb $0x1, %al	 RIP: 44069e	 Bytes: 2
  %loadMem_44069e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44069e = call %struct.Memory* @routine_testb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44069e)
  store %struct.Memory* %call_44069e, %struct.Memory** %MEMORY

  ; Code: jne .L_4406ab	 RIP: 4406a0	 Bytes: 6
  %loadMem_4406a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406a0 = call %struct.Memory* @routine_jne_.L_4406ab(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406a0, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_4406a0, %struct.Memory** %MEMORY

  %loadBr_4406a0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4406a0 = icmp eq i8 %loadBr_4406a0, 1
  br i1 %cmpBr_4406a0, label %block_.L_4406ab, label %block_4406a6

block_4406a6:
  ; Code: jmpq .L_4408b0	 RIP: 4406a6	 Bytes: 5
  %loadMem_4406a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406a6 = call %struct.Memory* @routine_jmpq_.L_4408b0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406a6, i64 522, i64 5)
  store %struct.Memory* %call_4406a6, %struct.Memory** %MEMORY

  br label %block_.L_4408b0

  ; Code: .L_4406ab:	 RIP: 4406ab	 Bytes: 0
block_.L_4406ab:

  ; Code: leaq -0x1e0(%rbp), %rax	 RIP: 4406ab	 Bytes: 7
  %loadMem_4406ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406ab = call %struct.Memory* @routine_leaq_MINUS0x1e0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406ab)
  store %struct.Memory* %call_4406ab, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 4406b2	 Bytes: 7
  %loadMem_4406b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406b2 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406b2)
  store %struct.Memory* %call_4406b2, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 4406b9	 Bytes: 4
  %loadMem_4406b9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406b9 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406b9)
  store %struct.Memory* %call_4406b9, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4406bd	 Bytes: 3
  %loadMem_4406bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406bd = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406bd)
  store %struct.Memory* %call_4406bd, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edi	 RIP: 4406c0	 Bytes: 2
  %loadMem_4406c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406c0 = call %struct.Memory* @routine_movl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406c0)
  store %struct.Memory* %call_4406c0, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rsi	 RIP: 4406c2	 Bytes: 4
  %loadMem_4406c2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406c2 = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406c2)
  store %struct.Memory* %call_4406c2, %struct.Memory** %MEMORY

  ; Code: callq .liberty_of_goal	 RIP: 4406c6	 Bytes: 5
  %loadMem1_4406c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4406c6 = call %struct.Memory* @routine_callq_.liberty_of_goal(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4406c6, i64 14282, i64 5, i64 5)
  store %struct.Memory* %call1_4406c6, %struct.Memory** %MEMORY

  %loadMem2_4406c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4406c6 = load i64, i64* %3
  %call2_4406c6 = call %struct.Memory* @sub_443e90.liberty_of_goal(%struct.State* %0, i64  %loadPC_4406c6, %struct.Memory* %loadMem2_4406c6)
  store %struct.Memory* %call2_4406c6, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4406cb	 Bytes: 3
  %loadMem_4406cb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406cb = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406cb)
  store %struct.Memory* %call_4406cb, %struct.Memory** %MEMORY

  ; Code: je .L_44078e	 RIP: 4406ce	 Bytes: 6
  %loadMem_4406ce = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406ce = call %struct.Memory* @routine_je_.L_44078e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406ce, i8* %BRANCH_TAKEN, i64 192, i64 6, i64 6)
  store %struct.Memory* %call_4406ce, %struct.Memory** %MEMORY

  %loadBr_4406ce = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4406ce = icmp eq i8 %loadBr_4406ce, 1
  br i1 %cmpBr_4406ce, label %block_.L_44078e, label %block_4406d4

block_4406d4:
  ; Code: leaq -0x1e0(%rbp), %rax	 RIP: 4406d4	 Bytes: 7
  %loadMem_4406d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406d4 = call %struct.Memory* @routine_leaq_MINUS0x1e0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406d4)
  store %struct.Memory* %call_4406d4, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 4406db	 Bytes: 7
  %loadMem_4406db = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406db = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406db)
  store %struct.Memory* %call_4406db, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 4406e2	 Bytes: 4
  %loadMem_4406e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406e2 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406e2)
  store %struct.Memory* %call_4406e2, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4406e6	 Bytes: 3
  %loadMem_4406e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406e6 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406e6)
  store %struct.Memory* %call_4406e6, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edi	 RIP: 4406e9	 Bytes: 2
  %loadMem_4406e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406e9 = call %struct.Memory* @routine_movl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406e9)
  store %struct.Memory* %call_4406e9, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rsi	 RIP: 4406eb	 Bytes: 4
  %loadMem_4406eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406eb = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406eb)
  store %struct.Memory* %call_4406eb, %struct.Memory** %MEMORY

  ; Code: callq .liberty_of_goal	 RIP: 4406ef	 Bytes: 5
  %loadMem1_4406ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4406ef = call %struct.Memory* @routine_callq_.liberty_of_goal(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4406ef, i64 14241, i64 5, i64 5)
  store %struct.Memory* %call1_4406ef, %struct.Memory** %MEMORY

  %loadMem2_4406ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4406ef = load i64, i64* %3
  %call2_4406ef = call %struct.Memory* @sub_443e90.liberty_of_goal(%struct.State* %0, i64  %loadPC_4406ef, %struct.Memory* %loadMem2_4406ef)
  store %struct.Memory* %call2_4406ef, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4406f4	 Bytes: 3
  %loadMem_4406f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406f4 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406f4)
  store %struct.Memory* %call_4406f4, %struct.Memory** %MEMORY

  ; Code: jne .L_440743	 RIP: 4406f7	 Bytes: 6
  %loadMem_4406f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406f7 = call %struct.Memory* @routine_jne_.L_440743(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406f7, i8* %BRANCH_TAKEN, i64 76, i64 6, i64 6)
  store %struct.Memory* %call_4406f7, %struct.Memory** %MEMORY

  %loadBr_4406f7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4406f7 = icmp eq i8 %loadBr_4406f7, 1
  br i1 %cmpBr_4406f7, label %block_.L_440743, label %block_4406fd

block_4406fd:
  ; Code: leaq -0x1e0(%rbp), %rax	 RIP: 4406fd	 Bytes: 7
  %loadMem_4406fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4406fd = call %struct.Memory* @routine_leaq_MINUS0x1e0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4406fd)
  store %struct.Memory* %call_4406fd, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 440704	 Bytes: 7
  %loadMem_440704 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440704 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440704)
  store %struct.Memory* %call_440704, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 44070b	 Bytes: 4
  %loadMem_44070b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44070b = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44070b)
  store %struct.Memory* %call_44070b, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 44070f	 Bytes: 3
  %loadMem_44070f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44070f = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44070f)
  store %struct.Memory* %call_44070f, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edi	 RIP: 440712	 Bytes: 2
  %loadMem_440712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440712 = call %struct.Memory* @routine_movl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440712)
  store %struct.Memory* %call_440712, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %esi	 RIP: 440714	 Bytes: 3
  %loadMem_440714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440714 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440714)
  store %struct.Memory* %call_440714, %struct.Memory** %MEMORY

  ; Code: callq .safe_move	 RIP: 440717	 Bytes: 5
  %loadMem1_440717 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440717 = call %struct.Memory* @routine_callq_.safe_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440717, i64 177433, i64 5, i64 5)
  store %struct.Memory* %call1_440717, %struct.Memory** %MEMORY

  %loadMem2_440717 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440717 = load i64, i64* %3
  %call2_440717 = call %struct.Memory* @sub_46bc30.safe_move(%struct.State* %0, i64  %loadPC_440717, %struct.Memory* %loadMem2_440717)
  store %struct.Memory* %call2_440717, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 44071c	 Bytes: 3
  %loadMem_44071c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44071c = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44071c)
  store %struct.Memory* %call_44071c, %struct.Memory** %MEMORY

  ; Code: je .L_440734	 RIP: 44071f	 Bytes: 6
  %loadMem_44071f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44071f = call %struct.Memory* @routine_je_.L_440734(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44071f, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_44071f, %struct.Memory** %MEMORY

  %loadBr_44071f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44071f = icmp eq i8 %loadBr_44071f, 1
  br i1 %cmpBr_44071f, label %block_.L_440734, label %block_440725

block_440725:
  ; Code: movl $0x1, -0x4d4(%rbp)	 RIP: 440725	 Bytes: 10
  %loadMem_440725 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440725 = call %struct.Memory* @routine_movl__0x1__MINUS0x4d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440725)
  store %struct.Memory* %call_440725, %struct.Memory** %MEMORY

  ; Code: jmpq .L_44073e	 RIP: 44072f	 Bytes: 5
  %loadMem_44072f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44072f = call %struct.Memory* @routine_jmpq_.L_44073e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44072f, i64 15, i64 5)
  store %struct.Memory* %call_44072f, %struct.Memory** %MEMORY

  br label %block_.L_44073e

  ; Code: .L_440734:	 RIP: 440734	 Bytes: 0
block_.L_440734:

  ; Code: movl $0x1, -0x4d8(%rbp)	 RIP: 440734	 Bytes: 10
  %loadMem_440734 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440734 = call %struct.Memory* @routine_movl__0x1__MINUS0x4d8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440734)
  store %struct.Memory* %call_440734, %struct.Memory** %MEMORY

  ; Code: .L_44073e:	 RIP: 44073e	 Bytes: 0
  br label %block_.L_44073e
block_.L_44073e:

  ; Code: jmpq .L_440789	 RIP: 44073e	 Bytes: 5
  %loadMem_44073e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44073e = call %struct.Memory* @routine_jmpq_.L_440789(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44073e, i64 75, i64 5)
  store %struct.Memory* %call_44073e, %struct.Memory** %MEMORY

  br label %block_.L_440789

  ; Code: .L_440743:	 RIP: 440743	 Bytes: 0
block_.L_440743:

  ; Code: leaq -0x1e0(%rbp), %rax	 RIP: 440743	 Bytes: 7
  %loadMem_440743 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440743 = call %struct.Memory* @routine_leaq_MINUS0x1e0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440743)
  store %struct.Memory* %call_440743, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 44074a	 Bytes: 7
  %loadMem_44074a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44074a = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44074a)
  store %struct.Memory* %call_44074a, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 440751	 Bytes: 4
  %loadMem_440751 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440751 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440751)
  store %struct.Memory* %call_440751, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 440755	 Bytes: 3
  %loadMem_440755 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440755 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440755)
  store %struct.Memory* %call_440755, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edi	 RIP: 440758	 Bytes: 2
  %loadMem_440758 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440758 = call %struct.Memory* @routine_movl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440758)
  store %struct.Memory* %call_440758, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %esi	 RIP: 44075a	 Bytes: 3
  %loadMem_44075a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44075a = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44075a)
  store %struct.Memory* %call_44075a, %struct.Memory** %MEMORY

  ; Code: callq .safe_move	 RIP: 44075d	 Bytes: 5
  %loadMem1_44075d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_44075d = call %struct.Memory* @routine_callq_.safe_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_44075d, i64 177363, i64 5, i64 5)
  store %struct.Memory* %call1_44075d, %struct.Memory** %MEMORY

  %loadMem2_44075d = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44075d = load i64, i64* %3
  %call2_44075d = call %struct.Memory* @sub_46bc30.safe_move(%struct.State* %0, i64  %loadPC_44075d, %struct.Memory* %loadMem2_44075d)
  store %struct.Memory* %call2_44075d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 440762	 Bytes: 3
  %loadMem_440762 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440762 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440762)
  store %struct.Memory* %call_440762, %struct.Memory** %MEMORY

  ; Code: je .L_44077a	 RIP: 440765	 Bytes: 6
  %loadMem_440765 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440765 = call %struct.Memory* @routine_je_.L_44077a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440765, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_440765, %struct.Memory** %MEMORY

  %loadBr_440765 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440765 = icmp eq i8 %loadBr_440765, 1
  br i1 %cmpBr_440765, label %block_.L_44077a, label %block_44076b

block_44076b:
  ; Code: movl $0x1, -0x4dc(%rbp)	 RIP: 44076b	 Bytes: 10
  %loadMem_44076b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44076b = call %struct.Memory* @routine_movl__0x1__MINUS0x4dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44076b)
  store %struct.Memory* %call_44076b, %struct.Memory** %MEMORY

  ; Code: jmpq .L_440784	 RIP: 440775	 Bytes: 5
  %loadMem_440775 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440775 = call %struct.Memory* @routine_jmpq_.L_440784(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440775, i64 15, i64 5)
  store %struct.Memory* %call_440775, %struct.Memory** %MEMORY

  br label %block_.L_440784

  ; Code: .L_44077a:	 RIP: 44077a	 Bytes: 0
block_.L_44077a:

  ; Code: movl $0x1, -0x4e0(%rbp)	 RIP: 44077a	 Bytes: 10
  %loadMem_44077a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44077a = call %struct.Memory* @routine_movl__0x1__MINUS0x4e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44077a)
  store %struct.Memory* %call_44077a, %struct.Memory** %MEMORY

  ; Code: .L_440784:	 RIP: 440784	 Bytes: 0
  br label %block_.L_440784
block_.L_440784:

  ; Code: jmpq .L_440789	 RIP: 440784	 Bytes: 5
  %loadMem_440784 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440784 = call %struct.Memory* @routine_jmpq_.L_440789(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440784, i64 5, i64 5)
  store %struct.Memory* %call_440784, %struct.Memory** %MEMORY

  br label %block_.L_440789

  ; Code: .L_440789:	 RIP: 440789	 Bytes: 0
block_.L_440789:

  ; Code: jmpq .L_44078e	 RIP: 440789	 Bytes: 5
  %loadMem_440789 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440789 = call %struct.Memory* @routine_jmpq_.L_44078e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440789, i64 5, i64 5)
  store %struct.Memory* %call_440789, %struct.Memory** %MEMORY

  br label %block_.L_44078e

  ; Code: .L_44078e:	 RIP: 44078e	 Bytes: 0
block_.L_44078e:

  ; Code: leaq -0x1e0(%rbp), %rax	 RIP: 44078e	 Bytes: 7
  %loadMem_44078e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44078e = call %struct.Memory* @routine_leaq_MINUS0x1e0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44078e)
  store %struct.Memory* %call_44078e, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 440795	 Bytes: 7
  %loadMem_440795 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440795 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440795)
  store %struct.Memory* %call_440795, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 44079c	 Bytes: 4
  %loadMem_44079c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44079c = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44079c)
  store %struct.Memory* %call_44079c, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 4407a0	 Bytes: 3
  %loadMem_4407a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4407a0 = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4407a0)
  store %struct.Memory* %call_4407a0, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 4407a3	 Bytes: 3
  %loadMem_4407a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4407a3 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4407a3)
  store %struct.Memory* %call_4407a3, %struct.Memory** %MEMORY

  ; Code: movslq (%rdx), %rcx	 RIP: 4407a6	 Bytes: 3
  %loadMem_4407a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4407a6 = call %struct.Memory* @routine_movslq___rdx____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4407a6)
  store %struct.Memory* %call_4407a6, %struct.Memory** %MEMORY

  ; Code: movb $0x1, -0x680(%rbp,%rcx,1)	 RIP: 4407a9	 Bytes: 8
  %loadMem_4407a9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4407a9 = call %struct.Memory* @routine_movb__0x1__MINUS0x680__rbp__rcx_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4407a9)
  store %struct.Memory* %call_4407a9, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 4407b1	 Bytes: 7
  %loadMem_4407b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4407b1 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4407b1)
  store %struct.Memory* %call_4407b1, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 4407b8	 Bytes: 4
  %loadMem_4407b8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4407b8 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4407b8)
  store %struct.Memory* %call_4407b8, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 4407bc	 Bytes: 3
  %loadMem_4407bc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4407bc = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4407bc)
  store %struct.Memory* %call_4407bc, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edi	 RIP: 4407bf	 Bytes: 2
  %loadMem_4407bf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4407bf = call %struct.Memory* @routine_movl___rax____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4407bf)
  store %struct.Memory* %call_4407bf, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rsi	 RIP: 4407c1	 Bytes: 4
  %loadMem_4407c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4407c1 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4407c1)
  store %struct.Memory* %call_4407c1, %struct.Memory** %MEMORY

  ; Code: callq .liberty_of_goal	 RIP: 4407c5	 Bytes: 5
  %loadMem1_4407c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4407c5 = call %struct.Memory* @routine_callq_.liberty_of_goal(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4407c5, i64 14027, i64 5, i64 5)
  store %struct.Memory* %call1_4407c5, %struct.Memory** %MEMORY

  %loadMem2_4407c5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4407c5 = load i64, i64* %3
  %call2_4407c5 = call %struct.Memory* @sub_443e90.liberty_of_goal(%struct.State* %0, i64  %loadPC_4407c5, %struct.Memory* %loadMem2_4407c5)
  store %struct.Memory* %call2_4407c5, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4407ca	 Bytes: 3
  %loadMem_4407ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4407ca = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4407ca)
  store %struct.Memory* %call_4407ca, %struct.Memory** %MEMORY

  ; Code: je .L_4407e2	 RIP: 4407cd	 Bytes: 6
  %loadMem_4407cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4407cd = call %struct.Memory* @routine_je_.L_4407e2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4407cd, i8* %BRANCH_TAKEN, i64 21, i64 6, i64 6)
  store %struct.Memory* %call_4407cd, %struct.Memory** %MEMORY

  %loadBr_4407cd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4407cd = icmp eq i8 %loadBr_4407cd, 1
  br i1 %cmpBr_4407cd, label %block_.L_4407e2, label %block_4407d3

block_4407d3:
  ; Code: movl $0x2, -0x690(%rbp)	 RIP: 4407d3	 Bytes: 10
  %loadMem_4407d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4407d3 = call %struct.Memory* @routine_movl__0x2__MINUS0x690__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4407d3)
  store %struct.Memory* %call_4407d3, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4407ec	 RIP: 4407dd	 Bytes: 5
  %loadMem_4407dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4407dd = call %struct.Memory* @routine_jmpq_.L_4407ec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4407dd, i64 15, i64 5)
  store %struct.Memory* %call_4407dd, %struct.Memory** %MEMORY

  br label %block_.L_4407ec

  ; Code: .L_4407e2:	 RIP: 4407e2	 Bytes: 0
block_.L_4407e2:

  ; Code: movl $0x0, -0x690(%rbp)	 RIP: 4407e2	 Bytes: 10
  %loadMem_4407e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4407e2 = call %struct.Memory* @routine_movl__0x0__MINUS0x690__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4407e2)
  store %struct.Memory* %call_4407e2, %struct.Memory** %MEMORY

  ; Code: .L_4407ec:	 RIP: 4407ec	 Bytes: 0
  br label %block_.L_4407ec
block_.L_4407ec:

  ; Code: leaq -0x1e0(%rbp), %rax	 RIP: 4407ec	 Bytes: 7
  %loadMem_4407ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4407ec = call %struct.Memory* @routine_leaq_MINUS0x1e0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4407ec)
  store %struct.Memory* %call_4407ec, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 4407f3	 Bytes: 7
  %loadMem_4407f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4407f3 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4407f3)
  store %struct.Memory* %call_4407f3, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 4407fa	 Bytes: 4
  %loadMem_4407fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4407fa = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4407fa)
  store %struct.Memory* %call_4407fa, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 4407fe	 Bytes: 3
  %loadMem_4407fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4407fe = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4407fe)
  store %struct.Memory* %call_4407fe, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 440801	 Bytes: 3
  %loadMem_440801 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440801 = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440801)
  store %struct.Memory* %call_440801, %struct.Memory** %MEMORY

  ; Code: movl (%rdx), %edi	 RIP: 440804	 Bytes: 2
  %loadMem_440804 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440804 = call %struct.Memory* @routine_movl___rdx____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440804)
  store %struct.Memory* %call_440804, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rsi	 RIP: 440806	 Bytes: 4
  %loadMem_440806 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440806 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440806)
  store %struct.Memory* %call_440806, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rdx	 RIP: 44080a	 Bytes: 4
  %loadMem_44080a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44080a = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44080a)
  store %struct.Memory* %call_44080a, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 44080e	 Bytes: 7
  %loadMem_44080e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44080e = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44080e)
  store %struct.Memory* %call_44080e, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 440815	 Bytes: 4
  %loadMem_440815 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440815 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440815)
  store %struct.Memory* %call_440815, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 440819	 Bytes: 3
  %loadMem_440819 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440819 = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440819)
  store %struct.Memory* %call_440819, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 44081c	 Bytes: 3
  %loadMem_44081c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44081c = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44081c)
  store %struct.Memory* %call_44081c, %struct.Memory** %MEMORY

  ; Code: callq .semeai_move_value	 RIP: 44081f	 Bytes: 5
  %loadMem1_44081f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_44081f = call %struct.Memory* @routine_callq_.semeai_move_value(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_44081f, i64 14193, i64 5, i64 5)
  store %struct.Memory* %call1_44081f, %struct.Memory** %MEMORY

  %loadMem2_44081f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44081f = load i64, i64* %3
  %call2_44081f = call %struct.Memory* @sub_443f90.semeai_move_value(%struct.State* %0, i64  %loadPC_44081f, %struct.Memory* %loadMem2_44081f)
  store %struct.Memory* %call2_44081f, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 440824	 Bytes: 2
  %loadMem_440824 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440824 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440824)
  store %struct.Memory* %call_440824, %struct.Memory** %MEMORY

  ; Code: leaq -0x1e0(%rbp), %rdx	 RIP: 440826	 Bytes: 7
  %loadMem_440826 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440826 = call %struct.Memory* @routine_leaq_MINUS0x1e0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440826)
  store %struct.Memory* %call_440826, %struct.Memory** %MEMORY

  ; Code: leaq -0x2e0(%rbp), %rdi	 RIP: 44082d	 Bytes: 7
  %loadMem_44082d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44082d = call %struct.Memory* @routine_leaq_MINUS0x2e0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44082d)
  store %struct.Memory* %call_44082d, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6a0(%rbp)	 RIP: 440834	 Bytes: 6
  %loadMem_440834 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440834 = call %struct.Memory* @routine_movl__eax__MINUS0x6a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440834)
  store %struct.Memory* %call_440834, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rsi	 RIP: 44083a	 Bytes: 7
  %loadMem_44083a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44083a = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44083a)
  store %struct.Memory* %call_44083a, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rsi	 RIP: 440841	 Bytes: 4
  %loadMem_440841 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440841 = call %struct.Memory* @routine_shlq__0x5___rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440841)
  store %struct.Memory* %call_440841, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %r8	 RIP: 440845	 Bytes: 3
  %loadMem_440845 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440845 = call %struct.Memory* @routine_movq__rdx___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440845)
  store %struct.Memory* %call_440845, %struct.Memory** %MEMORY

  ; Code: addq %rsi, %r8	 RIP: 440848	 Bytes: 3
  %loadMem_440848 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440848 = call %struct.Memory* @routine_addq__rsi___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440848)
  store %struct.Memory* %call_440848, %struct.Memory** %MEMORY

  ; Code: movl (%r8), %esi	 RIP: 44084b	 Bytes: 3
  %loadMem_44084b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44084b = call %struct.Memory* @routine_movl___r8____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44084b)
  store %struct.Memory* %call_44084b, %struct.Memory** %MEMORY

  ; Code: movl -0x6a0(%rbp), %eax	 RIP: 44084e	 Bytes: 6
  %loadMem_44084e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44084e = call %struct.Memory* @routine_movl_MINUS0x6a0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44084e)
  store %struct.Memory* %call_44084e, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %r8	 RIP: 440854	 Bytes: 7
  %loadMem_440854 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440854 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440854)
  store %struct.Memory* %call_440854, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r8	 RIP: 44085b	 Bytes: 4
  %loadMem_44085b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44085b = call %struct.Memory* @routine_shlq__0x5___r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44085b)
  store %struct.Memory* %call_44085b, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %r9	 RIP: 44085f	 Bytes: 3
  %loadMem_44085f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44085f = call %struct.Memory* @routine_movq__rdx___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44085f)
  store %struct.Memory* %call_44085f, %struct.Memory** %MEMORY

  ; Code: addq %r8, %r9	 RIP: 440862	 Bytes: 3
  %loadMem_440862 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440862 = call %struct.Memory* @routine_addq__r8___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440862)
  store %struct.Memory* %call_440862, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%r9), %r8	 RIP: 440865	 Bytes: 4
  %loadMem_440865 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440865 = call %struct.Memory* @routine_movq_0x8__r9____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440865)
  store %struct.Memory* %call_440865, %struct.Memory** %MEMORY

  ; Code: movl -0x690(%rbp), %r10d	 RIP: 440869	 Bytes: 7
  %loadMem_440869 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440869 = call %struct.Memory* @routine_movl_MINUS0x690__rbp____r10d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440869)
  store %struct.Memory* %call_440869, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %r9	 RIP: 440870	 Bytes: 7
  %loadMem_440870 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440870 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440870)
  store %struct.Memory* %call_440870, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r9	 RIP: 440877	 Bytes: 4
  %loadMem_440877 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440877 = call %struct.Memory* @routine_shlq__0x5___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440877)
  store %struct.Memory* %call_440877, %struct.Memory** %MEMORY

  ; Code: addq %r9, %rdx	 RIP: 44087b	 Bytes: 3
  %loadMem_44087b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44087b = call %struct.Memory* @routine_addq__r9___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44087b)
  store %struct.Memory* %call_44087b, %struct.Memory** %MEMORY

  ; Code: movl 0x14(%rdx), %r9d	 RIP: 44087e	 Bytes: 4
  %loadMem_44087e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44087e = call %struct.Memory* @routine_movl_0x14__rdx____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44087e)
  store %struct.Memory* %call_44087e, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 440882	 Bytes: 2
  %loadMem_440882 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440882 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440882)
  store %struct.Memory* %call_440882, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xdb8(%rbp)	 RIP: 440884	 Bytes: 6
  %loadMem_440884 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440884 = call %struct.Memory* @routine_movl__ecx__MINUS0xdb8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440884)
  store %struct.Memory* %call_440884, %struct.Memory** %MEMORY

  ; Code: movq %r8, %rcx	 RIP: 44088a	 Bytes: 3
  %loadMem_44088a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44088a = call %struct.Memory* @routine_movq__r8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44088a)
  store %struct.Memory* %call_44088a, %struct.Memory** %MEMORY

  ; Code: movl %r10d, %r8d	 RIP: 44088d	 Bytes: 3
  %loadMem_44088d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44088d = call %struct.Memory* @routine_movl__r10d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44088d)
  store %struct.Memory* %call_44088d, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rsp)	 RIP: 440890	 Bytes: 7
  %loadMem_440890 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440890 = call %struct.Memory* @routine_movl__0x0____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440890)
  store %struct.Memory* %call_440890, %struct.Memory** %MEMORY

  ; Code: callq .owl_add_move	 RIP: 440897	 Bytes: 5
  %loadMem1_440897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440897 = call %struct.Memory* @routine_callq_.owl_add_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440897, i64 14745, i64 5, i64 5)
  store %struct.Memory* %call1_440897, %struct.Memory** %MEMORY

  %loadMem2_440897 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440897 = load i64, i64* %3
  %call2_440897 = call %struct.Memory* @sub_444230.owl_add_move(%struct.State* %0, i64  %loadPC_440897, %struct.Memory* %loadMem2_440897)
  store %struct.Memory* %call2_440897, %struct.Memory** %MEMORY

  ; Code: movl -0x684(%rbp), %eax	 RIP: 44089c	 Bytes: 6
  %loadMem_44089c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44089c = call %struct.Memory* @routine_movl_MINUS0x684__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44089c)
  store %struct.Memory* %call_44089c, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4408a2	 Bytes: 3
  %loadMem_4408a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4408a2 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4408a2)
  store %struct.Memory* %call_4408a2, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x684(%rbp)	 RIP: 4408a5	 Bytes: 6
  %loadMem_4408a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4408a5 = call %struct.Memory* @routine_movl__eax__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4408a5)
  store %struct.Memory* %call_4408a5, %struct.Memory** %MEMORY

  ; Code: jmpq .L_440660	 RIP: 4408ab	 Bytes: 5
  %loadMem_4408ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4408ab = call %struct.Memory* @routine_jmpq_.L_440660(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4408ab, i64 -587, i64 5)
  store %struct.Memory* %call_4408ab, %struct.Memory** %MEMORY

  br label %block_.L_440660

  ; Code: .L_4408b0:	 RIP: 4408b0	 Bytes: 0
block_.L_4408b0:

  ; Code: cmpl $0x0, -0x2e0(%rbp)	 RIP: 4408b0	 Bytes: 7
  %loadMem_4408b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4408b0 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x2e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4408b0)
  store %struct.Memory* %call_4408b0, %struct.Memory** %MEMORY

  ; Code: jne .L_4408c4	 RIP: 4408b7	 Bytes: 6
  %loadMem_4408b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4408b7 = call %struct.Memory* @routine_jne_.L_4408c4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4408b7, i8* %BRANCH_TAKEN, i64 13, i64 6, i64 6)
  store %struct.Memory* %call_4408b7, %struct.Memory** %MEMORY

  %loadBr_4408b7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4408b7 = icmp eq i8 %loadBr_4408b7, 1
  br i1 %cmpBr_4408b7, label %block_.L_4408c4, label %block_4408bd

block_4408bd:
  ; Code: movl $0x0, -0x58(%rbp)	 RIP: 4408bd	 Bytes: 7
  %loadMem_4408bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4408bd = call %struct.Memory* @routine_movl__0x0__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4408bd)
  store %struct.Memory* %call_4408bd, %struct.Memory** %MEMORY

  ; Code: .L_4408c4:	 RIP: 4408c4	 Bytes: 0
  br label %block_.L_4408c4
block_.L_4408c4:

  ; Code: jmpq .L_4408c9	 RIP: 4408c4	 Bytes: 5
  %loadMem_4408c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4408c4 = call %struct.Memory* @routine_jmpq_.L_4408c9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4408c4, i64 5, i64 5)
  store %struct.Memory* %call_4408c4, %struct.Memory** %MEMORY

  br label %block_.L_4408c9

  ; Code: .L_4408c9:	 RIP: 4408c9	 Bytes: 0
block_.L_4408c9:

  ; Code: cmpl $0x0, -0x4d4(%rbp)	 RIP: 4408c9	 Bytes: 7
  %loadMem_4408c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4408c9 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x4d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4408c9)
  store %struct.Memory* %call_4408c9, %struct.Memory** %MEMORY

  ; Code: jne .L_440af7	 RIP: 4408d0	 Bytes: 6
  %loadMem_4408d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4408d0 = call %struct.Memory* @routine_jne_.L_440af7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4408d0, i8* %BRANCH_TAKEN, i64 551, i64 6, i64 6)
  store %struct.Memory* %call_4408d0, %struct.Memory** %MEMORY

  %loadBr_4408d0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4408d0 = icmp eq i8 %loadBr_4408d0, 1
  br i1 %cmpBr_4408d0, label %block_.L_440af7, label %block_4408d6

block_4408d6:
  ; Code: cmpl $0x64, -0x2dc(%rbp)	 RIP: 4408d6	 Bytes: 7
  %loadMem_4408d6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4408d6 = call %struct.Memory* @routine_cmpl__0x64__MINUS0x2dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4408d6)
  store %struct.Memory* %call_4408d6, %struct.Memory** %MEMORY

  ; Code: jge .L_440af7	 RIP: 4408dd	 Bytes: 6
  %loadMem_4408dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4408dd = call %struct.Memory* @routine_jge_.L_440af7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4408dd, i8* %BRANCH_TAKEN, i64 538, i64 6, i64 6)
  store %struct.Memory* %call_4408dd, %struct.Memory** %MEMORY

  %loadBr_4408dd = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4408dd = icmp eq i8 %loadBr_4408dd, 1
  br i1 %cmpBr_4408dd, label %block_.L_440af7, label %block_4408e3

block_4408e3:
  ; Code: movl $0x0, -0x688(%rbp)	 RIP: 4408e3	 Bytes: 10
  %loadMem_4408e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4408e3 = call %struct.Memory* @routine_movl__0x0__MINUS0x688__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4408e3)
  store %struct.Memory* %call_4408e3, %struct.Memory** %MEMORY

  ; Code: .L_4408ed:	 RIP: 4408ed	 Bytes: 0
  br label %block_.L_4408ed
block_.L_4408ed:

  ; Code: xorl %eax, %eax	 RIP: 4408ed	 Bytes: 2
  %loadMem_4408ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4408ed = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4408ed)
  store %struct.Memory* %call_4408ed, %struct.Memory** %MEMORY

  ; Code: movb %al, %cl	 RIP: 4408ef	 Bytes: 2
  %loadMem_4408ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4408ef = call %struct.Memory* @routine_movb__al___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4408ef)
  store %struct.Memory* %call_4408ef, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x4d4(%rbp)	 RIP: 4408f1	 Bytes: 7
  %loadMem_4408f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4408f1 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x4d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4408f1)
  store %struct.Memory* %call_4408f1, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0xdb9(%rbp)	 RIP: 4408f8	 Bytes: 6
  %loadMem_4408f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4408f8 = call %struct.Memory* @routine_movb__cl__MINUS0xdb9__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4408f8)
  store %struct.Memory* %call_4408f8, %struct.Memory** %MEMORY

  ; Code: jne .L_44091a	 RIP: 4408fe	 Bytes: 6
  %loadMem_4408fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4408fe = call %struct.Memory* @routine_jne_.L_44091a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4408fe, i8* %BRANCH_TAKEN, i64 28, i64 6, i64 6)
  store %struct.Memory* %call_4408fe, %struct.Memory** %MEMORY

  %loadBr_4408fe = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4408fe = icmp eq i8 %loadBr_4408fe, 1
  br i1 %cmpBr_4408fe, label %block_.L_44091a, label %block_440904

block_440904:
  ; Code: movl -0x688(%rbp), %eax	 RIP: 440904	 Bytes: 6
  %loadMem_440904 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440904 = call %struct.Memory* @routine_movl_MINUS0x688__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440904)
  store %struct.Memory* %call_440904, %struct.Memory** %MEMORY

  ; Code: cmpl 0x7ae438, %eax	 RIP: 44090a	 Bytes: 7
  %loadMem_44090a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44090a = call %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44090a)
  store %struct.Memory* %call_44090a, %struct.Memory** %MEMORY

  ; Code: setl %cl	 RIP: 440911	 Bytes: 3
  %loadMem_440911 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440911 = call %struct.Memory* @routine_setl__cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440911)
  store %struct.Memory* %call_440911, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0xdb9(%rbp)	 RIP: 440914	 Bytes: 6
  %loadMem_440914 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440914 = call %struct.Memory* @routine_movb__cl__MINUS0xdb9__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440914)
  store %struct.Memory* %call_440914, %struct.Memory** %MEMORY

  ; Code: .L_44091a:	 RIP: 44091a	 Bytes: 0
  br label %block_.L_44091a
block_.L_44091a:

  ; Code: movb -0xdb9(%rbp), %al	 RIP: 44091a	 Bytes: 6
  %loadMem_44091a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44091a = call %struct.Memory* @routine_movb_MINUS0xdb9__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44091a)
  store %struct.Memory* %call_44091a, %struct.Memory** %MEMORY

  ; Code: testb $0x1, %al	 RIP: 440920	 Bytes: 2
  %loadMem_440920 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440920 = call %struct.Memory* @routine_testb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440920)
  store %struct.Memory* %call_440920, %struct.Memory** %MEMORY

  ; Code: jne .L_44092d	 RIP: 440922	 Bytes: 6
  %loadMem_440922 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440922 = call %struct.Memory* @routine_jne_.L_44092d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440922, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_440922, %struct.Memory** %MEMORY

  %loadBr_440922 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440922 = icmp eq i8 %loadBr_440922, 1
  br i1 %cmpBr_440922, label %block_.L_44092d, label %block_440928

block_440928:
  ; Code: jmpq .L_440af2	 RIP: 440928	 Bytes: 5
  %loadMem_440928 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440928 = call %struct.Memory* @routine_jmpq_.L_440af2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440928, i64 458, i64 5)
  store %struct.Memory* %call_440928, %struct.Memory** %MEMORY

  br label %block_.L_440af2

  ; Code: .L_44092d:	 RIP: 44092d	 Bytes: 0
block_.L_44092d:

  ; Code: movl $0x0, -0x68c(%rbp)	 RIP: 44092d	 Bytes: 10
  %loadMem_44092d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44092d = call %struct.Memory* @routine_movl__0x0__MINUS0x68c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44092d)
  store %struct.Memory* %call_44092d, %struct.Memory** %MEMORY

  ; Code: .L_440937:	 RIP: 440937	 Bytes: 0
  br label %block_.L_440937
block_.L_440937:

  ; Code: xorl %eax, %eax	 RIP: 440937	 Bytes: 2
  %loadMem_440937 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440937 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440937)
  store %struct.Memory* %call_440937, %struct.Memory** %MEMORY

  ; Code: movb %al, %cl	 RIP: 440939	 Bytes: 2
  %loadMem_440939 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440939 = call %struct.Memory* @routine_movb__al___cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440939)
  store %struct.Memory* %call_440939, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x4d4(%rbp)	 RIP: 44093b	 Bytes: 7
  %loadMem_44093b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44093b = call %struct.Memory* @routine_cmpl__0x0__MINUS0x4d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44093b)
  store %struct.Memory* %call_44093b, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0xdba(%rbp)	 RIP: 440942	 Bytes: 6
  %loadMem_440942 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440942 = call %struct.Memory* @routine_movb__cl__MINUS0xdba__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440942)
  store %struct.Memory* %call_440942, %struct.Memory** %MEMORY

  ; Code: jne .L_440964	 RIP: 440948	 Bytes: 6
  %loadMem_440948 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440948 = call %struct.Memory* @routine_jne_.L_440964(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440948, i8* %BRANCH_TAKEN, i64 28, i64 6, i64 6)
  store %struct.Memory* %call_440948, %struct.Memory** %MEMORY

  %loadBr_440948 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440948 = icmp eq i8 %loadBr_440948, 1
  br i1 %cmpBr_440948, label %block_.L_440964, label %block_44094e

block_44094e:
  ; Code: movl -0x68c(%rbp), %eax	 RIP: 44094e	 Bytes: 6
  %loadMem_44094e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44094e = call %struct.Memory* @routine_movl_MINUS0x68c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44094e)
  store %struct.Memory* %call_44094e, %struct.Memory** %MEMORY

  ; Code: cmpl 0x7ae438, %eax	 RIP: 440954	 Bytes: 7
  %loadMem_440954 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440954 = call %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440954)
  store %struct.Memory* %call_440954, %struct.Memory** %MEMORY

  ; Code: setl %cl	 RIP: 44095b	 Bytes: 3
  %loadMem_44095b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44095b = call %struct.Memory* @routine_setl__cl(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44095b)
  store %struct.Memory* %call_44095b, %struct.Memory** %MEMORY

  ; Code: movb %cl, -0xdba(%rbp)	 RIP: 44095e	 Bytes: 6
  %loadMem_44095e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44095e = call %struct.Memory* @routine_movb__cl__MINUS0xdba__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44095e)
  store %struct.Memory* %call_44095e, %struct.Memory** %MEMORY

  ; Code: .L_440964:	 RIP: 440964	 Bytes: 0
  br label %block_.L_440964
block_.L_440964:

  ; Code: movb -0xdba(%rbp), %al	 RIP: 440964	 Bytes: 6
  %loadMem_440964 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440964 = call %struct.Memory* @routine_movb_MINUS0xdba__rbp____al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440964)
  store %struct.Memory* %call_440964, %struct.Memory** %MEMORY

  ; Code: testb $0x1, %al	 RIP: 44096a	 Bytes: 2
  %loadMem_44096a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44096a = call %struct.Memory* @routine_testb__0x1___al(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44096a)
  store %struct.Memory* %call_44096a, %struct.Memory** %MEMORY

  ; Code: jne .L_440977	 RIP: 44096c	 Bytes: 6
  %loadMem_44096c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44096c = call %struct.Memory* @routine_jne_.L_440977(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44096c, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_44096c, %struct.Memory** %MEMORY

  %loadBr_44096c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44096c = icmp eq i8 %loadBr_44096c, 1
  br i1 %cmpBr_44096c, label %block_.L_440977, label %block_440972

block_440972:
  ; Code: jmpq .L_440ad9	 RIP: 440972	 Bytes: 5
  %loadMem_440972 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440972 = call %struct.Memory* @routine_jmpq_.L_440ad9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440972, i64 359, i64 5)
  store %struct.Memory* %call_440972, %struct.Memory** %MEMORY

  br label %block_.L_440ad9

  ; Code: .L_440977:	 RIP: 440977	 Bytes: 0
block_.L_440977:

  ; Code: imull $0x14, -0x688(%rbp), %eax	 RIP: 440977	 Bytes: 7
  %loadMem_440977 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440977 = call %struct.Memory* @routine_imull__0x14__MINUS0x688__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440977)
  store %struct.Memory* %call_440977, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 44097e	 Bytes: 3
  %loadMem_44097e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44097e = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44097e)
  store %struct.Memory* %call_44097e, %struct.Memory** %MEMORY

  ; Code: addl -0x68c(%rbp), %eax	 RIP: 440981	 Bytes: 6
  %loadMem_440981 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440981 = call %struct.Memory* @routine_addl_MINUS0x68c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440981)
  store %struct.Memory* %call_440981, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6ec(%rbp)	 RIP: 440987	 Bytes: 6
  %loadMem_440987 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440987 = call %struct.Memory* @routine_movl__eax__MINUS0x6ec__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440987)
  store %struct.Memory* %call_440987, %struct.Memory** %MEMORY

  ; Code: movslq -0x6ec(%rbp), %rcx	 RIP: 44098d	 Bytes: 7
  %loadMem_44098d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44098d = call %struct.Memory* @routine_movslq_MINUS0x6ec__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44098d)
  store %struct.Memory* %call_44098d, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 440994	 Bytes: 8
  %loadMem_440994 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440994 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440994)
  store %struct.Memory* %call_440994, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 44099c	 Bytes: 3
  %loadMem_44099c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44099c = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44099c)
  store %struct.Memory* %call_44099c, %struct.Memory** %MEMORY

  ; Code: jne .L_440ac0	 RIP: 44099f	 Bytes: 6
  %loadMem_44099f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44099f = call %struct.Memory* @routine_jne_.L_440ac0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44099f, i8* %BRANCH_TAKEN, i64 289, i64 6, i64 6)
  store %struct.Memory* %call_44099f, %struct.Memory** %MEMORY

  %loadBr_44099f = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44099f = icmp eq i8 %loadBr_44099f, 1
  br i1 %cmpBr_44099f, label %block_.L_440ac0, label %block_4409a5

block_4409a5:
  ; Code: movslq -0x6ec(%rbp), %rax	 RIP: 4409a5	 Bytes: 7
  %loadMem_4409a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4409a5 = call %struct.Memory* @routine_movslq_MINUS0x6ec__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4409a5)
  store %struct.Memory* %call_4409a5, %struct.Memory** %MEMORY

  ; Code: cmpb $0x0, -0x680(%rbp,%rax,1)	 RIP: 4409ac	 Bytes: 8
  %loadMem_4409ac = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4409ac = call %struct.Memory* @routine_cmpb__0x0__MINUS0x680__rbp__rax_1_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4409ac)
  store %struct.Memory* %call_4409ac, %struct.Memory** %MEMORY

  ; Code: jne .L_440ac0	 RIP: 4409b4	 Bytes: 6
  %loadMem_4409b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4409b4 = call %struct.Memory* @routine_jne_.L_440ac0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4409b4, i8* %BRANCH_TAKEN, i64 268, i64 6, i64 6)
  store %struct.Memory* %call_4409b4, %struct.Memory** %MEMORY

  %loadBr_4409b4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4409b4 = icmp eq i8 %loadBr_4409b4, 1
  br i1 %cmpBr_4409b4, label %block_.L_440ac0, label %block_4409ba

block_4409ba:
  ; Code: movl -0x6ec(%rbp), %edi	 RIP: 4409ba	 Bytes: 6
  %loadMem_4409ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4409ba = call %struct.Memory* @routine_movl_MINUS0x6ec__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4409ba)
  store %struct.Memory* %call_4409ba, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rsi	 RIP: 4409c0	 Bytes: 4
  %loadMem_4409c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4409c0 = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4409c0)
  store %struct.Memory* %call_4409c0, %struct.Memory** %MEMORY

  ; Code: callq .liberty_of_goal	 RIP: 4409c4	 Bytes: 5
  %loadMem1_4409c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4409c4 = call %struct.Memory* @routine_callq_.liberty_of_goal(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4409c4, i64 13516, i64 5, i64 5)
  store %struct.Memory* %call1_4409c4, %struct.Memory** %MEMORY

  %loadMem2_4409c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4409c4 = load i64, i64* %3
  %call2_4409c4 = call %struct.Memory* @sub_443e90.liberty_of_goal(%struct.State* %0, i64  %loadPC_4409c4, %struct.Memory* %loadMem2_4409c4)
  store %struct.Memory* %call2_4409c4, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4409c9	 Bytes: 3
  %loadMem_4409c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4409c9 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4409c9)
  store %struct.Memory* %call_4409c9, %struct.Memory** %MEMORY

  ; Code: je .L_440abb	 RIP: 4409cc	 Bytes: 6
  %loadMem_4409cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4409cc = call %struct.Memory* @routine_je_.L_440abb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4409cc, i8* %BRANCH_TAKEN, i64 239, i64 6, i64 6)
  store %struct.Memory* %call_4409cc, %struct.Memory** %MEMORY

  %loadBr_4409cc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4409cc = icmp eq i8 %loadBr_4409cc, 1
  br i1 %cmpBr_4409cc, label %block_.L_440abb, label %block_4409d2

block_4409d2:
  ; Code: movl -0x6ec(%rbp), %edi	 RIP: 4409d2	 Bytes: 6
  %loadMem_4409d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4409d2 = call %struct.Memory* @routine_movl_MINUS0x6ec__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4409d2)
  store %struct.Memory* %call_4409d2, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rsi	 RIP: 4409d8	 Bytes: 4
  %loadMem_4409d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4409d8 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4409d8)
  store %struct.Memory* %call_4409d8, %struct.Memory** %MEMORY

  ; Code: callq .liberty_of_goal	 RIP: 4409dc	 Bytes: 5
  %loadMem1_4409dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4409dc = call %struct.Memory* @routine_callq_.liberty_of_goal(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4409dc, i64 13492, i64 5, i64 5)
  store %struct.Memory* %call1_4409dc, %struct.Memory** %MEMORY

  %loadMem2_4409dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4409dc = load i64, i64* %3
  %call2_4409dc = call %struct.Memory* @sub_443e90.liberty_of_goal(%struct.State* %0, i64  %loadPC_4409dc, %struct.Memory* %loadMem2_4409dc)
  store %struct.Memory* %call2_4409dc, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4409e1	 Bytes: 3
  %loadMem_4409e1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4409e1 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4409e1)
  store %struct.Memory* %call_4409e1, %struct.Memory** %MEMORY

  ; Code: jne .L_440a75	 RIP: 4409e4	 Bytes: 6
  %loadMem_4409e4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4409e4 = call %struct.Memory* @routine_jne_.L_440a75(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4409e4, i8* %BRANCH_TAKEN, i64 145, i64 6, i64 6)
  store %struct.Memory* %call_4409e4, %struct.Memory** %MEMORY

  %loadBr_4409e4 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4409e4 = icmp eq i8 %loadBr_4409e4, 1
  br i1 %cmpBr_4409e4, label %block_.L_440a75, label %block_4409ea

block_4409ea:
  ; Code: movl -0x6ec(%rbp), %edi	 RIP: 4409ea	 Bytes: 6
  %loadMem_4409ea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4409ea = call %struct.Memory* @routine_movl_MINUS0x6ec__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4409ea)
  store %struct.Memory* %call_4409ea, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %esi	 RIP: 4409f0	 Bytes: 3
  %loadMem_4409f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4409f0 = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4409f0)
  store %struct.Memory* %call_4409f0, %struct.Memory** %MEMORY

  ; Code: callq .safe_move	 RIP: 4409f3	 Bytes: 5
  %loadMem1_4409f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4409f3 = call %struct.Memory* @routine_callq_.safe_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4409f3, i64 176701, i64 5, i64 5)
  store %struct.Memory* %call1_4409f3, %struct.Memory** %MEMORY

  %loadMem2_4409f3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4409f3 = load i64, i64* %3
  %call2_4409f3 = call %struct.Memory* @sub_46bc30.safe_move(%struct.State* %0, i64  %loadPC_4409f3, %struct.Memory* %loadMem2_4409f3)
  store %struct.Memory* %call2_4409f3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4409f8	 Bytes: 3
  %loadMem_4409f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4409f8 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4409f8)
  store %struct.Memory* %call_4409f8, %struct.Memory** %MEMORY

  ; Code: je .L_440a1c	 RIP: 4409fb	 Bytes: 6
  %loadMem_4409fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4409fb = call %struct.Memory* @routine_je_.L_440a1c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4409fb, i8* %BRANCH_TAKEN, i64 33, i64 6, i64 6)
  store %struct.Memory* %call_4409fb, %struct.Memory** %MEMORY

  %loadBr_4409fb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4409fb = icmp eq i8 %loadBr_4409fb, 1
  br i1 %cmpBr_4409fb, label %block_.L_440a1c, label %block_440a01

block_440a01:
  ; Code: movl $0x1, -0x4d4(%rbp)	 RIP: 440a01	 Bytes: 10
  %loadMem_440a01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a01 = call %struct.Memory* @routine_movl__0x1__MINUS0x4d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a01)
  store %struct.Memory* %call_440a01, %struct.Memory** %MEMORY

  ; Code: movl -0x6ec(%rbp), %eax	 RIP: 440a0b	 Bytes: 6
  %loadMem_440a0b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a0b = call %struct.Memory* @routine_movl_MINUS0x6ec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a0b)
  store %struct.Memory* %call_440a0b, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x300(%rbp)	 RIP: 440a11	 Bytes: 6
  %loadMem_440a11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a11 = call %struct.Memory* @routine_movl__eax__MINUS0x300__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a11)
  store %struct.Memory* %call_440a11, %struct.Memory** %MEMORY

  ; Code: jmpq .L_440a70	 RIP: 440a17	 Bytes: 5
  %loadMem_440a17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a17 = call %struct.Memory* @routine_jmpq_.L_440a70(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a17, i64 89, i64 5)
  store %struct.Memory* %call_440a17, %struct.Memory** %MEMORY

  br label %block_.L_440a70

  ; Code: .L_440a1c:	 RIP: 440a1c	 Bytes: 0
block_.L_440a1c:

  ; Code: cmpl $0x0, -0x4d4(%rbp)	 RIP: 440a1c	 Bytes: 7
  %loadMem_440a1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a1c = call %struct.Memory* @routine_cmpl__0x0__MINUS0x4d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a1c)
  store %struct.Memory* %call_440a1c, %struct.Memory** %MEMORY

  ; Code: jne .L_440a6b	 RIP: 440a23	 Bytes: 6
  %loadMem_440a23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a23 = call %struct.Memory* @routine_jne_.L_440a6b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a23, i8* %BRANCH_TAKEN, i64 72, i64 6, i64 6)
  store %struct.Memory* %call_440a23, %struct.Memory** %MEMORY

  %loadBr_440a23 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440a23 = icmp eq i8 %loadBr_440a23, 1
  br i1 %cmpBr_440a23, label %block_.L_440a6b, label %block_440a29

block_440a29:
  ; Code: cmpl $0x0, -0x4e4(%rbp)	 RIP: 440a29	 Bytes: 7
  %loadMem_440a29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a29 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x4e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a29)
  store %struct.Memory* %call_440a29, %struct.Memory** %MEMORY

  ; Code: jne .L_440a66	 RIP: 440a30	 Bytes: 6
  %loadMem_440a30 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a30 = call %struct.Memory* @routine_jne_.L_440a66(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a30, i8* %BRANCH_TAKEN, i64 54, i64 6, i64 6)
  store %struct.Memory* %call_440a30, %struct.Memory** %MEMORY

  %loadBr_440a30 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440a30 = icmp eq i8 %loadBr_440a30, 1
  br i1 %cmpBr_440a30, label %block_.L_440a66, label %block_440a36

block_440a36:
  ; Code: movl -0x20(%rbp), %edi	 RIP: 440a36	 Bytes: 3
  %loadMem_440a36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a36 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a36)
  store %struct.Memory* %call_440a36, %struct.Memory** %MEMORY

  ; Code: movl -0x6ec(%rbp), %esi	 RIP: 440a39	 Bytes: 6
  %loadMem_440a39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a39 = call %struct.Memory* @routine_movl_MINUS0x6ec__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a39)
  store %struct.Memory* %call_440a39, %struct.Memory** %MEMORY

  ; Code: callq .find_semeai_backfilling_move	 RIP: 440a3f	 Bytes: 5
  %loadMem1_440a3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440a3f = call %struct.Memory* @routine_callq_.find_semeai_backfilling_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440a3f, i64 14929, i64 5, i64 5)
  store %struct.Memory* %call1_440a3f, %struct.Memory** %MEMORY

  %loadMem2_440a3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440a3f = load i64, i64* %3
  %call2_440a3f = call %struct.Memory* @sub_444490.find_semeai_backfilling_move(%struct.State* %0, i64  %loadPC_440a3f, %struct.Memory* %loadMem2_440a3f)
  store %struct.Memory* %call2_440a3f, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x340(%rbp)	 RIP: 440a44	 Bytes: 6
  %loadMem_440a44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a44 = call %struct.Memory* @routine_movl__eax__MINUS0x340__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a44)
  store %struct.Memory* %call_440a44, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x340(%rbp)	 RIP: 440a4a	 Bytes: 7
  %loadMem_440a4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a4a = call %struct.Memory* @routine_cmpl__0x0__MINUS0x340__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a4a)
  store %struct.Memory* %call_440a4a, %struct.Memory** %MEMORY

  ; Code: je .L_440a61	 RIP: 440a51	 Bytes: 6
  %loadMem_440a51 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a51 = call %struct.Memory* @routine_je_.L_440a61(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a51, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_440a51, %struct.Memory** %MEMORY

  %loadBr_440a51 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440a51 = icmp eq i8 %loadBr_440a51, 1
  br i1 %cmpBr_440a51, label %block_.L_440a61, label %block_440a57

block_440a57:
  ; Code: movl $0x1, -0x4e4(%rbp)	 RIP: 440a57	 Bytes: 10
  %loadMem_440a57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a57 = call %struct.Memory* @routine_movl__0x1__MINUS0x4e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a57)
  store %struct.Memory* %call_440a57, %struct.Memory** %MEMORY

  ; Code: .L_440a61:	 RIP: 440a61	 Bytes: 0
  br label %block_.L_440a61
block_.L_440a61:

  ; Code: jmpq .L_440a66	 RIP: 440a61	 Bytes: 5
  %loadMem_440a61 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a61 = call %struct.Memory* @routine_jmpq_.L_440a66(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a61, i64 5, i64 5)
  store %struct.Memory* %call_440a61, %struct.Memory** %MEMORY

  br label %block_.L_440a66

  ; Code: .L_440a66:	 RIP: 440a66	 Bytes: 0
block_.L_440a66:

  ; Code: jmpq .L_440a6b	 RIP: 440a66	 Bytes: 5
  %loadMem_440a66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a66 = call %struct.Memory* @routine_jmpq_.L_440a6b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a66, i64 5, i64 5)
  store %struct.Memory* %call_440a66, %struct.Memory** %MEMORY

  br label %block_.L_440a6b

  ; Code: .L_440a6b:	 RIP: 440a6b	 Bytes: 0
block_.L_440a6b:

  ; Code: jmpq .L_440a70	 RIP: 440a6b	 Bytes: 5
  %loadMem_440a6b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a6b = call %struct.Memory* @routine_jmpq_.L_440a70(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a6b, i64 5, i64 5)
  store %struct.Memory* %call_440a6b, %struct.Memory** %MEMORY

  br label %block_.L_440a70

  ; Code: .L_440a70:	 RIP: 440a70	 Bytes: 0
block_.L_440a70:

  ; Code: jmpq .L_440ab6	 RIP: 440a70	 Bytes: 5
  %loadMem_440a70 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a70 = call %struct.Memory* @routine_jmpq_.L_440ab6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a70, i64 70, i64 5)
  store %struct.Memory* %call_440a70, %struct.Memory** %MEMORY

  br label %block_.L_440ab6

  ; Code: .L_440a75:	 RIP: 440a75	 Bytes: 0
block_.L_440a75:

  ; Code: movl -0x6ec(%rbp), %edi	 RIP: 440a75	 Bytes: 6
  %loadMem_440a75 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a75 = call %struct.Memory* @routine_movl_MINUS0x6ec__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a75)
  store %struct.Memory* %call_440a75, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %esi	 RIP: 440a7b	 Bytes: 3
  %loadMem_440a7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a7b = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a7b)
  store %struct.Memory* %call_440a7b, %struct.Memory** %MEMORY

  ; Code: callq .safe_move	 RIP: 440a7e	 Bytes: 5
  %loadMem1_440a7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440a7e = call %struct.Memory* @routine_callq_.safe_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440a7e, i64 176562, i64 5, i64 5)
  store %struct.Memory* %call1_440a7e, %struct.Memory** %MEMORY

  %loadMem2_440a7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440a7e = load i64, i64* %3
  %call2_440a7e = call %struct.Memory* @sub_46bc30.safe_move(%struct.State* %0, i64  %loadPC_440a7e, %struct.Memory* %loadMem2_440a7e)
  store %struct.Memory* %call2_440a7e, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 440a83	 Bytes: 3
  %loadMem_440a83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a83 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a83)
  store %struct.Memory* %call_440a83, %struct.Memory** %MEMORY

  ; Code: je .L_440aa7	 RIP: 440a86	 Bytes: 6
  %loadMem_440a86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a86 = call %struct.Memory* @routine_je_.L_440aa7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a86, i8* %BRANCH_TAKEN, i64 33, i64 6, i64 6)
  store %struct.Memory* %call_440a86, %struct.Memory** %MEMORY

  %loadBr_440a86 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440a86 = icmp eq i8 %loadBr_440a86, 1
  br i1 %cmpBr_440a86, label %block_.L_440aa7, label %block_440a8c

block_440a8c:
  ; Code: movl $0x1, -0x4dc(%rbp)	 RIP: 440a8c	 Bytes: 10
  %loadMem_440a8c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a8c = call %struct.Memory* @routine_movl__0x1__MINUS0x4dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a8c)
  store %struct.Memory* %call_440a8c, %struct.Memory** %MEMORY

  ; Code: movl -0x6ec(%rbp), %eax	 RIP: 440a96	 Bytes: 6
  %loadMem_440a96 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a96 = call %struct.Memory* @routine_movl_MINUS0x6ec__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a96)
  store %struct.Memory* %call_440a96, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x320(%rbp)	 RIP: 440a9c	 Bytes: 6
  %loadMem_440a9c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440a9c = call %struct.Memory* @routine_movl__eax__MINUS0x320__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440a9c)
  store %struct.Memory* %call_440a9c, %struct.Memory** %MEMORY

  ; Code: jmpq .L_440ab1	 RIP: 440aa2	 Bytes: 5
  %loadMem_440aa2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440aa2 = call %struct.Memory* @routine_jmpq_.L_440ab1(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440aa2, i64 15, i64 5)
  store %struct.Memory* %call_440aa2, %struct.Memory** %MEMORY

  br label %block_.L_440ab1

  ; Code: .L_440aa7:	 RIP: 440aa7	 Bytes: 0
block_.L_440aa7:

  ; Code: movl $0x1, -0x4e0(%rbp)	 RIP: 440aa7	 Bytes: 10
  %loadMem_440aa7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440aa7 = call %struct.Memory* @routine_movl__0x1__MINUS0x4e0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440aa7)
  store %struct.Memory* %call_440aa7, %struct.Memory** %MEMORY

  ; Code: .L_440ab1:	 RIP: 440ab1	 Bytes: 0
  br label %block_.L_440ab1
block_.L_440ab1:

  ; Code: jmpq .L_440ab6	 RIP: 440ab1	 Bytes: 5
  %loadMem_440ab1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ab1 = call %struct.Memory* @routine_jmpq_.L_440ab6(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ab1, i64 5, i64 5)
  store %struct.Memory* %call_440ab1, %struct.Memory** %MEMORY

  br label %block_.L_440ab6

  ; Code: .L_440ab6:	 RIP: 440ab6	 Bytes: 0
block_.L_440ab6:

  ; Code: jmpq .L_440abb	 RIP: 440ab6	 Bytes: 5
  %loadMem_440ab6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ab6 = call %struct.Memory* @routine_jmpq_.L_440abb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ab6, i64 5, i64 5)
  store %struct.Memory* %call_440ab6, %struct.Memory** %MEMORY

  br label %block_.L_440abb

  ; Code: .L_440abb:	 RIP: 440abb	 Bytes: 0
block_.L_440abb:

  ; Code: jmpq .L_440ac0	 RIP: 440abb	 Bytes: 5
  %loadMem_440abb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440abb = call %struct.Memory* @routine_jmpq_.L_440ac0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440abb, i64 5, i64 5)
  store %struct.Memory* %call_440abb, %struct.Memory** %MEMORY

  br label %block_.L_440ac0

  ; Code: .L_440ac0:	 RIP: 440ac0	 Bytes: 0
block_.L_440ac0:

  ; Code: jmpq .L_440ac5	 RIP: 440ac0	 Bytes: 5
  %loadMem_440ac0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ac0 = call %struct.Memory* @routine_jmpq_.L_440ac5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ac0, i64 5, i64 5)
  store %struct.Memory* %call_440ac0, %struct.Memory** %MEMORY

  br label %block_.L_440ac5

  ; Code: .L_440ac5:	 RIP: 440ac5	 Bytes: 0
block_.L_440ac5:

  ; Code: movl -0x68c(%rbp), %eax	 RIP: 440ac5	 Bytes: 6
  %loadMem_440ac5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ac5 = call %struct.Memory* @routine_movl_MINUS0x68c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ac5)
  store %struct.Memory* %call_440ac5, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 440acb	 Bytes: 3
  %loadMem_440acb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440acb = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440acb)
  store %struct.Memory* %call_440acb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68c(%rbp)	 RIP: 440ace	 Bytes: 6
  %loadMem_440ace = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ace = call %struct.Memory* @routine_movl__eax__MINUS0x68c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ace)
  store %struct.Memory* %call_440ace, %struct.Memory** %MEMORY

  ; Code: jmpq .L_440937	 RIP: 440ad4	 Bytes: 5
  %loadMem_440ad4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ad4 = call %struct.Memory* @routine_jmpq_.L_440937(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ad4, i64 -413, i64 5)
  store %struct.Memory* %call_440ad4, %struct.Memory** %MEMORY

  br label %block_.L_440937

  ; Code: .L_440ad9:	 RIP: 440ad9	 Bytes: 0
block_.L_440ad9:

  ; Code: jmpq .L_440ade	 RIP: 440ad9	 Bytes: 5
  %loadMem_440ad9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ad9 = call %struct.Memory* @routine_jmpq_.L_440ade(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ad9, i64 5, i64 5)
  store %struct.Memory* %call_440ad9, %struct.Memory** %MEMORY

  br label %block_.L_440ade

  ; Code: .L_440ade:	 RIP: 440ade	 Bytes: 0
block_.L_440ade:

  ; Code: movl -0x688(%rbp), %eax	 RIP: 440ade	 Bytes: 6
  %loadMem_440ade = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ade = call %struct.Memory* @routine_movl_MINUS0x688__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ade)
  store %struct.Memory* %call_440ade, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 440ae4	 Bytes: 3
  %loadMem_440ae4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ae4 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ae4)
  store %struct.Memory* %call_440ae4, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x688(%rbp)	 RIP: 440ae7	 Bytes: 6
  %loadMem_440ae7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ae7 = call %struct.Memory* @routine_movl__eax__MINUS0x688__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ae7)
  store %struct.Memory* %call_440ae7, %struct.Memory** %MEMORY

  ; Code: jmpq .L_4408ed	 RIP: 440aed	 Bytes: 5
  %loadMem_440aed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440aed = call %struct.Memory* @routine_jmpq_.L_4408ed(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440aed, i64 -512, i64 5)
  store %struct.Memory* %call_440aed, %struct.Memory** %MEMORY

  br label %block_.L_4408ed

  ; Code: .L_440af2:	 RIP: 440af2	 Bytes: 0
block_.L_440af2:

  ; Code: jmpq .L_440af7	 RIP: 440af2	 Bytes: 5
  %loadMem_440af2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440af2 = call %struct.Memory* @routine_jmpq_.L_440af7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440af2, i64 5, i64 5)
  store %struct.Memory* %call_440af2, %struct.Memory** %MEMORY

  br label %block_.L_440af7

  ; Code: .L_440af7:	 RIP: 440af7	 Bytes: 0
block_.L_440af7:

  ; Code: xorl %esi, %esi	 RIP: 440af7	 Bytes: 2
  %loadMem_440af7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440af7 = call %struct.Memory* @routine_xorl__esi___esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440af7)
  store %struct.Memory* %call_440af7, %struct.Memory** %MEMORY

  ; Code: movl $0x640, %eax	 RIP: 440af9	 Bytes: 5
  %loadMem_440af9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440af9 = call %struct.Memory* @routine_movl__0x640___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440af9)
  store %struct.Memory* %call_440af9, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 440afe	 Bytes: 2
  %loadMem_440afe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440afe = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440afe)
  store %struct.Memory* %call_440afe, %struct.Memory** %MEMORY

  ; Code: leaq -0xd30(%rbp), %rcx	 RIP: 440b00	 Bytes: 7
  %loadMem_440b00 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b00 = call %struct.Memory* @routine_leaq_MINUS0xd30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b00)
  store %struct.Memory* %call_440b00, %struct.Memory** %MEMORY

  ; Code: movq %rcx, %rdi	 RIP: 440b07	 Bytes: 3
  %loadMem_440b07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b07 = call %struct.Memory* @routine_movq__rcx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b07)
  store %struct.Memory* %call_440b07, %struct.Memory** %MEMORY

  ; Code: callq .memset_plt	 RIP: 440b0a	 Bytes: 5
  %loadMem1_440b0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440b0a = call %struct.Memory* @routine_callq_.memset_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440b0a, i64 -260762, i64 5, i64 5)
  store %struct.Memory* %call1_440b0a, %struct.Memory** %MEMORY

  %loadMem2_440b0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440b0a = load i64, i64* %3
  %call2_440b0a = call %struct.Memory* @ext_memset(%struct.State* %0, i64  %loadPC_440b0a, %struct.Memory* %loadMem2_440b0a)
  store %struct.Memory* %call2_440b0a, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x688(%rbp)	 RIP: 440b0f	 Bytes: 10
  %loadMem_440b0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b0f = call %struct.Memory* @routine_movl__0x0__MINUS0x688__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b0f)
  store %struct.Memory* %call_440b0f, %struct.Memory** %MEMORY

  ; Code: .L_440b19:	 RIP: 440b19	 Bytes: 0
  br label %block_.L_440b19
block_.L_440b19:

  ; Code: movl -0x688(%rbp), %eax	 RIP: 440b19	 Bytes: 6
  %loadMem_440b19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b19 = call %struct.Memory* @routine_movl_MINUS0x688__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b19)
  store %struct.Memory* %call_440b19, %struct.Memory** %MEMORY

  ; Code: cmpl 0x7ae438, %eax	 RIP: 440b1f	 Bytes: 7
  %loadMem_440b1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b1f = call %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b1f)
  store %struct.Memory* %call_440b1f, %struct.Memory** %MEMORY

  ; Code: jge .L_440e12	 RIP: 440b26	 Bytes: 6
  %loadMem_440b26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b26 = call %struct.Memory* @routine_jge_.L_440e12(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b26, i8* %BRANCH_TAKEN, i64 748, i64 6, i64 6)
  store %struct.Memory* %call_440b26, %struct.Memory** %MEMORY

  %loadBr_440b26 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440b26 = icmp eq i8 %loadBr_440b26, 1
  br i1 %cmpBr_440b26, label %block_.L_440e12, label %block_440b2c

block_440b2c:
  ; Code: movl $0x0, -0x68c(%rbp)	 RIP: 440b2c	 Bytes: 10
  %loadMem_440b2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b2c = call %struct.Memory* @routine_movl__0x0__MINUS0x68c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b2c)
  store %struct.Memory* %call_440b2c, %struct.Memory** %MEMORY

  ; Code: .L_440b36:	 RIP: 440b36	 Bytes: 0
  br label %block_.L_440b36
block_.L_440b36:

  ; Code: movl -0x68c(%rbp), %eax	 RIP: 440b36	 Bytes: 6
  %loadMem_440b36 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b36 = call %struct.Memory* @routine_movl_MINUS0x68c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b36)
  store %struct.Memory* %call_440b36, %struct.Memory** %MEMORY

  ; Code: cmpl 0x7ae438, %eax	 RIP: 440b3c	 Bytes: 7
  %loadMem_440b3c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b3c = call %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b3c)
  store %struct.Memory* %call_440b3c, %struct.Memory** %MEMORY

  ; Code: jge .L_440df9	 RIP: 440b43	 Bytes: 6
  %loadMem_440b43 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b43 = call %struct.Memory* @routine_jge_.L_440df9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b43, i8* %BRANCH_TAKEN, i64 694, i64 6, i64 6)
  store %struct.Memory* %call_440b43, %struct.Memory** %MEMORY

  %loadBr_440b43 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440b43 = icmp eq i8 %loadBr_440b43, 1
  br i1 %cmpBr_440b43, label %block_.L_440df9, label %block_440b49

block_440b49:
  ; Code: imull $0x14, -0x688(%rbp), %eax	 RIP: 440b49	 Bytes: 7
  %loadMem_440b49 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b49 = call %struct.Memory* @routine_imull__0x14__MINUS0x688__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b49)
  store %struct.Memory* %call_440b49, %struct.Memory** %MEMORY

  ; Code: addl $0x15, %eax	 RIP: 440b50	 Bytes: 3
  %loadMem_440b50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b50 = call %struct.Memory* @routine_addl__0x15___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b50)
  store %struct.Memory* %call_440b50, %struct.Memory** %MEMORY

  ; Code: addl -0x68c(%rbp), %eax	 RIP: 440b53	 Bytes: 6
  %loadMem_440b53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b53 = call %struct.Memory* @routine_addl_MINUS0x68c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b53)
  store %struct.Memory* %call_440b53, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd3c(%rbp)	 RIP: 440b59	 Bytes: 6
  %loadMem_440b59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b59 = call %struct.Memory* @routine_movl__eax__MINUS0xd3c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b59)
  store %struct.Memory* %call_440b59, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rcx	 RIP: 440b5f	 Bytes: 4
  %loadMem_440b5f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b5f = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b5f)
  store %struct.Memory* %call_440b5f, %struct.Memory** %MEMORY

  ; Code: movslq -0xd3c(%rbp), %rdx	 RIP: 440b63	 Bytes: 7
  %loadMem_440b63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b63 = call %struct.Memory* @routine_movslq_MINUS0xd3c__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b63)
  store %struct.Memory* %call_440b63, %struct.Memory** %MEMORY

  ; Code: movsbl (%rcx,%rdx,1), %eax	 RIP: 440b6a	 Bytes: 4
  %loadMem_440b6a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b6a = call %struct.Memory* @routine_movsbl___rcx__rdx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b6a)
  store %struct.Memory* %call_440b6a, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 440b6e	 Bytes: 3
  %loadMem_440b6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b6e = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b6e)
  store %struct.Memory* %call_440b6e, %struct.Memory** %MEMORY

  ; Code: je .L_440de0	 RIP: 440b71	 Bytes: 6
  %loadMem_440b71 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b71 = call %struct.Memory* @routine_je_.L_440de0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b71, i8* %BRANCH_TAKEN, i64 623, i64 6, i64 6)
  store %struct.Memory* %call_440b71, %struct.Memory** %MEMORY

  %loadBr_440b71 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440b71 = icmp eq i8 %loadBr_440b71, 1
  br i1 %cmpBr_440b71, label %block_.L_440de0, label %block_440b77

block_440b77:
  ; Code: movslq -0xd3c(%rbp), %rax	 RIP: 440b77	 Bytes: 7
  %loadMem_440b77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b77 = call %struct.Memory* @routine_movslq_MINUS0xd3c__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b77)
  store %struct.Memory* %call_440b77, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 440b7e	 Bytes: 8
  %loadMem_440b7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b7e = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b7e)
  store %struct.Memory* %call_440b7e, %struct.Memory** %MEMORY

  ; Code: cmpl -0x60(%rbp), %ecx	 RIP: 440b86	 Bytes: 3
  %loadMem_440b86 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b86 = call %struct.Memory* @routine_cmpl_MINUS0x60__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b86)
  store %struct.Memory* %call_440b86, %struct.Memory** %MEMORY

  ; Code: jne .L_440de0	 RIP: 440b89	 Bytes: 6
  %loadMem_440b89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b89 = call %struct.Memory* @routine_jne_.L_440de0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b89, i8* %BRANCH_TAKEN, i64 599, i64 6, i64 6)
  store %struct.Memory* %call_440b89, %struct.Memory** %MEMORY

  %loadBr_440b89 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440b89 = icmp eq i8 %loadBr_440b89, 1
  br i1 %cmpBr_440b89, label %block_.L_440de0, label %block_440b8f

block_440b8f:
  ; Code: movl -0xd3c(%rbp), %edi	 RIP: 440b8f	 Bytes: 6
  %loadMem_440b8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b8f = call %struct.Memory* @routine_movl_MINUS0xd3c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b8f)
  store %struct.Memory* %call_440b8f, %struct.Memory** %MEMORY

  ; Code: callq .find_origin	 RIP: 440b95	 Bytes: 5
  %loadMem1_440b95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440b95 = call %struct.Memory* @routine_callq_.find_origin(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440b95, i64 -182709, i64 5, i64 5)
  store %struct.Memory* %call1_440b95, %struct.Memory** %MEMORY

  %loadMem2_440b95 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440b95 = load i64, i64* %3
  %call2_440b95 = call %struct.Memory* @sub_4141e0.find_origin(%struct.State* %0, i64  %loadPC_440b95, %struct.Memory* %loadMem2_440b95)
  store %struct.Memory* %call2_440b95, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xd34(%rbp)	 RIP: 440b9a	 Bytes: 6
  %loadMem_440b9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440b9a = call %struct.Memory* @routine_movl__eax__MINUS0xd34__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440b9a)
  store %struct.Memory* %call_440b9a, %struct.Memory** %MEMORY

  ; Code: movslq -0xd34(%rbp), %rcx	 RIP: 440ba0	 Bytes: 7
  %loadMem_440ba0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ba0 = call %struct.Memory* @routine_movslq_MINUS0xd34__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ba0)
  store %struct.Memory* %call_440ba0, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0xd30(%rbp,%rcx,4)	 RIP: 440ba7	 Bytes: 8
  %loadMem_440ba7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ba7 = call %struct.Memory* @routine_cmpl__0x0__MINUS0xd30__rbp__rcx_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ba7)
  store %struct.Memory* %call_440ba7, %struct.Memory** %MEMORY

  ; Code: jne .L_440ddb	 RIP: 440baf	 Bytes: 6
  %loadMem_440baf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440baf = call %struct.Memory* @routine_jne_.L_440ddb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440baf, i8* %BRANCH_TAKEN, i64 556, i64 6, i64 6)
  store %struct.Memory* %call_440baf, %struct.Memory** %MEMORY

  %loadBr_440baf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440baf = icmp eq i8 %loadBr_440baf, 1
  br i1 %cmpBr_440baf, label %block_.L_440ddb, label %block_440bb5

block_440bb5:
  ; Code: movl -0xd3c(%rbp), %eax	 RIP: 440bb5	 Bytes: 6
  %loadMem_440bb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440bb5 = call %struct.Memory* @routine_movl_MINUS0xd3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440bb5)
  store %struct.Memory* %call_440bb5, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %eax	 RIP: 440bbb	 Bytes: 3
  %loadMem_440bbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440bbb = call %struct.Memory* @routine_addl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440bbb)
  store %struct.Memory* %call_440bbb, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 440bbe	 Bytes: 3
  %loadMem_440bbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440bbe = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440bbe)
  store %struct.Memory* %call_440bbe, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 440bc1	 Bytes: 8
  %loadMem_440bc1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440bc1 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440bc1)
  store %struct.Memory* %call_440bc1, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 440bc9	 Bytes: 3
  %loadMem_440bc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440bc9 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440bc9)
  store %struct.Memory* %call_440bc9, %struct.Memory** %MEMORY

  ; Code: je .L_440bef	 RIP: 440bcc	 Bytes: 6
  %loadMem_440bcc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440bcc = call %struct.Memory* @routine_je_.L_440bef(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440bcc, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_440bcc, %struct.Memory** %MEMORY

  %loadBr_440bcc = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440bcc = icmp eq i8 %loadBr_440bcc, 1
  br i1 %cmpBr_440bcc, label %block_.L_440bef, label %block_440bd2

block_440bd2:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 440bd2	 Bytes: 4
  %loadMem_440bd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440bd2 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440bd2)
  store %struct.Memory* %call_440bd2, %struct.Memory** %MEMORY

  ; Code: movl -0xd3c(%rbp), %ecx	 RIP: 440bd6	 Bytes: 6
  %loadMem_440bd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440bd6 = call %struct.Memory* @routine_movl_MINUS0xd3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440bd6)
  store %struct.Memory* %call_440bd6, %struct.Memory** %MEMORY

  ; Code: addl $0x14, %ecx	 RIP: 440bdc	 Bytes: 3
  %loadMem_440bdc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440bdc = call %struct.Memory* @routine_addl__0x14___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440bdc)
  store %struct.Memory* %call_440bdc, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 440bdf	 Bytes: 3
  %loadMem_440bdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440bdf = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440bdf)
  store %struct.Memory* %call_440bdf, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax,%rdx,1), %ecx	 RIP: 440be2	 Bytes: 4
  %loadMem_440be2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440be2 = call %struct.Memory* @routine_movsbl___rax__rdx_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440be2)
  store %struct.Memory* %call_440be2, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 440be6	 Bytes: 3
  %loadMem_440be6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440be6 = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440be6)
  store %struct.Memory* %call_440be6, %struct.Memory** %MEMORY

  ; Code: jne .L_440c9d	 RIP: 440be9	 Bytes: 6
  %loadMem_440be9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440be9 = call %struct.Memory* @routine_jne_.L_440c9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440be9, i8* %BRANCH_TAKEN, i64 180, i64 6, i64 6)
  store %struct.Memory* %call_440be9, %struct.Memory** %MEMORY

  %loadBr_440be9 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440be9 = icmp eq i8 %loadBr_440be9, 1
  br i1 %cmpBr_440be9, label %block_.L_440c9d, label %block_.L_440bef

  ; Code: .L_440bef:	 RIP: 440bef	 Bytes: 0
block_.L_440bef:

  ; Code: movl -0xd3c(%rbp), %eax	 RIP: 440bef	 Bytes: 6
  %loadMem_440bef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440bef = call %struct.Memory* @routine_movl_MINUS0xd3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440bef)
  store %struct.Memory* %call_440bef, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %eax	 RIP: 440bf5	 Bytes: 3
  %loadMem_440bf5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440bf5 = call %struct.Memory* @routine_subl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440bf5)
  store %struct.Memory* %call_440bf5, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 440bf8	 Bytes: 3
  %loadMem_440bf8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440bf8 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440bf8)
  store %struct.Memory* %call_440bf8, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 440bfb	 Bytes: 8
  %loadMem_440bfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440bfb = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440bfb)
  store %struct.Memory* %call_440bfb, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 440c03	 Bytes: 3
  %loadMem_440c03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c03 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c03)
  store %struct.Memory* %call_440c03, %struct.Memory** %MEMORY

  ; Code: je .L_440c29	 RIP: 440c06	 Bytes: 6
  %loadMem_440c06 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c06 = call %struct.Memory* @routine_je_.L_440c29(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c06, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_440c06, %struct.Memory** %MEMORY

  %loadBr_440c06 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440c06 = icmp eq i8 %loadBr_440c06, 1
  br i1 %cmpBr_440c06, label %block_.L_440c29, label %block_440c0c

block_440c0c:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 440c0c	 Bytes: 4
  %loadMem_440c0c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c0c = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c0c)
  store %struct.Memory* %call_440c0c, %struct.Memory** %MEMORY

  ; Code: movl -0xd3c(%rbp), %ecx	 RIP: 440c10	 Bytes: 6
  %loadMem_440c10 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c10 = call %struct.Memory* @routine_movl_MINUS0xd3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c10)
  store %struct.Memory* %call_440c10, %struct.Memory** %MEMORY

  ; Code: subl $0x1, %ecx	 RIP: 440c16	 Bytes: 3
  %loadMem_440c16 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c16 = call %struct.Memory* @routine_subl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c16)
  store %struct.Memory* %call_440c16, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 440c19	 Bytes: 3
  %loadMem_440c19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c19 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c19)
  store %struct.Memory* %call_440c19, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax,%rdx,1), %ecx	 RIP: 440c1c	 Bytes: 4
  %loadMem_440c1c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c1c = call %struct.Memory* @routine_movsbl___rax__rdx_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c1c)
  store %struct.Memory* %call_440c1c, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 440c20	 Bytes: 3
  %loadMem_440c20 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c20 = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c20)
  store %struct.Memory* %call_440c20, %struct.Memory** %MEMORY

  ; Code: jne .L_440c9d	 RIP: 440c23	 Bytes: 6
  %loadMem_440c23 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c23 = call %struct.Memory* @routine_jne_.L_440c9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c23, i8* %BRANCH_TAKEN, i64 122, i64 6, i64 6)
  store %struct.Memory* %call_440c23, %struct.Memory** %MEMORY

  %loadBr_440c23 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440c23 = icmp eq i8 %loadBr_440c23, 1
  br i1 %cmpBr_440c23, label %block_.L_440c9d, label %block_.L_440c29

  ; Code: .L_440c29:	 RIP: 440c29	 Bytes: 0
block_.L_440c29:

  ; Code: movl -0xd3c(%rbp), %eax	 RIP: 440c29	 Bytes: 6
  %loadMem_440c29 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c29 = call %struct.Memory* @routine_movl_MINUS0xd3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c29)
  store %struct.Memory* %call_440c29, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %eax	 RIP: 440c2f	 Bytes: 3
  %loadMem_440c2f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c2f = call %struct.Memory* @routine_subl__0x14___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c2f)
  store %struct.Memory* %call_440c2f, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 440c32	 Bytes: 3
  %loadMem_440c32 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c32 = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c32)
  store %struct.Memory* %call_440c32, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 440c35	 Bytes: 8
  %loadMem_440c35 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c35 = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c35)
  store %struct.Memory* %call_440c35, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 440c3d	 Bytes: 3
  %loadMem_440c3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c3d = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c3d)
  store %struct.Memory* %call_440c3d, %struct.Memory** %MEMORY

  ; Code: je .L_440c63	 RIP: 440c40	 Bytes: 6
  %loadMem_440c40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c40 = call %struct.Memory* @routine_je_.L_440c63(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c40, i8* %BRANCH_TAKEN, i64 35, i64 6, i64 6)
  store %struct.Memory* %call_440c40, %struct.Memory** %MEMORY

  %loadBr_440c40 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440c40 = icmp eq i8 %loadBr_440c40, 1
  br i1 %cmpBr_440c40, label %block_.L_440c63, label %block_440c46

block_440c46:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 440c46	 Bytes: 4
  %loadMem_440c46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c46 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c46)
  store %struct.Memory* %call_440c46, %struct.Memory** %MEMORY

  ; Code: movl -0xd3c(%rbp), %ecx	 RIP: 440c4a	 Bytes: 6
  %loadMem_440c4a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c4a = call %struct.Memory* @routine_movl_MINUS0xd3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c4a)
  store %struct.Memory* %call_440c4a, %struct.Memory** %MEMORY

  ; Code: subl $0x14, %ecx	 RIP: 440c50	 Bytes: 3
  %loadMem_440c50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c50 = call %struct.Memory* @routine_subl__0x14___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c50)
  store %struct.Memory* %call_440c50, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 440c53	 Bytes: 3
  %loadMem_440c53 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c53 = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c53)
  store %struct.Memory* %call_440c53, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax,%rdx,1), %ecx	 RIP: 440c56	 Bytes: 4
  %loadMem_440c56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c56 = call %struct.Memory* @routine_movsbl___rax__rdx_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c56)
  store %struct.Memory* %call_440c56, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 440c5a	 Bytes: 3
  %loadMem_440c5a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c5a = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c5a)
  store %struct.Memory* %call_440c5a, %struct.Memory** %MEMORY

  ; Code: jne .L_440c9d	 RIP: 440c5d	 Bytes: 6
  %loadMem_440c5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c5d = call %struct.Memory* @routine_jne_.L_440c9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c5d, i8* %BRANCH_TAKEN, i64 64, i64 6, i64 6)
  store %struct.Memory* %call_440c5d, %struct.Memory** %MEMORY

  %loadBr_440c5d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440c5d = icmp eq i8 %loadBr_440c5d, 1
  br i1 %cmpBr_440c5d, label %block_.L_440c9d, label %block_.L_440c63

  ; Code: .L_440c63:	 RIP: 440c63	 Bytes: 0
block_.L_440c63:

  ; Code: movl -0xd3c(%rbp), %eax	 RIP: 440c63	 Bytes: 6
  %loadMem_440c63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c63 = call %struct.Memory* @routine_movl_MINUS0xd3c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c63)
  store %struct.Memory* %call_440c63, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 440c69	 Bytes: 3
  %loadMem_440c69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c69 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c69)
  store %struct.Memory* %call_440c69, %struct.Memory** %MEMORY

  ; Code: movslq %eax, %rcx	 RIP: 440c6c	 Bytes: 3
  %loadMem_440c6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c6c = call %struct.Memory* @routine_movslq__eax___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c6c)
  store %struct.Memory* %call_440c6c, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rcx,1), %eax	 RIP: 440c6f	 Bytes: 8
  %loadMem_440c6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c6f = call %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c6f)
  store %struct.Memory* %call_440c6f, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 440c77	 Bytes: 3
  %loadMem_440c77 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c77 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c77)
  store %struct.Memory* %call_440c77, %struct.Memory** %MEMORY

  ; Code: je .L_440ddb	 RIP: 440c7a	 Bytes: 6
  %loadMem_440c7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c7a = call %struct.Memory* @routine_je_.L_440ddb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c7a, i8* %BRANCH_TAKEN, i64 353, i64 6, i64 6)
  store %struct.Memory* %call_440c7a, %struct.Memory** %MEMORY

  %loadBr_440c7a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440c7a = icmp eq i8 %loadBr_440c7a, 1
  br i1 %cmpBr_440c7a, label %block_.L_440ddb, label %block_440c80

block_440c80:
  ; Code: movq -0x28(%rbp), %rax	 RIP: 440c80	 Bytes: 4
  %loadMem_440c80 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c80 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c80)
  store %struct.Memory* %call_440c80, %struct.Memory** %MEMORY

  ; Code: movl -0xd3c(%rbp), %ecx	 RIP: 440c84	 Bytes: 6
  %loadMem_440c84 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c84 = call %struct.Memory* @routine_movl_MINUS0xd3c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c84)
  store %struct.Memory* %call_440c84, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %ecx	 RIP: 440c8a	 Bytes: 3
  %loadMem_440c8a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c8a = call %struct.Memory* @routine_addl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c8a)
  store %struct.Memory* %call_440c8a, %struct.Memory** %MEMORY

  ; Code: movslq %ecx, %rdx	 RIP: 440c8d	 Bytes: 3
  %loadMem_440c8d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c8d = call %struct.Memory* @routine_movslq__ecx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c8d)
  store %struct.Memory* %call_440c8d, %struct.Memory** %MEMORY

  ; Code: movsbl (%rax,%rdx,1), %ecx	 RIP: 440c90	 Bytes: 4
  %loadMem_440c90 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c90 = call %struct.Memory* @routine_movsbl___rax__rdx_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c90)
  store %struct.Memory* %call_440c90, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 440c94	 Bytes: 3
  %loadMem_440c94 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c94 = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c94)
  store %struct.Memory* %call_440c94, %struct.Memory** %MEMORY

  ; Code: je .L_440ddb	 RIP: 440c97	 Bytes: 6
  %loadMem_440c97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c97 = call %struct.Memory* @routine_je_.L_440ddb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c97, i8* %BRANCH_TAKEN, i64 324, i64 6, i64 6)
  store %struct.Memory* %call_440c97, %struct.Memory** %MEMORY

  %loadBr_440c97 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440c97 = icmp eq i8 %loadBr_440c97, 1
  br i1 %cmpBr_440c97, label %block_.L_440ddb, label %block_.L_440c9d

  ; Code: .L_440c9d:	 RIP: 440c9d	 Bytes: 0
block_.L_440c9d:

  ; Code: movl -0xd34(%rbp), %edi	 RIP: 440c9d	 Bytes: 6
  %loadMem_440c9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440c9d = call %struct.Memory* @routine_movl_MINUS0xd34__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440c9d)
  store %struct.Memory* %call_440c9d, %struct.Memory** %MEMORY

  ; Code: callq .countlib	 RIP: 440ca3	 Bytes: 5
  %loadMem1_440ca3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440ca3 = call %struct.Memory* @routine_callq_.countlib(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440ca3, i64 -202019, i64 5, i64 5)
  store %struct.Memory* %call1_440ca3, %struct.Memory** %MEMORY

  %loadMem2_440ca3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440ca3 = load i64, i64* %3
  %call2_440ca3 = call %struct.Memory* @sub_40f780.countlib(%struct.State* %0, i64  %loadPC_440ca3, %struct.Memory* %loadMem2_440ca3)
  store %struct.Memory* %call2_440ca3, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, %eax	 RIP: 440ca8	 Bytes: 3
  %loadMem_440ca8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ca8 = call %struct.Memory* @routine_cmpl__0x3___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ca8)
  store %struct.Memory* %call_440ca8, %struct.Memory** %MEMORY

  ; Code: jge .L_440dc4	 RIP: 440cab	 Bytes: 6
  %loadMem_440cab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440cab = call %struct.Memory* @routine_jge_.L_440dc4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440cab, i8* %BRANCH_TAKEN, i64 281, i64 6, i64 6)
  store %struct.Memory* %call_440cab, %struct.Memory** %MEMORY

  %loadBr_440cab = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440cab = icmp eq i8 %loadBr_440cab, 1
  br i1 %cmpBr_440cab, label %block_.L_440dc4, label %block_440cb1

block_440cb1:
  ; Code: leaq -0xd38(%rbp), %rsi	 RIP: 440cb1	 Bytes: 7
  %loadMem_440cb1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440cb1 = call %struct.Memory* @routine_leaq_MINUS0xd38__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440cb1)
  store %struct.Memory* %call_440cb1, %struct.Memory** %MEMORY

  ; Code: movl -0xd34(%rbp), %edi	 RIP: 440cb8	 Bytes: 6
  %loadMem_440cb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440cb8 = call %struct.Memory* @routine_movl_MINUS0xd34__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440cb8)
  store %struct.Memory* %call_440cb8, %struct.Memory** %MEMORY

  ; Code: callq .attack	 RIP: 440cbe	 Bytes: 5
  %loadMem1_440cbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440cbe = call %struct.Memory* @routine_callq_.attack(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440cbe, i64 118402, i64 5, i64 5)
  store %struct.Memory* %call1_440cbe, %struct.Memory** %MEMORY

  %loadMem2_440cbe = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440cbe = load i64, i64* %3
  %call2_440cbe = call %struct.Memory* @sub_45db40.attack(%struct.State* %0, i64  %loadPC_440cbe, %struct.Memory* %loadMem2_440cbe)
  store %struct.Memory* %call2_440cbe, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 440cc3	 Bytes: 3
  %loadMem_440cc3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440cc3 = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440cc3)
  store %struct.Memory* %call_440cc3, %struct.Memory** %MEMORY

  ; Code: je .L_440dc4	 RIP: 440cc6	 Bytes: 6
  %loadMem_440cc6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440cc6 = call %struct.Memory* @routine_je_.L_440dc4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440cc6, i8* %BRANCH_TAKEN, i64 254, i64 6, i64 6)
  store %struct.Memory* %call_440cc6, %struct.Memory** %MEMORY

  %loadBr_440cc6 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440cc6 = icmp eq i8 %loadBr_440cc6, 1
  br i1 %cmpBr_440cc6, label %block_.L_440dc4, label %block_440ccc

block_440ccc:
  ; Code: movq -0x40(%rbp), %rax	 RIP: 440ccc	 Bytes: 4
  %loadMem_440ccc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ccc = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ccc)
  store %struct.Memory* %call_440ccc, %struct.Memory** %MEMORY

  ; Code: movl $0x1, (%rax)	 RIP: 440cd0	 Bytes: 6
  %loadMem_440cd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440cd0 = call %struct.Memory* @routine_movl__0x1____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440cd0)
  store %struct.Memory* %call_440cd0, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rax	 RIP: 440cd6	 Bytes: 4
  %loadMem_440cd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440cd6 = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440cd6)
  store %struct.Memory* %call_440cd6, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 440cda	 Bytes: 6
  %loadMem_440cda = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440cda = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440cda)
  store %struct.Memory* %call_440cda, %struct.Memory** %MEMORY

  ; Code: movl -0xd38(%rbp), %ecx	 RIP: 440ce0	 Bytes: 6
  %loadMem_440ce0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ce0 = call %struct.Memory* @routine_movl_MINUS0xd38__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ce0)
  store %struct.Memory* %call_440ce0, %struct.Memory** %MEMORY

  ; Code: movq -0x50(%rbp), %rax	 RIP: 440ce6	 Bytes: 4
  %loadMem_440ce6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ce6 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ce6)
  store %struct.Memory* %call_440ce6, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rax)	 RIP: 440cea	 Bytes: 2
  %loadMem_440cea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440cea = call %struct.Memory* @routine_movl__ecx____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440cea)
  store %struct.Memory* %call_440cea, %struct.Memory** %MEMORY

  ; Code: movq -0x698(%rbp), %rax	 RIP: 440cec	 Bytes: 7
  %loadMem_440cec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440cec = call %struct.Memory* @routine_movq_MINUS0x698__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440cec)
  store %struct.Memory* %call_440cec, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0xab0ef8	 RIP: 440cf3	 Bytes: 8
  %loadMem_440cf3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440cf3 = call %struct.Memory* @routine_movq__rax__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440cf3)
  store %struct.Memory* %call_440cf3, %struct.Memory** %MEMORY

  ; Code: movl -0x69c(%rbp), %ecx	 RIP: 440cfb	 Bytes: 6
  %loadMem_440cfb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440cfb = call %struct.Memory* @routine_movl_MINUS0x69c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440cfb)
  store %struct.Memory* %call_440cfb, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0xab0eec	 RIP: 440d01	 Bytes: 7
  %loadMem_440d01 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d01 = call %struct.Memory* @routine_movl__ecx__0xab0eec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d01)
  store %struct.Memory* %call_440d01, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, 0xab0ef8	 RIP: 440d08	 Bytes: 9
  %loadMem_440d08 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d08 = call %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d08)
  store %struct.Memory* %call_440d08, %struct.Memory** %MEMORY

  ; Code: je .L_440d45	 RIP: 440d11	 Bytes: 6
  %loadMem_440d11 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d11 = call %struct.Memory* @routine_je_.L_440d45(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d11, i8* %BRANCH_TAKEN, i64 52, i64 6, i64 6)
  store %struct.Memory* %call_440d11, %struct.Memory** %MEMORY

  %loadBr_440d11 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440d11 = icmp eq i8 %loadBr_440d11, 1
  br i1 %cmpBr_440d11, label %block_.L_440d45, label %block_440d17

block_440d17:
  ; Code: movl $0x1, %r8d	 RIP: 440d17	 Bytes: 6
  %loadMem_440d17 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d17 = call %struct.Memory* @routine_movl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d17)
  store %struct.Memory* %call_440d17, %struct.Memory** %MEMORY

  ; Code: movq $0x57df94, %r9	 RIP: 440d1d	 Bytes: 10
  %loadMem_440d1d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d1d = call %struct.Memory* @routine_movq__0x57df94___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d1d)
  store %struct.Memory* %call_440d1d, %struct.Memory** %MEMORY

  ; Code: movq -0x6d0(%rbp), %rdi	 RIP: 440d27	 Bytes: 7
  %loadMem_440d27 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d27 = call %struct.Memory* @routine_movq_MINUS0x6d0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d27)
  store %struct.Memory* %call_440d27, %struct.Memory** %MEMORY

  ; Code: movl -0x6d4(%rbp), %esi	 RIP: 440d2e	 Bytes: 6
  %loadMem_440d2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d2e = call %struct.Memory* @routine_movl_MINUS0x6d4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d2e)
  store %struct.Memory* %call_440d2e, %struct.Memory** %MEMORY

  ; Code: movl -0x6d8(%rbp), %edx	 RIP: 440d34	 Bytes: 6
  %loadMem_440d34 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d34 = call %struct.Memory* @routine_movl_MINUS0x6d8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d34)
  store %struct.Memory* %call_440d34, %struct.Memory** %MEMORY

  ; Code: movl -0xd38(%rbp), %ecx	 RIP: 440d3a	 Bytes: 6
  %loadMem_440d3a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d3a = call %struct.Memory* @routine_movl_MINUS0xd38__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d3a)
  store %struct.Memory* %call_440d3a, %struct.Memory** %MEMORY

  ; Code: callq .sgf_trace2	 RIP: 440d40	 Bytes: 5
  %loadMem1_440d40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440d40 = call %struct.Memory* @routine_callq_.sgf_trace2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440d40, i64 -166432, i64 5, i64 5)
  store %struct.Memory* %call1_440d40, %struct.Memory** %MEMORY

  %loadMem2_440d40 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440d40 = load i64, i64* %3
  %call2_440d40 = call %struct.Memory* @sub_418320.sgf_trace2(%struct.State* %0, i64  %loadPC_440d40, %struct.Memory* %loadMem2_440d40)
  store %struct.Memory* %call2_440d40, %struct.Memory** %MEMORY

  ; Code: .L_440d45:	 RIP: 440d45	 Bytes: 0
  br label %block_.L_440d45
block_.L_440d45:

  ; Code: leaq -0x220(%rbp), %rsi	 RIP: 440d45	 Bytes: 7
  %loadMem_440d45 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d45 = call %struct.Memory* @routine_leaq_MINUS0x220__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d45)
  store %struct.Memory* %call_440d45, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %edi	 RIP: 440d4c	 Bytes: 3
  %loadMem_440d4c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d4c = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d4c)
  store %struct.Memory* %call_440d4c, %struct.Memory** %MEMORY

  ; Code: callq .close_pattern_list	 RIP: 440d4f	 Bytes: 5
  %loadMem1_440d4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440d4f = call %struct.Memory* @routine_callq_.close_pattern_list(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440d4f, i64 14481, i64 5, i64 5)
  store %struct.Memory* %call1_440d4f, %struct.Memory** %MEMORY

  %loadMem2_440d4f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440d4f = load i64, i64* %3
  %call2_440d4f = call %struct.Memory* @sub_4445e0.close_pattern_list(%struct.State* %0, i64  %loadPC_440d4f, %struct.Memory* %loadMem2_440d4f)
  store %struct.Memory* %call2_440d4f, %struct.Memory** %MEMORY

  ; Code: leaq -0x200(%rbp), %rsi	 RIP: 440d54	 Bytes: 7
  %loadMem_440d54 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d54 = call %struct.Memory* @routine_leaq_MINUS0x200__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d54)
  store %struct.Memory* %call_440d54, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %edi	 RIP: 440d5b	 Bytes: 3
  %loadMem_440d5b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d5b = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d5b)
  store %struct.Memory* %call_440d5b, %struct.Memory** %MEMORY

  ; Code: callq .close_pattern_list	 RIP: 440d5e	 Bytes: 5
  %loadMem1_440d5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440d5e = call %struct.Memory* @routine_callq_.close_pattern_list(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440d5e, i64 14466, i64 5, i64 5)
  store %struct.Memory* %call1_440d5e, %struct.Memory** %MEMORY

  %loadMem2_440d5e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440d5e = load i64, i64* %3
  %call2_440d5e = call %struct.Memory* @sub_4445e0.close_pattern_list(%struct.State* %0, i64  %loadPC_440d5e, %struct.Memory* %loadMem2_440d5e)
  store %struct.Memory* %call2_440d5e, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, -0x50(%rbp)	 RIP: 440d63	 Bytes: 5
  %loadMem_440d63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d63 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d63)
  store %struct.Memory* %call_440d63, %struct.Memory** %MEMORY

  ; Code: je .L_440d7a	 RIP: 440d68	 Bytes: 6
  %loadMem_440d68 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d68 = call %struct.Memory* @routine_je_.L_440d7a(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d68, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_440d68, %struct.Memory** %MEMORY

  %loadBr_440d68 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440d68 = icmp eq i8 %loadBr_440d68, 1
  br i1 %cmpBr_440d68, label %block_.L_440d7a, label %block_440d6e

block_440d6e:
  ; Code: movl -0xd38(%rbp), %eax	 RIP: 440d6e	 Bytes: 6
  %loadMem_440d6e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d6e = call %struct.Memory* @routine_movl_MINUS0xd38__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d6e)
  store %struct.Memory* %call_440d6e, %struct.Memory** %MEMORY

  ; Code: movq -0x50(%rbp), %rcx	 RIP: 440d74	 Bytes: 4
  %loadMem_440d74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d74 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d74)
  store %struct.Memory* %call_440d74, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 440d78	 Bytes: 2
  %loadMem_440d78 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d78 = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d78)
  store %struct.Memory* %call_440d78, %struct.Memory** %MEMORY

  ; Code: .L_440d7a:	 RIP: 440d7a	 Bytes: 0
  br label %block_.L_440d7a
block_.L_440d7a:

  ; Code: cmpq $0x0, -0x6c0(%rbp)	 RIP: 440d7a	 Bytes: 8
  %loadMem_440d7a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d7a = call %struct.Memory* @routine_cmpq__0x0__MINUS0x6c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d7a)
  store %struct.Memory* %call_440d7a, %struct.Memory** %MEMORY

  ; Code: je .L_440dbf	 RIP: 440d82	 Bytes: 6
  %loadMem_440d82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d82 = call %struct.Memory* @routine_je_.L_440dbf(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d82, i8* %BRANCH_TAKEN, i64 61, i64 6, i64 6)
  store %struct.Memory* %call_440d82, %struct.Memory** %MEMORY

  %loadBr_440d82 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440d82 = icmp eq i8 %loadBr_440d82, 1
  br i1 %cmpBr_440d82, label %block_.L_440dbf, label %block_440d88

block_440d88:
  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 440d88	 Bytes: 7
  %loadMem_440d88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d88 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d88)
  store %struct.Memory* %call_440d88, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 440d8f	 Bytes: 3
  %loadMem_440d8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d8f = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d8f)
  store %struct.Memory* %call_440d8f, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %ecx	 RIP: 440d92	 Bytes: 6
  %loadMem_440d92 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d92 = call %struct.Memory* @routine_andl__0x3ff___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d92)
  store %struct.Memory* %call_440d92, %struct.Memory** %MEMORY

  ; Code: orl $0x20000000, %ecx	 RIP: 440d98	 Bytes: 6
  %loadMem_440d98 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d98 = call %struct.Memory* @routine_orl__0x20000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d98)
  store %struct.Memory* %call_440d98, %struct.Memory** %MEMORY

  ; Code: orl $0x1000000, %ecx	 RIP: 440d9e	 Bytes: 6
  %loadMem_440d9e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440d9e = call %struct.Memory* @routine_orl__0x1000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440d9e)
  store %struct.Memory* %call_440d9e, %struct.Memory** %MEMORY

  ; Code: movl -0xd38(%rbp), %edx	 RIP: 440da4	 Bytes: 6
  %loadMem_440da4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440da4 = call %struct.Memory* @routine_movl_MINUS0xd38__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440da4)
  store %struct.Memory* %call_440da4, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %edx	 RIP: 440daa	 Bytes: 6
  %loadMem_440daa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440daa = call %struct.Memory* @routine_andl__0x3ff___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440daa)
  store %struct.Memory* %call_440daa, %struct.Memory** %MEMORY

  ; Code: shll $0xa, %edx	 RIP: 440db0	 Bytes: 3
  %loadMem_440db0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440db0 = call %struct.Memory* @routine_shll__0xa___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440db0)
  store %struct.Memory* %call_440db0, %struct.Memory** %MEMORY

  ; Code: orl %edx, %ecx	 RIP: 440db3	 Bytes: 2
  %loadMem_440db3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440db3 = call %struct.Memory* @routine_orl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440db3)
  store %struct.Memory* %call_440db3, %struct.Memory** %MEMORY

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 440db5	 Bytes: 7
  %loadMem_440db5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440db5 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440db5)
  store %struct.Memory* %call_440db5, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x4(%rax)	 RIP: 440dbc	 Bytes: 3
  %loadMem_440dbc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440dbc = call %struct.Memory* @routine_movl__ecx__0x4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440dbc)
  store %struct.Memory* %call_440dbc, %struct.Memory** %MEMORY

  ; Code: .L_440dbf:	 RIP: 440dbf	 Bytes: 0
  br label %block_.L_440dbf
block_.L_440dbf:

  ; Code: jmpq .L_441708	 RIP: 440dbf	 Bytes: 5
  %loadMem_440dbf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440dbf = call %struct.Memory* @routine_jmpq_.L_441708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440dbf, i64 2377, i64 5)
  store %struct.Memory* %call_440dbf, %struct.Memory** %MEMORY

  br label %block_.L_441708

  ; Code: .L_440dc4:	 RIP: 440dc4	 Bytes: 0
block_.L_440dc4:

  ; Code: movslq -0xd34(%rbp), %rax	 RIP: 440dc4	 Bytes: 7
  %loadMem_440dc4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440dc4 = call %struct.Memory* @routine_movslq_MINUS0xd34__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440dc4)
  store %struct.Memory* %call_440dc4, %struct.Memory** %MEMORY

  ; Code: movl $0x1, -0xd30(%rbp,%rax,4)	 RIP: 440dcb	 Bytes: 11
  %loadMem_440dcb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440dcb = call %struct.Memory* @routine_movl__0x1__MINUS0xd30__rbp__rax_4_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440dcb)
  store %struct.Memory* %call_440dcb, %struct.Memory** %MEMORY

  ; Code: jmpq .L_440ddb	 RIP: 440dd6	 Bytes: 5
  %loadMem_440dd6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440dd6 = call %struct.Memory* @routine_jmpq_.L_440ddb(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440dd6, i64 5, i64 5)
  store %struct.Memory* %call_440dd6, %struct.Memory** %MEMORY

  br label %block_.L_440ddb

  ; Code: .L_440ddb:	 RIP: 440ddb	 Bytes: 0
block_.L_440ddb:

  ; Code: jmpq .L_440de0	 RIP: 440ddb	 Bytes: 5
  %loadMem_440ddb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ddb = call %struct.Memory* @routine_jmpq_.L_440de0(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ddb, i64 5, i64 5)
  store %struct.Memory* %call_440ddb, %struct.Memory** %MEMORY

  br label %block_.L_440de0

  ; Code: .L_440de0:	 RIP: 440de0	 Bytes: 0
block_.L_440de0:

  ; Code: jmpq .L_440de5	 RIP: 440de0	 Bytes: 5
  %loadMem_440de0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440de0 = call %struct.Memory* @routine_jmpq_.L_440de5(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440de0, i64 5, i64 5)
  store %struct.Memory* %call_440de0, %struct.Memory** %MEMORY

  br label %block_.L_440de5

  ; Code: .L_440de5:	 RIP: 440de5	 Bytes: 0
block_.L_440de5:

  ; Code: movl -0x68c(%rbp), %eax	 RIP: 440de5	 Bytes: 6
  %loadMem_440de5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440de5 = call %struct.Memory* @routine_movl_MINUS0x68c__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440de5)
  store %struct.Memory* %call_440de5, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 440deb	 Bytes: 3
  %loadMem_440deb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440deb = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440deb)
  store %struct.Memory* %call_440deb, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x68c(%rbp)	 RIP: 440dee	 Bytes: 6
  %loadMem_440dee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440dee = call %struct.Memory* @routine_movl__eax__MINUS0x68c__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440dee)
  store %struct.Memory* %call_440dee, %struct.Memory** %MEMORY

  ; Code: jmpq .L_440b36	 RIP: 440df4	 Bytes: 5
  %loadMem_440df4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440df4 = call %struct.Memory* @routine_jmpq_.L_440b36(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440df4, i64 -702, i64 5)
  store %struct.Memory* %call_440df4, %struct.Memory** %MEMORY

  br label %block_.L_440b36

  ; Code: .L_440df9:	 RIP: 440df9	 Bytes: 0
block_.L_440df9:

  ; Code: jmpq .L_440dfe	 RIP: 440df9	 Bytes: 5
  %loadMem_440df9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440df9 = call %struct.Memory* @routine_jmpq_.L_440dfe(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440df9, i64 5, i64 5)
  store %struct.Memory* %call_440df9, %struct.Memory** %MEMORY

  br label %block_.L_440dfe

  ; Code: .L_440dfe:	 RIP: 440dfe	 Bytes: 0
block_.L_440dfe:

  ; Code: movl -0x688(%rbp), %eax	 RIP: 440dfe	 Bytes: 6
  %loadMem_440dfe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440dfe = call %struct.Memory* @routine_movl_MINUS0x688__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440dfe)
  store %struct.Memory* %call_440dfe, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 440e04	 Bytes: 3
  %loadMem_440e04 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e04 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e04)
  store %struct.Memory* %call_440e04, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x688(%rbp)	 RIP: 440e07	 Bytes: 6
  %loadMem_440e07 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e07 = call %struct.Memory* @routine_movl__eax__MINUS0x688__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e07)
  store %struct.Memory* %call_440e07, %struct.Memory** %MEMORY

  ; Code: jmpq .L_440b19	 RIP: 440e0d	 Bytes: 5
  %loadMem_440e0d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e0d = call %struct.Memory* @routine_jmpq_.L_440b19(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e0d, i64 -756, i64 5)
  store %struct.Memory* %call_440e0d, %struct.Memory** %MEMORY

  br label %block_.L_440b19

  ; Code: .L_440e12:	 RIP: 440e12	 Bytes: 0
block_.L_440e12:

  ; Code: cmpl $0x0, -0x4d4(%rbp)	 RIP: 440e12	 Bytes: 7
  %loadMem_440e12 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e12 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x4d4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e12)
  store %struct.Memory* %call_440e12, %struct.Memory** %MEMORY

  ; Code: je .L_440e93	 RIP: 440e19	 Bytes: 6
  %loadMem_440e19 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e19 = call %struct.Memory* @routine_je_.L_440e93(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e19, i8* %BRANCH_TAKEN, i64 122, i64 6, i64 6)
  store %struct.Memory* %call_440e19, %struct.Memory** %MEMORY

  %loadBr_440e19 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440e19 = icmp eq i8 %loadBr_440e19, 1
  br i1 %cmpBr_440e19, label %block_.L_440e93, label %block_440e1f

block_440e1f:
  ; Code: cmpl $0x0, -0x300(%rbp)	 RIP: 440e1f	 Bytes: 7
  %loadMem_440e1f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e1f = call %struct.Memory* @routine_cmpl__0x0__MINUS0x300__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e1f)
  store %struct.Memory* %call_440e1f, %struct.Memory** %MEMORY

  ; Code: je .L_440e93	 RIP: 440e26	 Bytes: 6
  %loadMem_440e26 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e26 = call %struct.Memory* @routine_je_.L_440e93(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e26, i8* %BRANCH_TAKEN, i64 109, i64 6, i64 6)
  store %struct.Memory* %call_440e26, %struct.Memory** %MEMORY

  %loadBr_440e26 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440e26 = icmp eq i8 %loadBr_440e26, 1
  br i1 %cmpBr_440e26, label %block_.L_440e93, label %block_440e2c

block_440e2c:
  ; Code: movl $0x32, %ecx	 RIP: 440e2c	 Bytes: 5
  %loadMem_440e2c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e2c = call %struct.Memory* @routine_movl__0x32___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e2c)
  store %struct.Memory* %call_440e2c, %struct.Memory** %MEMORY

  ; Code: movl -0x300(%rbp), %edi	 RIP: 440e31	 Bytes: 6
  %loadMem_440e31 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e31 = call %struct.Memory* @routine_movl_MINUS0x300__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e31)
  store %struct.Memory* %call_440e31, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rsi	 RIP: 440e37	 Bytes: 4
  %loadMem_440e37 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e37 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e37)
  store %struct.Memory* %call_440e37, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rdx	 RIP: 440e3b	 Bytes: 4
  %loadMem_440e3b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e3b = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e3b)
  store %struct.Memory* %call_440e3b, %struct.Memory** %MEMORY

  ; Code: callq .semeai_move_value	 RIP: 440e3f	 Bytes: 5
  %loadMem1_440e3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440e3f = call %struct.Memory* @routine_callq_.semeai_move_value(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440e3f, i64 12625, i64 5, i64 5)
  store %struct.Memory* %call1_440e3f, %struct.Memory** %MEMORY

  %loadMem2_440e3f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440e3f = load i64, i64* %3
  %call2_440e3f = call %struct.Memory* @sub_443f90.semeai_move_value(%struct.State* %0, i64  %loadPC_440e3f, %struct.Memory* %loadMem2_440e3f)
  store %struct.Memory* %call2_440e3f, %struct.Memory** %MEMORY

  ; Code: movq $0x57dfa7, %rcx	 RIP: 440e44	 Bytes: 10
  %loadMem_440e44 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e44 = call %struct.Memory* @routine_movq__0x57dfa7___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e44)
  store %struct.Memory* %call_440e44, %struct.Memory** %MEMORY

  ; Code: xorl %edi, %edi	 RIP: 440e4e	 Bytes: 2
  %loadMem_440e4e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e4e = call %struct.Memory* @routine_xorl__edi___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e4e)
  store %struct.Memory* %call_440e4e, %struct.Memory** %MEMORY

  ; Code: leaq -0x2e0(%rbp), %rdx	 RIP: 440e50	 Bytes: 7
  %loadMem_440e50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e50 = call %struct.Memory* @routine_leaq_MINUS0x2e0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e50)
  store %struct.Memory* %call_440e50, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6a0(%rbp)	 RIP: 440e57	 Bytes: 6
  %loadMem_440e57 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e57 = call %struct.Memory* @routine_movl__eax__MINUS0x6a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e57)
  store %struct.Memory* %call_440e57, %struct.Memory** %MEMORY

  ; Code: movl -0x300(%rbp), %esi	 RIP: 440e5d	 Bytes: 6
  %loadMem_440e5d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e5d = call %struct.Memory* @routine_movl_MINUS0x300__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e5d)
  store %struct.Memory* %call_440e5d, %struct.Memory** %MEMORY

  ; Code: movl -0x6a0(%rbp), %eax	 RIP: 440e63	 Bytes: 6
  %loadMem_440e63 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e63 = call %struct.Memory* @routine_movl_MINUS0x6a0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e63)
  store %struct.Memory* %call_440e63, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0xdc0(%rbp)	 RIP: 440e69	 Bytes: 6
  %loadMem_440e69 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e69 = call %struct.Memory* @routine_movl__edi__MINUS0xdc0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e69)
  store %struct.Memory* %call_440e69, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 440e6f	 Bytes: 3
  %loadMem_440e6f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e6f = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e6f)
  store %struct.Memory* %call_440e6f, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 440e72	 Bytes: 2
  %loadMem_440e72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e72 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e72)
  store %struct.Memory* %call_440e72, %struct.Memory** %MEMORY

  ; Code: movl -0xdc0(%rbp), %r8d	 RIP: 440e74	 Bytes: 7
  %loadMem_440e74 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e74 = call %struct.Memory* @routine_movl_MINUS0xdc0__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e74)
  store %struct.Memory* %call_440e74, %struct.Memory** %MEMORY

  ; Code: movl -0xdc0(%rbp), %r9d	 RIP: 440e7b	 Bytes: 7
  %loadMem_440e7b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e7b = call %struct.Memory* @routine_movl_MINUS0xdc0__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e7b)
  store %struct.Memory* %call_440e7b, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rsp)	 RIP: 440e82	 Bytes: 7
  %loadMem_440e82 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e82 = call %struct.Memory* @routine_movl__0x0____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e82)
  store %struct.Memory* %call_440e82, %struct.Memory** %MEMORY

  ; Code: callq .owl_add_move	 RIP: 440e89	 Bytes: 5
  %loadMem1_440e89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440e89 = call %struct.Memory* @routine_callq_.owl_add_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440e89, i64 13223, i64 5, i64 5)
  store %struct.Memory* %call1_440e89, %struct.Memory** %MEMORY

  %loadMem2_440e89 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440e89 = load i64, i64* %3
  %call2_440e89 = call %struct.Memory* @sub_444230.owl_add_move(%struct.State* %0, i64  %loadPC_440e89, %struct.Memory* %loadMem2_440e89)
  store %struct.Memory* %call2_440e89, %struct.Memory** %MEMORY

  ; Code: jmpq .L_440f88	 RIP: 440e8e	 Bytes: 5
  %loadMem_440e8e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e8e = call %struct.Memory* @routine_jmpq_.L_440f88(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e8e, i64 250, i64 5)
  store %struct.Memory* %call_440e8e, %struct.Memory** %MEMORY

  br label %block_.L_440f88

  ; Code: .L_440e93:	 RIP: 440e93	 Bytes: 0
block_.L_440e93:

  ; Code: cmpl $0x0, -0x4e4(%rbp)	 RIP: 440e93	 Bytes: 7
  %loadMem_440e93 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e93 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x4e4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e93)
  store %struct.Memory* %call_440e93, %struct.Memory** %MEMORY

  ; Code: je .L_440f14	 RIP: 440e9a	 Bytes: 6
  %loadMem_440e9a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440e9a = call %struct.Memory* @routine_je_.L_440f14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440e9a, i8* %BRANCH_TAKEN, i64 122, i64 6, i64 6)
  store %struct.Memory* %call_440e9a, %struct.Memory** %MEMORY

  %loadBr_440e9a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440e9a = icmp eq i8 %loadBr_440e9a, 1
  br i1 %cmpBr_440e9a, label %block_.L_440f14, label %block_440ea0

block_440ea0:
  ; Code: cmpl $0x0, -0x340(%rbp)	 RIP: 440ea0	 Bytes: 7
  %loadMem_440ea0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ea0 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x340__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ea0)
  store %struct.Memory* %call_440ea0, %struct.Memory** %MEMORY

  ; Code: je .L_440f14	 RIP: 440ea7	 Bytes: 6
  %loadMem_440ea7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ea7 = call %struct.Memory* @routine_je_.L_440f14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ea7, i8* %BRANCH_TAKEN, i64 109, i64 6, i64 6)
  store %struct.Memory* %call_440ea7, %struct.Memory** %MEMORY

  %loadBr_440ea7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440ea7 = icmp eq i8 %loadBr_440ea7, 1
  br i1 %cmpBr_440ea7, label %block_.L_440f14, label %block_440ead

block_440ead:
  ; Code: movl $0x32, %ecx	 RIP: 440ead	 Bytes: 5
  %loadMem_440ead = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ead = call %struct.Memory* @routine_movl__0x32___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ead)
  store %struct.Memory* %call_440ead, %struct.Memory** %MEMORY

  ; Code: movl -0x340(%rbp), %edi	 RIP: 440eb2	 Bytes: 6
  %loadMem_440eb2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440eb2 = call %struct.Memory* @routine_movl_MINUS0x340__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440eb2)
  store %struct.Memory* %call_440eb2, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rsi	 RIP: 440eb8	 Bytes: 4
  %loadMem_440eb8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440eb8 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440eb8)
  store %struct.Memory* %call_440eb8, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rdx	 RIP: 440ebc	 Bytes: 4
  %loadMem_440ebc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ebc = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ebc)
  store %struct.Memory* %call_440ebc, %struct.Memory** %MEMORY

  ; Code: callq .semeai_move_value	 RIP: 440ec0	 Bytes: 5
  %loadMem1_440ec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440ec0 = call %struct.Memory* @routine_callq_.semeai_move_value(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440ec0, i64 12496, i64 5, i64 5)
  store %struct.Memory* %call1_440ec0, %struct.Memory** %MEMORY

  %loadMem2_440ec0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440ec0 = load i64, i64* %3
  %call2_440ec0 = call %struct.Memory* @sub_443f90.semeai_move_value(%struct.State* %0, i64  %loadPC_440ec0, %struct.Memory* %loadMem2_440ec0)
  store %struct.Memory* %call2_440ec0, %struct.Memory** %MEMORY

  ; Code: movq $0x57dfbc, %rcx	 RIP: 440ec5	 Bytes: 10
  %loadMem_440ec5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ec5 = call %struct.Memory* @routine_movq__0x57dfbc___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ec5)
  store %struct.Memory* %call_440ec5, %struct.Memory** %MEMORY

  ; Code: xorl %edi, %edi	 RIP: 440ecf	 Bytes: 2
  %loadMem_440ecf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ecf = call %struct.Memory* @routine_xorl__edi___edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ecf)
  store %struct.Memory* %call_440ecf, %struct.Memory** %MEMORY

  ; Code: leaq -0x2e0(%rbp), %rdx	 RIP: 440ed1	 Bytes: 7
  %loadMem_440ed1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ed1 = call %struct.Memory* @routine_leaq_MINUS0x2e0__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ed1)
  store %struct.Memory* %call_440ed1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6a0(%rbp)	 RIP: 440ed8	 Bytes: 6
  %loadMem_440ed8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ed8 = call %struct.Memory* @routine_movl__eax__MINUS0x6a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ed8)
  store %struct.Memory* %call_440ed8, %struct.Memory** %MEMORY

  ; Code: movl -0x340(%rbp), %esi	 RIP: 440ede	 Bytes: 6
  %loadMem_440ede = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ede = call %struct.Memory* @routine_movl_MINUS0x340__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ede)
  store %struct.Memory* %call_440ede, %struct.Memory** %MEMORY

  ; Code: movl -0x6a0(%rbp), %eax	 RIP: 440ee4	 Bytes: 6
  %loadMem_440ee4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ee4 = call %struct.Memory* @routine_movl_MINUS0x6a0__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ee4)
  store %struct.Memory* %call_440ee4, %struct.Memory** %MEMORY

  ; Code: movl %edi, -0xdc4(%rbp)	 RIP: 440eea	 Bytes: 6
  %loadMem_440eea = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440eea = call %struct.Memory* @routine_movl__edi__MINUS0xdc4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440eea)
  store %struct.Memory* %call_440eea, %struct.Memory** %MEMORY

  ; Code: movq %rdx, %rdi	 RIP: 440ef0	 Bytes: 3
  %loadMem_440ef0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ef0 = call %struct.Memory* @routine_movq__rdx___rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ef0)
  store %struct.Memory* %call_440ef0, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 440ef3	 Bytes: 2
  %loadMem_440ef3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ef3 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ef3)
  store %struct.Memory* %call_440ef3, %struct.Memory** %MEMORY

  ; Code: movl -0xdc4(%rbp), %r8d	 RIP: 440ef5	 Bytes: 7
  %loadMem_440ef5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ef5 = call %struct.Memory* @routine_movl_MINUS0xdc4__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ef5)
  store %struct.Memory* %call_440ef5, %struct.Memory** %MEMORY

  ; Code: movl -0xdc4(%rbp), %r9d	 RIP: 440efc	 Bytes: 7
  %loadMem_440efc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440efc = call %struct.Memory* @routine_movl_MINUS0xdc4__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440efc)
  store %struct.Memory* %call_440efc, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rsp)	 RIP: 440f03	 Bytes: 7
  %loadMem_440f03 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f03 = call %struct.Memory* @routine_movl__0x0____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f03)
  store %struct.Memory* %call_440f03, %struct.Memory** %MEMORY

  ; Code: callq .owl_add_move	 RIP: 440f0a	 Bytes: 5
  %loadMem1_440f0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440f0a = call %struct.Memory* @routine_callq_.owl_add_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440f0a, i64 13094, i64 5, i64 5)
  store %struct.Memory* %call1_440f0a, %struct.Memory** %MEMORY

  %loadMem2_440f0a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440f0a = load i64, i64* %3
  %call2_440f0a = call %struct.Memory* @sub_444230.owl_add_move(%struct.State* %0, i64  %loadPC_440f0a, %struct.Memory* %loadMem2_440f0a)
  store %struct.Memory* %call2_440f0a, %struct.Memory** %MEMORY

  ; Code: jmpq .L_440f83	 RIP: 440f0f	 Bytes: 5
  %loadMem_440f0f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f0f = call %struct.Memory* @routine_jmpq_.L_440f83(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f0f, i64 116, i64 5)
  store %struct.Memory* %call_440f0f, %struct.Memory** %MEMORY

  br label %block_.L_440f83

  ; Code: .L_440f14:	 RIP: 440f14	 Bytes: 0
block_.L_440f14:

  ; Code: cmpl $0x0, -0x4dc(%rbp)	 RIP: 440f14	 Bytes: 7
  %loadMem_440f14 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f14 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x4dc__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f14)
  store %struct.Memory* %call_440f14, %struct.Memory** %MEMORY

  ; Code: je .L_440f7e	 RIP: 440f1b	 Bytes: 6
  %loadMem_440f1b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f1b = call %struct.Memory* @routine_je_.L_440f7e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f1b, i8* %BRANCH_TAKEN, i64 99, i64 6, i64 6)
  store %struct.Memory* %call_440f1b, %struct.Memory** %MEMORY

  %loadBr_440f1b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440f1b = icmp eq i8 %loadBr_440f1b, 1
  br i1 %cmpBr_440f1b, label %block_.L_440f7e, label %block_440f21

block_440f21:
  ; Code: cmpl $0x0, -0x320(%rbp)	 RIP: 440f21	 Bytes: 7
  %loadMem_440f21 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f21 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x320__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f21)
  store %struct.Memory* %call_440f21, %struct.Memory** %MEMORY

  ; Code: je .L_440f7e	 RIP: 440f28	 Bytes: 6
  %loadMem_440f28 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f28 = call %struct.Memory* @routine_je_.L_440f7e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f28, i8* %BRANCH_TAKEN, i64 86, i64 6, i64 6)
  store %struct.Memory* %call_440f28, %struct.Memory** %MEMORY

  %loadBr_440f28 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440f28 = icmp eq i8 %loadBr_440f28, 1
  br i1 %cmpBr_440f28, label %block_.L_440f7e, label %block_440f2e

block_440f2e:
  ; Code: movl $0xa, %ecx	 RIP: 440f2e	 Bytes: 5
  %loadMem_440f2e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f2e = call %struct.Memory* @routine_movl__0xa___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f2e)
  store %struct.Memory* %call_440f2e, %struct.Memory** %MEMORY

  ; Code: movl -0x320(%rbp), %edi	 RIP: 440f33	 Bytes: 6
  %loadMem_440f33 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f33 = call %struct.Memory* @routine_movl_MINUS0x320__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f33)
  store %struct.Memory* %call_440f33, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rsi	 RIP: 440f39	 Bytes: 4
  %loadMem_440f39 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f39 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f39)
  store %struct.Memory* %call_440f39, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rdx	 RIP: 440f3d	 Bytes: 4
  %loadMem_440f3d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f3d = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f3d)
  store %struct.Memory* %call_440f3d, %struct.Memory** %MEMORY

  ; Code: callq .semeai_move_value	 RIP: 440f41	 Bytes: 5
  %loadMem1_440f41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440f41 = call %struct.Memory* @routine_callq_.semeai_move_value(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440f41, i64 12367, i64 5, i64 5)
  store %struct.Memory* %call1_440f41, %struct.Memory** %MEMORY

  %loadMem2_440f41 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440f41 = load i64, i64* %3
  %call2_440f41 = call %struct.Memory* @sub_443f90.semeai_move_value(%struct.State* %0, i64  %loadPC_440f41, %struct.Memory* %loadMem2_440f41)
  store %struct.Memory* %call2_440f41, %struct.Memory** %MEMORY

  ; Code: movq $0x57dfcd, %rcx	 RIP: 440f46	 Bytes: 10
  %loadMem_440f46 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f46 = call %struct.Memory* @routine_movq__0x57dfcd___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f46)
  store %struct.Memory* %call_440f46, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %r8d	 RIP: 440f50	 Bytes: 6
  %loadMem_440f50 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f50 = call %struct.Memory* @routine_movl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f50)
  store %struct.Memory* %call_440f50, %struct.Memory** %MEMORY

  ; Code: xorl %r9d, %r9d	 RIP: 440f56	 Bytes: 3
  %loadMem_440f56 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f56 = call %struct.Memory* @routine_xorl__r9d___r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f56)
  store %struct.Memory* %call_440f56, %struct.Memory** %MEMORY

  ; Code: leaq -0x2e0(%rbp), %rdi	 RIP: 440f59	 Bytes: 7
  %loadMem_440f59 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f59 = call %struct.Memory* @routine_leaq_MINUS0x2e0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f59)
  store %struct.Memory* %call_440f59, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6a0(%rbp)	 RIP: 440f60	 Bytes: 6
  %loadMem_440f60 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f60 = call %struct.Memory* @routine_movl__eax__MINUS0x6a0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f60)
  store %struct.Memory* %call_440f60, %struct.Memory** %MEMORY

  ; Code: movl -0x320(%rbp), %esi	 RIP: 440f66	 Bytes: 6
  %loadMem_440f66 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f66 = call %struct.Memory* @routine_movl_MINUS0x320__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f66)
  store %struct.Memory* %call_440f66, %struct.Memory** %MEMORY

  ; Code: movl -0x6a0(%rbp), %edx	 RIP: 440f6c	 Bytes: 6
  %loadMem_440f6c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f6c = call %struct.Memory* @routine_movl_MINUS0x6a0__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f6c)
  store %struct.Memory* %call_440f6c, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rsp)	 RIP: 440f72	 Bytes: 7
  %loadMem_440f72 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f72 = call %struct.Memory* @routine_movl__0x0____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f72)
  store %struct.Memory* %call_440f72, %struct.Memory** %MEMORY

  ; Code: callq .owl_add_move	 RIP: 440f79	 Bytes: 5
  %loadMem1_440f79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_440f79 = call %struct.Memory* @routine_callq_.owl_add_move(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_440f79, i64 12983, i64 5, i64 5)
  store %struct.Memory* %call1_440f79, %struct.Memory** %MEMORY

  %loadMem2_440f79 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_440f79 = load i64, i64* %3
  %call2_440f79 = call %struct.Memory* @sub_444230.owl_add_move(%struct.State* %0, i64  %loadPC_440f79, %struct.Memory* %loadMem2_440f79)
  store %struct.Memory* %call2_440f79, %struct.Memory** %MEMORY

  ; Code: .L_440f7e:	 RIP: 440f7e	 Bytes: 0
  br label %block_.L_440f7e
block_.L_440f7e:

  ; Code: jmpq .L_440f83	 RIP: 440f7e	 Bytes: 5
  %loadMem_440f7e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f7e = call %struct.Memory* @routine_jmpq_.L_440f83(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f7e, i64 5, i64 5)
  store %struct.Memory* %call_440f7e, %struct.Memory** %MEMORY

  br label %block_.L_440f83

  ; Code: .L_440f83:	 RIP: 440f83	 Bytes: 0
block_.L_440f83:

  ; Code: jmpq .L_440f88	 RIP: 440f83	 Bytes: 5
  %loadMem_440f83 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f83 = call %struct.Memory* @routine_jmpq_.L_440f88(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f83, i64 5, i64 5)
  store %struct.Memory* %call_440f83, %struct.Memory** %MEMORY

  br label %block_.L_440f88

  ; Code: .L_440f88:	 RIP: 440f88	 Bytes: 0
block_.L_440f88:

  ; Code: movq -0x698(%rbp), %rax	 RIP: 440f88	 Bytes: 7
  %loadMem_440f88 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f88 = call %struct.Memory* @routine_movq_MINUS0x698__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f88)
  store %struct.Memory* %call_440f88, %struct.Memory** %MEMORY

  ; Code: movq %rax, 0xab0ef8	 RIP: 440f8f	 Bytes: 8
  %loadMem_440f8f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f8f = call %struct.Memory* @routine_movq__rax__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f8f)
  store %struct.Memory* %call_440f8f, %struct.Memory** %MEMORY

  ; Code: movl -0x69c(%rbp), %ecx	 RIP: 440f97	 Bytes: 6
  %loadMem_440f97 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f97 = call %struct.Memory* @routine_movl_MINUS0x69c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f97)
  store %struct.Memory* %call_440f97, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0xab0eec	 RIP: 440f9d	 Bytes: 7
  %loadMem_440f9d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440f9d = call %struct.Memory* @routine_movl__ecx__0xab0eec(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440f9d)
  store %struct.Memory* %call_440f9d, %struct.Memory** %MEMORY

  ; Code: movl $0x0, -0x684(%rbp)	 RIP: 440fa4	 Bytes: 10
  %loadMem_440fa4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440fa4 = call %struct.Memory* @routine_movl__0x0__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440fa4)
  store %struct.Memory* %call_440fa4, %struct.Memory** %MEMORY

  ; Code: .L_440fae:	 RIP: 440fae	 Bytes: 0
  br label %block_.L_440fae
block_.L_440fae:

  ; Code: cmpl $0x6, -0x684(%rbp)	 RIP: 440fae	 Bytes: 7
  %loadMem_440fae = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440fae = call %struct.Memory* @routine_cmpl__0x6__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440fae)
  store %struct.Memory* %call_440fae, %struct.Memory** %MEMORY

  ; Code: jge .L_4413f7	 RIP: 440fb5	 Bytes: 6
  %loadMem_440fb5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440fb5 = call %struct.Memory* @routine_jge_.L_4413f7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440fb5, i8* %BRANCH_TAKEN, i64 1090, i64 6, i64 6)
  store %struct.Memory* %call_440fb5, %struct.Memory** %MEMORY

  %loadBr_440fb5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440fb5 = icmp eq i8 %loadBr_440fb5, 1
  br i1 %cmpBr_440fb5, label %block_.L_4413f7, label %block_440fbb

block_440fbb:
  ; Code: leaq -0x2e0(%rbp), %rax	 RIP: 440fbb	 Bytes: 7
  %loadMem_440fbb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440fbb = call %struct.Memory* @routine_leaq_MINUS0x2e0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440fbb)
  store %struct.Memory* %call_440fbb, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 440fc2	 Bytes: 7
  %loadMem_440fc2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440fc2 = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440fc2)
  store %struct.Memory* %call_440fc2, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 440fc9	 Bytes: 4
  %loadMem_440fc9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440fc9 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440fc9)
  store %struct.Memory* %call_440fc9, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rax	 RIP: 440fcd	 Bytes: 3
  %loadMem_440fcd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440fcd = call %struct.Memory* @routine_addq__rcx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440fcd)
  store %struct.Memory* %call_440fcd, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 440fd0	 Bytes: 2
  %loadMem_440fd0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440fd0 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440fd0)
  store %struct.Memory* %call_440fd0, %struct.Memory** %MEMORY

  ; Code: movl %edx, -0xd40(%rbp)	 RIP: 440fd2	 Bytes: 6
  %loadMem_440fd2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440fd2 = call %struct.Memory* @routine_movl__edx__MINUS0xd40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440fd2)
  store %struct.Memory* %call_440fd2, %struct.Memory** %MEMORY

  ; Code: cmpl $0x2, -0x684(%rbp)	 RIP: 440fd8	 Bytes: 7
  %loadMem_440fd8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440fd8 = call %struct.Memory* @routine_cmpl__0x2__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440fd8)
  store %struct.Memory* %call_440fd8, %struct.Memory** %MEMORY

  ; Code: jg .L_44101b	 RIP: 440fdf	 Bytes: 6
  %loadMem_440fdf = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440fdf = call %struct.Memory* @routine_jg_.L_44101b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440fdf, i8* %BRANCH_TAKEN, i64 60, i64 6, i64 6)
  store %struct.Memory* %call_440fdf, %struct.Memory** %MEMORY

  %loadBr_440fdf = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440fdf = icmp eq i8 %loadBr_440fdf, 1
  br i1 %cmpBr_440fdf, label %block_.L_44101b, label %block_440fe5

block_440fe5:
  ; Code: cmpl $0x6, 0xb54ce4	 RIP: 440fe5	 Bytes: 8
  %loadMem_440fe5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440fe5 = call %struct.Memory* @routine_cmpl__0x6__0xb54ce4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440fe5)
  store %struct.Memory* %call_440fe5, %struct.Memory** %MEMORY

  ; Code: jle .L_441000	 RIP: 440fed	 Bytes: 6
  %loadMem_440fed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440fed = call %struct.Memory* @routine_jle_.L_441000(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440fed, i8* %BRANCH_TAKEN, i64 19, i64 6, i64 6)
  store %struct.Memory* %call_440fed, %struct.Memory** %MEMORY

  %loadBr_440fed = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440fed = icmp eq i8 %loadBr_440fed, 1
  br i1 %cmpBr_440fed, label %block_.L_441000, label %block_440ff3

block_440ff3:
  ; Code: cmpl $0x1, -0x684(%rbp)	 RIP: 440ff3	 Bytes: 7
  %loadMem_440ff3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ff3 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ff3)
  store %struct.Memory* %call_440ff3, %struct.Memory** %MEMORY

  ; Code: jg .L_44101b	 RIP: 440ffa	 Bytes: 6
  %loadMem_440ffa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_440ffa = call %struct.Memory* @routine_jg_.L_44101b(%struct.State* %0, i64  0, %struct.Memory* %loadMem_440ffa, i8* %BRANCH_TAKEN, i64 33, i64 6, i64 6)
  store %struct.Memory* %call_440ffa, %struct.Memory** %MEMORY

  %loadBr_440ffa = load i8, i8* %BRANCH_TAKEN
  %cmpBr_440ffa = icmp eq i8 %loadBr_440ffa, 1
  br i1 %cmpBr_440ffa, label %block_.L_44101b, label %block_.L_441000

  ; Code: .L_441000:	 RIP: 441000	 Bytes: 0
block_.L_441000:

  ; Code: cmpl $0xc, 0xb54ce4	 RIP: 441000	 Bytes: 8
  %loadMem_441000 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441000 = call %struct.Memory* @routine_cmpl__0xc__0xb54ce4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441000)
  store %struct.Memory* %call_441000, %struct.Memory** %MEMORY

  ; Code: jle .L_441020	 RIP: 441008	 Bytes: 6
  %loadMem_441008 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441008 = call %struct.Memory* @routine_jle_.L_441020(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441008, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_441008, %struct.Memory** %MEMORY

  %loadBr_441008 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441008 = icmp eq i8 %loadBr_441008, 1
  br i1 %cmpBr_441008, label %block_.L_441020, label %block_44100e

block_44100e:
  ; Code: cmpl $0x0, -0x684(%rbp)	 RIP: 44100e	 Bytes: 7
  %loadMem_44100e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44100e = call %struct.Memory* @routine_cmpl__0x0__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44100e)
  store %struct.Memory* %call_44100e, %struct.Memory** %MEMORY

  ; Code: jle .L_441020	 RIP: 441015	 Bytes: 6
  %loadMem_441015 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441015 = call %struct.Memory* @routine_jle_.L_441020(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441015, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_441015, %struct.Memory** %MEMORY

  %loadBr_441015 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441015 = icmp eq i8 %loadBr_441015, 1
  br i1 %cmpBr_441015, label %block_.L_441020, label %block_.L_44101b

  ; Code: .L_44101b:	 RIP: 44101b	 Bytes: 0
block_.L_44101b:

  ; Code: jmpq .L_4413e3	 RIP: 44101b	 Bytes: 5
  %loadMem_44101b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44101b = call %struct.Memory* @routine_jmpq_.L_4413e3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44101b, i64 968, i64 5)
  store %struct.Memory* %call_44101b, %struct.Memory** %MEMORY

  br label %block_.L_4413e3

  ; Code: .L_441020:	 RIP: 441020	 Bytes: 0
block_.L_441020:

  ; Code: cmpl $0x0, -0xd40(%rbp)	 RIP: 441020	 Bytes: 7
  %loadMem_441020 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441020 = call %struct.Memory* @routine_cmpl__0x0__MINUS0xd40__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441020)
  store %struct.Memory* %call_441020, %struct.Memory** %MEMORY

  ; Code: je .L_4413de	 RIP: 441027	 Bytes: 6
  %loadMem_441027 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441027 = call %struct.Memory* @routine_je_.L_4413de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441027, i8* %BRANCH_TAKEN, i64 951, i64 6, i64 6)
  store %struct.Memory* %call_441027, %struct.Memory** %MEMORY

  %loadBr_441027 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441027 = icmp eq i8 %loadBr_441027, 1
  br i1 %cmpBr_441027, label %block_.L_4413de, label %block_44102d

block_44102d:
  ; Code: movl 0xab0eec, %eax	 RIP: 44102d	 Bytes: 7
  %loadMem_44102d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44102d = call %struct.Memory* @routine_movl_0xab0eec___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44102d)
  store %struct.Memory* %call_44102d, %struct.Memory** %MEMORY

  ; Code: cmpl 0x7ae450, %eax	 RIP: 441034	 Bytes: 7
  %loadMem_441034 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441034 = call %struct.Memory* @routine_cmpl_0x7ae450___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441034)
  store %struct.Memory* %call_441034, %struct.Memory** %MEMORY

  ; Code: jge .L_4413de	 RIP: 44103b	 Bytes: 6
  %loadMem_44103b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44103b = call %struct.Memory* @routine_jge_.L_4413de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44103b, i8* %BRANCH_TAKEN, i64 931, i64 6, i64 6)
  store %struct.Memory* %call_44103b, %struct.Memory** %MEMORY

  %loadBr_44103b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44103b = icmp eq i8 %loadBr_44103b, 1
  br i1 %cmpBr_44103b, label %block_.L_4413de, label %block_441041

block_441041:
  ; Code: cmpl $0x64, 0xb54ce4	 RIP: 441041	 Bytes: 8
  %loadMem_441041 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441041 = call %struct.Memory* @routine_cmpl__0x64__0xb54ce4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441041)
  store %struct.Memory* %call_441041, %struct.Memory** %MEMORY

  ; Code: jge .L_4413de	 RIP: 441049	 Bytes: 6
  %loadMem_441049 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441049 = call %struct.Memory* @routine_jge_.L_4413de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441049, i8* %BRANCH_TAKEN, i64 917, i64 6, i64 6)
  store %struct.Memory* %call_441049, %struct.Memory** %MEMORY

  %loadBr_441049 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441049 = icmp eq i8 %loadBr_441049, 1
  br i1 %cmpBr_441049, label %block_.L_4413de, label %block_44104f

block_44104f:
  ; Code: leaq -0x2e0(%rbp), %rax	 RIP: 44104f	 Bytes: 7
  %loadMem_44104f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44104f = call %struct.Memory* @routine_leaq_MINUS0x2e0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44104f)
  store %struct.Memory* %call_44104f, %struct.Memory** %MEMORY

  ; Code: movl -0xd40(%rbp), %edi	 RIP: 441056	 Bytes: 6
  %loadMem_441056 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441056 = call %struct.Memory* @routine_movl_MINUS0xd40__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441056)
  store %struct.Memory* %call_441056, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %esi	 RIP: 44105c	 Bytes: 3
  %loadMem_44105c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44105c = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44105c)
  store %struct.Memory* %call_44105c, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rcx	 RIP: 44105f	 Bytes: 7
  %loadMem_44105f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44105f = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44105f)
  store %struct.Memory* %call_44105f, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rcx	 RIP: 441066	 Bytes: 4
  %loadMem_441066 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441066 = call %struct.Memory* @routine_shlq__0x5___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441066)
  store %struct.Memory* %call_441066, %struct.Memory** %MEMORY

  ; Code: movq %rax, %rdx	 RIP: 44106a	 Bytes: 3
  %loadMem_44106a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44106a = call %struct.Memory* @routine_movq__rax___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44106a)
  store %struct.Memory* %call_44106a, %struct.Memory** %MEMORY

  ; Code: addq %rcx, %rdx	 RIP: 44106d	 Bytes: 3
  %loadMem_44106d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44106d = call %struct.Memory* @routine_addq__rcx___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44106d)
  store %struct.Memory* %call_44106d, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rdx), %rdx	 RIP: 441070	 Bytes: 4
  %loadMem_441070 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441070 = call %struct.Memory* @routine_movq_0x8__rdx____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441070)
  store %struct.Memory* %call_441070, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %ecx	 RIP: 441074	 Bytes: 3
  %loadMem_441074 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441074 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441074)
  store %struct.Memory* %call_441074, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %r8d	 RIP: 441077	 Bytes: 4
  %loadMem_441077 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441077 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441077)
  store %struct.Memory* %call_441077, %struct.Memory** %MEMORY

  ; Code: movl -0x58(%rbp), %r9d	 RIP: 44107b	 Bytes: 4
  %loadMem_44107b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44107b = call %struct.Memory* @routine_movl_MINUS0x58__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44107b)
  store %struct.Memory* %call_44107b, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %r10	 RIP: 44107f	 Bytes: 7
  %loadMem_44107f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44107f = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44107f)
  store %struct.Memory* %call_44107f, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r10	 RIP: 441086	 Bytes: 4
  %loadMem_441086 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441086 = call %struct.Memory* @routine_shlq__0x5___r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441086)
  store %struct.Memory* %call_441086, %struct.Memory** %MEMORY

  ; Code: addq %r10, %rax	 RIP: 44108a	 Bytes: 3
  %loadMem_44108a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44108a = call %struct.Memory* @routine_addq__r10___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44108a)
  store %struct.Memory* %call_44108a, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %r11d	 RIP: 44108d	 Bytes: 4
  %loadMem_44108d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44108d = call %struct.Memory* @routine_movl_0x4__rax____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44108d)
  store %struct.Memory* %call_44108d, %struct.Memory** %MEMORY

  ; Code: movl %r11d, (%rsp)	 RIP: 441091	 Bytes: 4
  %loadMem_441091 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441091 = call %struct.Memory* @routine_movl__r11d____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441091)
  store %struct.Memory* %call_441091, %struct.Memory** %MEMORY

  ; Code: callq .semeai_trymove	 RIP: 441095	 Bytes: 5
  %loadMem1_441095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_441095 = call %struct.Memory* @routine_callq_.semeai_trymove(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_441095, i64 -210789, i64 5, i64 5)
  store %struct.Memory* %call1_441095, %struct.Memory** %MEMORY

  %loadMem2_441095 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_441095 = load i64, i64* %3
  %call2_441095 = call %struct.Memory* @sub_40d930.semeai_trymove(%struct.State* %0, i64  %loadPC_441095, %struct.Memory* %loadMem2_441095)
  store %struct.Memory* %call2_441095, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 44109a	 Bytes: 3
  %loadMem_44109a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44109a = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44109a)
  store %struct.Memory* %call_44109a, %struct.Memory** %MEMORY

  ; Code: je .L_4413de	 RIP: 44109d	 Bytes: 6
  %loadMem_44109d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44109d = call %struct.Memory* @routine_je_.L_4413de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44109d, i8* %BRANCH_TAKEN, i64 833, i64 6, i64 6)
  store %struct.Memory* %call_44109d, %struct.Memory** %MEMORY

  %loadBr_44109d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44109d = icmp eq i8 %loadBr_44109d, 1
  br i1 %cmpBr_44109d, label %block_.L_4413de, label %block_4410a3

block_4410a3:
  ; Code: movl 0xab0f24, %eax	 RIP: 4410a3	 Bytes: 7
  %loadMem_4410a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4410a3 = call %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4410a3)
  store %struct.Memory* %call_4410a3, %struct.Memory** %MEMORY

  ; Code: andl $0x40, %eax	 RIP: 4410aa	 Bytes: 3
  %loadMem_4410aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4410aa = call %struct.Memory* @routine_andl__0x40___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4410aa)
  store %struct.Memory* %call_4410aa, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %eax	 RIP: 4410ad	 Bytes: 3
  %loadMem_4410ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4410ad = call %struct.Memory* @routine_cmpl__0x0___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4410ad)
  store %struct.Memory* %call_4410ad, %struct.Memory** %MEMORY

  ; Code: je .L_4410c9	 RIP: 4410b0	 Bytes: 6
  %loadMem_4410b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4410b0 = call %struct.Memory* @routine_je_.L_4410c9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4410b0, i8* %BRANCH_TAKEN, i64 25, i64 6, i64 6)
  store %struct.Memory* %call_4410b0, %struct.Memory** %MEMORY

  %loadBr_4410b0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4410b0 = icmp eq i8 %loadBr_4410b0, 1
  br i1 %cmpBr_4410b0, label %block_.L_4410c9, label %block_4410b6

block_4410b6:
  ; Code: cmpl $0x0, 0xab0f28	 RIP: 4410b6	 Bytes: 8
  %loadMem_4410b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4410b6 = call %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4410b6)
  store %struct.Memory* %call_4410b6, %struct.Memory** %MEMORY

  ; Code: je .L_4410c9	 RIP: 4410be	 Bytes: 6
  %loadMem_4410be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4410be = call %struct.Memory* @routine_je_.L_4410c9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4410be, i8* %BRANCH_TAKEN, i64 11, i64 6, i64 6)
  store %struct.Memory* %call_4410be, %struct.Memory** %MEMORY

  %loadBr_4410be = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4410be = icmp eq i8 %loadBr_4410be, 1
  br i1 %cmpBr_4410be, label %block_.L_4410c9, label %block_4410c4

block_4410c4:
  ; Code: callq .dump_stack	 RIP: 4410c4	 Bytes: 5
  %loadMem1_4410c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4410c4 = call %struct.Memory* @routine_callq_.dump_stack(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4410c4, i64 -227220, i64 5, i64 5)
  store %struct.Memory* %call1_4410c4, %struct.Memory** %MEMORY

  %loadMem2_4410c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4410c4 = load i64, i64* %3
  %call2_4410c4 = call %struct.Memory* @sub_409930.dump_stack(%struct.State* %0, i64  %loadPC_4410c4, %struct.Memory* %loadMem2_4410c4)
  store %struct.Memory* %call2_4410c4, %struct.Memory** %MEMORY

  ; Code: .L_4410c9:	 RIP: 4410c9	 Bytes: 0
  br label %block_.L_4410c9
block_.L_4410c9:

  ; Code: movslq -0x20(%rbp), %rax	 RIP: 4410c9	 Bytes: 4
  %loadMem_4410c9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4410c9 = call %struct.Memory* @routine_movslq_MINUS0x20__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4410c9)
  store %struct.Memory* %call_4410c9, %struct.Memory** %MEMORY

  ; Code: movzbl 0xb89e60(,%rax,1), %ecx	 RIP: 4410cd	 Bytes: 8
  %loadMem_4410cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4410cd = call %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4410cd)
  store %struct.Memory* %call_4410cd, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, %ecx	 RIP: 4410d5	 Bytes: 3
  %loadMem_4410d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4410d5 = call %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4410d5)
  store %struct.Memory* %call_4410d5, %struct.Memory** %MEMORY

  ; Code: jne .L_4410f7	 RIP: 4410d8	 Bytes: 6
  %loadMem_4410d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4410d8 = call %struct.Memory* @routine_jne_.L_4410f7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4410d8, i8* %BRANCH_TAKEN, i64 31, i64 6, i64 6)
  store %struct.Memory* %call_4410d8, %struct.Memory** %MEMORY

  %loadBr_4410d8 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4410d8 = icmp eq i8 %loadBr_4410d8, 1
  br i1 %cmpBr_4410d8, label %block_.L_4410f7, label %block_4410de

block_4410de:
  ; Code: movl $0x0, -0x6b4(%rbp)	 RIP: 4410de	 Bytes: 10
  %loadMem_4410de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4410de = call %struct.Memory* @routine_movl__0x0__MINUS0x6b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4410de)
  store %struct.Memory* %call_4410de, %struct.Memory** %MEMORY

  ; Code: movl $0x1, -0x6b0(%rbp)	 RIP: 4410e8	 Bytes: 10
  %loadMem_4410e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4410e8 = call %struct.Memory* @routine_movl__0x1__MINUS0x6b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4410e8)
  store %struct.Memory* %call_4410e8, %struct.Memory** %MEMORY

  ; Code: jmpq .L_441229	 RIP: 4410f2	 Bytes: 5
  %loadMem_4410f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4410f2 = call %struct.Memory* @routine_jmpq_.L_441229(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4410f2, i64 311, i64 5)
  store %struct.Memory* %call_4410f2, %struct.Memory** %MEMORY

  br label %block_.L_441229

  ; Code: .L_4410f7:	 RIP: 4410f7	 Bytes: 0
block_.L_4410f7:

  ; Code: cmpl $0x0, -0x58(%rbp)	 RIP: 4410f7	 Bytes: 4
  %loadMem_4410f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4410f7 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4410f7)
  store %struct.Memory* %call_4410f7, %struct.Memory** %MEMORY

  ; Code: je .L_441121	 RIP: 4410fb	 Bytes: 6
  %loadMem_4410fb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4410fb = call %struct.Memory* @routine_je_.L_441121(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4410fb, i8* %BRANCH_TAKEN, i64 38, i64 6, i64 6)
  store %struct.Memory* %call_4410fb, %struct.Memory** %MEMORY

  %loadBr_4410fb = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4410fb = icmp eq i8 %loadBr_4410fb, 1
  br i1 %cmpBr_4410fb, label %block_.L_441121, label %block_441101

block_441101:
  ; Code: cmpl $0xd, 0xb54ce4	 RIP: 441101	 Bytes: 8
  %loadMem_441101 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441101 = call %struct.Memory* @routine_cmpl__0xd__0xb54ce4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441101)
  store %struct.Memory* %call_441101, %struct.Memory** %MEMORY

  ; Code: jg .L_441121	 RIP: 441109	 Bytes: 6
  %loadMem_441109 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441109 = call %struct.Memory* @routine_jg_.L_441121(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441109, i8* %BRANCH_TAKEN, i64 24, i64 6, i64 6)
  store %struct.Memory* %call_441109, %struct.Memory** %MEMORY

  %loadBr_441109 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441109 = icmp eq i8 %loadBr_441109, 1
  br i1 %cmpBr_441109, label %block_.L_441121, label %block_44110f

block_44110f:
  ; Code: leaq -0x28(%rbp), %rdi	 RIP: 44110f	 Bytes: 4
  %loadMem_44110f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44110f = call %struct.Memory* @routine_leaq_MINUS0x28__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44110f)
  store %struct.Memory* %call_44110f, %struct.Memory** %MEMORY

  ; Code: leaq -0x30(%rbp), %rsi	 RIP: 441113	 Bytes: 4
  %loadMem_441113 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441113 = call %struct.Memory* @routine_leaq_MINUS0x30__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441113)
  store %struct.Memory* %call_441113, %struct.Memory** %MEMORY

  ; Code: callq .push_owl	 RIP: 441117	 Bytes: 5
  %loadMem1_441117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_441117 = call %struct.Memory* @routine_callq_.push_owl(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_441117, i64 13993, i64 5, i64 5)
  store %struct.Memory* %call1_441117, %struct.Memory** %MEMORY

  %loadMem2_441117 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_441117 = load i64, i64* %3
  %call2_441117 = call %struct.Memory* @sub_4447c0.push_owl(%struct.State* %0, i64  %loadPC_441117, %struct.Memory* %loadMem2_441117)
  store %struct.Memory* %call2_441117, %struct.Memory** %MEMORY

  ; Code: jmpq .L_441138	 RIP: 44111c	 Bytes: 5
  %loadMem_44111c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44111c = call %struct.Memory* @routine_jmpq_.L_441138(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44111c, i64 28, i64 5)
  store %struct.Memory* %call_44111c, %struct.Memory** %MEMORY

  br label %block_.L_441138

  ; Code: .L_441121:	 RIP: 441121	 Bytes: 0
block_.L_441121:

  ; Code: movl $0x190, %eax	 RIP: 441121	 Bytes: 5
  %loadMem_441121 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441121 = call %struct.Memory* @routine_movl__0x190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441121)
  store %struct.Memory* %call_441121, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 441126	 Bytes: 2
  %loadMem_441126 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441126 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441126)
  store %struct.Memory* %call_441126, %struct.Memory** %MEMORY

  ; Code: leaq -0x4d0(%rbp), %rdi	 RIP: 441128	 Bytes: 7
  %loadMem_441128 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441128 = call %struct.Memory* @routine_leaq_MINUS0x4d0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441128)
  store %struct.Memory* %call_441128, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rsi	 RIP: 44112f	 Bytes: 4
  %loadMem_44112f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44112f = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44112f)
  store %struct.Memory* %call_44112f, %struct.Memory** %MEMORY

  ; Code: callq .memcpy_plt	 RIP: 441133	 Bytes: 5
  %loadMem1_441133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_441133 = call %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_441133, i64 -262211, i64 5, i64 5)
  store %struct.Memory* %call1_441133, %struct.Memory** %MEMORY

  %loadMem2_441133 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_441133 = load i64, i64* %3
  %call2_441133 = call %struct.Memory* @ext_memcpy(%struct.State* %0, i64  %loadPC_441133, %struct.Memory* %loadMem2_441133)
  store %struct.Memory* %call2_441133, %struct.Memory** %MEMORY

  ; Code: .L_441138:	 RIP: 441138	 Bytes: 0
  br label %block_.L_441138
block_.L_441138:

  ; Code: movl $0x1, %ecx	 RIP: 441138	 Bytes: 5
  %loadMem_441138 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441138 = call %struct.Memory* @routine_movl__0x1___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441138)
  store %struct.Memory* %call_441138, %struct.Memory** %MEMORY

  ; Code: leaq -0x2e0(%rbp), %rax	 RIP: 44113d	 Bytes: 7
  %loadMem_44113d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44113d = call %struct.Memory* @routine_leaq_MINUS0x2e0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44113d)
  store %struct.Memory* %call_44113d, %struct.Memory** %MEMORY

  ; Code: movl -0xd40(%rbp), %edi	 RIP: 441144	 Bytes: 6
  %loadMem_441144 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441144 = call %struct.Memory* @routine_movl_MINUS0xd40__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441144)
  store %struct.Memory* %call_441144, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %rdx	 RIP: 44114a	 Bytes: 7
  %loadMem_44114a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44114a = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44114a)
  store %struct.Memory* %call_44114a, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %rdx	 RIP: 441151	 Bytes: 4
  %loadMem_441151 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441151 = call %struct.Memory* @routine_shlq__0x5___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441151)
  store %struct.Memory* %call_441151, %struct.Memory** %MEMORY

  ; Code: addq %rdx, %rax	 RIP: 441155	 Bytes: 3
  %loadMem_441155 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441155 = call %struct.Memory* @routine_addq__rdx___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441155)
  store %struct.Memory* %call_441155, %struct.Memory** %MEMORY

  ; Code: movl 0x10(%rax), %esi	 RIP: 441158	 Bytes: 3
  %loadMem_441158 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441158 = call %struct.Memory* @routine_movl_0x10__rax____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441158)
  store %struct.Memory* %call_441158, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rdx	 RIP: 44115b	 Bytes: 4
  %loadMem_44115b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44115b = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44115b)
  store %struct.Memory* %call_44115b, %struct.Memory** %MEMORY

  ; Code: callq .owl_update_goal	 RIP: 44115f	 Bytes: 5
  %loadMem1_44115f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_44115f = call %struct.Memory* @routine_callq_.owl_update_goal(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_44115f, i64 14465, i64 5, i64 5)
  store %struct.Memory* %call1_44115f, %struct.Memory** %MEMORY

  %loadMem2_44115f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44115f = load i64, i64* %3
  %call2_44115f = call %struct.Memory* @sub_4449e0.owl_update_goal(%struct.State* %0, i64  %loadPC_44115f, %struct.Memory* %loadMem2_44115f)
  store %struct.Memory* %call2_44115f, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rax	 RIP: 441164	 Bytes: 4
  %loadMem_441164 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441164 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441164)
  store %struct.Memory* %call_441164, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x8a4c(%rax)	 RIP: 441168	 Bytes: 10
  %loadMem_441168 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441168 = call %struct.Memory* @routine_movl__0x0__0x8a4c__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441168)
  store %struct.Memory* %call_441168, %struct.Memory** %MEMORY

  ; Code: movl -0xd40(%rbp), %edi	 RIP: 441172	 Bytes: 6
  %loadMem_441172 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441172 = call %struct.Memory* @routine_movl_MINUS0xd40__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441172)
  store %struct.Memory* %call_441172, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rsi	 RIP: 441178	 Bytes: 4
  %loadMem_441178 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441178 = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441178)
  store %struct.Memory* %call_441178, %struct.Memory** %MEMORY

  ; Code: callq .owl_update_boundary_marks	 RIP: 44117c	 Bytes: 5
  %loadMem1_44117c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_44117c = call %struct.Memory* @routine_callq_.owl_update_boundary_marks(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_44117c, i64 14884, i64 5, i64 5)
  store %struct.Memory* %call1_44117c, %struct.Memory** %MEMORY

  %loadMem2_44117c = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44117c = load i64, i64* %3
  %call2_44117c = call %struct.Memory* @sub_444ba0.owl_update_boundary_marks(%struct.State* %0, i64  %loadPC_44117c, %struct.Memory* %loadMem2_44117c)
  store %struct.Memory* %call2_44117c, %struct.Memory** %MEMORY

  ; Code: leaq -0x6b4(%rbp), %r9	 RIP: 441181	 Bytes: 7
  %loadMem_441181 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441181 = call %struct.Memory* @routine_leaq_MINUS0x6b4__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441181)
  store %struct.Memory* %call_441181, %struct.Memory** %MEMORY

  ; Code: leaq -0x6b0(%rbp), %rax	 RIP: 441188	 Bytes: 7
  %loadMem_441188 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441188 = call %struct.Memory* @routine_leaq_MINUS0x6b0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441188)
  store %struct.Memory* %call_441188, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 44118f	 Bytes: 2
  %loadMem_44118f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44118f = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44118f)
  store %struct.Memory* %call_44118f, %struct.Memory** %MEMORY

  ; Code: movl %ecx, %edx	 RIP: 441191	 Bytes: 2
  %loadMem_441191 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441191 = call %struct.Memory* @routine_movl__ecx___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441191)
  store %struct.Memory* %call_441191, %struct.Memory** %MEMORY

  ; Code: xorl %ecx, %ecx	 RIP: 441193	 Bytes: 2
  %loadMem_441193 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441193 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441193)
  store %struct.Memory* %call_441193, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %edi	 RIP: 441195	 Bytes: 3
  %loadMem_441195 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441195 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441195)
  store %struct.Memory* %call_441195, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 441198	 Bytes: 3
  %loadMem_441198 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441198 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441198)
  store %struct.Memory* %call_441198, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %r8	 RIP: 44119b	 Bytes: 4
  %loadMem_44119b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44119b = call %struct.Memory* @routine_movq_MINUS0x30__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44119b)
  store %struct.Memory* %call_44119b, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %r10	 RIP: 44119f	 Bytes: 4
  %loadMem_44119f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44119f = call %struct.Memory* @routine_movq_MINUS0x28__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44119f)
  store %struct.Memory* %call_44119f, %struct.Memory** %MEMORY

  ; Code: movl -0x34(%rbp), %r11d	 RIP: 4411a3	 Bytes: 4
  %loadMem_4411a3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4411a3 = call %struct.Memory* @routine_movl_MINUS0x34__rbp____r11d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4411a3)
  store %struct.Memory* %call_4411a3, %struct.Memory** %MEMORY

  ; Code: movl -0x58(%rbp), %ebx	 RIP: 4411a7	 Bytes: 3
  %loadMem_4411a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4411a7 = call %struct.Memory* @routine_movl_MINUS0x58__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4411a7)
  store %struct.Memory* %call_4411a7, %struct.Memory** %MEMORY

  ; Code: movq %rdx, -0xdd0(%rbp)	 RIP: 4411aa	 Bytes: 7
  %loadMem_4411aa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4411aa = call %struct.Memory* @routine_movq__rdx__MINUS0xdd0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4411aa)
  store %struct.Memory* %call_4411aa, %struct.Memory** %MEMORY

  ; Code: movq %r8, %rdx	 RIP: 4411b1	 Bytes: 3
  %loadMem_4411b1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4411b1 = call %struct.Memory* @routine_movq__r8___rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4411b1)
  store %struct.Memory* %call_4411b1, %struct.Memory** %MEMORY

  ; Code: movl %ecx, -0xdd4(%rbp)	 RIP: 4411b4	 Bytes: 6
  %loadMem_4411b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4411b4 = call %struct.Memory* @routine_movl__ecx__MINUS0xdd4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4411b4)
  store %struct.Memory* %call_4411b4, %struct.Memory** %MEMORY

  ; Code: movq %r10, %rcx	 RIP: 4411ba	 Bytes: 3
  %loadMem_4411ba = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4411ba = call %struct.Memory* @routine_movq__r10___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4411ba)
  store %struct.Memory* %call_4411ba, %struct.Memory** %MEMORY

  ; Code: movl %r11d, %r8d	 RIP: 4411bd	 Bytes: 3
  %loadMem_4411bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4411bd = call %struct.Memory* @routine_movl__r11d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4411bd)
  store %struct.Memory* %call_4411bd, %struct.Memory** %MEMORY

  ; Code: movq %rax, (%rsp)	 RIP: 4411c0	 Bytes: 4
  %loadMem_4411c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4411c0 = call %struct.Memory* @routine_movq__rax____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4411c0)
  store %struct.Memory* %call_4411c0, %struct.Memory** %MEMORY

  ; Code: movq $0x0, 0x8(%rsp)	 RIP: 4411c4	 Bytes: 9
  %loadMem_4411c4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4411c4 = call %struct.Memory* @routine_movq__0x0__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4411c4)
  store %struct.Memory* %call_4411c4, %struct.Memory** %MEMORY

  ; Code: movl $0x0, 0x10(%rsp)	 RIP: 4411cd	 Bytes: 8
  %loadMem_4411cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4411cd = call %struct.Memory* @routine_movl__0x0__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4411cd)
  store %struct.Memory* %call_4411cd, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 4411d5	 Bytes: 4
  %loadMem_4411d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4411d5 = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4411d5)
  store %struct.Memory* %call_4411d5, %struct.Memory** %MEMORY

  ; Code: callq .do_owl_analyze_semeai	 RIP: 4411d9	 Bytes: 5
  %loadMem1_4411d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4411d9 = call %struct.Memory* @routine_callq_.do_owl_analyze_semeai(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4411d9, i64 -9193, i64 5, i64 5)
  store %struct.Memory* %call1_4411d9, %struct.Memory** %MEMORY

  %loadMem2_4411d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4411d9 = load i64, i64* %3
  %call2_4411d9 = call %struct.Memory* @sub_43edf0.do_owl_analyze_semeai(%struct.State* %0, i64  %loadPC_4411d9, %struct.Memory* %loadMem2_4411d9)
  store %struct.Memory* %call2_4411d9, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x58(%rbp)	 RIP: 4411de	 Bytes: 4
  %loadMem_4411de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4411de = call %struct.Memory* @routine_cmpl__0x0__MINUS0x58__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4411de)
  store %struct.Memory* %call_4411de, %struct.Memory** %MEMORY

  ; Code: je .L_44120d	 RIP: 4411e2	 Bytes: 6
  %loadMem_4411e2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4411e2 = call %struct.Memory* @routine_je_.L_44120d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4411e2, i8* %BRANCH_TAKEN, i64 43, i64 6, i64 6)
  store %struct.Memory* %call_4411e2, %struct.Memory** %MEMORY

  %loadBr_4411e2 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4411e2 = icmp eq i8 %loadBr_4411e2, 1
  br i1 %cmpBr_4411e2, label %block_.L_44120d, label %block_4411e8

block_4411e8:
  ; Code: cmpl $0xd, 0xb54ce4	 RIP: 4411e8	 Bytes: 8
  %loadMem_4411e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4411e8 = call %struct.Memory* @routine_cmpl__0xd__0xb54ce4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4411e8)
  store %struct.Memory* %call_4411e8, %struct.Memory** %MEMORY

  ; Code: jg .L_44120d	 RIP: 4411f0	 Bytes: 6
  %loadMem_4411f0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4411f0 = call %struct.Memory* @routine_jg_.L_44120d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4411f0, i8* %BRANCH_TAKEN, i64 29, i64 6, i64 6)
  store %struct.Memory* %call_4411f0, %struct.Memory** %MEMORY

  %loadBr_4411f0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4411f0 = icmp eq i8 %loadBr_4411f0, 1
  br i1 %cmpBr_4411f0, label %block_.L_44120d, label %block_4411f6

block_4411f6:
  ; Code: leaq -0x30(%rbp), %rdi	 RIP: 4411f6	 Bytes: 4
  %loadMem_4411f6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4411f6 = call %struct.Memory* @routine_leaq_MINUS0x30__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4411f6)
  store %struct.Memory* %call_4411f6, %struct.Memory** %MEMORY

  ; Code: callq .pop_owl	 RIP: 4411fa	 Bytes: 5
  %loadMem1_4411fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4411fa = call %struct.Memory* @routine_callq_.pop_owl(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4411fa, i64 15190, i64 5, i64 5)
  store %struct.Memory* %call1_4411fa, %struct.Memory** %MEMORY

  %loadMem2_4411fa = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4411fa = load i64, i64* %3
  %call2_4411fa = call %struct.Memory* @sub_444d50.pop_owl(%struct.State* %0, i64  %loadPC_4411fa, %struct.Memory* %loadMem2_4411fa)
  store %struct.Memory* %call2_4411fa, %struct.Memory** %MEMORY

  ; Code: leaq -0x28(%rbp), %rdi	 RIP: 4411ff	 Bytes: 4
  %loadMem_4411ff = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4411ff = call %struct.Memory* @routine_leaq_MINUS0x28__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4411ff)
  store %struct.Memory* %call_4411ff, %struct.Memory** %MEMORY

  ; Code: callq .pop_owl	 RIP: 441203	 Bytes: 5
  %loadMem1_441203 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_441203 = call %struct.Memory* @routine_callq_.pop_owl(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_441203, i64 15181, i64 5, i64 5)
  store %struct.Memory* %call1_441203, %struct.Memory** %MEMORY

  %loadMem2_441203 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_441203 = load i64, i64* %3
  %call2_441203 = call %struct.Memory* @sub_444d50.pop_owl(%struct.State* %0, i64  %loadPC_441203, %struct.Memory* %loadMem2_441203)
  store %struct.Memory* %call2_441203, %struct.Memory** %MEMORY

  ; Code: jmpq .L_441224	 RIP: 441208	 Bytes: 5
  %loadMem_441208 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441208 = call %struct.Memory* @routine_jmpq_.L_441224(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441208, i64 28, i64 5)
  store %struct.Memory* %call_441208, %struct.Memory** %MEMORY

  br label %block_.L_441224

  ; Code: .L_44120d:	 RIP: 44120d	 Bytes: 0
block_.L_44120d:

  ; Code: movl $0x190, %eax	 RIP: 44120d	 Bytes: 5
  %loadMem_44120d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44120d = call %struct.Memory* @routine_movl__0x190___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44120d)
  store %struct.Memory* %call_44120d, %struct.Memory** %MEMORY

  ; Code: movl %eax, %edx	 RIP: 441212	 Bytes: 2
  %loadMem_441212 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441212 = call %struct.Memory* @routine_movl__eax___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441212)
  store %struct.Memory* %call_441212, %struct.Memory** %MEMORY

  ; Code: leaq -0x4d0(%rbp), %rsi	 RIP: 441214	 Bytes: 7
  %loadMem_441214 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441214 = call %struct.Memory* @routine_leaq_MINUS0x4d0__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441214)
  store %struct.Memory* %call_441214, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %rdi	 RIP: 44121b	 Bytes: 4
  %loadMem_44121b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44121b = call %struct.Memory* @routine_movq_MINUS0x28__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44121b)
  store %struct.Memory* %call_44121b, %struct.Memory** %MEMORY

  ; Code: callq .memcpy_plt	 RIP: 44121f	 Bytes: 5
  %loadMem1_44121f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_44121f = call %struct.Memory* @routine_callq_.memcpy_plt(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_44121f, i64 -262447, i64 5, i64 5)
  store %struct.Memory* %call1_44121f, %struct.Memory** %MEMORY

  %loadMem2_44121f = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44121f = load i64, i64* %3
  %call2_44121f = call %struct.Memory* @ext_memcpy(%struct.State* %0, i64  %loadPC_44121f, %struct.Memory* %loadMem2_44121f)
  store %struct.Memory* %call2_44121f, %struct.Memory** %MEMORY

  ; Code: .L_441224:	 RIP: 441224	 Bytes: 0
  br label %block_.L_441224
block_.L_441224:

  ; Code: jmpq .L_441229	 RIP: 441224	 Bytes: 5
  %loadMem_441224 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441224 = call %struct.Memory* @routine_jmpq_.L_441229(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441224, i64 5, i64 5)
  store %struct.Memory* %call_441224, %struct.Memory** %MEMORY

  br label %block_.L_441229

  ; Code: .L_441229:	 RIP: 441229	 Bytes: 0
block_.L_441229:

  ; Code: callq .popgo	 RIP: 441229	 Bytes: 5
  %loadMem1_441229 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_441229 = call %struct.Memory* @routine_callq_.popgo(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_441229, i64 -210121, i64 5, i64 5)
  store %struct.Memory* %call1_441229, %struct.Memory** %MEMORY

  %loadMem2_441229 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_441229 = load i64, i64* %3
  %call2_441229 = call %struct.Memory* @sub_40dd60.popgo(%struct.State* %0, i64  %loadPC_441229, %struct.Memory* %loadMem2_441229)
  store %struct.Memory* %call2_441229, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x6b4(%rbp)	 RIP: 44122e	 Bytes: 7
  %loadMem_44122e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44122e = call %struct.Memory* @routine_cmpl__0x0__MINUS0x6b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44122e)
  store %struct.Memory* %call_44122e, %struct.Memory** %MEMORY

  ; Code: jne .L_441333	 RIP: 441235	 Bytes: 6
  %loadMem_441235 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441235 = call %struct.Memory* @routine_jne_.L_441333(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441235, i8* %BRANCH_TAKEN, i64 254, i64 6, i64 6)
  store %struct.Memory* %call_441235, %struct.Memory** %MEMORY

  %loadBr_441235 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441235 = icmp eq i8 %loadBr_441235, 1
  br i1 %cmpBr_441235, label %block_.L_441333, label %block_44123b

block_44123b:
  ; Code: cmpl $0x1, -0x6b0(%rbp)	 RIP: 44123b	 Bytes: 7
  %loadMem_44123b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44123b = call %struct.Memory* @routine_cmpl__0x1__MINUS0x6b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44123b)
  store %struct.Memory* %call_44123b, %struct.Memory** %MEMORY

  ; Code: jne .L_441333	 RIP: 441242	 Bytes: 6
  %loadMem_441242 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441242 = call %struct.Memory* @routine_jne_.L_441333(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441242, i8* %BRANCH_TAKEN, i64 241, i64 6, i64 6)
  store %struct.Memory* %call_441242, %struct.Memory** %MEMORY

  %loadBr_441242 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441242 = icmp eq i8 %loadBr_441242, 1
  br i1 %cmpBr_441242, label %block_.L_441333, label %block_441248

block_441248:
  ; Code: movq -0x40(%rbp), %rax	 RIP: 441248	 Bytes: 4
  %loadMem_441248 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441248 = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441248)
  store %struct.Memory* %call_441248, %struct.Memory** %MEMORY

  ; Code: movl $0x1, (%rax)	 RIP: 44124c	 Bytes: 6
  %loadMem_44124c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44124c = call %struct.Memory* @routine_movl__0x1____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44124c)
  store %struct.Memory* %call_44124c, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rax	 RIP: 441252	 Bytes: 4
  %loadMem_441252 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441252 = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441252)
  store %struct.Memory* %call_441252, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 441256	 Bytes: 6
  %loadMem_441256 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441256 = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441256)
  store %struct.Memory* %call_441256, %struct.Memory** %MEMORY

  ; Code: movl -0xd40(%rbp), %ecx	 RIP: 44125c	 Bytes: 6
  %loadMem_44125c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44125c = call %struct.Memory* @routine_movl_MINUS0xd40__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44125c)
  store %struct.Memory* %call_44125c, %struct.Memory** %MEMORY

  ; Code: movq -0x50(%rbp), %rax	 RIP: 441262	 Bytes: 4
  %loadMem_441262 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441262 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441262)
  store %struct.Memory* %call_441262, %struct.Memory** %MEMORY

  ; Code: movl %ecx, (%rax)	 RIP: 441266	 Bytes: 2
  %loadMem_441266 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441266 = call %struct.Memory* @routine_movl__ecx____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441266)
  store %struct.Memory* %call_441266, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, 0xab0ef8	 RIP: 441268	 Bytes: 9
  %loadMem_441268 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441268 = call %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441268)
  store %struct.Memory* %call_441268, %struct.Memory** %MEMORY

  ; Code: je .L_4412b4	 RIP: 441271	 Bytes: 6
  %loadMem_441271 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441271 = call %struct.Memory* @routine_je_.L_4412b4(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441271, i8* %BRANCH_TAKEN, i64 67, i64 6, i64 6)
  store %struct.Memory* %call_441271, %struct.Memory** %MEMORY

  %loadBr_441271 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441271 = icmp eq i8 %loadBr_441271, 1
  br i1 %cmpBr_441271, label %block_.L_4412b4, label %block_441277

block_441277:
  ; Code: movl $0x1, %r8d	 RIP: 441277	 Bytes: 6
  %loadMem_441277 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441277 = call %struct.Memory* @routine_movl__0x1___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441277)
  store %struct.Memory* %call_441277, %struct.Memory** %MEMORY

  ; Code: leaq -0x2e0(%rbp), %rax	 RIP: 44127d	 Bytes: 7
  %loadMem_44127d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44127d = call %struct.Memory* @routine_leaq_MINUS0x2e0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44127d)
  store %struct.Memory* %call_44127d, %struct.Memory** %MEMORY

  ; Code: movq -0x6d0(%rbp), %rdi	 RIP: 441284	 Bytes: 7
  %loadMem_441284 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441284 = call %struct.Memory* @routine_movq_MINUS0x6d0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441284)
  store %struct.Memory* %call_441284, %struct.Memory** %MEMORY

  ; Code: movl -0x6d4(%rbp), %esi	 RIP: 44128b	 Bytes: 6
  %loadMem_44128b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44128b = call %struct.Memory* @routine_movl_MINUS0x6d4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44128b)
  store %struct.Memory* %call_44128b, %struct.Memory** %MEMORY

  ; Code: movl -0x6d8(%rbp), %edx	 RIP: 441291	 Bytes: 6
  %loadMem_441291 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441291 = call %struct.Memory* @routine_movl_MINUS0x6d8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441291)
  store %struct.Memory* %call_441291, %struct.Memory** %MEMORY

  ; Code: movl -0xd40(%rbp), %ecx	 RIP: 441297	 Bytes: 6
  %loadMem_441297 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441297 = call %struct.Memory* @routine_movl_MINUS0xd40__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441297)
  store %struct.Memory* %call_441297, %struct.Memory** %MEMORY

  ; Code: movslq -0x684(%rbp), %r9	 RIP: 44129d	 Bytes: 7
  %loadMem_44129d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44129d = call %struct.Memory* @routine_movslq_MINUS0x684__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44129d)
  store %struct.Memory* %call_44129d, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r9	 RIP: 4412a4	 Bytes: 4
  %loadMem_4412a4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4412a4 = call %struct.Memory* @routine_shlq__0x5___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4412a4)
  store %struct.Memory* %call_4412a4, %struct.Memory** %MEMORY

  ; Code: addq %r9, %rax	 RIP: 4412a8	 Bytes: 3
  %loadMem_4412a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4412a8 = call %struct.Memory* @routine_addq__r9___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4412a8)
  store %struct.Memory* %call_4412a8, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %r9	 RIP: 4412ab	 Bytes: 4
  %loadMem_4412ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4412ab = call %struct.Memory* @routine_movq_0x8__rax____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4412ab)
  store %struct.Memory* %call_4412ab, %struct.Memory** %MEMORY

  ; Code: callq .sgf_trace2	 RIP: 4412af	 Bytes: 5
  %loadMem1_4412af = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4412af = call %struct.Memory* @routine_callq_.sgf_trace2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4412af, i64 -167823, i64 5, i64 5)
  store %struct.Memory* %call1_4412af, %struct.Memory** %MEMORY

  %loadMem2_4412af = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4412af = load i64, i64* %3
  %call2_4412af = call %struct.Memory* @sub_418320.sgf_trace2(%struct.State* %0, i64  %loadPC_4412af, %struct.Memory* %loadMem2_4412af)
  store %struct.Memory* %call2_4412af, %struct.Memory** %MEMORY

  ; Code: .L_4412b4:	 RIP: 4412b4	 Bytes: 0
  br label %block_.L_4412b4
block_.L_4412b4:

  ; Code: leaq -0x220(%rbp), %rsi	 RIP: 4412b4	 Bytes: 7
  %loadMem_4412b4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4412b4 = call %struct.Memory* @routine_leaq_MINUS0x220__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4412b4)
  store %struct.Memory* %call_4412b4, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %edi	 RIP: 4412bb	 Bytes: 3
  %loadMem_4412bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4412bb = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4412bb)
  store %struct.Memory* %call_4412bb, %struct.Memory** %MEMORY

  ; Code: callq .close_pattern_list	 RIP: 4412be	 Bytes: 5
  %loadMem1_4412be = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4412be = call %struct.Memory* @routine_callq_.close_pattern_list(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4412be, i64 13090, i64 5, i64 5)
  store %struct.Memory* %call1_4412be, %struct.Memory** %MEMORY

  %loadMem2_4412be = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4412be = load i64, i64* %3
  %call2_4412be = call %struct.Memory* @sub_4445e0.close_pattern_list(%struct.State* %0, i64  %loadPC_4412be, %struct.Memory* %loadMem2_4412be)
  store %struct.Memory* %call2_4412be, %struct.Memory** %MEMORY

  ; Code: leaq -0x200(%rbp), %rsi	 RIP: 4412c3	 Bytes: 7
  %loadMem_4412c3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4412c3 = call %struct.Memory* @routine_leaq_MINUS0x200__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4412c3)
  store %struct.Memory* %call_4412c3, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %edi	 RIP: 4412ca	 Bytes: 3
  %loadMem_4412ca = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4412ca = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4412ca)
  store %struct.Memory* %call_4412ca, %struct.Memory** %MEMORY

  ; Code: callq .close_pattern_list	 RIP: 4412cd	 Bytes: 5
  %loadMem1_4412cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_4412cd = call %struct.Memory* @routine_callq_.close_pattern_list(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_4412cd, i64 13075, i64 5, i64 5)
  store %struct.Memory* %call1_4412cd, %struct.Memory** %MEMORY

  %loadMem2_4412cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_4412cd = load i64, i64* %3
  %call2_4412cd = call %struct.Memory* @sub_4445e0.close_pattern_list(%struct.State* %0, i64  %loadPC_4412cd, %struct.Memory* %loadMem2_4412cd)
  store %struct.Memory* %call2_4412cd, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, -0x50(%rbp)	 RIP: 4412d2	 Bytes: 5
  %loadMem_4412d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4412d2 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4412d2)
  store %struct.Memory* %call_4412d2, %struct.Memory** %MEMORY

  ; Code: je .L_4412e9	 RIP: 4412d7	 Bytes: 6
  %loadMem_4412d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4412d7 = call %struct.Memory* @routine_je_.L_4412e9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4412d7, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_4412d7, %struct.Memory** %MEMORY

  %loadBr_4412d7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4412d7 = icmp eq i8 %loadBr_4412d7, 1
  br i1 %cmpBr_4412d7, label %block_.L_4412e9, label %block_4412dd

block_4412dd:
  ; Code: movl -0xd40(%rbp), %eax	 RIP: 4412dd	 Bytes: 6
  %loadMem_4412dd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4412dd = call %struct.Memory* @routine_movl_MINUS0xd40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4412dd)
  store %struct.Memory* %call_4412dd, %struct.Memory** %MEMORY

  ; Code: movq -0x50(%rbp), %rcx	 RIP: 4412e3	 Bytes: 4
  %loadMem_4412e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4412e3 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4412e3)
  store %struct.Memory* %call_4412e3, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 4412e7	 Bytes: 2
  %loadMem_4412e7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4412e7 = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4412e7)
  store %struct.Memory* %call_4412e7, %struct.Memory** %MEMORY

  ; Code: .L_4412e9:	 RIP: 4412e9	 Bytes: 0
  br label %block_.L_4412e9
block_.L_4412e9:

  ; Code: cmpq $0x0, -0x6c0(%rbp)	 RIP: 4412e9	 Bytes: 8
  %loadMem_4412e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4412e9 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x6c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4412e9)
  store %struct.Memory* %call_4412e9, %struct.Memory** %MEMORY

  ; Code: je .L_44132e	 RIP: 4412f1	 Bytes: 6
  %loadMem_4412f1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4412f1 = call %struct.Memory* @routine_je_.L_44132e(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4412f1, i8* %BRANCH_TAKEN, i64 61, i64 6, i64 6)
  store %struct.Memory* %call_4412f1, %struct.Memory** %MEMORY

  %loadBr_4412f1 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4412f1 = icmp eq i8 %loadBr_4412f1, 1
  br i1 %cmpBr_4412f1, label %block_.L_44132e, label %block_4412f7

block_4412f7:
  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 4412f7	 Bytes: 7
  %loadMem_4412f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4412f7 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4412f7)
  store %struct.Memory* %call_4412f7, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 4412fe	 Bytes: 3
  %loadMem_4412fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4412fe = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4412fe)
  store %struct.Memory* %call_4412fe, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %ecx	 RIP: 441301	 Bytes: 6
  %loadMem_441301 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441301 = call %struct.Memory* @routine_andl__0x3ff___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441301)
  store %struct.Memory* %call_441301, %struct.Memory** %MEMORY

  ; Code: orl $0x20000000, %ecx	 RIP: 441307	 Bytes: 6
  %loadMem_441307 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441307 = call %struct.Memory* @routine_orl__0x20000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441307)
  store %struct.Memory* %call_441307, %struct.Memory** %MEMORY

  ; Code: orl $0x1000000, %ecx	 RIP: 44130d	 Bytes: 6
  %loadMem_44130d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44130d = call %struct.Memory* @routine_orl__0x1000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44130d)
  store %struct.Memory* %call_44130d, %struct.Memory** %MEMORY

  ; Code: movl -0xd40(%rbp), %edx	 RIP: 441313	 Bytes: 6
  %loadMem_441313 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441313 = call %struct.Memory* @routine_movl_MINUS0xd40__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441313)
  store %struct.Memory* %call_441313, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %edx	 RIP: 441319	 Bytes: 6
  %loadMem_441319 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441319 = call %struct.Memory* @routine_andl__0x3ff___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441319)
  store %struct.Memory* %call_441319, %struct.Memory** %MEMORY

  ; Code: shll $0xa, %edx	 RIP: 44131f	 Bytes: 3
  %loadMem_44131f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44131f = call %struct.Memory* @routine_shll__0xa___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44131f)
  store %struct.Memory* %call_44131f, %struct.Memory** %MEMORY

  ; Code: orl %edx, %ecx	 RIP: 441322	 Bytes: 2
  %loadMem_441322 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441322 = call %struct.Memory* @routine_orl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441322)
  store %struct.Memory* %call_441322, %struct.Memory** %MEMORY

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 441324	 Bytes: 7
  %loadMem_441324 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441324 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441324)
  store %struct.Memory* %call_441324, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x4(%rax)	 RIP: 44132b	 Bytes: 3
  %loadMem_44132b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44132b = call %struct.Memory* @routine_movl__ecx__0x4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44132b)
  store %struct.Memory* %call_44132b, %struct.Memory** %MEMORY

  ; Code: .L_44132e:	 RIP: 44132e	 Bytes: 0
  br label %block_.L_44132e
block_.L_44132e:

  ; Code: jmpq .L_441708	 RIP: 44132e	 Bytes: 5
  %loadMem_44132e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44132e = call %struct.Memory* @routine_jmpq_.L_441708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44132e, i64 986, i64 5)
  store %struct.Memory* %call_44132e, %struct.Memory** %MEMORY

  br label %block_.L_441708

  ; Code: .L_441333:	 RIP: 441333	 Bytes: 0
block_.L_441333:

  ; Code: cmpl $0x7, -0x6b0(%rbp)	 RIP: 441333	 Bytes: 7
  %loadMem_441333 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441333 = call %struct.Memory* @routine_cmpl__0x7__MINUS0x6b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441333)
  store %struct.Memory* %call_441333, %struct.Memory** %MEMORY

  ; Code: jne .L_441386	 RIP: 44133a	 Bytes: 6
  %loadMem_44133a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44133a = call %struct.Memory* @routine_jne_.L_441386(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44133a, i8* %BRANCH_TAKEN, i64 76, i64 6, i64 6)
  store %struct.Memory* %call_44133a, %struct.Memory** %MEMORY

  %loadBr_44133a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44133a = icmp eq i8 %loadBr_44133a, 1
  br i1 %cmpBr_44133a, label %block_.L_441386, label %block_441340

block_441340:
  ; Code: cmpl $0x7, -0x6b4(%rbp)	 RIP: 441340	 Bytes: 7
  %loadMem_441340 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441340 = call %struct.Memory* @routine_cmpl__0x7__MINUS0x6b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441340)
  store %struct.Memory* %call_441340, %struct.Memory** %MEMORY

  ; Code: jne .L_441386	 RIP: 441347	 Bytes: 6
  %loadMem_441347 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441347 = call %struct.Memory* @routine_jne_.L_441386(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441347, i8* %BRANCH_TAKEN, i64 63, i64 6, i64 6)
  store %struct.Memory* %call_441347, %struct.Memory** %MEMORY

  %loadBr_441347 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441347 = icmp eq i8 %loadBr_441347, 1
  br i1 %cmpBr_441347, label %block_.L_441386, label %block_44134d

block_44134d:
  ; Code: cmpl $0x1, -0x6a4(%rbp)	 RIP: 44134d	 Bytes: 7
  %loadMem_44134d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44134d = call %struct.Memory* @routine_cmpl__0x1__MINUS0x6a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44134d)
  store %struct.Memory* %call_44134d, %struct.Memory** %MEMORY

  ; Code: je .L_441386	 RIP: 441354	 Bytes: 6
  %loadMem_441354 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441354 = call %struct.Memory* @routine_je_.L_441386(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441354, i8* %BRANCH_TAKEN, i64 50, i64 6, i64 6)
  store %struct.Memory* %call_441354, %struct.Memory** %MEMORY

  %loadBr_441354 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441354 = icmp eq i8 %loadBr_441354, 1
  br i1 %cmpBr_441354, label %block_.L_441386, label %block_44135a

block_44135a:
  ; Code: movl $0x7, -0x6a4(%rbp)	 RIP: 44135a	 Bytes: 10
  %loadMem_44135a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44135a = call %struct.Memory* @routine_movl__0x7__MINUS0x6a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44135a)
  store %struct.Memory* %call_44135a, %struct.Memory** %MEMORY

  ; Code: movl $0x7, -0x6a8(%rbp)	 RIP: 441364	 Bytes: 10
  %loadMem_441364 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441364 = call %struct.Memory* @routine_movl__0x7__MINUS0x6a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441364)
  store %struct.Memory* %call_441364, %struct.Memory** %MEMORY

  ; Code: movl -0xd40(%rbp), %eax	 RIP: 44136e	 Bytes: 6
  %loadMem_44136e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44136e = call %struct.Memory* @routine_movl_MINUS0xd40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44136e)
  store %struct.Memory* %call_44136e, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6ac(%rbp)	 RIP: 441374	 Bytes: 6
  %loadMem_441374 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441374 = call %struct.Memory* @routine_movl__eax__MINUS0x6ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441374)
  store %struct.Memory* %call_441374, %struct.Memory** %MEMORY

  ; Code: movl -0x684(%rbp), %eax	 RIP: 44137a	 Bytes: 6
  %loadMem_44137a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44137a = call %struct.Memory* @routine_movl_MINUS0x684__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44137a)
  store %struct.Memory* %call_44137a, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6b8(%rbp)	 RIP: 441380	 Bytes: 6
  %loadMem_441380 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441380 = call %struct.Memory* @routine_movl__eax__MINUS0x6b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441380)
  store %struct.Memory* %call_441380, %struct.Memory** %MEMORY

  ; Code: .L_441386:	 RIP: 441386	 Bytes: 0
  br label %block_.L_441386
block_.L_441386:

  ; Code: cmpl $0x0, -0x6b0(%rbp)	 RIP: 441386	 Bytes: 7
  %loadMem_441386 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441386 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x6b0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441386)
  store %struct.Memory* %call_441386, %struct.Memory** %MEMORY

  ; Code: jne .L_4413d9	 RIP: 44138d	 Bytes: 6
  %loadMem_44138d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44138d = call %struct.Memory* @routine_jne_.L_4413d9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44138d, i8* %BRANCH_TAKEN, i64 76, i64 6, i64 6)
  store %struct.Memory* %call_44138d, %struct.Memory** %MEMORY

  %loadBr_44138d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44138d = icmp eq i8 %loadBr_44138d, 1
  br i1 %cmpBr_44138d, label %block_.L_4413d9, label %block_441393

block_441393:
  ; Code: cmpl $0x1, -0x6b4(%rbp)	 RIP: 441393	 Bytes: 7
  %loadMem_441393 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441393 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x6b4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441393)
  store %struct.Memory* %call_441393, %struct.Memory** %MEMORY

  ; Code: jne .L_4413d9	 RIP: 44139a	 Bytes: 6
  %loadMem_44139a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44139a = call %struct.Memory* @routine_jne_.L_4413d9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44139a, i8* %BRANCH_TAKEN, i64 63, i64 6, i64 6)
  store %struct.Memory* %call_44139a, %struct.Memory** %MEMORY

  %loadBr_44139a = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44139a = icmp eq i8 %loadBr_44139a, 1
  br i1 %cmpBr_44139a, label %block_.L_4413d9, label %block_4413a0

block_4413a0:
  ; Code: cmpl $0x3, -0x6a4(%rbp)	 RIP: 4413a0	 Bytes: 7
  %loadMem_4413a0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4413a0 = call %struct.Memory* @routine_cmpl__0x3__MINUS0x6a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4413a0)
  store %struct.Memory* %call_4413a0, %struct.Memory** %MEMORY

  ; Code: jne .L_4413d9	 RIP: 4413a7	 Bytes: 6
  %loadMem_4413a7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4413a7 = call %struct.Memory* @routine_jne_.L_4413d9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4413a7, i8* %BRANCH_TAKEN, i64 50, i64 6, i64 6)
  store %struct.Memory* %call_4413a7, %struct.Memory** %MEMORY

  %loadBr_4413a7 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4413a7 = icmp eq i8 %loadBr_4413a7, 1
  br i1 %cmpBr_4413a7, label %block_.L_4413d9, label %block_4413ad

block_4413ad:
  ; Code: movl $0x0, -0x6a4(%rbp)	 RIP: 4413ad	 Bytes: 10
  %loadMem_4413ad = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4413ad = call %struct.Memory* @routine_movl__0x0__MINUS0x6a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4413ad)
  store %struct.Memory* %call_4413ad, %struct.Memory** %MEMORY

  ; Code: movl $0x1, -0x6a8(%rbp)	 RIP: 4413b7	 Bytes: 10
  %loadMem_4413b7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4413b7 = call %struct.Memory* @routine_movl__0x1__MINUS0x6a8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4413b7)
  store %struct.Memory* %call_4413b7, %struct.Memory** %MEMORY

  ; Code: movl -0xd40(%rbp), %eax	 RIP: 4413c1	 Bytes: 6
  %loadMem_4413c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4413c1 = call %struct.Memory* @routine_movl_MINUS0xd40__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4413c1)
  store %struct.Memory* %call_4413c1, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6ac(%rbp)	 RIP: 4413c7	 Bytes: 6
  %loadMem_4413c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4413c7 = call %struct.Memory* @routine_movl__eax__MINUS0x6ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4413c7)
  store %struct.Memory* %call_4413c7, %struct.Memory** %MEMORY

  ; Code: movl -0x684(%rbp), %eax	 RIP: 4413cd	 Bytes: 6
  %loadMem_4413cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4413cd = call %struct.Memory* @routine_movl_MINUS0x684__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4413cd)
  store %struct.Memory* %call_4413cd, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x6b8(%rbp)	 RIP: 4413d3	 Bytes: 6
  %loadMem_4413d3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4413d3 = call %struct.Memory* @routine_movl__eax__MINUS0x6b8__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4413d3)
  store %struct.Memory* %call_4413d3, %struct.Memory** %MEMORY

  ; Code: .L_4413d9:	 RIP: 4413d9	 Bytes: 0
  br label %block_.L_4413d9
block_.L_4413d9:

  ; Code: jmpq .L_4413de	 RIP: 4413d9	 Bytes: 5
  %loadMem_4413d9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4413d9 = call %struct.Memory* @routine_jmpq_.L_4413de(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4413d9, i64 5, i64 5)
  store %struct.Memory* %call_4413d9, %struct.Memory** %MEMORY

  br label %block_.L_4413de

  ; Code: .L_4413de:	 RIP: 4413de	 Bytes: 0
block_.L_4413de:

  ; Code: jmpq .L_4413e3	 RIP: 4413de	 Bytes: 5
  %loadMem_4413de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4413de = call %struct.Memory* @routine_jmpq_.L_4413e3(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4413de, i64 5, i64 5)
  store %struct.Memory* %call_4413de, %struct.Memory** %MEMORY

  br label %block_.L_4413e3

  ; Code: .L_4413e3:	 RIP: 4413e3	 Bytes: 0
block_.L_4413e3:

  ; Code: movl -0x684(%rbp), %eax	 RIP: 4413e3	 Bytes: 6
  %loadMem_4413e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4413e3 = call %struct.Memory* @routine_movl_MINUS0x684__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4413e3)
  store %struct.Memory* %call_4413e3, %struct.Memory** %MEMORY

  ; Code: addl $0x1, %eax	 RIP: 4413e9	 Bytes: 3
  %loadMem_4413e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4413e9 = call %struct.Memory* @routine_addl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4413e9)
  store %struct.Memory* %call_4413e9, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0x684(%rbp)	 RIP: 4413ec	 Bytes: 6
  %loadMem_4413ec = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4413ec = call %struct.Memory* @routine_movl__eax__MINUS0x684__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4413ec)
  store %struct.Memory* %call_4413ec, %struct.Memory** %MEMORY

  ; Code: jmpq .L_440fae	 RIP: 4413f2	 Bytes: 5
  %loadMem_4413f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4413f2 = call %struct.Memory* @routine_jmpq_.L_440fae(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4413f2, i64 -1092, i64 5)
  store %struct.Memory* %call_4413f2, %struct.Memory** %MEMORY

  br label %block_.L_440fae

  ; Code: .L_4413f7:	 RIP: 4413f7	 Bytes: 0
block_.L_4413f7:

  ; Code: leaq -0x220(%rbp), %rsi	 RIP: 4413f7	 Bytes: 7
  %loadMem_4413f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4413f7 = call %struct.Memory* @routine_leaq_MINUS0x220__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4413f7)
  store %struct.Memory* %call_4413f7, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %edi	 RIP: 4413fe	 Bytes: 3
  %loadMem_4413fe = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4413fe = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4413fe)
  store %struct.Memory* %call_4413fe, %struct.Memory** %MEMORY

  ; Code: callq .close_pattern_list	 RIP: 441401	 Bytes: 5
  %loadMem1_441401 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_441401 = call %struct.Memory* @routine_callq_.close_pattern_list(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_441401, i64 12767, i64 5, i64 5)
  store %struct.Memory* %call1_441401, %struct.Memory** %MEMORY

  %loadMem2_441401 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_441401 = load i64, i64* %3
  %call2_441401 = call %struct.Memory* @sub_4445e0.close_pattern_list(%struct.State* %0, i64  %loadPC_441401, %struct.Memory* %loadMem2_441401)
  store %struct.Memory* %call2_441401, %struct.Memory** %MEMORY

  ; Code: leaq -0x200(%rbp), %rsi	 RIP: 441406	 Bytes: 7
  %loadMem_441406 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441406 = call %struct.Memory* @routine_leaq_MINUS0x200__rbp____rsi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441406)
  store %struct.Memory* %call_441406, %struct.Memory** %MEMORY

  ; Code: movl -0x5c(%rbp), %edi	 RIP: 44140d	 Bytes: 3
  %loadMem_44140d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44140d = call %struct.Memory* @routine_movl_MINUS0x5c__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44140d)
  store %struct.Memory* %call_44140d, %struct.Memory** %MEMORY

  ; Code: callq .close_pattern_list	 RIP: 441410	 Bytes: 5
  %loadMem1_441410 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_441410 = call %struct.Memory* @routine_callq_.close_pattern_list(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_441410, i64 12752, i64 5, i64 5)
  store %struct.Memory* %call1_441410, %struct.Memory** %MEMORY

  %loadMem2_441410 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_441410 = load i64, i64* %3
  %call2_441410 = call %struct.Memory* @sub_4445e0.close_pattern_list(%struct.State* %0, i64  %loadPC_441410, %struct.Memory* %loadMem2_441410)
  store %struct.Memory* %call2_441410, %struct.Memory** %MEMORY

  ; Code: cmpl $0x3, -0x6a4(%rbp)	 RIP: 441415	 Bytes: 7
  %loadMem_441415 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441415 = call %struct.Memory* @routine_cmpl__0x3__MINUS0x6a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441415)
  store %struct.Memory* %call_441415, %struct.Memory** %MEMORY

  ; Code: jne .L_4414dc	 RIP: 44141c	 Bytes: 6
  %loadMem_44141c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44141c = call %struct.Memory* @routine_jne_.L_4414dc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44141c, i8* %BRANCH_TAKEN, i64 192, i64 6, i64 6)
  store %struct.Memory* %call_44141c, %struct.Memory** %MEMORY

  %loadBr_44141c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44141c = icmp eq i8 %loadBr_44141c, 1
  br i1 %cmpBr_44141c, label %block_.L_4414dc, label %block_441422

block_441422:
  ; Code: cmpl $0x1, -0x54(%rbp)	 RIP: 441422	 Bytes: 4
  %loadMem_441422 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441422 = call %struct.Memory* @routine_cmpl__0x1__MINUS0x54__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441422)
  store %struct.Memory* %call_441422, %struct.Memory** %MEMORY

  ; Code: jne .L_4414dc	 RIP: 441426	 Bytes: 6
  %loadMem_441426 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441426 = call %struct.Memory* @routine_jne_.L_4414dc(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441426, i8* %BRANCH_TAKEN, i64 182, i64 6, i64 6)
  store %struct.Memory* %call_441426, %struct.Memory** %MEMORY

  %loadBr_441426 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441426 = icmp eq i8 %loadBr_441426, 1
  br i1 %cmpBr_441426, label %block_.L_4414dc, label %block_44142c

block_44142c:
  ; Code: movq -0x40(%rbp), %rax	 RIP: 44142c	 Bytes: 4
  %loadMem_44142c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44142c = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44142c)
  store %struct.Memory* %call_44142c, %struct.Memory** %MEMORY

  ; Code: movl $0x7, (%rax)	 RIP: 441430	 Bytes: 6
  %loadMem_441430 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441430 = call %struct.Memory* @routine_movl__0x7____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441430)
  store %struct.Memory* %call_441430, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rax	 RIP: 441436	 Bytes: 4
  %loadMem_441436 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441436 = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441436)
  store %struct.Memory* %call_441436, %struct.Memory** %MEMORY

  ; Code: movl $0x7, (%rax)	 RIP: 44143a	 Bytes: 6
  %loadMem_44143a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44143a = call %struct.Memory* @routine_movl__0x7____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44143a)
  store %struct.Memory* %call_44143a, %struct.Memory** %MEMORY

  ; Code: movq -0x50(%rbp), %rax	 RIP: 441440	 Bytes: 4
  %loadMem_441440 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441440 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441440)
  store %struct.Memory* %call_441440, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 441444	 Bytes: 6
  %loadMem_441444 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441444 = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441444)
  store %struct.Memory* %call_441444, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, 0xab0ef8	 RIP: 44144a	 Bytes: 9
  %loadMem_44144a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44144a = call %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44144a)
  store %struct.Memory* %call_44144a, %struct.Memory** %MEMORY

  ; Code: je .L_441483	 RIP: 441453	 Bytes: 6
  %loadMem_441453 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441453 = call %struct.Memory* @routine_je_.L_441483(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441453, i8* %BRANCH_TAKEN, i64 48, i64 6, i64 6)
  store %struct.Memory* %call_441453, %struct.Memory** %MEMORY

  %loadBr_441453 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441453 = icmp eq i8 %loadBr_441453, 1
  br i1 %cmpBr_441453, label %block_.L_441483, label %block_441459

block_441459:
  ; Code: xorl %ecx, %ecx	 RIP: 441459	 Bytes: 2
  %loadMem_441459 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441459 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441459)
  store %struct.Memory* %call_441459, %struct.Memory** %MEMORY

  ; Code: movl $0x7, %r8d	 RIP: 44145b	 Bytes: 6
  %loadMem_44145b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44145b = call %struct.Memory* @routine_movl__0x7___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44145b)
  store %struct.Memory* %call_44145b, %struct.Memory** %MEMORY

  ; Code: movq $0x57dfe1, %r9	 RIP: 441461	 Bytes: 10
  %loadMem_441461 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441461 = call %struct.Memory* @routine_movq__0x57dfe1___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441461)
  store %struct.Memory* %call_441461, %struct.Memory** %MEMORY

  ; Code: movq -0x6d0(%rbp), %rdi	 RIP: 44146b	 Bytes: 7
  %loadMem_44146b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44146b = call %struct.Memory* @routine_movq_MINUS0x6d0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44146b)
  store %struct.Memory* %call_44146b, %struct.Memory** %MEMORY

  ; Code: movl -0x6d4(%rbp), %esi	 RIP: 441472	 Bytes: 6
  %loadMem_441472 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441472 = call %struct.Memory* @routine_movl_MINUS0x6d4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441472)
  store %struct.Memory* %call_441472, %struct.Memory** %MEMORY

  ; Code: movl -0x6d8(%rbp), %edx	 RIP: 441478	 Bytes: 6
  %loadMem_441478 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441478 = call %struct.Memory* @routine_movl_MINUS0x6d8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441478)
  store %struct.Memory* %call_441478, %struct.Memory** %MEMORY

  ; Code: callq .sgf_trace2	 RIP: 44147e	 Bytes: 5
  %loadMem1_44147e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_44147e = call %struct.Memory* @routine_callq_.sgf_trace2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_44147e, i64 -168286, i64 5, i64 5)
  store %struct.Memory* %call1_44147e, %struct.Memory** %MEMORY

  %loadMem2_44147e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44147e = load i64, i64* %3
  %call2_44147e = call %struct.Memory* @sub_418320.sgf_trace2(%struct.State* %0, i64  %loadPC_44147e, %struct.Memory* %loadMem2_44147e)
  store %struct.Memory* %call2_44147e, %struct.Memory** %MEMORY

  ; Code: .L_441483:	 RIP: 441483	 Bytes: 0
  br label %block_.L_441483
block_.L_441483:

  ; Code: jmpq .L_441488	 RIP: 441483	 Bytes: 5
  %loadMem_441483 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441483 = call %struct.Memory* @routine_jmpq_.L_441488(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441483, i64 5, i64 5)
  store %struct.Memory* %call_441483, %struct.Memory** %MEMORY

  br label %block_.L_441488

  ; Code: .L_441488:	 RIP: 441488	 Bytes: 0
block_.L_441488:

  ; Code: cmpq $0x0, -0x50(%rbp)	 RIP: 441488	 Bytes: 5
  %loadMem_441488 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441488 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441488)
  store %struct.Memory* %call_441488, %struct.Memory** %MEMORY

  ; Code: je .L_44149d	 RIP: 44148d	 Bytes: 6
  %loadMem_44148d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44148d = call %struct.Memory* @routine_je_.L_44149d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44148d, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_44148d, %struct.Memory** %MEMORY

  %loadBr_44148d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44148d = icmp eq i8 %loadBr_44148d, 1
  br i1 %cmpBr_44148d, label %block_.L_44149d, label %block_441493

block_441493:
  ; Code: movq -0x50(%rbp), %rax	 RIP: 441493	 Bytes: 4
  %loadMem_441493 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441493 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441493)
  store %struct.Memory* %call_441493, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 441497	 Bytes: 6
  %loadMem_441497 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441497 = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441497)
  store %struct.Memory* %call_441497, %struct.Memory** %MEMORY

  ; Code: .L_44149d:	 RIP: 44149d	 Bytes: 0
  br label %block_.L_44149d
block_.L_44149d:

  ; Code: cmpq $0x0, -0x6c0(%rbp)	 RIP: 44149d	 Bytes: 8
  %loadMem_44149d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44149d = call %struct.Memory* @routine_cmpq__0x0__MINUS0x6c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44149d)
  store %struct.Memory* %call_44149d, %struct.Memory** %MEMORY

  ; Code: je .L_4414d7	 RIP: 4414a5	 Bytes: 6
  %loadMem_4414a5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414a5 = call %struct.Memory* @routine_je_.L_4414d7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414a5, i8* %BRANCH_TAKEN, i64 50, i64 6, i64 6)
  store %struct.Memory* %call_4414a5, %struct.Memory** %MEMORY

  %loadBr_4414a5 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4414a5 = icmp eq i8 %loadBr_4414a5, 1
  br i1 %cmpBr_4414a5, label %block_.L_4414d7, label %block_4414ab

block_4414ab:
  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 4414ab	 Bytes: 7
  %loadMem_4414ab = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414ab = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414ab)
  store %struct.Memory* %call_4414ab, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 4414b2	 Bytes: 3
  %loadMem_4414b2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414b2 = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414b2)
  store %struct.Memory* %call_4414b2, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %ecx	 RIP: 4414b5	 Bytes: 6
  %loadMem_4414b5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414b5 = call %struct.Memory* @routine_andl__0x3ff___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414b5)
  store %struct.Memory* %call_4414b5, %struct.Memory** %MEMORY

  ; Code: orl $0x20000000, %ecx	 RIP: 4414bb	 Bytes: 6
  %loadMem_4414bb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414bb = call %struct.Memory* @routine_orl__0x20000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414bb)
  store %struct.Memory* %call_4414bb, %struct.Memory** %MEMORY

  ; Code: orl $0x7000000, %ecx	 RIP: 4414c1	 Bytes: 6
  %loadMem_4414c1 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414c1 = call %struct.Memory* @routine_orl__0x7000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414c1)
  store %struct.Memory* %call_4414c1, %struct.Memory** %MEMORY

  ; Code: orl $0x700000, %ecx	 RIP: 4414c7	 Bytes: 6
  %loadMem_4414c7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414c7 = call %struct.Memory* @routine_orl__0x700000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414c7)
  store %struct.Memory* %call_4414c7, %struct.Memory** %MEMORY

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 4414cd	 Bytes: 7
  %loadMem_4414cd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414cd = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414cd)
  store %struct.Memory* %call_4414cd, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x4(%rax)	 RIP: 4414d4	 Bytes: 3
  %loadMem_4414d4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414d4 = call %struct.Memory* @routine_movl__ecx__0x4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414d4)
  store %struct.Memory* %call_4414d4, %struct.Memory** %MEMORY

  ; Code: .L_4414d7:	 RIP: 4414d7	 Bytes: 0
  br label %block_.L_4414d7
block_.L_4414d7:

  ; Code: jmpq .L_441708	 RIP: 4414d7	 Bytes: 5
  %loadMem_4414d7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414d7 = call %struct.Memory* @routine_jmpq_.L_441708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414d7, i64 561, i64 5)
  store %struct.Memory* %call_4414d7, %struct.Memory** %MEMORY

  br label %block_.L_441708

  ; Code: .L_4414dc:	 RIP: 4414dc	 Bytes: 0
block_.L_4414dc:

  ; Code: cmpl $0x3, -0x6a4(%rbp)	 RIP: 4414dc	 Bytes: 7
  %loadMem_4414dc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414dc = call %struct.Memory* @routine_cmpl__0x3__MINUS0x6a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414dc)
  store %struct.Memory* %call_4414dc, %struct.Memory** %MEMORY

  ; Code: jne .L_4415f7	 RIP: 4414e3	 Bytes: 6
  %loadMem_4414e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414e3 = call %struct.Memory* @routine_jne_.L_4415f7(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414e3, i8* %BRANCH_TAKEN, i64 276, i64 6, i64 6)
  store %struct.Memory* %call_4414e3, %struct.Memory** %MEMORY

  %loadBr_4414e3 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4414e3 = icmp eq i8 %loadBr_4414e3, 1
  br i1 %cmpBr_4414e3, label %block_.L_4415f7, label %block_4414e9

block_4414e9:
  ; Code: xorl %eax, %eax	 RIP: 4414e9	 Bytes: 2
  %loadMem_4414e9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414e9 = call %struct.Memory* @routine_xorl__eax___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414e9)
  store %struct.Memory* %call_4414e9, %struct.Memory** %MEMORY

  ; Code: movl %eax, %ecx	 RIP: 4414eb	 Bytes: 2
  %loadMem_4414eb = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414eb = call %struct.Memory* @routine_movl__eax___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414eb)
  store %struct.Memory* %call_4414eb, %struct.Memory** %MEMORY

  ; Code: movl $0x1, %eax	 RIP: 4414ed	 Bytes: 5
  %loadMem_4414ed = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414ed = call %struct.Memory* @routine_movl__0x1___eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414ed)
  store %struct.Memory* %call_4414ed, %struct.Memory** %MEMORY

  ; Code: movl -0x20(%rbp), %edi	 RIP: 4414f2	 Bytes: 3
  %loadMem_4414f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414f2 = call %struct.Memory* @routine_movl_MINUS0x20__rbp____edi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414f2)
  store %struct.Memory* %call_4414f2, %struct.Memory** %MEMORY

  ; Code: movl -0x1c(%rbp), %esi	 RIP: 4414f5	 Bytes: 3
  %loadMem_4414f5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414f5 = call %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414f5)
  store %struct.Memory* %call_4414f5, %struct.Memory** %MEMORY

  ; Code: movq -0x30(%rbp), %rdx	 RIP: 4414f8	 Bytes: 4
  %loadMem_4414f8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414f8 = call %struct.Memory* @routine_movq_MINUS0x30__rbp____rdx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414f8)
  store %struct.Memory* %call_4414f8, %struct.Memory** %MEMORY

  ; Code: movq -0x28(%rbp), %r8	 RIP: 4414fc	 Bytes: 4
  %loadMem_4414fc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4414fc = call %struct.Memory* @routine_movq_MINUS0x28__rbp____r8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4414fc)
  store %struct.Memory* %call_4414fc, %struct.Memory** %MEMORY

  ; Code: movl -0x34(%rbp), %r9d	 RIP: 441500	 Bytes: 4
  %loadMem_441500 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441500 = call %struct.Memory* @routine_movl_MINUS0x34__rbp____r9d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441500)
  store %struct.Memory* %call_441500, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %r10	 RIP: 441504	 Bytes: 4
  %loadMem_441504 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441504 = call %struct.Memory* @routine_movq_MINUS0x48__rbp____r10(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441504)
  store %struct.Memory* %call_441504, %struct.Memory** %MEMORY

  ; Code: movq -0x40(%rbp), %r11	 RIP: 441508	 Bytes: 4
  %loadMem_441508 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441508 = call %struct.Memory* @routine_movq_MINUS0x40__rbp____r11(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441508)
  store %struct.Memory* %call_441508, %struct.Memory** %MEMORY

  ; Code: movl -0x58(%rbp), %ebx	 RIP: 44150c	 Bytes: 3
  %loadMem_44150c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44150c = call %struct.Memory* @routine_movl_MINUS0x58__rbp____ebx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44150c)
  store %struct.Memory* %call_44150c, %struct.Memory** %MEMORY

  ; Code: movq %rcx, -0xde0(%rbp)	 RIP: 44150f	 Bytes: 7
  %loadMem_44150f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44150f = call %struct.Memory* @routine_movq__rcx__MINUS0xde0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44150f)
  store %struct.Memory* %call_44150f, %struct.Memory** %MEMORY

  ; Code: movq %r8, %rcx	 RIP: 441516	 Bytes: 3
  %loadMem_441516 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441516 = call %struct.Memory* @routine_movq__r8___rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441516)
  store %struct.Memory* %call_441516, %struct.Memory** %MEMORY

  ; Code: movl %r9d, %r8d	 RIP: 441519	 Bytes: 3
  %loadMem_441519 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441519 = call %struct.Memory* @routine_movl__r9d___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441519)
  store %struct.Memory* %call_441519, %struct.Memory** %MEMORY

  ; Code: movq %r10, %r9	 RIP: 44151c	 Bytes: 3
  %loadMem_44151c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44151c = call %struct.Memory* @routine_movq__r10___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44151c)
  store %struct.Memory* %call_44151c, %struct.Memory** %MEMORY

  ; Code: movq %r11, (%rsp)	 RIP: 44151f	 Bytes: 4
  %loadMem_44151f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44151f = call %struct.Memory* @routine_movq__r11____rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44151f)
  store %struct.Memory* %call_44151f, %struct.Memory** %MEMORY

  ; Code: movq $0x0, 0x8(%rsp)	 RIP: 441523	 Bytes: 9
  %loadMem_441523 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441523 = call %struct.Memory* @routine_movq__0x0__0x8__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441523)
  store %struct.Memory* %call_441523, %struct.Memory** %MEMORY

  ; Code: movl $0x1, 0x10(%rsp)	 RIP: 44152c	 Bytes: 8
  %loadMem_44152c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44152c = call %struct.Memory* @routine_movl__0x1__0x10__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44152c)
  store %struct.Memory* %call_44152c, %struct.Memory** %MEMORY

  ; Code: movl %ebx, 0x18(%rsp)	 RIP: 441534	 Bytes: 4
  %loadMem_441534 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441534 = call %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441534)
  store %struct.Memory* %call_441534, %struct.Memory** %MEMORY

  ; Code: movl %eax, -0xde4(%rbp)	 RIP: 441538	 Bytes: 6
  %loadMem_441538 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441538 = call %struct.Memory* @routine_movl__eax__MINUS0xde4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441538)
  store %struct.Memory* %call_441538, %struct.Memory** %MEMORY

  ; Code: callq .do_owl_analyze_semeai	 RIP: 44153e	 Bytes: 5
  %loadMem1_44153e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_44153e = call %struct.Memory* @routine_callq_.do_owl_analyze_semeai(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_44153e, i64 -10062, i64 5, i64 5)
  store %struct.Memory* %call1_44153e, %struct.Memory** %MEMORY

  %loadMem2_44153e = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44153e = load i64, i64* %3
  %call2_44153e = call %struct.Memory* @sub_43edf0.do_owl_analyze_semeai(%struct.State* %0, i64  %loadPC_44153e, %struct.Memory* %loadMem2_44153e)
  store %struct.Memory* %call2_44153e, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, 0xab0ef8	 RIP: 441543	 Bytes: 9
  %loadMem_441543 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441543 = call %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441543)
  store %struct.Memory* %call_441543, %struct.Memory** %MEMORY

  ; Code: je .L_44157c	 RIP: 44154c	 Bytes: 6
  %loadMem_44154c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44154c = call %struct.Memory* @routine_je_.L_44157c(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44154c, i8* %BRANCH_TAKEN, i64 48, i64 6, i64 6)
  store %struct.Memory* %call_44154c, %struct.Memory** %MEMORY

  %loadBr_44154c = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44154c = icmp eq i8 %loadBr_44154c, 1
  br i1 %cmpBr_44154c, label %block_.L_44157c, label %block_441552

block_441552:
  ; Code: xorl %ecx, %ecx	 RIP: 441552	 Bytes: 2
  %loadMem_441552 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441552 = call %struct.Memory* @routine_xorl__ecx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441552)
  store %struct.Memory* %call_441552, %struct.Memory** %MEMORY

  ; Code: movl $0x3, %r8d	 RIP: 441554	 Bytes: 6
  %loadMem_441554 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441554 = call %struct.Memory* @routine_movl__0x3___r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441554)
  store %struct.Memory* %call_441554, %struct.Memory** %MEMORY

  ; Code: movq $0x57dfe6, %r9	 RIP: 44155a	 Bytes: 10
  %loadMem_44155a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44155a = call %struct.Memory* @routine_movq__0x57dfe6___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44155a)
  store %struct.Memory* %call_44155a, %struct.Memory** %MEMORY

  ; Code: movq -0x6d0(%rbp), %rdi	 RIP: 441564	 Bytes: 7
  %loadMem_441564 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441564 = call %struct.Memory* @routine_movq_MINUS0x6d0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441564)
  store %struct.Memory* %call_441564, %struct.Memory** %MEMORY

  ; Code: movl -0x6d4(%rbp), %esi	 RIP: 44156b	 Bytes: 6
  %loadMem_44156b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44156b = call %struct.Memory* @routine_movl_MINUS0x6d4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44156b)
  store %struct.Memory* %call_44156b, %struct.Memory** %MEMORY

  ; Code: movl -0x6d8(%rbp), %edx	 RIP: 441571	 Bytes: 6
  %loadMem_441571 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441571 = call %struct.Memory* @routine_movl_MINUS0x6d8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441571)
  store %struct.Memory* %call_441571, %struct.Memory** %MEMORY

  ; Code: callq .sgf_trace2	 RIP: 441577	 Bytes: 5
  %loadMem1_441577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_441577 = call %struct.Memory* @routine_callq_.sgf_trace2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_441577, i64 -168535, i64 5, i64 5)
  store %struct.Memory* %call1_441577, %struct.Memory** %MEMORY

  %loadMem2_441577 = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_441577 = load i64, i64* %3
  %call2_441577 = call %struct.Memory* @sub_418320.sgf_trace2(%struct.State* %0, i64  %loadPC_441577, %struct.Memory* %loadMem2_441577)
  store %struct.Memory* %call2_441577, %struct.Memory** %MEMORY

  ; Code: .L_44157c:	 RIP: 44157c	 Bytes: 0
  br label %block_.L_44157c
block_.L_44157c:

  ; Code: movq -0x50(%rbp), %rax	 RIP: 44157c	 Bytes: 4
  %loadMem_44157c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44157c = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44157c)
  store %struct.Memory* %call_44157c, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 441580	 Bytes: 6
  %loadMem_441580 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441580 = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441580)
  store %struct.Memory* %call_441580, %struct.Memory** %MEMORY

  ; Code: movq -0x40(%rbp), %rax	 RIP: 441586	 Bytes: 4
  %loadMem_441586 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441586 = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441586)
  store %struct.Memory* %call_441586, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, (%rax)	 RIP: 44158a	 Bytes: 3
  %loadMem_44158a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44158a = call %struct.Memory* @routine_cmpl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44158a)
  store %struct.Memory* %call_44158a, %struct.Memory** %MEMORY

  ; Code: je .L_4415a8	 RIP: 44158d	 Bytes: 6
  %loadMem_44158d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44158d = call %struct.Memory* @routine_je_.L_4415a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44158d, i8* %BRANCH_TAKEN, i64 27, i64 6, i64 6)
  store %struct.Memory* %call_44158d, %struct.Memory** %MEMORY

  %loadBr_44158d = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44158d = icmp eq i8 %loadBr_44158d, 1
  br i1 %cmpBr_44158d, label %block_.L_4415a8, label %block_441593

block_441593:
  ; Code: cmpq $0x0, -0x50(%rbp)	 RIP: 441593	 Bytes: 5
  %loadMem_441593 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441593 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441593)
  store %struct.Memory* %call_441593, %struct.Memory** %MEMORY

  ; Code: je .L_4415a8	 RIP: 441598	 Bytes: 6
  %loadMem_441598 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441598 = call %struct.Memory* @routine_je_.L_4415a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441598, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_441598, %struct.Memory** %MEMORY

  %loadBr_441598 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441598 = icmp eq i8 %loadBr_441598, 1
  br i1 %cmpBr_441598, label %block_.L_4415a8, label %block_44159e

block_44159e:
  ; Code: movq -0x50(%rbp), %rax	 RIP: 44159e	 Bytes: 4
  %loadMem_44159e = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44159e = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44159e)
  store %struct.Memory* %call_44159e, %struct.Memory** %MEMORY

  ; Code: movl $0x0, (%rax)	 RIP: 4415a2	 Bytes: 6
  %loadMem_4415a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415a2 = call %struct.Memory* @routine_movl__0x0____rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415a2)
  store %struct.Memory* %call_4415a2, %struct.Memory** %MEMORY

  ; Code: .L_4415a8:	 RIP: 4415a8	 Bytes: 0
  br label %block_.L_4415a8
block_.L_4415a8:

  ; Code: cmpq $0x0, -0x6c0(%rbp)	 RIP: 4415a8	 Bytes: 8
  %loadMem_4415a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415a8 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x6c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415a8)
  store %struct.Memory* %call_4415a8, %struct.Memory** %MEMORY

  ; Code: je .L_4415f2	 RIP: 4415b0	 Bytes: 6
  %loadMem_4415b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415b0 = call %struct.Memory* @routine_je_.L_4415f2(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415b0, i8* %BRANCH_TAKEN, i64 66, i64 6, i64 6)
  store %struct.Memory* %call_4415b0, %struct.Memory** %MEMORY

  %loadBr_4415b0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4415b0 = icmp eq i8 %loadBr_4415b0, 1
  br i1 %cmpBr_4415b0, label %block_.L_4415f2, label %block_4415b6

block_4415b6:
  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 4415b6	 Bytes: 7
  %loadMem_4415b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415b6 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415b6)
  store %struct.Memory* %call_4415b6, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 4415bd	 Bytes: 3
  %loadMem_4415bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415bd = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415bd)
  store %struct.Memory* %call_4415bd, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %ecx	 RIP: 4415c0	 Bytes: 6
  %loadMem_4415c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415c0 = call %struct.Memory* @routine_andl__0x3ff___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415c0)
  store %struct.Memory* %call_4415c0, %struct.Memory** %MEMORY

  ; Code: orl $0x20000000, %ecx	 RIP: 4415c6	 Bytes: 6
  %loadMem_4415c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415c6 = call %struct.Memory* @routine_orl__0x20000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415c6)
  store %struct.Memory* %call_4415c6, %struct.Memory** %MEMORY

  ; Code: movq -0x40(%rbp), %rax	 RIP: 4415cc	 Bytes: 4
  %loadMem_4415cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415cc = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415cc)
  store %struct.Memory* %call_4415cc, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 4415d0	 Bytes: 2
  %loadMem_4415d0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415d0 = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415d0)
  store %struct.Memory* %call_4415d0, %struct.Memory** %MEMORY

  ; Code: andl $0xf, %edx	 RIP: 4415d2	 Bytes: 3
  %loadMem_4415d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415d2 = call %struct.Memory* @routine_andl__0xf___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415d2)
  store %struct.Memory* %call_4415d2, %struct.Memory** %MEMORY

  ; Code: shll $0x18, %edx	 RIP: 4415d5	 Bytes: 3
  %loadMem_4415d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415d5 = call %struct.Memory* @routine_shll__0x18___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415d5)
  store %struct.Memory* %call_4415d5, %struct.Memory** %MEMORY

  ; Code: orl %edx, %ecx	 RIP: 4415d8	 Bytes: 2
  %loadMem_4415d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415d8 = call %struct.Memory* @routine_orl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415d8)
  store %struct.Memory* %call_4415d8, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rax	 RIP: 4415da	 Bytes: 4
  %loadMem_4415da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415da = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415da)
  store %struct.Memory* %call_4415da, %struct.Memory** %MEMORY

  ; Code: movl (%rax), %edx	 RIP: 4415de	 Bytes: 2
  %loadMem_4415de = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415de = call %struct.Memory* @routine_movl___rax____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415de)
  store %struct.Memory* %call_4415de, %struct.Memory** %MEMORY

  ; Code: andl $0xf, %edx	 RIP: 4415e0	 Bytes: 3
  %loadMem_4415e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415e0 = call %struct.Memory* @routine_andl__0xf___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415e0)
  store %struct.Memory* %call_4415e0, %struct.Memory** %MEMORY

  ; Code: shll $0x14, %edx	 RIP: 4415e3	 Bytes: 3
  %loadMem_4415e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415e3 = call %struct.Memory* @routine_shll__0x14___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415e3)
  store %struct.Memory* %call_4415e3, %struct.Memory** %MEMORY

  ; Code: orl %edx, %ecx	 RIP: 4415e6	 Bytes: 2
  %loadMem_4415e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415e6 = call %struct.Memory* @routine_orl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415e6)
  store %struct.Memory* %call_4415e6, %struct.Memory** %MEMORY

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 4415e8	 Bytes: 7
  %loadMem_4415e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415e8 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415e8)
  store %struct.Memory* %call_4415e8, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x4(%rax)	 RIP: 4415ef	 Bytes: 3
  %loadMem_4415ef = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415ef = call %struct.Memory* @routine_movl__ecx__0x4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415ef)
  store %struct.Memory* %call_4415ef, %struct.Memory** %MEMORY

  ; Code: .L_4415f2:	 RIP: 4415f2	 Bytes: 0
  br label %block_.L_4415f2
block_.L_4415f2:

  ; Code: jmpq .L_441708	 RIP: 4415f2	 Bytes: 5
  %loadMem_4415f2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415f2 = call %struct.Memory* @routine_jmpq_.L_441708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415f2, i64 278, i64 5)
  store %struct.Memory* %call_4415f2, %struct.Memory** %MEMORY

  br label %block_.L_441708

  ; Code: .L_4415f7:	 RIP: 4415f7	 Bytes: 0
block_.L_4415f7:

  ; Code: movl -0x6a4(%rbp), %eax	 RIP: 4415f7	 Bytes: 6
  %loadMem_4415f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415f7 = call %struct.Memory* @routine_movl_MINUS0x6a4__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415f7)
  store %struct.Memory* %call_4415f7, %struct.Memory** %MEMORY

  ; Code: movq -0x40(%rbp), %rcx	 RIP: 4415fd	 Bytes: 4
  %loadMem_4415fd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4415fd = call %struct.Memory* @routine_movq_MINUS0x40__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4415fd)
  store %struct.Memory* %call_4415fd, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 441601	 Bytes: 2
  %loadMem_441601 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441601 = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441601)
  store %struct.Memory* %call_441601, %struct.Memory** %MEMORY

  ; Code: movl -0x6a8(%rbp), %eax	 RIP: 441603	 Bytes: 6
  %loadMem_441603 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441603 = call %struct.Memory* @routine_movl_MINUS0x6a8__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441603)
  store %struct.Memory* %call_441603, %struct.Memory** %MEMORY

  ; Code: movq -0x48(%rbp), %rcx	 RIP: 441609	 Bytes: 4
  %loadMem_441609 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441609 = call %struct.Memory* @routine_movq_MINUS0x48__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441609)
  store %struct.Memory* %call_441609, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 44160d	 Bytes: 2
  %loadMem_44160d = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44160d = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44160d)
  store %struct.Memory* %call_44160d, %struct.Memory** %MEMORY

  ; Code: cmpl $0x0, -0x6a4(%rbp)	 RIP: 44160f	 Bytes: 7
  %loadMem_44160f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44160f = call %struct.Memory* @routine_cmpl__0x0__MINUS0x6a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44160f)
  store %struct.Memory* %call_44160f, %struct.Memory** %MEMORY

  ; Code: jne .L_441626	 RIP: 441616	 Bytes: 6
  %loadMem_441616 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441616 = call %struct.Memory* @routine_jne_.L_441626(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441616, i8* %BRANCH_TAKEN, i64 16, i64 6, i64 6)
  store %struct.Memory* %call_441616, %struct.Memory** %MEMORY

  %loadBr_441616 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441616 = icmp eq i8 %loadBr_441616, 1
  br i1 %cmpBr_441616, label %block_.L_441626, label %block_44161c

block_44161c:
  ; Code: movl $0x0, -0x6ac(%rbp)	 RIP: 44161c	 Bytes: 10
  %loadMem_44161c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44161c = call %struct.Memory* @routine_movl__0x0__MINUS0x6ac__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44161c)
  store %struct.Memory* %call_44161c, %struct.Memory** %MEMORY

  ; Code: .L_441626:	 RIP: 441626	 Bytes: 0
  br label %block_.L_441626
block_.L_441626:

  ; Code: movl -0x6ac(%rbp), %eax	 RIP: 441626	 Bytes: 6
  %loadMem_441626 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441626 = call %struct.Memory* @routine_movl_MINUS0x6ac__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441626)
  store %struct.Memory* %call_441626, %struct.Memory** %MEMORY

  ; Code: movq -0x50(%rbp), %rcx	 RIP: 44162c	 Bytes: 4
  %loadMem_44162c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44162c = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44162c)
  store %struct.Memory* %call_44162c, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 441630	 Bytes: 2
  %loadMem_441630 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441630 = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441630)
  store %struct.Memory* %call_441630, %struct.Memory** %MEMORY

  ; Code: cmpq $0x0, 0xab0ef8	 RIP: 441632	 Bytes: 9
  %loadMem_441632 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441632 = call %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441632)
  store %struct.Memory* %call_441632, %struct.Memory** %MEMORY

  ; Code: je .L_44167f	 RIP: 44163b	 Bytes: 6
  %loadMem_44163b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44163b = call %struct.Memory* @routine_je_.L_44167f(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44163b, i8* %BRANCH_TAKEN, i64 68, i64 6, i64 6)
  store %struct.Memory* %call_44163b, %struct.Memory** %MEMORY

  %loadBr_44163b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44163b = icmp eq i8 %loadBr_44163b, 1
  br i1 %cmpBr_44163b, label %block_.L_44167f, label %block_441641

block_441641:
  ; Code: leaq -0x2e0(%rbp), %rax	 RIP: 441641	 Bytes: 7
  %loadMem_441641 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441641 = call %struct.Memory* @routine_leaq_MINUS0x2e0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441641)
  store %struct.Memory* %call_441641, %struct.Memory** %MEMORY

  ; Code: movq -0x6d0(%rbp), %rdi	 RIP: 441648	 Bytes: 7
  %loadMem_441648 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441648 = call %struct.Memory* @routine_movq_MINUS0x6d0__rbp____rdi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441648)
  store %struct.Memory* %call_441648, %struct.Memory** %MEMORY

  ; Code: movl -0x6d4(%rbp), %esi	 RIP: 44164f	 Bytes: 6
  %loadMem_44164f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44164f = call %struct.Memory* @routine_movl_MINUS0x6d4__rbp____esi(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44164f)
  store %struct.Memory* %call_44164f, %struct.Memory** %MEMORY

  ; Code: movl -0x6d8(%rbp), %edx	 RIP: 441655	 Bytes: 6
  %loadMem_441655 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441655 = call %struct.Memory* @routine_movl_MINUS0x6d8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441655)
  store %struct.Memory* %call_441655, %struct.Memory** %MEMORY

  ; Code: movl -0x6ac(%rbp), %ecx	 RIP: 44165b	 Bytes: 6
  %loadMem_44165b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44165b = call %struct.Memory* @routine_movl_MINUS0x6ac__rbp____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44165b)
  store %struct.Memory* %call_44165b, %struct.Memory** %MEMORY

  ; Code: movl -0x6a4(%rbp), %r8d	 RIP: 441661	 Bytes: 7
  %loadMem_441661 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441661 = call %struct.Memory* @routine_movl_MINUS0x6a4__rbp____r8d(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441661)
  store %struct.Memory* %call_441661, %struct.Memory** %MEMORY

  ; Code: movslq -0x6b8(%rbp), %r9	 RIP: 441668	 Bytes: 7
  %loadMem_441668 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441668 = call %struct.Memory* @routine_movslq_MINUS0x6b8__rbp____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441668)
  store %struct.Memory* %call_441668, %struct.Memory** %MEMORY

  ; Code: shlq $0x5, %r9	 RIP: 44166f	 Bytes: 4
  %loadMem_44166f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44166f = call %struct.Memory* @routine_shlq__0x5___r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44166f)
  store %struct.Memory* %call_44166f, %struct.Memory** %MEMORY

  ; Code: addq %r9, %rax	 RIP: 441673	 Bytes: 3
  %loadMem_441673 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441673 = call %struct.Memory* @routine_addq__r9___rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441673)
  store %struct.Memory* %call_441673, %struct.Memory** %MEMORY

  ; Code: movq 0x8(%rax), %r9	 RIP: 441676	 Bytes: 4
  %loadMem_441676 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441676 = call %struct.Memory* @routine_movq_0x8__rax____r9(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441676)
  store %struct.Memory* %call_441676, %struct.Memory** %MEMORY

  ; Code: callq .sgf_trace2	 RIP: 44167a	 Bytes: 5
  %loadMem1_44167a = load %struct.Memory*, %struct.Memory** %MEMORY
  %call1_44167a = call %struct.Memory* @routine_callq_.sgf_trace2(%struct.State* %0, i64  0, %struct.Memory* %loadMem1_44167a, i64 -168794, i64 5, i64 5)
  store %struct.Memory* %call1_44167a, %struct.Memory** %MEMORY

  %loadMem2_44167a = load %struct.Memory*, %struct.Memory** %MEMORY
  %loadPC_44167a = load i64, i64* %3
  %call2_44167a = call %struct.Memory* @sub_418320.sgf_trace2(%struct.State* %0, i64  %loadPC_44167a, %struct.Memory* %loadMem2_44167a)
  store %struct.Memory* %call2_44167a, %struct.Memory** %MEMORY

  ; Code: .L_44167f:	 RIP: 44167f	 Bytes: 0
  br label %block_.L_44167f
block_.L_44167f:

  ; Code: jmpq .L_441684	 RIP: 44167f	 Bytes: 5
  %loadMem_44167f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44167f = call %struct.Memory* @routine_jmpq_.L_441684(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44167f, i64 5, i64 5)
  store %struct.Memory* %call_44167f, %struct.Memory** %MEMORY

  br label %block_.L_441684

  ; Code: .L_441684:	 RIP: 441684	 Bytes: 0
block_.L_441684:

  ; Code: cmpl $0x0, -0x6a4(%rbp)	 RIP: 441684	 Bytes: 7
  %loadMem_441684 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441684 = call %struct.Memory* @routine_cmpl__0x0__MINUS0x6a4__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441684)
  store %struct.Memory* %call_441684, %struct.Memory** %MEMORY

  ; Code: je .L_4416a8	 RIP: 44168b	 Bytes: 6
  %loadMem_44168b = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44168b = call %struct.Memory* @routine_je_.L_4416a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44168b, i8* %BRANCH_TAKEN, i64 29, i64 6, i64 6)
  store %struct.Memory* %call_44168b, %struct.Memory** %MEMORY

  %loadBr_44168b = load i8, i8* %BRANCH_TAKEN
  %cmpBr_44168b = icmp eq i8 %loadBr_44168b, 1
  br i1 %cmpBr_44168b, label %block_.L_4416a8, label %block_441691

block_441691:
  ; Code: cmpq $0x0, -0x50(%rbp)	 RIP: 441691	 Bytes: 5
  %loadMem_441691 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441691 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x50__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441691)
  store %struct.Memory* %call_441691, %struct.Memory** %MEMORY

  ; Code: je .L_4416a8	 RIP: 441696	 Bytes: 6
  %loadMem_441696 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441696 = call %struct.Memory* @routine_je_.L_4416a8(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441696, i8* %BRANCH_TAKEN, i64 18, i64 6, i64 6)
  store %struct.Memory* %call_441696, %struct.Memory** %MEMORY

  %loadBr_441696 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_441696 = icmp eq i8 %loadBr_441696, 1
  br i1 %cmpBr_441696, label %block_.L_4416a8, label %block_44169c

block_44169c:
  ; Code: movl -0x6ac(%rbp), %eax	 RIP: 44169c	 Bytes: 6
  %loadMem_44169c = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44169c = call %struct.Memory* @routine_movl_MINUS0x6ac__rbp____eax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44169c)
  store %struct.Memory* %call_44169c, %struct.Memory** %MEMORY

  ; Code: movq -0x50(%rbp), %rcx	 RIP: 4416a2	 Bytes: 4
  %loadMem_4416a2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416a2 = call %struct.Memory* @routine_movq_MINUS0x50__rbp____rcx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416a2)
  store %struct.Memory* %call_4416a2, %struct.Memory** %MEMORY

  ; Code: movl %eax, (%rcx)	 RIP: 4416a6	 Bytes: 2
  %loadMem_4416a6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416a6 = call %struct.Memory* @routine_movl__eax____rcx_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416a6)
  store %struct.Memory* %call_4416a6, %struct.Memory** %MEMORY

  ; Code: .L_4416a8:	 RIP: 4416a8	 Bytes: 0
  br label %block_.L_4416a8
block_.L_4416a8:

  ; Code: cmpq $0x0, -0x6c0(%rbp)	 RIP: 4416a8	 Bytes: 8
  %loadMem_4416a8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416a8 = call %struct.Memory* @routine_cmpq__0x0__MINUS0x6c0__rbp_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416a8)
  store %struct.Memory* %call_4416a8, %struct.Memory** %MEMORY

  ; Code: je .L_441703	 RIP: 4416b0	 Bytes: 6
  %loadMem_4416b0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416b0 = call %struct.Memory* @routine_je_.L_441703(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416b0, i8* %BRANCH_TAKEN, i64 83, i64 6, i64 6)
  store %struct.Memory* %call_4416b0, %struct.Memory** %MEMORY

  %loadBr_4416b0 = load i8, i8* %BRANCH_TAKEN
  %cmpBr_4416b0 = icmp eq i8 %loadBr_4416b0, 1
  br i1 %cmpBr_4416b0, label %block_.L_441703, label %block_4416b6

block_4416b6:
  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 4416b6	 Bytes: 7
  %loadMem_4416b6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416b6 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416b6)
  store %struct.Memory* %call_4416b6, %struct.Memory** %MEMORY

  ; Code: movl 0x4(%rax), %ecx	 RIP: 4416bd	 Bytes: 3
  %loadMem_4416bd = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416bd = call %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416bd)
  store %struct.Memory* %call_4416bd, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %ecx	 RIP: 4416c0	 Bytes: 6
  %loadMem_4416c0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416c0 = call %struct.Memory* @routine_andl__0x3ff___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416c0)
  store %struct.Memory* %call_4416c0, %struct.Memory** %MEMORY

  ; Code: orl $0x20000000, %ecx	 RIP: 4416c6	 Bytes: 6
  %loadMem_4416c6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416c6 = call %struct.Memory* @routine_orl__0x20000000___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416c6)
  store %struct.Memory* %call_4416c6, %struct.Memory** %MEMORY

  ; Code: movl -0x6a4(%rbp), %edx	 RIP: 4416cc	 Bytes: 6
  %loadMem_4416cc = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416cc = call %struct.Memory* @routine_movl_MINUS0x6a4__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416cc)
  store %struct.Memory* %call_4416cc, %struct.Memory** %MEMORY

  ; Code: andl $0xf, %edx	 RIP: 4416d2	 Bytes: 3
  %loadMem_4416d2 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416d2 = call %struct.Memory* @routine_andl__0xf___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416d2)
  store %struct.Memory* %call_4416d2, %struct.Memory** %MEMORY

  ; Code: shll $0x18, %edx	 RIP: 4416d5	 Bytes: 3
  %loadMem_4416d5 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416d5 = call %struct.Memory* @routine_shll__0x18___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416d5)
  store %struct.Memory* %call_4416d5, %struct.Memory** %MEMORY

  ; Code: orl %edx, %ecx	 RIP: 4416d8	 Bytes: 2
  %loadMem_4416d8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416d8 = call %struct.Memory* @routine_orl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416d8)
  store %struct.Memory* %call_4416d8, %struct.Memory** %MEMORY

  ; Code: movl -0x6a8(%rbp), %edx	 RIP: 4416da	 Bytes: 6
  %loadMem_4416da = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416da = call %struct.Memory* @routine_movl_MINUS0x6a8__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416da)
  store %struct.Memory* %call_4416da, %struct.Memory** %MEMORY

  ; Code: andl $0xf, %edx	 RIP: 4416e0	 Bytes: 3
  %loadMem_4416e0 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416e0 = call %struct.Memory* @routine_andl__0xf___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416e0)
  store %struct.Memory* %call_4416e0, %struct.Memory** %MEMORY

  ; Code: shll $0x14, %edx	 RIP: 4416e3	 Bytes: 3
  %loadMem_4416e3 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416e3 = call %struct.Memory* @routine_shll__0x14___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416e3)
  store %struct.Memory* %call_4416e3, %struct.Memory** %MEMORY

  ; Code: orl %edx, %ecx	 RIP: 4416e6	 Bytes: 2
  %loadMem_4416e6 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416e6 = call %struct.Memory* @routine_orl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416e6)
  store %struct.Memory* %call_4416e6, %struct.Memory** %MEMORY

  ; Code: movl -0x6ac(%rbp), %edx	 RIP: 4416e8	 Bytes: 6
  %loadMem_4416e8 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416e8 = call %struct.Memory* @routine_movl_MINUS0x6ac__rbp____edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416e8)
  store %struct.Memory* %call_4416e8, %struct.Memory** %MEMORY

  ; Code: andl $0x3ff, %edx	 RIP: 4416ee	 Bytes: 6
  %loadMem_4416ee = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416ee = call %struct.Memory* @routine_andl__0x3ff___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416ee)
  store %struct.Memory* %call_4416ee, %struct.Memory** %MEMORY

  ; Code: shll $0xa, %edx	 RIP: 4416f4	 Bytes: 3
  %loadMem_4416f4 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416f4 = call %struct.Memory* @routine_shll__0xa___edx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416f4)
  store %struct.Memory* %call_4416f4, %struct.Memory** %MEMORY

  ; Code: orl %edx, %ecx	 RIP: 4416f7	 Bytes: 2
  %loadMem_4416f7 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416f7 = call %struct.Memory* @routine_orl__edx___ecx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416f7)
  store %struct.Memory* %call_4416f7, %struct.Memory** %MEMORY

  ; Code: movq -0x6c0(%rbp), %rax	 RIP: 4416f9	 Bytes: 7
  %loadMem_4416f9 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_4416f9 = call %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State* %0, i64  0, %struct.Memory* %loadMem_4416f9)
  store %struct.Memory* %call_4416f9, %struct.Memory** %MEMORY

  ; Code: movl %ecx, 0x4(%rax)	 RIP: 441700	 Bytes: 3
  %loadMem_441700 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441700 = call %struct.Memory* @routine_movl__ecx__0x4__rax_(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441700)
  store %struct.Memory* %call_441700, %struct.Memory** %MEMORY

  ; Code: .L_441703:	 RIP: 441703	 Bytes: 0
  br label %block_.L_441703
block_.L_441703:

  ; Code: jmpq .L_441708	 RIP: 441703	 Bytes: 5
  %loadMem_441703 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441703 = call %struct.Memory* @routine_jmpq_.L_441708(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441703, i64 5, i64 5)
  store %struct.Memory* %call_441703, %struct.Memory** %MEMORY

  br label %block_.L_441708

  ; Code: .L_441708:	 RIP: 441708	 Bytes: 0
block_.L_441708:

  ; Code: addq $0xdf8, %rsp	 RIP: 441708	 Bytes: 7
  %loadMem_441708 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441708 = call %struct.Memory* @routine_addq__0xdf8___rsp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441708)
  store %struct.Memory* %call_441708, %struct.Memory** %MEMORY

  ; Code: popq %rbx	 RIP: 44170f	 Bytes: 1
  %loadMem_44170f = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_44170f = call %struct.Memory* @routine_popq__rbx(%struct.State* %0, i64  0, %struct.Memory* %loadMem_44170f)
  store %struct.Memory* %call_44170f, %struct.Memory** %MEMORY

  ; Code: popq %r14	 RIP: 441710	 Bytes: 2
  %loadMem_441710 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441710 = call %struct.Memory* @routine_popq__r14(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441710)
  store %struct.Memory* %call_441710, %struct.Memory** %MEMORY

  ; Code: popq %r15	 RIP: 441712	 Bytes: 2
  %loadMem_441712 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441712 = call %struct.Memory* @routine_popq__r15(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441712)
  store %struct.Memory* %call_441712, %struct.Memory** %MEMORY

  ; Code: popq %rbp	 RIP: 441714	 Bytes: 1
  %loadMem_441714 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441714 = call %struct.Memory* @routine_popq__rbp(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441714)
  store %struct.Memory* %call_441714, %struct.Memory** %MEMORY

  ; Code: retq	 RIP: 441715	 Bytes: 1
  %loadMem_441715 = load %struct.Memory*, %struct.Memory** %MEMORY
  %call_441715 = call %struct.Memory* @routine_retq(%struct.State* %0, i64  0, %struct.Memory* %loadMem_441715)
  store %struct.Memory* %call_441715, %struct.Memory** %MEMORY

  ret %struct.Memory* %call_441715
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -8
  %7 = inttoptr i64 %6 to i64*
  store i64 %2, i64* %7
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_pushq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rsp___rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBP, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_pushq__r15(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R15
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_pushq__r14(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R14
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_pushq__rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 1
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = sub i64 %3, %4
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %3, %4
  %8 = zext i1 %7 to i8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %8, i8* %9, align 1
  %10 = trunc i64 %6 to i32
  %11 = and i32 %10, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %4, %3
  %18 = xor i64 %17, %6
  %19 = lshr i64 %18, 4
  %20 = trunc i64 %19 to i8
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i64 %6, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i64 %6, 63
  %27 = trunc i64 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %27, i8* %28, align 1
  %29 = lshr i64 %3, 63
  %30 = lshr i64 %4, 63
  %31 = xor i64 %30, %29
  %32 = xor i64 %26, %29
  %33 = add   i64 %32, %31
  %34 = icmp eq i64 %33, 2
  %35 = zext i1 %34 to i8
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %35, i8* %36, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subq__0xdf8___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 3576)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = zext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl_0x28__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x20__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = add i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq_0x18__rbp____r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 24
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x10__rbp____rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0x57de24___r14(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R14, i64 ptrtoint( %G__0x57de24_type* @G__0x57de24 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x3___r15d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R15D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 3)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__edi__MINUS0x1c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__esi__MINUS0x20__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i32, i32* %ESI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__rdx__MINUS0x28__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rcx__MINUS0x30__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r8d__MINUS0x34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i32, i32* %R8D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__r9__MINUS0x40__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %R9
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rbx__MINUS0x48__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %RBX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__r11__MINUS0x50__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %R11
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r10d__MINUS0x54__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 84
  %14 = load i32, i32* %R10D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__eax__MINUS0x58__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i32*
  %6 = load i32, i32* %5
  %7 = sext i32 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq_MINUS0x1c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  %7 = zext i8 %6 to i64
  store i64 %7, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x5c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = sub i32 %6, %8
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %6, %8
  %12 = zext i1 %11 to i8
  %13 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %12, i8* %13, align 1
  %14 = and i32 %9, 255
  %15 = tail call i32 @llvm.ctpop.i32(i32 %14) #22
  %16 = trunc i32 %15 to i8
  %17 = and i8 %16, 1
  %18 = xor i8 %17, 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %18, i8* %19, align 1
  %20 = xor i32 %8, %6
  %21 = xor i32 %20, %9
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %9, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %9, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %8, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl_MINUS0x5c__rbp____r15d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R15D to i64*
  %13 = load i32, i32* %R15D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %RBP
  %16 = sub i64 %15, 92
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 4
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movl__r15d__MINUS0x60__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i32, i32* %R15D
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i32
  %6 = inttoptr i64 %2 to i32*
  store i32 %5, i32* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__0x0__MINUS0x4d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1236
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x4d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1240
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x4dc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1244
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x4e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1248
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x4e4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1252
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq_0xab0ef8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 8
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G_0xab0ef8_type* @G_0xab0ef8 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__rcx__MINUS0x698__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1688
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_0xab0eec___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0xab0eec_type* @G_0xab0eec to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__eax__MINUS0x69c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1692
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl__0x3__MINUS0x6a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1700
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x3__MINUS0x6a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1704
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x6ac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1708
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x3__MINUS0x6b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1712
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x3__MINUS0x6b4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1716
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0xffffffff__MINUS0x6b8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1720
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -1)
  ret %struct.Memory* %13
}



define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x6c4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1732
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__r14__MINUS0x6d0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 29
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R14 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1744
  %14 = load i64, i64* %R14
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x1c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x6d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1748
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movl_MINUS0x20__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x6d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1752
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i64*
  %6 = load i64, i64* %5
  %7 = sub i64 %6, %3
  %8 = icmp ult i64 %6, %3
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = trunc i64 %7 to i32
  %12 = and i32 %11, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i64 %6, %3
  %19 = xor i64 %18, %7
  %20 = lshr i64 %19, 4
  %21 = trunc i64 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i64 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i64 %7, 63
  %28 = trunc i64 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i64 %6, 63
  %31 = lshr i64 %3, 63
  %32 = xor i64 %30, %31
  %33 = xor i64 %27, %30
  %34 = add   i64 %33, %32
  %35 = icmp eq i64 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpq__0x0__MINUS0x50__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 80
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 5
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %2, align 1
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %11 = select i1 %8, i64 %3, i64 %4
  store i64 %11, i64* %10, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jne_.L_43ef24(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  store i64 %3, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_leaq_MINUS0x6c8__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1736
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__MINUS0x50__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__0x0__MINUS0x200__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 512
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x220__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 544
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_0xac22d4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0xac22d4_type* @G_0xac22d4 to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = add i32 %7, %6
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %8, %6
  %11 = icmp ult i32 %8, %7
  %12 = or i1 %10, %11
  %13 = zext i1 %12 to i8
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %13, i8* %14, align 1
  %15 = and i32 %8, 255
  %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #22
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 1
  %19 = xor i8 %18, 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %19, i8* %20, align 1
  %21 = xor i64 %4, %3
  %22 = trunc i64 %21 to i32
  %23 = xor i32 %22, %8
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %8, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %8, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %7, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__0xac22d4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xac22d4_type* @G_0xac22d4 to i64), i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_0xac22d0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0xac22d0_type* @G_0xac22d0 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__eax__0xac22d0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xac22d0_type* @G_0xac22d0 to i64), i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movq_MINUS0x28__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sub i32 %5, %7
  %9 = icmp ult i32 %5, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %7, %5
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl_0x4b0__rcx____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RCX
  %15 = add i64 %14, 1200
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_43ef7b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jmpq_.L_43efa3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x57dd2e___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57dd2e_type* @G__0x57dd2e to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0x164___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 356)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x57de3a___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x57de3a_type* @G__0x57de3a to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl__0xffffffff___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 4294967295)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = and i64 %3, 4294967295
  store i64 %5, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -8
  %8 = inttoptr i64 %7 to i64*
  store i64 %3, i64* %8
  store i64 %7, i64* %5, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_callq_.abortgo(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movzbl_0xb89e60___rax_1____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x30__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_0x4b0__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RAX
  %15 = add i64 %14, 1200
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_43efc4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_43efec(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x165___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 357)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x57de55___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x57de55_type* @G__0x57de55 to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_movl_0xb54ce4___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0xb54ce4_type* @G_0xb54ce4 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_cmpl_0xb6e910___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 ptrtoint( %G_0xb6e910_type* @G_0xb6e910 to i64))
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = xor i1 %15, true
  %17 = and i1 %8, %16
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %2, align 1
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %20 = select i1 %17, i64 %3, i64 %4
  store i64 %20, i64* %19, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jg_.L_43f30a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_0x7ae43c___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0x7ae43c_type* @G_0x7ae43c to i64))
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = and i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_andl__0x400___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 5
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 1024)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  store i8 %7, i8* %2, align 1
  %8 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %9 = icmp ne i8 %7, 0
  %10 = select i1 %9, i64 %3, i64 %4
  store i64 %10, i64* %8, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_je_.L_43f30a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i32*
  %6 = load i32, i32* %5
  %7 = trunc i64 %3 to i32
  %8 = sub i32 %6, %7
  %9 = icmp ult i32 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = and i32 %8, 255
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i32 %6, %7
  %19 = xor i32 %18, %8
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %8, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %8, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %6, 31
  %31 = lshr i32 %7, 31
  %32 = xor i32 %30, %31
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__0x0__MINUS0x54__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 84
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_43f30a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x58__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 88
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl__0x2___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 2)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = xor i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_xorl__eax___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_leaq_MINUS0x1c__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x20__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x6c0__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1728
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.get_read_result2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_43f305(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x6c0__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1728
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x4__rax____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHRI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %11 [
    i5 0, label %42
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = trunc i64 %3 to i32
  %9 = lshr i32 %8, 31
  %10 = trunc i32 %9 to i8
  br label %19

; <label>:11:                                     ; preds = %5
  %12 = and i64 %4, 31
  %13 = add   i64 %12, 4294967295
  %14 = and i64 %3, 4294967295
  %15 = and i64 %13, 4294967295
  %16 = lshr i64 %14, %15
  %17 = icmp ne i8 0, 0
  %18 = zext i1 %17 to i8
  br label %19

; <label>:19:                                     ; preds = %11, %7
  %20 = phi i8 [ 0, %11 ], [ 0, %7 ]
  %21 = phi i64 [ %16, %11 ], [ %3, %7 ]
  %22 = phi i8 [ %18, %11 ], [ %10, %7 ]
  %23 = trunc i64 %21 to i8
  %24 = and i8 %23, 1
  %25 = lshr i64 %21, 1
  %26 = trunc i64 %25 to i32
  %27 = and i32 %26, 2147483647
  %28 = zext i32 %27 to i64
  store i64 %28, i64* %2, align 8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %24, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %31 = and i32 %26, 255
  %32 = tail call i32 @llvm.ctpop.i32(i32 %31) #22
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  store i8 %35, i8* %30, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %20, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %38 = icmp eq i32 %27, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %37, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %22, i8* %41, align 1
  br label %42

; <label>:42:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shrl__0x18___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHRI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 24)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_andl__0xf___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 15)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_43f083(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_shrl__0xa___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHRI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 10)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_andl__0x3ff___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1023)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x50__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_cmpl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_43f0d4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__0xab0f28(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xab0f28_type* @G_0xab0f28 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jne_.L_43f0af(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_43f0cf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x57de70___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57de70_type* @G__0x57de70 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x6c4__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1732
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x1c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i8
  store i8 %5, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__0x0___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 2
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 0)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.gprintf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0xd44__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3396
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_43f180(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_jne_.L_43f125(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_43f100(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_43f120(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x57de94___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57de94_type* @G__0x57de94 to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_movl__eax__MINUS0xd48__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3400
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_43f17b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_cmpl__0x7___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 7)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_43f176(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_43f151(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_43f171(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movq__0x57deb7___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x57deb7_type* @G__0x57deb7 to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_movl__eax__MINUS0xd4c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3404
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_43f176(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_shrl__0x14___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHRI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 20)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jne_.L_43f1d1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_43f1ac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_43f1cc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl_MINUS0x20__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl__eax__MINUS0xd50__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3408
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_43f27d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_jne_.L_43f222(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_43f1fd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_43f21d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_movl__eax__MINUS0xd54__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3412
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_43f278(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_jne_.L_43f273(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_43f24e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_43f26e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_movl__eax__MINUS0xd58__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3416
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_43f273(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_cmpq__0x0__0xab0ef8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 9
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xab0ef8_type* @G_0xab0ef8 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_je_.L_43f2d4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57dee3___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G__0x57dee3_type* @G__0x57dee3 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq_MINUS0x6d0__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1744
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x6d4__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1748
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x6d8__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1752
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movl_0x4__rax____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_shrl__0x18___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHRI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 24)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_andl__0xf___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i32, i32* %R8D
  %11 = zext i32 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 4
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 15)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_callq_.sgf_trace2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movq_MINUS0x40__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movq_MINUS0x48__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jmpq_.L_441708(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_43f315(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = inttoptr i64 %2 to i64*
  store i64 %3, i64* %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movq__0x0__MINUS0x6c0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1728
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 11
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x300__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 768
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x320__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 800
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x0__MINUS0x340__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 832
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movq__0x0__0xab0ef8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 12
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xab0ef8_type* @G_0xab0ef8 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__0xab0eec(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xab0eec_type* @G_0xab0eec to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movl__0x0__MINUS0x684__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1668
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_cmpl__0x6__MINUS0x684__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1668
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 6)
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %2, align 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %16 = select i1 %12, i64 %4, i64 %3
  store i64 %16, i64* %15, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jge_.L_43f3d9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x2e0__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 736
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x684__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1668
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i6
  switch i6 %6, label %12 [
    i6 0, label %41
    i6 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = shl i64 %3, 1
  %9 = icmp slt i64 %3, 0
  %10 = icmp slt i64 %8, 0
  %11 = xor i1 %9, %10
  br label %19

; <label>:12:                                     ; preds = %5
  %13 = and i64 %4, 63
  %14 = add  i64 %13, -1
  %15 = shl i64 %3, %14
  %16 = icmp slt i64 %15, 0
  %17 = icmp ne i8 0, 0
  %18 = shl i64 %15, 1
  br label %19

; <label>:19:                                     ; preds = %12, %7
  %20 = phi i1 [ %9, %7 ], [ %16, %12 ]
  %21 = phi i1 [ %11, %7 ], [ %17, %12 ]
  %22 = phi i64 [ %8, %7 ], [ %18, %12 ]
  store i64 %22, i64* %2, align 8
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %24 = zext i1 %20 to i8
  store i8 %24, i8* %23, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %26 = trunc i64 %22 to i32
  %27 = and i32 %26, 254
  %28 = tail call i32 @llvm.ctpop.i32(i32 %27) #22
  %29 = trunc i32 %28 to i8
  %30 = and i8 %29, 1
  %31 = xor i8 %30, 1
  store i8 %31, i8* %25, align 1
  %32 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %34 = icmp eq i64 %22, 0
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %33, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %37 = lshr i64 %22, 63
  %38 = trunc i64 %37 to i8
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %40 = zext i1 %21 to i8
  store i8 %40, i8* %39, align 1
  br label %41

; <label>:41:                                     ; preds = %19, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shlq__0x5___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 5)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rax___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__rcx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x0____rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 0)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl__0xffffffff__0x4__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 4
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 -1)
  ret %struct.Memory* %13
}










define %struct.Memory* @routine_movq__0x0__0x8__rdx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_addq__rcx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x2__0x10__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x684__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1668
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__eax__MINUS0x684__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1668
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_43f354(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl_MINUS0x60__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_MINUS0x20__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movzbl_0xb89e60___rcx_1____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = add i64 %12, 12099168
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 8
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = trunc i64 %2 to i32
  %6 = trunc i64 %3 to i32
  %7 = sub i32 %5, %6
  %8 = icmp ult i32 %5, %6
  %9 = zext i1 %8 to i8
  %10 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %9, i8* %10, align 1
  %11 = and i32 %7, 255
  %12 = tail call i32 @llvm.ctpop.i32(i32 %11) #22
  %13 = trunc i32 %12 to i8
  %14 = and i8 %13, 1
  %15 = xor i8 %14, 1
  %16 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %15, i8* %16, align 1
  %17 = xor i64 %3, %2
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %18, %7
  %20 = lshr i32 %19, 4
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %22, i8* %23, align 1
  %24 = icmp eq i32 %7, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %25, i8* %26, align 1
  %27 = lshr i32 %7, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = lshr i32 %5, 31
  %31 = lshr i32 %6, 31
  %32 = xor i32 %31, %30
  %33 = xor i32 %27, %30
  %34 = add   i32 %33, %32
  %35 = icmp eq i32 %34, 2
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %36, i8* %37, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpl__edx___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %EDX = bitcast %union.anon* %11 to i32*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjES2_EEP6MemoryS4_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_43f3f5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_43f41d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x19c___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 412)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x57deea___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x57deea_type* @G__0x57deea to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_xorl__esi___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i32, i32* %ESI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__0x190___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 400)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_leaq_MINUS0x680__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1664
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.memset_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_4408c9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x28__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.owl_find_lunches(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x30__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_cmpl__0xa__MINUS0x684__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1668
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_43f4d1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq_MINUS0x28__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl__0x0__0x87f4__rax__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, 34804
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 0)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_je_.L_43f4b8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movslq_MINUS0x684__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1668
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movslq_0x87f4__rcx__rdx_4____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %RDX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, 34804
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %16)
  ret %struct.Memory* %19
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  %7 = sext i8 %6 to i64
  %8 = and i64 %7, 4294967295
  store i64 %8, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movsbl___rax__rcx_1____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 9
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RSI = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RCX
  %17 = add i64 %16, %15
  %18 = load i64, i64* %PC
  %19 = add i64 %18, 4
  store i64 %19, i64* %PC
  %20 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %17)
  ret %struct.Memory* %20
}


define %struct.Memory* @routine_cmpl__0x0___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_movl__0x0__0x87f4__rax__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, 34804
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 0)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jmpq_.L_43f4bd(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_43f458(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 1)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_leaq_MINUS0x6e0__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1760
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_leaq_MINUS0xc0__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x30__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x34__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 52
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdx__MINUS0xd60__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3424
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq__0x0____rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 0)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x0__0x8__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 9
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_callq_.owl_determine_life(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x9__0x7ae448(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0x7ae448_type* @G_0x7ae448 to i64), i64 9)
  ret %struct.Memory* %8
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = xor i1 %8, %11
  %13 = zext i1 %12 to i8
  store i8 %13, i8* %2, align 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %15 = select i1 %12, i64 %3, i64 %4
  store i64 %15, i64* %14, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jl_.L_43f5f3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x443270___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 ptrtoint( %G__0x443270_type* @G__0x443270 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movq__0x941118___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 ptrtoint( %G__0x941118_type* @G__0x941118 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_leaq_MINUS0xc0__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__0xac22f0___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0xac22f0_type* @G__0xac22f0 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_movl__0x190___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 400)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__r8d___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i32, i32* %R8D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x28__rbp____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__r10__0xac22d8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R10
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xac22d8_type* @G_0xac22d8 to i64), i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__0xac22e0(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 11
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xac22e0_type* @G_0xac22e0 to i64), i64 0)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_movq__rdi__MINUS0xd68__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3432
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__rcx___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq__rdx__MINUS0xd70__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3440
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__r9___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq__rax__MINUS0xd78__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3448
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl_MINUS0x60__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 96
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0xd78__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3448
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x28__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0xd68__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3432
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0xd70__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3440
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_callq_.matchpat(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movzbl_MINUS0x6df__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1759
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_0xac22e0___esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ESI = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ESI
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 ptrtoint( %G_0xac22e0_type* @G_0xac22e0 to i64))
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i8* nocapture, i64, i64) #2 {
  %6 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %7 = load i8, i8* %6, align 1
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %10 = load i8, i8* %9, align 1
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %13 = load i8, i8* %12, align 1
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %11, %14
  %16 = or i1 %8, %15
  %17 = zext i1 %16 to i8
  store i8 %17, i8* %2, align 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %19 = select i1 %16, i64 %3, i64 %4
  store i64 %19, i64* %18, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_jle_.L_43f5dc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_0xac22e0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0xac22e0_type* @G_0xac22e0 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movzbl_MINUS0x6df__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1759
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = trunc i64 %4 to i32
  %8 = sub i32 %6, %7
  %9 = zext i32 %8 to i64
  store i64 %9, i64* %2, align 8
  %10 = icmp ult i32 %6, %7
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %11, i8* %12, align 1
  %13 = and i32 %8, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = trunc i64 %19 to i32
  %21 = xor i32 %20, %8
  %22 = lshr i32 %21, 4
  %23 = trunc i32 %22 to i8
  %24 = and i8 %23, 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i32 %8, 0
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %27, i8* %28, align 1
  %29 = lshr i32 %8, 31
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %30, i8* %31, align 1
  %32 = lshr i32 %6, 31
  %33 = lshr i32 %7, 31
  %34 = xor i32 %33, %32
  %35 = xor i32 %29, %32
  %36 = add   i32 %35, %34
  %37 = icmp eq i32 %36, 2
  %38 = zext i1 %37 to i8
  %39 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %38, i8* %39, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_subl__eax___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #2 {
  %5 = trunc i64 %3 to i8
  store i8 %5, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__cl___dl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 7
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %CL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %DL, i64 %15)
  ret %struct.Memory* %18
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i8
  %6 = inttoptr i64 %2 to i8*
  store i8 %5, i8* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__dl__MINUS0x6df__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1759
  %15 = load i8, i8* %DL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jmpq_.L_43f5ee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movzbl_MINUS0x6df__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1759
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_subl__0x0___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 0)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movb__al___cl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 5
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %13, i32 0, i32 0
  %14 = load i8, i8* %AL
  %15 = zext i8 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 2
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %CL, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movb__cl__MINUS0x6df__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1759
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jmpq_.L_43f5f3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_leaq_MINUS0x6e8__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1768
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_leaq_MINUS0x120__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x28__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq__rdx__MINUS0xd80__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3456
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}












define %struct.Memory* @routine_jl_.L_43f70a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_leaq_MINUS0x120__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movq_MINUS0x30__rbp____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movq__rdi__MINUS0xd88__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3464
  %14 = load i64, i64* %RDI
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq__rdx__MINUS0xd90__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3472
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movq__rax__MINUS0xd98__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3480
  %14 = load i64, i64* %RAX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_movq_MINUS0xd98__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3480
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0xd88__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3464
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0xd90__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3472
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movzbl_MINUS0x6e7__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1767
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_jle_.L_43f6fe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movzbl_MINUS0x6e7__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1767
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movb__dl__MINUS0x6e7__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1767
  %15 = load i8, i8* %DL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jmpq_.L_43f705(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone, %struct.State* nocapture readnone dereferenceable(3376), i64, i64) #8 {
  %5 = trunc i64 %3 to i8
  %6 = inttoptr i64 %2 to i8*
  store i8 %5, i8* %6
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb__0x0__MINUS0x6e7__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1767
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_43f70a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_leaq_MINUS0x6e0__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1760
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.min_eyes(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x2___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jl_.L_43f852(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x6e8__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1768
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.max_eyes(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_43f852(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__0x1____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 1)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x0____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 0)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq_MINUS0x698__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1688
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rax__0xab0ef8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 8
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xab0ef8_type* @G_0xab0ef8 to i64), i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x69c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1692
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__ecx__0xab0eec(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %ECX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xab0eec_type* @G_0xab0eec to i64), i64 %10)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_jne_.L_43f7c1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_43f7bc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_xorl__ecx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %ECX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__0x1___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 1)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57deff___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G__0x57deff_type* @G__0x57deff to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_jmpq_.L_43f7ff(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_43f7fa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x57df14___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G__0x57df14_type* @G__0x57df14 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jmpq_.L_43f804(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_43f819(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_cmpq__0x0__MINUS0x6c0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1728
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_43f84d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}







define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2ORI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = or i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_orl__0x20000000___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2ORI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 536870912)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_orl__0x1000000___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2ORI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 16777216)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__ecx__0x4__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 4
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_jge_.L_43f887(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x2__0xb54ce4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xb54ce4_type* @G_0xb54ce4 to i64), i64 2)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jle_.L_43fbf2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_callq_.owl_escape_route(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x5___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 5)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jl_.L_43fbf2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jge_.L_43f9ba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




























define %struct.Memory* @routine_jne_.L_43f929(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_43f924(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x57df28___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G__0x57df28_type* @G__0x57df28 to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_jmpq_.L_43f967(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_43f962(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x57df47___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G__0x57df47_type* @G__0x57df47 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_jmpq_.L_43f96c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_43f981(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_43f9b5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
























define %struct.Memory* @routine_jl_.L_43fa9b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
























define %struct.Memory* @routine_je_.L_43fa42(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movq__0x57df65___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G__0x57df65_type* @G__0x57df65 to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_jmpq_.L_43fa47(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_43fa5c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_43fa96(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_orl__0x100000___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2ORI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1048576)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_cmpl__0x0__MINUS0x120__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 288
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_43fbe3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl_MINUS0x120__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_jne_.L_43fb3b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_43fb36(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jmpq_.L_43fb7d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_43fb78(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jmpq_.L_43fb82(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_43fb99(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x120__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x50__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 80
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax____rcx_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EAX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_je_.L_43fbde(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl_MINUS0x120__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_andl__0x3ff___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 1023)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %4 to i5
  switch i5 %6, label %13 [
    i5 0, label %45
    i5 1, label %7
  ]

; <label>:7:                                      ; preds = %5
  %8 = trunc i64 %3 to i32
  %9 = shl i32 %8, 1
  %10 = icmp slt i32 %8, 0
  %11 = icmp slt i32 %9, 0
  %12 = xor i1 %10, %11
  br label %23

; <label>:13:                                     ; preds = %5
  %14 = and i64 %4, 31
  %15 = add   i64 %14, 4294967295
  %16 = and i64 %3, 4294967295
  %17 = and i64 %15, 4294967295
  %18 = shl i64 %16, %17
  %19 = trunc i64 %18 to i32
  %20 = icmp slt i32 %19, 0
  %21 = icmp ne i8 0, 0
  %22 = shl i32 %19, 1
  br label %23

; <label>:23:                                     ; preds = %13, %7
  %24 = phi i1 [ %10, %7 ], [ %20, %13 ]
  %25 = phi i1 [ %12, %7 ], [ %21, %13 ]
  %26 = phi i32 [ %9, %7 ], [ %22, %13 ]
  %27 = zext i32 %26 to i64
  store i64 %27, i64* %2, align 8
  %28 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  %29 = zext i1 %24 to i8
  store i8 %29, i8* %28, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  %31 = and i32 %26, 254
  %32 = tail call i32 @llvm.ctpop.i32(i32 %31) #22
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  %35 = xor i8 %34, 1
  store i8 %35, i8* %30, align 1
  %36 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %36, align 1
  %37 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %38 = icmp eq i32 %26, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %37, align 1
  %40 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %41 = lshr i32 %26, 31
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %40, align 1
  %43 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %44 = zext i1 %25 to i8
  store i8 %44, i8* %43, align 1
  br label %45

; <label>:45:                                     ; preds = %23, %5
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_shll__0xa___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 10)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L2ORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = or i64 %4, %3
  %7 = trunc i64 %6 to i32
  %8 = and i64 %6, 4294967295
  store i64 %8, i64* %2, align 8
  %9 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %9, align 1
  %10 = and i32 %7, 255
  %11 = tail call i32 @llvm.ctpop.i32(i32 %10) #22
  %12 = trunc i32 %11 to i8
  %13 = and i8 %12, 1
  %14 = xor i8 %13, 1
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %14, i8* %15, align 1
  %16 = icmp eq i32 %7, 0
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %17, i8* %18, align 1
  %19 = lshr i32 %7, 31
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %20, i8* %21, align 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %23, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_orl__edx___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RCX
  %13 = load i32, i32* %EDX
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2ORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}








define %struct.Memory* @routine_jmpq_.L_43fbe8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_43fbed(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_43fbf2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jge_.L_43fc19(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jl_.L_43fec0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jge_.L_43fcde(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
























define %struct.Memory* @routine_je_.L_43fca0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0x57df6f___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G__0x57df6f_type* @G__0x57df6f to i64))
  ret %struct.Memory* %11
}














define %struct.Memory* @routine_jmpq_.L_43fca5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_43fcd9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
























define %struct.Memory* @routine_jl_.L_43fdbf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
























define %struct.Memory* @routine_je_.L_43fd66(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jmpq_.L_43fd6b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_43fd80(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_43fdba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




















define %struct.Memory* @routine_cmpl__0x0__MINUS0xc0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 192
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_43feb1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl_MINUS0xc0__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_je_.L_43fe45(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}
















define %struct.Memory* @routine_jmpq_.L_43fe4a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_43fe61(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0xc0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_43feac(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_movl_MINUS0xc0__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_jmpq_.L_43feb6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_43febb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_43fec0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_leaq_MINUS0x220__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__0x92aa50___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 ptrtoint( %G__0x92aa50_type* @G__0x92aa50 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_leaq_MINUS0x180__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x5c__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_.owl_shapes(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl__0x2__MINUS0x684__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1668
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_43ff3d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_leaq_MINUS0x180__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x5c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.get_next_move_from_list(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jne_.L_43ff24(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_43ff3d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_43ff29(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_43feee(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_leaq_MINUS0x200__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 512
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__0x919b70___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 ptrtoint( %G__0x919b70_type* @G__0x919b70 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_leaq_MINUS0x1e0__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 480
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq_MINUS0x30__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jge_.L_43ffba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_leaq_MINUS0x1e0__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 480
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_jne_.L_43ffa1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_43ffba(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_43ffa6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_43ff6b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movb__cl__MINUS0xd99__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3481
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jge_.L_43fffc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_cmpl__0x0____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 0)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5SETNZI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture readonly dereferenceable(3376), i8* nocapture) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_setne__dl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5SETNZI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i8* %DL)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movb__dl__MINUS0xd99__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3481
  %15 = load i8, i8* %DL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* returned, %struct.State* nocapture readnone dereferenceable(3376), i8* nocapture, i64) #0 {
  %5 = inttoptr i64 %3 to i8*
  %6 = load i8, i8* %5
  store i8 %6, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movb_MINUS0xd99__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3481
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4TESTI2RnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = and i64 %3, %2
  %6 = trunc i64 %5 to i8
  %7 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 0, i8* %7, align 1
  %8 = trunc i64 %5 to i32
  %9 = and i32 %8, 255
  %10 = tail call i32 @llvm.ctpop.i32(i32 %9) #22
  %11 = trunc i32 %10 to i8
  %12 = and i8 %11, 1
  %13 = xor i8 %12, 1
  %14 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %13, i8* %14, align 1
  %15 = icmp eq i8 %6, 0
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %16, i8* %17, align 1
  %18 = lshr i8 %6, 7
  %19 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %18, i8* %19, align 1
  %20 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %21, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_testb__0x1___al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i8, i8* %AL
  %11 = zext i8 %10 to i64
  %12 = load i64, i64* %PC
  %13 = add i64 %12, 2
  store i64 %13, i64* %PC
  %14 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4TESTI2RnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %11, i64 1)
  ret %struct.Memory* %14
}


define %struct.Memory* @routine_jne_.L_44000f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_4401d6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movl___rax____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}




define %struct.Memory* @routine_callq_.liberty_of_goal(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_4400f2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jne_.L_4400a7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_callq_.safe_move(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_440098(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__MINUS0x4d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1236
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_4400a2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x1__MINUS0x4d8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1240
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_4400ed(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_je_.L_4400de(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__MINUS0x4dc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1244
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_4400e8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x1__MINUS0x4e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1248
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_jmpq_.L_4400f2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}












define %struct.Memory* @routine_movslq___rdx____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movb__0x1__MINUS0x680__rbp__rcx_1_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = add i64 %12, -1664
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 1)
  ret %struct.Memory* %18
}










define %struct.Memory* @routine_movl___rdx____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}




define %struct.Memory* @routine_movq_MINUS0x30__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_callq_.semeai_move_value(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57df7f___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x57df7f_type* @G__0x57df7f to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_xorl__edi___edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDI
  %13 = load i32, i32* %EDI
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 2
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_leaq_MINUS0xc0__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 192
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x2e0__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 736
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x6a0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1696
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x684__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1668
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x5___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R8
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %9, i64 5)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rdx___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__r8___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %R8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl___r9____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl_MINUS0x6a0__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1696
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}










define %struct.Memory* @routine_movl_0x10__r9____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %R9
  %14 = add i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq_MINUS0x684__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1668
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x5___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R9
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %9, i64 5)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r9___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %R9
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x14__rdx____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RDX
  %14 = add i64 %13, 20
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__edi__MINUS0xda0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3488
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rsi___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSI
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}




define %struct.Memory* @routine_movl__r10d___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %R10D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x0____rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 0)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_callq_.owl_add_move(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jmpq_.L_43ffc4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movb__cl__MINUS0xda1__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3489
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jge_.L_440218(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_movb__dl__MINUS0xda1__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3489
  %15 = load i8, i8* %DL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movb_MINUS0xda1__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3489
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_jne_.L_44022b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_440430(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_je_.L_44030e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jne_.L_4402c3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_je_.L_4402b4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_4402be(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jmpq_.L_440309(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_je_.L_4402fa(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_440304(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jmpq_.L_44030e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






























define %struct.Memory* @routine_je_.L_440362(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x2__MINUS0x690__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1680
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 2)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_44036c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x690__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1680
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






























define %struct.Memory* @routine_leaq_MINUS0x120__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 288
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x2e0__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 736
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movslq_MINUS0x684__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1668
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x5___rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSI
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %9, i64 5)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__rdx___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__rsi___r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %RSI
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl___r8____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl_MINUS0x6a0__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1696
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_movq_0x8__r9____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R9
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x690__rbp____r10d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R10D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1680
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}












define %struct.Memory* @routine_movl__ecx__MINUS0xda8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3496
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__r8___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl__r10d___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R10D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}












define %struct.Memory* @routine_jmpq_.L_4401e0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movb__cl__MINUS0xda9__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3497
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jge_.L_440472(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x180__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movb__dl__MINUS0xda9__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3497
  %15 = load i8, i8* %DL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movb_MINUS0xda9__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3497
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_jne_.L_440485(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_440656(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_je_.L_440568(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jne_.L_44051d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_je_.L_44050e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_440518(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jmpq_.L_440563(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_je_.L_440554(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_44055e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jmpq_.L_440568(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










































































define %struct.Memory* @routine_movq__rdx___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_addq__r9___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %R9
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x10__r10____r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %R10
  %14 = add i64 %13, 16
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}












define %struct.Memory* @routine_movl__ecx__MINUS0xdb0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3504
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__r11d___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R11D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}












define %struct.Memory* @routine_jmpq_.L_44043a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_movb__cl__MINUS0xdb1__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3505
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jge_.L_440698(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x1e0__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 480
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movb__dl__MINUS0xdb1__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %DL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3505
  %15 = load i8, i8* %DL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_movb_MINUS0xdb1__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3505
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_jne_.L_4406ab(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_4408b0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_je_.L_44078e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_jne_.L_440743(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_je_.L_440734(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_44073e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jmpq_.L_440789(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


















define %struct.Memory* @routine_je_.L_44077a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_440784(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jmpq_.L_44078e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






























define %struct.Memory* @routine_je_.L_4407e2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jmpq_.L_4407ec(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








































































define %struct.Memory* @routine_movl__ecx__MINUS0xdb8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3512
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}
















define %struct.Memory* @routine_jmpq_.L_440660(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x2e0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 736
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_4408c4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x58__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 88
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_4408c9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x4d4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1236
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_440af7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x64__MINUS0x2dc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 732
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 100)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_440af7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x688__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1672
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_movb__cl__MINUS0xdb9__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3513
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jne_.L_44091a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x688__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1672
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl_0x7ae438___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 ptrtoint( %G_0x7ae438_type* @G_0x7ae438 to i64))
  ret %struct.Memory* %13
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4SETLI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* readnone returned, %struct.State* nocapture readonly dereferenceable(3376), i8* nocapture) #2 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  %5 = load i8, i8* %4, align 1
  %6 = icmp ne i8 %5, 0
  %7 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  %8 = load i8, i8* %7, align 1
  %9 = icmp ne i8 %8, 0
  %10 = xor i1 %6, %9
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %2, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_setl__cl(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4SETLI3RnWIhEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i8* %CL)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movb_MINUS0xdb9__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3513
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_jne_.L_44092d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_440af2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_movl__0x0__MINUS0x68c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1676
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}








define %struct.Memory* @routine_movb__cl__MINUS0xdba__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %CL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3514
  %15 = load i8, i8* %CL
  %16 = zext i8 %15 to i64
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 6
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIhE2RnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %14, i64 %16)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jne_.L_440964(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x68c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1676
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movb_MINUS0xdba__rbp____al(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.anon.2*
  %AL = getelementptr inbounds %struct.anon.2, %struct.anon.2* %9, i32 0, i32 0
  %10 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %11 = getelementptr inbounds %struct.GPR, %struct.GPR* %10, i32 0, i32 15
  %12 = getelementptr inbounds %struct.Reg, %struct.Reg* %11, i32 0, i32 0
  %RBP = bitcast %union.anon* %12 to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3514
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWIhE2MnIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i8* %AL, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_jne_.L_440977(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_440ad9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = inttoptr i64 %3 to i32*
  %7 = load i32, i32* %6
  %8 = sext i32 %7 to i64
  %9 = shl i64 %4, 32
  %10 = ashr exact i64 %9, 32
  %11 = mul  i64 %8, %10
  %12 = trunc i64 %11 to i32
  %13 = and i64 %11, 4294967295
  store i64 %13, i64* %2, align 8
  %14 = shl i64 %11, 32
  %15 = ashr exact i64 %14, 32
  %16 = icmp ne i64 %15, %11
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %17, i8* %18, align 1
  %19 = and i32 %12, 255
  %20 = tail call i32 @llvm.ctpop.i32(i32 %19) #22
  %21 = trunc i32 %20 to i8
  %22 = and i8 %21, 1
  %23 = xor i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %23, i8* %24, align 1
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 0, i8* %26, align 1
  %27 = lshr i32 %12, 31
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %28, i8* %29, align 1
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %17, i8* %30, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_imull__0x14__MINUS0x688__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1672
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4IMULI3RnWImE2MnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13, i64 20)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x15___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 21)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = trunc i64 %3 to i32
  %7 = inttoptr i64 %4 to i32*
  %8 = load i32, i32* %7
  %9 = add i32 %8, %6
  %10 = zext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = icmp ult i32 %9, %6
  %12 = icmp ult i32 %9, %8
  %13 = or i1 %11, %12
  %14 = zext i1 %13 to i8
  %15 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %14, i8* %15, align 1
  %16 = and i32 %9, 255
  %17 = tail call i32 @llvm.ctpop.i32(i32 %16) #22
  %18 = trunc i32 %17 to i8
  %19 = and i8 %18, 1
  %20 = xor i8 %19, 1
  %21 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %20, i8* %21, align 1
  %22 = xor i32 %8, %6
  %23 = xor i32 %22, %9
  %24 = lshr i32 %23, 4
  %25 = trunc i32 %24 to i8
  %26 = and i8 %25, 1
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %26, i8* %27, align 1
  %28 = icmp eq i32 %9, 0
  %29 = zext i1 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %29, i8* %30, align 1
  %31 = lshr i32 %9, 31
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %32, i8* %33, align 1
  %34 = lshr i32 %6, 31
  %35 = lshr i32 %8, 31
  %36 = xor i32 %31, %34
  %37 = xor i32 %31, %35
  %38 = add   i32 %36, %37
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i8
  %41 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %40, i8* %41, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addl_MINUS0x68c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1676
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 6
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2MnIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__eax__MINUS0x6ec__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1772
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0x6ec__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1772
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_jne_.L_440ac0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0x6ec__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1772
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64, i64) #0 {
  %5 = inttoptr i64 %2 to i8*
  %6 = load i8, i8* %5
  %7 = trunc i64 %3 to i8
  %8 = sub i8 %6, %7
  %9 = icmp ult i8 %6, %7
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = zext i8 %8 to i32
  %13 = tail call i32 @llvm.ctpop.i32(i32 %12) #22
  %14 = trunc i32 %13 to i8
  %15 = and i8 %14, 1
  %16 = xor i8 %15, 1
  %17 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %16, i8* %17, align 1
  %18 = xor i8 %6, %7
  %19 = xor i8 %18, %8
  %20 = lshr i8 %19, 4
  %21 = and i8 %20, 1
  %22 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %21, i8* %22, align 1
  %23 = icmp eq i8 %8, 0
  %24 = zext i1 %23 to i8
  %25 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %24, i8* %25, align 1
  %26 = lshr i8 %8, 7
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %26, i8* %27, align 1
  %28 = lshr i8 %6, 7
  %29 = lshr i8 %7, 7
  %30 = xor i8 %28, %29
  %31 = xor i8 %26, %28
  %32 = add   i8 %31, %30
  %33 = icmp eq i8 %32, 2
  %34 = zext i1 %33 to i8
  %35 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %34, i8* %35, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_cmpb__0x0__MINUS0x680__rbp__rax_1_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = add i64 %12, -1664
  %15 = add i64 %14, %13
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 8
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIhE2InIhEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %15, i64 0)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl_MINUS0x6ec__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1772
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_440abb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_jne_.L_440a75(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_je_.L_440a1c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x6ec__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1772
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__eax__MINUS0x300__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 768
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_440a70(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jne_.L_440a6b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x4e4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1252
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_440a66(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0x20__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 32
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x6ec__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1772
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.find_semeai_backfilling_move(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0x340__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 832
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x340__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 832
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_440a61(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x1__MINUS0x4e4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1252
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_440a66(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_440a6b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_jmpq_.L_440ab6(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_je_.L_440aa7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__eax__MINUS0x320__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 800
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_440ab1(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_jmpq_.L_440abb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_440ac0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_440ac5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x68c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1676
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_440937(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_440ade(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_movl__eax__MINUS0x688__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1672
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jmpq_.L_4408ed(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_440af7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_movl__0x640___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 1600)
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_leaq_MINUS0xd30__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3376
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_jge_.L_440e12(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jge_.L_440df9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl__eax__MINUS0xd3c__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3388
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movslq_MINUS0xd3c__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3388
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsbl___rcx__rdx_1____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RCX
  %16 = load i64, i64* %RDX
  %17 = add i64 %16, %15
  %18 = load i64, i64* %PC
  %19 = add i64 %18, 4
  store i64 %19, i64* %PC
  %20 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %17)
  ret %struct.Memory* %20
}




define %struct.Memory* @routine_je_.L_440de0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq_MINUS0xd3c__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3388
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl_MINUS0x60__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %RBP
  %15 = sub i64 %14, 96
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 3
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_jne_.L_440de0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0xd3c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3388
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.find_origin(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__eax__MINUS0xd34__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3380
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movslq_MINUS0xd34__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3380
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0xd30__rbp__rcx_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RCX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -3376
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 8
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 0)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jne_.L_440ddb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0xd3c__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3388
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x14___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 20)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* readnone returned, %struct.State* nocapture readnone dereferenceable(3376), i64* nocapture, i64) #2 {
  %5 = shl i64 %3, 32
  %6 = ashr exact i64 %5, 32
  store i64 %6, i64* %2, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_movslq__eax___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %EAX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl__0x3___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 3
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_440bef(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0xd3c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3388
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_addl__0x14___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 20)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movslq__ecx___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2RnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movsbl___rax__rdx_1____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 5
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RCX = bitcast %union.anon* %11 to i64*
  %12 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.GPR, %struct.GPR* %12, i32 0, i32 7
  %14 = getelementptr inbounds %struct.Reg, %struct.Reg* %13, i32 0, i32 0
  %RDX = bitcast %union.anon* %14 to i64*
  %15 = load i64, i64* %RAX
  %16 = load i64, i64* %RDX
  %17 = add i64 %16, %15
  %18 = load i64, i64* %PC
  %19 = add i64 %18, 4
  store i64 %19, i64* %PC
  %20 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %17)
  ret %struct.Memory* %20
}




define %struct.Memory* @routine_jne_.L_440c9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_je_.L_440c29(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_subl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_subl__0x14___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 20)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_440c63(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_subl__0x14___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 20)
  ret %struct.Memory* %12
}




















define %struct.Memory* @routine_je_.L_440ddb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_addl__0x1___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 1)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl_MINUS0xd34__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3380
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.countlib(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jge_.L_440dc4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0xd38__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_.attack(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_440dc4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl_MINUS0xd38__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}
















define %struct.Memory* @routine_je_.L_440d45(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movq__0x57df94___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G__0x57df94_type* @G__0x57df94 to i64))
  ret %struct.Memory* %11
}












define %struct.Memory* @routine_leaq_MINUS0x220__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 544
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x5c__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 92
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.close_pattern_list(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x200__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 512
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_440d7a(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0xd38__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_440dbf(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl_MINUS0xd38__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3384
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_movslq_MINUS0xd34__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3380
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl__0x1__MINUS0xd30__rbp__rax_4_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = load i64, i64* %RAX
  %14 = mul i64 %13, 4
  %15 = add i64 %12, -3376
  %16 = add i64 %15, %14
  %17 = load i64, i64* %PC
  %18 = add i64 %17, 11
  store i64 %18, i64* %PC
  %19 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %16, i64 1)
  ret %struct.Memory* %19
}


define %struct.Memory* @routine_jmpq_.L_440ddb(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_440de0(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_440de5(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_440b36(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_jmpq_.L_440dfe(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}








define %struct.Memory* @routine_jmpq_.L_440b19(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_440e93(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x300__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 768
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl__0x32___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 50)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x300__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 768
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq__0x57dfa7___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x57dfa7_type* @G__0x57dfa7 to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_leaq_MINUS0x2e0__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 736
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x300__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 768
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edi__MINUS0xdc0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3520
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__rdx___rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 11
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RDX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %12)
  ret %struct.Memory* %15
}




define %struct.Memory* @routine_movl_MINUS0xdc0__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3520
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0xdc0__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3520
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_jmpq_.L_440f88(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_440f14(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_movl_MINUS0x340__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 832
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq__0x57dfbc___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x57dfbc_type* @G__0x57dfbc to i64))
  ret %struct.Memory* %11
}








define %struct.Memory* @routine_movl_MINUS0x340__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 832
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__edi__MINUS0xdc4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDI = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3524
  %14 = load i32, i32* %EDI
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_movl_MINUS0xdc4__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3524
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0xdc4__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 3524
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}






define %struct.Memory* @routine_jmpq_.L_440f83(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x4dc__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1244
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_440f7e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x320__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 800
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl__0xa___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 10)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_movl_MINUS0x320__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 800
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movq__0x57dfcd___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 ptrtoint( %G__0x57dfcd_type* @G__0x57dfcd to i64))
  ret %struct.Memory* %11
}




define %struct.Memory* @routine_xorl__r9d___r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R9D to i64*
  %10 = load i32, i32* %R9D
  %11 = zext i32 %10 to i64
  %12 = load i32, i32* %R9D
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 %11, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x320__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 800
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x6a0__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1696
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






















define %struct.Memory* @routine_jge_.L_4413f7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl___rax____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 2
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl__edx__MINUS0xd40__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EDX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3392
  %14 = load i32, i32* %EDX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_jg_.L_44101b(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x6__0xb54ce4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xb54ce4_type* @G_0xb54ce4 to i64), i64 6)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jle_.L_441000(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x1__MINUS0x684__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1668
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_cmpl__0xc__0xb54ce4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xb54ce4_type* @G_0xb54ce4 to i64), i64 12)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jle_.L_441020(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x684__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1668
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_jmpq_.L_4413e3(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0xd40__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 3392
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_4413de(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_cmpl_0x7ae450___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = load i32, i32* %EAX
  %10 = zext i32 %9 to i64
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2RnIjE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 ptrtoint( %G_0x7ae450_type* @G_0x7ae450 to i64))
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jge_.L_4413de(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x64__0xb54ce4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xb54ce4_type* @G_0xb54ce4 to i64), i64 100)
  ret %struct.Memory* %8
}






define %struct.Memory* @routine_movl_MINUS0xd40__rbp____edi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}












define %struct.Memory* @routine_movq_0x8__rdx____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = add i64 %9, 8
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %10)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl_MINUS0x1c__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x20__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 32
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x58__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 88
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq_MINUS0x684__rbp____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1668
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_shlq__0x5___r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 21
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R10 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %R10
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %9, i64 5)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__r10___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %R10
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x4__rax____r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 1
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RAX = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RAX
  %14 = add i64 %13, 4
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl__r11d____rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i32, i32* %R11D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_callq_.semeai_trymove(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl_0xab0f24___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 7
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 ptrtoint( %G_0xab0f24_type* @G_0xab0f24 to i64))
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_andl__0x40___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %9, i64 64)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_4410c9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_callq_.dump_stack(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_jne_.L_4410f7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x0__MINUS0x6b4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1716
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x1__MINUS0x6b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1712
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jmpq_.L_441229(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_441121(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0xd__0xb54ce4(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 8
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 ptrtoint( %G_0xb54ce4_type* @G_0xb54ce4 to i64), i64 13)
  ret %struct.Memory* %8
}


define %struct.Memory* @routine_jg_.L_441121(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x28__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x30__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.push_owl(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_jmpq_.L_441138(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_leaq_MINUS0x4d0__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_callq_.memcpy_plt(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_shlq__0x5___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 4
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 5)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_addq__rdx___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %RDX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_0x10__rax____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 9
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSI = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 16
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x28__rbp____rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 40
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.owl_update_goal(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x0__0x8a4c__rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = add i64 %9, 35404
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_callq_.owl_update_boundary_marks(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x6b4__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1716
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_leaq_MINUS0x6b0__rbp____rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1712
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__ecx___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 7
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RDX = bitcast %union.anon* %11 to i64*
  %12 = load i32, i32* %ECX
  %13 = zext i32 %12 to i64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 2
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}






define %struct.Memory* @routine_movl_MINUS0x1c__rbp____esi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 28
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x30__rbp____r8(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R8, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x34__rbp____r11d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 23
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R11D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R11D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 52
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movl_MINUS0x58__rbp____ebx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 88
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RBX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq__rdx__MINUS0xdd0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3536
  %14 = load i64, i64* %RDX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__r8___rdx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 17
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R8 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R8
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movl__ecx__MINUS0xdd4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %ECX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3540
  %14 = load i32, i32* %ECX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_movq__r10___rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %12)
  ret %struct.Memory* %15
}




define %struct.Memory* @routine_movq__rax____rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %RAX
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__0x0__0x10__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = add i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__ebx__0x18__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EBX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 13
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RSP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = add i64 %12, 24
  %14 = load i32, i32* %EBX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 4
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_callq_.do_owl_analyze_semeai(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_je_.L_44120d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_jg_.L_44120d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4JNLEEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_leaq_MINUS0x30__rbp____rdi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 11
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 48
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDI, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_callq_.pop_owl(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_jmpq_.L_441224(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}






define %struct.Memory* @routine_leaq_MINUS0x4d0__rbp____rsi(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 9
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSI = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1232
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RSI, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_callq_.popgo(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_(%struct.Memory* %2, %struct.State* %0, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x6b4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1716
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_441333(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x1__MINUS0x6b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1712
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}












define %struct.Memory* @routine_movl_MINUS0xd40__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_4412b4(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


















define %struct.Memory* @routine_addq__r9___rax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = load i64, i64* %R9
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 3
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %12, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_0x8__rax____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RAX
  %13 = add i64 %12, 8
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}


















define %struct.Memory* @routine_je_.L_4412e9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl_MINUS0xd40__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_44132e(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_movl_MINUS0xd40__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3392
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}














define %struct.Memory* @routine_cmpl__0x7__MINUS0x6b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1712
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 7)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_441386(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x7__MINUS0x6b4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1716
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 7)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_cmpl__0x1__MINUS0x6a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1700
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_je_.L_441386(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movl__0x7__MINUS0x6a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1700
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 7)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x7__MINUS0x6a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1704
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 7)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl__eax__MINUS0x6ac__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1708
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}




define %struct.Memory* @routine_movl__eax__MINUS0x6b8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1720
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}


define %struct.Memory* @routine_cmpl__0x0__MINUS0x6b0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1712
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_4413d9(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x1__MINUS0x6b4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1716
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_cmpl__0x3__MINUS0x6a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1700
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 3)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl__0x0__MINUS0x6a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1700
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_movl__0x1__MINUS0x6a8__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1704
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 10
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}










define %struct.Memory* @routine_jmpq_.L_4413de(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}










define %struct.Memory* @routine_jmpq_.L_440fae(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}
















define %struct.Memory* @routine_jne_.L_4414dc(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_cmpl__0x1__MINUS0x54__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 84
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 4
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}






define %struct.Memory* @routine_movl__0x7____rax_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RAX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %9, i64 7)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_je_.L_441483(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x7___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 7)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57dfe1___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G__0x57dfe1_type* @G__0x57dfe1 to i64))
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_jmpq_.L_441488(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_44149d(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}








define %struct.Memory* @routine_je_.L_4414d7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_orl__0x7000000___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2ORI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 117440512)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_orl__0x700000___ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RCX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2ORI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %9, i64 7340032)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_jne_.L_4415f7(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}






define %struct.Memory* @routine_movl__0x1___eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 5
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 1)
  ret %struct.Memory* %11
}










define %struct.Memory* @routine_movl_MINUS0x34__rbp____r9d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R9D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 52
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 4
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq_MINUS0x48__rbp____r10(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R10, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x40__rbp____r11(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R11, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movq__rcx__MINUS0xde0__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3552
  %14 = load i64, i64* %RCX
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %14)
  ret %struct.Memory* %17
}




define %struct.Memory* @routine_movl__r9d___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9D = bitcast %union.anon* %11 to i32*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i32, i32* %R9D
  %14 = zext i32 %13 to i64
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 3
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movq__r10___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 21
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R10 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %R10
  %13 = load i64, i64* %PC
  %14 = add i64 %13, 3
  store i64 %14, i64* %PC
  %15 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %12)
  ret %struct.Memory* %15
}


define %struct.Memory* @routine_movq__r11____rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 23
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R11 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RSP
  %13 = load i64, i64* %R11
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %12, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl__0x1__0x10__rsp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = add i64 %9, 16
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 8
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 1)
  ret %struct.Memory* %13
}




define %struct.Memory* @routine_movl__eax__MINUS0xde4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %EAX = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 3556
  %14 = load i32, i32* %EAX
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %PC
  %17 = add i64 %16, 6
  store i64 %17, i64* %PC
  %18 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %13, i64 %15)
  ret %struct.Memory* %18
}






define %struct.Memory* @routine_je_.L_44157c(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl__0x3___r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = bitcast i32* %R8D to i64*
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 6
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %9, i64 3)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_movq__0x57dfe6___r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 19
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R9 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 10
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 ptrtoint( %G__0x57dfe6_type* @G__0x57dfe6 to i64))
  ret %struct.Memory* %11
}


















define %struct.Memory* @routine_je_.L_4415a8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}












define %struct.Memory* @routine_je_.L_4415f2(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_andl__0xf___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 15)
  ret %struct.Memory* %12
}


define %struct.Memory* @routine_shll__0x18___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 24)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_shll__0x14___edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RDX
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3SHLI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %9, i64 20)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl_MINUS0x6a4__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1700
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x40__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 64
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_movl_MINUS0x6a8__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1704
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movq_MINUS0x48__rbp____rcx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 72
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 4
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}




define %struct.Memory* @routine_cmpl__0x0__MINUS0x6a4__rbp_(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RBP
  %10 = sub i64 %9, 1700
  %11 = load i64, i64* %PC
  %12 = add i64 %11, 7
  store i64 %12, i64* %PC
  %13 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64 %10, i64 0)
  ret %struct.Memory* %13
}


define %struct.Memory* @routine_jne_.L_441626(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}




define %struct.Memory* @routine_movl_MINUS0x6ac__rbp____eax(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 1
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RAX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1708
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RAX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_je_.L_44167f(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl_MINUS0x6ac__rbp____ecx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 5
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RCX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1708
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RCX, i64 %13)
  ret %struct.Memory* %16
}


define %struct.Memory* @routine_movl_MINUS0x6a4__rbp____r8d(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 17
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R8D = bitcast %union.anon* %8 to i32*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = bitcast i32* %R8D to i64*
  %13 = load i64, i64* %RBP
  %14 = sub i64 %13, 1700
  %15 = load i64, i64* %PC
  %16 = add i64 %15, 7
  store i64 %16, i64* %PC
  %17 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %12, i64 %14)
  ret %struct.Memory* %17
}


define %struct.Memory* @routine_movslq_MINUS0x6b8__rbp____r9(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 19
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %R9 = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1720
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 7
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %R9, i64 %13)
  ret %struct.Memory* %16
}










define %struct.Memory* @routine_jmpq_.L_441684(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i64 %rel_off1, i64 %rel_off2) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  store i64 %9, i64* %PC
  %10 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3JMPI2InImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64 %7)
  ret %struct.Memory* %10
}




define %struct.Memory* @routine_je_.L_4416a8(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}














define %struct.Memory* @routine_je_.L_441703(%struct.State*  dereferenceable(3376), i64, %struct.Memory*, i8* %BRANCH_TAKEN, i64 %rel_off1, i64 %rel_off2, i64 %rel_off3) {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, %rel_off1
  %8 = load i64, i64* %PC
  %9 = add i64 %8, %rel_off2
  %10 = load i64, i64* %PC
  %11 = add i64 %10, %rel_off3
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L2JZEP6MemoryR5State3RnWIhE2InImES7_(%struct.Memory* %2, %struct.State* %0, i8* %BRANCH_TAKEN, i64 %7, i64 %9)
  ret %struct.Memory* %12
}










define %struct.Memory* @routine_movl_MINUS0x6a4__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1700
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_MINUS0x6a8__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1704
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}








define %struct.Memory* @routine_movl_MINUS0x6ac__rbp____edx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 7
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RDX = bitcast %union.anon* %8 to i64*
  %9 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %10 = getelementptr inbounds %struct.GPR, %struct.GPR* %9, i32 0, i32 15
  %11 = getelementptr inbounds %struct.Reg, %struct.Reg* %10, i32 0, i32 0
  %RBP = bitcast %union.anon* %11 to i64*
  %12 = load i64, i64* %RBP
  %13 = sub i64 %12, 1708
  %14 = load i64, i64* %PC
  %15 = add i64 %14, 6
  store i64 %15, i64* %PC
  %16 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_(%struct.Memory* %2, %struct.State* %0, i64* %RDX, i64 %13)
  ret %struct.Memory* %16
}













define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* readnone returned, %struct.State* nocapture dereferenceable(3376), i64* nocapture, i64, i64) #0 {
  %6 = add i64 %4, %3
  store i64 %6, i64* %2, align 8
  %7 = icmp ult i64 %6, %3
  %8 = icmp ult i64 %6, %4
  %9 = or i1 %7, %8
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 1
  store i8 %10, i8* %11, align 1
  %12 = trunc i64 %6 to i32
  %13 = and i32 %12, 255
  %14 = tail call i32 @llvm.ctpop.i32(i32 %13) #22
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  %17 = xor i8 %16, 1
  %18 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 3
  store i8 %17, i8* %18, align 1
  %19 = xor i64 %4, %3
  %20 = xor i64 %19, %6
  %21 = lshr i64 %20, 4
  %22 = trunc i64 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 5
  store i8 %23, i8* %24, align 1
  %25 = icmp eq i64 %6, 0
  %26 = zext i1 %25 to i8
  %27 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 7
  store i8 %26, i8* %27, align 1
  %28 = lshr i64 %6, 63
  %29 = trunc i64 %28 to i8
  %30 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 9
  store i8 %29, i8* %30, align 1
  %31 = lshr i64 %3, 63
  %32 = lshr i64 %4, 63
  %33 = xor i64 %28, %31
  %34 = xor i64 %28, %32
  %35 = add   i64 %33, %34
  %36 = icmp eq i64 %35, 2
  %37 = zext i1 %36 to i8
  %38 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 2, i32 13
  store i8 %37, i8* %38, align 1
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_addq__0xdf8___rsp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 13
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RSP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %RSP
  %10 = load i64, i64* %PC
  %11 = add i64 %10, 7
  store i64 %11, i64* %PC
  %12 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_(%struct.Memory* %2, %struct.State* %0, i64* %RSP, i64 %9, i64 3576)
  ret %struct.Memory* %12
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory*, %struct.State* nocapture dereferenceable(3376), i64* nocapture) #0 {
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %5 to i64*
  %8 = load i64, i64* %7
  store i64 %8, i64* %2, align 8
  store i64 %6, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_popq__rbx(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBX = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBX)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__r14(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 29
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R14 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %R14)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__r15(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 31
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %R15 = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 2
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %R15)
  ret %struct.Memory* %11
}


define %struct.Memory* @routine_popq__rbp(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %7 = getelementptr inbounds %struct.GPR, %struct.GPR* %6, i32 0, i32 15
  %8 = getelementptr inbounds %struct.Reg, %struct.Reg* %7, i32 0, i32 0
  %RBP = bitcast %union.anon* %8 to i64*
  %9 = load i64, i64* %PC
  %10 = add i64 %9, 1
  store i64 %10, i64* %PC
  %11 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3POPI3RnWImEEEP6MemoryS4_R5StateT_(%struct.Memory* %2, %struct.State* %0, i64* %RBP)
  ret %struct.Memory* %11
}

define internal %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* returned, %struct.State* nocapture dereferenceable(3376)) #0 {
  %3 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 33, i32 0, i32 0
  %4 = getelementptr inbounds %struct.State, %struct.State* %1, i64 0, i32 6, i32 13, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = inttoptr i64 %5 to i64*
  %7 = load i64, i64* %6
  store i64 %7, i64* %3, align 8
  %8 = add i64 %5, 8
  store i64 %8, i64* %4, align 8
  ret %struct.Memory* %0
}

define %struct.Memory* @routine_retq(%struct.State*  dereferenceable(3376), i64, %struct.Memory* ) #19 {
block_400488:
  %3 = getelementptr inbounds %struct.State, %struct.State* %0, i32 0, i32 6
  %4 = getelementptr inbounds %struct.GPR, %struct.GPR* %3, i32 0, i32 33
  %5 = getelementptr inbounds %struct.Reg, %struct.Reg* %4, i32 0, i32 0
  %PC = bitcast %union.anon* %5 to i64*
  %6 = load i64, i64* %PC
  %7 = add i64 %6, 1
  store i64 %7, i64* %PC
  %8 = call %struct.Memory* @_ZN12_GLOBAL__N_1L3RETEP6MemoryR5State(%struct.Memory* %2, %struct.State* %0)
  ret %struct.Memory* %8
}

