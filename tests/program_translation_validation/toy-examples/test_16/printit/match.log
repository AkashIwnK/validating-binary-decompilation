Writing '/tmp/tmp1r41k89q.dot'...
Writing '/tmp/tmp1r41k89q.dot':Done

Reading LLVM: /tmp/tmpbi7d4h32-query.ll
Extracting function [printit] from /tmp/tmpbi7d4h32-query.ll
Dot file generated!
Writing '/tmp/tmpszz8lpu1.dot'...
Writing '/tmp/tmpszz8lpu1.dot':Done

Reading LLVM: /tmp/tmpnhhjuxky-target.ll
Extracting function [printit] from /tmp/tmpnhhjuxky-target.ll
Dot file generated!
================ Starting round 0
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 store i64 %8, i64* %6, align 8
- 11 %10 = load i64, i64* %3, align 8
- 12 store i64 %8, i64* %RBP.i, align 8
- 13 %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 14 %11 = add i64 %7, -16
- 15 %12 = load i64, i64* %RDI.i, align 8
- 16 %13 = add i64 %10, 7
- 17 store i64 %13, i64* %3, align 8
- 18 %14 = inttoptr i64 %11 to i64*
- 19 store i64 %12, i64* %14, align 8
- 20 %15 = load i64, i64* %RBP.i, align 8
- 21 %16 = add i64 %15, -12
- 22 %17 = load i64, i64* %3, align 8
- 23 %18 = add i64 %17, 7
- 24 store i64 %18, i64* %3, align 8
- 25 %19 = inttoptr i64 %16 to i32*
- 26 store i32 10, i32* %19, align 4
- 27 %RAX.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
- 28 %20 = load i64, i64* %RBP.i, align 8
- 29 %21 = add i64 %20, -12
- 30 %22 = load i64, i64* %3, align 8
- 31 %23 = add i64 %22, 3
- 32 store i64 %23, i64* %3, align 8
- 33 %24 = inttoptr i64 %21 to i32*
- 34 %25 = load i32, i32* %24, align 4
- 35 %26 = zext i32 %25 to i64
- 36 store i64 %26, i64* %RAX.i, align 8
- 37 %27 = add i64 %22, 4
- 38 store i64 %27, i64* %3, align 8
- 39 %28 = load i64, i64* %6, align 8
- 40 %29 = add i64 %28, 8
- 41 %30 = inttoptr i64 %28 to i64*
- 42 %31 = load i64, i64* %30, align 8
- 43 store i64 %31, i64* %RBP.i, align 8
- 44 store i64 %29, i64* %6, align 8
- 45 %32 = add i64 %22, 5
- 46 store i64 %32, i64* %3, align 8
- 47 %33 = inttoptr i64 %29 to i64*
- 48 %34 = load i64, i64* %33, align 8
- 49 store i64 %34, i64* %3, align 8
- 50 %35 = add i64 %28, 16
- 51 store i64 %35, i64* %6, align 8
- 52 \<badref\> = ret %struct.Memory* %2
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f5eb90cbea0>, {0: {0}, 1: {3}, 2: {34, 4, 39, 8, 42, 13, 16, 48, 21, 23, 28, 30}, 3: {5}, 4: {32, 36, 6, 38, 11, 12, 43, 14, 44, 46, 49, 18, 51, 20, 25, 27}, 5: {7}, 6: {34, 4, 39, 8, 42, 13, 16, 48, 21, 23, 28, 30}, 7: {9}, 8: {33, 41, 10, 47, 19, 26}, 9: {32, 36, 6, 38, 11, 12, 43, 14, 44, 46, 49, 18, 51, 20, 25, 27}, 10: {32, 36, 6, 38, 11, 12, 43, 14, 44, 46, 49, 18, 51, 20, 25, 27}, 11: {34, 4, 39, 8, 42, 13, 16, 48, 21, 23, 28, 30}, 12: {32, 36, 6, 38, 11, 12, 43, 14, 44, 46, 49, 18, 51, 20, 25, 27}, 13: {2}, 14: {15}, 15: {34, 4, 39, 8, 42, 13, 16, 48, 21, 23, 28, 30}, 16: {24, 17}, 17: {32, 36, 6, 38, 11, 12, 43, 14, 44, 46, 49, 18, 51, 20, 25, 27}, 18: {33, 41, 10, 47, 19, 26}, 19: {32, 36, 6, 38, 11, 12, 43, 14, 44, 46, 49, 18, 51, 20, 25, 27}, 20: {34, 4, 39, 8, 42, 13, 16, 48, 21, 23, 28, 30}, 21: {29, 22}, 22: {34, 4, 39, 8, 42, 13, 16, 48, 21, 23, 28, 30}, 23: {24, 17}, 24: {32, 36, 6, 38, 11, 12, 43, 14, 44, 46, 49, 18, 51, 20, 25, 27}, 25: {33, 41, 10, 47, 19, 26}, 26: {32, 36, 6, 38, 11, 12, 43, 14, 44, 46, 49, 18, 51, 20, 25, 27}, 27: {1}, 28: {34, 4, 39, 8, 42, 13, 16, 48, 21, 23, 28, 30}, 29: {29, 22}, 30: {34, 4, 39, 8, 42, 13, 16, 48, 21, 23, 28, 30}, 31: {31}, 32: {32, 36, 6, 38, 11, 12, 43, 14, 44, 46, 49, 18, 51, 20, 25, 27}, 33: {33, 41, 10, 47, 19, 26}, 34: {34, 4, 39, 8, 42, 13, 16, 48, 21, 23, 28, 30}, 35: {35}, 36: {32, 36, 6, 38, 11, 12, 43, 14, 44, 46, 49, 18, 51, 20, 25, 27}, 37: {37}, 38: {32, 36, 6, 38, 11, 12, 43, 14, 44, 46, 49, 18, 51, 20, 25, 27}, 39: {34, 4, 39, 8, 42, 13, 16, 48, 21, 23, 28, 30}, 40: {40}, 41: {33, 41, 10, 47, 19, 26}, 42: {34, 4, 39, 8, 42, 13, 16, 48, 21, 23, 28, 30}, 43: {32, 36, 6, 38, 11, 12, 43, 14, 44, 46, 49, 18, 51, 20, 25, 27}, 44: {32, 36, 6, 38, 11, 12, 43, 14, 44, 46, 49, 18, 51, 20, 25, 27}, 45: {45}, 46: {32, 36, 6, 38, 11, 12, 43, 14, 44, 46, 49, 18, 51, 20, 25, 27}, 47: {33, 41, 10, 47, 19, 26}, 48: {34, 4, 39, 8, 42, 13, 16, 48, 21, 23, 28, 30}, 49: {32, 36, 6, 38, 11, 12, 43, 14, 44, 46, 49, 18, 51, 20, 25, 27}, 50: {50}, 51: {32, 36, 6, 38, 11, 12, 43, 14, 44, 46, 49, 18, 51, 20, 25, 27}, 52: {52}})
Equivalent! frozenset({13, 23}) {11, 22}
Equivalent! frozenset({24, 17}) {16, 23}
Equivalent! frozenset({25, 18}) {24, 17}
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f5eb90cbea0>, {0: {0}, 1: {3}, 2: {4}, 3: {5}, 4: {6}, 5: {7}, 6: {8}, 7: {9}, 8: {10}, 9: {11}, 10: {12}, 11: {13}, 12: {14}, 13: {2}, 14: {15}, 15: {16}, 16: {24}, 17: {18}, 18: {19}, 19: {20}, 20: {21}, 21: {22}, 22: {23}, 23: {17}, 24: {25}, 25: {26}, 26: {27}, 27: {1}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}, 42: {42}, 43: {43}, 44: {44}, 45: {45}, 46: {46}, 47: {47}, 48: {48}, 49: {49}, 50: {50}, 51: {51}, 52: {52}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
EXACT 3 add add
EXACT 4 store store
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 store store
EXACT 11 load load
EXACT 12 store store
EXACT 13 getelementptr getelementptr
EXACT 14 add add
EXACT 15 load load
EXACT 16 add add
EXACT 17 store store
EXACT 18 inttoptr inttoptr
EXACT 19 store store
EXACT 20 load load
EXACT 21 add add
EXACT 22 load load
EXACT 23 add add
EXACT 24 store store
EXACT 25 inttoptr inttoptr
EXACT 26 store store
EXACT 27 getelementptr getelementptr
EXACT 28 load load
EXACT 29 add add
EXACT 30 load load
EXACT 31 add add
EXACT 32 store store
EXACT 33 inttoptr inttoptr
EXACT 34 load load
EXACT 35 zext zext
EXACT 36 store store
EXACT 37 add add
EXACT 38 store store
EXACT 39 load load
EXACT 40 add add
EXACT 41 inttoptr inttoptr
EXACT 42 load load
EXACT 43 store store
EXACT 44 store store
EXACT 45 add add
EXACT 46 store store
EXACT 47 inttoptr inttoptr
EXACT 48 load load
EXACT 49 store store
EXACT 50 add add
EXACT 51 store store
EXACT 52 ret ret
================ Starting round 1
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
- 2 %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
- 3 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 4 %3 = load i64, i64* %RBP, align 8
- 5 %4 = add i64 %1, 1
- 6 store i64 %4, i64* %PC, align 8
- 7 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 8 %6 = load i64, i64* %5, align 8
- 9 %7 = add i64 %6, -8
- 10 %8 = inttoptr i64 %7 to i64*
- 11 store i64 %3, i64* %8, align 8
- 12 store i64 %7, i64* %5, align 8
- 13 %9 = load i64, i64* %PC, align 8
- 14 store i64 %7, i64* %RBP, align 8
- 15 %10 = add i64 %6, -16
- 16 %11 = load i64, i64* %RDI, align 8
- 17 %12 = add i64 %9, 7
- 18 store i64 %12, i64* %PC, align 8
- 19 %13 = inttoptr i64 %10 to i64*
- 20 store i64 %11, i64* %13, align 8
- 21 %14 = load i64, i64* %RBP, align 8
- 22 %15 = add i64 %14, -12
- 23 %16 = load i64, i64* %PC, align 8
- 24 %17 = add i64 %16, 7
- 25 store i64 %17, i64* %PC, align 8
- 26 %18 = inttoptr i64 %15 to i32*
- 27 store i32 10, i32* %18, align 4
- 28 %19 = load i64, i64* %RBP, align 8
- 29 %20 = add i64 %19, -12
- 30 %21 = load i64, i64* %PC, align 8
- 31 %22 = add i64 %21, 3
- 32 store i64 %22, i64* %PC, align 8
- 33 %23 = inttoptr i64 %20 to i32*
- 34 %24 = load i32, i32* %23, align 4
- 35 %25 = zext i32 %24 to i64
- 36 store i64 %25, i64* %RAX, align 8
- 37 %26 = add i64 %21, 4
- 38 store i64 %26, i64* %PC, align 8
- 39 %27 = load i64, i64* %5, align 8
- 40 %28 = add i64 %27, 8
- 41 %29 = inttoptr i64 %27 to i64*
- 42 %30 = load i64, i64* %29, align 8
- 43 store i64 %30, i64* %RBP, align 8
- 44 store i64 %28, i64* %5, align 8
- 45 %31 = add i64 %21, 5
- 46 store i64 %31, i64* %PC, align 8
- 47 %32 = inttoptr i64 %28 to i64*
- 48 %33 = load i64, i64* %32, align 8
- 49 store i64 %33, i64* %PC, align 8
- 50 %34 = add i64 %27, 16
- 51 store i64 %34, i64* %5, align 8
- 52 \<badref\> = ret %struct.Memory* %2
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f5eb90cbae8>, {0: {0}, 1: {27}, 2: {13}, 3: {1}, 4: {2, 34, 6, 39, 42, 11, 15, 48, 20, 22, 28, 30}, 5: {3}, 6: {32, 4, 36, 38, 9, 10, 43, 12, 44, 46, 17, 49, 19, 51, 24, 26}, 7: {5}, 8: {2, 34, 6, 39, 42, 11, 15, 48, 20, 22, 28, 30}, 9: {7}, 10: {33, 8, 41, 47, 18, 25}, 11: {32, 4, 36, 38, 9, 10, 43, 12, 44, 46, 17, 49, 19, 51, 24, 26}, 12: {32, 4, 36, 38, 9, 10, 43, 12, 44, 46, 17, 49, 19, 51, 24, 26}, 13: {2, 34, 6, 39, 42, 11, 15, 48, 20, 22, 28, 30}, 14: {32, 4, 36, 38, 9, 10, 43, 12, 44, 46, 17, 49, 19, 51, 24, 26}, 15: {14}, 16: {2, 34, 6, 39, 42, 11, 15, 48, 20, 22, 28, 30}, 17: {16, 23}, 18: {32, 4, 36, 38, 9, 10, 43, 12, 44, 46, 17, 49, 19, 51, 24, 26}, 19: {33, 8, 41, 47, 18, 25}, 20: {32, 4, 36, 38, 9, 10, 43, 12, 44, 46, 17, 49, 19, 51, 24, 26}, 21: {2, 34, 6, 39, 42, 11, 15, 48, 20, 22, 28, 30}, 22: {29, 21}, 23: {2, 34, 6, 39, 42, 11, 15, 48, 20, 22, 28, 30}, 24: {16, 23}, 25: {32, 4, 36, 38, 9, 10, 43, 12, 44, 46, 17, 49, 19, 51, 24, 26}, 26: {33, 8, 41, 47, 18, 25}, 27: {32, 4, 36, 38, 9, 10, 43, 12, 44, 46, 17, 49, 19, 51, 24, 26}, 28: {2, 34, 6, 39, 42, 11, 15, 48, 20, 22, 28, 30}, 29: {29, 21}, 30: {2, 34, 6, 39, 42, 11, 15, 48, 20, 22, 28, 30}, 31: {31}, 32: {32, 4, 36, 38, 9, 10, 43, 12, 44, 46, 17, 49, 19, 51, 24, 26}, 33: {33, 8, 41, 47, 18, 25}, 34: {2, 34, 6, 39, 42, 11, 15, 48, 20, 22, 28, 30}, 35: {35}, 36: {32, 4, 36, 38, 9, 10, 43, 12, 44, 46, 17, 49, 19, 51, 24, 26}, 37: {37}, 38: {32, 4, 36, 38, 9, 10, 43, 12, 44, 46, 17, 49, 19, 51, 24, 26}, 39: {2, 34, 6, 39, 42, 11, 15, 48, 20, 22, 28, 30}, 40: {40}, 41: {33, 8, 41, 47, 18, 25}, 42: {2, 34, 6, 39, 42, 11, 15, 48, 20, 22, 28, 30}, 43: {32, 4, 36, 38, 9, 10, 43, 12, 44, 46, 17, 49, 19, 51, 24, 26}, 44: {32, 4, 36, 38, 9, 10, 43, 12, 44, 46, 17, 49, 19, 51, 24, 26}, 45: {45}, 46: {32, 4, 36, 38, 9, 10, 43, 12, 44, 46, 17, 49, 19, 51, 24, 26}, 47: {33, 8, 41, 47, 18, 25}, 48: {2, 34, 6, 39, 42, 11, 15, 48, 20, 22, 28, 30}, 49: {32, 4, 36, 38, 9, 10, 43, 12, 44, 46, 17, 49, 19, 51, 24, 26}, 50: {50}, 51: {32, 4, 36, 38, 9, 10, 43, 12, 44, 46, 17, 49, 19, 51, 24, 26}, 52: {52}})
Equivalent! frozenset({11, 22}) {13, 23}
Equivalent! frozenset({16, 23}) {24, 17}
Equivalent! frozenset({24, 17}) {25, 18}
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f5eb90cbae8>, {0: {0}, 1: {27}, 2: {13}, 3: {1}, 4: {2}, 5: {3}, 6: {4}, 7: {5}, 8: {6}, 9: {7}, 10: {8}, 11: {9}, 12: {10}, 13: {11}, 14: {12}, 15: {14}, 16: {15}, 17: {23}, 18: {17}, 19: {18}, 20: {19}, 21: {20}, 22: {21}, 23: {22}, 24: {16}, 25: {24}, 26: {25}, 27: {26}, 28: {28}, 29: {29}, 30: {30}, 31: {31}, 32: {32}, 33: {33}, 34: {34}, 35: {35}, 36: {36}, 37: {37}, 38: {38}, 39: {39}, 40: {40}, 41: {41}, 42: {42}, 43: {43}, 44: {44}, 45: {45}, 46: {46}, 47: {47}, 48: {48}, 49: {49}, 50: {50}, 51: {51}, 52: {52}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 getelementptr getelementptr
EXACT 3 getelementptr getelementptr
EXACT 4 load load
EXACT 5 add add
EXACT 6 store store
EXACT 7 getelementptr getelementptr
EXACT 8 load load
EXACT 9 add add
EXACT 10 inttoptr inttoptr
EXACT 11 store store
EXACT 12 store store
EXACT 13 load load
EXACT 14 store store
EXACT 15 add add
EXACT 16 load load
EXACT 17 add add
EXACT 18 store store
EXACT 19 inttoptr inttoptr
EXACT 20 store store
EXACT 21 load load
EXACT 22 add add
EXACT 23 load load
EXACT 24 add add
EXACT 25 store store
EXACT 26 inttoptr inttoptr
EXACT 27 store store
EXACT 28 load load
EXACT 29 add add
EXACT 30 load load
EXACT 31 add add
EXACT 32 store store
EXACT 33 inttoptr inttoptr
EXACT 34 load load
EXACT 35 zext zext
EXACT 36 store store
EXACT 37 add add
EXACT 38 store store
EXACT 39 load load
EXACT 40 add add
EXACT 41 inttoptr inttoptr
EXACT 42 load load
EXACT 43 store store
EXACT 44 store store
EXACT 45 add add
EXACT 46 store store
EXACT 47 inttoptr inttoptr
EXACT 48 load load
EXACT 49 store store
EXACT 50 add add
EXACT 51 store store
EXACT 52 ret ret
FP: 63 1.0 True
TO REMOVE: dict_keys(['%3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0', '%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%5 = add i64 %1, 1', 'store i64 %5, i64* %3, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %6, align 8', '%10 = load i64, i64* %3, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%11 = add i64 %7, -16', '%12 = load i64, i64* %RDI.i, align 8', '%13 = add i64 %10, 7', 'store i64 %13, i64* %3, align 8', '%14 = inttoptr i64 %11 to i64*', 'store i64 %12, i64* %14, align 8', '%15 = load i64, i64* %RBP.i, align 8', '%16 = add i64 %15, -12', '%17 = load i64, i64* %3, align 8', '%18 = add i64 %17, 7', 'store i64 %18, i64* %3, align 8', '%19 = inttoptr i64 %16 to i32*', 'store i32 10, i32* %19, align 4', '%RAX.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0', '%20 = load i64, i64* %RBP.i, align 8', '%21 = add i64 %20, -12', '%22 = load i64, i64* %3, align 8', '%23 = add i64 %22, 3', 'store i64 %23, i64* %3, align 8', '%24 = inttoptr i64 %21 to i32*', '%25 = load i32, i32* %24, align 4', '%26 = zext i32 %25 to i64', 'store i64 %26, i64* %RAX.i, align 8', '%27 = add i64 %22, 4', 'store i64 %27, i64* %3, align 8', '%28 = load i64, i64* %6, align 8', '%29 = add i64 %28, 8', '%30 = inttoptr i64 %28 to i64*', '%31 = load i64, i64* %30, align 8', 'store i64 %31, i64* %RBP.i, align 8', 'store i64 %29, i64* %6, align 8', '%32 = add i64 %22, 5', 'store i64 %32, i64* %3, align 8', '%33 = inttoptr i64 %29 to i64*', '%34 = load i64, i64* %33, align 8', 'store i64 %34, i64* %3, align 8', '%35 = add i64 %28, 16', 'store i64 %35, i64* %6, align 8'])
Keep: entry:
Found line to remove! %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
Found line to remove! %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
Found line to remove! %4 = load i64, i64* %RBP.i, align 8
Found line to remove! %5 = add i64 %1, 1
Found line to remove! store i64 %5, i64* %3, align 8
Found line to remove! %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
Found line to remove! %7 = load i64, i64* %6, align 8
Found line to remove! %8 = add i64 %7, -8
Found line to remove! %9 = inttoptr i64 %8 to i64*
Found line to remove! store i64 %4, i64* %9, align 8
Found line to remove! store i64 %8, i64* %6, align 8
Found line to remove! %10 = load i64, i64* %3, align 8
Found line to remove! store i64 %8, i64* %RBP.i, align 8
Found line to remove! %RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
Found line to remove! %11 = add i64 %7, -16
Found line to remove! %12 = load i64, i64* %RDI.i, align 8
Found line to remove! %13 = add i64 %10, 7
Found line to remove! store i64 %13, i64* %3, align 8
Found line to remove! %14 = inttoptr i64 %11 to i64*
Found line to remove! store i64 %12, i64* %14, align 8
Found line to remove! %15 = load i64, i64* %RBP.i, align 8
Found line to remove! %16 = add i64 %15, -12
Found line to remove! %17 = load i64, i64* %3, align 8
Found line to remove! %18 = add i64 %17, 7
Found line to remove! store i64 %18, i64* %3, align 8
Found line to remove! %19 = inttoptr i64 %16 to i32*
Found line to remove! store i32 10, i32* %19, align 4
Found line to remove! %RAX.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
Found line to remove! %20 = load i64, i64* %RBP.i, align 8
Found line to remove! %21 = add i64 %20, -12
Found line to remove! %22 = load i64, i64* %3, align 8
Found line to remove! %23 = add i64 %22, 3
Found line to remove! store i64 %23, i64* %3, align 8
Found line to remove! %24 = inttoptr i64 %21 to i32*
Found line to remove! %25 = load i32, i32* %24, align 4
Found line to remove! %26 = zext i32 %25 to i64
Found line to remove! store i64 %26, i64* %RAX.i, align 8
Found line to remove! %27 = add i64 %22, 4
Found line to remove! store i64 %27, i64* %3, align 8
Found line to remove! %28 = load i64, i64* %6, align 8
Found line to remove! %29 = add i64 %28, 8
Found line to remove! %30 = inttoptr i64 %28 to i64*
Found line to remove! %31 = load i64, i64* %30, align 8
Found line to remove! store i64 %31, i64* %RBP.i, align 8
Found line to remove! store i64 %29, i64* %6, align 8
Found line to remove! %32 = add i64 %22, 5
Found line to remove! store i64 %32, i64* %3, align 8
Found line to remove! %33 = inttoptr i64 %29 to i64*
Found line to remove! %34 = load i64, i64* %33, align 8
Found line to remove! store i64 %34, i64* %3, align 8
Found line to remove! %35 = add i64 %28, 16
Found line to remove! store i64 %35, i64* %6, align 8
Keep: ret %struct.Memory* %2
Missed: dict_keys(['%3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0', '%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%5 = add i64 %1, 1', 'store i64 %5, i64* %3, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %6, align 8', '%10 = load i64, i64* %3, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%RDI.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%11 = add i64 %7, -16', '%12 = load i64, i64* %RDI.i, align 8', '%13 = add i64 %10, 7', 'store i64 %13, i64* %3, align 8', '%14 = inttoptr i64 %11 to i64*', 'store i64 %12, i64* %14, align 8', '%15 = load i64, i64* %RBP.i, align 8', '%16 = add i64 %15, -12', '%17 = load i64, i64* %3, align 8', '%18 = add i64 %17, 7', 'store i64 %18, i64* %3, align 8', '%19 = inttoptr i64 %16 to i32*', 'store i32 10, i32* %19, align 4', '%RAX.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0', '%20 = load i64, i64* %RBP.i, align 8', '%21 = add i64 %20, -12', '%22 = load i64, i64* %3, align 8', '%23 = add i64 %22, 3', 'store i64 %23, i64* %3, align 8', '%24 = inttoptr i64 %21 to i32*', '%25 = load i32, i32* %24, align 4', '%26 = zext i32 %25 to i64', 'store i64 %26, i64* %RAX.i, align 8', '%27 = add i64 %22, 4', 'store i64 %27, i64* %3, align 8', '%28 = load i64, i64* %6, align 8', '%29 = add i64 %28, 8', '%30 = inttoptr i64 %28 to i64*', '%31 = load i64, i64* %30, align 8', 'store i64 %31, i64* %RBP.i, align 8', 'store i64 %29, i64* %6, align 8', '%32 = add i64 %22, 5', 'store i64 %32, i64* %3, align 8', '%33 = inttoptr i64 %29 to i64*', '%34 = load i64, i64* %33, align 8', 'store i64 %34, i64* %3, align 8', '%35 = add i64 %28, 16', 'store i64 %35, i64* %6, align 8'])
TO REMOVE: dict_keys(['%PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0', '%RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%4 = add i64 %1, 1', 'store i64 %4, i64* %PC, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %5, align 8', '%9 = load i64, i64* %PC, align 8', 'store i64 %7, i64* %RBP, align 8', '%10 = add i64 %6, -16', '%11 = load i64, i64* %RDI, align 8', '%12 = add i64 %9, 7', 'store i64 %12, i64* %PC, align 8', '%13 = inttoptr i64 %10 to i64*', 'store i64 %11, i64* %13, align 8', '%14 = load i64, i64* %RBP, align 8', '%15 = add i64 %14, -12', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 7', 'store i64 %17, i64* %PC, align 8', '%18 = inttoptr i64 %15 to i32*', 'store i32 10, i32* %18, align 4', '%19 = load i64, i64* %RBP, align 8', '%20 = add i64 %19, -12', '%21 = load i64, i64* %PC, align 8', '%22 = add i64 %21, 3', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %20 to i32*', '%24 = load i32, i32* %23, align 4', '%25 = zext i32 %24 to i64', 'store i64 %25, i64* %RAX, align 8', '%26 = add i64 %21, 4', 'store i64 %26, i64* %PC, align 8', '%27 = load i64, i64* %5, align 8', '%28 = add i64 %27, 8', '%29 = inttoptr i64 %27 to i64*', '%30 = load i64, i64* %29, align 8', 'store i64 %30, i64* %RBP, align 8', 'store i64 %28, i64* %5, align 8', '%31 = add i64 %21, 5', 'store i64 %31, i64* %PC, align 8', '%32 = inttoptr i64 %28 to i64*', '%33 = load i64, i64* %32, align 8', 'store i64 %33, i64* %PC, align 8', '%34 = add i64 %27, 16', 'store i64 %34, i64* %5, align 8'])
Keep: block_4004f0:
Found line to remove! %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
Found line to remove! %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0
Found line to remove! %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0
Found line to remove! %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
Found line to remove! %3 = load i64, i64* %RBP, align 8
Found line to remove! %4 = add i64 %1, 1
Found line to remove! store i64 %4, i64* %PC, align 8
Found line to remove! %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
Found line to remove! %6 = load i64, i64* %5, align 8
Found line to remove! %7 = add i64 %6, -8
Found line to remove! %8 = inttoptr i64 %7 to i64*
Found line to remove! store i64 %3, i64* %8, align 8
Found line to remove! store i64 %7, i64* %5, align 8
Found line to remove! %9 = load i64, i64* %PC, align 8
Found line to remove! store i64 %7, i64* %RBP, align 8
Found line to remove! %10 = add i64 %6, -16
Found line to remove! %11 = load i64, i64* %RDI, align 8
Found line to remove! %12 = add i64 %9, 7
Found line to remove! store i64 %12, i64* %PC, align 8
Found line to remove! %13 = inttoptr i64 %10 to i64*
Found line to remove! store i64 %11, i64* %13, align 8
Found line to remove! %14 = load i64, i64* %RBP, align 8
Found line to remove! %15 = add i64 %14, -12
Found line to remove! %16 = load i64, i64* %PC, align 8
Found line to remove! %17 = add i64 %16, 7
Found line to remove! store i64 %17, i64* %PC, align 8
Found line to remove! %18 = inttoptr i64 %15 to i32*
Found line to remove! store i32 10, i32* %18, align 4
Found line to remove! %19 = load i64, i64* %RBP, align 8
Found line to remove! %20 = add i64 %19, -12
Found line to remove! %21 = load i64, i64* %PC, align 8
Found line to remove! %22 = add i64 %21, 3
Found line to remove! store i64 %22, i64* %PC, align 8
Found line to remove! %23 = inttoptr i64 %20 to i32*
Found line to remove! %24 = load i32, i32* %23, align 4
Found line to remove! %25 = zext i32 %24 to i64
Found line to remove! store i64 %25, i64* %RAX, align 8
Found line to remove! %26 = add i64 %21, 4
Found line to remove! store i64 %26, i64* %PC, align 8
Found line to remove! %27 = load i64, i64* %5, align 8
Found line to remove! %28 = add i64 %27, 8
Found line to remove! %29 = inttoptr i64 %27 to i64*
Found line to remove! %30 = load i64, i64* %29, align 8
Found line to remove! store i64 %30, i64* %RBP, align 8
Found line to remove! store i64 %28, i64* %5, align 8
Found line to remove! %31 = add i64 %21, 5
Found line to remove! store i64 %31, i64* %PC, align 8
Found line to remove! %32 = inttoptr i64 %28 to i64*
Found line to remove! %33 = load i64, i64* %32, align 8
Found line to remove! store i64 %33, i64* %PC, align 8
Found line to remove! %34 = add i64 %27, 16
Found line to remove! store i64 %34, i64* %5, align 8
Keep: ret %struct.Memory* %2
Missed: dict_keys(['%PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0', '%RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0', '%RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%4 = add i64 %1, 1', 'store i64 %4, i64* %PC, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %5, align 8', '%9 = load i64, i64* %PC, align 8', 'store i64 %7, i64* %RBP, align 8', '%10 = add i64 %6, -16', '%11 = load i64, i64* %RDI, align 8', '%12 = add i64 %9, 7', 'store i64 %12, i64* %PC, align 8', '%13 = inttoptr i64 %10 to i64*', 'store i64 %11, i64* %13, align 8', '%14 = load i64, i64* %RBP, align 8', '%15 = add i64 %14, -12', '%16 = load i64, i64* %PC, align 8', '%17 = add i64 %16, 7', 'store i64 %17, i64* %PC, align 8', '%18 = inttoptr i64 %15 to i32*', 'store i32 10, i32* %18, align 4', '%19 = load i64, i64* %RBP, align 8', '%20 = add i64 %19, -12', '%21 = load i64, i64* %PC, align 8', '%22 = add i64 %21, 3', 'store i64 %22, i64* %PC, align 8', '%23 = inttoptr i64 %20 to i32*', '%24 = load i32, i32* %23, align 4', '%25 = zext i32 %24 to i64', 'store i64 %25, i64* %RAX, align 8', '%26 = add i64 %21, 4', 'store i64 %26, i64* %PC, align 8', '%27 = load i64, i64* %5, align 8', '%28 = add i64 %27, 8', '%29 = inttoptr i64 %27 to i64*', '%30 = load i64, i64* %29, align 8', 'store i64 %30, i64* %RBP, align 8', 'store i64 %28, i64* %5, align 8', '%31 = add i64 %21, 5', 'store i64 %31, i64* %PC, align 8', '%32 = inttoptr i64 %28 to i64*', '%33 = load i64, i64* %32, align 8', 'store i64 %33, i64* %PC, align 8', '%34 = add i64 %27, 16', 'store i64 %34, i64* %5, align 8'])
[*] Found exact, syntactic match! /home/ubuntu/Github/validating-binary-decompilation/tests/program_translation_validation/toy-examples/test_16/printit/mcsema/test.proposed.ll /home/ubuntu/Github/validating-binary-decompilation/tests/program_translation_validation/toy-examples/test_16/binary/test.mcsema.calls_renamed.ll printit
/home/ubuntu/Github/llir-matcher/matcher/match.py:711: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
  config = yaml.load(fd)
