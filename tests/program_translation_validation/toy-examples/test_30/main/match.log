Matching sub_400560_main Vs main


[Info] Retrieve Potential Matches...
[0x557b5e3b02b0]:   %74 = xor i64 %73, %64 {
	[0x557b5e3c6670]:  %23 = xor i64 %22, %11
	[0x557b5e3c6fa0]:  %35 = xor i64 %31, %34
	[0x557b5e3c7a20]:  %84 = xor i64 %81, %83
	[0x557b5e3cb340]:  %75 = xor i64 %74, %65
	}

[0x557b5e3b0330]:   %75 = lshr i64 %74, 4 {
	[0x557b5e3d0030]:  %76 = lshr i64 %75, 4
	[0x557b5e439430]:  %24 = lshr i64 %23, 4
	}

[0x557b5e3b0398]:   %76 = trunc i64 %75 to i8 {
	[0x557b5e3c7cc8]:  %82 = trunc i64 %81 to i8
	[0x557b5e434298]:  %25 = trunc i64 %24 to i8
	[0x557b5e4346c8]:  %18 = trunc i32 %17 to i8
	[0x557b5e436748]:  %15 = trunc i64 %11 to i32
	[0x557b5e43eb98]:  %77 = trunc i64 %76 to i8
	[0x557b5e43edf8]:  %71 = trunc i32 %70 to i8
	[0x557b5e43ef28]:  %68 = trunc i64 %65 to i32
	[0x557b5e4696e8]:  %32 = trunc i64 %31 to i8
	}

[0x557b5e3b0410]:   %77 = and i8 %76, 1 {
	[0x557b5e3cb410]:  %72 = and i8 %71, 1
	[0x557b5e3cfe50]:  %78 = and i8 %77, 1
	[0x557b5e438480]:  %26 = and i8 %25, 1
	[0x557b5e439870]:  %19 = and i8 %18, 1
	}

[0x557b5e3b0490]:   store i8 %77, i8* %26, align 1, !tbaa !1280 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e3b0510]:   %78 = icmp eq i64 %64, 0 {
	[0x557b5e3c77a0]:  %86 = icmp eq i64 %85, 2
	[0x557b5e3cd000]:  %66 = icmp ugt i64 %63, -17
	[0x557b5e3cfb90]:  %79 = icmp eq i64 %65, 0
	[0x557b5e433ba0]:  %12 = icmp ult i64 %8, 16
	[0x557b5e439dc0]:  %28 = icmp eq i64 %11, 0
	[0x557b5e43a420]:  %37 = icmp eq i64 %36, 2
	}

[0x557b5e3b0578]:   %79 = zext i1 %78 to i8 {
	[0x557b5e39b4a8]:  %38 = zext i1 %37 to i8
	[0x557b5e436478]:  %13 = zext i1 %12 to i8
	[0x557b5e43d1f8]:  %67 = zext i1 %66 to i8
	[0x557b5e43e478]:  %87 = zext i1 %86 to i8
	[0x557b5e43ea68]:  %80 = zext i1 %79 to i8
	[0x557b5e46d728]:  %29 = zext i1 %28 to i8
	}

[0x557b5e3b05f0]:   store i8 %79, i8* %29, align 1, !tbaa !1281 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e3b0670]:   %80 = lshr i64 %64, 63 {
	[0x557b5e3cdf80]:  %81 = lshr i64 %65, 63
	[0x557b5e3d0180]:  %83 = lshr i64 %63, 63
	[0x557b5e438680]:  %34 = lshr i64 %8, 63
	[0x557b5e4387d0]:  %31 = lshr i64 %11, 63
	}

[0x557b5e3b06d8]:   %81 = trunc i64 %80 to i8 {
	[0x557b5e3c7cc8]:  %82 = trunc i64 %81 to i8
	[0x557b5e434298]:  %25 = trunc i64 %24 to i8
	[0x557b5e4346c8]:  %18 = trunc i32 %17 to i8
	[0x557b5e436748]:  %15 = trunc i64 %11 to i32
	[0x557b5e43eb98]:  %77 = trunc i64 %76 to i8
	[0x557b5e43edf8]:  %71 = trunc i32 %70 to i8
	[0x557b5e43ef28]:  %68 = trunc i64 %65 to i32
	[0x557b5e4696e8]:  %32 = trunc i64 %31 to i8
	}

[0x557b5e3b0750]:   store i8 %81, i8* %32, align 1, !tbaa !1282 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e3b07d0]:   %82 = lshr i64 %62, 63 {
	[0x557b5e3cdf80]:  %81 = lshr i64 %65, 63
	[0x557b5e3d0180]:  %83 = lshr i64 %63, 63
	[0x557b5e438680]:  %34 = lshr i64 %8, 63
	[0x557b5e4387d0]:  %31 = lshr i64 %11, 63
	}

[0x557b5e3b0850]:   %83 = xor i64 %80, %82 {
	[0x557b5e3c6670]:  %23 = xor i64 %22, %11
	[0x557b5e3c6fa0]:  %35 = xor i64 %31, %34
	[0x557b5e3c7a20]:  %84 = xor i64 %81, %83
	[0x557b5e3cb340]:  %75 = xor i64 %74, %65
	}

[0x557b5e3b08d0]:   %84 = add nuw nsw i64 %83, %80 {
	[0x557b5e3c78c0]:  %85 = add nuw nsw i64 %84, %81
	[0x557b5e3c81a0]:  %36 = add nuw nsw i64 %35, %34
	}

[0x557b5e3b0950]:   %85 = icmp eq i64 %84, 2 {
	[0x557b5e3c77a0]:  %86 = icmp eq i64 %85, 2
	[0x557b5e3cd000]:  %66 = icmp ugt i64 %63, -17
	[0x557b5e3cfb90]:  %79 = icmp eq i64 %65, 0
	[0x557b5e433ba0]:  %12 = icmp ult i64 %8, 16
	[0x557b5e439dc0]:  %28 = icmp eq i64 %11, 0
	[0x557b5e43a420]:  %37 = icmp eq i64 %36, 2
	}

[0x557b5e3b09b8]:   %86 = zext i1 %85 to i8 {
	[0x557b5e39b4a8]:  %38 = zext i1 %37 to i8
	[0x557b5e436478]:  %13 = zext i1 %12 to i8
	[0x557b5e43d1f8]:  %67 = zext i1 %66 to i8
	[0x557b5e43e478]:  %87 = zext i1 %86 to i8
	[0x557b5e43ea68]:  %80 = zext i1 %79 to i8
	[0x557b5e46d728]:  %29 = zext i1 %28 to i8
	}

[0x557b5e3b0a30]:   store i8 %86, i8* %38, align 1, !tbaa !1283 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e3b0ab0]:   %87 = add i64 %63, 5 {
	[0x557b5e3c7470]:  %88 = add i64 %64, 5
	}

[0x557b5e3b0b30]:   store i64 %87, i64* %PC, align 8 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e3b0bb0]:   %88 = add i64 %62, 24 {
	[0x557b5e3c8830]:  %41 = add i64 %10, 24
	[0x557b5e3d0440]:  %89 = add i64 %63, 24
	}

[0x557b5e3b0c18]:   %89 = inttoptr i64 %64 to i64* {
	[0x557b5e423f28]:  %9 = inttoptr i64 %8 to i64*
	[0x557b5e437838]:  %42 = inttoptr i64 %40 to i32*
	[0x557b5e43a8a8]:  %49 = inttoptr i64 %45 to i32*
	[0x557b5e43c158]:  %62 = inttoptr i64 %61 to i64*
	[0x557b5e43d0c8]:  %55 = inttoptr i64 %51 to i64*
	[0x557b5e43d328]:  %90 = inttoptr i64 %65 to i64*
	[0x557b5e440228]:  %93 = inttoptr i64 %89 to i64*
	}

[0x557b5e3b0c78]:   %90 = load i64, i64* %89, align 8 {
	[0x557b5e3bb3a8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x557b5e3c6e28]:  %50 = load i64, i64* %RBP.i, align 8
	[0x557b5e3f10e8]:  %10 = load i64, i64* %3, align 8
	[0x557b5e423bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x557b5e423d98]:  %7 = load i64, i64* %6, align 8
	[0x557b5e43a9d8]:  %47 = load i64, i64* %3, align 8
	[0x557b5e43ad68]:  %46 = load i32, i32* %EDI.i, align 4
	[0x557b5e43b448]:  %44 = load i64, i64* %RBP.i, align 8
	[0x557b5e43ba38]:  %53 = load i64, i64* %3, align 8
	[0x557b5e43bef8]:  %64 = load i64, i64* %3, align 8
	[0x557b5e43c028]:  %63 = load i64, i64* %6, align 8
	[0x557b5e43cc08]:  %60 = load i64, i64* %6, align 8
	[0x557b5e43ce68]:  %57 = load i64, i64* %3, align 8
	[0x557b5e43cf98]:  %56 = load i64, i64* %RAX.i14, align 8
	[0x557b5e43f058]:  %91 = load i64, i64* %90, align 8
	[0x557b5e4400f8]:  %94 = load i64, i64* %93, align 8
	}

[0x557b5e3b0cf0]:   store i64 %90, i64* %RBP, align 8, !tbaa !1261 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e3b0d70]:   store i64 %88, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e3b0df0]:   %91 = add i64 %63, 6 {
	[0x557b5e3d2f30]:  %92 = add i64 %64, 6
	}

[0x557b5e3b0e70]:   store i64 %91, i64* %PC, align 8 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e3b0ed8]:   %92 = inttoptr i64 %88 to i64* {
	[0x557b5e423f28]:  %9 = inttoptr i64 %8 to i64*
	[0x557b5e437838]:  %42 = inttoptr i64 %40 to i32*
	[0x557b5e43a8a8]:  %49 = inttoptr i64 %45 to i32*
	[0x557b5e43c158]:  %62 = inttoptr i64 %61 to i64*
	[0x557b5e43d0c8]:  %55 = inttoptr i64 %51 to i64*
	[0x557b5e43d328]:  %90 = inttoptr i64 %65 to i64*
	[0x557b5e440228]:  %93 = inttoptr i64 %89 to i64*
	}

[0x557b5e3b0f38]:   %93 = load i64, i64* %92, align 8 {
	[0x557b5e3bb3a8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x557b5e3c6e28]:  %50 = load i64, i64* %RBP.i, align 8
	[0x557b5e3f10e8]:  %10 = load i64, i64* %3, align 8
	[0x557b5e423bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x557b5e423d98]:  %7 = load i64, i64* %6, align 8
	[0x557b5e43a9d8]:  %47 = load i64, i64* %3, align 8
	[0x557b5e43ad68]:  %46 = load i32, i32* %EDI.i, align 4
	[0x557b5e43b448]:  %44 = load i64, i64* %RBP.i, align 8
	[0x557b5e43ba38]:  %53 = load i64, i64* %3, align 8
	[0x557b5e43bef8]:  %64 = load i64, i64* %3, align 8
	[0x557b5e43c028]:  %63 = load i64, i64* %6, align 8
	[0x557b5e43cc08]:  %60 = load i64, i64* %6, align 8
	[0x557b5e43ce68]:  %57 = load i64, i64* %3, align 8
	[0x557b5e43cf98]:  %56 = load i64, i64* %RAX.i14, align 8
	[0x557b5e43f058]:  %91 = load i64, i64* %90, align 8
	[0x557b5e4400f8]:  %94 = load i64, i64* %93, align 8
	}

[0x557b5e3b0fb0]:   store i64 %93, i64* %PC, align 8, !tbaa !1261 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e3b1030]:   %94 = add i64 %62, 32 {
	[0x557b5e3d2a90]:  %95 = add i64 %63, 32
	}

[0x557b5e3b10b0]:   store i64 %94, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e3b1118]:   ret %struct.Memory* %61 {
	[0x557b5e43ffc8]:  ret %struct.Memory.31* %call2_400583
	}

[0x557b5e417b30]: i64 %1 {
	[0x557b5e3c8780]:i64 %1
	}

[0x557b5e417b70]: %struct.State* %0 {
	[0x557b5e3c8b90]:%struct.State.0* %0
	}

[0x557b5e418990]: %struct.Memory* %2 {
	[0x557b5e43a100]:%struct.Memory.31* %2
	}

[0x557b5e418b48]:   %EDI = bitcast %union.anon* %3 to i32* {
	[0x557b5e43b6a8]:  %EDI.i = bitcast %union.anon.4* %43 to i32*
	}

[0x557b5e418c20]:   %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0 {
	[0x557b5e3b9420]:  %3 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 33, i32 0, i32 0
	}

[0x557b5e418d10]:   %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0 {
	[0x557b5e46f220]:  %RAX.i14 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 1, i32 0, i32 0
	}

[0x557b5e418e20]:   %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0 {
	[0x557b5e46ee80]:  %RSI.i = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 9, i32 0, i32 0
	}

[0x557b5e418ee8]:   %RDI = getelementptr inbounds %union.anon, %union.anon* %3, i64 0, i32 0 {
	[0x557b5e427aa8]:  %RDI.i = getelementptr inbounds %union.anon.4, %union.anon.4* %43, i64 0, i32 0
	}

[0x557b5e418ff0]:   %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0 {
	[0x557b5e46f410]:  %6 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 13, i32 0, i32 0
	}

[0x557b5e419100]:   %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0 {
	[0x557b5e46f5e0]:  %RBP.i = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 15, i32 0, i32 0
	}

[0x557b5e419198]:   %4 = load i64, i64* %RBP, align 8 {
	[0x557b5e3bb3a8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x557b5e3c6e28]:  %50 = load i64, i64* %RBP.i, align 8
	[0x557b5e3f10e8]:  %10 = load i64, i64* %3, align 8
	[0x557b5e423bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x557b5e423d98]:  %7 = load i64, i64* %6, align 8
	[0x557b5e43a9d8]:  %47 = load i64, i64* %3, align 8
	[0x557b5e43ad68]:  %46 = load i32, i32* %EDI.i, align 4
	[0x557b5e43b448]:  %44 = load i64, i64* %RBP.i, align 8
	[0x557b5e43ba38]:  %53 = load i64, i64* %3, align 8
	[0x557b5e43bef8]:  %64 = load i64, i64* %3, align 8
	[0x557b5e43c028]:  %63 = load i64, i64* %6, align 8
	[0x557b5e43cc08]:  %60 = load i64, i64* %6, align 8
	[0x557b5e43ce68]:  %57 = load i64, i64* %3, align 8
	[0x557b5e43cf98]:  %56 = load i64, i64* %RAX.i14, align 8
	[0x557b5e43f058]:  %91 = load i64, i64* %90, align 8
	[0x557b5e4400f8]:  %94 = load i64, i64* %93, align 8
	}

[0x557b5e419260]:   %5 = add i64 %1, 1 {
	[0x557b5e47f720]:  %5 = add i64 %1, 1
	}

[0x557b5e4192e0]:   store i64 %5, i64* %PC, align 8 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e419348]:   %6 = load i64, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e3bb3a8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x557b5e3c6e28]:  %50 = load i64, i64* %RBP.i, align 8
	[0x557b5e3f10e8]:  %10 = load i64, i64* %3, align 8
	[0x557b5e423bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x557b5e423d98]:  %7 = load i64, i64* %6, align 8
	[0x557b5e43a9d8]:  %47 = load i64, i64* %3, align 8
	[0x557b5e43ad68]:  %46 = load i32, i32* %EDI.i, align 4
	[0x557b5e43b448]:  %44 = load i64, i64* %RBP.i, align 8
	[0x557b5e43ba38]:  %53 = load i64, i64* %3, align 8
	[0x557b5e43bef8]:  %64 = load i64, i64* %3, align 8
	[0x557b5e43c028]:  %63 = load i64, i64* %6, align 8
	[0x557b5e43cc08]:  %60 = load i64, i64* %6, align 8
	[0x557b5e43ce68]:  %57 = load i64, i64* %3, align 8
	[0x557b5e43cf98]:  %56 = load i64, i64* %RAX.i14, align 8
	[0x557b5e43f058]:  %91 = load i64, i64* %90, align 8
	[0x557b5e4400f8]:  %94 = load i64, i64* %93, align 8
	}

[0x557b5e4193c0]:   %7 = add i64 %6, -8 {
	[0x557b5e3c4e10]:  %8 = add i64 %7, -8
	[0x557b5e3c8ae0]:  %45 = add i64 %44, -8
	[0x557b5e3ca440]:  %61 = add i64 %60, -8
	}

[0x557b5e419428]:   %8 = inttoptr i64 %7 to i64* {
	[0x557b5e423f28]:  %9 = inttoptr i64 %8 to i64*
	[0x557b5e437838]:  %42 = inttoptr i64 %40 to i32*
	[0x557b5e43a8a8]:  %49 = inttoptr i64 %45 to i32*
	[0x557b5e43c158]:  %62 = inttoptr i64 %61 to i64*
	[0x557b5e43d0c8]:  %55 = inttoptr i64 %51 to i64*
	[0x557b5e43d328]:  %90 = inttoptr i64 %65 to i64*
	[0x557b5e440228]:  %93 = inttoptr i64 %89 to i64*
	}

[0x557b5e419530]:   store i64 %4, i64* %8, align 8 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e419598]:   %9 = load i64, i64* %PC, align 8 {
	[0x557b5e3bb3a8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x557b5e3c6e28]:  %50 = load i64, i64* %RBP.i, align 8
	[0x557b5e3f10e8]:  %10 = load i64, i64* %3, align 8
	[0x557b5e423bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x557b5e423d98]:  %7 = load i64, i64* %6, align 8
	[0x557b5e43a9d8]:  %47 = load i64, i64* %3, align 8
	[0x557b5e43ad68]:  %46 = load i32, i32* %EDI.i, align 4
	[0x557b5e43b448]:  %44 = load i64, i64* %RBP.i, align 8
	[0x557b5e43ba38]:  %53 = load i64, i64* %3, align 8
	[0x557b5e43bef8]:  %64 = load i64, i64* %3, align 8
	[0x557b5e43c028]:  %63 = load i64, i64* %6, align 8
	[0x557b5e43cc08]:  %60 = load i64, i64* %6, align 8
	[0x557b5e43ce68]:  %57 = load i64, i64* %3, align 8
	[0x557b5e43cf98]:  %56 = load i64, i64* %RAX.i14, align 8
	[0x557b5e43f058]:  %91 = load i64, i64* %90, align 8
	[0x557b5e4400f8]:  %94 = load i64, i64* %93, align 8
	}

[0x557b5e419610]:   store i64 %7, i64* %RBP, align 8, !tbaa !1261 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e419690]:   %10 = add i64 %6, -24 {
	[0x557b5e438280]:  %11 = add i64 %7, -24
	}

[0x557b5e419710]:   store i64 %10, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e419790]:   %11 = icmp ult i64 %7, 16 {
	[0x557b5e3c77a0]:  %86 = icmp eq i64 %85, 2
	[0x557b5e3cd000]:  %66 = icmp ugt i64 %63, -17
	[0x557b5e3cfb90]:  %79 = icmp eq i64 %65, 0
	[0x557b5e433ba0]:  %12 = icmp ult i64 %8, 16
	[0x557b5e439dc0]:  %28 = icmp eq i64 %11, 0
	[0x557b5e43a420]:  %37 = icmp eq i64 %36, 2
	}

[0x557b5e4197f8]:   %12 = zext i1 %11 to i8 {
	[0x557b5e39b4a8]:  %38 = zext i1 %37 to i8
	[0x557b5e436478]:  %13 = zext i1 %12 to i8
	[0x557b5e43d1f8]:  %67 = zext i1 %66 to i8
	[0x557b5e43e478]:  %87 = zext i1 %86 to i8
	[0x557b5e43ea68]:  %80 = zext i1 %79 to i8
	[0x557b5e46d728]:  %29 = zext i1 %28 to i8
	}

[0x557b5e4198a0]:   %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1 {
	[0x557b5e50ef90]:  %14 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 1
	}

[0x557b5e419930]:   store i8 %12, i8* %13, align 1, !tbaa !1265 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e419998]:   %14 = trunc i64 %10 to i32 {
	[0x557b5e3c7cc8]:  %82 = trunc i64 %81 to i8
	[0x557b5e434298]:  %25 = trunc i64 %24 to i8
	[0x557b5e4346c8]:  %18 = trunc i32 %17 to i8
	[0x557b5e436748]:  %15 = trunc i64 %11 to i32
	[0x557b5e43eb98]:  %77 = trunc i64 %76 to i8
	[0x557b5e43edf8]:  %71 = trunc i32 %70 to i8
	[0x557b5e43ef28]:  %68 = trunc i64 %65 to i32
	[0x557b5e4696e8]:  %32 = trunc i64 %31 to i8
	}

[0x557b5e419a10]:   %15 = and i32 %14, 255 {
	[0x557b5e3ccc80]:  %69 = and i32 %68, 255
	[0x557b5e439980]:  %16 = and i32 %15, 255
	}

[0x557b5e419ad0]:   %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #9 {
	[0x557b5e3c4a80]:  %call2_400583 = tail call %struct.Memory.31* @sub_400540.stderr_driver(%struct.State.0* %0, i64 %58, %struct.Memory.31* %2)
	[0x557b5e40abc0]:  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
	[0x557b5e44e3a0]:  %70 = tail call i32 @llvm.ctpop.i32(i32 %69)
	}

[0x557b5e419b48]:   %17 = trunc i32 %16 to i8 {
	[0x557b5e3c7cc8]:  %82 = trunc i64 %81 to i8
	[0x557b5e434298]:  %25 = trunc i64 %24 to i8
	[0x557b5e4346c8]:  %18 = trunc i32 %17 to i8
	[0x557b5e436748]:  %15 = trunc i64 %11 to i32
	[0x557b5e43eb98]:  %77 = trunc i64 %76 to i8
	[0x557b5e43edf8]:  %71 = trunc i32 %70 to i8
	[0x557b5e43ef28]:  %68 = trunc i64 %65 to i32
	[0x557b5e4696e8]:  %32 = trunc i64 %31 to i8
	}

[0x557b5e419bc0]:   %18 = and i8 %17, 1 {
	[0x557b5e3cb410]:  %72 = and i8 %71, 1
	[0x557b5e3cfe50]:  %78 = and i8 %77, 1
	[0x557b5e438480]:  %26 = and i8 %25, 1
	[0x557b5e439870]:  %19 = and i8 %18, 1
	}

[0x557b5e419c40]:   %19 = xor i8 %18, 1 {
	[0x557b5e3c6d20]:  %20 = xor i8 %19, 1
	[0x557b5e3cca30]:  %73 = xor i8 %72, 1
	}

[0x557b5e419cf0]:   %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3 {
	[0x557b5e42ff00]:  %21 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 3
	}

[0x557b5e419d80]:   store i8 %19, i8* %20, align 1, !tbaa !1279 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e419e00]:   %21 = xor i64 %7, 16 {
	[0x557b5e3cafd0]:  %74 = xor i64 %63, 16
	[0x557b5e439540]:  %22 = xor i64 %8, 16
	}

[0x557b5e419e80]:   %22 = xor i64 %21, %10 {
	[0x557b5e3c6670]:  %23 = xor i64 %22, %11
	[0x557b5e3c6fa0]:  %35 = xor i64 %31, %34
	[0x557b5e3c7a20]:  %84 = xor i64 %81, %83
	[0x557b5e3cb340]:  %75 = xor i64 %74, %65
	}

[0x557b5e419f00]:   %23 = lshr i64 %22, 4 {
	[0x557b5e3d0030]:  %76 = lshr i64 %75, 4
	[0x557b5e439430]:  %24 = lshr i64 %23, 4
	}

[0x557b5e419f68]:   %24 = trunc i64 %23 to i8 {
	[0x557b5e3c7cc8]:  %82 = trunc i64 %81 to i8
	[0x557b5e434298]:  %25 = trunc i64 %24 to i8
	[0x557b5e4346c8]:  %18 = trunc i32 %17 to i8
	[0x557b5e436748]:  %15 = trunc i64 %11 to i32
	[0x557b5e43eb98]:  %77 = trunc i64 %76 to i8
	[0x557b5e43edf8]:  %71 = trunc i32 %70 to i8
	[0x557b5e43ef28]:  %68 = trunc i64 %65 to i32
	[0x557b5e4696e8]:  %32 = trunc i64 %31 to i8
	}

[0x557b5e419fe0]:   %25 = and i8 %24, 1 {
	[0x557b5e3cb410]:  %72 = and i8 %71, 1
	[0x557b5e3cfe50]:  %78 = and i8 %77, 1
	[0x557b5e438480]:  %26 = and i8 %25, 1
	[0x557b5e439870]:  %19 = and i8 %18, 1
	}

[0x557b5e41a090]:   %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5 {
	[0x557b5e3c9a30]:  %27 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 5
	}

[0x557b5e41a120]:   store i8 %25, i8* %26, align 1, !tbaa !1280 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41a1a0]:   %27 = icmp eq i64 %10, 0 {
	[0x557b5e3c77a0]:  %86 = icmp eq i64 %85, 2
	[0x557b5e3cd000]:  %66 = icmp ugt i64 %63, -17
	[0x557b5e3cfb90]:  %79 = icmp eq i64 %65, 0
	[0x557b5e433ba0]:  %12 = icmp ult i64 %8, 16
	[0x557b5e439dc0]:  %28 = icmp eq i64 %11, 0
	[0x557b5e43a420]:  %37 = icmp eq i64 %36, 2
	}

[0x557b5e41a208]:   %28 = zext i1 %27 to i8 {
	[0x557b5e39b4a8]:  %38 = zext i1 %37 to i8
	[0x557b5e436478]:  %13 = zext i1 %12 to i8
	[0x557b5e43d1f8]:  %67 = zext i1 %66 to i8
	[0x557b5e43e478]:  %87 = zext i1 %86 to i8
	[0x557b5e43ea68]:  %80 = zext i1 %79 to i8
	[0x557b5e46d728]:  %29 = zext i1 %28 to i8
	}

[0x557b5e41a2b0]:   %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7 {
	[0x557b5e3c97c0]:  %30 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 7
	}

[0x557b5e41a340]:   store i8 %28, i8* %29, align 1, !tbaa !1281 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41a3c0]:   %30 = lshr i64 %10, 63 {
	[0x557b5e3cdf80]:  %81 = lshr i64 %65, 63
	[0x557b5e3d0180]:  %83 = lshr i64 %63, 63
	[0x557b5e438680]:  %34 = lshr i64 %8, 63
	[0x557b5e4387d0]:  %31 = lshr i64 %11, 63
	}

[0x557b5e41a428]:   %31 = trunc i64 %30 to i8 {
	[0x557b5e3c7cc8]:  %82 = trunc i64 %81 to i8
	[0x557b5e434298]:  %25 = trunc i64 %24 to i8
	[0x557b5e4346c8]:  %18 = trunc i32 %17 to i8
	[0x557b5e436748]:  %15 = trunc i64 %11 to i32
	[0x557b5e43eb98]:  %77 = trunc i64 %76 to i8
	[0x557b5e43edf8]:  %71 = trunc i32 %70 to i8
	[0x557b5e43ef28]:  %68 = trunc i64 %65 to i32
	[0x557b5e4696e8]:  %32 = trunc i64 %31 to i8
	}

[0x557b5e41a4d0]:   %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9 {
	[0x557b5e3c82b0]:  %33 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 9
	}

[0x557b5e41a560]:   store i8 %31, i8* %32, align 1, !tbaa !1282 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41a5e0]:   %33 = lshr i64 %7, 63 {
	[0x557b5e3cdf80]:  %81 = lshr i64 %65, 63
	[0x557b5e3d0180]:  %83 = lshr i64 %63, 63
	[0x557b5e438680]:  %34 = lshr i64 %8, 63
	[0x557b5e4387d0]:  %31 = lshr i64 %11, 63
	}

[0x557b5e41a660]:   %34 = xor i64 %30, %33 {
	[0x557b5e3c6670]:  %23 = xor i64 %22, %11
	[0x557b5e3c6fa0]:  %35 = xor i64 %31, %34
	[0x557b5e3c7a20]:  %84 = xor i64 %81, %83
	[0x557b5e3cb340]:  %75 = xor i64 %74, %65
	}

[0x557b5e41a6e0]:   %35 = add nuw nsw i64 %34, %33 {
	[0x557b5e3c78c0]:  %85 = add nuw nsw i64 %84, %81
	[0x557b5e3c81a0]:  %36 = add nuw nsw i64 %35, %34
	}

[0x557b5e41a760]:   %36 = icmp eq i64 %35, 2 {
	[0x557b5e3c77a0]:  %86 = icmp eq i64 %85, 2
	[0x557b5e3cd000]:  %66 = icmp ugt i64 %63, -17
	[0x557b5e3cfb90]:  %79 = icmp eq i64 %65, 0
	[0x557b5e433ba0]:  %12 = icmp ult i64 %8, 16
	[0x557b5e439dc0]:  %28 = icmp eq i64 %11, 0
	[0x557b5e43a420]:  %37 = icmp eq i64 %36, 2
	}

[0x557b5e41a7c8]:   %37 = zext i1 %36 to i8 {
	[0x557b5e39b4a8]:  %38 = zext i1 %37 to i8
	[0x557b5e436478]:  %13 = zext i1 %12 to i8
	[0x557b5e43d1f8]:  %67 = zext i1 %66 to i8
	[0x557b5e43e478]:  %87 = zext i1 %86 to i8
	[0x557b5e43ea68]:  %80 = zext i1 %79 to i8
	[0x557b5e46d728]:  %29 = zext i1 %28 to i8
	}

[0x557b5e41a870]:   %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13 {
	[0x557b5e3c5160]:  %39 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 13
	}

[0x557b5e41a900]:   store i8 %37, i8* %38, align 1, !tbaa !1283 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41a9e0]:   store i64 add (i64 ptrtoint (%seg_400650__rodata_type* @seg_400650__rodata to i64), i64 4), i64* %RAX, align 8, !tbaa !1261 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41aa60]:   %39 = add i64 %6, -12 {
	[0x557b5e43a200]:  %40 = add i64 %7, -12
	}

[0x557b5e41aae0]:   %40 = add i64 %9, 24 {
	[0x557b5e3c8830]:  %41 = add i64 %10, 24
	[0x557b5e3d0440]:  %89 = add i64 %63, 24
	}

[0x557b5e41ab60]:   store i64 %40, i64* %PC, align 8 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41abc8]:   %41 = inttoptr i64 %39 to i32* {
	[0x557b5e423f28]:  %9 = inttoptr i64 %8 to i64*
	[0x557b5e437838]:  %42 = inttoptr i64 %40 to i32*
	[0x557b5e43a8a8]:  %49 = inttoptr i64 %45 to i32*
	[0x557b5e43c158]:  %62 = inttoptr i64 %61 to i64*
	[0x557b5e43d0c8]:  %55 = inttoptr i64 %51 to i64*
	[0x557b5e43d328]:  %90 = inttoptr i64 %65 to i64*
	[0x557b5e440228]:  %93 = inttoptr i64 %89 to i64*
	}

[0x557b5e41ac40]:   store i32 0, i32* %41, align 4 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41aca8]:   %42 = load i64, i64* %RBP, align 8 {
	[0x557b5e3bb3a8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x557b5e3c6e28]:  %50 = load i64, i64* %RBP.i, align 8
	[0x557b5e3f10e8]:  %10 = load i64, i64* %3, align 8
	[0x557b5e423bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x557b5e423d98]:  %7 = load i64, i64* %6, align 8
	[0x557b5e43a9d8]:  %47 = load i64, i64* %3, align 8
	[0x557b5e43ad68]:  %46 = load i32, i32* %EDI.i, align 4
	[0x557b5e43b448]:  %44 = load i64, i64* %RBP.i, align 8
	[0x557b5e43ba38]:  %53 = load i64, i64* %3, align 8
	[0x557b5e43bef8]:  %64 = load i64, i64* %3, align 8
	[0x557b5e43c028]:  %63 = load i64, i64* %6, align 8
	[0x557b5e43cc08]:  %60 = load i64, i64* %6, align 8
	[0x557b5e43ce68]:  %57 = load i64, i64* %3, align 8
	[0x557b5e43cf98]:  %56 = load i64, i64* %RAX.i14, align 8
	[0x557b5e43f058]:  %91 = load i64, i64* %90, align 8
	[0x557b5e4400f8]:  %94 = load i64, i64* %93, align 8
	}

[0x557b5e41ad20]:   %43 = add i64 %42, -8 {
	[0x557b5e3c4e10]:  %8 = add i64 %7, -8
	[0x557b5e3c8ae0]:  %45 = add i64 %44, -8
	[0x557b5e3ca440]:  %61 = add i64 %60, -8
	}

[0x557b5e41ad88]:   %44 = load i32, i32* %EDI, align 4 {
	[0x557b5e3bb3a8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x557b5e3c6e28]:  %50 = load i64, i64* %RBP.i, align 8
	[0x557b5e3f10e8]:  %10 = load i64, i64* %3, align 8
	[0x557b5e423bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x557b5e423d98]:  %7 = load i64, i64* %6, align 8
	[0x557b5e43a9d8]:  %47 = load i64, i64* %3, align 8
	[0x557b5e43ad68]:  %46 = load i32, i32* %EDI.i, align 4
	[0x557b5e43b448]:  %44 = load i64, i64* %RBP.i, align 8
	[0x557b5e43ba38]:  %53 = load i64, i64* %3, align 8
	[0x557b5e43bef8]:  %64 = load i64, i64* %3, align 8
	[0x557b5e43c028]:  %63 = load i64, i64* %6, align 8
	[0x557b5e43cc08]:  %60 = load i64, i64* %6, align 8
	[0x557b5e43ce68]:  %57 = load i64, i64* %3, align 8
	[0x557b5e43cf98]:  %56 = load i64, i64* %RAX.i14, align 8
	[0x557b5e43f058]:  %91 = load i64, i64* %90, align 8
	[0x557b5e4400f8]:  %94 = load i64, i64* %93, align 8
	}

[0x557b5e41ade8]:   %45 = load i64, i64* %PC, align 8 {
	[0x557b5e3bb3a8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x557b5e3c6e28]:  %50 = load i64, i64* %RBP.i, align 8
	[0x557b5e3f10e8]:  %10 = load i64, i64* %3, align 8
	[0x557b5e423bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x557b5e423d98]:  %7 = load i64, i64* %6, align 8
	[0x557b5e43a9d8]:  %47 = load i64, i64* %3, align 8
	[0x557b5e43ad68]:  %46 = load i32, i32* %EDI.i, align 4
	[0x557b5e43b448]:  %44 = load i64, i64* %RBP.i, align 8
	[0x557b5e43ba38]:  %53 = load i64, i64* %3, align 8
	[0x557b5e43bef8]:  %64 = load i64, i64* %3, align 8
	[0x557b5e43c028]:  %63 = load i64, i64* %6, align 8
	[0x557b5e43cc08]:  %60 = load i64, i64* %6, align 8
	[0x557b5e43ce68]:  %57 = load i64, i64* %3, align 8
	[0x557b5e43cf98]:  %56 = load i64, i64* %RAX.i14, align 8
	[0x557b5e43f058]:  %91 = load i64, i64* %90, align 8
	[0x557b5e4400f8]:  %94 = load i64, i64* %93, align 8
	}

[0x557b5e41ae60]:   %46 = add i64 %45, 3 {
	[0x557b5e43a570]:  %48 = add i64 %47, 3
	}

[0x557b5e41aee0]:   store i64 %46, i64* %PC, align 8 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41af48]:   %47 = inttoptr i64 %43 to i32* {
	[0x557b5e423f28]:  %9 = inttoptr i64 %8 to i64*
	[0x557b5e437838]:  %42 = inttoptr i64 %40 to i32*
	[0x557b5e43a8a8]:  %49 = inttoptr i64 %45 to i32*
	[0x557b5e43c158]:  %62 = inttoptr i64 %61 to i64*
	[0x557b5e43d0c8]:  %55 = inttoptr i64 %51 to i64*
	[0x557b5e43d328]:  %90 = inttoptr i64 %65 to i64*
	[0x557b5e440228]:  %93 = inttoptr i64 %89 to i64*
	}

[0x557b5e41afc0]:   store i32 %44, i32* %47, align 4 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41b028]:   %48 = load i64, i64* %RBP, align 8 {
	[0x557b5e3bb3a8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x557b5e3c6e28]:  %50 = load i64, i64* %RBP.i, align 8
	[0x557b5e3f10e8]:  %10 = load i64, i64* %3, align 8
	[0x557b5e423bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x557b5e423d98]:  %7 = load i64, i64* %6, align 8
	[0x557b5e43a9d8]:  %47 = load i64, i64* %3, align 8
	[0x557b5e43ad68]:  %46 = load i32, i32* %EDI.i, align 4
	[0x557b5e43b448]:  %44 = load i64, i64* %RBP.i, align 8
	[0x557b5e43ba38]:  %53 = load i64, i64* %3, align 8
	[0x557b5e43bef8]:  %64 = load i64, i64* %3, align 8
	[0x557b5e43c028]:  %63 = load i64, i64* %6, align 8
	[0x557b5e43cc08]:  %60 = load i64, i64* %6, align 8
	[0x557b5e43ce68]:  %57 = load i64, i64* %3, align 8
	[0x557b5e43cf98]:  %56 = load i64, i64* %RAX.i14, align 8
	[0x557b5e43f058]:  %91 = load i64, i64* %90, align 8
	[0x557b5e4400f8]:  %94 = load i64, i64* %93, align 8
	}

[0x557b5e41b0a0]:   %49 = add i64 %48, -16 {
	[0x557b5e3c9050]:  %51 = add i64 %50, -16
	}

[0x557b5e41b108]:   %50 = load i64, i64* %RSI, align 8 {
	[0x557b5e3bb3a8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x557b5e3c6e28]:  %50 = load i64, i64* %RBP.i, align 8
	[0x557b5e3f10e8]:  %10 = load i64, i64* %3, align 8
	[0x557b5e423bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x557b5e423d98]:  %7 = load i64, i64* %6, align 8
	[0x557b5e43a9d8]:  %47 = load i64, i64* %3, align 8
	[0x557b5e43ad68]:  %46 = load i32, i32* %EDI.i, align 4
	[0x557b5e43b448]:  %44 = load i64, i64* %RBP.i, align 8
	[0x557b5e43ba38]:  %53 = load i64, i64* %3, align 8
	[0x557b5e43bef8]:  %64 = load i64, i64* %3, align 8
	[0x557b5e43c028]:  %63 = load i64, i64* %6, align 8
	[0x557b5e43cc08]:  %60 = load i64, i64* %6, align 8
	[0x557b5e43ce68]:  %57 = load i64, i64* %3, align 8
	[0x557b5e43cf98]:  %56 = load i64, i64* %RAX.i14, align 8
	[0x557b5e43f058]:  %91 = load i64, i64* %90, align 8
	[0x557b5e4400f8]:  %94 = load i64, i64* %93, align 8
	}

[0x557b5e41b168]:   %51 = load i64, i64* %PC, align 8 {
	[0x557b5e3bb3a8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x557b5e3c6e28]:  %50 = load i64, i64* %RBP.i, align 8
	[0x557b5e3f10e8]:  %10 = load i64, i64* %3, align 8
	[0x557b5e423bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x557b5e423d98]:  %7 = load i64, i64* %6, align 8
	[0x557b5e43a9d8]:  %47 = load i64, i64* %3, align 8
	[0x557b5e43ad68]:  %46 = load i32, i32* %EDI.i, align 4
	[0x557b5e43b448]:  %44 = load i64, i64* %RBP.i, align 8
	[0x557b5e43ba38]:  %53 = load i64, i64* %3, align 8
	[0x557b5e43bef8]:  %64 = load i64, i64* %3, align 8
	[0x557b5e43c028]:  %63 = load i64, i64* %6, align 8
	[0x557b5e43cc08]:  %60 = load i64, i64* %6, align 8
	[0x557b5e43ce68]:  %57 = load i64, i64* %3, align 8
	[0x557b5e43cf98]:  %56 = load i64, i64* %RAX.i14, align 8
	[0x557b5e43f058]:  %91 = load i64, i64* %90, align 8
	[0x557b5e4400f8]:  %94 = load i64, i64* %93, align 8
	}

[0x557b5e41b1e0]:   %52 = add i64 %51, 4 {
	[0x557b5e3c8d90]:  %54 = add i64 %53, 4
	}

[0x557b5e41b260]:   store i64 %52, i64* %PC, align 8 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41b2c8]:   %53 = inttoptr i64 %49 to i64* {
	[0x557b5e423f28]:  %9 = inttoptr i64 %8 to i64*
	[0x557b5e437838]:  %42 = inttoptr i64 %40 to i32*
	[0x557b5e43a8a8]:  %49 = inttoptr i64 %45 to i32*
	[0x557b5e43c158]:  %62 = inttoptr i64 %61 to i64*
	[0x557b5e43d0c8]:  %55 = inttoptr i64 %51 to i64*
	[0x557b5e43d328]:  %90 = inttoptr i64 %65 to i64*
	[0x557b5e440228]:  %93 = inttoptr i64 %89 to i64*
	}

[0x557b5e41b340]:   store i64 %50, i64* %53, align 8 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41b3a8]:   %54 = load i64, i64* %RAX, align 8 {
	[0x557b5e3bb3a8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x557b5e3c6e28]:  %50 = load i64, i64* %RBP.i, align 8
	[0x557b5e3f10e8]:  %10 = load i64, i64* %3, align 8
	[0x557b5e423bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x557b5e423d98]:  %7 = load i64, i64* %6, align 8
	[0x557b5e43a9d8]:  %47 = load i64, i64* %3, align 8
	[0x557b5e43ad68]:  %46 = load i32, i32* %EDI.i, align 4
	[0x557b5e43b448]:  %44 = load i64, i64* %RBP.i, align 8
	[0x557b5e43ba38]:  %53 = load i64, i64* %3, align 8
	[0x557b5e43bef8]:  %64 = load i64, i64* %3, align 8
	[0x557b5e43c028]:  %63 = load i64, i64* %6, align 8
	[0x557b5e43cc08]:  %60 = load i64, i64* %6, align 8
	[0x557b5e43ce68]:  %57 = load i64, i64* %3, align 8
	[0x557b5e43cf98]:  %56 = load i64, i64* %RAX.i14, align 8
	[0x557b5e43f058]:  %91 = load i64, i64* %90, align 8
	[0x557b5e4400f8]:  %94 = load i64, i64* %93, align 8
	}

[0x557b5e41b408]:   %55 = load i64, i64* %PC, align 8 {
	[0x557b5e3bb3a8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x557b5e3c6e28]:  %50 = load i64, i64* %RBP.i, align 8
	[0x557b5e3f10e8]:  %10 = load i64, i64* %3, align 8
	[0x557b5e423bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x557b5e423d98]:  %7 = load i64, i64* %6, align 8
	[0x557b5e43a9d8]:  %47 = load i64, i64* %3, align 8
	[0x557b5e43ad68]:  %46 = load i32, i32* %EDI.i, align 4
	[0x557b5e43b448]:  %44 = load i64, i64* %RBP.i, align 8
	[0x557b5e43ba38]:  %53 = load i64, i64* %3, align 8
	[0x557b5e43bef8]:  %64 = load i64, i64* %3, align 8
	[0x557b5e43c028]:  %63 = load i64, i64* %6, align 8
	[0x557b5e43cc08]:  %60 = load i64, i64* %6, align 8
	[0x557b5e43ce68]:  %57 = load i64, i64* %3, align 8
	[0x557b5e43cf98]:  %56 = load i64, i64* %RAX.i14, align 8
	[0x557b5e43f058]:  %91 = load i64, i64* %90, align 8
	[0x557b5e4400f8]:  %94 = load i64, i64* %93, align 8
	}

[0x557b5e41b480]:   store i64 %54, i64* %RDI, align 8, !tbaa !1261 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41b500]:   %56 = add i64 %55, -64 {
	[0x557b5e3cb930]:  %58 = add i64 %57, -64
	}

[0x557b5e41b580]:   %57 = add i64 %55, 8 {
	[0x557b5e3ca640]:  %59 = add i64 %57, 8
	}

[0x557b5e41b5e8]:   %58 = load i64, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e3bb3a8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x557b5e3c6e28]:  %50 = load i64, i64* %RBP.i, align 8
	[0x557b5e3f10e8]:  %10 = load i64, i64* %3, align 8
	[0x557b5e423bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x557b5e423d98]:  %7 = load i64, i64* %6, align 8
	[0x557b5e43a9d8]:  %47 = load i64, i64* %3, align 8
	[0x557b5e43ad68]:  %46 = load i32, i32* %EDI.i, align 4
	[0x557b5e43b448]:  %44 = load i64, i64* %RBP.i, align 8
	[0x557b5e43ba38]:  %53 = load i64, i64* %3, align 8
	[0x557b5e43bef8]:  %64 = load i64, i64* %3, align 8
	[0x557b5e43c028]:  %63 = load i64, i64* %6, align 8
	[0x557b5e43cc08]:  %60 = load i64, i64* %6, align 8
	[0x557b5e43ce68]:  %57 = load i64, i64* %3, align 8
	[0x557b5e43cf98]:  %56 = load i64, i64* %RAX.i14, align 8
	[0x557b5e43f058]:  %91 = load i64, i64* %90, align 8
	[0x557b5e4400f8]:  %94 = load i64, i64* %93, align 8
	}

[0x557b5e41b660]:   %59 = add i64 %58, -8 {
	[0x557b5e3c4e10]:  %8 = add i64 %7, -8
	[0x557b5e3c8ae0]:  %45 = add i64 %44, -8
	[0x557b5e3ca440]:  %61 = add i64 %60, -8
	}

[0x557b5e41b6c8]:   %60 = inttoptr i64 %59 to i64* {
	[0x557b5e423f28]:  %9 = inttoptr i64 %8 to i64*
	[0x557b5e437838]:  %42 = inttoptr i64 %40 to i32*
	[0x557b5e43a8a8]:  %49 = inttoptr i64 %45 to i32*
	[0x557b5e43c158]:  %62 = inttoptr i64 %61 to i64*
	[0x557b5e43d0c8]:  %55 = inttoptr i64 %51 to i64*
	[0x557b5e43d328]:  %90 = inttoptr i64 %65 to i64*
	[0x557b5e440228]:  %93 = inttoptr i64 %89 to i64*
	}

[0x557b5e41b740]:   store i64 %57, i64* %60, align 8 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41b7c0]:   store i64 %59, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41b840]:   store i64 %56, i64* %PC, align 8, !tbaa !1261 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41ba10]:   %61 = tail call %struct.Memory* @sub_400540_stderr_driver(%struct.State* nonnull %0, i64 %56, %struct.Memory* %2) {
	[0x557b5e3c4a80]:  %call2_400583 = tail call %struct.Memory.31* @sub_400540.stderr_driver(%struct.State.0* %0, i64 %58, %struct.Memory.31* %2)
	[0x557b5e40abc0]:  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
	[0x557b5e44e3a0]:  %70 = tail call i32 @llvm.ctpop.i32(i32 %69)
	}

[0x557b5e41bad8]:   %62 = load i64, i64* %RSP, align 8 {
	[0x557b5e3bb3a8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x557b5e3c6e28]:  %50 = load i64, i64* %RBP.i, align 8
	[0x557b5e3f10e8]:  %10 = load i64, i64* %3, align 8
	[0x557b5e423bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x557b5e423d98]:  %7 = load i64, i64* %6, align 8
	[0x557b5e43a9d8]:  %47 = load i64, i64* %3, align 8
	[0x557b5e43ad68]:  %46 = load i32, i32* %EDI.i, align 4
	[0x557b5e43b448]:  %44 = load i64, i64* %RBP.i, align 8
	[0x557b5e43ba38]:  %53 = load i64, i64* %3, align 8
	[0x557b5e43bef8]:  %64 = load i64, i64* %3, align 8
	[0x557b5e43c028]:  %63 = load i64, i64* %6, align 8
	[0x557b5e43cc08]:  %60 = load i64, i64* %6, align 8
	[0x557b5e43ce68]:  %57 = load i64, i64* %3, align 8
	[0x557b5e43cf98]:  %56 = load i64, i64* %RAX.i14, align 8
	[0x557b5e43f058]:  %91 = load i64, i64* %90, align 8
	[0x557b5e4400f8]:  %94 = load i64, i64* %93, align 8
	}

[0x557b5e41bb38]:   %63 = load i64, i64* %PC, align 8 {
	[0x557b5e3bb3a8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x557b5e3c6e28]:  %50 = load i64, i64* %RBP.i, align 8
	[0x557b5e3f10e8]:  %10 = load i64, i64* %3, align 8
	[0x557b5e423bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x557b5e423d98]:  %7 = load i64, i64* %6, align 8
	[0x557b5e43a9d8]:  %47 = load i64, i64* %3, align 8
	[0x557b5e43ad68]:  %46 = load i32, i32* %EDI.i, align 4
	[0x557b5e43b448]:  %44 = load i64, i64* %RBP.i, align 8
	[0x557b5e43ba38]:  %53 = load i64, i64* %3, align 8
	[0x557b5e43bef8]:  %64 = load i64, i64* %3, align 8
	[0x557b5e43c028]:  %63 = load i64, i64* %6, align 8
	[0x557b5e43cc08]:  %60 = load i64, i64* %6, align 8
	[0x557b5e43ce68]:  %57 = load i64, i64* %3, align 8
	[0x557b5e43cf98]:  %56 = load i64, i64* %RAX.i14, align 8
	[0x557b5e43f058]:  %91 = load i64, i64* %90, align 8
	[0x557b5e4400f8]:  %94 = load i64, i64* %93, align 8
	}

[0x557b5e41bbb0]:   %64 = add i64 %62, 16 {
	[0x557b5e3c9e00]:  %65 = add i64 %63, 16
	}

[0x557b5e41bc30]:   store i64 %64, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41bcb0]:   %65 = icmp ugt i64 %62, -17 {
	[0x557b5e3c77a0]:  %86 = icmp eq i64 %85, 2
	[0x557b5e3cd000]:  %66 = icmp ugt i64 %63, -17
	[0x557b5e3cfb90]:  %79 = icmp eq i64 %65, 0
	[0x557b5e433ba0]:  %12 = icmp ult i64 %8, 16
	[0x557b5e439dc0]:  %28 = icmp eq i64 %11, 0
	[0x557b5e43a420]:  %37 = icmp eq i64 %36, 2
	}

[0x557b5e41bd18]:   %66 = zext i1 %65 to i8 {
	[0x557b5e39b4a8]:  %38 = zext i1 %37 to i8
	[0x557b5e436478]:  %13 = zext i1 %12 to i8
	[0x557b5e43d1f8]:  %67 = zext i1 %66 to i8
	[0x557b5e43e478]:  %87 = zext i1 %86 to i8
	[0x557b5e43ea68]:  %80 = zext i1 %79 to i8
	[0x557b5e46d728]:  %29 = zext i1 %28 to i8
	}

[0x557b5e41bd90]:   store i8 %66, i8* %13, align 1, !tbaa !1265 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41bdf8]:   %67 = trunc i64 %64 to i32 {
	[0x557b5e3c7cc8]:  %82 = trunc i64 %81 to i8
	[0x557b5e434298]:  %25 = trunc i64 %24 to i8
	[0x557b5e4346c8]:  %18 = trunc i32 %17 to i8
	[0x557b5e436748]:  %15 = trunc i64 %11 to i32
	[0x557b5e43eb98]:  %77 = trunc i64 %76 to i8
	[0x557b5e43edf8]:  %71 = trunc i32 %70 to i8
	[0x557b5e43ef28]:  %68 = trunc i64 %65 to i32
	[0x557b5e4696e8]:  %32 = trunc i64 %31 to i8
	}

[0x557b5e41be70]:   %68 = and i32 %67, 255 {
	[0x557b5e3ccc80]:  %69 = and i32 %68, 255
	[0x557b5e439980]:  %16 = and i32 %15, 255
	}

[0x557b5e41bef0]:   %69 = tail call i32 @llvm.ctpop.i32(i32 %68) #9 {
	[0x557b5e3c4a80]:  %call2_400583 = tail call %struct.Memory.31* @sub_400540.stderr_driver(%struct.State.0* %0, i64 %58, %struct.Memory.31* %2)
	[0x557b5e40abc0]:  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
	[0x557b5e44e3a0]:  %70 = tail call i32 @llvm.ctpop.i32(i32 %69)
	}

[0x557b5e41bfb8]:   %70 = trunc i32 %69 to i8 {
	[0x557b5e3c7cc8]:  %82 = trunc i64 %81 to i8
	[0x557b5e434298]:  %25 = trunc i64 %24 to i8
	[0x557b5e4346c8]:  %18 = trunc i32 %17 to i8
	[0x557b5e436748]:  %15 = trunc i64 %11 to i32
	[0x557b5e43eb98]:  %77 = trunc i64 %76 to i8
	[0x557b5e43edf8]:  %71 = trunc i32 %70 to i8
	[0x557b5e43ef28]:  %68 = trunc i64 %65 to i32
	[0x557b5e4696e8]:  %32 = trunc i64 %31 to i8
	}

[0x557b5e41c030]:   %71 = and i8 %70, 1 {
	[0x557b5e3cb410]:  %72 = and i8 %71, 1
	[0x557b5e3cfe50]:  %78 = and i8 %77, 1
	[0x557b5e438480]:  %26 = and i8 %25, 1
	[0x557b5e439870]:  %19 = and i8 %18, 1
	}

[0x557b5e41c0b0]:   %72 = xor i8 %71, 1 {
	[0x557b5e3c6d20]:  %20 = xor i8 %19, 1
	[0x557b5e3cca30]:  %73 = xor i8 %72, 1
	}

[0x557b5e41c130]:   store i8 %72, i8* %20, align 1, !tbaa !1279 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41c1b0]:   %73 = xor i64 %62, 16 {
	[0x557b5e3cafd0]:  %74 = xor i64 %63, 16
	[0x557b5e439540]:  %22 = xor i64 %8, 16
	}

[0x557b5e47b2c8]:   %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0 {
	[0x557b5e44d8d8]:  %43 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 11, i32 0
	}


[Info]: Phase I: Dual Simulation: Round: 0
Round: 0

Removing: [0x557b5e3c6e28]:   %50 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x557b5e419198]:   %4 = load i64, i64* %RBP, align 8


Uprime : [0x557b5e419530]:   store i64 %4, i64* %8, align 8


Uprime Matches: [0x557b5e3c47a0]:   store i64 %8, i64* %RBP.i, align 8
[0x557b5e3c4cc0]:   store i64 %4, i64* %9, align 8
[0x557b5e3c5050]:   store i64 %5, i64* %3, align 8
[0x557b5e3c6520]:   store i8 %13, i8* %14, align 1
[0x557b5e3c6bc0]:   store i8 %20, i8* %21, align 1
[0x557b5e3c7390]:   store i64 %88, i64* %3, align 8
[0x557b5e3c7650]:   store i8 %87, i8* %39, align 1
[0x557b5e3c7b80]:   store i64 %91, i64* %RBP.i, align 8
[0x557b5e3c7f50]:   store i8 %29, i8* %30, align 1
[0x557b5e3c8040]:   store i8 %26, i8* %27, align 1
[0x557b5e3c86d0]:   store i64 %41, i64* %3, align 8
[0x557b5e3c8990]:   store i8 %38, i8* %39, align 1
[0x557b5e3c8c40]:   store i64 %52, i64* %55, align 8
[0x557b5e3c91b0]:   store i32 %46, i32* %49, align 4
[0x557b5e3c9350]:   store i64 %48, i64* %3, align 8
[0x557b5e3c9cb0]:   store i64 %56, i64* %RDI.i, align 8
[0x557b5e3c9f60]:   store i64 %58, i64* %3, align 8
[0x557b5e3ca0b0]:   store i64 %61, i64* %6, align 8
[0x557b5e3ca210]:   store i64 %59, i64* %62, align 8
[0x557b5e3caec0]:   store i64 %65, i64* %6, align 8
[0x557b5e3cb0e0]:   store i8 %73, i8* %21, align 1
[0x557b5e3cb560]:   store i8 %67, i8* %14, align 1
[0x557b5e3cd7c0]:   store i8 %82, i8* %33, align 1
[0x557b5e3cfa30]:   store i8 %80, i8* %30, align 1
[0x557b5e3cfcf0]:   store i8 %78, i8* %27, align 1
[0x557b5e3d28f0]:   store i64 %95, i64* %6, align 8
[0x557b5e3d2bf0]:   store i64 %94, i64* %3, align 8
[0x557b5e3d2d50]:   store i64 %92, i64* %3, align 8
[0x557b5e3d3090]:   store i64 %89, i64* %6, align 8
[0x557b5e436840]:   store i64 %11, i64* %6, align 8
[0x557b5e439ba0]:   store i8 %32, i8* %33, align 1
[0x557b5e439fe0]:   store i32 0, i32* %42, align 4
[0x557b5e43a310]:   store i64 4195924, i64* %RAX.i14, align 8
[0x557b5e43a640]:   store i64 %54, i64* %3, align 8


Adj: [0x557b5e3c9050]:   %51 = add i64 %50, -16


Removing: [0x557b5e43b448]:   %44 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x557b5e419198]:   %4 = load i64, i64* %RBP, align 8


Uprime : [0x557b5e419530]:   store i64 %4, i64* %8, align 8


Uprime Matches: [0x557b5e3c47a0]:   store i64 %8, i64* %RBP.i, align 8
[0x557b5e3c4cc0]:   store i64 %4, i64* %9, align 8
[0x557b5e3c5050]:   store i64 %5, i64* %3, align 8
[0x557b5e3c6520]:   store i8 %13, i8* %14, align 1
[0x557b5e3c6bc0]:   store i8 %20, i8* %21, align 1
[0x557b5e3c7390]:   store i64 %88, i64* %3, align 8
[0x557b5e3c7650]:   store i8 %87, i8* %39, align 1
[0x557b5e3c7b80]:   store i64 %91, i64* %RBP.i, align 8
[0x557b5e3c7f50]:   store i8 %29, i8* %30, align 1
[0x557b5e3c8040]:   store i8 %26, i8* %27, align 1
[0x557b5e3c86d0]:   store i64 %41, i64* %3, align 8
[0x557b5e3c8990]:   store i8 %38, i8* %39, align 1
[0x557b5e3c8c40]:   store i64 %52, i64* %55, align 8
[0x557b5e3c91b0]:   store i32 %46, i32* %49, align 4
[0x557b5e3c9350]:   store i64 %48, i64* %3, align 8
[0x557b5e3c9cb0]:   store i64 %56, i64* %RDI.i, align 8
[0x557b5e3c9f60]:   store i64 %58, i64* %3, align 8
[0x557b5e3ca0b0]:   store i64 %61, i64* %6, align 8
[0x557b5e3ca210]:   store i64 %59, i64* %62, align 8
[0x557b5e3caec0]:   store i64 %65, i64* %6, align 8
[0x557b5e3cb0e0]:   store i8 %73, i8* %21, align 1
[0x557b5e3cb560]:   store i8 %67, i8* %14, align 1
[0x557b5e3cd7c0]:   store i8 %82, i8* %33, align 1
[0x557b5e3cfa30]:   store i8 %80, i8* %30, align 1
[0x557b5e3cfcf0]:   store i8 %78, i8* %27, align 1
[0x557b5e3d28f0]:   store i64 %95, i64* %6, align 8
[0x557b5e3d2bf0]:   store i64 %94, i64* %3, align 8
[0x557b5e3d2d50]:   store i64 %92, i64* %3, align 8
[0x557b5e3d3090]:   store i64 %89, i64* %6, align 8
[0x557b5e436840]:   store i64 %11, i64* %6, align 8
[0x557b5e439ba0]:   store i8 %32, i8* %33, align 1
[0x557b5e439fe0]:   store i32 0, i32* %42, align 4
[0x557b5e43a310]:   store i64 4195924, i64* %RAX.i14, align 8
[0x557b5e43a640]:   store i64 %54, i64* %3, align 8


Adj: [0x557b5e3c8ae0]:   %45 = add i64 %44, -8


Removing: [0x557b5e43c028]:   %63 = load i64, i64* %6, align 8
From the pot matches of: [0x557b5e419348]:   %6 = load i64, i64* %RSP, align 8, !tbaa !1261


Uprime : [0x557b5e41aa60]:   %39 = add i64 %6, -12


Uprime Matches: [0x557b5e43a200]:   %40 = add i64 %7, -12


Adj: [0x557b5e3c9e00]:   %65 = add i64 %63, 16
[0x557b5e3cafd0]:   %74 = xor i64 %63, 16
[0x557b5e3cd000]:   %66 = icmp ugt i64 %63, -17
[0x557b5e3d0180]:   %83 = lshr i64 %63, 63
[0x557b5e3d0440]:   %89 = add i64 %63, 24
[0x557b5e3d2a90]:   %95 = add i64 %63, 32


Removing: [0x557b5e43cc08]:   %60 = load i64, i64* %6, align 8
From the pot matches of: [0x557b5e419348]:   %6 = load i64, i64* %RSP, align 8, !tbaa !1261


Uprime : [0x557b5e41aa60]:   %39 = add i64 %6, -12


Uprime Matches: [0x557b5e43a200]:   %40 = add i64 %7, -12


Adj: [0x557b5e3ca440]:   %61 = add i64 %60, -8


Removing: [0x557b5e43a9d8]:   %47 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e419598]:   %9 = load i64, i64* %PC, align 8


Uprime : [0x557b5e41aae0]:   %40 = add i64 %9, 24


Uprime Matches: [0x557b5e3c8830]:   %41 = add i64 %10, 24
[0x557b5e3d0440]:   %89 = add i64 %63, 24


Adj: [0x557b5e43a570]:   %48 = add i64 %47, 3


Removing: [0x557b5e43ba38]:   %53 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e419598]:   %9 = load i64, i64* %PC, align 8


Uprime : [0x557b5e41aae0]:   %40 = add i64 %9, 24


Uprime Matches: [0x557b5e3c8830]:   %41 = add i64 %10, 24
[0x557b5e3d0440]:   %89 = add i64 %63, 24


Adj: [0x557b5e3c8d90]:   %54 = add i64 %53, 4


Removing: [0x557b5e43bef8]:   %64 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e419598]:   %9 = load i64, i64* %PC, align 8


Uprime : [0x557b5e41aae0]:   %40 = add i64 %9, 24


Uprime Matches: [0x557b5e3c8830]:   %41 = add i64 %10, 24
[0x557b5e3d0440]:   %89 = add i64 %63, 24


Adj: [0x557b5e3c7470]:   %88 = add i64 %64, 5
[0x557b5e3d2f30]:   %92 = add i64 %64, 6


Removing: [0x557b5e43ce68]:   %57 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e419598]:   %9 = load i64, i64* %PC, align 8


Uprime : [0x557b5e41aae0]:   %40 = add i64 %9, 24


Uprime Matches: [0x557b5e3c8830]:   %41 = add i64 %10, 24
[0x557b5e3d0440]:   %89 = add i64 %63, 24


Adj: [0x557b5e3ca640]:   %59 = add i64 %57, 8
[0x557b5e3cb930]:   %58 = add i64 %57, -64


Removing: [0x557b5e3c7cc8]:   %82 = trunc i64 %81 to i8
From the pot matches of: [0x557b5e419b48]:   %17 = trunc i32 %16 to i8


Uprime : [0x557b5e419bc0]:   %18 = and i8 %17, 1


Uprime Matches: [0x557b5e3cb410]:   %72 = and i8 %71, 1
[0x557b5e3cfe50]:   %78 = and i8 %77, 1
[0x557b5e438480]:   %26 = and i8 %25, 1
[0x557b5e439870]:   %19 = and i8 %18, 1


Adj: [0x557b5e3cd7c0]:   store i8 %82, i8* %33, align 1


Removing: [0x557b5e436748]:   %15 = trunc i64 %11 to i32
From the pot matches of: [0x557b5e419b48]:   %17 = trunc i32 %16 to i8


Uprime : [0x557b5e419bc0]:   %18 = and i8 %17, 1


Uprime Matches: [0x557b5e3cb410]:   %72 = and i8 %71, 1
[0x557b5e3cfe50]:   %78 = and i8 %77, 1
[0x557b5e438480]:   %26 = and i8 %25, 1
[0x557b5e439870]:   %19 = and i8 %18, 1


Adj: [0x557b5e439980]:   %16 = and i32 %15, 255


Removing: [0x557b5e43ef28]:   %68 = trunc i64 %65 to i32
From the pot matches of: [0x557b5e419b48]:   %17 = trunc i32 %16 to i8


Uprime : [0x557b5e419bc0]:   %18 = and i8 %17, 1


Uprime Matches: [0x557b5e3cb410]:   %72 = and i8 %71, 1
[0x557b5e3cfe50]:   %78 = and i8 %77, 1
[0x557b5e438480]:   %26 = and i8 %25, 1
[0x557b5e439870]:   %19 = and i8 %18, 1


Adj: [0x557b5e3ccc80]:   %69 = and i32 %68, 255


Removing: [0x557b5e4696e8]:   %32 = trunc i64 %31 to i8
From the pot matches of: [0x557b5e419b48]:   %17 = trunc i32 %16 to i8


Uprime : [0x557b5e419bc0]:   %18 = and i8 %17, 1


Uprime Matches: [0x557b5e3cb410]:   %72 = and i8 %71, 1
[0x557b5e3cfe50]:   %78 = and i8 %77, 1
[0x557b5e438480]:   %26 = and i8 %25, 1
[0x557b5e439870]:   %19 = and i8 %18, 1


Adj: [0x557b5e439ba0]:   store i8 %32, i8* %33, align 1


Removing: [0x557b5e3cfe50]:   %78 = and i8 %77, 1
From the pot matches of: [0x557b5e419bc0]:   %18 = and i8 %17, 1


Uprime : [0x557b5e419c40]:   %19 = xor i8 %18, 1


Uprime Matches: [0x557b5e3c6d20]:   %20 = xor i8 %19, 1
[0x557b5e3cca30]:   %73 = xor i8 %72, 1


Adj: [0x557b5e3cfcf0]:   store i8 %78, i8* %27, align 1


Removing: [0x557b5e438480]:   %26 = and i8 %25, 1
From the pot matches of: [0x557b5e419bc0]:   %18 = and i8 %17, 1


Uprime : [0x557b5e419c40]:   %19 = xor i8 %18, 1


Uprime Matches: [0x557b5e3c6d20]:   %20 = xor i8 %19, 1
[0x557b5e3cca30]:   %73 = xor i8 %72, 1


Adj: [0x557b5e3c8040]:   store i8 %26, i8* %27, align 1


Removing: [0x557b5e3c6e28]:   %50 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x557b5e41aca8]:   %42 = load i64, i64* %RBP, align 8


Uprime : [0x557b5e41ad20]:   %43 = add i64 %42, -8


Uprime Matches: [0x557b5e3c4e10]:   %8 = add i64 %7, -8
[0x557b5e3c8ae0]:   %45 = add i64 %44, -8
[0x557b5e3ca440]:   %61 = add i64 %60, -8


Adj: [0x557b5e3c9050]:   %51 = add i64 %50, -16


Removing: [0x557b5e423bc8]:   %4 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x557b5e41aca8]:   %42 = load i64, i64* %RBP, align 8


Uprime : [0x557b5e41ad20]:   %43 = add i64 %42, -8


Uprime Matches: [0x557b5e3c4e10]:   %8 = add i64 %7, -8
[0x557b5e3c8ae0]:   %45 = add i64 %44, -8
[0x557b5e3ca440]:   %61 = add i64 %60, -8


Adj: [0x557b5e3c4cc0]:   store i64 %4, i64* %9, align 8


Removing: [0x557b5e3f10e8]:   %10 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e41ade8]:   %45 = load i64, i64* %PC, align 8


Uprime : [0x557b5e41ae60]:   %46 = add i64 %45, 3


Uprime Matches: [0x557b5e43a570]:   %48 = add i64 %47, 3


Adj: [0x557b5e3c8830]:   %41 = add i64 %10, 24


Removing: [0x557b5e43ba38]:   %53 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e41ade8]:   %45 = load i64, i64* %PC, align 8


Uprime : [0x557b5e41ae60]:   %46 = add i64 %45, 3


Uprime Matches: [0x557b5e43a570]:   %48 = add i64 %47, 3


Adj: [0x557b5e3c8d90]:   %54 = add i64 %53, 4


Removing: [0x557b5e43bef8]:   %64 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e41ade8]:   %45 = load i64, i64* %PC, align 8


Uprime : [0x557b5e41ae60]:   %46 = add i64 %45, 3


Uprime Matches: [0x557b5e43a570]:   %48 = add i64 %47, 3


Adj: [0x557b5e3c7470]:   %88 = add i64 %64, 5
[0x557b5e3d2f30]:   %92 = add i64 %64, 6


Removing: [0x557b5e43ce68]:   %57 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e41ade8]:   %45 = load i64, i64* %PC, align 8


Uprime : [0x557b5e41ae60]:   %46 = add i64 %45, 3


Uprime Matches: [0x557b5e43a570]:   %48 = add i64 %47, 3


Adj: [0x557b5e3ca640]:   %59 = add i64 %57, 8
[0x557b5e3cb930]:   %58 = add i64 %57, -64


Removing: [0x557b5e423bc8]:   %4 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x557b5e41b028]:   %48 = load i64, i64* %RBP, align 8


Uprime : [0x557b5e41b0a0]:   %49 = add i64 %48, -16


Uprime Matches: [0x557b5e3c9050]:   %51 = add i64 %50, -16


Adj: [0x557b5e3c4cc0]:   store i64 %4, i64* %9, align 8


Removing: [0x557b5e43b448]:   %44 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x557b5e41b028]:   %48 = load i64, i64* %RBP, align 8


Uprime : [0x557b5e41b0a0]:   %49 = add i64 %48, -16


Uprime Matches: [0x557b5e3c9050]:   %51 = add i64 %50, -16


Adj: [0x557b5e3c8ae0]:   %45 = add i64 %44, -8


Removing: [0x557b5e3f10e8]:   %10 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e41b168]:   %51 = load i64, i64* %PC, align 8


Uprime : [0x557b5e41b1e0]:   %52 = add i64 %51, 4


Uprime Matches: [0x557b5e3c8d90]:   %54 = add i64 %53, 4


Adj: [0x557b5e3c8830]:   %41 = add i64 %10, 24


Removing: [0x557b5e43a9d8]:   %47 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e41b168]:   %51 = load i64, i64* %PC, align 8


Uprime : [0x557b5e41b1e0]:   %52 = add i64 %51, 4


Uprime Matches: [0x557b5e3c8d90]:   %54 = add i64 %53, 4


Adj: [0x557b5e43a570]:   %48 = add i64 %47, 3


Removing: [0x557b5e43bef8]:   %64 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e41b168]:   %51 = load i64, i64* %PC, align 8


Uprime : [0x557b5e41b1e0]:   %52 = add i64 %51, 4


Uprime Matches: [0x557b5e3c8d90]:   %54 = add i64 %53, 4


Adj: [0x557b5e3c7470]:   %88 = add i64 %64, 5
[0x557b5e3d2f30]:   %92 = add i64 %64, 6


Removing: [0x557b5e43ce68]:   %57 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e41b168]:   %51 = load i64, i64* %PC, align 8


Uprime : [0x557b5e41b1e0]:   %52 = add i64 %51, 4


Uprime Matches: [0x557b5e3c8d90]:   %54 = add i64 %53, 4


Adj: [0x557b5e3ca640]:   %59 = add i64 %57, 8
[0x557b5e3cb930]:   %58 = add i64 %57, -64


Removing: [0x557b5e3f10e8]:   %10 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e41b408]:   %55 = load i64, i64* %PC, align 8


Uprime : [0x557b5e41b580]:   %57 = add i64 %55, 8


Uprime Matches: [0x557b5e3ca640]:   %59 = add i64 %57, 8


Adj: [0x557b5e3c8830]:   %41 = add i64 %10, 24


Removing: [0x557b5e43a9d8]:   %47 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e41b408]:   %55 = load i64, i64* %PC, align 8


Uprime : [0x557b5e41b580]:   %57 = add i64 %55, 8


Uprime Matches: [0x557b5e3ca640]:   %59 = add i64 %57, 8


Adj: [0x557b5e43a570]:   %48 = add i64 %47, 3


Removing: [0x557b5e43ba38]:   %53 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e41b408]:   %55 = load i64, i64* %PC, align 8


Uprime : [0x557b5e41b580]:   %57 = add i64 %55, 8


Uprime Matches: [0x557b5e3ca640]:   %59 = add i64 %57, 8


Adj: [0x557b5e3c8d90]:   %54 = add i64 %53, 4


Removing: [0x557b5e43bef8]:   %64 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e41b408]:   %55 = load i64, i64* %PC, align 8


Uprime : [0x557b5e41b580]:   %57 = add i64 %55, 8


Uprime Matches: [0x557b5e3ca640]:   %59 = add i64 %57, 8


Adj: [0x557b5e3c7470]:   %88 = add i64 %64, 5
[0x557b5e3d2f30]:   %92 = add i64 %64, 6


Removing: [0x557b5e43c028]:   %63 = load i64, i64* %6, align 8
From the pot matches of: [0x557b5e41b5e8]:   %58 = load i64, i64* %RSP, align 8, !tbaa !1261


Uprime : [0x557b5e41b660]:   %59 = add i64 %58, -8


Uprime Matches: [0x557b5e3c4e10]:   %8 = add i64 %7, -8
[0x557b5e3c8ae0]:   %45 = add i64 %44, -8
[0x557b5e3ca440]:   %61 = add i64 %60, -8


Adj: [0x557b5e3c9e00]:   %65 = add i64 %63, 16
[0x557b5e3cafd0]:   %74 = xor i64 %63, 16
[0x557b5e3cd000]:   %66 = icmp ugt i64 %63, -17
[0x557b5e3d0180]:   %83 = lshr i64 %63, 63
[0x557b5e3d0440]:   %89 = add i64 %63, 24
[0x557b5e3d2a90]:   %95 = add i64 %63, 32


Removing: [0x557b5e3c4e10]:   %8 = add i64 %7, -8
From the pot matches of: [0x557b5e41b660]:   %59 = add i64 %58, -8


Uprime : [0x557b5e41b7c0]:   store i64 %59, i64* %RSP, align 8, !tbaa !1261


Uprime Matches: [0x557b5e3ca0b0]:   store i64 %61, i64* %6, align 8
[0x557b5e3caec0]:   store i64 %65, i64* %6, align 8
[0x557b5e3d28f0]:   store i64 %95, i64* %6, align 8
[0x557b5e3d3090]:   store i64 %89, i64* %6, align 8
[0x557b5e436840]:   store i64 %11, i64* %6, align 8


Adj: [0x557b5e3c47a0]:   store i64 %8, i64* %RBP.i, align 8
[0x557b5e423f28]:   %9 = inttoptr i64 %8 to i64*
[0x557b5e433ba0]:   %12 = icmp ult i64 %8, 16
[0x557b5e438680]:   %34 = lshr i64 %8, 63
[0x557b5e439540]:   %22 = xor i64 %8, 16


Removing: [0x557b5e423d98]:   %7 = load i64, i64* %6, align 8
From the pot matches of: [0x557b5e41bad8]:   %62 = load i64, i64* %RSP, align 8


Uprime : [0x557b5e3b1030]:   %94 = add i64 %62, 32


Uprime Matches: [0x557b5e3d2a90]:   %95 = add i64 %63, 32


Adj: [0x557b5e3c4e10]:   %8 = add i64 %7, -8
[0x557b5e438280]:   %11 = add i64 %7, -24
[0x557b5e43a200]:   %40 = add i64 %7, -12


Removing: [0x557b5e43cc08]:   %60 = load i64, i64* %6, align 8
From the pot matches of: [0x557b5e41bad8]:   %62 = load i64, i64* %RSP, align 8


Uprime : [0x557b5e3b1030]:   %94 = add i64 %62, 32


Uprime Matches: [0x557b5e3d2a90]:   %95 = add i64 %63, 32


Adj: [0x557b5e3ca440]:   %61 = add i64 %60, -8


Removing: [0x557b5e3f10e8]:   %10 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e41bb38]:   %63 = load i64, i64* %PC, align 8


Uprime : [0x557b5e3b0df0]:   %91 = add i64 %63, 6


Uprime Matches: [0x557b5e3d2f30]:   %92 = add i64 %64, 6


Adj: [0x557b5e3c8830]:   %41 = add i64 %10, 24


Removing: [0x557b5e43a9d8]:   %47 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e41bb38]:   %63 = load i64, i64* %PC, align 8


Uprime : [0x557b5e3b0df0]:   %91 = add i64 %63, 6


Uprime Matches: [0x557b5e3d2f30]:   %92 = add i64 %64, 6


Adj: [0x557b5e43a570]:   %48 = add i64 %47, 3


Removing: [0x557b5e43ba38]:   %53 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e41bb38]:   %63 = load i64, i64* %PC, align 8


Uprime : [0x557b5e3b0df0]:   %91 = add i64 %63, 6


Uprime Matches: [0x557b5e3d2f30]:   %92 = add i64 %64, 6


Adj: [0x557b5e3c8d90]:   %54 = add i64 %53, 4


Removing: [0x557b5e43ce68]:   %57 = load i64, i64* %3, align 8
From the pot matches of: [0x557b5e41bb38]:   %63 = load i64, i64* %PC, align 8


Uprime : [0x557b5e3b0df0]:   %91 = add i64 %63, 6


Uprime Matches: [0x557b5e3d2f30]:   %92 = add i64 %64, 6


Adj: [0x557b5e3ca640]:   %59 = add i64 %57, 8
[0x557b5e3cb930]:   %58 = add i64 %57, -64


Removing: [0x557b5e3c7cc8]:   %82 = trunc i64 %81 to i8
From the pot matches of: [0x557b5e41bfb8]:   %70 = trunc i32 %69 to i8


Uprime : [0x557b5e41c030]:   %71 = and i8 %70, 1


Uprime Matches: [0x557b5e3cb410]:   %72 = and i8 %71, 1
[0x557b5e3cfe50]:   %78 = and i8 %77, 1
[0x557b5e438480]:   %26 = and i8 %25, 1
[0x557b5e439870]:   %19 = and i8 %18, 1


Adj: [0x557b5e3cd7c0]:   store i8 %82, i8* %33, align 1


Removing: [0x557b5e436748]:   %15 = trunc i64 %11 to i32
From the pot matches of: [0x557b5e41bfb8]:   %70 = trunc i32 %69 to i8


Uprime : [0x557b5e41c030]:   %71 = and i8 %70, 1


Uprime Matches: [0x557b5e3cb410]:   %72 = and i8 %71, 1
[0x557b5e3cfe50]:   %78 = and i8 %77, 1
[0x557b5e438480]:   %26 = and i8 %25, 1
[0x557b5e439870]:   %19 = and i8 %18, 1


Adj: [0x557b5e439980]:   %16 = and i32 %15, 255


Removing: [0x557b5e43ef28]:   %68 = trunc i64 %65 to i32
From the pot matches of: [0x557b5e41bfb8]:   %70 = trunc i32 %69 to i8


Uprime : [0x557b5e41c030]:   %71 = and i8 %70, 1


Uprime Matches: [0x557b5e3cb410]:   %72 = and i8 %71, 1
[0x557b5e3cfe50]:   %78 = and i8 %77, 1
[0x557b5e438480]:   %26 = and i8 %25, 1
[0x557b5e439870]:   %19 = and i8 %18, 1


Adj: [0x557b5e3ccc80]:   %69 = and i32 %68, 255


Removing: [0x557b5e4696e8]:   %32 = trunc i64 %31 to i8
From the pot matches of: [0x557b5e41bfb8]:   %70 = trunc i32 %69 to i8


Uprime : [0x557b5e41c030]:   %71 = and i8 %70, 1


Uprime Matches: [0x557b5e3cb410]:   %72 = and i8 %71, 1
[0x557b5e3cfe50]:   %78 = and i8 %77, 1
[0x557b5e438480]:   %26 = and i8 %25, 1
[0x557b5e439870]:   %19 = and i8 %18, 1


Adj: [0x557b5e439ba0]:   store i8 %32, i8* %33, align 1


Removing: [0x557b5e3cfe50]:   %78 = and i8 %77, 1
From the pot matches of: [0x557b5e41c030]:   %71 = and i8 %70, 1


Uprime : [0x557b5e41c0b0]:   %72 = xor i8 %71, 1


Uprime Matches: [0x557b5e3c6d20]:   %20 = xor i8 %19, 1
[0x557b5e3cca30]:   %73 = xor i8 %72, 1


Adj: [0x557b5e3cfcf0]:   store i8 %78, i8* %27, align 1


Removing: [0x557b5e438480]:   %26 = and i8 %25, 1
From the pot matches of: [0x557b5e41c030]:   %71 = and i8 %70, 1


Uprime : [0x557b5e41c0b0]:   %72 = xor i8 %71, 1


Uprime Matches: [0x557b5e3c6d20]:   %20 = xor i8 %19, 1
[0x557b5e3cca30]:   %73 = xor i8 %72, 1


Adj: [0x557b5e3c8040]:   store i8 %26, i8* %27, align 1

Round: 1

Removing: [0x557b5e434298]:   %25 = trunc i64 %24 to i8
From the pot matches of: [0x557b5e419b48]:   %17 = trunc i32 %16 to i8


Uprime : [0x557b5e419bc0]:   %18 = and i8 %17, 1


Uprime Matches: [0x557b5e3cb410]:   %72 = and i8 %71, 1
[0x557b5e439870]:   %19 = and i8 %18, 1


Adj: [0x557b5e438480]:   %26 = and i8 %25, 1


Removing: [0x557b5e43eb98]:   %77 = trunc i64 %76 to i8
From the pot matches of: [0x557b5e419b48]:   %17 = trunc i32 %16 to i8


Uprime : [0x557b5e419bc0]:   %18 = and i8 %17, 1


Uprime Matches: [0x557b5e3cb410]:   %72 = and i8 %71, 1
[0x557b5e439870]:   %19 = and i8 %18, 1


Adj: [0x557b5e3cfe50]:   %78 = and i8 %77, 1


Removing: [0x557b5e423d98]:   %7 = load i64, i64* %6, align 8
From the pot matches of: [0x557b5e41b5e8]:   %58 = load i64, i64* %RSP, align 8, !tbaa !1261


Uprime : [0x557b5e41b660]:   %59 = add i64 %58, -8


Uprime Matches: [0x557b5e3ca440]:   %61 = add i64 %60, -8


Adj: [0x557b5e3c4e10]:   %8 = add i64 %7, -8
[0x557b5e438280]:   %11 = add i64 %7, -24
[0x557b5e43a200]:   %40 = add i64 %7, -12


Removing: [0x557b5e434298]:   %25 = trunc i64 %24 to i8
From the pot matches of: [0x557b5e41bfb8]:   %70 = trunc i32 %69 to i8


Uprime : [0x557b5e41c030]:   %71 = and i8 %70, 1


Uprime Matches: [0x557b5e3cb410]:   %72 = and i8 %71, 1
[0x557b5e439870]:   %19 = and i8 %18, 1


Adj: [0x557b5e438480]:   %26 = and i8 %25, 1


Removing: [0x557b5e43eb98]:   %77 = trunc i64 %76 to i8
From the pot matches of: [0x557b5e41bfb8]:   %70 = trunc i32 %69 to i8


Uprime : [0x557b5e41c030]:   %71 = and i8 %70, 1


Uprime Matches: [0x557b5e3cb410]:   %72 = and i8 %71, 1
[0x557b5e439870]:   %19 = and i8 %18, 1


Adj: [0x557b5e3cfe50]:   %78 = and i8 %77, 1

Round: 2


[Info] After Dual Simulation: Round: 0
[0x557b5e3b02b0]:   %74 = xor i64 %73, %64 {
	[0x557b5e3cb340]:  %75 = xor i64 %74, %65
	}

[0x557b5e3b0330]:   %75 = lshr i64 %74, 4 {
	[0x557b5e3d0030]:  %76 = lshr i64 %75, 4
	}

[0x557b5e3b0398]:   %76 = trunc i64 %75 to i8 {
	[0x557b5e43eb98]:  %77 = trunc i64 %76 to i8
	}

[0x557b5e3b0410]:   %77 = and i8 %76, 1 {
	[0x557b5e3cfe50]:  %78 = and i8 %77, 1
	}

[0x557b5e3b0490]:   store i8 %77, i8* %26, align 1, !tbaa !1280 {
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	}

[0x557b5e3b0510]:   %78 = icmp eq i64 %64, 0 {
	[0x557b5e3cfb90]:  %79 = icmp eq i64 %65, 0
	}

[0x557b5e3b0578]:   %79 = zext i1 %78 to i8 {
	[0x557b5e43ea68]:  %80 = zext i1 %79 to i8
	}

[0x557b5e3b05f0]:   store i8 %79, i8* %29, align 1, !tbaa !1281 {
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	}

[0x557b5e3b0670]:   %80 = lshr i64 %64, 63 {
	[0x557b5e3cdf80]:  %81 = lshr i64 %65, 63
	}

[0x557b5e3b06d8]:   %81 = trunc i64 %80 to i8 {
	[0x557b5e3c7cc8]:  %82 = trunc i64 %81 to i8
	}

[0x557b5e3b0750]:   store i8 %81, i8* %32, align 1, !tbaa !1282 {
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	}

[0x557b5e3b07d0]:   %82 = lshr i64 %62, 63 {
	[0x557b5e3d0180]:  %83 = lshr i64 %63, 63
	}

[0x557b5e3b0850]:   %83 = xor i64 %80, %82 {
	[0x557b5e3c7a20]:  %84 = xor i64 %81, %83
	}

[0x557b5e3b08d0]:   %84 = add nuw nsw i64 %83, %80 {
	[0x557b5e3c78c0]:  %85 = add nuw nsw i64 %84, %81
	}

[0x557b5e3b0950]:   %85 = icmp eq i64 %84, 2 {
	[0x557b5e3c77a0]:  %86 = icmp eq i64 %85, 2
	}

[0x557b5e3b09b8]:   %86 = zext i1 %85 to i8 {
	[0x557b5e43e478]:  %87 = zext i1 %86 to i8
	}

[0x557b5e3b0a30]:   store i8 %86, i8* %38, align 1, !tbaa !1283 {
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	}

[0x557b5e3b0ab0]:   %87 = add i64 %63, 5 {
	[0x557b5e3c7470]:  %88 = add i64 %64, 5
	}

[0x557b5e3b0b30]:   store i64 %87, i64* %PC, align 8 {
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	}

[0x557b5e3b0bb0]:   %88 = add i64 %62, 24 {
	[0x557b5e3d0440]:  %89 = add i64 %63, 24
	}

[0x557b5e3b0c18]:   %89 = inttoptr i64 %64 to i64* {
	[0x557b5e43d328]:  %90 = inttoptr i64 %65 to i64*
	}

[0x557b5e3b0c78]:   %90 = load i64, i64* %89, align 8 {
	[0x557b5e43f058]:  %91 = load i64, i64* %90, align 8
	}

[0x557b5e3b0cf0]:   store i64 %90, i64* %RBP, align 8, !tbaa !1261 {
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	}

[0x557b5e3b0d70]:   store i64 %88, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	}

[0x557b5e3b0df0]:   %91 = add i64 %63, 6 {
	[0x557b5e3d2f30]:  %92 = add i64 %64, 6
	}

[0x557b5e3b0e70]:   store i64 %91, i64* %PC, align 8 {
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	}

[0x557b5e3b0ed8]:   %92 = inttoptr i64 %88 to i64* {
	[0x557b5e440228]:  %93 = inttoptr i64 %89 to i64*
	}

[0x557b5e3b0f38]:   %93 = load i64, i64* %92, align 8 {
	[0x557b5e4400f8]:  %94 = load i64, i64* %93, align 8
	}

[0x557b5e3b0fb0]:   store i64 %93, i64* %PC, align 8, !tbaa !1261 {
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	}

[0x557b5e3b1030]:   %94 = add i64 %62, 32 {
	[0x557b5e3d2a90]:  %95 = add i64 %63, 32
	}

[0x557b5e3b10b0]:   store i64 %94, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	}

[0x557b5e3b1118]:   ret %struct.Memory* %61 {
	[0x557b5e43ffc8]:  ret %struct.Memory.31* %call2_400583
	}

[0x557b5e417b30]: i64 %1 {
	[0x557b5e3c8780]:i64 %1
	}

[0x557b5e417b70]: %struct.State* %0 {
	[0x557b5e3c8b90]:%struct.State.0* %0
	}

[0x557b5e418990]: %struct.Memory* %2 {
	[0x557b5e43a100]:%struct.Memory.31* %2
	}

[0x557b5e418b48]:   %EDI = bitcast %union.anon* %3 to i32* {
	[0x557b5e43b6a8]:  %EDI.i = bitcast %union.anon.4* %43 to i32*
	}

[0x557b5e418c20]:   %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0 {
	[0x557b5e3b9420]:  %3 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 33, i32 0, i32 0
	}

[0x557b5e418d10]:   %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0 {
	[0x557b5e46f220]:  %RAX.i14 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 1, i32 0, i32 0
	}

[0x557b5e418e20]:   %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0 {
	[0x557b5e46ee80]:  %RSI.i = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 9, i32 0, i32 0
	}

[0x557b5e418ee8]:   %RDI = getelementptr inbounds %union.anon, %union.anon* %3, i64 0, i32 0 {
	[0x557b5e427aa8]:  %RDI.i = getelementptr inbounds %union.anon.4, %union.anon.4* %43, i64 0, i32 0
	}

[0x557b5e418ff0]:   %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0 {
	[0x557b5e46f410]:  %6 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 13, i32 0, i32 0
	}

[0x557b5e419100]:   %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0 {
	[0x557b5e46f5e0]:  %RBP.i = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 15, i32 0, i32 0
	}

[0x557b5e419198]:   %4 = load i64, i64* %RBP, align 8 {
	[0x557b5e423bc8]:  %4 = load i64, i64* %RBP.i, align 8
	}

[0x557b5e419260]:   %5 = add i64 %1, 1 {
	[0x557b5e47f720]:  %5 = add i64 %1, 1
	}

[0x557b5e4192e0]:   store i64 %5, i64* %PC, align 8 {
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	}

[0x557b5e419348]:   %6 = load i64, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e423d98]:  %7 = load i64, i64* %6, align 8
	}

[0x557b5e4193c0]:   %7 = add i64 %6, -8 {
	[0x557b5e3c4e10]:  %8 = add i64 %7, -8
	}

[0x557b5e419428]:   %8 = inttoptr i64 %7 to i64* {
	[0x557b5e423f28]:  %9 = inttoptr i64 %8 to i64*
	}

[0x557b5e419530]:   store i64 %4, i64* %8, align 8 {
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	}

[0x557b5e419598]:   %9 = load i64, i64* %PC, align 8 {
	[0x557b5e3f10e8]:  %10 = load i64, i64* %3, align 8
	}

[0x557b5e419610]:   store i64 %7, i64* %RBP, align 8, !tbaa !1261 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	}

[0x557b5e419690]:   %10 = add i64 %6, -24 {
	[0x557b5e438280]:  %11 = add i64 %7, -24
	}

[0x557b5e419710]:   store i64 %10, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	}

[0x557b5e419790]:   %11 = icmp ult i64 %7, 16 {
	[0x557b5e433ba0]:  %12 = icmp ult i64 %8, 16
	}

[0x557b5e4197f8]:   %12 = zext i1 %11 to i8 {
	[0x557b5e436478]:  %13 = zext i1 %12 to i8
	}

[0x557b5e4198a0]:   %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1 {
	[0x557b5e50ef90]:  %14 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 1
	}

[0x557b5e419930]:   store i8 %12, i8* %13, align 1, !tbaa !1265 {
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	}

[0x557b5e419998]:   %14 = trunc i64 %10 to i32 {
	[0x557b5e436748]:  %15 = trunc i64 %11 to i32
	}

[0x557b5e419a10]:   %15 = and i32 %14, 255 {
	[0x557b5e439980]:  %16 = and i32 %15, 255
	}

[0x557b5e419ad0]:   %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #9 {
	[0x557b5e40abc0]:  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
	}

[0x557b5e419b48]:   %17 = trunc i32 %16 to i8 {
	[0x557b5e4346c8]:  %18 = trunc i32 %17 to i8
	[0x557b5e43edf8]:  %71 = trunc i32 %70 to i8
	}

[0x557b5e419bc0]:   %18 = and i8 %17, 1 {
	[0x557b5e3cb410]:  %72 = and i8 %71, 1
	[0x557b5e439870]:  %19 = and i8 %18, 1
	}

[0x557b5e419c40]:   %19 = xor i8 %18, 1 {
	[0x557b5e3c6d20]:  %20 = xor i8 %19, 1
	[0x557b5e3cca30]:  %73 = xor i8 %72, 1
	}

[0x557b5e419cf0]:   %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3 {
	[0x557b5e42ff00]:  %21 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 3
	}

[0x557b5e419d80]:   store i8 %19, i8* %20, align 1, !tbaa !1279 {
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	}

[0x557b5e419e00]:   %21 = xor i64 %7, 16 {
	[0x557b5e439540]:  %22 = xor i64 %8, 16
	}

[0x557b5e419e80]:   %22 = xor i64 %21, %10 {
	[0x557b5e3c6670]:  %23 = xor i64 %22, %11
	}

[0x557b5e419f00]:   %23 = lshr i64 %22, 4 {
	[0x557b5e439430]:  %24 = lshr i64 %23, 4
	}

[0x557b5e419f68]:   %24 = trunc i64 %23 to i8 {
	[0x557b5e434298]:  %25 = trunc i64 %24 to i8
	}

[0x557b5e419fe0]:   %25 = and i8 %24, 1 {
	[0x557b5e438480]:  %26 = and i8 %25, 1
	}

[0x557b5e41a090]:   %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5 {
	[0x557b5e3c9a30]:  %27 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 5
	}

[0x557b5e41a120]:   store i8 %25, i8* %26, align 1, !tbaa !1280 {
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	}

[0x557b5e41a1a0]:   %27 = icmp eq i64 %10, 0 {
	[0x557b5e439dc0]:  %28 = icmp eq i64 %11, 0
	}

[0x557b5e41a208]:   %28 = zext i1 %27 to i8 {
	[0x557b5e46d728]:  %29 = zext i1 %28 to i8
	}

[0x557b5e41a2b0]:   %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7 {
	[0x557b5e3c97c0]:  %30 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 7
	}

[0x557b5e41a340]:   store i8 %28, i8* %29, align 1, !tbaa !1281 {
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	}

[0x557b5e41a3c0]:   %30 = lshr i64 %10, 63 {
	[0x557b5e4387d0]:  %31 = lshr i64 %11, 63
	}

[0x557b5e41a428]:   %31 = trunc i64 %30 to i8 {
	[0x557b5e4696e8]:  %32 = trunc i64 %31 to i8
	}

[0x557b5e41a4d0]:   %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9 {
	[0x557b5e3c82b0]:  %33 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 9
	}

[0x557b5e41a560]:   store i8 %31, i8* %32, align 1, !tbaa !1282 {
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	}

[0x557b5e41a5e0]:   %33 = lshr i64 %7, 63 {
	[0x557b5e438680]:  %34 = lshr i64 %8, 63
	}

[0x557b5e41a660]:   %34 = xor i64 %30, %33 {
	[0x557b5e3c6fa0]:  %35 = xor i64 %31, %34
	}

[0x557b5e41a6e0]:   %35 = add nuw nsw i64 %34, %33 {
	[0x557b5e3c81a0]:  %36 = add nuw nsw i64 %35, %34
	}

[0x557b5e41a760]:   %36 = icmp eq i64 %35, 2 {
	[0x557b5e43a420]:  %37 = icmp eq i64 %36, 2
	}

[0x557b5e41a7c8]:   %37 = zext i1 %36 to i8 {
	[0x557b5e39b4a8]:  %38 = zext i1 %37 to i8
	}

[0x557b5e41a870]:   %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13 {
	[0x557b5e3c5160]:  %39 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 13
	}

[0x557b5e41a900]:   store i8 %37, i8* %38, align 1, !tbaa !1283 {
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	}

[0x557b5e41a9e0]:   store i64 add (i64 ptrtoint (%seg_400650__rodata_type* @seg_400650__rodata to i64), i64 4), i64* %RAX, align 8, !tbaa !1261 {
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	}

[0x557b5e41aa60]:   %39 = add i64 %6, -12 {
	[0x557b5e43a200]:  %40 = add i64 %7, -12
	}

[0x557b5e41aae0]:   %40 = add i64 %9, 24 {
	[0x557b5e3c8830]:  %41 = add i64 %10, 24
	}

[0x557b5e41ab60]:   store i64 %40, i64* %PC, align 8 {
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	}

[0x557b5e41abc8]:   %41 = inttoptr i64 %39 to i32* {
	[0x557b5e437838]:  %42 = inttoptr i64 %40 to i32*
	}

[0x557b5e41ac40]:   store i32 0, i32* %41, align 4 {
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	}

[0x557b5e41aca8]:   %42 = load i64, i64* %RBP, align 8 {
	[0x557b5e43b448]:  %44 = load i64, i64* %RBP.i, align 8
	}

[0x557b5e41ad20]:   %43 = add i64 %42, -8 {
	[0x557b5e3c8ae0]:  %45 = add i64 %44, -8
	}

[0x557b5e41ad88]:   %44 = load i32, i32* %EDI, align 4 {
	[0x557b5e43ad68]:  %46 = load i32, i32* %EDI.i, align 4
	}

[0x557b5e41ade8]:   %45 = load i64, i64* %PC, align 8 {
	[0x557b5e43a9d8]:  %47 = load i64, i64* %3, align 8
	}

[0x557b5e41ae60]:   %46 = add i64 %45, 3 {
	[0x557b5e43a570]:  %48 = add i64 %47, 3
	}

[0x557b5e41aee0]:   store i64 %46, i64* %PC, align 8 {
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	}

[0x557b5e41af48]:   %47 = inttoptr i64 %43 to i32* {
	[0x557b5e43a8a8]:  %49 = inttoptr i64 %45 to i32*
	}

[0x557b5e41afc0]:   store i32 %44, i32* %47, align 4 {
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	}

[0x557b5e41b028]:   %48 = load i64, i64* %RBP, align 8 {
	[0x557b5e3c6e28]:  %50 = load i64, i64* %RBP.i, align 8
	}

[0x557b5e41b0a0]:   %49 = add i64 %48, -16 {
	[0x557b5e3c9050]:  %51 = add i64 %50, -16
	}

[0x557b5e41b108]:   %50 = load i64, i64* %RSI, align 8 {
	[0x557b5e3bb3a8]:  %52 = load i64, i64* %RSI.i, align 8
	}

[0x557b5e41b168]:   %51 = load i64, i64* %PC, align 8 {
	[0x557b5e43ba38]:  %53 = load i64, i64* %3, align 8
	}

[0x557b5e41b1e0]:   %52 = add i64 %51, 4 {
	[0x557b5e3c8d90]:  %54 = add i64 %53, 4
	}

[0x557b5e41b260]:   store i64 %52, i64* %PC, align 8 {
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41b2c8]:   %53 = inttoptr i64 %49 to i64* {
	[0x557b5e43d0c8]:  %55 = inttoptr i64 %51 to i64*
	}

[0x557b5e41b340]:   store i64 %50, i64* %53, align 8 {
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	}

[0x557b5e41b3a8]:   %54 = load i64, i64* %RAX, align 8 {
	[0x557b5e43cf98]:  %56 = load i64, i64* %RAX.i14, align 8
	}

[0x557b5e41b408]:   %55 = load i64, i64* %PC, align 8 {
	[0x557b5e43ce68]:  %57 = load i64, i64* %3, align 8
	}

[0x557b5e41b480]:   store i64 %54, i64* %RDI, align 8, !tbaa !1261 {
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	}

[0x557b5e41b500]:   %56 = add i64 %55, -64 {
	[0x557b5e3cb930]:  %58 = add i64 %57, -64
	}

[0x557b5e41b580]:   %57 = add i64 %55, 8 {
	[0x557b5e3ca640]:  %59 = add i64 %57, 8
	}

[0x557b5e41b5e8]:   %58 = load i64, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e43cc08]:  %60 = load i64, i64* %6, align 8
	}

[0x557b5e41b660]:   %59 = add i64 %58, -8 {
	[0x557b5e3ca440]:  %61 = add i64 %60, -8
	}

[0x557b5e41b6c8]:   %60 = inttoptr i64 %59 to i64* {
	[0x557b5e43c158]:  %62 = inttoptr i64 %61 to i64*
	}

[0x557b5e41b740]:   store i64 %57, i64* %60, align 8 {
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	}

[0x557b5e41b7c0]:   store i64 %59, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	}

[0x557b5e41b840]:   store i64 %56, i64* %PC, align 8, !tbaa !1261 {
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	}

[0x557b5e41ba10]:   %61 = tail call %struct.Memory* @sub_400540_stderr_driver(%struct.State* nonnull %0, i64 %56, %struct.Memory* %2) {
	[0x557b5e3c4a80]:  %call2_400583 = tail call %struct.Memory.31* @sub_400540.stderr_driver(%struct.State.0* %0, i64 %58, %struct.Memory.31* %2)
	}

[0x557b5e41bad8]:   %62 = load i64, i64* %RSP, align 8 {
	[0x557b5e43c028]:  %63 = load i64, i64* %6, align 8
	}

[0x557b5e41bb38]:   %63 = load i64, i64* %PC, align 8 {
	[0x557b5e43bef8]:  %64 = load i64, i64* %3, align 8
	}

[0x557b5e41bbb0]:   %64 = add i64 %62, 16 {
	[0x557b5e3c9e00]:  %65 = add i64 %63, 16
	}

[0x557b5e41bc30]:   store i64 %64, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	}

[0x557b5e41bcb0]:   %65 = icmp ugt i64 %62, -17 {
	[0x557b5e3cd000]:  %66 = icmp ugt i64 %63, -17
	}

[0x557b5e41bd18]:   %66 = zext i1 %65 to i8 {
	[0x557b5e43d1f8]:  %67 = zext i1 %66 to i8
	}

[0x557b5e41bd90]:   store i8 %66, i8* %13, align 1, !tbaa !1265 {
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	}

[0x557b5e41bdf8]:   %67 = trunc i64 %64 to i32 {
	[0x557b5e43ef28]:  %68 = trunc i64 %65 to i32
	}

[0x557b5e41be70]:   %68 = and i32 %67, 255 {
	[0x557b5e3ccc80]:  %69 = and i32 %68, 255
	}

[0x557b5e41bef0]:   %69 = tail call i32 @llvm.ctpop.i32(i32 %68) #9 {
	[0x557b5e44e3a0]:  %70 = tail call i32 @llvm.ctpop.i32(i32 %69)
	}

[0x557b5e41bfb8]:   %70 = trunc i32 %69 to i8 {
	[0x557b5e4346c8]:  %18 = trunc i32 %17 to i8
	[0x557b5e43edf8]:  %71 = trunc i32 %70 to i8
	}

[0x557b5e41c030]:   %71 = and i8 %70, 1 {
	[0x557b5e3cb410]:  %72 = and i8 %71, 1
	[0x557b5e439870]:  %19 = and i8 %18, 1
	}

[0x557b5e41c0b0]:   %72 = xor i8 %71, 1 {
	[0x557b5e3c6d20]:  %20 = xor i8 %19, 1
	[0x557b5e3cca30]:  %73 = xor i8 %72, 1
	}

[0x557b5e41c130]:   store i8 %72, i8* %20, align 1, !tbaa !1279 {
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	}

[0x557b5e41c1b0]:   %73 = xor i64 %62, 16 {
	[0x557b5e3cafd0]:  %74 = xor i64 %63, 16
	}

[0x557b5e47b2c8]:   %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0 {
	[0x557b5e44d8d8]:  %43 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 11, i32 0
	}


[Info]: Phase II: Retrieve potential BB matches: Round: 0
Retrieved BB Matches...
[0x557b5e4189d0]: block_400560 {
	[0x557b5e3c2f40]:entry
	}


[Info]: Phase II: Handle Conflicting Stores: Round: 0

[Info]: Phase I: Dual Simulation: Round: 1
Round: 0

Removing: [0x557b5e3cca30]:   %73 = xor i8 %72, 1
From the pot matches of: [0x557b5e419c40]:   %19 = xor i8 %18, 1


Uprime : [0x557b5e419d80]:   store i8 %19, i8* %20, align 1, !tbaa !1279


Uprime Matches: [0x557b5e3c6bc0]:   store i8 %20, i8* %21, align 1


Adj: [0x557b5e3cb0e0]:   store i8 %73, i8* %21, align 1


Removing: [0x557b5e3c6d20]:   %20 = xor i8 %19, 1
From the pot matches of: [0x557b5e41c0b0]:   %72 = xor i8 %71, 1


Uprime : [0x557b5e41c130]:   store i8 %72, i8* %20, align 1, !tbaa !1279


Uprime Matches: [0x557b5e3cb0e0]:   store i8 %73, i8* %21, align 1


Adj: [0x557b5e3c6bc0]:   store i8 %20, i8* %21, align 1

Round: 1

Removing: [0x557b5e3cb410]:   %72 = and i8 %71, 1
From the pot matches of: [0x557b5e419bc0]:   %18 = and i8 %17, 1


Uprime : [0x557b5e419c40]:   %19 = xor i8 %18, 1


Uprime Matches: [0x557b5e3c6d20]:   %20 = xor i8 %19, 1


Adj: [0x557b5e3cca30]:   %73 = xor i8 %72, 1


Removing: [0x557b5e439870]:   %19 = and i8 %18, 1
From the pot matches of: [0x557b5e41c030]:   %71 = and i8 %70, 1


Uprime : [0x557b5e41c0b0]:   %72 = xor i8 %71, 1


Uprime Matches: [0x557b5e3cca30]:   %73 = xor i8 %72, 1


Adj: [0x557b5e3c6d20]:   %20 = xor i8 %19, 1

Round: 2

Removing: [0x557b5e43edf8]:   %71 = trunc i32 %70 to i8
From the pot matches of: [0x557b5e419b48]:   %17 = trunc i32 %16 to i8


Uprime : [0x557b5e419bc0]:   %18 = and i8 %17, 1


Uprime Matches: [0x557b5e439870]:   %19 = and i8 %18, 1


Adj: [0x557b5e3cb410]:   %72 = and i8 %71, 1


Removing: [0x557b5e4346c8]:   %18 = trunc i32 %17 to i8
From the pot matches of: [0x557b5e41bfb8]:   %70 = trunc i32 %69 to i8


Uprime : [0x557b5e41c030]:   %71 = and i8 %70, 1


Uprime Matches: [0x557b5e3cb410]:   %72 = and i8 %71, 1


Adj: [0x557b5e439870]:   %19 = and i8 %18, 1

Round: 3


[Info] After Dual Simulation: Round: 1
[0x557b5e3b02b0]:   %74 = xor i64 %73, %64 {
	[0x557b5e3cb340]:  %75 = xor i64 %74, %65
	}

[0x557b5e3b0330]:   %75 = lshr i64 %74, 4 {
	[0x557b5e3d0030]:  %76 = lshr i64 %75, 4
	}

[0x557b5e3b0398]:   %76 = trunc i64 %75 to i8 {
	[0x557b5e43eb98]:  %77 = trunc i64 %76 to i8
	}

[0x557b5e3b0410]:   %77 = and i8 %76, 1 {
	[0x557b5e3cfe50]:  %78 = and i8 %77, 1
	}

[0x557b5e3b0490]:   store i8 %77, i8* %26, align 1, !tbaa !1280 {
	[0x557b5e3cfcf0]:  store i8 %78, i8* %27, align 1
	}

[0x557b5e3b0510]:   %78 = icmp eq i64 %64, 0 {
	[0x557b5e3cfb90]:  %79 = icmp eq i64 %65, 0
	}

[0x557b5e3b0578]:   %79 = zext i1 %78 to i8 {
	[0x557b5e43ea68]:  %80 = zext i1 %79 to i8
	}

[0x557b5e3b05f0]:   store i8 %79, i8* %29, align 1, !tbaa !1281 {
	[0x557b5e3cfa30]:  store i8 %80, i8* %30, align 1
	}

[0x557b5e3b0670]:   %80 = lshr i64 %64, 63 {
	[0x557b5e3cdf80]:  %81 = lshr i64 %65, 63
	}

[0x557b5e3b06d8]:   %81 = trunc i64 %80 to i8 {
	[0x557b5e3c7cc8]:  %82 = trunc i64 %81 to i8
	}

[0x557b5e3b0750]:   store i8 %81, i8* %32, align 1, !tbaa !1282 {
	[0x557b5e3cd7c0]:  store i8 %82, i8* %33, align 1
	}

[0x557b5e3b07d0]:   %82 = lshr i64 %62, 63 {
	[0x557b5e3d0180]:  %83 = lshr i64 %63, 63
	}

[0x557b5e3b0850]:   %83 = xor i64 %80, %82 {
	[0x557b5e3c7a20]:  %84 = xor i64 %81, %83
	}

[0x557b5e3b08d0]:   %84 = add nuw nsw i64 %83, %80 {
	[0x557b5e3c78c0]:  %85 = add nuw nsw i64 %84, %81
	}

[0x557b5e3b0950]:   %85 = icmp eq i64 %84, 2 {
	[0x557b5e3c77a0]:  %86 = icmp eq i64 %85, 2
	}

[0x557b5e3b09b8]:   %86 = zext i1 %85 to i8 {
	[0x557b5e43e478]:  %87 = zext i1 %86 to i8
	}

[0x557b5e3b0a30]:   store i8 %86, i8* %38, align 1, !tbaa !1283 {
	[0x557b5e3c7650]:  store i8 %87, i8* %39, align 1
	}

[0x557b5e3b0ab0]:   %87 = add i64 %63, 5 {
	[0x557b5e3c7470]:  %88 = add i64 %64, 5
	}

[0x557b5e3b0b30]:   store i64 %87, i64* %PC, align 8 {
	[0x557b5e3c7390]:  store i64 %88, i64* %3, align 8
	}

[0x557b5e3b0bb0]:   %88 = add i64 %62, 24 {
	[0x557b5e3d0440]:  %89 = add i64 %63, 24
	}

[0x557b5e3b0c18]:   %89 = inttoptr i64 %64 to i64* {
	[0x557b5e43d328]:  %90 = inttoptr i64 %65 to i64*
	}

[0x557b5e3b0c78]:   %90 = load i64, i64* %89, align 8 {
	[0x557b5e43f058]:  %91 = load i64, i64* %90, align 8
	}

[0x557b5e3b0cf0]:   store i64 %90, i64* %RBP, align 8, !tbaa !1261 {
	[0x557b5e3c7b80]:  store i64 %91, i64* %RBP.i, align 8
	}

[0x557b5e3b0d70]:   store i64 %88, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e3d3090]:  store i64 %89, i64* %6, align 8
	}

[0x557b5e3b0df0]:   %91 = add i64 %63, 6 {
	[0x557b5e3d2f30]:  %92 = add i64 %64, 6
	}

[0x557b5e3b0e70]:   store i64 %91, i64* %PC, align 8 {
	[0x557b5e3d2d50]:  store i64 %92, i64* %3, align 8
	}

[0x557b5e3b0ed8]:   %92 = inttoptr i64 %88 to i64* {
	[0x557b5e440228]:  %93 = inttoptr i64 %89 to i64*
	}

[0x557b5e3b0f38]:   %93 = load i64, i64* %92, align 8 {
	[0x557b5e4400f8]:  %94 = load i64, i64* %93, align 8
	}

[0x557b5e3b0fb0]:   store i64 %93, i64* %PC, align 8, !tbaa !1261 {
	[0x557b5e3d2bf0]:  store i64 %94, i64* %3, align 8
	}

[0x557b5e3b1030]:   %94 = add i64 %62, 32 {
	[0x557b5e3d2a90]:  %95 = add i64 %63, 32
	}

[0x557b5e3b10b0]:   store i64 %94, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e3d28f0]:  store i64 %95, i64* %6, align 8
	}

[0x557b5e3b1118]:   ret %struct.Memory* %61 {
	[0x557b5e43ffc8]:  ret %struct.Memory.31* %call2_400583
	}

[0x557b5e417b30]: i64 %1 {
	[0x557b5e3c8780]:i64 %1
	}

[0x557b5e417b70]: %struct.State* %0 {
	[0x557b5e3c8b90]:%struct.State.0* %0
	}

[0x557b5e418990]: %struct.Memory* %2 {
	[0x557b5e43a100]:%struct.Memory.31* %2
	}

[0x557b5e418b48]:   %EDI = bitcast %union.anon* %3 to i32* {
	[0x557b5e43b6a8]:  %EDI.i = bitcast %union.anon.4* %43 to i32*
	}

[0x557b5e418c20]:   %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0 {
	[0x557b5e3b9420]:  %3 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 33, i32 0, i32 0
	}

[0x557b5e418d10]:   %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0 {
	[0x557b5e46f220]:  %RAX.i14 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 1, i32 0, i32 0
	}

[0x557b5e418e20]:   %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0 {
	[0x557b5e46ee80]:  %RSI.i = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 9, i32 0, i32 0
	}

[0x557b5e418ee8]:   %RDI = getelementptr inbounds %union.anon, %union.anon* %3, i64 0, i32 0 {
	[0x557b5e427aa8]:  %RDI.i = getelementptr inbounds %union.anon.4, %union.anon.4* %43, i64 0, i32 0
	}

[0x557b5e418ff0]:   %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0 {
	[0x557b5e46f410]:  %6 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 13, i32 0, i32 0
	}

[0x557b5e419100]:   %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0 {
	[0x557b5e46f5e0]:  %RBP.i = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 15, i32 0, i32 0
	}

[0x557b5e419198]:   %4 = load i64, i64* %RBP, align 8 {
	[0x557b5e423bc8]:  %4 = load i64, i64* %RBP.i, align 8
	}

[0x557b5e419260]:   %5 = add i64 %1, 1 {
	[0x557b5e47f720]:  %5 = add i64 %1, 1
	}

[0x557b5e4192e0]:   store i64 %5, i64* %PC, align 8 {
	[0x557b5e3c5050]:  store i64 %5, i64* %3, align 8
	}

[0x557b5e419348]:   %6 = load i64, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e423d98]:  %7 = load i64, i64* %6, align 8
	}

[0x557b5e4193c0]:   %7 = add i64 %6, -8 {
	[0x557b5e3c4e10]:  %8 = add i64 %7, -8
	}

[0x557b5e419428]:   %8 = inttoptr i64 %7 to i64* {
	[0x557b5e423f28]:  %9 = inttoptr i64 %8 to i64*
	}

[0x557b5e419530]:   store i64 %4, i64* %8, align 8 {
	[0x557b5e3c4cc0]:  store i64 %4, i64* %9, align 8
	}

[0x557b5e419598]:   %9 = load i64, i64* %PC, align 8 {
	[0x557b5e3f10e8]:  %10 = load i64, i64* %3, align 8
	}

[0x557b5e419610]:   store i64 %7, i64* %RBP, align 8, !tbaa !1261 {
	[0x557b5e3c47a0]:  store i64 %8, i64* %RBP.i, align 8
	}

[0x557b5e419690]:   %10 = add i64 %6, -24 {
	[0x557b5e438280]:  %11 = add i64 %7, -24
	}

[0x557b5e419710]:   store i64 %10, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e436840]:  store i64 %11, i64* %6, align 8
	}

[0x557b5e419790]:   %11 = icmp ult i64 %7, 16 {
	[0x557b5e433ba0]:  %12 = icmp ult i64 %8, 16
	}

[0x557b5e4197f8]:   %12 = zext i1 %11 to i8 {
	[0x557b5e436478]:  %13 = zext i1 %12 to i8
	}

[0x557b5e4198a0]:   %13 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1 {
	[0x557b5e50ef90]:  %14 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 1
	}

[0x557b5e419930]:   store i8 %12, i8* %13, align 1, !tbaa !1265 {
	[0x557b5e3c6520]:  store i8 %13, i8* %14, align 1
	}

[0x557b5e419998]:   %14 = trunc i64 %10 to i32 {
	[0x557b5e436748]:  %15 = trunc i64 %11 to i32
	}

[0x557b5e419a10]:   %15 = and i32 %14, 255 {
	[0x557b5e439980]:  %16 = and i32 %15, 255
	}

[0x557b5e419ad0]:   %16 = tail call i32 @llvm.ctpop.i32(i32 %15) #9 {
	[0x557b5e40abc0]:  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
	}

[0x557b5e419b48]:   %17 = trunc i32 %16 to i8 {
	[0x557b5e4346c8]:  %18 = trunc i32 %17 to i8
	}

[0x557b5e419bc0]:   %18 = and i8 %17, 1 {
	[0x557b5e439870]:  %19 = and i8 %18, 1
	}

[0x557b5e419c40]:   %19 = xor i8 %18, 1 {
	[0x557b5e3c6d20]:  %20 = xor i8 %19, 1
	}

[0x557b5e419cf0]:   %20 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3 {
	[0x557b5e42ff00]:  %21 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 3
	}

[0x557b5e419d80]:   store i8 %19, i8* %20, align 1, !tbaa !1279 {
	[0x557b5e3c6bc0]:  store i8 %20, i8* %21, align 1
	}

[0x557b5e419e00]:   %21 = xor i64 %7, 16 {
	[0x557b5e439540]:  %22 = xor i64 %8, 16
	}

[0x557b5e419e80]:   %22 = xor i64 %21, %10 {
	[0x557b5e3c6670]:  %23 = xor i64 %22, %11
	}

[0x557b5e419f00]:   %23 = lshr i64 %22, 4 {
	[0x557b5e439430]:  %24 = lshr i64 %23, 4
	}

[0x557b5e419f68]:   %24 = trunc i64 %23 to i8 {
	[0x557b5e434298]:  %25 = trunc i64 %24 to i8
	}

[0x557b5e419fe0]:   %25 = and i8 %24, 1 {
	[0x557b5e438480]:  %26 = and i8 %25, 1
	}

[0x557b5e41a090]:   %26 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5 {
	[0x557b5e3c9a30]:  %27 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 5
	}

[0x557b5e41a120]:   store i8 %25, i8* %26, align 1, !tbaa !1280 {
	[0x557b5e3c8040]:  store i8 %26, i8* %27, align 1
	}

[0x557b5e41a1a0]:   %27 = icmp eq i64 %10, 0 {
	[0x557b5e439dc0]:  %28 = icmp eq i64 %11, 0
	}

[0x557b5e41a208]:   %28 = zext i1 %27 to i8 {
	[0x557b5e46d728]:  %29 = zext i1 %28 to i8
	}

[0x557b5e41a2b0]:   %29 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7 {
	[0x557b5e3c97c0]:  %30 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 7
	}

[0x557b5e41a340]:   store i8 %28, i8* %29, align 1, !tbaa !1281 {
	[0x557b5e3c7f50]:  store i8 %29, i8* %30, align 1
	}

[0x557b5e41a3c0]:   %30 = lshr i64 %10, 63 {
	[0x557b5e4387d0]:  %31 = lshr i64 %11, 63
	}

[0x557b5e41a428]:   %31 = trunc i64 %30 to i8 {
	[0x557b5e4696e8]:  %32 = trunc i64 %31 to i8
	}

[0x557b5e41a4d0]:   %32 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9 {
	[0x557b5e3c82b0]:  %33 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 9
	}

[0x557b5e41a560]:   store i8 %31, i8* %32, align 1, !tbaa !1282 {
	[0x557b5e439ba0]:  store i8 %32, i8* %33, align 1
	}

[0x557b5e41a5e0]:   %33 = lshr i64 %7, 63 {
	[0x557b5e438680]:  %34 = lshr i64 %8, 63
	}

[0x557b5e41a660]:   %34 = xor i64 %30, %33 {
	[0x557b5e3c6fa0]:  %35 = xor i64 %31, %34
	}

[0x557b5e41a6e0]:   %35 = add nuw nsw i64 %34, %33 {
	[0x557b5e3c81a0]:  %36 = add nuw nsw i64 %35, %34
	}

[0x557b5e41a760]:   %36 = icmp eq i64 %35, 2 {
	[0x557b5e43a420]:  %37 = icmp eq i64 %36, 2
	}

[0x557b5e41a7c8]:   %37 = zext i1 %36 to i8 {
	[0x557b5e39b4a8]:  %38 = zext i1 %37 to i8
	}

[0x557b5e41a870]:   %38 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13 {
	[0x557b5e3c5160]:  %39 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 13
	}

[0x557b5e41a900]:   store i8 %37, i8* %38, align 1, !tbaa !1283 {
	[0x557b5e3c8990]:  store i8 %38, i8* %39, align 1
	}

[0x557b5e41a9e0]:   store i64 add (i64 ptrtoint (%seg_400650__rodata_type* @seg_400650__rodata to i64), i64 4), i64* %RAX, align 8, !tbaa !1261 {
	[0x557b5e43a310]:  store i64 4195924, i64* %RAX.i14, align 8
	}

[0x557b5e41aa60]:   %39 = add i64 %6, -12 {
	[0x557b5e43a200]:  %40 = add i64 %7, -12
	}

[0x557b5e41aae0]:   %40 = add i64 %9, 24 {
	[0x557b5e3c8830]:  %41 = add i64 %10, 24
	}

[0x557b5e41ab60]:   store i64 %40, i64* %PC, align 8 {
	[0x557b5e3c86d0]:  store i64 %41, i64* %3, align 8
	}

[0x557b5e41abc8]:   %41 = inttoptr i64 %39 to i32* {
	[0x557b5e437838]:  %42 = inttoptr i64 %40 to i32*
	}

[0x557b5e41ac40]:   store i32 0, i32* %41, align 4 {
	[0x557b5e439fe0]:  store i32 0, i32* %42, align 4
	}

[0x557b5e41aca8]:   %42 = load i64, i64* %RBP, align 8 {
	[0x557b5e43b448]:  %44 = load i64, i64* %RBP.i, align 8
	}

[0x557b5e41ad20]:   %43 = add i64 %42, -8 {
	[0x557b5e3c8ae0]:  %45 = add i64 %44, -8
	}

[0x557b5e41ad88]:   %44 = load i32, i32* %EDI, align 4 {
	[0x557b5e43ad68]:  %46 = load i32, i32* %EDI.i, align 4
	}

[0x557b5e41ade8]:   %45 = load i64, i64* %PC, align 8 {
	[0x557b5e43a9d8]:  %47 = load i64, i64* %3, align 8
	}

[0x557b5e41ae60]:   %46 = add i64 %45, 3 {
	[0x557b5e43a570]:  %48 = add i64 %47, 3
	}

[0x557b5e41aee0]:   store i64 %46, i64* %PC, align 8 {
	[0x557b5e3c9350]:  store i64 %48, i64* %3, align 8
	}

[0x557b5e41af48]:   %47 = inttoptr i64 %43 to i32* {
	[0x557b5e43a8a8]:  %49 = inttoptr i64 %45 to i32*
	}

[0x557b5e41afc0]:   store i32 %44, i32* %47, align 4 {
	[0x557b5e3c91b0]:  store i32 %46, i32* %49, align 4
	}

[0x557b5e41b028]:   %48 = load i64, i64* %RBP, align 8 {
	[0x557b5e3c6e28]:  %50 = load i64, i64* %RBP.i, align 8
	}

[0x557b5e41b0a0]:   %49 = add i64 %48, -16 {
	[0x557b5e3c9050]:  %51 = add i64 %50, -16
	}

[0x557b5e41b108]:   %50 = load i64, i64* %RSI, align 8 {
	[0x557b5e3bb3a8]:  %52 = load i64, i64* %RSI.i, align 8
	}

[0x557b5e41b168]:   %51 = load i64, i64* %PC, align 8 {
	[0x557b5e43ba38]:  %53 = load i64, i64* %3, align 8
	}

[0x557b5e41b1e0]:   %52 = add i64 %51, 4 {
	[0x557b5e3c8d90]:  %54 = add i64 %53, 4
	}

[0x557b5e41b260]:   store i64 %52, i64* %PC, align 8 {
	[0x557b5e43a640]:  store i64 %54, i64* %3, align 8
	}

[0x557b5e41b2c8]:   %53 = inttoptr i64 %49 to i64* {
	[0x557b5e43d0c8]:  %55 = inttoptr i64 %51 to i64*
	}

[0x557b5e41b340]:   store i64 %50, i64* %53, align 8 {
	[0x557b5e3c8c40]:  store i64 %52, i64* %55, align 8
	}

[0x557b5e41b3a8]:   %54 = load i64, i64* %RAX, align 8 {
	[0x557b5e43cf98]:  %56 = load i64, i64* %RAX.i14, align 8
	}

[0x557b5e41b408]:   %55 = load i64, i64* %PC, align 8 {
	[0x557b5e43ce68]:  %57 = load i64, i64* %3, align 8
	}

[0x557b5e41b480]:   store i64 %54, i64* %RDI, align 8, !tbaa !1261 {
	[0x557b5e3c9cb0]:  store i64 %56, i64* %RDI.i, align 8
	}

[0x557b5e41b500]:   %56 = add i64 %55, -64 {
	[0x557b5e3cb930]:  %58 = add i64 %57, -64
	}

[0x557b5e41b580]:   %57 = add i64 %55, 8 {
	[0x557b5e3ca640]:  %59 = add i64 %57, 8
	}

[0x557b5e41b5e8]:   %58 = load i64, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e43cc08]:  %60 = load i64, i64* %6, align 8
	}

[0x557b5e41b660]:   %59 = add i64 %58, -8 {
	[0x557b5e3ca440]:  %61 = add i64 %60, -8
	}

[0x557b5e41b6c8]:   %60 = inttoptr i64 %59 to i64* {
	[0x557b5e43c158]:  %62 = inttoptr i64 %61 to i64*
	}

[0x557b5e41b740]:   store i64 %57, i64* %60, align 8 {
	[0x557b5e3ca210]:  store i64 %59, i64* %62, align 8
	}

[0x557b5e41b7c0]:   store i64 %59, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e3ca0b0]:  store i64 %61, i64* %6, align 8
	}

[0x557b5e41b840]:   store i64 %56, i64* %PC, align 8, !tbaa !1261 {
	[0x557b5e3c9f60]:  store i64 %58, i64* %3, align 8
	}

[0x557b5e41ba10]:   %61 = tail call %struct.Memory* @sub_400540_stderr_driver(%struct.State* nonnull %0, i64 %56, %struct.Memory* %2) {
	[0x557b5e3c4a80]:  %call2_400583 = tail call %struct.Memory.31* @sub_400540.stderr_driver(%struct.State.0* %0, i64 %58, %struct.Memory.31* %2)
	}

[0x557b5e41bad8]:   %62 = load i64, i64* %RSP, align 8 {
	[0x557b5e43c028]:  %63 = load i64, i64* %6, align 8
	}

[0x557b5e41bb38]:   %63 = load i64, i64* %PC, align 8 {
	[0x557b5e43bef8]:  %64 = load i64, i64* %3, align 8
	}

[0x557b5e41bbb0]:   %64 = add i64 %62, 16 {
	[0x557b5e3c9e00]:  %65 = add i64 %63, 16
	}

[0x557b5e41bc30]:   store i64 %64, i64* %RSP, align 8, !tbaa !1261 {
	[0x557b5e3caec0]:  store i64 %65, i64* %6, align 8
	}

[0x557b5e41bcb0]:   %65 = icmp ugt i64 %62, -17 {
	[0x557b5e3cd000]:  %66 = icmp ugt i64 %63, -17
	}

[0x557b5e41bd18]:   %66 = zext i1 %65 to i8 {
	[0x557b5e43d1f8]:  %67 = zext i1 %66 to i8
	}

[0x557b5e41bd90]:   store i8 %66, i8* %13, align 1, !tbaa !1265 {
	[0x557b5e3cb560]:  store i8 %67, i8* %14, align 1
	}

[0x557b5e41bdf8]:   %67 = trunc i64 %64 to i32 {
	[0x557b5e43ef28]:  %68 = trunc i64 %65 to i32
	}

[0x557b5e41be70]:   %68 = and i32 %67, 255 {
	[0x557b5e3ccc80]:  %69 = and i32 %68, 255
	}

[0x557b5e41bef0]:   %69 = tail call i32 @llvm.ctpop.i32(i32 %68) #9 {
	[0x557b5e44e3a0]:  %70 = tail call i32 @llvm.ctpop.i32(i32 %69)
	}

[0x557b5e41bfb8]:   %70 = trunc i32 %69 to i8 {
	[0x557b5e43edf8]:  %71 = trunc i32 %70 to i8
	}

[0x557b5e41c030]:   %71 = and i8 %70, 1 {
	[0x557b5e3cb410]:  %72 = and i8 %71, 1
	}

[0x557b5e41c0b0]:   %72 = xor i8 %71, 1 {
	[0x557b5e3cca30]:  %73 = xor i8 %72, 1
	}

[0x557b5e41c130]:   store i8 %72, i8* %20, align 1, !tbaa !1279 {
	[0x557b5e3cb0e0]:  store i8 %73, i8* %21, align 1
	}

[0x557b5e41c1b0]:   %73 = xor i64 %62, 16 {
	[0x557b5e3cafd0]:  %74 = xor i64 %63, 16
	}

[0x557b5e47b2c8]:   %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0 {
	[0x557b5e44d8d8]:  %43 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 11, i32 0
	}


[Info]: Phase II: Retrieve potential BB matches: Round: 1
Retrieved BB Matches...
[0x557b5e4189d0]: block_400560 {
	[0x557b5e3c2f40]:entry
	}


[Info]: Phase II: Handle Conflicting Stores: Round: 1

[Info]: Check for multiple matches
Iso Match Found
Reading LLVM: mcsema/test.opt.ll
Reading LLVM: mcsema/test.proposed.opt.ll
Extracting function [main] from mcsema/test.opt.ll
Extracting function [main] from mcsema/test.proposed.opt.ll
Matcher Done...
