Matching sub_400590_print_it Vs print_it


[Info] Retrieve Potential Matches...
[0x56205a7f2300]:   %12 = icmp ult i64 %8, 16 {
	[0x56205a80b3b0]:  %88 = icmp eq i64 %87, 2
	[0x56205a80f430]:  %68 = icmp ugt i64 %66, -17
	[0x56205a8117e0]:  %81 = icmp eq i64 %67, 0
	[0x56205a877bc0]:  %12 = icmp ult i64 %8, 16
	[0x56205a87dde0]:  %28 = icmp eq i64 %11, 0
	[0x56205a87e440]:  %37 = icmp eq i64 %36, 2
	}

[0x56205a7f2368]:   %13 = zext i1 %12 to i8 {
	[0x56205a7df4a8]:  %38 = zext i1 %37 to i8
	[0x56205a87a498]:  %13 = zext i1 %12 to i8
	[0x56205a881218]:  %64 = zext i32 %63 to i64
	[0x56205a881348]:  %82 = zext i1 %81 to i8
	[0x56205a882bb8]:  %69 = zext i1 %68 to i8
	[0x56205a884248]:  %89 = zext i1 %88 to i8
	[0x56205a8b1748]:  %29 = zext i1 %28 to i8
	}

[0x56205a7f2410]:   %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1 {
	[0x56205a952f90]:  %14 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 1
	}

[0x56205a7f24a0]:   store i8 %13, i8* %14, align 1, !tbaa !1265 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a7f2508]:   %15 = trunc i64 %11 to i32 {
	[0x56205a80bce8]:  %73 = trunc i32 %72 to i8
	[0x56205a8782b8]:  %25 = trunc i64 %24 to i8
	[0x56205a8786e8]:  %18 = trunc i32 %17 to i8
	[0x56205a87a768]:  %15 = trunc i64 %11 to i32
	[0x56205a882498]:  %79 = trunc i64 %78 to i8
	[0x56205a882a88]:  %70 = trunc i64 %67 to i32
	[0x56205a883078]:  %84 = trunc i64 %83 to i8
	[0x56205a8ad738]:  %32 = trunc i64 %31 to i8
	}

[0x56205a7f2580]:   %16 = and i32 %15, 255 {
	[0x56205a80f100]:  %71 = and i32 %70, 255
	[0x56205a87d9a0]:  %16 = and i32 %15, 255
	}

[0x56205a7f2628]:   %18 = trunc i32 %17 to i8 {
	[0x56205a80bce8]:  %73 = trunc i32 %72 to i8
	[0x56205a8782b8]:  %25 = trunc i64 %24 to i8
	[0x56205a8786e8]:  %18 = trunc i32 %17 to i8
	[0x56205a87a768]:  %15 = trunc i64 %11 to i32
	[0x56205a882498]:  %79 = trunc i64 %78 to i8
	[0x56205a882a88]:  %70 = trunc i64 %67 to i32
	[0x56205a883078]:  %84 = trunc i64 %83 to i8
	[0x56205a8ad738]:  %32 = trunc i64 %31 to i8
	}

[0x56205a7f26a0]:   %19 = and i8 %18, 1 {
	[0x56205a80eff0]:  %74 = and i8 %73, 1
	[0x56205a813a50]:  %80 = and i8 %79, 1
	[0x56205a87c4a0]:  %26 = and i8 %25, 1
	[0x56205a87d890]:  %19 = and i8 %18, 1
	}

[0x56205a7f2720]:   %20 = xor i8 %19, 1 {
	[0x56205a80ad40]:  %20 = xor i8 %19, 1
	[0x56205a80f360]:  %75 = xor i8 %74, 1
	}

[0x56205a7f27d0]:   %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3 {
	[0x56205a873f20]:  %21 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 3
	}

[0x56205a7f2860]:   store i8 %20, i8* %21, align 1, !tbaa !1279 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a7f28e0]:   %22 = xor i64 %8, 16 {
	[0x56205a813e70]:  %76 = xor i64 %66, 16
	[0x56205a87d560]:  %22 = xor i64 %8, 16
	}

[0x56205a7f2960]:   %23 = xor i64 %22, %11 {
	[0x56205a80a690]:  %23 = xor i64 %22, %11
	[0x56205a80afc0]:  %35 = xor i64 %31, %34
	[0x56205a80b670]:  %86 = xor i64 %83, %85
	[0x56205a813d10]:  %77 = xor i64 %76, %67
	}

[0x56205a7f29e0]:   %24 = lshr i64 %23, 4 {
	[0x56205a813bb0]:  %78 = lshr i64 %77, 4
	[0x56205a87d450]:  %24 = lshr i64 %23, 4
	}

[0x56205a7f2a48]:   %25 = trunc i64 %24 to i8 {
	[0x56205a80bce8]:  %73 = trunc i32 %72 to i8
	[0x56205a8782b8]:  %25 = trunc i64 %24 to i8
	[0x56205a8786e8]:  %18 = trunc i32 %17 to i8
	[0x56205a87a768]:  %15 = trunc i64 %11 to i32
	[0x56205a882498]:  %79 = trunc i64 %78 to i8
	[0x56205a882a88]:  %70 = trunc i64 %67 to i32
	[0x56205a883078]:  %84 = trunc i64 %83 to i8
	[0x56205a8ad738]:  %32 = trunc i64 %31 to i8
	}

[0x56205a7f2ac0]:   %26 = and i8 %25, 1 {
	[0x56205a80eff0]:  %74 = and i8 %73, 1
	[0x56205a813a50]:  %80 = and i8 %79, 1
	[0x56205a87c4a0]:  %26 = and i8 %25, 1
	[0x56205a87d890]:  %19 = and i8 %18, 1
	}

[0x56205a7f2b70]:   %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5 {
	[0x56205a80da50]:  %27 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 5
	}

[0x56205a7f2c00]:   store i8 %26, i8* %27, align 1, !tbaa !1280 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a7f2c80]:   %28 = icmp eq i64 %11, 0 {
	[0x56205a80b3b0]:  %88 = icmp eq i64 %87, 2
	[0x56205a80f430]:  %68 = icmp ugt i64 %66, -17
	[0x56205a8117e0]:  %81 = icmp eq i64 %67, 0
	[0x56205a877bc0]:  %12 = icmp ult i64 %8, 16
	[0x56205a87dde0]:  %28 = icmp eq i64 %11, 0
	[0x56205a87e440]:  %37 = icmp eq i64 %36, 2
	}

[0x56205a7f2ce8]:   %29 = zext i1 %28 to i8 {
	[0x56205a7df4a8]:  %38 = zext i1 %37 to i8
	[0x56205a87a498]:  %13 = zext i1 %12 to i8
	[0x56205a881218]:  %64 = zext i32 %63 to i64
	[0x56205a881348]:  %82 = zext i1 %81 to i8
	[0x56205a882bb8]:  %69 = zext i1 %68 to i8
	[0x56205a884248]:  %89 = zext i1 %88 to i8
	[0x56205a8b1748]:  %29 = zext i1 %28 to i8
	}

[0x56205a7f2d90]:   %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7 {
	[0x56205a80d7e0]:  %30 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 7
	}

[0x56205a7f2e20]:   store i8 %29, i8* %30, align 1, !tbaa !1281 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a853f20]: %struct.State* %0 {
	[0x56205a87df00]:%struct.State.0* %0
	}

[0x56205a853f60]: i64 %1 {
	[0x56205a80cbb0]:i64 %1
	}

[0x56205a853fa0]: %struct.Memory* %2 {
	[0x56205a80d600]:%struct.Memory.31* %2
	}

[0x56205a854128]:   %AL = bitcast %union.anon* %3 to i8* {
	[0x56205a80ae48]:  %AL.i = bitcast %union.anon.4* %50 to i8*
	[0x56205a880e88]:  %EAX.i = bitcast %union.anon.4* %50 to i32*
	[0x56205a8810e8]:  %ECX.i9 = bitcast %union.anon.4* %56 to i32*
	}

[0x56205a854200]:   %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0 {
	[0x56205a7fd420]:  %3 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 33, i32 0, i32 0
	}

[0x56205a854278]:   %EAX = bitcast %union.anon* %3 to i32* {
	[0x56205a80ae48]:  %AL.i = bitcast %union.anon.4* %50 to i8*
	[0x56205a880e88]:  %EAX.i = bitcast %union.anon.4* %50 to i32*
	[0x56205a8810e8]:  %ECX.i9 = bitcast %union.anon.4* %56 to i32*
	}

[0x56205a854348]:   %ECX = bitcast %union.anon* %4 to i32* {
	[0x56205a80ae48]:  %AL.i = bitcast %union.anon.4* %50 to i8*
	[0x56205a880e88]:  %EAX.i = bitcast %union.anon.4* %50 to i32*
	[0x56205a8810e8]:  %ECX.i9 = bitcast %union.anon.4* %56 to i32*
	}

[0x56205a8543f8]:   %RAX = getelementptr inbounds %union.anon, %union.anon* %3, i64 0, i32 0 {
	[0x56205a7e1128]:  %RAX.i = getelementptr inbounds %union.anon.4, %union.anon.4* %50, i64 0, i32 0
	[0x56205a86baa8]:  %RCX.i = getelementptr inbounds %union.anon.4, %union.anon.4* %56, i64 0, i32 0
	}

[0x56205a8544b8]:   %RCX = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0 {
	[0x56205a7e1128]:  %RAX.i = getelementptr inbounds %union.anon.4, %union.anon.4* %50, i64 0, i32 0
	[0x56205a86baa8]:  %RCX.i = getelementptr inbounds %union.anon.4, %union.anon.4* %56, i64 0, i32 0
	}

[0x56205a8545c0]:   %RDX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 7, i32 0, i32 0 {
	[0x56205a868720]:  %RDX.i = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 7, i32 0, i32 0
	}

[0x56205a8546d0]:   %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0 {
	[0x56205a8b3220]:  %RSI.i = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 9, i32 0, i32 0
	}

[0x56205a8547e0]:   %RDI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0, i32 0 {
	[0x56205a8b2e80]:  %RDI.i16 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 11, i32 0, i32 0
	}

[0x56205a8548f0]:   %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0 {
	[0x56205a8b3410]:  %6 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 13, i32 0, i32 0
	}

[0x56205a854a00]:   %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0 {
	[0x56205a8b35e0]:  %RBP.i = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 15, i32 0, i32 0
	}

[0x56205a854a98]:   %5 = load i64, i64* %RBP, align 8 {
	[0x56205a7ff3c8]:  %53 = load i64, i64* %6, align 8
	[0x56205a8350e8]:  %10 = load i64, i64* %3, align 8
	[0x56205a867bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x56205a867d98]:  %7 = load i64, i64* %6, align 8
	[0x56205a87b858]:  %41 = load i64, i64* %RDI.i16, align 8
	[0x56205a87e8c8]:  %49 = load i64, i64* %48, align 8
	[0x56205a87ed88]:  %45 = load i64, i64* %RBP.i, align 8
	[0x56205a87f468]:  %44 = load i64, i64* %3, align 8
	[0x56205a87ff18]:  %63 = load i32, i32* %ECX.i9, align 4
	[0x56205a880178]:  %60 = load i32, i32* %EAX.i, align 4
	[0x56205a880c28]:  %58 = load i64, i64* %RBP.i, align 8
	[0x56205a880fb8]:  %57 = load i64, i64* %3, align 8
	[0x56205a882e18]:  %66 = load i64, i64* %6, align 8
	[0x56205a882f48]:  %65 = load i64, i64* %3, align 8
	[0x56205a8838c8]:  %96 = load i64, i64* %95, align 8
	[0x56205a883fe8]:  %93 = load i64, i64* %92, align 8
	}

[0x56205a854b10]:   %6 = add i64 %1, 1 {
	[0x56205a8c3720]:  %5 = add i64 %1, 1
	}

[0x56205a854b90]:   store i64 %6, i64* %PC, align 8 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a854bf8]:   %7 = load i64, i64* %RSP, align 8, !tbaa !1261 {
	[0x56205a7ff3c8]:  %53 = load i64, i64* %6, align 8
	[0x56205a8350e8]:  %10 = load i64, i64* %3, align 8
	[0x56205a867bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x56205a867d98]:  %7 = load i64, i64* %6, align 8
	[0x56205a87b858]:  %41 = load i64, i64* %RDI.i16, align 8
	[0x56205a87e8c8]:  %49 = load i64, i64* %48, align 8
	[0x56205a87ed88]:  %45 = load i64, i64* %RBP.i, align 8
	[0x56205a87f468]:  %44 = load i64, i64* %3, align 8
	[0x56205a87ff18]:  %63 = load i32, i32* %ECX.i9, align 4
	[0x56205a880178]:  %60 = load i32, i32* %EAX.i, align 4
	[0x56205a880c28]:  %58 = load i64, i64* %RBP.i, align 8
	[0x56205a880fb8]:  %57 = load i64, i64* %3, align 8
	[0x56205a882e18]:  %66 = load i64, i64* %6, align 8
	[0x56205a882f48]:  %65 = load i64, i64* %3, align 8
	[0x56205a8838c8]:  %96 = load i64, i64* %95, align 8
	[0x56205a883fe8]:  %93 = load i64, i64* %92, align 8
	}

[0x56205a854c70]:   %8 = add i64 %7, -8 {
	[0x56205a808e30]:  %8 = add i64 %7, -8
	[0x56205a80dcd0]:  %54 = add i64 %53, -8
	[0x56205a87e590]:  %46 = add i64 %45, -8
	}

[0x56205a854cf0]:   %17 = tail call i32 @llvm.ctpop.i32(i32 %16) #9 {
	[0x56205a808aa0]:  %call2_4005b4 = tail call %struct.Memory.31* @sub_400440.fprintf_plt(%struct.State.0* %0, i64 %51, %struct.Memory.31* %2)
	[0x56205a84ebc0]:  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
	[0x56205a8923a0]:  %72 = tail call i32 @llvm.ctpop.i32(i32 %71)
	}

[0x56205a854d68]:   %9 = inttoptr i64 %8 to i64* {
	[0x56205a867f28]:  %9 = inttoptr i64 %8 to i64*
	[0x56205a87e9f8]:  %48 = inttoptr i64 %46 to i64*
	[0x56205a87f6c8]:  %43 = inttoptr i64 %40 to i64*
	[0x56205a87fa58]:  %55 = inttoptr i64 %54 to i64*
	[0x56205a880048]:  %62 = inttoptr i64 %59 to i32*
	[0x56205a883eb8]:  %95 = inttoptr i64 %91 to i64*
	[0x56205a884118]:  %92 = inttoptr i64 %67 to i64*
	}

[0x56205a854de0]:   store i64 %5, i64* %9, align 8 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a854e48]:   %10 = load i64, i64* %PC, align 8 {
	[0x56205a7ff3c8]:  %53 = load i64, i64* %6, align 8
	[0x56205a8350e8]:  %10 = load i64, i64* %3, align 8
	[0x56205a867bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x56205a867d98]:  %7 = load i64, i64* %6, align 8
	[0x56205a87b858]:  %41 = load i64, i64* %RDI.i16, align 8
	[0x56205a87e8c8]:  %49 = load i64, i64* %48, align 8
	[0x56205a87ed88]:  %45 = load i64, i64* %RBP.i, align 8
	[0x56205a87f468]:  %44 = load i64, i64* %3, align 8
	[0x56205a87ff18]:  %63 = load i32, i32* %ECX.i9, align 4
	[0x56205a880178]:  %60 = load i32, i32* %EAX.i, align 4
	[0x56205a880c28]:  %58 = load i64, i64* %RBP.i, align 8
	[0x56205a880fb8]:  %57 = load i64, i64* %3, align 8
	[0x56205a882e18]:  %66 = load i64, i64* %6, align 8
	[0x56205a882f48]:  %65 = load i64, i64* %3, align 8
	[0x56205a8838c8]:  %96 = load i64, i64* %95, align 8
	[0x56205a883fe8]:  %93 = load i64, i64* %92, align 8
	}

[0x56205a854ec0]:   store i64 %8, i64* %RBP, align 8, !tbaa !1261 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a854f40]:   %11 = add i64 %7, -24 {
	[0x56205a87c2a0]:  %11 = add i64 %7, -24
	}

[0x56205a854fc0]:   store i64 %11, i64* %RSP, align 8, !tbaa !1261 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a855c50]:   %31 = lshr i64 %11, 63 {
	[0x56205a80b7c0]:  %85 = lshr i64 %66, 63
	[0x56205a80ba40]:  %83 = lshr i64 %67, 63
	[0x56205a87c6a0]:  %34 = lshr i64 %8, 63
	[0x56205a87c7f0]:  %31 = lshr i64 %11, 63
	}

[0x56205a855cb8]:   %32 = trunc i64 %31 to i8 {
	[0x56205a80bce8]:  %73 = trunc i32 %72 to i8
	[0x56205a8782b8]:  %25 = trunc i64 %24 to i8
	[0x56205a8786e8]:  %18 = trunc i32 %17 to i8
	[0x56205a87a768]:  %15 = trunc i64 %11 to i32
	[0x56205a882498]:  %79 = trunc i64 %78 to i8
	[0x56205a882a88]:  %70 = trunc i64 %67 to i32
	[0x56205a883078]:  %84 = trunc i64 %83 to i8
	[0x56205a8ad738]:  %32 = trunc i64 %31 to i8
	}

[0x56205a855d60]:   %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9 {
	[0x56205a80c2d0]:  %33 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 9
	}

[0x56205a855df0]:   store i8 %32, i8* %33, align 1, !tbaa !1282 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a855e70]:   %34 = lshr i64 %8, 63 {
	[0x56205a80b7c0]:  %85 = lshr i64 %66, 63
	[0x56205a80ba40]:  %83 = lshr i64 %67, 63
	[0x56205a87c6a0]:  %34 = lshr i64 %8, 63
	[0x56205a87c7f0]:  %31 = lshr i64 %11, 63
	}

[0x56205a855ef0]:   %35 = xor i64 %31, %34 {
	[0x56205a80a690]:  %23 = xor i64 %22, %11
	[0x56205a80afc0]:  %35 = xor i64 %31, %34
	[0x56205a80b670]:  %86 = xor i64 %83, %85
	[0x56205a813d10]:  %77 = xor i64 %76, %67
	}

[0x56205a855f70]:   %36 = add nuw nsw i64 %35, %34 {
	[0x56205a80b490]:  %87 = add nuw nsw i64 %86, %83
	[0x56205a80c1c0]:  %36 = add nuw nsw i64 %35, %34
	}

[0x56205a855ff0]:   %37 = icmp eq i64 %36, 2 {
	[0x56205a80b3b0]:  %88 = icmp eq i64 %87, 2
	[0x56205a80f430]:  %68 = icmp ugt i64 %66, -17
	[0x56205a8117e0]:  %81 = icmp eq i64 %67, 0
	[0x56205a877bc0]:  %12 = icmp ult i64 %8, 16
	[0x56205a87dde0]:  %28 = icmp eq i64 %11, 0
	[0x56205a87e440]:  %37 = icmp eq i64 %36, 2
	}

[0x56205a856058]:   %38 = zext i1 %37 to i8 {
	[0x56205a7df4a8]:  %38 = zext i1 %37 to i8
	[0x56205a87a498]:  %13 = zext i1 %12 to i8
	[0x56205a881218]:  %64 = zext i32 %63 to i64
	[0x56205a881348]:  %82 = zext i1 %81 to i8
	[0x56205a882bb8]:  %69 = zext i1 %68 to i8
	[0x56205a884248]:  %89 = zext i1 %88 to i8
	[0x56205a8b1748]:  %29 = zext i1 %28 to i8
	}

[0x56205a856100]:   %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13 {
	[0x56205a809180]:  %39 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 13
	}

[0x56205a856190]:   store i8 %38, i8* %39, align 1, !tbaa !1283 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a8562f0]:   store i64 add (i64 ptrtoint (%seg_400650__rodata_type* @seg_400650__rodata to i64), i64 29), i64* %RSI, align 8, !tbaa !1261 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a856370]:   %40 = add i64 %7, -16 {
	[0x56205a87e220]:  %40 = add i64 %7, -16
	}

[0x56205a8563d8]:   %41 = load i64, i64* %RDI, align 8 {
	[0x56205a7ff3c8]:  %53 = load i64, i64* %6, align 8
	[0x56205a8350e8]:  %10 = load i64, i64* %3, align 8
	[0x56205a867bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x56205a867d98]:  %7 = load i64, i64* %6, align 8
	[0x56205a87b858]:  %41 = load i64, i64* %RDI.i16, align 8
	[0x56205a87e8c8]:  %49 = load i64, i64* %48, align 8
	[0x56205a87ed88]:  %45 = load i64, i64* %RBP.i, align 8
	[0x56205a87f468]:  %44 = load i64, i64* %3, align 8
	[0x56205a87ff18]:  %63 = load i32, i32* %ECX.i9, align 4
	[0x56205a880178]:  %60 = load i32, i32* %EAX.i, align 4
	[0x56205a880c28]:  %58 = load i64, i64* %RBP.i, align 8
	[0x56205a880fb8]:  %57 = load i64, i64* %3, align 8
	[0x56205a882e18]:  %66 = load i64, i64* %6, align 8
	[0x56205a882f48]:  %65 = load i64, i64* %3, align 8
	[0x56205a8838c8]:  %96 = load i64, i64* %95, align 8
	[0x56205a883fe8]:  %93 = load i64, i64* %92, align 8
	}

[0x56205a856490]:   %42 = add i64 %10, 21 {
	[0x56205a80c850]:  %42 = add i64 %10, 21
	}

[0x56205a856510]:   store i64 %42, i64* %PC, align 8 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a856578]:   %43 = inttoptr i64 %40 to i64* {
	[0x56205a867f28]:  %9 = inttoptr i64 %8 to i64*
	[0x56205a87e9f8]:  %48 = inttoptr i64 %46 to i64*
	[0x56205a87f6c8]:  %43 = inttoptr i64 %40 to i64*
	[0x56205a87fa58]:  %55 = inttoptr i64 %54 to i64*
	[0x56205a880048]:  %62 = inttoptr i64 %59 to i32*
	[0x56205a883eb8]:  %95 = inttoptr i64 %91 to i64*
	[0x56205a884118]:  %92 = inttoptr i64 %67 to i64*
	}

[0x56205a8565f0]:   store i64 %41, i64* %43, align 8 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a856658]:   %44 = load i64, i64* %PC, align 8 {
	[0x56205a7ff3c8]:  %53 = load i64, i64* %6, align 8
	[0x56205a8350e8]:  %10 = load i64, i64* %3, align 8
	[0x56205a867bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x56205a867d98]:  %7 = load i64, i64* %6, align 8
	[0x56205a87b858]:  %41 = load i64, i64* %RDI.i16, align 8
	[0x56205a87e8c8]:  %49 = load i64, i64* %48, align 8
	[0x56205a87ed88]:  %45 = load i64, i64* %RBP.i, align 8
	[0x56205a87f468]:  %44 = load i64, i64* %3, align 8
	[0x56205a87ff18]:  %63 = load i32, i32* %ECX.i9, align 4
	[0x56205a880178]:  %60 = load i32, i32* %EAX.i, align 4
	[0x56205a880c28]:  %58 = load i64, i64* %RBP.i, align 8
	[0x56205a880fb8]:  %57 = load i64, i64* %3, align 8
	[0x56205a882e18]:  %66 = load i64, i64* %6, align 8
	[0x56205a882f48]:  %65 = load i64, i64* %3, align 8
	[0x56205a8838c8]:  %96 = load i64, i64* %95, align 8
	[0x56205a883fe8]:  %93 = load i64, i64* %92, align 8
	}

[0x56205a8566b8]:   %45 = load i64, i64* @stderr, align 64 {
	[0x56205a7ff3c8]:  %53 = load i64, i64* %6, align 8
	[0x56205a8350e8]:  %10 = load i64, i64* %3, align 8
	[0x56205a867bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x56205a867d98]:  %7 = load i64, i64* %6, align 8
	[0x56205a87b858]:  %41 = load i64, i64* %RDI.i16, align 8
	[0x56205a87e8c8]:  %49 = load i64, i64* %48, align 8
	[0x56205a87ed88]:  %45 = load i64, i64* %RBP.i, align 8
	[0x56205a87f468]:  %44 = load i64, i64* %3, align 8
	[0x56205a87ff18]:  %63 = load i32, i32* %ECX.i9, align 4
	[0x56205a880178]:  %60 = load i32, i32* %EAX.i, align 4
	[0x56205a880c28]:  %58 = load i64, i64* %RBP.i, align 8
	[0x56205a880fb8]:  %57 = load i64, i64* %3, align 8
	[0x56205a882e18]:  %66 = load i64, i64* %6, align 8
	[0x56205a882f48]:  %65 = load i64, i64* %3, align 8
	[0x56205a8838c8]:  %96 = load i64, i64* %95, align 8
	[0x56205a883fe8]:  %93 = load i64, i64* %92, align 8
	}

[0x56205a856730]:   store i64 %45, i64* %RDI, align 8, !tbaa !1261 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a856798]:   %46 = load i64, i64* %RBP, align 8 {
	[0x56205a7ff3c8]:  %53 = load i64, i64* %6, align 8
	[0x56205a8350e8]:  %10 = load i64, i64* %3, align 8
	[0x56205a867bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x56205a867d98]:  %7 = load i64, i64* %6, align 8
	[0x56205a87b858]:  %41 = load i64, i64* %RDI.i16, align 8
	[0x56205a87e8c8]:  %49 = load i64, i64* %48, align 8
	[0x56205a87ed88]:  %45 = load i64, i64* %RBP.i, align 8
	[0x56205a87f468]:  %44 = load i64, i64* %3, align 8
	[0x56205a87ff18]:  %63 = load i32, i32* %ECX.i9, align 4
	[0x56205a880178]:  %60 = load i32, i32* %EAX.i, align 4
	[0x56205a880c28]:  %58 = load i64, i64* %RBP.i, align 8
	[0x56205a880fb8]:  %57 = load i64, i64* %3, align 8
	[0x56205a882e18]:  %66 = load i64, i64* %6, align 8
	[0x56205a882f48]:  %65 = load i64, i64* %3, align 8
	[0x56205a8838c8]:  %96 = load i64, i64* %95, align 8
	[0x56205a883fe8]:  %93 = load i64, i64* %92, align 8
	}

[0x56205a856810]:   %47 = add i64 %46, -8 {
	[0x56205a808e30]:  %8 = add i64 %7, -8
	[0x56205a80dcd0]:  %54 = add i64 %53, -8
	[0x56205a87e590]:  %46 = add i64 %45, -8
	}

[0x56205a856890]:   %48 = add i64 %44, 12 {
	[0x56205a80d370]:  %47 = add i64 %44, 12
	}

[0x56205a856910]:   store i64 %48, i64* %PC, align 8 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a856978]:   %49 = inttoptr i64 %47 to i64* {
	[0x56205a867f28]:  %9 = inttoptr i64 %8 to i64*
	[0x56205a87e9f8]:  %48 = inttoptr i64 %46 to i64*
	[0x56205a87f6c8]:  %43 = inttoptr i64 %40 to i64*
	[0x56205a87fa58]:  %55 = inttoptr i64 %54 to i64*
	[0x56205a880048]:  %62 = inttoptr i64 %59 to i32*
	[0x56205a883eb8]:  %95 = inttoptr i64 %91 to i64*
	[0x56205a884118]:  %92 = inttoptr i64 %67 to i64*
	}

[0x56205a8569d8]:   %50 = load i64, i64* %49, align 8 {
	[0x56205a7ff3c8]:  %53 = load i64, i64* %6, align 8
	[0x56205a8350e8]:  %10 = load i64, i64* %3, align 8
	[0x56205a867bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x56205a867d98]:  %7 = load i64, i64* %6, align 8
	[0x56205a87b858]:  %41 = load i64, i64* %RDI.i16, align 8
	[0x56205a87e8c8]:  %49 = load i64, i64* %48, align 8
	[0x56205a87ed88]:  %45 = load i64, i64* %RBP.i, align 8
	[0x56205a87f468]:  %44 = load i64, i64* %3, align 8
	[0x56205a87ff18]:  %63 = load i32, i32* %ECX.i9, align 4
	[0x56205a880178]:  %60 = load i32, i32* %EAX.i, align 4
	[0x56205a880c28]:  %58 = load i64, i64* %RBP.i, align 8
	[0x56205a880fb8]:  %57 = load i64, i64* %3, align 8
	[0x56205a882e18]:  %66 = load i64, i64* %6, align 8
	[0x56205a882f48]:  %65 = load i64, i64* %3, align 8
	[0x56205a8838c8]:  %96 = load i64, i64* %95, align 8
	[0x56205a883fe8]:  %93 = load i64, i64* %92, align 8
	}

[0x56205a856a50]:   store i64 %50, i64* %RDX, align 8, !tbaa !1261 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a856ad0]:   store i8 0, i8* %AL, align 1, !tbaa !1284 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a856b90]:   %51 = add i64 %44, -358 {
	[0x56205a87e660]:  %51 = add i64 %44, -358
	}

[0x56205a856c50]:   %52 = add i64 %44, 19 {
	[0x56205a80cc60]:  %52 = add i64 %44, 19
	}

[0x56205a856cb8]:   %53 = load i64, i64* %RSP, align 8, !tbaa !1261 {
	[0x56205a7ff3c8]:  %53 = load i64, i64* %6, align 8
	[0x56205a8350e8]:  %10 = load i64, i64* %3, align 8
	[0x56205a867bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x56205a867d98]:  %7 = load i64, i64* %6, align 8
	[0x56205a87b858]:  %41 = load i64, i64* %RDI.i16, align 8
	[0x56205a87e8c8]:  %49 = load i64, i64* %48, align 8
	[0x56205a87ed88]:  %45 = load i64, i64* %RBP.i, align 8
	[0x56205a87f468]:  %44 = load i64, i64* %3, align 8
	[0x56205a87ff18]:  %63 = load i32, i32* %ECX.i9, align 4
	[0x56205a880178]:  %60 = load i32, i32* %EAX.i, align 4
	[0x56205a880c28]:  %58 = load i64, i64* %RBP.i, align 8
	[0x56205a880fb8]:  %57 = load i64, i64* %3, align 8
	[0x56205a882e18]:  %66 = load i64, i64* %6, align 8
	[0x56205a882f48]:  %65 = load i64, i64* %3, align 8
	[0x56205a8838c8]:  %96 = load i64, i64* %95, align 8
	[0x56205a883fe8]:  %93 = load i64, i64* %92, align 8
	}

[0x56205a856d30]:   %54 = add i64 %53, -8 {
	[0x56205a808e30]:  %8 = add i64 %7, -8
	[0x56205a80dcd0]:  %54 = add i64 %53, -8
	[0x56205a87e590]:  %46 = add i64 %45, -8
	}

[0x56205a856d98]:   %55 = inttoptr i64 %54 to i64* {
	[0x56205a867f28]:  %9 = inttoptr i64 %8 to i64*
	[0x56205a87e9f8]:  %48 = inttoptr i64 %46 to i64*
	[0x56205a87f6c8]:  %43 = inttoptr i64 %40 to i64*
	[0x56205a87fa58]:  %55 = inttoptr i64 %54 to i64*
	[0x56205a880048]:  %62 = inttoptr i64 %59 to i32*
	[0x56205a883eb8]:  %95 = inttoptr i64 %91 to i64*
	[0x56205a884118]:  %92 = inttoptr i64 %67 to i64*
	}

[0x56205a856e10]:   store i64 %52, i64* %55, align 8 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a856e90]:   store i64 %54, i64* %RSP, align 8, !tbaa !1261 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a856f10]:   store i64 %51, i64* %PC, align 8, !tbaa !1261 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a857118]:   %56 = tail call fastcc %struct.Memory* @ext_601058_fprintf(%struct.State* nonnull %0, %struct.Memory* %2) {
	[0x56205a808aa0]:  %call2_4005b4 = tail call %struct.Memory.31* @sub_400440.fprintf_plt(%struct.State.0* %0, i64 %51, %struct.Memory.31* %2)
	[0x56205a84ebc0]:  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
	[0x56205a8923a0]:  %72 = tail call i32 @llvm.ctpop.i32(i32 %71)
	}

[0x56205a8571d8]:   %57 = load i64, i64* %PC, align 8 {
	[0x56205a7ff3c8]:  %53 = load i64, i64* %6, align 8
	[0x56205a8350e8]:  %10 = load i64, i64* %3, align 8
	[0x56205a867bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x56205a867d98]:  %7 = load i64, i64* %6, align 8
	[0x56205a87b858]:  %41 = load i64, i64* %RDI.i16, align 8
	[0x56205a87e8c8]:  %49 = load i64, i64* %48, align 8
	[0x56205a87ed88]:  %45 = load i64, i64* %RBP.i, align 8
	[0x56205a87f468]:  %44 = load i64, i64* %3, align 8
	[0x56205a87ff18]:  %63 = load i32, i32* %ECX.i9, align 4
	[0x56205a880178]:  %60 = load i32, i32* %EAX.i, align 4
	[0x56205a880c28]:  %58 = load i64, i64* %RBP.i, align 8
	[0x56205a880fb8]:  %57 = load i64, i64* %3, align 8
	[0x56205a882e18]:  %66 = load i64, i64* %6, align 8
	[0x56205a882f48]:  %65 = load i64, i64* %3, align 8
	[0x56205a8838c8]:  %96 = load i64, i64* %95, align 8
	[0x56205a883fe8]:  %93 = load i64, i64* %92, align 8
	}

[0x56205a857250]:   store i64 0, i64* %RCX, align 8, !tbaa !1261 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a8572b8]:   %58 = load i64, i64* %RBP, align 8 {
	[0x56205a7ff3c8]:  %53 = load i64, i64* %6, align 8
	[0x56205a8350e8]:  %10 = load i64, i64* %3, align 8
	[0x56205a867bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x56205a867d98]:  %7 = load i64, i64* %6, align 8
	[0x56205a87b858]:  %41 = load i64, i64* %RDI.i16, align 8
	[0x56205a87e8c8]:  %49 = load i64, i64* %48, align 8
	[0x56205a87ed88]:  %45 = load i64, i64* %RBP.i, align 8
	[0x56205a87f468]:  %44 = load i64, i64* %3, align 8
	[0x56205a87ff18]:  %63 = load i32, i32* %ECX.i9, align 4
	[0x56205a880178]:  %60 = load i32, i32* %EAX.i, align 4
	[0x56205a880c28]:  %58 = load i64, i64* %RBP.i, align 8
	[0x56205a880fb8]:  %57 = load i64, i64* %3, align 8
	[0x56205a882e18]:  %66 = load i64, i64* %6, align 8
	[0x56205a882f48]:  %65 = load i64, i64* %3, align 8
	[0x56205a8838c8]:  %96 = load i64, i64* %95, align 8
	[0x56205a883fe8]:  %93 = load i64, i64* %92, align 8
	}

[0x56205a857370]:   %59 = add i64 %58, -12 {
	[0x56205a80e0d0]:  %59 = add i64 %58, -12
	}

[0x56205a8573d8]:   %60 = load i32, i32* %EAX, align 4 {
	[0x56205a7ff3c8]:  %53 = load i64, i64* %6, align 8
	[0x56205a8350e8]:  %10 = load i64, i64* %3, align 8
	[0x56205a867bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x56205a867d98]:  %7 = load i64, i64* %6, align 8
	[0x56205a87b858]:  %41 = load i64, i64* %RDI.i16, align 8
	[0x56205a87e8c8]:  %49 = load i64, i64* %48, align 8
	[0x56205a87ed88]:  %45 = load i64, i64* %RBP.i, align 8
	[0x56205a87f468]:  %44 = load i64, i64* %3, align 8
	[0x56205a87ff18]:  %63 = load i32, i32* %ECX.i9, align 4
	[0x56205a880178]:  %60 = load i32, i32* %EAX.i, align 4
	[0x56205a880c28]:  %58 = load i64, i64* %RBP.i, align 8
	[0x56205a880fb8]:  %57 = load i64, i64* %3, align 8
	[0x56205a882e18]:  %66 = load i64, i64* %6, align 8
	[0x56205a882f48]:  %65 = load i64, i64* %3, align 8
	[0x56205a8838c8]:  %96 = load i64, i64* %95, align 8
	[0x56205a883fe8]:  %93 = load i64, i64* %92, align 8
	}

[0x56205a857450]:   %61 = add i64 %57, 5 {
	[0x56205a80df80]:  %61 = add i64 %57, 5
	}

[0x56205a8574d0]:   store i64 %61, i64* %PC, align 8 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a857538]:   %62 = inttoptr i64 %59 to i32* {
	[0x56205a867f28]:  %9 = inttoptr i64 %8 to i64*
	[0x56205a87e9f8]:  %48 = inttoptr i64 %46 to i64*
	[0x56205a87f6c8]:  %43 = inttoptr i64 %40 to i64*
	[0x56205a87fa58]:  %55 = inttoptr i64 %54 to i64*
	[0x56205a880048]:  %62 = inttoptr i64 %59 to i32*
	[0x56205a883eb8]:  %95 = inttoptr i64 %91 to i64*
	[0x56205a884118]:  %92 = inttoptr i64 %67 to i64*
	}

[0x56205a8575b0]:   store i32 %60, i32* %62, align 4 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a857618]:   %63 = load i32, i32* %ECX, align 4 {
	[0x56205a7ff3c8]:  %53 = load i64, i64* %6, align 8
	[0x56205a8350e8]:  %10 = load i64, i64* %3, align 8
	[0x56205a867bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x56205a867d98]:  %7 = load i64, i64* %6, align 8
	[0x56205a87b858]:  %41 = load i64, i64* %RDI.i16, align 8
	[0x56205a87e8c8]:  %49 = load i64, i64* %48, align 8
	[0x56205a87ed88]:  %45 = load i64, i64* %RBP.i, align 8
	[0x56205a87f468]:  %44 = load i64, i64* %3, align 8
	[0x56205a87ff18]:  %63 = load i32, i32* %ECX.i9, align 4
	[0x56205a880178]:  %60 = load i32, i32* %EAX.i, align 4
	[0x56205a880c28]:  %58 = load i64, i64* %RBP.i, align 8
	[0x56205a880fb8]:  %57 = load i64, i64* %3, align 8
	[0x56205a882e18]:  %66 = load i64, i64* %6, align 8
	[0x56205a882f48]:  %65 = load i64, i64* %3, align 8
	[0x56205a8838c8]:  %96 = load i64, i64* %95, align 8
	[0x56205a883fe8]:  %93 = load i64, i64* %92, align 8
	}

[0x56205a857678]:   %64 = zext i32 %63 to i64 {
	[0x56205a7df4a8]:  %38 = zext i1 %37 to i8
	[0x56205a87a498]:  %13 = zext i1 %12 to i8
	[0x56205a881218]:  %64 = zext i32 %63 to i64
	[0x56205a881348]:  %82 = zext i1 %81 to i8
	[0x56205a882bb8]:  %69 = zext i1 %68 to i8
	[0x56205a884248]:  %89 = zext i1 %88 to i8
	[0x56205a8b1748]:  %29 = zext i1 %28 to i8
	}

[0x56205a8576d8]:   %65 = load i64, i64* %PC, align 8 {
	[0x56205a7ff3c8]:  %53 = load i64, i64* %6, align 8
	[0x56205a8350e8]:  %10 = load i64, i64* %3, align 8
	[0x56205a867bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x56205a867d98]:  %7 = load i64, i64* %6, align 8
	[0x56205a87b858]:  %41 = load i64, i64* %RDI.i16, align 8
	[0x56205a87e8c8]:  %49 = load i64, i64* %48, align 8
	[0x56205a87ed88]:  %45 = load i64, i64* %RBP.i, align 8
	[0x56205a87f468]:  %44 = load i64, i64* %3, align 8
	[0x56205a87ff18]:  %63 = load i32, i32* %ECX.i9, align 4
	[0x56205a880178]:  %60 = load i32, i32* %EAX.i, align 4
	[0x56205a880c28]:  %58 = load i64, i64* %RBP.i, align 8
	[0x56205a880fb8]:  %57 = load i64, i64* %3, align 8
	[0x56205a882e18]:  %66 = load i64, i64* %6, align 8
	[0x56205a882f48]:  %65 = load i64, i64* %3, align 8
	[0x56205a8838c8]:  %96 = load i64, i64* %95, align 8
	[0x56205a883fe8]:  %93 = load i64, i64* %92, align 8
	}

[0x56205a857750]:   store i64 %64, i64* %RAX, align 8, !tbaa !1261 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a8577b8]:   %66 = load i64, i64* %RSP, align 8 {
	[0x56205a7ff3c8]:  %53 = load i64, i64* %6, align 8
	[0x56205a8350e8]:  %10 = load i64, i64* %3, align 8
	[0x56205a867bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x56205a867d98]:  %7 = load i64, i64* %6, align 8
	[0x56205a87b858]:  %41 = load i64, i64* %RDI.i16, align 8
	[0x56205a87e8c8]:  %49 = load i64, i64* %48, align 8
	[0x56205a87ed88]:  %45 = load i64, i64* %RBP.i, align 8
	[0x56205a87f468]:  %44 = load i64, i64* %3, align 8
	[0x56205a87ff18]:  %63 = load i32, i32* %ECX.i9, align 4
	[0x56205a880178]:  %60 = load i32, i32* %EAX.i, align 4
	[0x56205a880c28]:  %58 = load i64, i64* %RBP.i, align 8
	[0x56205a880fb8]:  %57 = load i64, i64* %3, align 8
	[0x56205a882e18]:  %66 = load i64, i64* %6, align 8
	[0x56205a882f48]:  %65 = load i64, i64* %3, align 8
	[0x56205a8838c8]:  %96 = load i64, i64* %95, align 8
	[0x56205a883fe8]:  %93 = load i64, i64* %92, align 8
	}

[0x56205a857830]:   %67 = add i64 %66, 16 {
	[0x56205a80f580]:  %67 = add i64 %66, 16
	}

[0x56205a8578b0]:   store i64 %67, i64* %RSP, align 8, !tbaa !1261 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a857970]:   %68 = icmp ugt i64 %66, -17 {
	[0x56205a80b3b0]:  %88 = icmp eq i64 %87, 2
	[0x56205a80f430]:  %68 = icmp ugt i64 %66, -17
	[0x56205a8117e0]:  %81 = icmp eq i64 %67, 0
	[0x56205a877bc0]:  %12 = icmp ult i64 %8, 16
	[0x56205a87dde0]:  %28 = icmp eq i64 %11, 0
	[0x56205a87e440]:  %37 = icmp eq i64 %36, 2
	}

[0x56205a8579d8]:   %69 = zext i1 %68 to i8 {
	[0x56205a7df4a8]:  %38 = zext i1 %37 to i8
	[0x56205a87a498]:  %13 = zext i1 %12 to i8
	[0x56205a881218]:  %64 = zext i32 %63 to i64
	[0x56205a881348]:  %82 = zext i1 %81 to i8
	[0x56205a882bb8]:  %69 = zext i1 %68 to i8
	[0x56205a884248]:  %89 = zext i1 %88 to i8
	[0x56205a8b1748]:  %29 = zext i1 %28 to i8
	}

[0x56205a857a50]:   store i8 %69, i8* %14, align 1, !tbaa !1265 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a857ab8]:   %70 = trunc i64 %67 to i32 {
	[0x56205a80bce8]:  %73 = trunc i32 %72 to i8
	[0x56205a8782b8]:  %25 = trunc i64 %24 to i8
	[0x56205a8786e8]:  %18 = trunc i32 %17 to i8
	[0x56205a87a768]:  %15 = trunc i64 %11 to i32
	[0x56205a882498]:  %79 = trunc i64 %78 to i8
	[0x56205a882a88]:  %70 = trunc i64 %67 to i32
	[0x56205a883078]:  %84 = trunc i64 %83 to i8
	[0x56205a8ad738]:  %32 = trunc i64 %31 to i8
	}

[0x56205a857b30]:   %71 = and i32 %70, 255 {
	[0x56205a80f100]:  %71 = and i32 %70, 255
	[0x56205a87d9a0]:  %16 = and i32 %15, 255
	}

[0x56205a857bd0]:   %72 = tail call i32 @llvm.ctpop.i32(i32 %71) #9 {
	[0x56205a808aa0]:  %call2_4005b4 = tail call %struct.Memory.31* @sub_400440.fprintf_plt(%struct.State.0* %0, i64 %51, %struct.Memory.31* %2)
	[0x56205a84ebc0]:  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
	[0x56205a8923a0]:  %72 = tail call i32 @llvm.ctpop.i32(i32 %71)
	}

[0x56205a857c98]:   %73 = trunc i32 %72 to i8 {
	[0x56205a80bce8]:  %73 = trunc i32 %72 to i8
	[0x56205a8782b8]:  %25 = trunc i64 %24 to i8
	[0x56205a8786e8]:  %18 = trunc i32 %17 to i8
	[0x56205a87a768]:  %15 = trunc i64 %11 to i32
	[0x56205a882498]:  %79 = trunc i64 %78 to i8
	[0x56205a882a88]:  %70 = trunc i64 %67 to i32
	[0x56205a883078]:  %84 = trunc i64 %83 to i8
	[0x56205a8ad738]:  %32 = trunc i64 %31 to i8
	}

[0x56205a857d10]:   %74 = and i8 %73, 1 {
	[0x56205a80eff0]:  %74 = and i8 %73, 1
	[0x56205a813a50]:  %80 = and i8 %79, 1
	[0x56205a87c4a0]:  %26 = and i8 %25, 1
	[0x56205a87d890]:  %19 = and i8 %18, 1
	}

[0x56205a857d90]:   %75 = xor i8 %74, 1 {
	[0x56205a80ad40]:  %20 = xor i8 %19, 1
	[0x56205a80f360]:  %75 = xor i8 %74, 1
	}

[0x56205a857e10]:   store i8 %75, i8* %21, align 1, !tbaa !1279 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a857e90]:   %76 = xor i64 %66, 16 {
	[0x56205a813e70]:  %76 = xor i64 %66, 16
	[0x56205a87d560]:  %22 = xor i64 %8, 16
	}

[0x56205a857f10]:   %77 = xor i64 %76, %67 {
	[0x56205a80a690]:  %23 = xor i64 %22, %11
	[0x56205a80afc0]:  %35 = xor i64 %31, %34
	[0x56205a80b670]:  %86 = xor i64 %83, %85
	[0x56205a813d10]:  %77 = xor i64 %76, %67
	}

[0x56205a857f90]:   %78 = lshr i64 %77, 4 {
	[0x56205a813bb0]:  %78 = lshr i64 %77, 4
	[0x56205a87d450]:  %24 = lshr i64 %23, 4
	}

[0x56205a857ff8]:   %79 = trunc i64 %78 to i8 {
	[0x56205a80bce8]:  %73 = trunc i32 %72 to i8
	[0x56205a8782b8]:  %25 = trunc i64 %24 to i8
	[0x56205a8786e8]:  %18 = trunc i32 %17 to i8
	[0x56205a87a768]:  %15 = trunc i64 %11 to i32
	[0x56205a882498]:  %79 = trunc i64 %78 to i8
	[0x56205a882a88]:  %70 = trunc i64 %67 to i32
	[0x56205a883078]:  %84 = trunc i64 %83 to i8
	[0x56205a8ad738]:  %32 = trunc i64 %31 to i8
	}

[0x56205a858070]:   %80 = and i8 %79, 1 {
	[0x56205a80eff0]:  %74 = and i8 %73, 1
	[0x56205a813a50]:  %80 = and i8 %79, 1
	[0x56205a87c4a0]:  %26 = and i8 %25, 1
	[0x56205a87d890]:  %19 = and i8 %18, 1
	}

[0x56205a8580f0]:   store i8 %80, i8* %27, align 1, !tbaa !1280 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a858170]:   %81 = icmp eq i64 %67, 0 {
	[0x56205a80b3b0]:  %88 = icmp eq i64 %87, 2
	[0x56205a80f430]:  %68 = icmp ugt i64 %66, -17
	[0x56205a8117e0]:  %81 = icmp eq i64 %67, 0
	[0x56205a877bc0]:  %12 = icmp ult i64 %8, 16
	[0x56205a87dde0]:  %28 = icmp eq i64 %11, 0
	[0x56205a87e440]:  %37 = icmp eq i64 %36, 2
	}

[0x56205a8581d8]:   %82 = zext i1 %81 to i8 {
	[0x56205a7df4a8]:  %38 = zext i1 %37 to i8
	[0x56205a87a498]:  %13 = zext i1 %12 to i8
	[0x56205a881218]:  %64 = zext i32 %63 to i64
	[0x56205a881348]:  %82 = zext i1 %81 to i8
	[0x56205a882bb8]:  %69 = zext i1 %68 to i8
	[0x56205a884248]:  %89 = zext i1 %88 to i8
	[0x56205a8b1748]:  %29 = zext i1 %28 to i8
	}

[0x56205a858250]:   store i8 %82, i8* %30, align 1, !tbaa !1281 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a8582d0]:   %83 = lshr i64 %67, 63 {
	[0x56205a80b7c0]:  %85 = lshr i64 %66, 63
	[0x56205a80ba40]:  %83 = lshr i64 %67, 63
	[0x56205a87c6a0]:  %34 = lshr i64 %8, 63
	[0x56205a87c7f0]:  %31 = lshr i64 %11, 63
	}

[0x56205a858338]:   %84 = trunc i64 %83 to i8 {
	[0x56205a80bce8]:  %73 = trunc i32 %72 to i8
	[0x56205a8782b8]:  %25 = trunc i64 %24 to i8
	[0x56205a8786e8]:  %18 = trunc i32 %17 to i8
	[0x56205a87a768]:  %15 = trunc i64 %11 to i32
	[0x56205a882498]:  %79 = trunc i64 %78 to i8
	[0x56205a882a88]:  %70 = trunc i64 %67 to i32
	[0x56205a883078]:  %84 = trunc i64 %83 to i8
	[0x56205a8ad738]:  %32 = trunc i64 %31 to i8
	}

[0x56205a8583b0]:   store i8 %84, i8* %33, align 1, !tbaa !1282 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a858430]:   %85 = lshr i64 %66, 63 {
	[0x56205a80b7c0]:  %85 = lshr i64 %66, 63
	[0x56205a80ba40]:  %83 = lshr i64 %67, 63
	[0x56205a87c6a0]:  %34 = lshr i64 %8, 63
	[0x56205a87c7f0]:  %31 = lshr i64 %11, 63
	}

[0x56205a8584b0]:   %86 = xor i64 %83, %85 {
	[0x56205a80a690]:  %23 = xor i64 %22, %11
	[0x56205a80afc0]:  %35 = xor i64 %31, %34
	[0x56205a80b670]:  %86 = xor i64 %83, %85
	[0x56205a813d10]:  %77 = xor i64 %76, %67
	}

[0x56205a858530]:   %87 = add nuw nsw i64 %86, %83 {
	[0x56205a80b490]:  %87 = add nuw nsw i64 %86, %83
	[0x56205a80c1c0]:  %36 = add nuw nsw i64 %35, %34
	}

[0x56205a8585b0]:   %88 = icmp eq i64 %87, 2 {
	[0x56205a80b3b0]:  %88 = icmp eq i64 %87, 2
	[0x56205a80f430]:  %68 = icmp ugt i64 %66, -17
	[0x56205a8117e0]:  %81 = icmp eq i64 %67, 0
	[0x56205a877bc0]:  %12 = icmp ult i64 %8, 16
	[0x56205a87dde0]:  %28 = icmp eq i64 %11, 0
	[0x56205a87e440]:  %37 = icmp eq i64 %36, 2
	}

[0x56205a858618]:   %89 = zext i1 %88 to i8 {
	[0x56205a7df4a8]:  %38 = zext i1 %37 to i8
	[0x56205a87a498]:  %13 = zext i1 %12 to i8
	[0x56205a881218]:  %64 = zext i32 %63 to i64
	[0x56205a881348]:  %82 = zext i1 %81 to i8
	[0x56205a882bb8]:  %69 = zext i1 %68 to i8
	[0x56205a884248]:  %89 = zext i1 %88 to i8
	[0x56205a8b1748]:  %29 = zext i1 %28 to i8
	}

[0x56205a858690]:   store i8 %89, i8* %39, align 1, !tbaa !1283 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a858710]:   %90 = add i64 %65, 7 {
	[0x56205a80bba0]:  %90 = add i64 %65, 7
	}

[0x56205a858790]:   store i64 %90, i64* %PC, align 8 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a858810]:   %91 = add i64 %66, 24 {
	[0x56205a816f50]:  %91 = add i64 %66, 24
	}

[0x56205a858878]:   %92 = inttoptr i64 %67 to i64* {
	[0x56205a867f28]:  %9 = inttoptr i64 %8 to i64*
	[0x56205a87e9f8]:  %48 = inttoptr i64 %46 to i64*
	[0x56205a87f6c8]:  %43 = inttoptr i64 %40 to i64*
	[0x56205a87fa58]:  %55 = inttoptr i64 %54 to i64*
	[0x56205a880048]:  %62 = inttoptr i64 %59 to i32*
	[0x56205a883eb8]:  %95 = inttoptr i64 %91 to i64*
	[0x56205a884118]:  %92 = inttoptr i64 %67 to i64*
	}

[0x56205a8588d8]:   %93 = load i64, i64* %92, align 8 {
	[0x56205a7ff3c8]:  %53 = load i64, i64* %6, align 8
	[0x56205a8350e8]:  %10 = load i64, i64* %3, align 8
	[0x56205a867bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x56205a867d98]:  %7 = load i64, i64* %6, align 8
	[0x56205a87b858]:  %41 = load i64, i64* %RDI.i16, align 8
	[0x56205a87e8c8]:  %49 = load i64, i64* %48, align 8
	[0x56205a87ed88]:  %45 = load i64, i64* %RBP.i, align 8
	[0x56205a87f468]:  %44 = load i64, i64* %3, align 8
	[0x56205a87ff18]:  %63 = load i32, i32* %ECX.i9, align 4
	[0x56205a880178]:  %60 = load i32, i32* %EAX.i, align 4
	[0x56205a880c28]:  %58 = load i64, i64* %RBP.i, align 8
	[0x56205a880fb8]:  %57 = load i64, i64* %3, align 8
	[0x56205a882e18]:  %66 = load i64, i64* %6, align 8
	[0x56205a882f48]:  %65 = load i64, i64* %3, align 8
	[0x56205a8838c8]:  %96 = load i64, i64* %95, align 8
	[0x56205a883fe8]:  %93 = load i64, i64* %92, align 8
	}

[0x56205a858950]:   store i64 %93, i64* %RBP, align 8, !tbaa !1261 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a8589d0]:   store i64 %91, i64* %RSP, align 8, !tbaa !1261 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a858a50]:   %94 = add i64 %65, 8 {
	[0x56205a816ab0]:  %94 = add i64 %65, 8
	}

[0x56205a858ad0]:   store i64 %94, i64* %PC, align 8 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a858b38]:   %95 = inttoptr i64 %91 to i64* {
	[0x56205a867f28]:  %9 = inttoptr i64 %8 to i64*
	[0x56205a87e9f8]:  %48 = inttoptr i64 %46 to i64*
	[0x56205a87f6c8]:  %43 = inttoptr i64 %40 to i64*
	[0x56205a87fa58]:  %55 = inttoptr i64 %54 to i64*
	[0x56205a880048]:  %62 = inttoptr i64 %59 to i32*
	[0x56205a883eb8]:  %95 = inttoptr i64 %91 to i64*
	[0x56205a884118]:  %92 = inttoptr i64 %67 to i64*
	}

[0x56205a858b98]:   %96 = load i64, i64* %95, align 8 {
	[0x56205a7ff3c8]:  %53 = load i64, i64* %6, align 8
	[0x56205a8350e8]:  %10 = load i64, i64* %3, align 8
	[0x56205a867bc8]:  %4 = load i64, i64* %RBP.i, align 8
	[0x56205a867d98]:  %7 = load i64, i64* %6, align 8
	[0x56205a87b858]:  %41 = load i64, i64* %RDI.i16, align 8
	[0x56205a87e8c8]:  %49 = load i64, i64* %48, align 8
	[0x56205a87ed88]:  %45 = load i64, i64* %RBP.i, align 8
	[0x56205a87f468]:  %44 = load i64, i64* %3, align 8
	[0x56205a87ff18]:  %63 = load i32, i32* %ECX.i9, align 4
	[0x56205a880178]:  %60 = load i32, i32* %EAX.i, align 4
	[0x56205a880c28]:  %58 = load i64, i64* %RBP.i, align 8
	[0x56205a880fb8]:  %57 = load i64, i64* %3, align 8
	[0x56205a882e18]:  %66 = load i64, i64* %6, align 8
	[0x56205a882f48]:  %65 = load i64, i64* %3, align 8
	[0x56205a8838c8]:  %96 = load i64, i64* %95, align 8
	[0x56205a883fe8]:  %93 = load i64, i64* %92, align 8
	}

[0x56205a858c10]:   store i64 %96, i64* %PC, align 8, !tbaa !1261 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a858c90]:   %97 = add i64 %66, 32 {
	[0x56205a817190]:  %97 = add i64 %66, 32
	}

[0x56205a858d10]:   store i64 %97, i64* %RSP, align 8, !tbaa !1261 {
	[0x56205a8087c0]:  store i64 %8, i64* %RBP.i, align 8
	[0x56205a808ce0]:  store i64 %4, i64* %9, align 8
	[0x56205a809070]:  store i64 %5, i64* %3, align 8
	[0x56205a80a540]:  store i8 %13, i8* %14, align 1
	[0x56205a80abe0]:  store i8 %20, i8* %21, align 1
	[0x56205a80b8e0]:  store i8 %84, i8* %33, align 1
	[0x56205a80bf70]:  store i8 %29, i8* %30, align 1
	[0x56205a80c060]:  store i8 %26, i8* %27, align 1
	[0x56205a80c6f0]:  store i64 %42, i64* %3, align 8
	[0x56205a80c9b0]:  store i8 %38, i8* %39, align 1
	[0x56205a80cb00]:  store i64 0, i64* %RDI.i16, align 8
	[0x56205a80cdb0]:  store i8 0, i8* %AL.i, align 1
	[0x56205a80d070]:  store i64 %49, i64* %RDX.i, align 8
	[0x56205a80d1d0]:  store i64 %47, i64* %3, align 8
	[0x56205a80de20]:  store i64 %61, i64* %3, align 8
	[0x56205a80e230]:  store i64 0, i64* %RCX.i, align 8
	[0x56205a80e460]:  store i64 %51, i64* %3, align 8
	[0x56205a80e660]:  store i64 %54, i64* %6, align 8
	[0x56205a80eee0]:  store i32 %60, i32* %62, align 4
	[0x56205a80f950]:  store i64 %52, i64* %55, align 8
	[0x56205a810a50]:  store i8 %69, i8* %14, align 1
	[0x56205a810ca0]:  store i64 %67, i64* %6, align 8
	[0x56205a811020]:  store i64 %64, i64* %RAX.i, align 8
	[0x56205a811fa0]:  store i8 %80, i8* %27, align 1
	[0x56205a814050]:  store i8 %75, i8* %21, align 1
	[0x56205a8141a0]:  store i8 %82, i8* %30, align 1
	[0x56205a814870]:  store i8 %89, i8* %39, align 1
	[0x56205a8167b0]:  store i64 %96, i64* %3, align 8
	[0x56205a816910]:  store i64 %94, i64* %3, align 8
	[0x56205a816c10]:  store i64 %91, i64* %6, align 8
	[0x56205a816d70]:  store i64 %93, i64* %RBP.i, align 8
	[0x56205a8170b0]:  store i64 %90, i64* %3, align 8
	[0x56205a819ab0]:  store i64 %97, i64* %6, align 8
	[0x56205a87a860]:  store i64 %11, i64* %6, align 8
	[0x56205a87dbc0]:  store i8 %32, i8* %33, align 1
	[0x56205a87e000]:  store i64 %41, i64* %43, align 8
	[0x56205a87e330]:  store i64 4195949, i64* %RSI.i, align 8
	}

[0x56205a858d78]:   ret %struct.Memory* %56 {
	[0x56205a883798]:  ret %struct.Memory.31* %call2_4005b4
	}

[0x56205a8bd578]:   %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0 {
	[0x56205a8918d8]:  %50 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 1, i32 0
	}

[0x56205a8bed58]:   %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0 {
	[0x56205a943f68]:  %56 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 5, i32 0
	}


[Info]: Phase I: Dual Simulation: Round: 0
Round: 0

Removing: [0x56205a880e88]:   %EAX.i = bitcast %union.anon.4* %50 to i32*
From the pot matches of: [0x56205a854128]:   %AL = bitcast %union.anon* %3 to i8*


Uprime : [0x56205a856ad0]:   store i8 0, i8* %AL, align 1, !tbaa !1284


Uprime Matches: [0x56205a8087c0]:   store i64 %8, i64* %RBP.i, align 8
[0x56205a808ce0]:   store i64 %4, i64* %9, align 8
[0x56205a809070]:   store i64 %5, i64* %3, align 8
[0x56205a80a540]:   store i8 %13, i8* %14, align 1
[0x56205a80abe0]:   store i8 %20, i8* %21, align 1
[0x56205a80b8e0]:   store i8 %84, i8* %33, align 1
[0x56205a80bf70]:   store i8 %29, i8* %30, align 1
[0x56205a80c060]:   store i8 %26, i8* %27, align 1
[0x56205a80c6f0]:   store i64 %42, i64* %3, align 8
[0x56205a80c9b0]:   store i8 %38, i8* %39, align 1
[0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8
[0x56205a80cdb0]:   store i8 0, i8* %AL.i, align 1
[0x56205a80d070]:   store i64 %49, i64* %RDX.i, align 8
[0x56205a80d1d0]:   store i64 %47, i64* %3, align 8
[0x56205a80de20]:   store i64 %61, i64* %3, align 8
[0x56205a80e230]:   store i64 0, i64* %RCX.i, align 8
[0x56205a80e460]:   store i64 %51, i64* %3, align 8
[0x56205a80e660]:   store i64 %54, i64* %6, align 8
[0x56205a80eee0]:   store i32 %60, i32* %62, align 4
[0x56205a80f950]:   store i64 %52, i64* %55, align 8
[0x56205a810a50]:   store i8 %69, i8* %14, align 1
[0x56205a810ca0]:   store i64 %67, i64* %6, align 8
[0x56205a811020]:   store i64 %64, i64* %RAX.i, align 8
[0x56205a811fa0]:   store i8 %80, i8* %27, align 1
[0x56205a814050]:   store i8 %75, i8* %21, align 1
[0x56205a8141a0]:   store i8 %82, i8* %30, align 1
[0x56205a814870]:   store i8 %89, i8* %39, align 1
[0x56205a8167b0]:   store i64 %96, i64* %3, align 8
[0x56205a816910]:   store i64 %94, i64* %3, align 8
[0x56205a816c10]:   store i64 %91, i64* %6, align 8
[0x56205a816d70]:   store i64 %93, i64* %RBP.i, align 8
[0x56205a8170b0]:   store i64 %90, i64* %3, align 8
[0x56205a819ab0]:   store i64 %97, i64* %6, align 8
[0x56205a87a860]:   store i64 %11, i64* %6, align 8
[0x56205a87dbc0]:   store i8 %32, i8* %33, align 1
[0x56205a87e000]:   store i64 %41, i64* %43, align 8
[0x56205a87e330]:   store i64 4195949, i64* %RSI.i, align 8


Adj: [0x56205a880178]:   %60 = load i32, i32* %EAX.i, align 4


Removing: [0x56205a80ae48]:   %AL.i = bitcast %union.anon.4* %50 to i8*
From the pot matches of: [0x56205a854278]:   %EAX = bitcast %union.anon* %3 to i32*


Uprime : [0x56205a8573d8]:   %60 = load i32, i32* %EAX, align 4


Uprime Matches: [0x56205a7ff3c8]:   %53 = load i64, i64* %6, align 8
[0x56205a8350e8]:   %10 = load i64, i64* %3, align 8
[0x56205a867bc8]:   %4 = load i64, i64* %RBP.i, align 8
[0x56205a867d98]:   %7 = load i64, i64* %6, align 8
[0x56205a87b858]:   %41 = load i64, i64* %RDI.i16, align 8
[0x56205a87e8c8]:   %49 = load i64, i64* %48, align 8
[0x56205a87ed88]:   %45 = load i64, i64* %RBP.i, align 8
[0x56205a87f468]:   %44 = load i64, i64* %3, align 8
[0x56205a87ff18]:   %63 = load i32, i32* %ECX.i9, align 4
[0x56205a880178]:   %60 = load i32, i32* %EAX.i, align 4
[0x56205a880c28]:   %58 = load i64, i64* %RBP.i, align 8
[0x56205a880fb8]:   %57 = load i64, i64* %3, align 8
[0x56205a882e18]:   %66 = load i64, i64* %6, align 8
[0x56205a882f48]:   %65 = load i64, i64* %3, align 8
[0x56205a8838c8]:   %96 = load i64, i64* %95, align 8
[0x56205a883fe8]:   %93 = load i64, i64* %92, align 8


Adj: [0x56205a80cdb0]:   store i8 0, i8* %AL.i, align 1


Removing: [0x56205a87ed88]:   %45 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x56205a854a98]:   %5 = load i64, i64* %RBP, align 8


Uprime : [0x56205a854de0]:   store i64 %5, i64* %9, align 8


Uprime Matches: [0x56205a8087c0]:   store i64 %8, i64* %RBP.i, align 8
[0x56205a808ce0]:   store i64 %4, i64* %9, align 8
[0x56205a809070]:   store i64 %5, i64* %3, align 8
[0x56205a80a540]:   store i8 %13, i8* %14, align 1
[0x56205a80abe0]:   store i8 %20, i8* %21, align 1
[0x56205a80b8e0]:   store i8 %84, i8* %33, align 1
[0x56205a80bf70]:   store i8 %29, i8* %30, align 1
[0x56205a80c060]:   store i8 %26, i8* %27, align 1
[0x56205a80c6f0]:   store i64 %42, i64* %3, align 8
[0x56205a80c9b0]:   store i8 %38, i8* %39, align 1
[0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8
[0x56205a80cdb0]:   store i8 0, i8* %AL.i, align 1
[0x56205a80d070]:   store i64 %49, i64* %RDX.i, align 8
[0x56205a80d1d0]:   store i64 %47, i64* %3, align 8
[0x56205a80de20]:   store i64 %61, i64* %3, align 8
[0x56205a80e230]:   store i64 0, i64* %RCX.i, align 8
[0x56205a80e460]:   store i64 %51, i64* %3, align 8
[0x56205a80e660]:   store i64 %54, i64* %6, align 8
[0x56205a80eee0]:   store i32 %60, i32* %62, align 4
[0x56205a80f950]:   store i64 %52, i64* %55, align 8
[0x56205a810a50]:   store i8 %69, i8* %14, align 1
[0x56205a810ca0]:   store i64 %67, i64* %6, align 8
[0x56205a811020]:   store i64 %64, i64* %RAX.i, align 8
[0x56205a811fa0]:   store i8 %80, i8* %27, align 1
[0x56205a814050]:   store i8 %75, i8* %21, align 1
[0x56205a8141a0]:   store i8 %82, i8* %30, align 1
[0x56205a814870]:   store i8 %89, i8* %39, align 1
[0x56205a8167b0]:   store i64 %96, i64* %3, align 8
[0x56205a816910]:   store i64 %94, i64* %3, align 8
[0x56205a816c10]:   store i64 %91, i64* %6, align 8
[0x56205a816d70]:   store i64 %93, i64* %RBP.i, align 8
[0x56205a8170b0]:   store i64 %90, i64* %3, align 8
[0x56205a819ab0]:   store i64 %97, i64* %6, align 8
[0x56205a87a860]:   store i64 %11, i64* %6, align 8
[0x56205a87dbc0]:   store i8 %32, i8* %33, align 1
[0x56205a87e000]:   store i64 %41, i64* %43, align 8
[0x56205a87e330]:   store i64 4195949, i64* %RSI.i, align 8


Adj: [0x56205a87e590]:   %46 = add i64 %45, -8


Removing: [0x56205a880c28]:   %58 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x56205a854a98]:   %5 = load i64, i64* %RBP, align 8


Uprime : [0x56205a854de0]:   store i64 %5, i64* %9, align 8


Uprime Matches: [0x56205a8087c0]:   store i64 %8, i64* %RBP.i, align 8
[0x56205a808ce0]:   store i64 %4, i64* %9, align 8
[0x56205a809070]:   store i64 %5, i64* %3, align 8
[0x56205a80a540]:   store i8 %13, i8* %14, align 1
[0x56205a80abe0]:   store i8 %20, i8* %21, align 1
[0x56205a80b8e0]:   store i8 %84, i8* %33, align 1
[0x56205a80bf70]:   store i8 %29, i8* %30, align 1
[0x56205a80c060]:   store i8 %26, i8* %27, align 1
[0x56205a80c6f0]:   store i64 %42, i64* %3, align 8
[0x56205a80c9b0]:   store i8 %38, i8* %39, align 1
[0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8
[0x56205a80cdb0]:   store i8 0, i8* %AL.i, align 1
[0x56205a80d070]:   store i64 %49, i64* %RDX.i, align 8
[0x56205a80d1d0]:   store i64 %47, i64* %3, align 8
[0x56205a80de20]:   store i64 %61, i64* %3, align 8
[0x56205a80e230]:   store i64 0, i64* %RCX.i, align 8
[0x56205a80e460]:   store i64 %51, i64* %3, align 8
[0x56205a80e660]:   store i64 %54, i64* %6, align 8
[0x56205a80eee0]:   store i32 %60, i32* %62, align 4
[0x56205a80f950]:   store i64 %52, i64* %55, align 8
[0x56205a810a50]:   store i8 %69, i8* %14, align 1
[0x56205a810ca0]:   store i64 %67, i64* %6, align 8
[0x56205a811020]:   store i64 %64, i64* %RAX.i, align 8
[0x56205a811fa0]:   store i8 %80, i8* %27, align 1
[0x56205a814050]:   store i8 %75, i8* %21, align 1
[0x56205a8141a0]:   store i8 %82, i8* %30, align 1
[0x56205a814870]:   store i8 %89, i8* %39, align 1
[0x56205a8167b0]:   store i64 %96, i64* %3, align 8
[0x56205a816910]:   store i64 %94, i64* %3, align 8
[0x56205a816c10]:   store i64 %91, i64* %6, align 8
[0x56205a816d70]:   store i64 %93, i64* %RBP.i, align 8
[0x56205a8170b0]:   store i64 %90, i64* %3, align 8
[0x56205a819ab0]:   store i64 %97, i64* %6, align 8
[0x56205a87a860]:   store i64 %11, i64* %6, align 8
[0x56205a87dbc0]:   store i8 %32, i8* %33, align 1
[0x56205a87e000]:   store i64 %41, i64* %43, align 8
[0x56205a87e330]:   store i64 4195949, i64* %RSI.i, align 8


Adj: [0x56205a80e0d0]:   %59 = add i64 %58, -12


Removing: [0x56205a7ff3c8]:   %53 = load i64, i64* %6, align 8
From the pot matches of: [0x56205a854bf8]:   %7 = load i64, i64* %RSP, align 8, !tbaa !1261


Uprime : [0x56205a856370]:   %40 = add i64 %7, -16


Uprime Matches: [0x56205a87e220]:   %40 = add i64 %7, -16


Adj: [0x56205a80dcd0]:   %54 = add i64 %53, -8


Removing: [0x56205a882e18]:   %66 = load i64, i64* %6, align 8
From the pot matches of: [0x56205a854bf8]:   %7 = load i64, i64* %RSP, align 8, !tbaa !1261


Uprime : [0x56205a856370]:   %40 = add i64 %7, -16


Uprime Matches: [0x56205a87e220]:   %40 = add i64 %7, -16


Adj: [0x56205a80b7c0]:   %85 = lshr i64 %66, 63
[0x56205a80f430]:   %68 = icmp ugt i64 %66, -17
[0x56205a80f580]:   %67 = add i64 %66, 16
[0x56205a813e70]:   %76 = xor i64 %66, 16
[0x56205a816f50]:   %91 = add i64 %66, 24
[0x56205a817190]:   %97 = add i64 %66, 32


Removing: [0x56205a87f468]:   %44 = load i64, i64* %3, align 8
From the pot matches of: [0x56205a854e48]:   %10 = load i64, i64* %PC, align 8


Uprime : [0x56205a856490]:   %42 = add i64 %10, 21


Uprime Matches: [0x56205a80c850]:   %42 = add i64 %10, 21


Adj: [0x56205a80cc60]:   %52 = add i64 %44, 19
[0x56205a80d370]:   %47 = add i64 %44, 12
[0x56205a87e660]:   %51 = add i64 %44, -358


Removing: [0x56205a880fb8]:   %57 = load i64, i64* %3, align 8
From the pot matches of: [0x56205a854e48]:   %10 = load i64, i64* %PC, align 8


Uprime : [0x56205a856490]:   %42 = add i64 %10, 21


Uprime Matches: [0x56205a80c850]:   %42 = add i64 %10, 21


Adj: [0x56205a80df80]:   %61 = add i64 %57, 5


Removing: [0x56205a882f48]:   %65 = load i64, i64* %3, align 8
From the pot matches of: [0x56205a854e48]:   %10 = load i64, i64* %PC, align 8


Uprime : [0x56205a856490]:   %42 = add i64 %10, 21


Uprime Matches: [0x56205a80c850]:   %42 = add i64 %10, 21


Adj: [0x56205a80bba0]:   %90 = add i64 %65, 7
[0x56205a816ab0]:   %94 = add i64 %65, 8


Removing: [0x56205a87a768]:   %15 = trunc i64 %11 to i32
From the pot matches of: [0x56205a7f2628]:   %18 = trunc i32 %17 to i8


Uprime : [0x56205a7f26a0]:   %19 = and i8 %18, 1


Uprime Matches: [0x56205a80eff0]:   %74 = and i8 %73, 1
[0x56205a813a50]:   %80 = and i8 %79, 1
[0x56205a87c4a0]:   %26 = and i8 %25, 1
[0x56205a87d890]:   %19 = and i8 %18, 1


Adj: [0x56205a87d9a0]:   %16 = and i32 %15, 255


Removing: [0x56205a882a88]:   %70 = trunc i64 %67 to i32
From the pot matches of: [0x56205a7f2628]:   %18 = trunc i32 %17 to i8


Uprime : [0x56205a7f26a0]:   %19 = and i8 %18, 1


Uprime Matches: [0x56205a80eff0]:   %74 = and i8 %73, 1
[0x56205a813a50]:   %80 = and i8 %79, 1
[0x56205a87c4a0]:   %26 = and i8 %25, 1
[0x56205a87d890]:   %19 = and i8 %18, 1


Adj: [0x56205a80f100]:   %71 = and i32 %70, 255


Removing: [0x56205a883078]:   %84 = trunc i64 %83 to i8
From the pot matches of: [0x56205a7f2628]:   %18 = trunc i32 %17 to i8


Uprime : [0x56205a7f26a0]:   %19 = and i8 %18, 1


Uprime Matches: [0x56205a80eff0]:   %74 = and i8 %73, 1
[0x56205a813a50]:   %80 = and i8 %79, 1
[0x56205a87c4a0]:   %26 = and i8 %25, 1
[0x56205a87d890]:   %19 = and i8 %18, 1


Adj: [0x56205a80b8e0]:   store i8 %84, i8* %33, align 1


Removing: [0x56205a8ad738]:   %32 = trunc i64 %31 to i8
From the pot matches of: [0x56205a7f2628]:   %18 = trunc i32 %17 to i8


Uprime : [0x56205a7f26a0]:   %19 = and i8 %18, 1


Uprime Matches: [0x56205a80eff0]:   %74 = and i8 %73, 1
[0x56205a813a50]:   %80 = and i8 %79, 1
[0x56205a87c4a0]:   %26 = and i8 %25, 1
[0x56205a87d890]:   %19 = and i8 %18, 1


Adj: [0x56205a87dbc0]:   store i8 %32, i8* %33, align 1


Removing: [0x56205a813a50]:   %80 = and i8 %79, 1
From the pot matches of: [0x56205a7f26a0]:   %19 = and i8 %18, 1


Uprime : [0x56205a7f2720]:   %20 = xor i8 %19, 1


Uprime Matches: [0x56205a80ad40]:   %20 = xor i8 %19, 1
[0x56205a80f360]:   %75 = xor i8 %74, 1


Adj: [0x56205a811fa0]:   store i8 %80, i8* %27, align 1


Removing: [0x56205a87c4a0]:   %26 = and i8 %25, 1
From the pot matches of: [0x56205a7f26a0]:   %19 = and i8 %18, 1


Uprime : [0x56205a7f2720]:   %20 = xor i8 %19, 1


Uprime Matches: [0x56205a80ad40]:   %20 = xor i8 %19, 1
[0x56205a80f360]:   %75 = xor i8 %74, 1


Adj: [0x56205a80c060]:   store i8 %26, i8* %27, align 1


Removing: [0x56205a8350e8]:   %10 = load i64, i64* %3, align 8
From the pot matches of: [0x56205a856658]:   %44 = load i64, i64* %PC, align 8


Uprime : [0x56205a856c50]:   %52 = add i64 %44, 19


Uprime Matches: [0x56205a80cc60]:   %52 = add i64 %44, 19


Adj: [0x56205a80c850]:   %42 = add i64 %10, 21


Removing: [0x56205a880fb8]:   %57 = load i64, i64* %3, align 8
From the pot matches of: [0x56205a856658]:   %44 = load i64, i64* %PC, align 8


Uprime : [0x56205a856c50]:   %52 = add i64 %44, 19


Uprime Matches: [0x56205a80cc60]:   %52 = add i64 %44, 19


Adj: [0x56205a80df80]:   %61 = add i64 %57, 5


Removing: [0x56205a882f48]:   %65 = load i64, i64* %3, align 8
From the pot matches of: [0x56205a856658]:   %44 = load i64, i64* %PC, align 8


Uprime : [0x56205a856c50]:   %52 = add i64 %44, 19


Uprime Matches: [0x56205a80cc60]:   %52 = add i64 %44, 19


Adj: [0x56205a80bba0]:   %90 = add i64 %65, 7
[0x56205a816ab0]:   %94 = add i64 %65, 8


Removing: [0x56205a7ff3c8]:   %53 = load i64, i64* %6, align 8
From the pot matches of: [0x56205a8566b8]:   %45 = load i64, i64* @stderr, align 64


Uprime : [0x56205a856730]:   store i64 %45, i64* %RDI, align 8, !tbaa !1261


Uprime Matches: [0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8


Adj: [0x56205a80dcd0]:   %54 = add i64 %53, -8


Removing: [0x56205a8350e8]:   %10 = load i64, i64* %3, align 8
From the pot matches of: [0x56205a8566b8]:   %45 = load i64, i64* @stderr, align 64


Uprime : [0x56205a856730]:   store i64 %45, i64* %RDI, align 8, !tbaa !1261


Uprime Matches: [0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8


Adj: [0x56205a80c850]:   %42 = add i64 %10, 21


Removing: [0x56205a867bc8]:   %4 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x56205a8566b8]:   %45 = load i64, i64* @stderr, align 64


Uprime : [0x56205a856730]:   store i64 %45, i64* %RDI, align 8, !tbaa !1261


Uprime Matches: [0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8


Adj: [0x56205a808ce0]:   store i64 %4, i64* %9, align 8


Removing: [0x56205a867d98]:   %7 = load i64, i64* %6, align 8
From the pot matches of: [0x56205a8566b8]:   %45 = load i64, i64* @stderr, align 64


Uprime : [0x56205a856730]:   store i64 %45, i64* %RDI, align 8, !tbaa !1261


Uprime Matches: [0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8


Adj: [0x56205a808e30]:   %8 = add i64 %7, -8
[0x56205a87c2a0]:   %11 = add i64 %7, -24
[0x56205a87e220]:   %40 = add i64 %7, -16


Removing: [0x56205a87b858]:   %41 = load i64, i64* %RDI.i16, align 8
From the pot matches of: [0x56205a8566b8]:   %45 = load i64, i64* @stderr, align 64


Uprime : [0x56205a856730]:   store i64 %45, i64* %RDI, align 8, !tbaa !1261


Uprime Matches: [0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8


Adj: [0x56205a87e000]:   store i64 %41, i64* %43, align 8


Removing: [0x56205a87e8c8]:   %49 = load i64, i64* %48, align 8
From the pot matches of: [0x56205a8566b8]:   %45 = load i64, i64* @stderr, align 64


Uprime : [0x56205a856730]:   store i64 %45, i64* %RDI, align 8, !tbaa !1261


Uprime Matches: [0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8


Adj: [0x56205a80d070]:   store i64 %49, i64* %RDX.i, align 8


Removing: [0x56205a87ed88]:   %45 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x56205a8566b8]:   %45 = load i64, i64* @stderr, align 64


Uprime : [0x56205a856730]:   store i64 %45, i64* %RDI, align 8, !tbaa !1261


Uprime Matches: [0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8


Adj: [0x56205a87e590]:   %46 = add i64 %45, -8


Removing: [0x56205a87f468]:   %44 = load i64, i64* %3, align 8
From the pot matches of: [0x56205a8566b8]:   %45 = load i64, i64* @stderr, align 64


Uprime : [0x56205a856730]:   store i64 %45, i64* %RDI, align 8, !tbaa !1261


Uprime Matches: [0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8


Adj: [0x56205a80cc60]:   %52 = add i64 %44, 19
[0x56205a80d370]:   %47 = add i64 %44, 12
[0x56205a87e660]:   %51 = add i64 %44, -358


Removing: [0x56205a87ff18]:   %63 = load i32, i32* %ECX.i9, align 4
From the pot matches of: [0x56205a8566b8]:   %45 = load i64, i64* @stderr, align 64


Uprime : [0x56205a856730]:   store i64 %45, i64* %RDI, align 8, !tbaa !1261


Uprime Matches: [0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8


Adj: [0x56205a881218]:   %64 = zext i32 %63 to i64


Removing: [0x56205a880178]:   %60 = load i32, i32* %EAX.i, align 4
From the pot matches of: [0x56205a8566b8]:   %45 = load i64, i64* @stderr, align 64


Uprime : [0x56205a856730]:   store i64 %45, i64* %RDI, align 8, !tbaa !1261


Uprime Matches: [0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8


Adj: [0x56205a80eee0]:   store i32 %60, i32* %62, align 4


Removing: [0x56205a880c28]:   %58 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x56205a8566b8]:   %45 = load i64, i64* @stderr, align 64


Uprime : [0x56205a856730]:   store i64 %45, i64* %RDI, align 8, !tbaa !1261


Uprime Matches: [0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8


Adj: [0x56205a80e0d0]:   %59 = add i64 %58, -12


Removing: [0x56205a880fb8]:   %57 = load i64, i64* %3, align 8
From the pot matches of: [0x56205a8566b8]:   %45 = load i64, i64* @stderr, align 64


Uprime : [0x56205a856730]:   store i64 %45, i64* %RDI, align 8, !tbaa !1261


Uprime Matches: [0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8


Adj: [0x56205a80df80]:   %61 = add i64 %57, 5


Removing: [0x56205a882e18]:   %66 = load i64, i64* %6, align 8
From the pot matches of: [0x56205a8566b8]:   %45 = load i64, i64* @stderr, align 64


Uprime : [0x56205a856730]:   store i64 %45, i64* %RDI, align 8, !tbaa !1261


Uprime Matches: [0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8


Adj: [0x56205a80b7c0]:   %85 = lshr i64 %66, 63
[0x56205a80f430]:   %68 = icmp ugt i64 %66, -17
[0x56205a80f580]:   %67 = add i64 %66, 16
[0x56205a813e70]:   %76 = xor i64 %66, 16
[0x56205a816f50]:   %91 = add i64 %66, 24
[0x56205a817190]:   %97 = add i64 %66, 32


Removing: [0x56205a882f48]:   %65 = load i64, i64* %3, align 8
From the pot matches of: [0x56205a8566b8]:   %45 = load i64, i64* @stderr, align 64


Uprime : [0x56205a856730]:   store i64 %45, i64* %RDI, align 8, !tbaa !1261


Uprime Matches: [0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8


Adj: [0x56205a80bba0]:   %90 = add i64 %65, 7
[0x56205a816ab0]:   %94 = add i64 %65, 8


Removing: [0x56205a8838c8]:   %96 = load i64, i64* %95, align 8
From the pot matches of: [0x56205a8566b8]:   %45 = load i64, i64* @stderr, align 64


Uprime : [0x56205a856730]:   store i64 %45, i64* %RDI, align 8, !tbaa !1261


Uprime Matches: [0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8


Adj: [0x56205a8167b0]:   store i64 %96, i64* %3, align 8


Removing: [0x56205a883fe8]:   %93 = load i64, i64* %92, align 8
From the pot matches of: [0x56205a8566b8]:   %45 = load i64, i64* @stderr, align 64


Uprime : [0x56205a856730]:   store i64 %45, i64* %RDI, align 8, !tbaa !1261


Uprime Matches: [0x56205a80cb00]:   store i64 0, i64* %RDI.i16, align 8


Adj: [0x56205a816d70]:   store i64 %93, i64* %RBP.i, align 8



No potential match for: [0x56205a8566b8]:   %45 = load i64, i64* @stderr, align 64
matcher: /home/ubuntu/Github/validating-binary-decompilation/source/libs/llvm-graph-matching/llvm-graph-matching.cpp:363: bool llvm::Matcher::dualSimulation(llvm::Function*, llvm::Function*): Assertion `0 && "Zero Match found: I"' failed.
Aborted (core dumped)
