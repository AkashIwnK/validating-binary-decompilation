Writing '/tmp/tmpycv2f3t4.dot'...
Writing '/tmp/tmpycv2f3t4.dot':Done

Reading LLVM: /tmp/tmpizvueytk-query.ll
Extracting function [checkFn] from /tmp/tmpizvueytk-query.ll
Dot file generated!
Writing '/tmp/tmptof2pzic.dot'...
Writing '/tmp/tmptof2pzic.dot':Done

Reading LLVM: /tmp/tmp86sko53n-target.ll
Extracting function [checkFn] from /tmp/tmp86sko53n-target.ll
Dot file generated!
================ Starting round 0
MAPPING:
- 0 %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %4 = load i64, i64* %RBP.i, align 8
- 3 %5 = add i64 %1, 1
- 4 store i64 %5, i64* %3, align 8
- 5 %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %7 = load i64, i64* %6, align 8
- 7 %8 = add i64 %7, -8
- 8 %9 = inttoptr i64 %8 to i64*
- 9 store i64 %4, i64* %9, align 8
- 10 store i64 %8, i64* %6, align 8
- 11 %10 = load i64, i64* %3, align 8
- 12 store i64 %8, i64* %RBP.i, align 8
- 13 %11 = add i64 %10, 4
- 14 store i64 %11, i64* %3, align 8
- 15 %12 = load i64, i64* %9, align 8
- 16 store i64 %12, i64* %RBP.i, align 8
- 17 store i64 %7, i64* %6, align 8
- 18 %13 = add i64 %10, 5
- 19 store i64 %13, i64* %3, align 8
- 20 %14 = inttoptr i64 %7 to i64*
- 21 %15 = load i64, i64* %14, align 8
- 22 store i64 %15, i64* %3, align 8
- 23 %16 = add i64 %7, 8
- 24 store i64 %16, i64* %6, align 8
- 25 \<badref\> = ret %struct.Memory* %2
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f9476ca99d8>, {0: {0}, 1: {1}, 2: {2, 6, 11, 15, 21}, 3: {3}, 4: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 5: {5}, 6: {2, 6, 11, 15, 21}, 7: {7}, 8: {8, 20}, 9: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 10: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 11: {2, 6, 11, 15, 21}, 12: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 13: {13}, 14: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 15: {2, 6, 11, 15, 21}, 16: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 17: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 18: {18}, 19: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 20: {8, 20}, 21: {2, 6, 11, 15, 21}, 22: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 23: {23}, 24: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 25: {25}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f9476ca99d8>, {0: {0}, 1: {1}, 2: {2}, 3: {3}, 4: {4}, 5: {5}, 6: {6}, 7: {7}, 8: {8}, 9: {9}, 10: {10}, 11: {11}, 12: {12}, 13: {13}, 14: {14}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
EXACT 3 add add
EXACT 4 store store
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 store store
EXACT 11 load load
EXACT 12 store store
EXACT 13 add add
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 store store
EXACT 18 add add
EXACT 19 store store
EXACT 20 inttoptr inttoptr
EXACT 21 load load
EXACT 22 store store
EXACT 23 add add
EXACT 24 store store
EXACT 25 ret ret
================ Starting round 1
MAPPING:
- 0 %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
- 1 %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
- 2 %3 = load i64, i64* %RBP, align 8
- 3 %4 = add i64 %1, 1
- 4 store i64 %4, i64* %PC, align 8
- 5 %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
- 6 %6 = load i64, i64* %5, align 8
- 7 %7 = add i64 %6, -8
- 8 %8 = inttoptr i64 %7 to i64*
- 9 store i64 %3, i64* %8, align 8
- 10 store i64 %7, i64* %5, align 8
- 11 %9 = load i64, i64* %PC, align 8
- 12 store i64 %7, i64* %RBP, align 8
- 13 %10 = add i64 %9, 4
- 14 store i64 %10, i64* %PC, align 8
- 15 %11 = load i64, i64* %8, align 8
- 16 store i64 %11, i64* %RBP, align 8
- 17 store i64 %6, i64* %5, align 8
- 18 %12 = add i64 %9, 5
- 19 store i64 %12, i64* %PC, align 8
- 20 %13 = inttoptr i64 %6 to i64*
- 21 %14 = load i64, i64* %13, align 8
- 22 store i64 %14, i64* %PC, align 8
- 23 %15 = add i64 %6, 8
- 24 store i64 %15, i64* %5, align 8
- 25 \<badref\> = ret %struct.Memory* %2
Initial Matches: defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f9476e60378>, {0: {0}, 1: {1}, 2: {2, 6, 11, 15, 21}, 3: {3}, 4: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 5: {5}, 6: {2, 6, 11, 15, 21}, 7: {7}, 8: {8, 20}, 9: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 10: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 11: {2, 6, 11, 15, 21}, 12: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 13: {13}, 14: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 15: {2, 6, 11, 15, 21}, 16: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 17: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 18: {18}, 19: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 20: {8, 20}, 21: {2, 6, 11, 15, 21}, 22: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 23: {23}, 24: {4, 9, 10, 12, 14, 16, 17, 19, 22, 24}, 25: {25}})
PHIS defaultdict(<function Matcher._new_round.<locals>.<lambda> at 0x7f9476e60378>, {0: {0}, 1: {1}, 2: {2}, 3: {3}, 4: {4}, 5: {5}, 6: {6}, 7: {7}, 8: {8}, 9: {9}, 10: {10}, 11: {11}, 12: {12}, 13: {13}, 14: {14}, 15: {15}, 16: {16}, 17: {17}, 18: {18}, 19: {19}, 20: {20}, 21: {21}, 22: {22}, 23: {23}, 24: {24}, 25: {25}})
EXACT 0 getelementptr getelementptr
EXACT 1 getelementptr getelementptr
EXACT 2 load load
EXACT 3 add add
EXACT 4 store store
EXACT 5 getelementptr getelementptr
EXACT 6 load load
EXACT 7 add add
EXACT 8 inttoptr inttoptr
EXACT 9 store store
EXACT 10 store store
EXACT 11 load load
EXACT 12 store store
EXACT 13 add add
EXACT 14 store store
EXACT 15 load load
EXACT 16 store store
EXACT 17 store store
EXACT 18 add add
EXACT 19 store store
EXACT 20 inttoptr inttoptr
EXACT 21 load load
EXACT 22 store store
EXACT 23 add add
EXACT 24 store store
EXACT 25 ret ret
FP: 63 1.0 True
TO REMOVE: dict_keys(['%3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0', '%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%5 = add i64 %1, 1', 'store i64 %5, i64* %3, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %6, align 8', '%10 = load i64, i64* %3, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%11 = add i64 %10, 4', 'store i64 %11, i64* %3, align 8', '%12 = load i64, i64* %9, align 8', 'store i64 %12, i64* %RBP.i, align 8', 'store i64 %7, i64* %6, align 8', '%13 = add i64 %10, 5', 'store i64 %13, i64* %3, align 8', '%14 = inttoptr i64 %7 to i64*', '%15 = load i64, i64* %14, align 8', 'store i64 %15, i64* %3, align 8', '%16 = add i64 %7, 8', 'store i64 %16, i64* %6, align 8'])
Keep: entry:
Found line to remove! %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
Found line to remove! %RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
Found line to remove! %4 = load i64, i64* %RBP.i, align 8
Found line to remove! %5 = add i64 %1, 1
Found line to remove! store i64 %5, i64* %3, align 8
Found line to remove! %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
Found line to remove! %7 = load i64, i64* %6, align 8
Found line to remove! %8 = add i64 %7, -8
Found line to remove! %9 = inttoptr i64 %8 to i64*
Found line to remove! store i64 %4, i64* %9, align 8
Found line to remove! store i64 %8, i64* %6, align 8
Found line to remove! %10 = load i64, i64* %3, align 8
Found line to remove! store i64 %8, i64* %RBP.i, align 8
Found line to remove! %11 = add i64 %10, 4
Found line to remove! store i64 %11, i64* %3, align 8
Found line to remove! %12 = load i64, i64* %9, align 8
Found line to remove! store i64 %12, i64* %RBP.i, align 8
Found line to remove! store i64 %7, i64* %6, align 8
Found line to remove! %13 = add i64 %10, 5
Found line to remove! store i64 %13, i64* %3, align 8
Found line to remove! %14 = inttoptr i64 %7 to i64*
Found line to remove! %15 = load i64, i64* %14, align 8
Found line to remove! store i64 %15, i64* %3, align 8
Found line to remove! %16 = add i64 %7, 8
Found line to remove! store i64 %16, i64* %6, align 8
Keep: ret %struct.Memory* %2
Missed: dict_keys(['%3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0', '%RBP.i = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%4 = load i64, i64* %RBP.i, align 8', '%5 = add i64 %1, 1', 'store i64 %5, i64* %3, align 8', '%6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%7 = load i64, i64* %6, align 8', '%8 = add i64 %7, -8', '%9 = inttoptr i64 %8 to i64*', 'store i64 %4, i64* %9, align 8', 'store i64 %8, i64* %6, align 8', '%10 = load i64, i64* %3, align 8', 'store i64 %8, i64* %RBP.i, align 8', '%11 = add i64 %10, 4', 'store i64 %11, i64* %3, align 8', '%12 = load i64, i64* %9, align 8', 'store i64 %12, i64* %RBP.i, align 8', 'store i64 %7, i64* %6, align 8', '%13 = add i64 %10, 5', 'store i64 %13, i64* %3, align 8', '%14 = inttoptr i64 %7 to i64*', '%15 = load i64, i64* %14, align 8', 'store i64 %15, i64* %3, align 8', '%16 = add i64 %7, 8', 'store i64 %16, i64* %6, align 8'])
TO REMOVE: dict_keys(['%PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%4 = add i64 %1, 1', 'store i64 %4, i64* %PC, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %5, align 8', '%9 = load i64, i64* %PC, align 8', 'store i64 %7, i64* %RBP, align 8', '%10 = add i64 %9, 4', 'store i64 %10, i64* %PC, align 8', '%11 = load i64, i64* %8, align 8', 'store i64 %11, i64* %RBP, align 8', 'store i64 %6, i64* %5, align 8', '%12 = add i64 %9, 5', 'store i64 %12, i64* %PC, align 8', '%13 = inttoptr i64 %6 to i64*', '%14 = load i64, i64* %13, align 8', 'store i64 %14, i64* %PC, align 8', '%15 = add i64 %6, 8', 'store i64 %15, i64* %5, align 8'])
Keep: block_400560:
Found line to remove! %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0
Found line to remove! %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0
Found line to remove! %3 = load i64, i64* %RBP, align 8
Found line to remove! %4 = add i64 %1, 1
Found line to remove! store i64 %4, i64* %PC, align 8
Found line to remove! %5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0
Found line to remove! %6 = load i64, i64* %5, align 8
Found line to remove! %7 = add i64 %6, -8
Found line to remove! %8 = inttoptr i64 %7 to i64*
Found line to remove! store i64 %3, i64* %8, align 8
Found line to remove! store i64 %7, i64* %5, align 8
Found line to remove! %9 = load i64, i64* %PC, align 8
Found line to remove! store i64 %7, i64* %RBP, align 8
Found line to remove! %10 = add i64 %9, 4
Found line to remove! store i64 %10, i64* %PC, align 8
Found line to remove! %11 = load i64, i64* %8, align 8
Found line to remove! store i64 %11, i64* %RBP, align 8
Found line to remove! store i64 %6, i64* %5, align 8
Found line to remove! %12 = add i64 %9, 5
Found line to remove! store i64 %12, i64* %PC, align 8
Found line to remove! %13 = inttoptr i64 %6 to i64*
Found line to remove! %14 = load i64, i64* %13, align 8
Found line to remove! store i64 %14, i64* %PC, align 8
Found line to remove! %15 = add i64 %6, 8
Found line to remove! store i64 %15, i64* %5, align 8
Keep: ret %struct.Memory* %2
Missed: dict_keys(['%PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0', '%RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0', '%3 = load i64, i64* %RBP, align 8', '%4 = add i64 %1, 1', 'store i64 %4, i64* %PC, align 8', '%5 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0', '%6 = load i64, i64* %5, align 8', '%7 = add i64 %6, -8', '%8 = inttoptr i64 %7 to i64*', 'store i64 %3, i64* %8, align 8', 'store i64 %7, i64* %5, align 8', '%9 = load i64, i64* %PC, align 8', 'store i64 %7, i64* %RBP, align 8', '%10 = add i64 %9, 4', 'store i64 %10, i64* %PC, align 8', '%11 = load i64, i64* %8, align 8', 'store i64 %11, i64* %RBP, align 8', 'store i64 %6, i64* %5, align 8', '%12 = add i64 %9, 5', 'store i64 %12, i64* %PC, align 8', '%13 = inttoptr i64 %6 to i64*', '%14 = load i64, i64* %13, align 8', 'store i64 %14, i64* %PC, align 8', '%15 = add i64 %6, 8', 'store i64 %15, i64* %5, align 8'])
[*] Found exact, syntactic match! /home/ubuntu/Github/validating-binary-decompilation/tests/program_translation_validation/toy-examples/test_13_1/checkFn/mcsema/test.proposed.ll /home/ubuntu/Github/validating-binary-decompilation/tests/program_translation_validation/toy-examples/test_13_1/binary/test.mcsema.calls_renamed.ll checkFn
/home/ubuntu/Github/llir-matcher/matcher/match.py:711: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
  config = yaml.load(fd)
