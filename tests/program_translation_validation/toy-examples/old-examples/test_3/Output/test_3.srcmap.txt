========================================================
Source line mapping for function: sub_0
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <0>	pushq	%rbp
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <0>	pushq	%rbp
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <0>	pushq	%rbp
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <0>	pushq	%rbp
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <0>	pushq	%rbp
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <0>	pushq	%rbp
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <0>	pushq	%rbp
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <0>	pushq	%rbp
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <0>	pushq	%rbp
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <0>	pushq	%rbp
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <0>	pushq	%rbp
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <0>	pushq	%rbp
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <0>	pushq	%rbp
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <0>	pushq	%rbp
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <0>	pushq	%rbp
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <0>	pushq	%rbp
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <0>	pushq	%rbp
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <0>	pushq	%rbp
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <0>	pushq	%rbp
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <0>	pushq	%rbp
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <0>	pushq	%rbp
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <0>	pushq	%rbp
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <0>	pushq	%rbp
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <0>	pushq	%rbp
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <0>	pushq	%rbp
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <0>	pushq	%rbp
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <0>	pushq	%rbp
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <0>	pushq	%rbp
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <0>	pushq	%rbp
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <0>	pushq	%rbp
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <0>	pushq	%rbp
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <0>	pushq	%rbp
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <0>	pushq	%rbp
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <0>	pushq	%rbp
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <0>	pushq	%rbp
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <0>	pushq	%rbp
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <0>	pushq	%rbp
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <0>	pushq	%rbp
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <0>	pushq	%rbp
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <0>	pushq	%rbp
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <0>	pushq	%rbp
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <0>	pushq	%rbp
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <0>	pushq	%rbp
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <0>	pushq	%rbp
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <0>	pushq	%rbp
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <0>	pushq	%rbp
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <0>	pushq	%rbp
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <0>	pushq	%rbp
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <0>	pushq	%rbp
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <0>	pushq	%rbp
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <0>	pushq	%rbp
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <0>	pushq	%rbp
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <0>	pushq	%rbp
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <0>	pushq	%rbp
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <0>	pushq	%rbp
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <0>	pushq	%rbp
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <0>	pushq	%rbp
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <0>	pushq	%rbp
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <0>	pushq	%rbp
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <0>	pushq	%rbp
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <0>	pushq	%rbp
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <0>	pushq	%rbp
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <0>	pushq	%rbp
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <0>	pushq	%rbp
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <0>	pushq	%rbp
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <0>	pushq	%rbp
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <0>	pushq	%rbp
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <0>	pushq	%rbp
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <0>	pushq	%rbp
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <0>	pushq	%rbp
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <0>	pushq	%rbp
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <0>	pushq	%rbp
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <0>	pushq	%rbp
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <0>	pushq	%rbp
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <0>	pushq	%rbp
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <0>	pushq	%rbp
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <0>	pushq	%rbp
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <0>	pushq	%rbp
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <0>	pushq	%rbp
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <0>	pushq	%rbp
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <0>	pushq	%rbp
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <0>	pushq	%rbp
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
288 :   %77 = load i64* %RBP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
289 :   %78 = load i64* %RSP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp

290 :   %79 = add i64 %78, -8 : NIL

291 :   %80 = inttoptr i64 %79 to i64*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
292 :   store i64 %77, i64* %80, !mcsema_real_eip !2 :          <0>	pushq	%rbp
293 :   store i64 %79, i64* %RSP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp

294 :   store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :          <1>	movq	%rsp, %rbp

295 :   %81 = add i64 %78, -12, !mcsema_real_eip !4 :          <4>	movl	%edi, -4(%rbp)
296 :   %82 = inttoptr i64 %81 to i64*, !mcsema_real_eip !4 :          <4>	movl	%edi, -4(%rbp)
297 :   %83 = load i64* %RDI_val, !mcsema_real_eip !4 :          <4>	movl	%edi, -4(%rbp)
298 :   %84 = trunc i64 %83 to i32, !mcsema_real_eip !4 :          <4>	movl	%edi, -4(%rbp)

299 :   %85 = bitcast i64* %82 to i32* : NIL

300 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <4>	movl	%edi, -4(%rbp)

301 :   %86 = load i64* %RBP_val, !mcsema_real_eip !5 :          <7>	movl	%esi, -8(%rbp)
302 :   %87 = add i64 %86, -8, !mcsema_real_eip !5 :          <7>	movl	%esi, -8(%rbp)
303 :   %88 = inttoptr i64 %87 to i64*, !mcsema_real_eip !5 :          <7>	movl	%esi, -8(%rbp)
304 :   %89 = load i64* %RSI_val, !mcsema_real_eip !5 :          <7>	movl	%esi, -8(%rbp)
305 :   %90 = trunc i64 %89 to i32, !mcsema_real_eip !5 :          <7>	movl	%esi, -8(%rbp)

306 :   %91 = bitcast i64* %88 to i32* : NIL

307 :   store i32 %90, i32* %91, !mcsema_real_eip !5 :          <7>	movl	%esi, -8(%rbp)

308 :   %92 = load i64* %RBP_val, !mcsema_real_eip !6 :          <a>	movl	-4(%rbp), %esi
309 :   %93 = add i64 %92, -4, !mcsema_real_eip !6 :          <a>	movl	-4(%rbp), %esi
310 :   %94 = inttoptr i64 %93 to i64*, !mcsema_real_eip !6 :          <a>	movl	-4(%rbp), %esi

311 :   %95 = bitcast i64* %94 to i32* : NIL

312 :   %96 = load i32* %95, !mcsema_real_eip !6 :          <a>	movl	-4(%rbp), %esi
313 :   %97 = zext i32 %96 to i64, !mcsema_real_eip !6 :          <a>	movl	-4(%rbp), %esi
314 :   store i64 %97, i64* %RSI_val, !mcsema_real_eip !6 :          <a>	movl	-4(%rbp), %esi

315 :   %98 = load i64* %RBP_val, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
316 :   %99 = add i64 %98, -8, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
317 :   %100 = inttoptr i64 %99 to i64*, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi

318 :   %101 = bitcast i64* %100 to i32* : NIL

319 :   %102 = load i32* %101, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi

320 :   %uadd = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %96, i32 %102) : NIL
321 :   %103 = extractvalue { i32, i1 } %uadd, 0 : NIL

322 :   %104 = xor i32 %103, %102, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
323 :   %105 = xor i32 %104, %96, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
324 :   %106 = and i32 %105, 16, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
325 :   %107 = icmp ne i32 %106, 0, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
326 :   store i1 %107, i1* %AF_val, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi

327 :   %108 = icmp slt i32 %103, 0 : NIL

328 :   store i1 %108, i1* %SF_val, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
329 :   %109 = icmp eq i32 %103, 0, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
330 :   store i1 %109, i1* %ZF_val, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
331 :   %110 = xor i32 %96, -2147483648, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
332 :   %111 = xor i32 %110, %102, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
333 :   %112 = and i32 %104, %111, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi

334 :   %113 = icmp slt i32 %112, 0 : NIL

335 :   store i1 %113, i1* %OF_val, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
336 :   %114 = trunc i32 %103 to i8, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
337 :   %115 = tail call i8 @llvm.ctpop.i8(i8 %114), !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi

338 :   %116 = and i8 %115, 1 : NIL
339 :   %117 = icmp eq i8 %116, 0 : NIL

340 :   store i1 %117, i1* %PF_val, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi

341 :   %118 = extractvalue { i32, i1 } %uadd, 1 : NIL

342 :   store i1 %118, i1* %CF_val, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
343 :   %119 = zext i32 %103 to i64, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
344 :   store i64 %119, i64* %RSI_val, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi

345 :   %120 = load i64* %RBP_val, !mcsema_real_eip !8 :          <10>	movl	%esi, -12(%rbp)
346 :   %121 = add i64 %120, -12, !mcsema_real_eip !8 :          <10>	movl	%esi, -12(%rbp)
347 :   %122 = inttoptr i64 %121 to i64*, !mcsema_real_eip !8 :          <10>	movl	%esi, -12(%rbp)

348 :   %123 = bitcast i64* %122 to i32* : NIL

349 :   store i32 %103, i32* %123, !mcsema_real_eip !8 :          <10>	movl	%esi, -12(%rbp)

350 :   %124 = load i64* %RBP_val, !mcsema_real_eip !9 :          <13>	cmpl	$40, -4(%rbp)
351 :   %125 = add i64 %124, -4, !mcsema_real_eip !9 :          <13>	cmpl	$40, -4(%rbp)
352 :   %126 = inttoptr i64 %125 to i64*, !mcsema_real_eip !9 :          <13>	cmpl	$40, -4(%rbp)

353 :   %127 = bitcast i64* %126 to i32* : NIL

354 :   %128 = load i32* %127, !mcsema_real_eip !9 :          <13>	cmpl	$40, -4(%rbp)

355 :   %129 = add i32 %128, -40 : NIL

356 :   %130 = xor i32 %129, %128, !mcsema_real_eip !9 :          <13>	cmpl	$40, -4(%rbp)
357 :   %131 = and i32 %130, 16, !mcsema_real_eip !9 :          <13>	cmpl	$40, -4(%rbp)
358 :   %132 = icmp ne i32 %131, 0, !mcsema_real_eip !9 :          <13>	cmpl	$40, -4(%rbp)
359 :   store i1 %132, i1* %AF_val, !mcsema_real_eip !9 :          <13>	cmpl	$40, -4(%rbp)
360 :   %133 = trunc i32 %129 to i8, !mcsema_real_eip !9 :          <13>	cmpl	$40, -4(%rbp)
361 :   %134 = tail call i8 @llvm.ctpop.i8(i8 %133), !mcsema_real_eip !9 :          <13>	cmpl	$40, -4(%rbp)

362 :   %135 = and i8 %134, 1 : NIL
363 :   %136 = icmp eq i8 %135, 0 : NIL

364 :   store i1 %136, i1* %PF_val, !mcsema_real_eip !9 :          <13>	cmpl	$40, -4(%rbp)
365 :   %137 = icmp eq i32 %129, 0, !mcsema_real_eip !9 :          <13>	cmpl	$40, -4(%rbp)
366 :   store i1 %137, i1* %ZF_val, !mcsema_real_eip !9 :          <13>	cmpl	$40, -4(%rbp)

367 :   %138 = icmp slt i32 %129, 0 : NIL

368 :   store i1 %138, i1* %SF_val, !mcsema_real_eip !9 :          <13>	cmpl	$40, -4(%rbp)
369 :   %139 = icmp ult i32 %128, 40, !mcsema_real_eip !9 :          <13>	cmpl	$40, -4(%rbp)
370 :   store i1 %139, i1* %CF_val, !mcsema_real_eip !9 :          <13>	cmpl	$40, -4(%rbp)
371 :   %140 = and i32 %130, %128, !mcsema_real_eip !9 :          <13>	cmpl	$40, -4(%rbp)

372 :   %141 = icmp slt i32 %140, 0 : NIL

373 :   store i1 %141, i1* %OF_val, !mcsema_real_eip !9 :          <13>	cmpl	$40, -4(%rbp)

374 :   %142 = xor i1 %138, %141 : NIL

375 :   %143 = load i1* %ZF_val, !mcsema_real_eip !10 :          <1a>	jle	16
376 :   %144 = or i1 %143, %142, !mcsema_real_eip !10 :          <1a>	jle	16

377 :   %145 = load i64* %RBP_val, !mcsema_real_eip !11 :          <30>	movl	-12(%rbp), %eax
378 :   %146 = add i64 %145, -12, !mcsema_real_eip !11 :          <30>	movl	-12(%rbp), %eax
379 :   %147 = inttoptr i64 %146 to i64*, !mcsema_real_eip !11 :          <30>	movl	-12(%rbp), %eax

380 :   %148 = bitcast i64* %147 to i32* : NIL

381 :   %149 = load i32* %148, !mcsema_real_eip !11 :          <30>	movl	-12(%rbp), %eax
382 :   %150 = zext i32 %149 to i64, !mcsema_real_eip !11 :          <30>	movl	-12(%rbp), %eax
383 :   store i64 %150, i64* %RAX_val, !mcsema_real_eip !11 :          <30>	movl	-12(%rbp), %eax

384 :   br i1 %144, label %block_0x30, label %block_0x20, !mcsema_real_eip !10 :          <1a>	jle	16

385 :   %151 = add i32 %149, -10 : NIL

386 :   %152 = xor i32 %151, %149, !mcsema_real_eip !12 :          <33>	subl	$10, %eax
387 :   %153 = and i32 %152, 16, !mcsema_real_eip !12 :          <33>	subl	$10, %eax
388 :   %154 = icmp ne i32 %153, 0, !mcsema_real_eip !12 :          <33>	subl	$10, %eax
389 :   store i1 %154, i1* %AF_val, !mcsema_real_eip !12 :          <33>	subl	$10, %eax
390 :   %155 = trunc i32 %151 to i8, !mcsema_real_eip !12 :          <33>	subl	$10, %eax
391 :   %156 = tail call i8 @llvm.ctpop.i8(i8 %155), !mcsema_real_eip !12 :          <33>	subl	$10, %eax

392 :   %157 = and i8 %156, 1 : NIL
393 :   %158 = icmp eq i8 %157, 0 : NIL

394 :   store i1 %158, i1* %PF_val, !mcsema_real_eip !12 :          <33>	subl	$10, %eax
395 :   %159 = icmp eq i32 %151, 0, !mcsema_real_eip !12 :          <33>	subl	$10, %eax
396 :   store i1 %159, i1* %ZF_val, !mcsema_real_eip !12 :          <33>	subl	$10, %eax

397 :   %160 = icmp slt i32 %151, 0 : NIL

398 :   store i1 %160, i1* %SF_val, !mcsema_real_eip !12 :          <33>	subl	$10, %eax
399 :   %161 = icmp ult i32 %149, 10, !mcsema_real_eip !12 :          <33>	subl	$10, %eax
400 :   store i1 %161, i1* %CF_val, !mcsema_real_eip !12 :          <33>	subl	$10, %eax
401 :   %162 = and i32 %152, %149, !mcsema_real_eip !12 :          <33>	subl	$10, %eax

402 :   %163 = icmp slt i32 %162, 0 : NIL

403 :   store i1 %163, i1* %OF_val, !mcsema_real_eip !12 :          <33>	subl	$10, %eax
404 :   %164 = zext i32 %151 to i64, !mcsema_real_eip !12 :          <33>	subl	$10, %eax
405 :   store i64 %164, i64* %RAX_val, !mcsema_real_eip !12 :          <33>	subl	$10, %eax

406 :   %165 = load i64* %RBP_val, !mcsema_real_eip !13 :          <38>	movl	%eax, -16(%rbp)
407 :   %166 = add i64 %165, -16, !mcsema_real_eip !13 :          <38>	movl	%eax, -16(%rbp)
408 :   %167 = inttoptr i64 %166 to i64*, !mcsema_real_eip !13 :          <38>	movl	%eax, -16(%rbp)

409 :   %168 = bitcast i64* %167 to i32* : NIL

410 :   store i32 %151, i32* %168, !mcsema_real_eip !13 :          <38>	movl	%eax, -16(%rbp)

411 :   %169 = load i64* %RBP_val, !mcsema_real_eip !14 :          <3b>	movl	-12(%rbp), %eax
412 :   %170 = add i64 %169, -12, !mcsema_real_eip !14 :          <3b>	movl	-12(%rbp), %eax
413 :   %171 = inttoptr i64 %170 to i64*, !mcsema_real_eip !14 :          <3b>	movl	-12(%rbp), %eax

414 :   %172 = bitcast i64* %171 to i32* : NIL

415 :   %173 = load i32* %172, !mcsema_real_eip !14 :          <3b>	movl	-12(%rbp), %eax
416 :   %174 = zext i32 %173 to i64, !mcsema_real_eip !14 :          <3b>	movl	-12(%rbp), %eax
417 :   store i64 %174, i64* %RAX_val, !mcsema_real_eip !14 :          <3b>	movl	-12(%rbp), %eax

418 :   %175 = load i64* %RSP_val, !mcsema_real_eip !15 :          <3e>	popq	%rbp
419 :   %176 = inttoptr i64 %175 to i64*, !mcsema_real_eip !15 :          <3e>	popq	%rbp
420 :   %177 = load i64* %176, !mcsema_real_eip !15 :          <3e>	popq	%rbp
421 :   store i64 %177, i64* %RBP_val, !mcsema_real_eip !15 :          <3e>	popq	%rbp

422 :   %178 = add i64 %175, 16, !mcsema_real_eip !16 :          <3f>	retq
423 :   store i64 %178, i64* %RSP_val, !mcsema_real_eip !16 :          <3f>	retq
424 :   %179 = load i64* %RAX_val, !mcsema_real_eip !16 :          <3f>	retq
425 :   store i64 %179, i64* %RAX, !mcsema_real_eip !16 :          <3f>	retq
426 :   %180 = load i64* %RBX_val, !mcsema_real_eip !16 :          <3f>	retq
427 :   store i64 %180, i64* %RBX, !mcsema_real_eip !16 :          <3f>	retq
428 :   %181 = load i64* %RCX_val, !mcsema_real_eip !16 :          <3f>	retq
429 :   store i64 %181, i64* %RCX, !mcsema_real_eip !16 :          <3f>	retq
430 :   %182 = load i64* %RDX_val, !mcsema_real_eip !16 :          <3f>	retq
431 :   store i64 %182, i64* %RDX, !mcsema_real_eip !16 :          <3f>	retq
432 :   %183 = load i64* %RSI_val, !mcsema_real_eip !16 :          <3f>	retq
433 :   store i64 %183, i64* %RSI, !mcsema_real_eip !16 :          <3f>	retq
434 :   %184 = load i64* %RDI_val, !mcsema_real_eip !16 :          <3f>	retq
435 :   store i64 %184, i64* %RDI, !mcsema_real_eip !16 :          <3f>	retq
436 :   %185 = load i64* %RSP_val, !mcsema_real_eip !16 :          <3f>	retq
437 :   store i64 %185, i64* %RSP, !mcsema_real_eip !16 :          <3f>	retq
438 :   %186 = load i64* %RBP_val, !mcsema_real_eip !16 :          <3f>	retq
439 :   store i64 %186, i64* %RBP, !mcsema_real_eip !16 :          <3f>	retq
440 :   %187 = load i64* %R8_val, !mcsema_real_eip !16 :          <3f>	retq
441 :   store i64 %187, i64* %R8, !mcsema_real_eip !16 :          <3f>	retq
442 :   %188 = load i64* %R9_val, !mcsema_real_eip !16 :          <3f>	retq
443 :   store i64 %188, i64* %R9, !mcsema_real_eip !16 :          <3f>	retq
444 :   %189 = load i64* %R10_val, !mcsema_real_eip !16 :          <3f>	retq
445 :   store i64 %189, i64* %R10, !mcsema_real_eip !16 :          <3f>	retq
446 :   %190 = load i64* %R11_val, !mcsema_real_eip !16 :          <3f>	retq
447 :   store i64 %190, i64* %R11, !mcsema_real_eip !16 :          <3f>	retq
448 :   %191 = load i64* %R12_val, !mcsema_real_eip !16 :          <3f>	retq
449 :   store i64 %191, i64* %R12, !mcsema_real_eip !16 :          <3f>	retq
450 :   %192 = load i64* %R13_val, !mcsema_real_eip !16 :          <3f>	retq
451 :   store i64 %192, i64* %R13, !mcsema_real_eip !16 :          <3f>	retq
452 :   %193 = load i64* %R14_val, !mcsema_real_eip !16 :          <3f>	retq
453 :   store i64 %193, i64* %R14, !mcsema_real_eip !16 :          <3f>	retq
454 :   %194 = load i64* %R15_val, !mcsema_real_eip !16 :          <3f>	retq
455 :   store i64 %194, i64* %R15, !mcsema_real_eip !16 :          <3f>	retq
456 :   %195 = load i64* %RIP_val, !mcsema_real_eip !16 :          <3f>	retq
457 :   store i64 %195, i64* %RIP, !mcsema_real_eip !16 :          <3f>	retq
458 :   %196 = load i1* %CF_val, !mcsema_real_eip !16 :          <3f>	retq
459 :   store i1 %196, i1* %CF, align 1, !mcsema_real_eip !16 :          <3f>	retq
460 :   %197 = load i1* %PF_val, !mcsema_real_eip !16 :          <3f>	retq
461 :   store i1 %197, i1* %PF, align 1, !mcsema_real_eip !16 :          <3f>	retq
462 :   %198 = load i1* %AF_val, !mcsema_real_eip !16 :          <3f>	retq
463 :   store i1 %198, i1* %AF, align 1, !mcsema_real_eip !16 :          <3f>	retq
464 :   %199 = load i1* %ZF_val, !mcsema_real_eip !16 :          <3f>	retq
465 :   store i1 %199, i1* %ZF, align 1, !mcsema_real_eip !16 :          <3f>	retq
466 :   %200 = load i1* %SF_val, !mcsema_real_eip !16 :          <3f>	retq
467 :   store i1 %200, i1* %SF, align 1, !mcsema_real_eip !16 :          <3f>	retq
468 :   %201 = load i1* %OF_val, !mcsema_real_eip !16 :          <3f>	retq
469 :   store i1 %201, i1* %OF, align 1, !mcsema_real_eip !16 :          <3f>	retq
470 :   %202 = load i1* %DF_val, !mcsema_real_eip !16 :          <3f>	retq
471 :   store i1 %202, i1* %DF, align 1, !mcsema_real_eip !16 :          <3f>	retq
472 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !16 :          <3f>	retq
473 :   %203 = load i1* %FPU_B_val, !mcsema_real_eip !16 :          <3f>	retq
474 :   store i1 %203, i1* %FPU_B, align 1, !mcsema_real_eip !16 :          <3f>	retq
475 :   %204 = load i1* %FPU_C3_val, !mcsema_real_eip !16 :          <3f>	retq
476 :   store i1 %204, i1* %FPU_C3, align 1, !mcsema_real_eip !16 :          <3f>	retq
477 :   %205 = load i3* %FPU_TOP_val, !mcsema_real_eip !16 :          <3f>	retq
478 :   store i3 %205, i3* %FPU_TOP, align 1, !mcsema_real_eip !16 :          <3f>	retq
479 :   %206 = load i1* %FPU_C2_val, !mcsema_real_eip !16 :          <3f>	retq
480 :   store i1 %206, i1* %FPU_C2, align 1, !mcsema_real_eip !16 :          <3f>	retq
481 :   %207 = load i1* %FPU_C1_val, !mcsema_real_eip !16 :          <3f>	retq
482 :   store i1 %207, i1* %FPU_C1, align 1, !mcsema_real_eip !16 :          <3f>	retq
483 :   %208 = load i1* %FPU_C0_val, !mcsema_real_eip !16 :          <3f>	retq
484 :   store i1 %208, i1* %FPU_C0, align 1, !mcsema_real_eip !16 :          <3f>	retq
485 :   %209 = load i1* %FPU_ES_val, !mcsema_real_eip !16 :          <3f>	retq
486 :   store i1 %209, i1* %FPU_ES, align 1, !mcsema_real_eip !16 :          <3f>	retq
487 :   %210 = load i1* %FPU_SF_val, !mcsema_real_eip !16 :          <3f>	retq
488 :   store i1 %210, i1* %FPU_SF, align 1, !mcsema_real_eip !16 :          <3f>	retq
489 :   %211 = load i1* %FPU_PE_val, !mcsema_real_eip !16 :          <3f>	retq
490 :   store i1 %211, i1* %FPU_PE, align 1, !mcsema_real_eip !16 :          <3f>	retq
491 :   %212 = load i1* %FPU_UE_val, !mcsema_real_eip !16 :          <3f>	retq
492 :   store i1 %212, i1* %FPU_UE, align 1, !mcsema_real_eip !16 :          <3f>	retq
493 :   %213 = load i1* %FPU_OE_val, !mcsema_real_eip !16 :          <3f>	retq
494 :   store i1 %213, i1* %FPU_OE, align 1, !mcsema_real_eip !16 :          <3f>	retq
495 :   %214 = load i1* %FPU_ZE_val, !mcsema_real_eip !16 :          <3f>	retq
496 :   store i1 %214, i1* %FPU_ZE, align 1, !mcsema_real_eip !16 :          <3f>	retq
497 :   %215 = load i1* %FPU_DE_val, !mcsema_real_eip !16 :          <3f>	retq
498 :   store i1 %215, i1* %FPU_DE, align 1, !mcsema_real_eip !16 :          <3f>	retq
499 :   %216 = load i1* %FPU_IE_val, !mcsema_real_eip !16 :          <3f>	retq
500 :   store i1 %216, i1* %FPU_IE, align 1, !mcsema_real_eip !16 :          <3f>	retq
501 :   %217 = load i1* %FPU_X_val, !mcsema_real_eip !16 :          <3f>	retq
502 :   store i1 %217, i1* %FPU_X, align 1, !mcsema_real_eip !16 :          <3f>	retq
503 :   %218 = load i2* %FPU_RC_val, !mcsema_real_eip !16 :          <3f>	retq
504 :   store i2 %218, i2* %FPU_RC, align 1, !mcsema_real_eip !16 :          <3f>	retq
505 :   %219 = load i2* %FPU_PC_val, !mcsema_real_eip !16 :          <3f>	retq
506 :   store i2 %219, i2* %FPU_PC, align 1, !mcsema_real_eip !16 :          <3f>	retq
507 :   %220 = load i1* %FPU_PM_val, !mcsema_real_eip !16 :          <3f>	retq
508 :   store i1 %220, i1* %FPU_PM, align 1, !mcsema_real_eip !16 :          <3f>	retq
509 :   %221 = load i1* %FPU_UM_val, !mcsema_real_eip !16 :          <3f>	retq
510 :   store i1 %221, i1* %FPU_UM, align 1, !mcsema_real_eip !16 :          <3f>	retq
511 :   %222 = load i1* %FPU_OM_val, !mcsema_real_eip !16 :          <3f>	retq
512 :   store i1 %222, i1* %FPU_OM, align 1, !mcsema_real_eip !16 :          <3f>	retq
513 :   %223 = load i1* %FPU_ZM_val, !mcsema_real_eip !16 :          <3f>	retq
514 :   store i1 %223, i1* %FPU_ZM, align 1, !mcsema_real_eip !16 :          <3f>	retq
515 :   %224 = load i1* %FPU_DM_val, !mcsema_real_eip !16 :          <3f>	retq
516 :   store i1 %224, i1* %FPU_DM, align 1, !mcsema_real_eip !16 :          <3f>	retq
517 :   %225 = load i1* %FPU_IM_val, !mcsema_real_eip !16 :          <3f>	retq
518 :   store i1 %225, i1* %FPU_IM, align 1, !mcsema_real_eip !16 :          <3f>	retq

519 :   %226 = load i64* %53, align 4 : NIL
520 :   store i64 %226, i64* %52, align 4 : NIL

521 :   %227 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !16 :          <3f>	retq
522 :   store i16 %227, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !16 :          <3f>	retq
523 :   %228 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !16 :          <3f>	retq
524 :   store i64 %228, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !16 :          <3f>	retq
525 :   %229 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !16 :          <3f>	retq
526 :   store i16 %229, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !16 :          <3f>	retq
527 :   %230 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !16 :          <3f>	retq
528 :   store i64 %230, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !16 :          <3f>	retq
529 :   %231 = load i128* %XMM0_val, !mcsema_real_eip !16 :          <3f>	retq
530 :   store i128 %231, i128* %XMM0, align 1, !mcsema_real_eip !16 :          <3f>	retq
531 :   %232 = load i128* %XMM1_val, !mcsema_real_eip !16 :          <3f>	retq
532 :   store i128 %232, i128* %XMM1, align 1, !mcsema_real_eip !16 :          <3f>	retq
533 :   %233 = load i128* %XMM2_val, !mcsema_real_eip !16 :          <3f>	retq
534 :   store i128 %233, i128* %XMM2, align 1, !mcsema_real_eip !16 :          <3f>	retq
535 :   %234 = load i128* %XMM3_val, !mcsema_real_eip !16 :          <3f>	retq
536 :   store i128 %234, i128* %XMM3, align 1, !mcsema_real_eip !16 :          <3f>	retq
537 :   %235 = load i128* %XMM4_val, !mcsema_real_eip !16 :          <3f>	retq
538 :   store i128 %235, i128* %XMM4, align 1, !mcsema_real_eip !16 :          <3f>	retq
539 :   %236 = load i128* %XMM5_val, !mcsema_real_eip !16 :          <3f>	retq
540 :   store i128 %236, i128* %XMM5, align 1, !mcsema_real_eip !16 :          <3f>	retq
541 :   %237 = load i128* %XMM6_val, !mcsema_real_eip !16 :          <3f>	retq
542 :   store i128 %237, i128* %XMM6, align 1, !mcsema_real_eip !16 :          <3f>	retq
543 :   %238 = load i128* %XMM7_val, !mcsema_real_eip !16 :          <3f>	retq
544 :   store i128 %238, i128* %XMM7, align 1, !mcsema_real_eip !16 :          <3f>	retq
545 :   %239 = load i128* %XMM8_val, !mcsema_real_eip !16 :          <3f>	retq
546 :   store i128 %239, i128* %XMM8, align 1, !mcsema_real_eip !16 :          <3f>	retq
547 :   %240 = load i128* %XMM9_val, !mcsema_real_eip !16 :          <3f>	retq
548 :   store i128 %240, i128* %XMM9, align 1, !mcsema_real_eip !16 :          <3f>	retq
549 :   %241 = load i128* %XMM10_val, !mcsema_real_eip !16 :          <3f>	retq
550 :   store i128 %241, i128* %XMM10, align 1, !mcsema_real_eip !16 :          <3f>	retq
551 :   %242 = load i128* %XMM11_val, !mcsema_real_eip !16 :          <3f>	retq
552 :   store i128 %242, i128* %XMM11, align 1, !mcsema_real_eip !16 :          <3f>	retq
553 :   %243 = load i128* %XMM12_val, !mcsema_real_eip !16 :          <3f>	retq
554 :   store i128 %243, i128* %XMM12, align 1, !mcsema_real_eip !16 :          <3f>	retq
555 :   %244 = load i128* %XMM13_val, !mcsema_real_eip !16 :          <3f>	retq
556 :   store i128 %244, i128* %XMM13, align 1, !mcsema_real_eip !16 :          <3f>	retq
557 :   %245 = load i128* %XMM14_val, !mcsema_real_eip !16 :          <3f>	retq
558 :   store i128 %245, i128* %XMM14, align 1, !mcsema_real_eip !16 :          <3f>	retq
559 :   %246 = load i128* %XMM15_val, !mcsema_real_eip !16 :          <3f>	retq
560 :   store i128 %246, i128* %XMM15, align 1, !mcsema_real_eip !16 :          <3f>	retq
561 :   %247 = load i64* %STACK_BASE_val, !mcsema_real_eip !16 :          <3f>	retq
562 :   store i64 %247, i64* %STACK_BASE, align 1, !mcsema_real_eip !16 :          <3f>	retq
563 :   %248 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !16 :          <3f>	retq
564 :   store i64 %248, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !16 :          <3f>	retq
565 :   ret void, !mcsema_real_eip !16 :          <3f>	retq

566 :   %uadd140 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %149, i32 10) : NIL
567 :   %249 = extractvalue { i32, i1 } %uadd140, 0 : NIL

568 :   %250 = xor i32 %249, %149, !mcsema_real_eip !17 :          <23>	addl	$10, %eax
569 :   %251 = and i32 %250, 16, !mcsema_real_eip !17 :          <23>	addl	$10, %eax
570 :   %252 = icmp ne i32 %251, 0, !mcsema_real_eip !17 :          <23>	addl	$10, %eax
571 :   store i1 %252, i1* %AF_val, !mcsema_real_eip !17 :          <23>	addl	$10, %eax

572 :   %253 = icmp slt i32 %249, 0 : NIL

573 :   store i1 %253, i1* %SF_val, !mcsema_real_eip !17 :          <23>	addl	$10, %eax
574 :   %254 = icmp eq i32 %249, 0, !mcsema_real_eip !17 :          <23>	addl	$10, %eax
575 :   store i1 %254, i1* %ZF_val, !mcsema_real_eip !17 :          <23>	addl	$10, %eax
576 :   %255 = xor i32 %149, -2147483648, !mcsema_real_eip !17 :          <23>	addl	$10, %eax
577 :   %256 = and i32 %250, %255, !mcsema_real_eip !17 :          <23>	addl	$10, %eax

578 :   %257 = icmp slt i32 %256, 0 : NIL

579 :   store i1 %257, i1* %OF_val, !mcsema_real_eip !17 :          <23>	addl	$10, %eax
580 :   %258 = trunc i32 %249 to i8, !mcsema_real_eip !17 :          <23>	addl	$10, %eax
581 :   %259 = tail call i8 @llvm.ctpop.i8(i8 %258), !mcsema_real_eip !17 :          <23>	addl	$10, %eax

582 :   %260 = and i8 %259, 1 : NIL
583 :   %261 = icmp eq i8 %260, 0 : NIL

584 :   store i1 %261, i1* %PF_val, !mcsema_real_eip !17 :          <23>	addl	$10, %eax

585 :   %262 = extractvalue { i32, i1 } %uadd140, 1 : NIL

586 :   store i1 %262, i1* %CF_val, !mcsema_real_eip !17 :          <23>	addl	$10, %eax
587 :   %263 = zext i32 %249 to i64, !mcsema_real_eip !17 :          <23>	addl	$10, %eax
588 :   store i64 %263, i64* %RAX_val, !mcsema_real_eip !17 :          <23>	addl	$10, %eax

589 :   %264 = load i64* %RBP_val, !mcsema_real_eip !18 :          <28>	movl	%eax, -12(%rbp)
590 :   %265 = add i64 %264, -12, !mcsema_real_eip !18 :          <28>	movl	%eax, -12(%rbp)
591 :   %266 = inttoptr i64 %265 to i64*, !mcsema_real_eip !18 :          <28>	movl	%eax, -12(%rbp)

592 :   %267 = bitcast i64* %266 to i32* : NIL

593 :   store i32 %249, i32* %267, !mcsema_real_eip !18 :          <28>	movl	%eax, -12(%rbp)

594 :   %268 = load i64* %RBP_val, !mcsema_real_eip !14 :          <3b>	movl	-12(%rbp), %eax
595 :   %269 = add i64 %268, -12, !mcsema_real_eip !14 :          <3b>	movl	-12(%rbp), %eax
596 :   %270 = inttoptr i64 %269 to i64*, !mcsema_real_eip !14 :          <3b>	movl	-12(%rbp), %eax

597 :   %271 = bitcast i64* %270 to i32* : NIL

598 :   %272 = load i32* %271, !mcsema_real_eip !14 :          <3b>	movl	-12(%rbp), %eax
599 :   %273 = zext i32 %272 to i64, !mcsema_real_eip !14 :          <3b>	movl	-12(%rbp), %eax
600 :   store i64 %273, i64* %RAX_val, !mcsema_real_eip !14 :          <3b>	movl	-12(%rbp), %eax

601 :   %274 = load i64* %RSP_val, !mcsema_real_eip !15 :          <3e>	popq	%rbp
602 :   %275 = inttoptr i64 %274 to i64*, !mcsema_real_eip !15 :          <3e>	popq	%rbp
603 :   %276 = load i64* %275, !mcsema_real_eip !15 :          <3e>	popq	%rbp
604 :   store i64 %276, i64* %RBP_val, !mcsema_real_eip !15 :          <3e>	popq	%rbp

605 :   %277 = add i64 %274, 16, !mcsema_real_eip !16 :          <3f>	retq
606 :   store i64 %277, i64* %RSP_val, !mcsema_real_eip !16 :          <3f>	retq
607 :   %278 = load i64* %RAX_val, !mcsema_real_eip !16 :          <3f>	retq
608 :   store i64 %278, i64* %RAX, !mcsema_real_eip !16 :          <3f>	retq
609 :   %279 = load i64* %RBX_val, !mcsema_real_eip !16 :          <3f>	retq
610 :   store i64 %279, i64* %RBX, !mcsema_real_eip !16 :          <3f>	retq
611 :   %280 = load i64* %RCX_val, !mcsema_real_eip !16 :          <3f>	retq
612 :   store i64 %280, i64* %RCX, !mcsema_real_eip !16 :          <3f>	retq
613 :   %281 = load i64* %RDX_val, !mcsema_real_eip !16 :          <3f>	retq
614 :   store i64 %281, i64* %RDX, !mcsema_real_eip !16 :          <3f>	retq
615 :   %282 = load i64* %RSI_val, !mcsema_real_eip !16 :          <3f>	retq
616 :   store i64 %282, i64* %RSI, !mcsema_real_eip !16 :          <3f>	retq
617 :   %283 = load i64* %RDI_val, !mcsema_real_eip !16 :          <3f>	retq
618 :   store i64 %283, i64* %RDI, !mcsema_real_eip !16 :          <3f>	retq
619 :   %284 = load i64* %RSP_val, !mcsema_real_eip !16 :          <3f>	retq
620 :   store i64 %284, i64* %RSP, !mcsema_real_eip !16 :          <3f>	retq
621 :   %285 = load i64* %RBP_val, !mcsema_real_eip !16 :          <3f>	retq
622 :   store i64 %285, i64* %RBP, !mcsema_real_eip !16 :          <3f>	retq
623 :   %286 = load i64* %R8_val, !mcsema_real_eip !16 :          <3f>	retq
624 :   store i64 %286, i64* %R8, !mcsema_real_eip !16 :          <3f>	retq
625 :   %287 = load i64* %R9_val, !mcsema_real_eip !16 :          <3f>	retq
626 :   store i64 %287, i64* %R9, !mcsema_real_eip !16 :          <3f>	retq
627 :   %288 = load i64* %R10_val, !mcsema_real_eip !16 :          <3f>	retq
628 :   store i64 %288, i64* %R10, !mcsema_real_eip !16 :          <3f>	retq
629 :   %289 = load i64* %R11_val, !mcsema_real_eip !16 :          <3f>	retq
630 :   store i64 %289, i64* %R11, !mcsema_real_eip !16 :          <3f>	retq
631 :   %290 = load i64* %R12_val, !mcsema_real_eip !16 :          <3f>	retq
632 :   store i64 %290, i64* %R12, !mcsema_real_eip !16 :          <3f>	retq
633 :   %291 = load i64* %R13_val, !mcsema_real_eip !16 :          <3f>	retq
634 :   store i64 %291, i64* %R13, !mcsema_real_eip !16 :          <3f>	retq
635 :   %292 = load i64* %R14_val, !mcsema_real_eip !16 :          <3f>	retq
636 :   store i64 %292, i64* %R14, !mcsema_real_eip !16 :          <3f>	retq
637 :   %293 = load i64* %R15_val, !mcsema_real_eip !16 :          <3f>	retq
638 :   store i64 %293, i64* %R15, !mcsema_real_eip !16 :          <3f>	retq
639 :   %294 = load i64* %RIP_val, !mcsema_real_eip !16 :          <3f>	retq
640 :   store i64 %294, i64* %RIP, !mcsema_real_eip !16 :          <3f>	retq
641 :   %295 = load i1* %CF_val, !mcsema_real_eip !16 :          <3f>	retq
642 :   store i1 %295, i1* %CF, align 1, !mcsema_real_eip !16 :          <3f>	retq
643 :   %296 = load i1* %PF_val, !mcsema_real_eip !16 :          <3f>	retq
644 :   store i1 %296, i1* %PF, align 1, !mcsema_real_eip !16 :          <3f>	retq
645 :   %297 = load i1* %AF_val, !mcsema_real_eip !16 :          <3f>	retq
646 :   store i1 %297, i1* %AF, align 1, !mcsema_real_eip !16 :          <3f>	retq
647 :   %298 = load i1* %ZF_val, !mcsema_real_eip !16 :          <3f>	retq
648 :   store i1 %298, i1* %ZF, align 1, !mcsema_real_eip !16 :          <3f>	retq
649 :   %299 = load i1* %SF_val, !mcsema_real_eip !16 :          <3f>	retq
650 :   store i1 %299, i1* %SF, align 1, !mcsema_real_eip !16 :          <3f>	retq
651 :   %300 = load i1* %OF_val, !mcsema_real_eip !16 :          <3f>	retq
652 :   store i1 %300, i1* %OF, align 1, !mcsema_real_eip !16 :          <3f>	retq
653 :   %301 = load i1* %DF_val, !mcsema_real_eip !16 :          <3f>	retq
654 :   store i1 %301, i1* %DF, align 1, !mcsema_real_eip !16 :          <3f>	retq
655 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !16 :          <3f>	retq
656 :   %302 = load i1* %FPU_B_val, !mcsema_real_eip !16 :          <3f>	retq
657 :   store i1 %302, i1* %FPU_B, align 1, !mcsema_real_eip !16 :          <3f>	retq
658 :   %303 = load i1* %FPU_C3_val, !mcsema_real_eip !16 :          <3f>	retq
659 :   store i1 %303, i1* %FPU_C3, align 1, !mcsema_real_eip !16 :          <3f>	retq
660 :   %304 = load i3* %FPU_TOP_val, !mcsema_real_eip !16 :          <3f>	retq
661 :   store i3 %304, i3* %FPU_TOP, align 1, !mcsema_real_eip !16 :          <3f>	retq
662 :   %305 = load i1* %FPU_C2_val, !mcsema_real_eip !16 :          <3f>	retq
663 :   store i1 %305, i1* %FPU_C2, align 1, !mcsema_real_eip !16 :          <3f>	retq
664 :   %306 = load i1* %FPU_C1_val, !mcsema_real_eip !16 :          <3f>	retq
665 :   store i1 %306, i1* %FPU_C1, align 1, !mcsema_real_eip !16 :          <3f>	retq
666 :   %307 = load i1* %FPU_C0_val, !mcsema_real_eip !16 :          <3f>	retq
667 :   store i1 %307, i1* %FPU_C0, align 1, !mcsema_real_eip !16 :          <3f>	retq
668 :   %308 = load i1* %FPU_ES_val, !mcsema_real_eip !16 :          <3f>	retq
669 :   store i1 %308, i1* %FPU_ES, align 1, !mcsema_real_eip !16 :          <3f>	retq
670 :   %309 = load i1* %FPU_SF_val, !mcsema_real_eip !16 :          <3f>	retq
671 :   store i1 %309, i1* %FPU_SF, align 1, !mcsema_real_eip !16 :          <3f>	retq
672 :   %310 = load i1* %FPU_PE_val, !mcsema_real_eip !16 :          <3f>	retq
673 :   store i1 %310, i1* %FPU_PE, align 1, !mcsema_real_eip !16 :          <3f>	retq
674 :   %311 = load i1* %FPU_UE_val, !mcsema_real_eip !16 :          <3f>	retq
675 :   store i1 %311, i1* %FPU_UE, align 1, !mcsema_real_eip !16 :          <3f>	retq
676 :   %312 = load i1* %FPU_OE_val, !mcsema_real_eip !16 :          <3f>	retq
677 :   store i1 %312, i1* %FPU_OE, align 1, !mcsema_real_eip !16 :          <3f>	retq
678 :   %313 = load i1* %FPU_ZE_val, !mcsema_real_eip !16 :          <3f>	retq
679 :   store i1 %313, i1* %FPU_ZE, align 1, !mcsema_real_eip !16 :          <3f>	retq
680 :   %314 = load i1* %FPU_DE_val, !mcsema_real_eip !16 :          <3f>	retq
681 :   store i1 %314, i1* %FPU_DE, align 1, !mcsema_real_eip !16 :          <3f>	retq
682 :   %315 = load i1* %FPU_IE_val, !mcsema_real_eip !16 :          <3f>	retq
683 :   store i1 %315, i1* %FPU_IE, align 1, !mcsema_real_eip !16 :          <3f>	retq
684 :   %316 = load i1* %FPU_X_val, !mcsema_real_eip !16 :          <3f>	retq
685 :   store i1 %316, i1* %FPU_X, align 1, !mcsema_real_eip !16 :          <3f>	retq
686 :   %317 = load i2* %FPU_RC_val, !mcsema_real_eip !16 :          <3f>	retq
687 :   store i2 %317, i2* %FPU_RC, align 1, !mcsema_real_eip !16 :          <3f>	retq
688 :   %318 = load i2* %FPU_PC_val, !mcsema_real_eip !16 :          <3f>	retq
689 :   store i2 %318, i2* %FPU_PC, align 1, !mcsema_real_eip !16 :          <3f>	retq
690 :   %319 = load i1* %FPU_PM_val, !mcsema_real_eip !16 :          <3f>	retq
691 :   store i1 %319, i1* %FPU_PM, align 1, !mcsema_real_eip !16 :          <3f>	retq
692 :   %320 = load i1* %FPU_UM_val, !mcsema_real_eip !16 :          <3f>	retq
693 :   store i1 %320, i1* %FPU_UM, align 1, !mcsema_real_eip !16 :          <3f>	retq
694 :   %321 = load i1* %FPU_OM_val, !mcsema_real_eip !16 :          <3f>	retq
695 :   store i1 %321, i1* %FPU_OM, align 1, !mcsema_real_eip !16 :          <3f>	retq
696 :   %322 = load i1* %FPU_ZM_val, !mcsema_real_eip !16 :          <3f>	retq
697 :   store i1 %322, i1* %FPU_ZM, align 1, !mcsema_real_eip !16 :          <3f>	retq
698 :   %323 = load i1* %FPU_DM_val, !mcsema_real_eip !16 :          <3f>	retq
699 :   store i1 %323, i1* %FPU_DM, align 1, !mcsema_real_eip !16 :          <3f>	retq
700 :   %324 = load i1* %FPU_IM_val, !mcsema_real_eip !16 :          <3f>	retq
701 :   store i1 %324, i1* %FPU_IM, align 1, !mcsema_real_eip !16 :          <3f>	retq

702 :   %325 = load i64* %53, align 4 : NIL
703 :   store i64 %325, i64* %52, align 4 : NIL

704 :   %326 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !16 :          <3f>	retq
705 :   store i16 %326, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !16 :          <3f>	retq
706 :   %327 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !16 :          <3f>	retq
707 :   store i64 %327, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !16 :          <3f>	retq
708 :   %328 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !16 :          <3f>	retq
709 :   store i16 %328, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !16 :          <3f>	retq
710 :   %329 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !16 :          <3f>	retq
711 :   store i64 %329, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !16 :          <3f>	retq
712 :   %330 = load i128* %XMM0_val, !mcsema_real_eip !16 :          <3f>	retq
713 :   store i128 %330, i128* %XMM0, align 1, !mcsema_real_eip !16 :          <3f>	retq
714 :   %331 = load i128* %XMM1_val, !mcsema_real_eip !16 :          <3f>	retq
715 :   store i128 %331, i128* %XMM1, align 1, !mcsema_real_eip !16 :          <3f>	retq
716 :   %332 = load i128* %XMM2_val, !mcsema_real_eip !16 :          <3f>	retq
717 :   store i128 %332, i128* %XMM2, align 1, !mcsema_real_eip !16 :          <3f>	retq
718 :   %333 = load i128* %XMM3_val, !mcsema_real_eip !16 :          <3f>	retq
719 :   store i128 %333, i128* %XMM3, align 1, !mcsema_real_eip !16 :          <3f>	retq
720 :   %334 = load i128* %XMM4_val, !mcsema_real_eip !16 :          <3f>	retq
721 :   store i128 %334, i128* %XMM4, align 1, !mcsema_real_eip !16 :          <3f>	retq
722 :   %335 = load i128* %XMM5_val, !mcsema_real_eip !16 :          <3f>	retq
723 :   store i128 %335, i128* %XMM5, align 1, !mcsema_real_eip !16 :          <3f>	retq
724 :   %336 = load i128* %XMM6_val, !mcsema_real_eip !16 :          <3f>	retq
725 :   store i128 %336, i128* %XMM6, align 1, !mcsema_real_eip !16 :          <3f>	retq
726 :   %337 = load i128* %XMM7_val, !mcsema_real_eip !16 :          <3f>	retq
727 :   store i128 %337, i128* %XMM7, align 1, !mcsema_real_eip !16 :          <3f>	retq
728 :   %338 = load i128* %XMM8_val, !mcsema_real_eip !16 :          <3f>	retq
729 :   store i128 %338, i128* %XMM8, align 1, !mcsema_real_eip !16 :          <3f>	retq
730 :   %339 = load i128* %XMM9_val, !mcsema_real_eip !16 :          <3f>	retq
731 :   store i128 %339, i128* %XMM9, align 1, !mcsema_real_eip !16 :          <3f>	retq
732 :   %340 = load i128* %XMM10_val, !mcsema_real_eip !16 :          <3f>	retq
733 :   store i128 %340, i128* %XMM10, align 1, !mcsema_real_eip !16 :          <3f>	retq
734 :   %341 = load i128* %XMM11_val, !mcsema_real_eip !16 :          <3f>	retq
735 :   store i128 %341, i128* %XMM11, align 1, !mcsema_real_eip !16 :          <3f>	retq
736 :   %342 = load i128* %XMM12_val, !mcsema_real_eip !16 :          <3f>	retq
737 :   store i128 %342, i128* %XMM12, align 1, !mcsema_real_eip !16 :          <3f>	retq
738 :   %343 = load i128* %XMM13_val, !mcsema_real_eip !16 :          <3f>	retq
739 :   store i128 %343, i128* %XMM13, align 1, !mcsema_real_eip !16 :          <3f>	retq
740 :   %344 = load i128* %XMM14_val, !mcsema_real_eip !16 :          <3f>	retq
741 :   store i128 %344, i128* %XMM14, align 1, !mcsema_real_eip !16 :          <3f>	retq
742 :   %345 = load i128* %XMM15_val, !mcsema_real_eip !16 :          <3f>	retq
743 :   store i128 %345, i128* %XMM15, align 1, !mcsema_real_eip !16 :          <3f>	retq
744 :   %346 = load i64* %STACK_BASE_val, !mcsema_real_eip !16 :          <3f>	retq
745 :   store i64 %346, i64* %STACK_BASE, align 1, !mcsema_real_eip !16 :          <3f>	retq
746 :   %347 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !16 :          <3f>	retq
747 :   store i64 %347, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !16 :          <3f>	retq
748 :   ret void, !mcsema_real_eip !16 :          <3f>	retq
========================================================
Source line mapping for function: mcsema_main
========================================================

1 :   tail call x86_64_sysvcc void @sub_0(%struct.regs* %0) : NIL
2 :   ret void : NIL
