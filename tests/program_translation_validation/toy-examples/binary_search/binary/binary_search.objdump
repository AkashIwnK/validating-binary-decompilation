
binary/binary_search.bin:     file format elf64-x86-64


Disassembly of section .init:

0000000000000558 <_init>:
 558:	48 83 ec 08          	sub    $0x8,%rsp
 55c:	48 8b 05 7d 0a 20 00 	mov    0x200a7d(%rip),%rax        # 200fe0 <__gmon_start__>
 563:	48 85 c0             	test   %rax,%rax
 566:	74 02                	je     56a <_init+0x12>
 568:	ff d0                	callq  *%rax
 56a:	48 83 c4 08          	add    $0x8,%rsp
 56e:	c3                   	retq   

Disassembly of section .plt:

0000000000000570 <.plt>:
 570:	ff 35 42 0a 20 00    	pushq  0x200a42(%rip)        # 200fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
 576:	ff 25 44 0a 20 00    	jmpq   *0x200a44(%rip)        # 200fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
 57c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000000580 <.plt.got>:
 580:	ff 25 4a 0a 20 00    	jmpq   *0x200a4a(%rip)        # 200fd0 <__stack_chk_fail@GLIBC_2.4>
 586:	66 90                	xchg   %ax,%ax
 588:	ff 25 6a 0a 20 00    	jmpq   *0x200a6a(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 58e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000590 <_start>:
 590:	31 ed                	xor    %ebp,%ebp
 592:	49 89 d1             	mov    %rdx,%r9
 595:	5e                   	pop    %rsi
 596:	48 89 e2             	mov    %rsp,%rdx
 599:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 59d:	50                   	push   %rax
 59e:	54                   	push   %rsp
 59f:	4c 8d 05 8a 02 00 00 	lea    0x28a(%rip),%r8        # 830 <__libc_csu_fini>
 5a6:	48 8d 0d 13 02 00 00 	lea    0x213(%rip),%rcx        # 7c0 <__libc_csu_init>
 5ad:	48 8d 3d a3 01 00 00 	lea    0x1a3(%rip),%rdi        # 757 <main>
 5b4:	ff 15 1e 0a 20 00    	callq  *0x200a1e(%rip)        # 200fd8 <__libc_start_main@GLIBC_2.2.5>
 5ba:	f4                   	hlt    
 5bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000005c0 <deregister_tm_clones>:
 5c0:	48 8d 3d 49 0a 20 00 	lea    0x200a49(%rip),%rdi        # 201010 <__TMC_END__>
 5c7:	48 8d 05 49 0a 20 00 	lea    0x200a49(%rip),%rax        # 201017 <__TMC_END__+0x7>
 5ce:	55                   	push   %rbp
 5cf:	48 29 f8             	sub    %rdi,%rax
 5d2:	48 89 e5             	mov    %rsp,%rbp
 5d5:	48 83 f8 0e          	cmp    $0xe,%rax
 5d9:	76 15                	jbe    5f0 <deregister_tm_clones+0x30>
 5db:	48 8b 05 e6 09 20 00 	mov    0x2009e6(%rip),%rax        # 200fc8 <_ITM_deregisterTMCloneTable>
 5e2:	48 85 c0             	test   %rax,%rax
 5e5:	74 09                	je     5f0 <deregister_tm_clones+0x30>
 5e7:	5d                   	pop    %rbp
 5e8:	ff e0                	jmpq   *%rax
 5ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 5f0:	5d                   	pop    %rbp
 5f1:	c3                   	retq   
 5f2:	0f 1f 40 00          	nopl   0x0(%rax)
 5f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 5fd:	00 00 00 

0000000000000600 <register_tm_clones>:
 600:	48 8d 3d 09 0a 20 00 	lea    0x200a09(%rip),%rdi        # 201010 <__TMC_END__>
 607:	48 8d 35 02 0a 20 00 	lea    0x200a02(%rip),%rsi        # 201010 <__TMC_END__>
 60e:	55                   	push   %rbp
 60f:	48 29 fe             	sub    %rdi,%rsi
 612:	48 89 e5             	mov    %rsp,%rbp
 615:	48 c1 fe 03          	sar    $0x3,%rsi
 619:	48 89 f0             	mov    %rsi,%rax
 61c:	48 c1 e8 3f          	shr    $0x3f,%rax
 620:	48 01 c6             	add    %rax,%rsi
 623:	48 d1 fe             	sar    %rsi
 626:	74 18                	je     640 <register_tm_clones+0x40>
 628:	48 8b 05 c1 09 20 00 	mov    0x2009c1(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 62f:	48 85 c0             	test   %rax,%rax
 632:	74 0c                	je     640 <register_tm_clones+0x40>
 634:	5d                   	pop    %rbp
 635:	ff e0                	jmpq   *%rax
 637:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 63e:	00 00 
 640:	5d                   	pop    %rbp
 641:	c3                   	retq   
 642:	0f 1f 40 00          	nopl   0x0(%rax)
 646:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 64d:	00 00 00 

0000000000000650 <__do_global_dtors_aux>:
 650:	80 3d b9 09 20 00 00 	cmpb   $0x0,0x2009b9(%rip)        # 201010 <__TMC_END__>
 657:	75 27                	jne    680 <__do_global_dtors_aux+0x30>
 659:	48 83 3d 97 09 20 00 	cmpq   $0x0,0x200997(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 660:	00 
 661:	55                   	push   %rbp
 662:	48 89 e5             	mov    %rsp,%rbp
 665:	74 0c                	je     673 <__do_global_dtors_aux+0x23>
 667:	48 8b 3d 9a 09 20 00 	mov    0x20099a(%rip),%rdi        # 201008 <__dso_handle>
 66e:	e8 15 ff ff ff       	callq  588 <.plt.got+0x8>
 673:	e8 48 ff ff ff       	callq  5c0 <deregister_tm_clones>
 678:	5d                   	pop    %rbp
 679:	c6 05 90 09 20 00 01 	movb   $0x1,0x200990(%rip)        # 201010 <__TMC_END__>
 680:	f3 c3                	repz retq 
 682:	0f 1f 40 00          	nopl   0x0(%rax)
 686:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 68d:	00 00 00 

0000000000000690 <frame_dummy>:
 690:	48 8d 3d 51 07 20 00 	lea    0x200751(%rip),%rdi        # 200de8 <__JCR_END__>
 697:	48 83 3f 00          	cmpq   $0x0,(%rdi)
 69b:	75 0b                	jne    6a8 <frame_dummy+0x18>
 69d:	e9 5e ff ff ff       	jmpq   600 <register_tm_clones>
 6a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 6a8:	48 8b 05 39 09 20 00 	mov    0x200939(%rip),%rax        # 200fe8 <_Jv_RegisterClasses>
 6af:	48 85 c0             	test   %rax,%rax
 6b2:	74 e9                	je     69d <frame_dummy+0xd>
 6b4:	55                   	push   %rbp
 6b5:	48 89 e5             	mov    %rsp,%rbp
 6b8:	ff d0                	callq  *%rax
 6ba:	5d                   	pop    %rbp
 6bb:	e9 40 ff ff ff       	jmpq   600 <register_tm_clones>

00000000000006c0 <binary_search>:
 6c0:	55                   	push   %rbp
 6c1:	48 89 e5             	mov    %rsp,%rbp
 6c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 6c8:	89 75 e4             	mov    %esi,-0x1c(%rbp)
 6cb:	89 55 e0             	mov    %edx,-0x20(%rbp)
 6ce:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
 6d5:	8b 45 e4             	mov    -0x1c(%rbp),%eax
 6d8:	83 e8 01             	sub    $0x1,%eax
 6db:	89 45 f8             	mov    %eax,-0x8(%rbp)
 6de:	eb 68                	jmp    748 <binary_search+0x88>

 6e0:	8b 45 f8             	mov    -0x8(%rbp),%eax
 6e3:	2b 45 f4             	sub    -0xc(%rbp),%eax
 6e6:	89 c2                	mov    %eax,%edx
 6e8:	c1 ea 1f             	shr    $0x1f,%edx
 6eb:	01 d0                	add    %edx,%eax
 6ed:	d1 f8                	sar    %eax
 6ef:	89 c2                	mov    %eax,%edx
 6f1:	8b 45 f4             	mov    -0xc(%rbp),%eax
 6f4:	01 d0                	add    %edx,%eax
 6f6:	89 45 fc             	mov    %eax,-0x4(%rbp)
 6f9:	8b 45 fc             	mov    -0x4(%rbp),%eax
 6fc:	48 98                	cltq   
 6fe:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 705:	00 
 706:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 70a:	48 01 d0             	add    %rdx,%rax
 70d:	8b 00                	mov    (%rax),%eax
 70f:	3b 45 e0             	cmp    -0x20(%rbp),%eax
 712:	75 05                	jne    719 <binary_search+0x59>

 714:	8b 45 fc             	mov    -0x4(%rbp),%eax
 717:	eb 3c                	jmp    755 <binary_search+0x95>

 719:	8b 45 fc             	mov    -0x4(%rbp),%eax
 71c:	48 98                	cltq   
 71e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 725:	00 
 726:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 72a:	48 01 d0             	add    %rdx,%rax
 72d:	8b 00                	mov    (%rax),%eax
 72f:	3b 45 e0             	cmp    -0x20(%rbp),%eax
 732:	7d 0b                	jge    73f <binary_search+0x7f>

 734:	8b 45 fc             	mov    -0x4(%rbp),%eax
 737:	83 c0 01             	add    $0x1,%eax
 73a:	89 45 f4             	mov    %eax,-0xc(%rbp)
 73d:	eb 09                	jmp    748 <binary_search+0x88>

 73f:	8b 45 fc             	mov    -0x4(%rbp),%eax
 742:	83 e8 01             	sub    $0x1,%eax
 745:	89 45 f8             	mov    %eax,-0x8(%rbp)

 748:	8b 45 f4             	mov    -0xc(%rbp),%eax
 74b:	3b 45 f8             	cmp    -0x8(%rbp),%eax
 74e:	7c 90                	jl     6e0 <binary_search+0x20>
 750:	b8 ff ff ff ff       	mov    $0xffffffff,%eax

 755:	5d                   	pop    %rbp
 756:	c3                   	retq   

0000000000000757 <main>:
 757:	55                   	push   %rbp
 758:	48 89 e5             	mov    %rsp,%rbp
 75b:	48 83 ec 20          	sub    $0x20,%rsp
 75f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 766:	00 00 
 768:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 76c:	31 c0                	xor    %eax,%eax
 76e:	c7 45 e0 28 00 00 00 	movl   $0x28,-0x20(%rbp)
 775:	c7 45 e4 1e 00 00 00 	movl   $0x1e,-0x1c(%rbp)
 77c:	c7 45 e8 14 00 00 00 	movl   $0x14,-0x18(%rbp)
 783:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%rbp)
 78a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 78e:	ba 1e 00 00 00       	mov    $0x1e,%edx
 793:	be 04 00 00 00       	mov    $0x4,%esi
 798:	48 89 c7             	mov    %rax,%rdi
 79b:	e8 20 ff ff ff       	callq  6c0 <binary_search>
 7a0:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 7a4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
 7ab:	00 00 
 7ad:	74 05                	je     7b4 <main+0x5d>
 7af:	e8 cc fd ff ff       	callq  580 <.plt.got>
 7b4:	c9                   	leaveq 
 7b5:	c3                   	retq   
 7b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 7bd:	00 00 00 

00000000000007c0 <__libc_csu_init>:
 7c0:	41 57                	push   %r15
 7c2:	41 56                	push   %r14
 7c4:	41 89 ff             	mov    %edi,%r15d
 7c7:	41 55                	push   %r13
 7c9:	41 54                	push   %r12
 7cb:	4c 8d 25 06 06 20 00 	lea    0x200606(%rip),%r12        # 200dd8 <__frame_dummy_init_array_entry>
 7d2:	55                   	push   %rbp
 7d3:	48 8d 2d 06 06 20 00 	lea    0x200606(%rip),%rbp        # 200de0 <__init_array_end>
 7da:	53                   	push   %rbx
 7db:	49 89 f6             	mov    %rsi,%r14
 7de:	49 89 d5             	mov    %rdx,%r13
 7e1:	4c 29 e5             	sub    %r12,%rbp
 7e4:	48 83 ec 08          	sub    $0x8,%rsp
 7e8:	48 c1 fd 03          	sar    $0x3,%rbp
 7ec:	e8 67 fd ff ff       	callq  558 <_init>
 7f1:	48 85 ed             	test   %rbp,%rbp
 7f4:	74 20                	je     816 <__libc_csu_init+0x56>
 7f6:	31 db                	xor    %ebx,%ebx
 7f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 7ff:	00 
 800:	4c 89 ea             	mov    %r13,%rdx
 803:	4c 89 f6             	mov    %r14,%rsi
 806:	44 89 ff             	mov    %r15d,%edi
 809:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 80d:	48 83 c3 01          	add    $0x1,%rbx
 811:	48 39 dd             	cmp    %rbx,%rbp
 814:	75 ea                	jne    800 <__libc_csu_init+0x40>
 816:	48 83 c4 08          	add    $0x8,%rsp
 81a:	5b                   	pop    %rbx
 81b:	5d                   	pop    %rbp
 81c:	41 5c                	pop    %r12
 81e:	41 5d                	pop    %r13
 820:	41 5e                	pop    %r14
 822:	41 5f                	pop    %r15
 824:	c3                   	retq   
 825:	90                   	nop
 826:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 82d:	00 00 00 

0000000000000830 <__libc_csu_fini>:
 830:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000834 <_fini>:
 834:	48 83 ec 08          	sub    $0x8,%rsp
 838:	48 83 c4 08          	add    $0x8,%rsp
 83c:	c3                   	retq   
