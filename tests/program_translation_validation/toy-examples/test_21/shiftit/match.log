Matching sub_400520_shiftit Vs shiftit


[Info] Retrieve Potential Matches...
[0x55fd5a58c5c0]:   store i64 %39, i64* %RDI, align 8, !tbaa !1257 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a58c640]:   store i64 %39, i64* %RCX, align 8, !tbaa !1257 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a58c6c0]:   %44 = add i64 %35, 14 {
	[0x55fd5a5fa9d0]:  %45 = add i64 %36, 14
	}

[0x55fd5a58c740]:   store i64 %44, i64* %PC, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a5951c0]: %struct.State* %0 {
	[0x55fd5a5f8fc0]:%struct.State.0* %0
	}

[0x55fd5a597360]:   store i64 %91, i64* %6, align 8, !tbaa !1257 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a5973e0]:   %94 = add i64 %88, 2 {
	[0x55fd5a5f66b0]:  %95 = add i64 %89, 2
	}

[0x55fd5a597460]:   store i64 %94, i64* %PC, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a5974c8]:   %95 = inttoptr i64 %91 to i64* {
	[0x55fd5a5c87f8]:  %9 = inttoptr i64 %8 to i64*
	[0x55fd5a5cfb28]:  %15 = inttoptr i64 %12 to i32*
	[0x55fd5a5d0378]:  %21 = inttoptr i64 %17 to i64*
	[0x55fd5a5d1418]:  %29 = inttoptr i64 %27 to i64*
	[0x55fd5a5d1678]:  %33 = inttoptr i64 %31 to i64*
	[0x55fd5a5d2218]:  %81 = inttoptr i64 %78 to i64*
	[0x55fd5a5d2728]:  %38 = inttoptr i64 %35 to i32*
	[0x55fd5a5d3308]:  %43 = inttoptr i64 %41 to i64*
	[0x55fd5a5d7c38]:  %85 = inttoptr i64 %83 to i64*
	[0x55fd5a5dabb8]:  %88 = inttoptr i64 %86 to i64*
	[0x55fd5a5dc4a8]:  %93 = inttoptr i64 %91 to i64*
	[0x55fd5a5dcbc8]:  %96 = inttoptr i64 %92 to i64*
	[0x55fd5a5eadc8]:  %26 = inttoptr i64 %23 to i64*
	}

[0x55fd5a597528]:   %96 = load i64, i64* %95, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a5975a0]:   store i64 %96, i64* %PC, align 8, !tbaa !1257 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a597620]:   %97 = add i64 %90, 16 {
	[0x55fd5a5ed7b0]:  %98 = add i64 %91, 16
	}

[0x55fd5a5976a0]:   store i64 %97, i64* %6, align 8, !tbaa !1257 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a597708]:   ret %struct.Memory* %2 {
	[0x55fd5a5dd2e8]:  ret %struct.Memory.31* %2
	}

[0x55fd5a59b870]: i64 %1 {
	[0x55fd5a5f1120]:i64 %1
	}

[0x55fd5a59bad0]: %struct.Memory* %2 {
	[0x55fd5a5f12a0]:%struct.Memory.31* %2
	}

[0x55fd5a59bc58]:   %EDI = bitcast %union.anon* %3 to i32* {
	[0x55fd5a5caac8]:  %EDI.i37 = bitcast %union.anon.4* %11 to i32*
	}

[0x55fd5a59bd30]:   %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0 {
	[0x55fd5a5709f0]:  %3 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 33, i32 0, i32 0
	}

[0x55fd5a59be08]:   %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0 {
	[0x55fd5a530d58]:  %11 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 11, i32 0
	}

[0x55fd5a59bef0]:   %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0 {
	[0x55fd5a5730a0]:  %RAX.i6 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 1, i32 0, i32 0
	}

[0x55fd5a59c000]:   %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0 {
	[0x55fd5a5721c0]:  %RCX.i = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 5, i32 0, i32 0
	}

[0x55fd5a59c110]:   %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0 {
	[0x55fd5a571aa0]:  %RSI.i34 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 9, i32 0, i32 0
	}

[0x55fd5a59c1d8]:   %RDI = getelementptr inbounds %union.anon, %union.anon* %3, i64 0, i32 0 {
	[0x55fd5a53c048]:  %RDI.i23 = getelementptr inbounds %union.anon.4, %union.anon.4* %11, i64 0, i32 0
	}

[0x55fd5a59c2e0]:   %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0 {
	[0x55fd5a570f80]:  %RBP.i = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 15, i32 0, i32 0
	}

[0x55fd5a59c378]:   %4 = load i64, i64* %RBP, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a59c440]:   %5 = add i64 %1, 1 {
	[0x55fd5a53bf80]:  %5 = add i64 %1, 1
	[0x55fd5a5f3b20]:  %90 = add i64 %89, 1
	}

[0x55fd5a59c4c0]:   store i64 %5, i64* %PC, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59c5a0]:   %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0 {
	[0x55fd5a5716a0]:  %6 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 13, i32 0, i32 0
	}

[0x55fd5a59c618]:   %7 = load i64, i64* %6, align 8, !tbaa !1257 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a59c690]:   %8 = add i64 %7, -8 {
	[0x55fd5a524730]:  %8 = add i64 %7, -8
	}

[0x55fd5a59c6f8]:   %17 = load i64, i64* %RSI, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a59c788]:   %9 = inttoptr i64 %8 to i64* {
	[0x55fd5a5c87f8]:  %9 = inttoptr i64 %8 to i64*
	[0x55fd5a5cfb28]:  %15 = inttoptr i64 %12 to i32*
	[0x55fd5a5d0378]:  %21 = inttoptr i64 %17 to i64*
	[0x55fd5a5d1418]:  %29 = inttoptr i64 %27 to i64*
	[0x55fd5a5d1678]:  %33 = inttoptr i64 %31 to i64*
	[0x55fd5a5d2218]:  %81 = inttoptr i64 %78 to i64*
	[0x55fd5a5d2728]:  %38 = inttoptr i64 %35 to i32*
	[0x55fd5a5d3308]:  %43 = inttoptr i64 %41 to i64*
	[0x55fd5a5d7c38]:  %85 = inttoptr i64 %83 to i64*
	[0x55fd5a5dabb8]:  %88 = inttoptr i64 %86 to i64*
	[0x55fd5a5dc4a8]:  %93 = inttoptr i64 %91 to i64*
	[0x55fd5a5dcbc8]:  %96 = inttoptr i64 %92 to i64*
	[0x55fd5a5eadc8]:  %26 = inttoptr i64 %23 to i64*
	}

[0x55fd5a59c800]:   store i64 %4, i64* %9, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59c880]:   store i64 %8, i64* %6, align 8, !tbaa !1257 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59c8e8]:   %10 = load i64, i64* %PC, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a59c960]:   store i64 %8, i64* %RBP, align 8, !tbaa !1257 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59ca20]:   %11 = add i64 %7, -12 {
	[0x55fd5a5cc5f0]:  %12 = add i64 %7, -12
	}

[0x55fd5a59ca88]:   %12 = load i32, i32* %EDI, align 4 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a59cb00]:   %13 = add i64 %10, 6 {
	[0x55fd5a5cab80]:  %14 = add i64 %10, 6
	}

[0x55fd5a59cb80]:   store i64 %13, i64* %PC, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59cbe8]:   %14 = inttoptr i64 %11 to i32* {
	[0x55fd5a5c87f8]:  %9 = inttoptr i64 %8 to i64*
	[0x55fd5a5cfb28]:  %15 = inttoptr i64 %12 to i32*
	[0x55fd5a5d0378]:  %21 = inttoptr i64 %17 to i64*
	[0x55fd5a5d1418]:  %29 = inttoptr i64 %27 to i64*
	[0x55fd5a5d1678]:  %33 = inttoptr i64 %31 to i64*
	[0x55fd5a5d2218]:  %81 = inttoptr i64 %78 to i64*
	[0x55fd5a5d2728]:  %38 = inttoptr i64 %35 to i32*
	[0x55fd5a5d3308]:  %43 = inttoptr i64 %41 to i64*
	[0x55fd5a5d7c38]:  %85 = inttoptr i64 %83 to i64*
	[0x55fd5a5dabb8]:  %88 = inttoptr i64 %86 to i64*
	[0x55fd5a5dc4a8]:  %93 = inttoptr i64 %91 to i64*
	[0x55fd5a5dcbc8]:  %96 = inttoptr i64 %92 to i64*
	[0x55fd5a5eadc8]:  %26 = inttoptr i64 %23 to i64*
	}

[0x55fd5a59cc60]:   store i32 %12, i32* %14, align 4 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59ccc8]:   %15 = load i64, i64* %RBP, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a59cd40]:   %16 = add i64 %15, -16 {
	[0x55fd5a5cd8c0]:  %17 = add i64 %16, -16
	[0x55fd5a5cdd40]:  %23 = add i64 %22, -16
	[0x55fd5a5f01b0]:  %83 = add i64 %77, -16
	}

[0x55fd5a59cdc0]:   store i64 %29, i64* %32, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59ce28]:   %33 = load i64, i64* %RBP, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a59ceb8]:   %18 = load i64, i64* %PC, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a59cf30]:   %19 = add i64 %18, 4 {
	[0x55fd5a5cd9d0]:  %20 = add i64 %19, 4
	[0x55fd5a5cdf20]:  %25 = add i64 %24, 4
	[0x55fd5a5ef910]:  %80 = add i64 %79, 4
	}

[0x55fd5a59cfb0]:   store i64 %19, i64* %PC, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59d018]:   %20 = inttoptr i64 %16 to i64* {
	[0x55fd5a5c87f8]:  %9 = inttoptr i64 %8 to i64*
	[0x55fd5a5cfb28]:  %15 = inttoptr i64 %12 to i32*
	[0x55fd5a5d0378]:  %21 = inttoptr i64 %17 to i64*
	[0x55fd5a5d1418]:  %29 = inttoptr i64 %27 to i64*
	[0x55fd5a5d1678]:  %33 = inttoptr i64 %31 to i64*
	[0x55fd5a5d2218]:  %81 = inttoptr i64 %78 to i64*
	[0x55fd5a5d2728]:  %38 = inttoptr i64 %35 to i32*
	[0x55fd5a5d3308]:  %43 = inttoptr i64 %41 to i64*
	[0x55fd5a5d7c38]:  %85 = inttoptr i64 %83 to i64*
	[0x55fd5a5dabb8]:  %88 = inttoptr i64 %86 to i64*
	[0x55fd5a5dc4a8]:  %93 = inttoptr i64 %91 to i64*
	[0x55fd5a5dcbc8]:  %96 = inttoptr i64 %92 to i64*
	[0x55fd5a5eadc8]:  %26 = inttoptr i64 %23 to i64*
	}

[0x55fd5a59d090]:   store i64 %17, i64* %20, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59d0f8]:   %21 = load i64, i64* %RBP, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a59d170]:   %22 = add i64 %21, -16 {
	[0x55fd5a5cd8c0]:  %17 = add i64 %16, -16
	[0x55fd5a5cdd40]:  %23 = add i64 %22, -16
	[0x55fd5a5f01b0]:  %83 = add i64 %77, -16
	}

[0x55fd5a59d1d8]:   %23 = load i64, i64* %PC, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a59d250]:   %24 = add i64 %23, 4 {
	[0x55fd5a5cd9d0]:  %20 = add i64 %19, 4
	[0x55fd5a5cdf20]:  %25 = add i64 %24, 4
	[0x55fd5a5ef910]:  %80 = add i64 %79, 4
	}

[0x55fd5a59d2d0]:   store i64 %24, i64* %PC, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59d338]:   %25 = inttoptr i64 %22 to i64* {
	[0x55fd5a5c87f8]:  %9 = inttoptr i64 %8 to i64*
	[0x55fd5a5cfb28]:  %15 = inttoptr i64 %12 to i32*
	[0x55fd5a5d0378]:  %21 = inttoptr i64 %17 to i64*
	[0x55fd5a5d1418]:  %29 = inttoptr i64 %27 to i64*
	[0x55fd5a5d1678]:  %33 = inttoptr i64 %31 to i64*
	[0x55fd5a5d2218]:  %81 = inttoptr i64 %78 to i64*
	[0x55fd5a5d2728]:  %38 = inttoptr i64 %35 to i32*
	[0x55fd5a5d3308]:  %43 = inttoptr i64 %41 to i64*
	[0x55fd5a5d7c38]:  %85 = inttoptr i64 %83 to i64*
	[0x55fd5a5dabb8]:  %88 = inttoptr i64 %86 to i64*
	[0x55fd5a5dc4a8]:  %93 = inttoptr i64 %91 to i64*
	[0x55fd5a5dcbc8]:  %96 = inttoptr i64 %92 to i64*
	[0x55fd5a5eadc8]:  %26 = inttoptr i64 %23 to i64*
	}

[0x55fd5a59d398]:   %26 = load i64, i64* %25, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a59d410]:   store i64 %26, i64* %RSI, align 8, !tbaa !1257 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59d490]:   %27 = add i64 %23, 7 {
	[0x55fd5a5cef50]:  %28 = add i64 %24, 7
	[0x55fd5a5d2120]:  %42 = add i64 %36, 7
	}

[0x55fd5a59d510]:   store i64 %27, i64* %PC, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59d578]:   %28 = inttoptr i64 %26 to i64* {
	[0x55fd5a5c87f8]:  %9 = inttoptr i64 %8 to i64*
	[0x55fd5a5cfb28]:  %15 = inttoptr i64 %12 to i32*
	[0x55fd5a5d0378]:  %21 = inttoptr i64 %17 to i64*
	[0x55fd5a5d1418]:  %29 = inttoptr i64 %27 to i64*
	[0x55fd5a5d1678]:  %33 = inttoptr i64 %31 to i64*
	[0x55fd5a5d2218]:  %81 = inttoptr i64 %78 to i64*
	[0x55fd5a5d2728]:  %38 = inttoptr i64 %35 to i32*
	[0x55fd5a5d3308]:  %43 = inttoptr i64 %41 to i64*
	[0x55fd5a5d7c38]:  %85 = inttoptr i64 %83 to i64*
	[0x55fd5a5dabb8]:  %88 = inttoptr i64 %86 to i64*
	[0x55fd5a5dc4a8]:  %93 = inttoptr i64 %91 to i64*
	[0x55fd5a5dcbc8]:  %96 = inttoptr i64 %92 to i64*
	[0x55fd5a5eadc8]:  %26 = inttoptr i64 %23 to i64*
	}

[0x55fd5a59d5d8]:   %29 = load i64, i64* %28, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a59d650]:   store i64 %29, i64* %RSI, align 8, !tbaa !1257 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59d6d0]:   %30 = add i64 %21, -24 {
	[0x55fd5a5cc9c0]:  %31 = add i64 %22, -24
	[0x55fd5a5ef050]:  %78 = add i64 %77, -24
	[0x55fd5a5f4c00]:  %41 = add i64 %34, -24
	}

[0x55fd5a59d750]:   %31 = add i64 %23, 11 {
	[0x55fd5a5e1a30]:  %32 = add i64 %24, 11
	[0x55fd5a5f2040]:  %87 = add i64 %79, 11
	}

[0x55fd5a59d7d0]:   store i64 %31, i64* %PC, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59d838]:   %32 = inttoptr i64 %30 to i64* {
	[0x55fd5a5c87f8]:  %9 = inttoptr i64 %8 to i64*
	[0x55fd5a5cfb28]:  %15 = inttoptr i64 %12 to i32*
	[0x55fd5a5d0378]:  %21 = inttoptr i64 %17 to i64*
	[0x55fd5a5d1418]:  %29 = inttoptr i64 %27 to i64*
	[0x55fd5a5d1678]:  %33 = inttoptr i64 %31 to i64*
	[0x55fd5a5d2218]:  %81 = inttoptr i64 %78 to i64*
	[0x55fd5a5d2728]:  %38 = inttoptr i64 %35 to i32*
	[0x55fd5a5d3308]:  %43 = inttoptr i64 %41 to i64*
	[0x55fd5a5d7c38]:  %85 = inttoptr i64 %83 to i64*
	[0x55fd5a5dabb8]:  %88 = inttoptr i64 %86 to i64*
	[0x55fd5a5dc4a8]:  %93 = inttoptr i64 %91 to i64*
	[0x55fd5a5dcbc8]:  %96 = inttoptr i64 %92 to i64*
	[0x55fd5a5eadc8]:  %26 = inttoptr i64 %23 to i64*
	}

[0x55fd5a59d898]:   %65 = trunc i32 %64 to i8 {
	[0x55fd5a5d3a28]:  %46 = trunc i32 %39 to i6
	[0x55fd5a5d4148]:  %49 = trunc i64 %48 to i8
	[0x55fd5a5d5dc8]:  %58 = trunc i64 %56 to i8
	[0x55fd5a5d5ef8]:  %63 = trunc i64 %60 to i32
	[0x55fd5a5d6158]:  %66 = trunc i32 %65 to i8
	}

[0x55fd5a59d910]:   %66 = and i8 %65, 1 {
	[0x55fd5a685960]:  %59 = and i8 %58, 1
	[0x55fd5a68eea0]:  %67 = and i8 %66, 1
	}

[0x55fd5a59d990]:   %67 = xor i8 %66, 1 {
	[0x55fd5a691e70]:  %68 = xor i8 %67, 1
	}

[0x55fd5a59da10]:   store i8 %67, i8* %61, align 1, !tbaa !1261 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59db00]:   %34 = add i64 %33, -4 {
	[0x55fd5a5f07b0]:  %35 = add i64 %34, -4
	}

[0x55fd5a59db68]:   %35 = load i64, i64* %PC, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a59dbe0]:   %36 = add i64 %35, 3 {
	[0x55fd5a5f1610]:  %37 = add i64 %36, 3
	}

[0x55fd5a59dc60]:   store i64 %36, i64* %PC, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59dcc8]:   %37 = inttoptr i64 %34 to i32* {
	[0x55fd5a5c87f8]:  %9 = inttoptr i64 %8 to i64*
	[0x55fd5a5cfb28]:  %15 = inttoptr i64 %12 to i32*
	[0x55fd5a5d0378]:  %21 = inttoptr i64 %17 to i64*
	[0x55fd5a5d1418]:  %29 = inttoptr i64 %27 to i64*
	[0x55fd5a5d1678]:  %33 = inttoptr i64 %31 to i64*
	[0x55fd5a5d2218]:  %81 = inttoptr i64 %78 to i64*
	[0x55fd5a5d2728]:  %38 = inttoptr i64 %35 to i32*
	[0x55fd5a5d3308]:  %43 = inttoptr i64 %41 to i64*
	[0x55fd5a5d7c38]:  %85 = inttoptr i64 %83 to i64*
	[0x55fd5a5dabb8]:  %88 = inttoptr i64 %86 to i64*
	[0x55fd5a5dc4a8]:  %93 = inttoptr i64 %91 to i64*
	[0x55fd5a5dcbc8]:  %96 = inttoptr i64 %92 to i64*
	[0x55fd5a5eadc8]:  %26 = inttoptr i64 %23 to i64*
	}

[0x55fd5a59dd28]:   %38 = load i32, i32* %37, align 4 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a59dd88]:   %39 = zext i32 %38 to i64 {
	[0x55fd5a5d31d8]:  %40 = zext i32 %39 to i64
	[0x55fd5a5d4d28]:  %52 = zext i32 %51 to i64
	[0x55fd5a5d6288]:  %72 = zext i1 %71 to i8
	}

[0x55fd5a59de00]:   store i64 %39, i64* %RDI, align 8, !tbaa !1257 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59de80]:   %40 = add i64 %33, -24 {
	[0x55fd5a5cc9c0]:  %31 = add i64 %22, -24
	[0x55fd5a5ef050]:  %78 = add i64 %77, -24
	[0x55fd5a5f4c00]:  %41 = add i64 %34, -24
	}

[0x55fd5a59df00]:   %41 = add i64 %35, 7 {
	[0x55fd5a5cef50]:  %28 = add i64 %24, 7
	[0x55fd5a5d2120]:  %42 = add i64 %36, 7
	}

[0x55fd5a59df80]:   store i64 %41, i64* %PC, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59dfe8]:   %42 = inttoptr i64 %40 to i64* {
	[0x55fd5a5c87f8]:  %9 = inttoptr i64 %8 to i64*
	[0x55fd5a5cfb28]:  %15 = inttoptr i64 %12 to i32*
	[0x55fd5a5d0378]:  %21 = inttoptr i64 %17 to i64*
	[0x55fd5a5d1418]:  %29 = inttoptr i64 %27 to i64*
	[0x55fd5a5d1678]:  %33 = inttoptr i64 %31 to i64*
	[0x55fd5a5d2218]:  %81 = inttoptr i64 %78 to i64*
	[0x55fd5a5d2728]:  %38 = inttoptr i64 %35 to i32*
	[0x55fd5a5d3308]:  %43 = inttoptr i64 %41 to i64*
	[0x55fd5a5d7c38]:  %85 = inttoptr i64 %83 to i64*
	[0x55fd5a5dabb8]:  %88 = inttoptr i64 %86 to i64*
	[0x55fd5a5dc4a8]:  %93 = inttoptr i64 %91 to i64*
	[0x55fd5a5dcbc8]:  %96 = inttoptr i64 %92 to i64*
	[0x55fd5a5eadc8]:  %26 = inttoptr i64 %23 to i64*
	}

[0x55fd5a59e048]:   %43 = load i64, i64* %42, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a59e0c0]:   store i64 %43, i64* %RSI, align 8, !tbaa !1257 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59ed38]:   %45 = trunc i32 %38 to i6 {
	[0x55fd5a5d3a28]:  %46 = trunc i32 %39 to i6
	[0x55fd5a5d4148]:  %49 = trunc i64 %48 to i8
	[0x55fd5a5d5dc8]:  %58 = trunc i64 %56 to i8
	[0x55fd5a5d5ef8]:  %63 = trunc i64 %60 to i32
	[0x55fd5a5d6158]:  %66 = trunc i32 %65 to i8
	}

[0x55fd5a59ee08]:   switch i6 %45, label %49 [
    i6 0, label %_ZN12_GLOBAL__N_1L3SHRI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i6 1, label %46
  ] {
	[0x55fd5a5d4008]:  switch i6 %46, label %50 [
    i6 0, label %routine_shrq__cl___rsi.exit
    i6 1, label %47
  ]
	}

[0x55fd5a59ef28]:   %74 = phi i64 [ %59, %54 ], [ %43, %block_400520 ] {
	[0x55fd5a5d3b48]:  %75 = phi i64 [ %60, %55 ], [ %44, %entry ]
	[0x55fd5a5d5b58]:  %56 = phi i64 [ %54, %50 ], [ %44, %47 ]
	[0x55fd5a5d5c88]:  %57 = phi i8 [ 0, %50 ], [ %49, %47 ]
	}

[0x55fd5a59ef98]:   %76 = load i64, i64* %RBP, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a59f180]:   %47 = lshr i64 %43, 63 {
	[0x55fd5a60ea60]:  %48 = lshr i64 %44, 63
	}

[0x55fd5a59f1e8]:   %48 = trunc i64 %47 to i8 {
	[0x55fd5a5d3a28]:  %46 = trunc i32 %39 to i6
	[0x55fd5a5d4148]:  %49 = trunc i64 %48 to i8
	[0x55fd5a5d5dc8]:  %58 = trunc i64 %56 to i8
	[0x55fd5a5d5ef8]:  %63 = trunc i64 %60 to i32
	[0x55fd5a5d6158]:  %66 = trunc i32 %65 to i8
	}

[0x55fd5a59f298]:   br label %54 {
	[0x55fd5a5d4bf8]:  br label %55
	[0x55fd5a5d5908]:  br label %55
	[0x55fd5a5d63b8]:  br label %routine_shrq__cl___rsi.exit
	}

[0x55fd5a59f310]:   %50 = and i32 %38, 63 {
	[0x55fd5a60b210]:  %51 = and i32 %39, 63
	}

[0x55fd5a59f378]:   %51 = zext i32 %50 to i64 {
	[0x55fd5a5d31d8]:  %40 = zext i32 %39 to i64
	[0x55fd5a5d4d28]:  %52 = zext i32 %51 to i64
	[0x55fd5a5d6288]:  %72 = zext i1 %71 to i8
	}

[0x55fd5a59f430]:   %52 = add nsw i64 %51, -1 {
	[0x55fd5a684650]:  %53 = add nsw i64 %52, -1
	}

[0x55fd5a59f4b0]:   %53 = lshr i64 %43, %52 {
	[0x55fd5a686e70]:  %54 = lshr i64 %44, %53
	}

[0x55fd5a59f518]:   br label %54 {
	[0x55fd5a5d4bf8]:  br label %55
	[0x55fd5a5d5908]:  br label %55
	[0x55fd5a5d63b8]:  br label %routine_shrq__cl___rsi.exit
	}

[0x55fd5a59f568]:   %55 = phi i64 [ %53, %49 ], [ %43, %46 ] {
	[0x55fd5a5d3b48]:  %75 = phi i64 [ %60, %55 ], [ %44, %entry ]
	[0x55fd5a5d5b58]:  %56 = phi i64 [ %54, %50 ], [ %44, %47 ]
	[0x55fd5a5d5c88]:  %57 = phi i8 [ 0, %50 ], [ %49, %47 ]
	}

[0x55fd5a59f618]:   %56 = phi i8 [ 0, %49 ], [ %48, %46 ] {
	[0x55fd5a5d3b48]:  %75 = phi i64 [ %60, %55 ], [ %44, %entry ]
	[0x55fd5a5d5b58]:  %56 = phi i64 [ %54, %50 ], [ %44, %47 ]
	[0x55fd5a5d5c88]:  %57 = phi i8 [ 0, %50 ], [ %49, %47 ]
	}

[0x55fd5a59f6d8]:   %57 = trunc i64 %55 to i8 {
	[0x55fd5a5d3a28]:  %46 = trunc i32 %39 to i6
	[0x55fd5a5d4148]:  %49 = trunc i64 %48 to i8
	[0x55fd5a5d5dc8]:  %58 = trunc i64 %56 to i8
	[0x55fd5a5d5ef8]:  %63 = trunc i64 %60 to i32
	[0x55fd5a5d6158]:  %66 = trunc i32 %65 to i8
	}

[0x55fd5a59f750]:   %58 = and i8 %57, 1 {
	[0x55fd5a685960]:  %59 = and i8 %58, 1
	[0x55fd5a68eea0]:  %67 = and i8 %66, 1
	}

[0x55fd5a59f7d0]:   %59 = lshr i64 %55, 1 {
	[0x55fd5a68c3b0]:  %60 = lshr i64 %56, 1
	}

[0x55fd5a59f850]:   store i64 %59, i64* %RSI, align 8, !tbaa !1257 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59f900]:   %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1 {
	[0x55fd5a5cb180]:  %61 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 1
	}

[0x55fd5a59f990]:   store i8 %58, i8* %60, align 1, !tbaa !1261 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a59fa40]:   %61 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3 {
	[0x55fd5a5cde40]:  %62 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 3
	}

[0x55fd5a59fab8]:   %62 = trunc i64 %59 to i32 {
	[0x55fd5a5d3a28]:  %46 = trunc i32 %39 to i6
	[0x55fd5a5d4148]:  %49 = trunc i64 %48 to i8
	[0x55fd5a5d5dc8]:  %58 = trunc i64 %56 to i8
	[0x55fd5a5d5ef8]:  %63 = trunc i64 %60 to i32
	[0x55fd5a5d6158]:  %66 = trunc i32 %65 to i8
	}

[0x55fd5a59fb30]:   %63 = and i32 %62, 255 {
	[0x55fd5a690340]:  %64 = and i32 %63, 255
	}

[0x55fd5a59fbf0]:   %64 = tail call i32 @llvm.ctpop.i32(i32 %63) #9 {
	[0x55fd5a5ee5e0]:  %65 = tail call i32 @llvm.ctpop.i32(i32 %64)
	}

[0x55fd5a5a0110]:   %68 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5 {
	[0x55fd5a5ee790]:  %69 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 5
	}

[0x55fd5a5a01a0]:   store i8 0, i8* %68, align 1, !tbaa !1261 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a5a0250]:   %69 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7 {
	[0x55fd5a5cf6d0]:  %70 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 7
	}

[0x55fd5a5a02e0]:   %70 = icmp eq i64 %59, 0 {
	[0x55fd5a5888b0]:  %71 = icmp eq i64 %60, 0
	}

[0x55fd5a5a0348]:   %71 = zext i1 %70 to i8 {
	[0x55fd5a5d31d8]:  %40 = zext i32 %39 to i64
	[0x55fd5a5d4d28]:  %52 = zext i32 %51 to i64
	[0x55fd5a5d6288]:  %72 = zext i1 %71 to i8
	}

[0x55fd5a5a03c0]:   store i8 %71, i8* %69, align 1, !tbaa !1261 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a5a0470]:   %72 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9 {
	[0x55fd5a5f0dc0]:  %73 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 9
	}

[0x55fd5a5a0500]:   store i8 0, i8* %72, align 1, !tbaa !1261 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a5a05b0]:   %73 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13 {
	[0x55fd5a5d64d0]:  %74 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 13
	}

[0x55fd5a5a0640]:   store i8 %56, i8* %73, align 1, !tbaa !1261 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a5a06a8]:   br label %_ZN12_GLOBAL__N_1L3SHRI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_.exit {
	[0x55fd5a5d4bf8]:  br label %55
	[0x55fd5a5d5908]:  br label %55
	[0x55fd5a5d63b8]:  br label %routine_shrq__cl___rsi.exit
	}

[0x55fd5a5a07d0]:   %75 = add i64 %35, 18 {
	[0x55fd5a5351e0]:  %76 = add i64 %36, 18
	}

[0x55fd5a5a0850]:   store i64 %75, i64* %PC, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a5a08d0]:   store i64 %74, i64* %42, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a5a0950]:   %77 = add i64 %76, -24 {
	[0x55fd5a5cc9c0]:  %31 = add i64 %22, -24
	[0x55fd5a5ef050]:  %78 = add i64 %77, -24
	[0x55fd5a5f4c00]:  %41 = add i64 %34, -24
	}

[0x55fd5a5a09b8]:   %78 = load i64, i64* %PC, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a5a0a30]:   %79 = add i64 %78, 4 {
	[0x55fd5a5cd9d0]:  %20 = add i64 %19, 4
	[0x55fd5a5cdf20]:  %25 = add i64 %24, 4
	[0x55fd5a5ef910]:  %80 = add i64 %79, 4
	}

[0x55fd5a5a0ab0]:   store i64 %79, i64* %PC, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a5a0b18]:   %80 = inttoptr i64 %77 to i64* {
	[0x55fd5a5c87f8]:  %9 = inttoptr i64 %8 to i64*
	[0x55fd5a5cfb28]:  %15 = inttoptr i64 %12 to i32*
	[0x55fd5a5d0378]:  %21 = inttoptr i64 %17 to i64*
	[0x55fd5a5d1418]:  %29 = inttoptr i64 %27 to i64*
	[0x55fd5a5d1678]:  %33 = inttoptr i64 %31 to i64*
	[0x55fd5a5d2218]:  %81 = inttoptr i64 %78 to i64*
	[0x55fd5a5d2728]:  %38 = inttoptr i64 %35 to i32*
	[0x55fd5a5d3308]:  %43 = inttoptr i64 %41 to i64*
	[0x55fd5a5d7c38]:  %85 = inttoptr i64 %83 to i64*
	[0x55fd5a5dabb8]:  %88 = inttoptr i64 %86 to i64*
	[0x55fd5a5dc4a8]:  %93 = inttoptr i64 %91 to i64*
	[0x55fd5a5dcbc8]:  %96 = inttoptr i64 %92 to i64*
	[0x55fd5a5eadc8]:  %26 = inttoptr i64 %23 to i64*
	}

[0x55fd5a5a0b78]:   %81 = load i64, i64* %80, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a5a0bf0]:   store i64 %81, i64* %RSI, align 8, !tbaa !1257 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a5a0c70]:   %82 = add i64 %76, -16 {
	[0x55fd5a5cd8c0]:  %17 = add i64 %16, -16
	[0x55fd5a5cdd40]:  %23 = add i64 %22, -16
	[0x55fd5a5f01b0]:  %83 = add i64 %77, -16
	}

[0x55fd5a5a0cf0]:   %83 = add i64 %78, 8 {
	[0x55fd5a5eac30]:  %84 = add i64 %79, 8
	[0x55fd5a5f4210]:  %92 = add i64 %91, 8
	}

[0x55fd5a5a0d70]:   store i64 %83, i64* %PC, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a5a0dd8]:   %84 = inttoptr i64 %82 to i64* {
	[0x55fd5a5c87f8]:  %9 = inttoptr i64 %8 to i64*
	[0x55fd5a5cfb28]:  %15 = inttoptr i64 %12 to i32*
	[0x55fd5a5d0378]:  %21 = inttoptr i64 %17 to i64*
	[0x55fd5a5d1418]:  %29 = inttoptr i64 %27 to i64*
	[0x55fd5a5d1678]:  %33 = inttoptr i64 %31 to i64*
	[0x55fd5a5d2218]:  %81 = inttoptr i64 %78 to i64*
	[0x55fd5a5d2728]:  %38 = inttoptr i64 %35 to i32*
	[0x55fd5a5d3308]:  %43 = inttoptr i64 %41 to i64*
	[0x55fd5a5d7c38]:  %85 = inttoptr i64 %83 to i64*
	[0x55fd5a5dabb8]:  %88 = inttoptr i64 %86 to i64*
	[0x55fd5a5dc4a8]:  %93 = inttoptr i64 %91 to i64*
	[0x55fd5a5dcbc8]:  %96 = inttoptr i64 %92 to i64*
	[0x55fd5a5eadc8]:  %26 = inttoptr i64 %23 to i64*
	}

[0x55fd5a5a0e38]:   %85 = load i64, i64* %84, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a5a0eb0]:   store i64 %85, i64* %RAX, align 8, !tbaa !1257 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a5a0f30]:   %86 = add i64 %78, 11 {
	[0x55fd5a5e1a30]:  %32 = add i64 %24, 11
	[0x55fd5a5f2040]:  %87 = add i64 %79, 11
	}

[0x55fd5a5a0fb0]:   store i64 %86, i64* %PC, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a5a1018]:   %87 = inttoptr i64 %85 to i64* {
	[0x55fd5a5c87f8]:  %9 = inttoptr i64 %8 to i64*
	[0x55fd5a5cfb28]:  %15 = inttoptr i64 %12 to i32*
	[0x55fd5a5d0378]:  %21 = inttoptr i64 %17 to i64*
	[0x55fd5a5d1418]:  %29 = inttoptr i64 %27 to i64*
	[0x55fd5a5d1678]:  %33 = inttoptr i64 %31 to i64*
	[0x55fd5a5d2218]:  %81 = inttoptr i64 %78 to i64*
	[0x55fd5a5d2728]:  %38 = inttoptr i64 %35 to i32*
	[0x55fd5a5d3308]:  %43 = inttoptr i64 %41 to i64*
	[0x55fd5a5d7c38]:  %85 = inttoptr i64 %83 to i64*
	[0x55fd5a5dabb8]:  %88 = inttoptr i64 %86 to i64*
	[0x55fd5a5dc4a8]:  %93 = inttoptr i64 %91 to i64*
	[0x55fd5a5dcbc8]:  %96 = inttoptr i64 %92 to i64*
	[0x55fd5a5eadc8]:  %26 = inttoptr i64 %23 to i64*
	}

[0x55fd5a5a1090]:   store i64 %81, i64* %87, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a5a10f8]:   %88 = load i64, i64* %PC, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a5a1170]:   %89 = add i64 %88, 1 {
	[0x55fd5a53bf80]:  %5 = add i64 %1, 1
	[0x55fd5a5f3b20]:  %90 = add i64 %89, 1
	}

[0x55fd5a5a11f0]:   store i64 %89, i64* %PC, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a5a1258]:   %90 = load i64, i64* %6, align 8, !tbaa !1257 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a5a12d0]:   %91 = add i64 %90, 8 {
	[0x55fd5a5eac30]:  %84 = add i64 %79, 8
	[0x55fd5a5f4210]:  %92 = add i64 %91, 8
	}

[0x55fd5a5a1338]:   %92 = inttoptr i64 %90 to i64* {
	[0x55fd5a5c87f8]:  %9 = inttoptr i64 %8 to i64*
	[0x55fd5a5cfb28]:  %15 = inttoptr i64 %12 to i32*
	[0x55fd5a5d0378]:  %21 = inttoptr i64 %17 to i64*
	[0x55fd5a5d1418]:  %29 = inttoptr i64 %27 to i64*
	[0x55fd5a5d1678]:  %33 = inttoptr i64 %31 to i64*
	[0x55fd5a5d2218]:  %81 = inttoptr i64 %78 to i64*
	[0x55fd5a5d2728]:  %38 = inttoptr i64 %35 to i32*
	[0x55fd5a5d3308]:  %43 = inttoptr i64 %41 to i64*
	[0x55fd5a5d7c38]:  %85 = inttoptr i64 %83 to i64*
	[0x55fd5a5dabb8]:  %88 = inttoptr i64 %86 to i64*
	[0x55fd5a5dc4a8]:  %93 = inttoptr i64 %91 to i64*
	[0x55fd5a5dcbc8]:  %96 = inttoptr i64 %92 to i64*
	[0x55fd5a5eadc8]:  %26 = inttoptr i64 %23 to i64*
	}

[0x55fd5a5a1398]:   %93 = load i64, i64* %92, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a5a1410]:   store i64 %93, i64* %RBP, align 8, !tbaa !1257 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}


[Info]: Phase I: Dual Simulation: Round: 0
Round: 0

Removing: [0x55fd5a5cfeb8]:   %16 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59c378]:   %4 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a59c800]:   store i64 %4, i64* %9, align 8


Uprime Matches: [0x55fd5a523f70]:   store i64 %4, i64* %9, align 8
[0x55fd5a525010]:   store i64 %5, i64* %3, align 8
[0x55fd5a532830]:   store i8 0, i8* %73, align 1
[0x55fd5a534410]:   store i8 %57, i8* %74, align 1
[0x55fd5a588450]:   store i8 %72, i8* %70, align 1
[0x55fd5a5cb060]:   store i64 %40, i64* %RDI.i23, align 8
[0x55fd5a5cb520]:   store i64 %8, i64* %6, align 8
[0x55fd5a5cb630]:   store i64 %8, i64* %RBP.i, align 8
[0x55fd5a5ccab0]:   store i64 %90, i64* %3, align 8
[0x55fd5a5cd3b0]:   store i64 %14, i64* %3, align 8
[0x55fd5a5cd7b0]:   store i32 %13, i32* %15, align 4
[0x55fd5a5cdae0]:   store i64 %20, i64* %3, align 8
[0x55fd5a5ce690]:   store i64 %27, i64* %RSI.i34, align 8
[0x55fd5a5cf060]:   store i64 %28, i64* %3, align 8
[0x55fd5a5d8940]:   store i64 %42, i64* %3, align 8
[0x55fd5a5d8a70]:   store i64 %44, i64* %RSI.i34, align 8
[0x55fd5a5d8ba0]:   store i64 %40, i64* %RDI.i23, align 8
[0x55fd5a5d8cd0]:   store i64 %40, i64* %RCX.i, align 8
[0x55fd5a5ecd50]:   store i64 %18, i64* %21, align 8
[0x55fd5a5ed5d0]:   store i64 %25, i64* %3, align 8
[0x55fd5a5ed930]:   store i64 %98, i64* %6, align 8
[0x55fd5a5ee8b0]:   store i64 %76, i64* %3, align 8
[0x55fd5a5ef2c0]:   store i64 %75, i64* %43, align 8
[0x55fd5a5ef9e0]:   store i64 %30, i64* %RSI.i34, align 8
[0x55fd5a5efaf0]:   store i64 %80, i64* %3, align 8
[0x55fd5a5f0020]:   store i64 %82, i64* %RSI.i34, align 8
[0x55fd5a5f0630]:   store i64 %32, i64* %3, align 8
[0x55fd5a5f08c0]:   store i64 %30, i64* %33, align 8
[0x55fd5a5f1500]:   store i64 %37, i64* %3, align 8
[0x55fd5a5f2590]:   store i64 %84, i64* %3, align 8
[0x55fd5a5f2ef0]:   store i64 %86, i64* %RAX.i6, align 8
[0x55fd5a5f35d0]:   store i64 %87, i64* %3, align 8
[0x55fd5a5f3780]:   store i64 %82, i64* %88, align 8
[0x55fd5a5f3d70]:   store i64 %94, i64* %RBP.i, align 8
[0x55fd5a5f61a0]:   store i64 %92, i64* %6, align 8
[0x55fd5a5f6d00]:   store i64 %95, i64* %3, align 8
[0x55fd5a5f6df0]:   store i64 %97, i64* %3, align 8
[0x55fd5a60cb80]:   store i64 %45, i64* %3, align 8
[0x55fd5a68b5e0]:   store i64 %60, i64* %RSI.i34, align 8
[0x55fd5a68db50]:   store i8 %59, i8* %61, align 1
[0x55fd5a696240]:   store i8 %68, i8* %62, align 1
[0x55fd5a6a0980]:   store i8 0, i8* %69, align 1


Adj: [0x55fd5a5cd8c0]:   %17 = add i64 %16, -16


Removing: [0x55fd5a5d04a8]:   %22 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59c378]:   %4 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a59c800]:   store i64 %4, i64* %9, align 8


Uprime Matches: [0x55fd5a523f70]:   store i64 %4, i64* %9, align 8
[0x55fd5a525010]:   store i64 %5, i64* %3, align 8
[0x55fd5a532830]:   store i8 0, i8* %73, align 1
[0x55fd5a534410]:   store i8 %57, i8* %74, align 1
[0x55fd5a588450]:   store i8 %72, i8* %70, align 1
[0x55fd5a5cb060]:   store i64 %40, i64* %RDI.i23, align 8
[0x55fd5a5cb520]:   store i64 %8, i64* %6, align 8
[0x55fd5a5cb630]:   store i64 %8, i64* %RBP.i, align 8
[0x55fd5a5ccab0]:   store i64 %90, i64* %3, align 8
[0x55fd5a5cd3b0]:   store i64 %14, i64* %3, align 8
[0x55fd5a5cd7b0]:   store i32 %13, i32* %15, align 4
[0x55fd5a5cdae0]:   store i64 %20, i64* %3, align 8
[0x55fd5a5ce690]:   store i64 %27, i64* %RSI.i34, align 8
[0x55fd5a5cf060]:   store i64 %28, i64* %3, align 8
[0x55fd5a5d8940]:   store i64 %42, i64* %3, align 8
[0x55fd5a5d8a70]:   store i64 %44, i64* %RSI.i34, align 8
[0x55fd5a5d8ba0]:   store i64 %40, i64* %RDI.i23, align 8
[0x55fd5a5d8cd0]:   store i64 %40, i64* %RCX.i, align 8
[0x55fd5a5ecd50]:   store i64 %18, i64* %21, align 8
[0x55fd5a5ed5d0]:   store i64 %25, i64* %3, align 8
[0x55fd5a5ed930]:   store i64 %98, i64* %6, align 8
[0x55fd5a5ee8b0]:   store i64 %76, i64* %3, align 8
[0x55fd5a5ef2c0]:   store i64 %75, i64* %43, align 8
[0x55fd5a5ef9e0]:   store i64 %30, i64* %RSI.i34, align 8
[0x55fd5a5efaf0]:   store i64 %80, i64* %3, align 8
[0x55fd5a5f0020]:   store i64 %82, i64* %RSI.i34, align 8
[0x55fd5a5f0630]:   store i64 %32, i64* %3, align 8
[0x55fd5a5f08c0]:   store i64 %30, i64* %33, align 8
[0x55fd5a5f1500]:   store i64 %37, i64* %3, align 8
[0x55fd5a5f2590]:   store i64 %84, i64* %3, align 8
[0x55fd5a5f2ef0]:   store i64 %86, i64* %RAX.i6, align 8
[0x55fd5a5f35d0]:   store i64 %87, i64* %3, align 8
[0x55fd5a5f3780]:   store i64 %82, i64* %88, align 8
[0x55fd5a5f3d70]:   store i64 %94, i64* %RBP.i, align 8
[0x55fd5a5f61a0]:   store i64 %92, i64* %6, align 8
[0x55fd5a5f6d00]:   store i64 %95, i64* %3, align 8
[0x55fd5a5f6df0]:   store i64 %97, i64* %3, align 8
[0x55fd5a60cb80]:   store i64 %45, i64* %3, align 8
[0x55fd5a68b5e0]:   store i64 %60, i64* %RSI.i34, align 8
[0x55fd5a68db50]:   store i8 %59, i8* %61, align 1
[0x55fd5a696240]:   store i8 %68, i8* %62, align 1
[0x55fd5a6a0980]:   store i8 0, i8* %69, align 1


Adj: [0x55fd5a5cc9c0]:   %31 = add i64 %22, -24
[0x55fd5a5cdd40]:   %23 = add i64 %22, -16


Removing: [0x55fd5a5d17a8]:   %34 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59c378]:   %4 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a59c800]:   store i64 %4, i64* %9, align 8


Uprime Matches: [0x55fd5a523f70]:   store i64 %4, i64* %9, align 8
[0x55fd5a525010]:   store i64 %5, i64* %3, align 8
[0x55fd5a532830]:   store i8 0, i8* %73, align 1
[0x55fd5a534410]:   store i8 %57, i8* %74, align 1
[0x55fd5a588450]:   store i8 %72, i8* %70, align 1
[0x55fd5a5cb060]:   store i64 %40, i64* %RDI.i23, align 8
[0x55fd5a5cb520]:   store i64 %8, i64* %6, align 8
[0x55fd5a5cb630]:   store i64 %8, i64* %RBP.i, align 8
[0x55fd5a5ccab0]:   store i64 %90, i64* %3, align 8
[0x55fd5a5cd3b0]:   store i64 %14, i64* %3, align 8
[0x55fd5a5cd7b0]:   store i32 %13, i32* %15, align 4
[0x55fd5a5cdae0]:   store i64 %20, i64* %3, align 8
[0x55fd5a5ce690]:   store i64 %27, i64* %RSI.i34, align 8
[0x55fd5a5cf060]:   store i64 %28, i64* %3, align 8
[0x55fd5a5d8940]:   store i64 %42, i64* %3, align 8
[0x55fd5a5d8a70]:   store i64 %44, i64* %RSI.i34, align 8
[0x55fd5a5d8ba0]:   store i64 %40, i64* %RDI.i23, align 8
[0x55fd5a5d8cd0]:   store i64 %40, i64* %RCX.i, align 8
[0x55fd5a5ecd50]:   store i64 %18, i64* %21, align 8
[0x55fd5a5ed5d0]:   store i64 %25, i64* %3, align 8
[0x55fd5a5ed930]:   store i64 %98, i64* %6, align 8
[0x55fd5a5ee8b0]:   store i64 %76, i64* %3, align 8
[0x55fd5a5ef2c0]:   store i64 %75, i64* %43, align 8
[0x55fd5a5ef9e0]:   store i64 %30, i64* %RSI.i34, align 8
[0x55fd5a5efaf0]:   store i64 %80, i64* %3, align 8
[0x55fd5a5f0020]:   store i64 %82, i64* %RSI.i34, align 8
[0x55fd5a5f0630]:   store i64 %32, i64* %3, align 8
[0x55fd5a5f08c0]:   store i64 %30, i64* %33, align 8
[0x55fd5a5f1500]:   store i64 %37, i64* %3, align 8
[0x55fd5a5f2590]:   store i64 %84, i64* %3, align 8
[0x55fd5a5f2ef0]:   store i64 %86, i64* %RAX.i6, align 8
[0x55fd5a5f35d0]:   store i64 %87, i64* %3, align 8
[0x55fd5a5f3780]:   store i64 %82, i64* %88, align 8
[0x55fd5a5f3d70]:   store i64 %94, i64* %RBP.i, align 8
[0x55fd5a5f61a0]:   store i64 %92, i64* %6, align 8
[0x55fd5a5f6d00]:   store i64 %95, i64* %3, align 8
[0x55fd5a5f6df0]:   store i64 %97, i64* %3, align 8
[0x55fd5a60cb80]:   store i64 %45, i64* %3, align 8
[0x55fd5a68b5e0]:   store i64 %60, i64* %RSI.i34, align 8
[0x55fd5a68db50]:   store i8 %59, i8* %61, align 1
[0x55fd5a696240]:   store i8 %68, i8* %62, align 1
[0x55fd5a6a0980]:   store i8 0, i8* %69, align 1


Adj: [0x55fd5a5f07b0]:   %35 = add i64 %34, -4
[0x55fd5a5f4c00]:   %41 = add i64 %34, -24


Removing: [0x55fd5a5d6618]:   %77 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59c378]:   %4 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a59c800]:   store i64 %4, i64* %9, align 8


Uprime Matches: [0x55fd5a523f70]:   store i64 %4, i64* %9, align 8
[0x55fd5a525010]:   store i64 %5, i64* %3, align 8
[0x55fd5a532830]:   store i8 0, i8* %73, align 1
[0x55fd5a534410]:   store i8 %57, i8* %74, align 1
[0x55fd5a588450]:   store i8 %72, i8* %70, align 1
[0x55fd5a5cb060]:   store i64 %40, i64* %RDI.i23, align 8
[0x55fd5a5cb520]:   store i64 %8, i64* %6, align 8
[0x55fd5a5cb630]:   store i64 %8, i64* %RBP.i, align 8
[0x55fd5a5ccab0]:   store i64 %90, i64* %3, align 8
[0x55fd5a5cd3b0]:   store i64 %14, i64* %3, align 8
[0x55fd5a5cd7b0]:   store i32 %13, i32* %15, align 4
[0x55fd5a5cdae0]:   store i64 %20, i64* %3, align 8
[0x55fd5a5ce690]:   store i64 %27, i64* %RSI.i34, align 8
[0x55fd5a5cf060]:   store i64 %28, i64* %3, align 8
[0x55fd5a5d8940]:   store i64 %42, i64* %3, align 8
[0x55fd5a5d8a70]:   store i64 %44, i64* %RSI.i34, align 8
[0x55fd5a5d8ba0]:   store i64 %40, i64* %RDI.i23, align 8
[0x55fd5a5d8cd0]:   store i64 %40, i64* %RCX.i, align 8
[0x55fd5a5ecd50]:   store i64 %18, i64* %21, align 8
[0x55fd5a5ed5d0]:   store i64 %25, i64* %3, align 8
[0x55fd5a5ed930]:   store i64 %98, i64* %6, align 8
[0x55fd5a5ee8b0]:   store i64 %76, i64* %3, align 8
[0x55fd5a5ef2c0]:   store i64 %75, i64* %43, align 8
[0x55fd5a5ef9e0]:   store i64 %30, i64* %RSI.i34, align 8
[0x55fd5a5efaf0]:   store i64 %80, i64* %3, align 8
[0x55fd5a5f0020]:   store i64 %82, i64* %RSI.i34, align 8
[0x55fd5a5f0630]:   store i64 %32, i64* %3, align 8
[0x55fd5a5f08c0]:   store i64 %30, i64* %33, align 8
[0x55fd5a5f1500]:   store i64 %37, i64* %3, align 8
[0x55fd5a5f2590]:   store i64 %84, i64* %3, align 8
[0x55fd5a5f2ef0]:   store i64 %86, i64* %RAX.i6, align 8
[0x55fd5a5f35d0]:   store i64 %87, i64* %3, align 8
[0x55fd5a5f3780]:   store i64 %82, i64* %88, align 8
[0x55fd5a5f3d70]:   store i64 %94, i64* %RBP.i, align 8
[0x55fd5a5f61a0]:   store i64 %92, i64* %6, align 8
[0x55fd5a5f6d00]:   store i64 %95, i64* %3, align 8
[0x55fd5a5f6df0]:   store i64 %97, i64* %3, align 8
[0x55fd5a60cb80]:   store i64 %45, i64* %3, align 8
[0x55fd5a68b5e0]:   store i64 %60, i64* %RSI.i34, align 8
[0x55fd5a68db50]:   store i8 %59, i8* %61, align 1
[0x55fd5a696240]:   store i8 %68, i8* %62, align 1
[0x55fd5a6a0980]:   store i8 0, i8* %69, align 1


Adj: [0x55fd5a5ef050]:   %78 = add i64 %77, -24
[0x55fd5a5f01b0]:   %83 = add i64 %77, -16


Removing: [0x55fd5a5dbeb8]:   %91 = load i64, i64* %6, align 8
From the pot matches of: [0x55fd5a59c618]:   %7 = load i64, i64* %6, align 8, !tbaa !1257


Uprime : [0x55fd5a59ca20]:   %11 = add i64 %7, -12


Uprime Matches: [0x55fd5a5cc5f0]:   %12 = add i64 %7, -12


Adj: [0x55fd5a5dc4a8]:   %93 = inttoptr i64 %91 to i64*
[0x55fd5a5ed7b0]:   %98 = add i64 %91, 16
[0x55fd5a5f4210]:   %92 = add i64 %91, 8


Removing: [0x55fd5a5cf5b8]:   %36 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59c8e8]:   %10 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a59cb00]:   %13 = add i64 %10, 6


Uprime Matches: [0x55fd5a5cab80]:   %14 = add i64 %10, 6


Adj: [0x55fd5a5351e0]:   %76 = add i64 %36, 18
[0x55fd5a5d2120]:   %42 = add i64 %36, 7
[0x55fd5a5f1610]:   %37 = add i64 %36, 3
[0x55fd5a5fa9d0]:   %45 = add i64 %36, 14


Removing: [0x55fd5a5d0248]:   %19 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59c8e8]:   %10 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a59cb00]:   %13 = add i64 %10, 6


Uprime Matches: [0x55fd5a5cab80]:   %14 = add i64 %10, 6


Adj: [0x55fd5a5cd9d0]:   %20 = add i64 %19, 4


Removing: [0x55fd5a5d0a98]:   %24 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59c8e8]:   %10 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a59cb00]:   %13 = add i64 %10, 6


Uprime Matches: [0x55fd5a5cab80]:   %14 = add i64 %10, 6


Adj: [0x55fd5a5cdf20]:   %25 = add i64 %24, 4
[0x55fd5a5cef50]:   %28 = add i64 %24, 7
[0x55fd5a5e1a30]:   %32 = add i64 %24, 11


Removing: [0x55fd5a5d1e88]:   %79 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59c8e8]:   %10 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a59cb00]:   %13 = add i64 %10, 6


Uprime Matches: [0x55fd5a5cab80]:   %14 = add i64 %10, 6


Adj: [0x55fd5a5eac30]:   %84 = add i64 %79, 8
[0x55fd5a5ef910]:   %80 = add i64 %79, 4
[0x55fd5a5f2040]:   %87 = add i64 %79, 11


Removing: [0x55fd5a5db8c8]:   %89 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59c8e8]:   %10 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a59cb00]:   %13 = add i64 %10, 6


Uprime Matches: [0x55fd5a5cab80]:   %14 = add i64 %10, 6


Adj: [0x55fd5a5f3b20]:   %90 = add i64 %89, 1
[0x55fd5a5f66b0]:   %95 = add i64 %89, 2


Removing: [0x55fd5a539888]:   %4 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59ccc8]:   %15 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a59cd40]:   %16 = add i64 %15, -16


Uprime Matches: [0x55fd5a5cd8c0]:   %17 = add i64 %16, -16
[0x55fd5a5cdd40]:   %23 = add i64 %22, -16
[0x55fd5a5f01b0]:   %83 = add i64 %77, -16


Adj: [0x55fd5a523f70]:   store i64 %4, i64* %9, align 8


Removing: [0x55fd5a5d17a8]:   %34 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59ccc8]:   %15 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a59cd40]:   %16 = add i64 %15, -16


Uprime Matches: [0x55fd5a5cd8c0]:   %17 = add i64 %16, -16
[0x55fd5a5cdd40]:   %23 = add i64 %22, -16
[0x55fd5a5f01b0]:   %83 = add i64 %77, -16


Adj: [0x55fd5a5f07b0]:   %35 = add i64 %34, -4
[0x55fd5a5f4c00]:   %41 = add i64 %34, -24


Removing: [0x55fd5a5c8888]:   %10 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59ceb8]:   %18 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a59cf30]:   %19 = add i64 %18, 4


Uprime Matches: [0x55fd5a5cd9d0]:   %20 = add i64 %19, 4
[0x55fd5a5cdf20]:   %25 = add i64 %24, 4
[0x55fd5a5ef910]:   %80 = add i64 %79, 4


Adj: [0x55fd5a5cab80]:   %14 = add i64 %10, 6


Removing: [0x55fd5a5cf5b8]:   %36 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59ceb8]:   %18 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a59cf30]:   %19 = add i64 %18, 4


Uprime Matches: [0x55fd5a5cd9d0]:   %20 = add i64 %19, 4
[0x55fd5a5cdf20]:   %25 = add i64 %24, 4
[0x55fd5a5ef910]:   %80 = add i64 %79, 4


Adj: [0x55fd5a5351e0]:   %76 = add i64 %36, 18
[0x55fd5a5d2120]:   %42 = add i64 %36, 7
[0x55fd5a5f1610]:   %37 = add i64 %36, 3
[0x55fd5a5fa9d0]:   %45 = add i64 %36, 14


Removing: [0x55fd5a5db8c8]:   %89 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59ceb8]:   %18 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a59cf30]:   %19 = add i64 %18, 4


Uprime Matches: [0x55fd5a5cd9d0]:   %20 = add i64 %19, 4
[0x55fd5a5cdf20]:   %25 = add i64 %24, 4
[0x55fd5a5ef910]:   %80 = add i64 %79, 4


Adj: [0x55fd5a5f3b20]:   %90 = add i64 %89, 1
[0x55fd5a5f66b0]:   %95 = add i64 %89, 2


Removing: [0x55fd5a5d7c38]:   %85 = inttoptr i64 %83 to i64*
From the pot matches of: [0x55fd5a59d018]:   %20 = inttoptr i64 %16 to i64*


Uprime : [0x55fd5a59d090]:   store i64 %17, i64* %20, align 8


Uprime Matches: [0x55fd5a5ecd50]:   store i64 %18, i64* %21, align 8


Adj: [0x55fd5a5d92c8]:   %86 = load i64, i64* %85, align 8


Removing: [0x55fd5a5eadc8]:   %26 = inttoptr i64 %23 to i64*
From the pot matches of: [0x55fd5a59d018]:   %20 = inttoptr i64 %16 to i64*


Uprime : [0x55fd5a59d090]:   store i64 %17, i64* %20, align 8


Uprime Matches: [0x55fd5a5ecd50]:   store i64 %18, i64* %21, align 8


Adj: [0x55fd5a5f3a38]:   %27 = load i64, i64* %26, align 8


Removing: [0x55fd5a539888]:   %4 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59d0f8]:   %21 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a59d6d0]:   %30 = add i64 %21, -24


Uprime Matches: [0x55fd5a5cc9c0]:   %31 = add i64 %22, -24
[0x55fd5a5ef050]:   %78 = add i64 %77, -24
[0x55fd5a5f4c00]:   %41 = add i64 %34, -24


Adj: [0x55fd5a523f70]:   store i64 %4, i64* %9, align 8


Removing: [0x55fd5a5cfeb8]:   %16 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59d0f8]:   %21 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a59d6d0]:   %30 = add i64 %21, -24


Uprime Matches: [0x55fd5a5cc9c0]:   %31 = add i64 %22, -24
[0x55fd5a5ef050]:   %78 = add i64 %77, -24
[0x55fd5a5f4c00]:   %41 = add i64 %34, -24


Adj: [0x55fd5a5cd8c0]:   %17 = add i64 %16, -16


Removing: [0x55fd5a5d17a8]:   %34 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59d0f8]:   %21 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a59d170]:   %22 = add i64 %21, -16


Uprime Matches: [0x55fd5a5cd8c0]:   %17 = add i64 %16, -16
[0x55fd5a5cdd40]:   %23 = add i64 %22, -16
[0x55fd5a5f01b0]:   %83 = add i64 %77, -16


Adj: [0x55fd5a5f07b0]:   %35 = add i64 %34, -4
[0x55fd5a5f4c00]:   %41 = add i64 %34, -24


Removing: [0x55fd5a5c8888]:   %10 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59d1d8]:   %23 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a59d750]:   %31 = add i64 %23, 11


Uprime Matches: [0x55fd5a5e1a30]:   %32 = add i64 %24, 11
[0x55fd5a5f2040]:   %87 = add i64 %79, 11


Adj: [0x55fd5a5cab80]:   %14 = add i64 %10, 6


Removing: [0x55fd5a5cf5b8]:   %36 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59d1d8]:   %23 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a59d750]:   %31 = add i64 %23, 11


Uprime Matches: [0x55fd5a5e1a30]:   %32 = add i64 %24, 11
[0x55fd5a5f2040]:   %87 = add i64 %79, 11


Adj: [0x55fd5a5351e0]:   %76 = add i64 %36, 18
[0x55fd5a5d2120]:   %42 = add i64 %36, 7
[0x55fd5a5f1610]:   %37 = add i64 %36, 3
[0x55fd5a5fa9d0]:   %45 = add i64 %36, 14


Removing: [0x55fd5a5d0248]:   %19 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59d1d8]:   %23 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a59d750]:   %31 = add i64 %23, 11


Uprime Matches: [0x55fd5a5e1a30]:   %32 = add i64 %24, 11
[0x55fd5a5f2040]:   %87 = add i64 %79, 11


Adj: [0x55fd5a5cd9d0]:   %20 = add i64 %19, 4


Removing: [0x55fd5a5db8c8]:   %89 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59d1d8]:   %23 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a59d750]:   %31 = add i64 %23, 11


Uprime Matches: [0x55fd5a5e1a30]:   %32 = add i64 %24, 11
[0x55fd5a5f2040]:   %87 = add i64 %79, 11


Adj: [0x55fd5a5f3b20]:   %90 = add i64 %89, 1
[0x55fd5a5f66b0]:   %95 = add i64 %89, 2


Removing: [0x55fd5a5d1e88]:   %79 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59d1d8]:   %23 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a59d490]:   %27 = add i64 %23, 7


Uprime Matches: [0x55fd5a5cef50]:   %28 = add i64 %24, 7
[0x55fd5a5d2120]:   %42 = add i64 %36, 7


Adj: [0x55fd5a5eac30]:   %84 = add i64 %79, 8
[0x55fd5a5ef910]:   %80 = add i64 %79, 4
[0x55fd5a5f2040]:   %87 = add i64 %79, 11


Removing: [0x55fd5a5d92c8]:   %86 = load i64, i64* %85, align 8
From the pot matches of: [0x55fd5a59d398]:   %26 = load i64, i64* %25, align 8


Uprime : [0x55fd5a59d410]:   store i64 %26, i64* %RSI, align 8, !tbaa !1257


Uprime Matches: [0x55fd5a5ce690]:   store i64 %27, i64* %RSI.i34, align 8
[0x55fd5a5d8a70]:   store i64 %44, i64* %RSI.i34, align 8
[0x55fd5a5ef9e0]:   store i64 %30, i64* %RSI.i34, align 8
[0x55fd5a5f0020]:   store i64 %82, i64* %RSI.i34, align 8
[0x55fd5a68b5e0]:   store i64 %60, i64* %RSI.i34, align 8


Adj: [0x55fd5a5dabb8]:   %88 = inttoptr i64 %86 to i64*
[0x55fd5a5f2ef0]:   store i64 %86, i64* %RAX.i6, align 8


Removing: [0x55fd5a5dabb8]:   %88 = inttoptr i64 %86 to i64*
From the pot matches of: [0x55fd5a59d578]:   %28 = inttoptr i64 %26 to i64*


Uprime : [0x55fd5a59d5d8]:   %29 = load i64, i64* %28, align 8


Uprime Matches: [0x55fd5a539888]:   %4 = load i64, i64* %RBP.i, align 8
[0x55fd5a58f618]:   %7 = load i64, i64* %6, align 8
[0x55fd5a5c8888]:   %10 = load i64, i64* %3, align 8
[0x55fd5a5ca228]:   %13 = load i32, i32* %EDI.i37, align 4
[0x55fd5a5cf5b8]:   %36 = load i64, i64* %3, align 8
[0x55fd5a5cfeb8]:   %16 = load i64, i64* %RBP.i, align 8
[0x55fd5a5d0118]:   %18 = load i64, i64* %RSI.i34, align 8
[0x55fd5a5d0248]:   %19 = load i64, i64* %3, align 8
[0x55fd5a5d04a8]:   %22 = load i64, i64* %RBP.i, align 8
[0x55fd5a5d0a98]:   %24 = load i64, i64* %3, align 8
[0x55fd5a5d1548]:   %30 = load i64, i64* %29, align 8
[0x55fd5a5d17a8]:   %34 = load i64, i64* %RBP.i, align 8
[0x55fd5a5d1e88]:   %79 = load i64, i64* %3, align 8
[0x55fd5a5d2858]:   %39 = load i32, i32* %38, align 4
[0x55fd5a5d37c8]:   %44 = load i64, i64* %43, align 8
[0x55fd5a5d6618]:   %77 = load i64, i64* %RBP.i, align 8
[0x55fd5a5d7b08]:   %82 = load i64, i64* %81, align 8
[0x55fd5a5d92c8]:   %86 = load i64, i64* %85, align 8
[0x55fd5a5db8c8]:   %89 = load i64, i64* %3, align 8
[0x55fd5a5dbeb8]:   %91 = load i64, i64* %6, align 8
[0x55fd5a5dca98]:   %94 = load i64, i64* %93, align 8
[0x55fd5a5dd1b8]:   %97 = load i64, i64* %96, align 8
[0x55fd5a5f3a38]:   %27 = load i64, i64* %26, align 8


Adj: [0x55fd5a5f3780]:   store i64 %82, i64* %88, align 8


Removing: [0x55fd5a5d2218]:   %81 = inttoptr i64 %78 to i64*
From the pot matches of: [0x55fd5a59d838]:   %32 = inttoptr i64 %30 to i64*


Uprime : [0x55fd5a59cdc0]:   store i64 %29, i64* %32, align 8


Uprime Matches: [0x55fd5a5ef9e0]:   store i64 %30, i64* %RSI.i34, align 8
[0x55fd5a5f08c0]:   store i64 %30, i64* %33, align 8


Adj: [0x55fd5a5d7b08]:   %82 = load i64, i64* %81, align 8


Removing: [0x55fd5a5d3308]:   %43 = inttoptr i64 %41 to i64*
From the pot matches of: [0x55fd5a59d838]:   %32 = inttoptr i64 %30 to i64*


Uprime : [0x55fd5a59cdc0]:   store i64 %29, i64* %32, align 8


Uprime Matches: [0x55fd5a5ef9e0]:   store i64 %30, i64* %RSI.i34, align 8
[0x55fd5a5f08c0]:   store i64 %30, i64* %33, align 8


Adj: [0x55fd5a5d37c8]:   %44 = load i64, i64* %43, align 8
[0x55fd5a5ef2c0]:   store i64 %75, i64* %43, align 8


Removing: [0x55fd5a539888]:   %4 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59ce28]:   %33 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a59de80]:   %40 = add i64 %33, -24


Uprime Matches: [0x55fd5a5cc9c0]:   %31 = add i64 %22, -24
[0x55fd5a5ef050]:   %78 = add i64 %77, -24
[0x55fd5a5f4c00]:   %41 = add i64 %34, -24


Adj: [0x55fd5a523f70]:   store i64 %4, i64* %9, align 8


Removing: [0x55fd5a5cfeb8]:   %16 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59ce28]:   %33 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a59de80]:   %40 = add i64 %33, -24


Uprime Matches: [0x55fd5a5cc9c0]:   %31 = add i64 %22, -24
[0x55fd5a5ef050]:   %78 = add i64 %77, -24
[0x55fd5a5f4c00]:   %41 = add i64 %34, -24


Adj: [0x55fd5a5cd8c0]:   %17 = add i64 %16, -16


Removing: [0x55fd5a5d04a8]:   %22 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59ce28]:   %33 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a59db00]:   %34 = add i64 %33, -4


Uprime Matches: [0x55fd5a5f07b0]:   %35 = add i64 %34, -4


Adj: [0x55fd5a5cc9c0]:   %31 = add i64 %22, -24
[0x55fd5a5cdd40]:   %23 = add i64 %22, -16


Removing: [0x55fd5a5d6618]:   %77 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59ce28]:   %33 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a59db00]:   %34 = add i64 %33, -4


Uprime Matches: [0x55fd5a5f07b0]:   %35 = add i64 %34, -4


Adj: [0x55fd5a5ef050]:   %78 = add i64 %77, -24
[0x55fd5a5f01b0]:   %83 = add i64 %77, -16


Removing: [0x55fd5a5c8888]:   %10 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59db68]:   %35 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a5a07d0]:   %75 = add i64 %35, 18


Uprime Matches: [0x55fd5a5351e0]:   %76 = add i64 %36, 18


Adj: [0x55fd5a5cab80]:   %14 = add i64 %10, 6


Removing: [0x55fd5a5d0248]:   %19 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59db68]:   %35 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a5a07d0]:   %75 = add i64 %35, 18


Uprime Matches: [0x55fd5a5351e0]:   %76 = add i64 %36, 18


Adj: [0x55fd5a5cd9d0]:   %20 = add i64 %19, 4


Removing: [0x55fd5a5d0a98]:   %24 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59db68]:   %35 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a5a07d0]:   %75 = add i64 %35, 18


Uprime Matches: [0x55fd5a5351e0]:   %76 = add i64 %36, 18


Adj: [0x55fd5a5cdf20]:   %25 = add i64 %24, 4
[0x55fd5a5cef50]:   %28 = add i64 %24, 7
[0x55fd5a5e1a30]:   %32 = add i64 %24, 11


Removing: [0x55fd5a5d1e88]:   %79 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59db68]:   %35 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a5a07d0]:   %75 = add i64 %35, 18


Uprime Matches: [0x55fd5a5351e0]:   %76 = add i64 %36, 18


Adj: [0x55fd5a5eac30]:   %84 = add i64 %79, 8
[0x55fd5a5ef910]:   %80 = add i64 %79, 4
[0x55fd5a5f2040]:   %87 = add i64 %79, 11


Removing: [0x55fd5a5db8c8]:   %89 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59db68]:   %35 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a5a07d0]:   %75 = add i64 %35, 18


Uprime Matches: [0x55fd5a5351e0]:   %76 = add i64 %36, 18


Adj: [0x55fd5a5f3b20]:   %90 = add i64 %89, 1
[0x55fd5a5f66b0]:   %95 = add i64 %89, 2


Removing: [0x55fd5a5d2218]:   %81 = inttoptr i64 %78 to i64*
From the pot matches of: [0x55fd5a59dfe8]:   %42 = inttoptr i64 %40 to i64*


Uprime : [0x55fd5a5a08d0]:   store i64 %74, i64* %42, align 8


Uprime Matches: [0x55fd5a523f70]:   store i64 %4, i64* %9, align 8
[0x55fd5a525010]:   store i64 %5, i64* %3, align 8
[0x55fd5a532830]:   store i8 0, i8* %73, align 1
[0x55fd5a534410]:   store i8 %57, i8* %74, align 1
[0x55fd5a588450]:   store i8 %72, i8* %70, align 1
[0x55fd5a5cb060]:   store i64 %40, i64* %RDI.i23, align 8
[0x55fd5a5cb520]:   store i64 %8, i64* %6, align 8
[0x55fd5a5cb630]:   store i64 %8, i64* %RBP.i, align 8
[0x55fd5a5ccab0]:   store i64 %90, i64* %3, align 8
[0x55fd5a5cd3b0]:   store i64 %14, i64* %3, align 8
[0x55fd5a5cd7b0]:   store i32 %13, i32* %15, align 4
[0x55fd5a5cdae0]:   store i64 %20, i64* %3, align 8
[0x55fd5a5ce690]:   store i64 %27, i64* %RSI.i34, align 8
[0x55fd5a5cf060]:   store i64 %28, i64* %3, align 8
[0x55fd5a5d8940]:   store i64 %42, i64* %3, align 8
[0x55fd5a5d8a70]:   store i64 %44, i64* %RSI.i34, align 8
[0x55fd5a5d8ba0]:   store i64 %40, i64* %RDI.i23, align 8
[0x55fd5a5d8cd0]:   store i64 %40, i64* %RCX.i, align 8
[0x55fd5a5ecd50]:   store i64 %18, i64* %21, align 8
[0x55fd5a5ed5d0]:   store i64 %25, i64* %3, align 8
[0x55fd5a5ed930]:   store i64 %98, i64* %6, align 8
[0x55fd5a5ee8b0]:   store i64 %76, i64* %3, align 8
[0x55fd5a5ef2c0]:   store i64 %75, i64* %43, align 8
[0x55fd5a5ef9e0]:   store i64 %30, i64* %RSI.i34, align 8
[0x55fd5a5efaf0]:   store i64 %80, i64* %3, align 8
[0x55fd5a5f0020]:   store i64 %82, i64* %RSI.i34, align 8
[0x55fd5a5f0630]:   store i64 %32, i64* %3, align 8
[0x55fd5a5f08c0]:   store i64 %30, i64* %33, align 8
[0x55fd5a5f1500]:   store i64 %37, i64* %3, align 8
[0x55fd5a5f2590]:   store i64 %84, i64* %3, align 8
[0x55fd5a5f2ef0]:   store i64 %86, i64* %RAX.i6, align 8
[0x55fd5a5f35d0]:   store i64 %87, i64* %3, align 8
[0x55fd5a5f3780]:   store i64 %82, i64* %88, align 8
[0x55fd5a5f3d70]:   store i64 %94, i64* %RBP.i, align 8
[0x55fd5a5f61a0]:   store i64 %92, i64* %6, align 8
[0x55fd5a5f6d00]:   store i64 %95, i64* %3, align 8
[0x55fd5a5f6df0]:   store i64 %97, i64* %3, align 8
[0x55fd5a60cb80]:   store i64 %45, i64* %3, align 8
[0x55fd5a68b5e0]:   store i64 %60, i64* %RSI.i34, align 8
[0x55fd5a68db50]:   store i8 %59, i8* %61, align 1
[0x55fd5a696240]:   store i8 %68, i8* %62, align 1
[0x55fd5a6a0980]:   store i8 0, i8* %69, align 1


Adj: [0x55fd5a5d7b08]:   %82 = load i64, i64* %81, align 8


Removing: [0x55fd5a5d1678]:   %33 = inttoptr i64 %31 to i64*
From the pot matches of: [0x55fd5a59dfe8]:   %42 = inttoptr i64 %40 to i64*


Uprime : [0x55fd5a59e048]:   %43 = load i64, i64* %42, align 8


Uprime Matches: [0x55fd5a539888]:   %4 = load i64, i64* %RBP.i, align 8
[0x55fd5a58f618]:   %7 = load i64, i64* %6, align 8
[0x55fd5a5c8888]:   %10 = load i64, i64* %3, align 8
[0x55fd5a5ca228]:   %13 = load i32, i32* %EDI.i37, align 4
[0x55fd5a5cf5b8]:   %36 = load i64, i64* %3, align 8
[0x55fd5a5cfeb8]:   %16 = load i64, i64* %RBP.i, align 8
[0x55fd5a5d0118]:   %18 = load i64, i64* %RSI.i34, align 8
[0x55fd5a5d0248]:   %19 = load i64, i64* %3, align 8
[0x55fd5a5d04a8]:   %22 = load i64, i64* %RBP.i, align 8
[0x55fd5a5d0a98]:   %24 = load i64, i64* %3, align 8
[0x55fd5a5d1548]:   %30 = load i64, i64* %29, align 8
[0x55fd5a5d17a8]:   %34 = load i64, i64* %RBP.i, align 8
[0x55fd5a5d1e88]:   %79 = load i64, i64* %3, align 8
[0x55fd5a5d2858]:   %39 = load i32, i32* %38, align 4
[0x55fd5a5d37c8]:   %44 = load i64, i64* %43, align 8
[0x55fd5a5d6618]:   %77 = load i64, i64* %RBP.i, align 8
[0x55fd5a5d7b08]:   %82 = load i64, i64* %81, align 8
[0x55fd5a5d92c8]:   %86 = load i64, i64* %85, align 8
[0x55fd5a5db8c8]:   %89 = load i64, i64* %3, align 8
[0x55fd5a5dbeb8]:   %91 = load i64, i64* %6, align 8
[0x55fd5a5dca98]:   %94 = load i64, i64* %93, align 8
[0x55fd5a5dd1b8]:   %97 = load i64, i64* %96, align 8
[0x55fd5a5f3a38]:   %27 = load i64, i64* %26, align 8


Adj: [0x55fd5a5f08c0]:   store i64 %30, i64* %33, align 8


Removing: [0x55fd5a5d3a28]:   %46 = trunc i32 %39 to i6
From the pot matches of: [0x55fd5a59d898]:   %65 = trunc i32 %64 to i8


Uprime : [0x55fd5a59d910]:   %66 = and i8 %65, 1


Uprime Matches: [0x55fd5a685960]:   %59 = and i8 %58, 1
[0x55fd5a68eea0]:   %67 = and i8 %66, 1


Adj: [0x55fd5a5d4008]:   switch i6 %46, label %50 [
    i6 0, label %routine_shrq__cl___rsi.exit
    i6 1, label %47
  ]


Removing: [0x55fd5a5d4148]:   %49 = trunc i64 %48 to i8
From the pot matches of: [0x55fd5a59d898]:   %65 = trunc i32 %64 to i8


Uprime : [0x55fd5a59d910]:   %66 = and i8 %65, 1


Uprime Matches: [0x55fd5a685960]:   %59 = and i8 %58, 1
[0x55fd5a68eea0]:   %67 = and i8 %66, 1


Adj: [0x55fd5a5d5c88]:   %57 = phi i8 [ 0, %50 ], [ %49, %47 ]


Removing: [0x55fd5a5d5ef8]:   %63 = trunc i64 %60 to i32
From the pot matches of: [0x55fd5a59d898]:   %65 = trunc i32 %64 to i8


Uprime : [0x55fd5a59d910]:   %66 = and i8 %65, 1


Uprime Matches: [0x55fd5a685960]:   %59 = and i8 %58, 1
[0x55fd5a68eea0]:   %67 = and i8 %66, 1


Adj: [0x55fd5a690340]:   %64 = and i32 %63, 255


Removing: [0x55fd5a685960]:   %59 = and i8 %58, 1
From the pot matches of: [0x55fd5a59d910]:   %66 = and i8 %65, 1


Uprime : [0x55fd5a59d990]:   %67 = xor i8 %66, 1


Uprime Matches: [0x55fd5a691e70]:   %68 = xor i8 %67, 1


Adj: [0x55fd5a68db50]:   store i8 %59, i8* %61, align 1


Removing: [0x55fd5a539888]:   %4 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59ef98]:   %76 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a5a0c70]:   %82 = add i64 %76, -16


Uprime Matches: [0x55fd5a5cd8c0]:   %17 = add i64 %16, -16
[0x55fd5a5cdd40]:   %23 = add i64 %22, -16
[0x55fd5a5f01b0]:   %83 = add i64 %77, -16


Adj: [0x55fd5a523f70]:   store i64 %4, i64* %9, align 8


Removing: [0x55fd5a5d17a8]:   %34 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59ef98]:   %76 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a5a0c70]:   %82 = add i64 %76, -16


Uprime Matches: [0x55fd5a5cd8c0]:   %17 = add i64 %16, -16
[0x55fd5a5cdd40]:   %23 = add i64 %22, -16
[0x55fd5a5f01b0]:   %83 = add i64 %77, -16


Adj: [0x55fd5a5f07b0]:   %35 = add i64 %34, -4
[0x55fd5a5f4c00]:   %41 = add i64 %34, -24


Removing: [0x55fd5a5cfeb8]:   %16 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59ef98]:   %76 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a5a0950]:   %77 = add i64 %76, -24


Uprime Matches: [0x55fd5a5cc9c0]:   %31 = add i64 %22, -24
[0x55fd5a5ef050]:   %78 = add i64 %77, -24
[0x55fd5a5f4c00]:   %41 = add i64 %34, -24


Adj: [0x55fd5a5cd8c0]:   %17 = add i64 %16, -16


Removing: [0x55fd5a5c8888]:   %10 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a5a09b8]:   %78 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a5a0f30]:   %86 = add i64 %78, 11


Uprime Matches: [0x55fd5a5e1a30]:   %32 = add i64 %24, 11
[0x55fd5a5f2040]:   %87 = add i64 %79, 11


Adj: [0x55fd5a5cab80]:   %14 = add i64 %10, 6


Removing: [0x55fd5a5cf5b8]:   %36 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a5a09b8]:   %78 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a5a0f30]:   %86 = add i64 %78, 11


Uprime Matches: [0x55fd5a5e1a30]:   %32 = add i64 %24, 11
[0x55fd5a5f2040]:   %87 = add i64 %79, 11


Adj: [0x55fd5a5351e0]:   %76 = add i64 %36, 18
[0x55fd5a5d2120]:   %42 = add i64 %36, 7
[0x55fd5a5f1610]:   %37 = add i64 %36, 3
[0x55fd5a5fa9d0]:   %45 = add i64 %36, 14


Removing: [0x55fd5a5d0248]:   %19 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a5a09b8]:   %78 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a5a0f30]:   %86 = add i64 %78, 11


Uprime Matches: [0x55fd5a5e1a30]:   %32 = add i64 %24, 11
[0x55fd5a5f2040]:   %87 = add i64 %79, 11


Adj: [0x55fd5a5cd9d0]:   %20 = add i64 %19, 4


Removing: [0x55fd5a5db8c8]:   %89 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a5a09b8]:   %78 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a5a0f30]:   %86 = add i64 %78, 11


Uprime Matches: [0x55fd5a5e1a30]:   %32 = add i64 %24, 11
[0x55fd5a5f2040]:   %87 = add i64 %79, 11


Adj: [0x55fd5a5f3b20]:   %90 = add i64 %89, 1
[0x55fd5a5f66b0]:   %95 = add i64 %89, 2


Removing: [0x55fd5a5d0a98]:   %24 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a5a09b8]:   %78 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a5a0cf0]:   %83 = add i64 %78, 8


Uprime Matches: [0x55fd5a5eac30]:   %84 = add i64 %79, 8
[0x55fd5a5f4210]:   %92 = add i64 %91, 8


Adj: [0x55fd5a5cdf20]:   %25 = add i64 %24, 4
[0x55fd5a5cef50]:   %28 = add i64 %24, 7
[0x55fd5a5e1a30]:   %32 = add i64 %24, 11


Removing: [0x55fd5a5d1678]:   %33 = inttoptr i64 %31 to i64*
From the pot matches of: [0x55fd5a5a0b18]:   %80 = inttoptr i64 %77 to i64*


Uprime : [0x55fd5a5a0b78]:   %81 = load i64, i64* %80, align 8


Uprime Matches: [0x55fd5a539888]:   %4 = load i64, i64* %RBP.i, align 8
[0x55fd5a58f618]:   %7 = load i64, i64* %6, align 8
[0x55fd5a5c8888]:   %10 = load i64, i64* %3, align 8
[0x55fd5a5ca228]:   %13 = load i32, i32* %EDI.i37, align 4
[0x55fd5a5cf5b8]:   %36 = load i64, i64* %3, align 8
[0x55fd5a5cfeb8]:   %16 = load i64, i64* %RBP.i, align 8
[0x55fd5a5d0118]:   %18 = load i64, i64* %RSI.i34, align 8
[0x55fd5a5d0248]:   %19 = load i64, i64* %3, align 8
[0x55fd5a5d04a8]:   %22 = load i64, i64* %RBP.i, align 8
[0x55fd5a5d0a98]:   %24 = load i64, i64* %3, align 8
[0x55fd5a5d1548]:   %30 = load i64, i64* %29, align 8
[0x55fd5a5d17a8]:   %34 = load i64, i64* %RBP.i, align 8
[0x55fd5a5d1e88]:   %79 = load i64, i64* %3, align 8
[0x55fd5a5d2858]:   %39 = load i32, i32* %38, align 4
[0x55fd5a5d37c8]:   %44 = load i64, i64* %43, align 8
[0x55fd5a5d6618]:   %77 = load i64, i64* %RBP.i, align 8
[0x55fd5a5d7b08]:   %82 = load i64, i64* %81, align 8
[0x55fd5a5d92c8]:   %86 = load i64, i64* %85, align 8
[0x55fd5a5db8c8]:   %89 = load i64, i64* %3, align 8
[0x55fd5a5dbeb8]:   %91 = load i64, i64* %6, align 8
[0x55fd5a5dca98]:   %94 = load i64, i64* %93, align 8
[0x55fd5a5dd1b8]:   %97 = load i64, i64* %96, align 8
[0x55fd5a5f3a38]:   %27 = load i64, i64* %26, align 8


Adj: [0x55fd5a5f08c0]:   store i64 %30, i64* %33, align 8


Removing: [0x55fd5a5d0378]:   %21 = inttoptr i64 %17 to i64*
From the pot matches of: [0x55fd5a5a0dd8]:   %84 = inttoptr i64 %82 to i64*


Uprime : [0x55fd5a5a0e38]:   %85 = load i64, i64* %84, align 8


Uprime Matches: [0x55fd5a539888]:   %4 = load i64, i64* %RBP.i, align 8
[0x55fd5a58f618]:   %7 = load i64, i64* %6, align 8
[0x55fd5a5c8888]:   %10 = load i64, i64* %3, align 8
[0x55fd5a5ca228]:   %13 = load i32, i32* %EDI.i37, align 4
[0x55fd5a5cf5b8]:   %36 = load i64, i64* %3, align 8
[0x55fd5a5cfeb8]:   %16 = load i64, i64* %RBP.i, align 8
[0x55fd5a5d0118]:   %18 = load i64, i64* %RSI.i34, align 8
[0x55fd5a5d0248]:   %19 = load i64, i64* %3, align 8
[0x55fd5a5d04a8]:   %22 = load i64, i64* %RBP.i, align 8
[0x55fd5a5d0a98]:   %24 = load i64, i64* %3, align 8
[0x55fd5a5d1548]:   %30 = load i64, i64* %29, align 8
[0x55fd5a5d17a8]:   %34 = load i64, i64* %RBP.i, align 8
[0x55fd5a5d1e88]:   %79 = load i64, i64* %3, align 8
[0x55fd5a5d2858]:   %39 = load i32, i32* %38, align 4
[0x55fd5a5d37c8]:   %44 = load i64, i64* %43, align 8
[0x55fd5a5d6618]:   %77 = load i64, i64* %RBP.i, align 8
[0x55fd5a5d7b08]:   %82 = load i64, i64* %81, align 8
[0x55fd5a5d92c8]:   %86 = load i64, i64* %85, align 8
[0x55fd5a5db8c8]:   %89 = load i64, i64* %3, align 8
[0x55fd5a5dbeb8]:   %91 = load i64, i64* %6, align 8
[0x55fd5a5dca98]:   %94 = load i64, i64* %93, align 8
[0x55fd5a5dd1b8]:   %97 = load i64, i64* %96, align 8
[0x55fd5a5f3a38]:   %27 = load i64, i64* %26, align 8


Adj: [0x55fd5a5ecd50]:   store i64 %18, i64* %21, align 8


Removing: [0x55fd5a5f3a38]:   %27 = load i64, i64* %26, align 8
From the pot matches of: [0x55fd5a5a0e38]:   %85 = load i64, i64* %84, align 8


Uprime : [0x55fd5a5a0eb0]:   store i64 %85, i64* %RAX, align 8, !tbaa !1257


Uprime Matches: [0x55fd5a5f2ef0]:   store i64 %86, i64* %RAX.i6, align 8


Adj: [0x55fd5a5ce690]:   store i64 %27, i64* %RSI.i34, align 8
[0x55fd5a5d1418]:   %29 = inttoptr i64 %27 to i64*


Removing: [0x55fd5a5d1418]:   %29 = inttoptr i64 %27 to i64*
From the pot matches of: [0x55fd5a5a1018]:   %87 = inttoptr i64 %85 to i64*


Uprime : [0x55fd5a5a1090]:   store i64 %81, i64* %87, align 8


Uprime Matches: [0x55fd5a5f0020]:   store i64 %82, i64* %RSI.i34, align 8
[0x55fd5a5f3780]:   store i64 %82, i64* %88, align 8


Adj: [0x55fd5a5d1548]:   %30 = load i64, i64* %29, align 8


Removing: [0x55fd5a5c8888]:   %10 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a5a10f8]:   %88 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a5973e0]:   %94 = add i64 %88, 2


Uprime Matches: [0x55fd5a5f66b0]:   %95 = add i64 %89, 2


Adj: [0x55fd5a5cab80]:   %14 = add i64 %10, 6


Removing: [0x55fd5a5cf5b8]:   %36 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a5a10f8]:   %88 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a5973e0]:   %94 = add i64 %88, 2


Uprime Matches: [0x55fd5a5f66b0]:   %95 = add i64 %89, 2


Adj: [0x55fd5a5351e0]:   %76 = add i64 %36, 18
[0x55fd5a5d2120]:   %42 = add i64 %36, 7
[0x55fd5a5f1610]:   %37 = add i64 %36, 3
[0x55fd5a5fa9d0]:   %45 = add i64 %36, 14


Removing: [0x55fd5a5d0248]:   %19 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a5a10f8]:   %88 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a5973e0]:   %94 = add i64 %88, 2


Uprime Matches: [0x55fd5a5f66b0]:   %95 = add i64 %89, 2


Adj: [0x55fd5a5cd9d0]:   %20 = add i64 %19, 4


Removing: [0x55fd5a5d0a98]:   %24 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a5a10f8]:   %88 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a5973e0]:   %94 = add i64 %88, 2


Uprime Matches: [0x55fd5a5f66b0]:   %95 = add i64 %89, 2


Adj: [0x55fd5a5cdf20]:   %25 = add i64 %24, 4
[0x55fd5a5cef50]:   %28 = add i64 %24, 7
[0x55fd5a5e1a30]:   %32 = add i64 %24, 11


Removing: [0x55fd5a5d1e88]:   %79 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a5a10f8]:   %88 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a5973e0]:   %94 = add i64 %88, 2


Uprime Matches: [0x55fd5a5f66b0]:   %95 = add i64 %89, 2


Adj: [0x55fd5a5eac30]:   %84 = add i64 %79, 8
[0x55fd5a5ef910]:   %80 = add i64 %79, 4
[0x55fd5a5f2040]:   %87 = add i64 %79, 11


Removing: [0x55fd5a58f618]:   %7 = load i64, i64* %6, align 8
From the pot matches of: [0x55fd5a5a1258]:   %90 = load i64, i64* %6, align 8, !tbaa !1257


Uprime : [0x55fd5a597620]:   %97 = add i64 %90, 16


Uprime Matches: [0x55fd5a5ed7b0]:   %98 = add i64 %91, 16


Adj: [0x55fd5a524730]:   %8 = add i64 %7, -8
[0x55fd5a5cc5f0]:   %12 = add i64 %7, -12

Round: 1

Removing: [0x55fd5a5cdd40]:   %23 = add i64 %22, -16
From the pot matches of: [0x55fd5a59cd40]:   %16 = add i64 %15, -16


Uprime : [0x55fd5a59d018]:   %20 = inttoptr i64 %16 to i64*


Uprime Matches: [0x55fd5a5d0378]:   %21 = inttoptr i64 %17 to i64*


Adj: [0x55fd5a5eadc8]:   %26 = inttoptr i64 %23 to i64*


Removing: [0x55fd5a5f01b0]:   %83 = add i64 %77, -16
From the pot matches of: [0x55fd5a59cd40]:   %16 = add i64 %15, -16


Uprime : [0x55fd5a59d018]:   %20 = inttoptr i64 %16 to i64*


Uprime Matches: [0x55fd5a5d0378]:   %21 = inttoptr i64 %17 to i64*


Adj: [0x55fd5a5d7c38]:   %85 = inttoptr i64 %83 to i64*


Removing: [0x55fd5a5d7c38]:   %85 = inttoptr i64 %83 to i64*
From the pot matches of: [0x55fd5a59d338]:   %25 = inttoptr i64 %22 to i64*


Uprime : [0x55fd5a59d398]:   %26 = load i64, i64* %25, align 8


Uprime Matches: [0x55fd5a5f3a38]:   %27 = load i64, i64* %26, align 8


Adj: [0x55fd5a5d92c8]:   %86 = load i64, i64* %85, align 8


Removing: [0x55fd5a5ef050]:   %78 = add i64 %77, -24
From the pot matches of: [0x55fd5a59d6d0]:   %30 = add i64 %21, -24


Uprime : [0x55fd5a59d838]:   %32 = inttoptr i64 %30 to i64*


Uprime Matches: [0x55fd5a5d1678]:   %33 = inttoptr i64 %31 to i64*


Adj: [0x55fd5a5d2218]:   %81 = inttoptr i64 %78 to i64*


Removing: [0x55fd5a5d5dc8]:   %58 = trunc i64 %56 to i8
From the pot matches of: [0x55fd5a59d898]:   %65 = trunc i32 %64 to i8


Uprime : [0x55fd5a59d910]:   %66 = and i8 %65, 1


Uprime Matches: [0x55fd5a68eea0]:   %67 = and i8 %66, 1


Adj: [0x55fd5a685960]:   %59 = and i8 %58, 1


Removing: [0x55fd5a5cc9c0]:   %31 = add i64 %22, -24
From the pot matches of: [0x55fd5a5a0950]:   %77 = add i64 %76, -24


Uprime : [0x55fd5a5a0b18]:   %80 = inttoptr i64 %77 to i64*


Uprime Matches: [0x55fd5a5d2218]:   %81 = inttoptr i64 %78 to i64*


Adj: [0x55fd5a5d1678]:   %33 = inttoptr i64 %31 to i64*


Removing: [0x55fd5a5eadc8]:   %26 = inttoptr i64 %23 to i64*
From the pot matches of: [0x55fd5a5a0dd8]:   %84 = inttoptr i64 %82 to i64*


Uprime : [0x55fd5a5a0e38]:   %85 = load i64, i64* %84, align 8


Uprime Matches: [0x55fd5a5d92c8]:   %86 = load i64, i64* %85, align 8


Adj: [0x55fd5a5f3a38]:   %27 = load i64, i64* %26, align 8

Round: 2

Removing: [0x55fd5a5d04a8]:   %22 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59ccc8]:   %15 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a59cd40]:   %16 = add i64 %15, -16


Uprime Matches: [0x55fd5a5cd8c0]:   %17 = add i64 %16, -16


Adj: [0x55fd5a5cc9c0]:   %31 = add i64 %22, -24
[0x55fd5a5cdd40]:   %23 = add i64 %22, -16


Removing: [0x55fd5a5d6618]:   %77 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59ccc8]:   %15 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a59cd40]:   %16 = add i64 %15, -16


Uprime Matches: [0x55fd5a5cd8c0]:   %17 = add i64 %16, -16


Adj: [0x55fd5a5ef050]:   %78 = add i64 %77, -24
[0x55fd5a5f01b0]:   %83 = add i64 %77, -16


Removing: [0x55fd5a5d6618]:   %77 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59d0f8]:   %21 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a59d6d0]:   %30 = add i64 %21, -24


Uprime Matches: [0x55fd5a5cc9c0]:   %31 = add i64 %22, -24


Adj: [0x55fd5a5ef050]:   %78 = add i64 %77, -24
[0x55fd5a5f01b0]:   %83 = add i64 %77, -16


Removing: [0x55fd5a5d04a8]:   %22 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x55fd5a59ef98]:   %76 = load i64, i64* %RBP, align 8


Uprime : [0x55fd5a5a0950]:   %77 = add i64 %76, -24


Uprime Matches: [0x55fd5a5ef050]:   %78 = add i64 %77, -24


Adj: [0x55fd5a5cc9c0]:   %31 = add i64 %22, -24
[0x55fd5a5cdd40]:   %23 = add i64 %22, -16


Removing: [0x55fd5a5cdd40]:   %23 = add i64 %22, -16
From the pot matches of: [0x55fd5a5a0c70]:   %82 = add i64 %76, -16


Uprime : [0x55fd5a5a0dd8]:   %84 = inttoptr i64 %82 to i64*


Uprime Matches: [0x55fd5a5d7c38]:   %85 = inttoptr i64 %83 to i64*


Adj: [0x55fd5a5eadc8]:   %26 = inttoptr i64 %23 to i64*

Round: 3


[Info] After Dual Simulation: Round: 0
[0x55fd5a58c5c0]:   store i64 %39, i64* %RDI, align 8, !tbaa !1257 {
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	}

[0x55fd5a58c640]:   store i64 %39, i64* %RCX, align 8, !tbaa !1257 {
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	}

[0x55fd5a58c6c0]:   %44 = add i64 %35, 14 {
	[0x55fd5a5fa9d0]:  %45 = add i64 %36, 14
	}

[0x55fd5a58c740]:   store i64 %44, i64* %PC, align 8 {
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	}

[0x55fd5a5951c0]: %struct.State* %0 {
	[0x55fd5a5f8fc0]:%struct.State.0* %0
	}

[0x55fd5a597360]:   store i64 %91, i64* %6, align 8, !tbaa !1257 {
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	}

[0x55fd5a5973e0]:   %94 = add i64 %88, 2 {
	[0x55fd5a5f66b0]:  %95 = add i64 %89, 2
	}

[0x55fd5a597460]:   store i64 %94, i64* %PC, align 8 {
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	}

[0x55fd5a5974c8]:   %95 = inttoptr i64 %91 to i64* {
	[0x55fd5a5dcbc8]:  %96 = inttoptr i64 %92 to i64*
	}

[0x55fd5a597528]:   %96 = load i64, i64* %95, align 8 {
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	}

[0x55fd5a5975a0]:   store i64 %96, i64* %PC, align 8, !tbaa !1257 {
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	}

[0x55fd5a597620]:   %97 = add i64 %90, 16 {
	[0x55fd5a5ed7b0]:  %98 = add i64 %91, 16
	}

[0x55fd5a5976a0]:   store i64 %97, i64* %6, align 8, !tbaa !1257 {
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	}

[0x55fd5a597708]:   ret %struct.Memory* %2 {
	[0x55fd5a5dd2e8]:  ret %struct.Memory.31* %2
	}

[0x55fd5a59b870]: i64 %1 {
	[0x55fd5a5f1120]:i64 %1
	}

[0x55fd5a59bad0]: %struct.Memory* %2 {
	[0x55fd5a5f12a0]:%struct.Memory.31* %2
	}

[0x55fd5a59bc58]:   %EDI = bitcast %union.anon* %3 to i32* {
	[0x55fd5a5caac8]:  %EDI.i37 = bitcast %union.anon.4* %11 to i32*
	}

[0x55fd5a59bd30]:   %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0 {
	[0x55fd5a5709f0]:  %3 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 33, i32 0, i32 0
	}

[0x55fd5a59be08]:   %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0 {
	[0x55fd5a530d58]:  %11 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 11, i32 0
	}

[0x55fd5a59bef0]:   %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0 {
	[0x55fd5a5730a0]:  %RAX.i6 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 1, i32 0, i32 0
	}

[0x55fd5a59c000]:   %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0 {
	[0x55fd5a5721c0]:  %RCX.i = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 5, i32 0, i32 0
	}

[0x55fd5a59c110]:   %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0 {
	[0x55fd5a571aa0]:  %RSI.i34 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 9, i32 0, i32 0
	}

[0x55fd5a59c1d8]:   %RDI = getelementptr inbounds %union.anon, %union.anon* %3, i64 0, i32 0 {
	[0x55fd5a53c048]:  %RDI.i23 = getelementptr inbounds %union.anon.4, %union.anon.4* %11, i64 0, i32 0
	}

[0x55fd5a59c2e0]:   %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0 {
	[0x55fd5a570f80]:  %RBP.i = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 15, i32 0, i32 0
	}

[0x55fd5a59c378]:   %4 = load i64, i64* %RBP, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	}

[0x55fd5a59c440]:   %5 = add i64 %1, 1 {
	[0x55fd5a53bf80]:  %5 = add i64 %1, 1
	}

[0x55fd5a59c4c0]:   store i64 %5, i64* %PC, align 8 {
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	}

[0x55fd5a59c5a0]:   %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0 {
	[0x55fd5a5716a0]:  %6 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 13, i32 0, i32 0
	}

[0x55fd5a59c618]:   %7 = load i64, i64* %6, align 8, !tbaa !1257 {
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	}

[0x55fd5a59c690]:   %8 = add i64 %7, -8 {
	[0x55fd5a524730]:  %8 = add i64 %7, -8
	}

[0x55fd5a59c6f8]:   %17 = load i64, i64* %RSI, align 8 {
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	}

[0x55fd5a59c788]:   %9 = inttoptr i64 %8 to i64* {
	[0x55fd5a5c87f8]:  %9 = inttoptr i64 %8 to i64*
	}

[0x55fd5a59c800]:   store i64 %4, i64* %9, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	}

[0x55fd5a59c880]:   store i64 %8, i64* %6, align 8, !tbaa !1257 {
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	}

[0x55fd5a59c8e8]:   %10 = load i64, i64* %PC, align 8 {
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	}

[0x55fd5a59c960]:   store i64 %8, i64* %RBP, align 8, !tbaa !1257 {
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	}

[0x55fd5a59ca20]:   %11 = add i64 %7, -12 {
	[0x55fd5a5cc5f0]:  %12 = add i64 %7, -12
	}

[0x55fd5a59ca88]:   %12 = load i32, i32* %EDI, align 4 {
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	}

[0x55fd5a59cb00]:   %13 = add i64 %10, 6 {
	[0x55fd5a5cab80]:  %14 = add i64 %10, 6
	}

[0x55fd5a59cb80]:   store i64 %13, i64* %PC, align 8 {
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	}

[0x55fd5a59cbe8]:   %14 = inttoptr i64 %11 to i32* {
	[0x55fd5a5cfb28]:  %15 = inttoptr i64 %12 to i32*
	}

[0x55fd5a59cc60]:   store i32 %12, i32* %14, align 4 {
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	}

[0x55fd5a59ccc8]:   %15 = load i64, i64* %RBP, align 8 {
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	}

[0x55fd5a59cd40]:   %16 = add i64 %15, -16 {
	[0x55fd5a5cd8c0]:  %17 = add i64 %16, -16
	}

[0x55fd5a59cdc0]:   store i64 %29, i64* %32, align 8 {
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	}

[0x55fd5a59ce28]:   %33 = load i64, i64* %RBP, align 8 {
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	}

[0x55fd5a59ceb8]:   %18 = load i64, i64* %PC, align 8 {
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	}

[0x55fd5a59cf30]:   %19 = add i64 %18, 4 {
	[0x55fd5a5cd9d0]:  %20 = add i64 %19, 4
	[0x55fd5a5cdf20]:  %25 = add i64 %24, 4
	[0x55fd5a5ef910]:  %80 = add i64 %79, 4
	}

[0x55fd5a59cfb0]:   store i64 %19, i64* %PC, align 8 {
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	}

[0x55fd5a59d018]:   %20 = inttoptr i64 %16 to i64* {
	[0x55fd5a5d0378]:  %21 = inttoptr i64 %17 to i64*
	}

[0x55fd5a59d090]:   store i64 %17, i64* %20, align 8 {
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	}

[0x55fd5a59d0f8]:   %21 = load i64, i64* %RBP, align 8 {
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	}

[0x55fd5a59d170]:   %22 = add i64 %21, -16 {
	[0x55fd5a5cdd40]:  %23 = add i64 %22, -16
	}

[0x55fd5a59d1d8]:   %23 = load i64, i64* %PC, align 8 {
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	}

[0x55fd5a59d250]:   %24 = add i64 %23, 4 {
	[0x55fd5a5cdf20]:  %25 = add i64 %24, 4
	}

[0x55fd5a59d2d0]:   store i64 %24, i64* %PC, align 8 {
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	}

[0x55fd5a59d338]:   %25 = inttoptr i64 %22 to i64* {
	[0x55fd5a5eadc8]:  %26 = inttoptr i64 %23 to i64*
	}

[0x55fd5a59d398]:   %26 = load i64, i64* %25, align 8 {
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a59d410]:   store i64 %26, i64* %RSI, align 8, !tbaa !1257 {
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	}

[0x55fd5a59d490]:   %27 = add i64 %23, 7 {
	[0x55fd5a5cef50]:  %28 = add i64 %24, 7
	}

[0x55fd5a59d510]:   store i64 %27, i64* %PC, align 8 {
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	}

[0x55fd5a59d578]:   %28 = inttoptr i64 %26 to i64* {
	[0x55fd5a5d1418]:  %29 = inttoptr i64 %27 to i64*
	}

[0x55fd5a59d5d8]:   %29 = load i64, i64* %28, align 8 {
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	}

[0x55fd5a59d650]:   store i64 %29, i64* %RSI, align 8, !tbaa !1257 {
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	}

[0x55fd5a59d6d0]:   %30 = add i64 %21, -24 {
	[0x55fd5a5cc9c0]:  %31 = add i64 %22, -24
	}

[0x55fd5a59d750]:   %31 = add i64 %23, 11 {
	[0x55fd5a5e1a30]:  %32 = add i64 %24, 11
	}

[0x55fd5a59d7d0]:   store i64 %31, i64* %PC, align 8 {
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	}

[0x55fd5a59d838]:   %32 = inttoptr i64 %30 to i64* {
	[0x55fd5a5d1678]:  %33 = inttoptr i64 %31 to i64*
	}

[0x55fd5a59d898]:   %65 = trunc i32 %64 to i8 {
	[0x55fd5a5d6158]:  %66 = trunc i32 %65 to i8
	}

[0x55fd5a59d910]:   %66 = and i8 %65, 1 {
	[0x55fd5a68eea0]:  %67 = and i8 %66, 1
	}

[0x55fd5a59d990]:   %67 = xor i8 %66, 1 {
	[0x55fd5a691e70]:  %68 = xor i8 %67, 1
	}

[0x55fd5a59da10]:   store i8 %67, i8* %61, align 1, !tbaa !1261 {
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	}

[0x55fd5a59db00]:   %34 = add i64 %33, -4 {
	[0x55fd5a5f07b0]:  %35 = add i64 %34, -4
	}

[0x55fd5a59db68]:   %35 = load i64, i64* %PC, align 8 {
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	}

[0x55fd5a59dbe0]:   %36 = add i64 %35, 3 {
	[0x55fd5a5f1610]:  %37 = add i64 %36, 3
	}

[0x55fd5a59dc60]:   store i64 %36, i64* %PC, align 8 {
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	}

[0x55fd5a59dcc8]:   %37 = inttoptr i64 %34 to i32* {
	[0x55fd5a5d2728]:  %38 = inttoptr i64 %35 to i32*
	}

[0x55fd5a59dd28]:   %38 = load i32, i32* %37, align 4 {
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	}

[0x55fd5a59dd88]:   %39 = zext i32 %38 to i64 {
	[0x55fd5a5d31d8]:  %40 = zext i32 %39 to i64
	}

[0x55fd5a59de00]:   store i64 %39, i64* %RDI, align 8, !tbaa !1257 {
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	}

[0x55fd5a59de80]:   %40 = add i64 %33, -24 {
	[0x55fd5a5f4c00]:  %41 = add i64 %34, -24
	}

[0x55fd5a59df00]:   %41 = add i64 %35, 7 {
	[0x55fd5a5d2120]:  %42 = add i64 %36, 7
	}

[0x55fd5a59df80]:   store i64 %41, i64* %PC, align 8 {
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	}

[0x55fd5a59dfe8]:   %42 = inttoptr i64 %40 to i64* {
	[0x55fd5a5d3308]:  %43 = inttoptr i64 %41 to i64*
	}

[0x55fd5a59e048]:   %43 = load i64, i64* %42, align 8 {
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	}

[0x55fd5a59e0c0]:   store i64 %43, i64* %RSI, align 8, !tbaa !1257 {
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	}

[0x55fd5a59ed38]:   %45 = trunc i32 %38 to i6 {
	[0x55fd5a5d3a28]:  %46 = trunc i32 %39 to i6
	}

[0x55fd5a59ee08]:   switch i6 %45, label %49 [
    i6 0, label %_ZN12_GLOBAL__N_1L3SHRI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i6 1, label %46
  ] {
	[0x55fd5a5d4008]:  switch i6 %46, label %50 [
    i6 0, label %routine_shrq__cl___rsi.exit
    i6 1, label %47
  ]
	}

[0x55fd5a59ef28]:   %74 = phi i64 [ %59, %54 ], [ %43, %block_400520 ] {
	[0x55fd5a5d3b48]:  %75 = phi i64 [ %60, %55 ], [ %44, %entry ]
	}

[0x55fd5a59ef98]:   %76 = load i64, i64* %RBP, align 8 {
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	}

[0x55fd5a59f180]:   %47 = lshr i64 %43, 63 {
	[0x55fd5a60ea60]:  %48 = lshr i64 %44, 63
	}

[0x55fd5a59f1e8]:   %48 = trunc i64 %47 to i8 {
	[0x55fd5a5d4148]:  %49 = trunc i64 %48 to i8
	}

[0x55fd5a59f298]:   br label %54 {
	[0x55fd5a5d4bf8]:  br label %55
	[0x55fd5a5d5908]:  br label %55
	[0x55fd5a5d63b8]:  br label %routine_shrq__cl___rsi.exit
	}

[0x55fd5a59f310]:   %50 = and i32 %38, 63 {
	[0x55fd5a60b210]:  %51 = and i32 %39, 63
	}

[0x55fd5a59f378]:   %51 = zext i32 %50 to i64 {
	[0x55fd5a5d4d28]:  %52 = zext i32 %51 to i64
	}

[0x55fd5a59f430]:   %52 = add nsw i64 %51, -1 {
	[0x55fd5a684650]:  %53 = add nsw i64 %52, -1
	}

[0x55fd5a59f4b0]:   %53 = lshr i64 %43, %52 {
	[0x55fd5a686e70]:  %54 = lshr i64 %44, %53
	}

[0x55fd5a59f518]:   br label %54 {
	[0x55fd5a5d4bf8]:  br label %55
	[0x55fd5a5d5908]:  br label %55
	[0x55fd5a5d63b8]:  br label %routine_shrq__cl___rsi.exit
	}

[0x55fd5a59f568]:   %55 = phi i64 [ %53, %49 ], [ %43, %46 ] {
	[0x55fd5a5d5b58]:  %56 = phi i64 [ %54, %50 ], [ %44, %47 ]
	}

[0x55fd5a59f618]:   %56 = phi i8 [ 0, %49 ], [ %48, %46 ] {
	[0x55fd5a5d5c88]:  %57 = phi i8 [ 0, %50 ], [ %49, %47 ]
	}

[0x55fd5a59f6d8]:   %57 = trunc i64 %55 to i8 {
	[0x55fd5a5d5dc8]:  %58 = trunc i64 %56 to i8
	}

[0x55fd5a59f750]:   %58 = and i8 %57, 1 {
	[0x55fd5a685960]:  %59 = and i8 %58, 1
	}

[0x55fd5a59f7d0]:   %59 = lshr i64 %55, 1 {
	[0x55fd5a68c3b0]:  %60 = lshr i64 %56, 1
	}

[0x55fd5a59f850]:   store i64 %59, i64* %RSI, align 8, !tbaa !1257 {
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	}

[0x55fd5a59f900]:   %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1 {
	[0x55fd5a5cb180]:  %61 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 1
	}

[0x55fd5a59f990]:   store i8 %58, i8* %60, align 1, !tbaa !1261 {
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	}

[0x55fd5a59fa40]:   %61 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3 {
	[0x55fd5a5cde40]:  %62 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 3
	}

[0x55fd5a59fab8]:   %62 = trunc i64 %59 to i32 {
	[0x55fd5a5d5ef8]:  %63 = trunc i64 %60 to i32
	}

[0x55fd5a59fb30]:   %63 = and i32 %62, 255 {
	[0x55fd5a690340]:  %64 = and i32 %63, 255
	}

[0x55fd5a59fbf0]:   %64 = tail call i32 @llvm.ctpop.i32(i32 %63) #9 {
	[0x55fd5a5ee5e0]:  %65 = tail call i32 @llvm.ctpop.i32(i32 %64)
	}

[0x55fd5a5a0110]:   %68 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5 {
	[0x55fd5a5ee790]:  %69 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 5
	}

[0x55fd5a5a01a0]:   store i8 0, i8* %68, align 1, !tbaa !1261 {
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a5a0250]:   %69 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7 {
	[0x55fd5a5cf6d0]:  %70 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 7
	}

[0x55fd5a5a02e0]:   %70 = icmp eq i64 %59, 0 {
	[0x55fd5a5888b0]:  %71 = icmp eq i64 %60, 0
	}

[0x55fd5a5a0348]:   %71 = zext i1 %70 to i8 {
	[0x55fd5a5d6288]:  %72 = zext i1 %71 to i8
	}

[0x55fd5a5a03c0]:   store i8 %71, i8* %69, align 1, !tbaa !1261 {
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	}

[0x55fd5a5a0470]:   %72 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9 {
	[0x55fd5a5f0dc0]:  %73 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 9
	}

[0x55fd5a5a0500]:   store i8 0, i8* %72, align 1, !tbaa !1261 {
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	}

[0x55fd5a5a05b0]:   %73 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13 {
	[0x55fd5a5d64d0]:  %74 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 13
	}

[0x55fd5a5a0640]:   store i8 %56, i8* %73, align 1, !tbaa !1261 {
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	}

[0x55fd5a5a06a8]:   br label %_ZN12_GLOBAL__N_1L3SHRI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_.exit {
	[0x55fd5a5d4bf8]:  br label %55
	[0x55fd5a5d5908]:  br label %55
	[0x55fd5a5d63b8]:  br label %routine_shrq__cl___rsi.exit
	}

[0x55fd5a5a07d0]:   %75 = add i64 %35, 18 {
	[0x55fd5a5351e0]:  %76 = add i64 %36, 18
	}

[0x55fd5a5a0850]:   store i64 %75, i64* %PC, align 8 {
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	}

[0x55fd5a5a08d0]:   store i64 %74, i64* %42, align 8 {
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	}

[0x55fd5a5a0950]:   %77 = add i64 %76, -24 {
	[0x55fd5a5ef050]:  %78 = add i64 %77, -24
	}

[0x55fd5a5a09b8]:   %78 = load i64, i64* %PC, align 8 {
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	}

[0x55fd5a5a0a30]:   %79 = add i64 %78, 4 {
	[0x55fd5a5ef910]:  %80 = add i64 %79, 4
	}

[0x55fd5a5a0ab0]:   store i64 %79, i64* %PC, align 8 {
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	}

[0x55fd5a5a0b18]:   %80 = inttoptr i64 %77 to i64* {
	[0x55fd5a5d2218]:  %81 = inttoptr i64 %78 to i64*
	}

[0x55fd5a5a0b78]:   %81 = load i64, i64* %80, align 8 {
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	}

[0x55fd5a5a0bf0]:   store i64 %81, i64* %RSI, align 8, !tbaa !1257 {
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	}

[0x55fd5a5a0c70]:   %82 = add i64 %76, -16 {
	[0x55fd5a5f01b0]:  %83 = add i64 %77, -16
	}

[0x55fd5a5a0cf0]:   %83 = add i64 %78, 8 {
	[0x55fd5a5eac30]:  %84 = add i64 %79, 8
	}

[0x55fd5a5a0d70]:   store i64 %83, i64* %PC, align 8 {
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	}

[0x55fd5a5a0dd8]:   %84 = inttoptr i64 %82 to i64* {
	[0x55fd5a5d7c38]:  %85 = inttoptr i64 %83 to i64*
	}

[0x55fd5a5a0e38]:   %85 = load i64, i64* %84, align 8 {
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	}

[0x55fd5a5a0eb0]:   store i64 %85, i64* %RAX, align 8, !tbaa !1257 {
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	}

[0x55fd5a5a0f30]:   %86 = add i64 %78, 11 {
	[0x55fd5a5f2040]:  %87 = add i64 %79, 11
	}

[0x55fd5a5a0fb0]:   store i64 %86, i64* %PC, align 8 {
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	}

[0x55fd5a5a1018]:   %87 = inttoptr i64 %85 to i64* {
	[0x55fd5a5dabb8]:  %88 = inttoptr i64 %86 to i64*
	}

[0x55fd5a5a1090]:   store i64 %81, i64* %87, align 8 {
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	}

[0x55fd5a5a10f8]:   %88 = load i64, i64* %PC, align 8 {
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	}

[0x55fd5a5a1170]:   %89 = add i64 %88, 1 {
	[0x55fd5a5f3b20]:  %90 = add i64 %89, 1
	}

[0x55fd5a5a11f0]:   store i64 %89, i64* %PC, align 8 {
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	}

[0x55fd5a5a1258]:   %90 = load i64, i64* %6, align 8, !tbaa !1257 {
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	}

[0x55fd5a5a12d0]:   %91 = add i64 %90, 8 {
	[0x55fd5a5f4210]:  %92 = add i64 %91, 8
	}

[0x55fd5a5a1338]:   %92 = inttoptr i64 %90 to i64* {
	[0x55fd5a5dc4a8]:  %93 = inttoptr i64 %91 to i64*
	}

[0x55fd5a5a1398]:   %93 = load i64, i64* %92, align 8 {
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	}

[0x55fd5a5a1410]:   store i64 %93, i64* %RBP, align 8, !tbaa !1257 {
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	}


[Info]: Phase II: Retrieve potential BB matches: Round: 0
Retrieved BB Matches...
[0x55fd5a59bb10]: block_400520 {
	[0x55fd5a5eb3a0]:entry
	}

[0x55fd5a59c3c0]:  {
	[0x55fd5a5eb880]:
	}

[0x55fd5a59ee60]: _ZN12_GLOBAL__N_1L3SHRI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_.exit {
	[0x55fd5a5ed250]:routine_shrq__cl___rsi.exit
	}

[0x55fd5a59f020]:  {
	[0x55fd5a5c9e00]:
	}

[0x55fd5a59f230]:  {
	[0x55fd5a5ccdf0]:
	}


[Info]: Phase II: Handle Conflicting Stores: Round: 0

[Info]: Phase I: Dual Simulation: Round: 1
Round: 0

Removing: [0x55fd5a5cdf20]:   %25 = add i64 %24, 4
From the pot matches of: [0x55fd5a59cf30]:   %19 = add i64 %18, 4


Uprime : [0x55fd5a59cfb0]:   store i64 %19, i64* %PC, align 8


Uprime Matches: [0x55fd5a5cdae0]:   store i64 %20, i64* %3, align 8


Adj: [0x55fd5a5ed5d0]:   store i64 %25, i64* %3, align 8


Removing: [0x55fd5a5ef910]:   %80 = add i64 %79, 4
From the pot matches of: [0x55fd5a59cf30]:   %19 = add i64 %18, 4


Uprime : [0x55fd5a59cfb0]:   store i64 %19, i64* %PC, align 8


Uprime Matches: [0x55fd5a5cdae0]:   store i64 %20, i64* %3, align 8


Adj: [0x55fd5a5efaf0]:   store i64 %80, i64* %3, align 8

Round: 1

Removing: [0x55fd5a5d0a98]:   %24 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59ceb8]:   %18 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a59cf30]:   %19 = add i64 %18, 4


Uprime Matches: [0x55fd5a5cd9d0]:   %20 = add i64 %19, 4


Adj: [0x55fd5a5cdf20]:   %25 = add i64 %24, 4
[0x55fd5a5cef50]:   %28 = add i64 %24, 7
[0x55fd5a5e1a30]:   %32 = add i64 %24, 11


Removing: [0x55fd5a5d1e88]:   %79 = load i64, i64* %3, align 8
From the pot matches of: [0x55fd5a59ceb8]:   %18 = load i64, i64* %PC, align 8


Uprime : [0x55fd5a59cf30]:   %19 = add i64 %18, 4


Uprime Matches: [0x55fd5a5cd9d0]:   %20 = add i64 %19, 4


Adj: [0x55fd5a5eac30]:   %84 = add i64 %79, 8
[0x55fd5a5ef910]:   %80 = add i64 %79, 4
[0x55fd5a5f2040]:   %87 = add i64 %79, 11

Round: 2


[Info] After Dual Simulation: Round: 1
[0x55fd5a58c5c0]:   store i64 %39, i64* %RDI, align 8, !tbaa !1257 {
	[0x55fd5a5d8ba0]:  store i64 %40, i64* %RDI.i23, align 8
	}

[0x55fd5a58c640]:   store i64 %39, i64* %RCX, align 8, !tbaa !1257 {
	[0x55fd5a5d8cd0]:  store i64 %40, i64* %RCX.i, align 8
	}

[0x55fd5a58c6c0]:   %44 = add i64 %35, 14 {
	[0x55fd5a5fa9d0]:  %45 = add i64 %36, 14
	}

[0x55fd5a58c740]:   store i64 %44, i64* %PC, align 8 {
	[0x55fd5a60cb80]:  store i64 %45, i64* %3, align 8
	}

[0x55fd5a5951c0]: %struct.State* %0 {
	[0x55fd5a5f8fc0]:%struct.State.0* %0
	}

[0x55fd5a597360]:   store i64 %91, i64* %6, align 8, !tbaa !1257 {
	[0x55fd5a5f61a0]:  store i64 %92, i64* %6, align 8
	}

[0x55fd5a5973e0]:   %94 = add i64 %88, 2 {
	[0x55fd5a5f66b0]:  %95 = add i64 %89, 2
	}

[0x55fd5a597460]:   store i64 %94, i64* %PC, align 8 {
	[0x55fd5a5f6d00]:  store i64 %95, i64* %3, align 8
	}

[0x55fd5a5974c8]:   %95 = inttoptr i64 %91 to i64* {
	[0x55fd5a5dcbc8]:  %96 = inttoptr i64 %92 to i64*
	}

[0x55fd5a597528]:   %96 = load i64, i64* %95, align 8 {
	[0x55fd5a5dd1b8]:  %97 = load i64, i64* %96, align 8
	}

[0x55fd5a5975a0]:   store i64 %96, i64* %PC, align 8, !tbaa !1257 {
	[0x55fd5a5f6df0]:  store i64 %97, i64* %3, align 8
	}

[0x55fd5a597620]:   %97 = add i64 %90, 16 {
	[0x55fd5a5ed7b0]:  %98 = add i64 %91, 16
	}

[0x55fd5a5976a0]:   store i64 %97, i64* %6, align 8, !tbaa !1257 {
	[0x55fd5a5ed930]:  store i64 %98, i64* %6, align 8
	}

[0x55fd5a597708]:   ret %struct.Memory* %2 {
	[0x55fd5a5dd2e8]:  ret %struct.Memory.31* %2
	}

[0x55fd5a59b870]: i64 %1 {
	[0x55fd5a5f1120]:i64 %1
	}

[0x55fd5a59bad0]: %struct.Memory* %2 {
	[0x55fd5a5f12a0]:%struct.Memory.31* %2
	}

[0x55fd5a59bc58]:   %EDI = bitcast %union.anon* %3 to i32* {
	[0x55fd5a5caac8]:  %EDI.i37 = bitcast %union.anon.4* %11 to i32*
	}

[0x55fd5a59bd30]:   %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0 {
	[0x55fd5a5709f0]:  %3 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 33, i32 0, i32 0
	}

[0x55fd5a59be08]:   %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0 {
	[0x55fd5a530d58]:  %11 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 11, i32 0
	}

[0x55fd5a59bef0]:   %RAX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0, i32 0 {
	[0x55fd5a5730a0]:  %RAX.i6 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 1, i32 0, i32 0
	}

[0x55fd5a59c000]:   %RCX = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 5, i32 0, i32 0 {
	[0x55fd5a5721c0]:  %RCX.i = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 5, i32 0, i32 0
	}

[0x55fd5a59c110]:   %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0 {
	[0x55fd5a571aa0]:  %RSI.i34 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 9, i32 0, i32 0
	}

[0x55fd5a59c1d8]:   %RDI = getelementptr inbounds %union.anon, %union.anon* %3, i64 0, i32 0 {
	[0x55fd5a53c048]:  %RDI.i23 = getelementptr inbounds %union.anon.4, %union.anon.4* %11, i64 0, i32 0
	}

[0x55fd5a59c2e0]:   %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0 {
	[0x55fd5a570f80]:  %RBP.i = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 15, i32 0, i32 0
	}

[0x55fd5a59c378]:   %4 = load i64, i64* %RBP, align 8 {
	[0x55fd5a539888]:  %4 = load i64, i64* %RBP.i, align 8
	}

[0x55fd5a59c440]:   %5 = add i64 %1, 1 {
	[0x55fd5a53bf80]:  %5 = add i64 %1, 1
	}

[0x55fd5a59c4c0]:   store i64 %5, i64* %PC, align 8 {
	[0x55fd5a525010]:  store i64 %5, i64* %3, align 8
	}

[0x55fd5a59c5a0]:   %6 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0 {
	[0x55fd5a5716a0]:  %6 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 6, i32 13, i32 0, i32 0
	}

[0x55fd5a59c618]:   %7 = load i64, i64* %6, align 8, !tbaa !1257 {
	[0x55fd5a58f618]:  %7 = load i64, i64* %6, align 8
	}

[0x55fd5a59c690]:   %8 = add i64 %7, -8 {
	[0x55fd5a524730]:  %8 = add i64 %7, -8
	}

[0x55fd5a59c6f8]:   %17 = load i64, i64* %RSI, align 8 {
	[0x55fd5a5d0118]:  %18 = load i64, i64* %RSI.i34, align 8
	}

[0x55fd5a59c788]:   %9 = inttoptr i64 %8 to i64* {
	[0x55fd5a5c87f8]:  %9 = inttoptr i64 %8 to i64*
	}

[0x55fd5a59c800]:   store i64 %4, i64* %9, align 8 {
	[0x55fd5a523f70]:  store i64 %4, i64* %9, align 8
	}

[0x55fd5a59c880]:   store i64 %8, i64* %6, align 8, !tbaa !1257 {
	[0x55fd5a5cb520]:  store i64 %8, i64* %6, align 8
	}

[0x55fd5a59c8e8]:   %10 = load i64, i64* %PC, align 8 {
	[0x55fd5a5c8888]:  %10 = load i64, i64* %3, align 8
	}

[0x55fd5a59c960]:   store i64 %8, i64* %RBP, align 8, !tbaa !1257 {
	[0x55fd5a5cb630]:  store i64 %8, i64* %RBP.i, align 8
	}

[0x55fd5a59ca20]:   %11 = add i64 %7, -12 {
	[0x55fd5a5cc5f0]:  %12 = add i64 %7, -12
	}

[0x55fd5a59ca88]:   %12 = load i32, i32* %EDI, align 4 {
	[0x55fd5a5ca228]:  %13 = load i32, i32* %EDI.i37, align 4
	}

[0x55fd5a59cb00]:   %13 = add i64 %10, 6 {
	[0x55fd5a5cab80]:  %14 = add i64 %10, 6
	}

[0x55fd5a59cb80]:   store i64 %13, i64* %PC, align 8 {
	[0x55fd5a5cd3b0]:  store i64 %14, i64* %3, align 8
	}

[0x55fd5a59cbe8]:   %14 = inttoptr i64 %11 to i32* {
	[0x55fd5a5cfb28]:  %15 = inttoptr i64 %12 to i32*
	}

[0x55fd5a59cc60]:   store i32 %12, i32* %14, align 4 {
	[0x55fd5a5cd7b0]:  store i32 %13, i32* %15, align 4
	}

[0x55fd5a59ccc8]:   %15 = load i64, i64* %RBP, align 8 {
	[0x55fd5a5cfeb8]:  %16 = load i64, i64* %RBP.i, align 8
	}

[0x55fd5a59cd40]:   %16 = add i64 %15, -16 {
	[0x55fd5a5cd8c0]:  %17 = add i64 %16, -16
	}

[0x55fd5a59cdc0]:   store i64 %29, i64* %32, align 8 {
	[0x55fd5a5f08c0]:  store i64 %30, i64* %33, align 8
	}

[0x55fd5a59ce28]:   %33 = load i64, i64* %RBP, align 8 {
	[0x55fd5a5d17a8]:  %34 = load i64, i64* %RBP.i, align 8
	}

[0x55fd5a59ceb8]:   %18 = load i64, i64* %PC, align 8 {
	[0x55fd5a5d0248]:  %19 = load i64, i64* %3, align 8
	}

[0x55fd5a59cf30]:   %19 = add i64 %18, 4 {
	[0x55fd5a5cd9d0]:  %20 = add i64 %19, 4
	}

[0x55fd5a59cfb0]:   store i64 %19, i64* %PC, align 8 {
	[0x55fd5a5cdae0]:  store i64 %20, i64* %3, align 8
	}

[0x55fd5a59d018]:   %20 = inttoptr i64 %16 to i64* {
	[0x55fd5a5d0378]:  %21 = inttoptr i64 %17 to i64*
	}

[0x55fd5a59d090]:   store i64 %17, i64* %20, align 8 {
	[0x55fd5a5ecd50]:  store i64 %18, i64* %21, align 8
	}

[0x55fd5a59d0f8]:   %21 = load i64, i64* %RBP, align 8 {
	[0x55fd5a5d04a8]:  %22 = load i64, i64* %RBP.i, align 8
	}

[0x55fd5a59d170]:   %22 = add i64 %21, -16 {
	[0x55fd5a5cdd40]:  %23 = add i64 %22, -16
	}

[0x55fd5a59d1d8]:   %23 = load i64, i64* %PC, align 8 {
	[0x55fd5a5d0a98]:  %24 = load i64, i64* %3, align 8
	}

[0x55fd5a59d250]:   %24 = add i64 %23, 4 {
	[0x55fd5a5cdf20]:  %25 = add i64 %24, 4
	}

[0x55fd5a59d2d0]:   store i64 %24, i64* %PC, align 8 {
	[0x55fd5a5ed5d0]:  store i64 %25, i64* %3, align 8
	}

[0x55fd5a59d338]:   %25 = inttoptr i64 %22 to i64* {
	[0x55fd5a5eadc8]:  %26 = inttoptr i64 %23 to i64*
	}

[0x55fd5a59d398]:   %26 = load i64, i64* %25, align 8 {
	[0x55fd5a5f3a38]:  %27 = load i64, i64* %26, align 8
	}

[0x55fd5a59d410]:   store i64 %26, i64* %RSI, align 8, !tbaa !1257 {
	[0x55fd5a5ce690]:  store i64 %27, i64* %RSI.i34, align 8
	}

[0x55fd5a59d490]:   %27 = add i64 %23, 7 {
	[0x55fd5a5cef50]:  %28 = add i64 %24, 7
	}

[0x55fd5a59d510]:   store i64 %27, i64* %PC, align 8 {
	[0x55fd5a5cf060]:  store i64 %28, i64* %3, align 8
	}

[0x55fd5a59d578]:   %28 = inttoptr i64 %26 to i64* {
	[0x55fd5a5d1418]:  %29 = inttoptr i64 %27 to i64*
	}

[0x55fd5a59d5d8]:   %29 = load i64, i64* %28, align 8 {
	[0x55fd5a5d1548]:  %30 = load i64, i64* %29, align 8
	}

[0x55fd5a59d650]:   store i64 %29, i64* %RSI, align 8, !tbaa !1257 {
	[0x55fd5a5ef9e0]:  store i64 %30, i64* %RSI.i34, align 8
	}

[0x55fd5a59d6d0]:   %30 = add i64 %21, -24 {
	[0x55fd5a5cc9c0]:  %31 = add i64 %22, -24
	}

[0x55fd5a59d750]:   %31 = add i64 %23, 11 {
	[0x55fd5a5e1a30]:  %32 = add i64 %24, 11
	}

[0x55fd5a59d7d0]:   store i64 %31, i64* %PC, align 8 {
	[0x55fd5a5f0630]:  store i64 %32, i64* %3, align 8
	}

[0x55fd5a59d838]:   %32 = inttoptr i64 %30 to i64* {
	[0x55fd5a5d1678]:  %33 = inttoptr i64 %31 to i64*
	}

[0x55fd5a59d898]:   %65 = trunc i32 %64 to i8 {
	[0x55fd5a5d6158]:  %66 = trunc i32 %65 to i8
	}

[0x55fd5a59d910]:   %66 = and i8 %65, 1 {
	[0x55fd5a68eea0]:  %67 = and i8 %66, 1
	}

[0x55fd5a59d990]:   %67 = xor i8 %66, 1 {
	[0x55fd5a691e70]:  %68 = xor i8 %67, 1
	}

[0x55fd5a59da10]:   store i8 %67, i8* %61, align 1, !tbaa !1261 {
	[0x55fd5a696240]:  store i8 %68, i8* %62, align 1
	}

[0x55fd5a59db00]:   %34 = add i64 %33, -4 {
	[0x55fd5a5f07b0]:  %35 = add i64 %34, -4
	}

[0x55fd5a59db68]:   %35 = load i64, i64* %PC, align 8 {
	[0x55fd5a5cf5b8]:  %36 = load i64, i64* %3, align 8
	}

[0x55fd5a59dbe0]:   %36 = add i64 %35, 3 {
	[0x55fd5a5f1610]:  %37 = add i64 %36, 3
	}

[0x55fd5a59dc60]:   store i64 %36, i64* %PC, align 8 {
	[0x55fd5a5f1500]:  store i64 %37, i64* %3, align 8
	}

[0x55fd5a59dcc8]:   %37 = inttoptr i64 %34 to i32* {
	[0x55fd5a5d2728]:  %38 = inttoptr i64 %35 to i32*
	}

[0x55fd5a59dd28]:   %38 = load i32, i32* %37, align 4 {
	[0x55fd5a5d2858]:  %39 = load i32, i32* %38, align 4
	}

[0x55fd5a59dd88]:   %39 = zext i32 %38 to i64 {
	[0x55fd5a5d31d8]:  %40 = zext i32 %39 to i64
	}

[0x55fd5a59de00]:   store i64 %39, i64* %RDI, align 8, !tbaa !1257 {
	[0x55fd5a5cb060]:  store i64 %40, i64* %RDI.i23, align 8
	}

[0x55fd5a59de80]:   %40 = add i64 %33, -24 {
	[0x55fd5a5f4c00]:  %41 = add i64 %34, -24
	}

[0x55fd5a59df00]:   %41 = add i64 %35, 7 {
	[0x55fd5a5d2120]:  %42 = add i64 %36, 7
	}

[0x55fd5a59df80]:   store i64 %41, i64* %PC, align 8 {
	[0x55fd5a5d8940]:  store i64 %42, i64* %3, align 8
	}

[0x55fd5a59dfe8]:   %42 = inttoptr i64 %40 to i64* {
	[0x55fd5a5d3308]:  %43 = inttoptr i64 %41 to i64*
	}

[0x55fd5a59e048]:   %43 = load i64, i64* %42, align 8 {
	[0x55fd5a5d37c8]:  %44 = load i64, i64* %43, align 8
	}

[0x55fd5a59e0c0]:   store i64 %43, i64* %RSI, align 8, !tbaa !1257 {
	[0x55fd5a5d8a70]:  store i64 %44, i64* %RSI.i34, align 8
	}

[0x55fd5a59ed38]:   %45 = trunc i32 %38 to i6 {
	[0x55fd5a5d3a28]:  %46 = trunc i32 %39 to i6
	}

[0x55fd5a59ee08]:   switch i6 %45, label %49 [
    i6 0, label %_ZN12_GLOBAL__N_1L3SHRI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_.exit
    i6 1, label %46
  ] {
	[0x55fd5a5d4008]:  switch i6 %46, label %50 [
    i6 0, label %routine_shrq__cl___rsi.exit
    i6 1, label %47
  ]
	}

[0x55fd5a59ef28]:   %74 = phi i64 [ %59, %54 ], [ %43, %block_400520 ] {
	[0x55fd5a5d3b48]:  %75 = phi i64 [ %60, %55 ], [ %44, %entry ]
	}

[0x55fd5a59ef98]:   %76 = load i64, i64* %RBP, align 8 {
	[0x55fd5a5d6618]:  %77 = load i64, i64* %RBP.i, align 8
	}

[0x55fd5a59f180]:   %47 = lshr i64 %43, 63 {
	[0x55fd5a60ea60]:  %48 = lshr i64 %44, 63
	}

[0x55fd5a59f1e8]:   %48 = trunc i64 %47 to i8 {
	[0x55fd5a5d4148]:  %49 = trunc i64 %48 to i8
	}

[0x55fd5a59f298]:   br label %54 {
	[0x55fd5a5d4bf8]:  br label %55
	[0x55fd5a5d5908]:  br label %55
	[0x55fd5a5d63b8]:  br label %routine_shrq__cl___rsi.exit
	}

[0x55fd5a59f310]:   %50 = and i32 %38, 63 {
	[0x55fd5a60b210]:  %51 = and i32 %39, 63
	}

[0x55fd5a59f378]:   %51 = zext i32 %50 to i64 {
	[0x55fd5a5d4d28]:  %52 = zext i32 %51 to i64
	}

[0x55fd5a59f430]:   %52 = add nsw i64 %51, -1 {
	[0x55fd5a684650]:  %53 = add nsw i64 %52, -1
	}

[0x55fd5a59f4b0]:   %53 = lshr i64 %43, %52 {
	[0x55fd5a686e70]:  %54 = lshr i64 %44, %53
	}

[0x55fd5a59f518]:   br label %54 {
	[0x55fd5a5d4bf8]:  br label %55
	[0x55fd5a5d5908]:  br label %55
	[0x55fd5a5d63b8]:  br label %routine_shrq__cl___rsi.exit
	}

[0x55fd5a59f568]:   %55 = phi i64 [ %53, %49 ], [ %43, %46 ] {
	[0x55fd5a5d5b58]:  %56 = phi i64 [ %54, %50 ], [ %44, %47 ]
	}

[0x55fd5a59f618]:   %56 = phi i8 [ 0, %49 ], [ %48, %46 ] {
	[0x55fd5a5d5c88]:  %57 = phi i8 [ 0, %50 ], [ %49, %47 ]
	}

[0x55fd5a59f6d8]:   %57 = trunc i64 %55 to i8 {
	[0x55fd5a5d5dc8]:  %58 = trunc i64 %56 to i8
	}

[0x55fd5a59f750]:   %58 = and i8 %57, 1 {
	[0x55fd5a685960]:  %59 = and i8 %58, 1
	}

[0x55fd5a59f7d0]:   %59 = lshr i64 %55, 1 {
	[0x55fd5a68c3b0]:  %60 = lshr i64 %56, 1
	}

[0x55fd5a59f850]:   store i64 %59, i64* %RSI, align 8, !tbaa !1257 {
	[0x55fd5a68b5e0]:  store i64 %60, i64* %RSI.i34, align 8
	}

[0x55fd5a59f900]:   %60 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1 {
	[0x55fd5a5cb180]:  %61 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 1
	}

[0x55fd5a59f990]:   store i8 %58, i8* %60, align 1, !tbaa !1261 {
	[0x55fd5a68db50]:  store i8 %59, i8* %61, align 1
	}

[0x55fd5a59fa40]:   %61 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3 {
	[0x55fd5a5cde40]:  %62 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 3
	}

[0x55fd5a59fab8]:   %62 = trunc i64 %59 to i32 {
	[0x55fd5a5d5ef8]:  %63 = trunc i64 %60 to i32
	}

[0x55fd5a59fb30]:   %63 = and i32 %62, 255 {
	[0x55fd5a690340]:  %64 = and i32 %63, 255
	}

[0x55fd5a59fbf0]:   %64 = tail call i32 @llvm.ctpop.i32(i32 %63) #9 {
	[0x55fd5a5ee5e0]:  %65 = tail call i32 @llvm.ctpop.i32(i32 %64)
	}

[0x55fd5a5a0110]:   %68 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5 {
	[0x55fd5a5ee790]:  %69 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 5
	}

[0x55fd5a5a01a0]:   store i8 0, i8* %68, align 1, !tbaa !1261 {
	[0x55fd5a6a0980]:  store i8 0, i8* %69, align 1
	}

[0x55fd5a5a0250]:   %69 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7 {
	[0x55fd5a5cf6d0]:  %70 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 7
	}

[0x55fd5a5a02e0]:   %70 = icmp eq i64 %59, 0 {
	[0x55fd5a5888b0]:  %71 = icmp eq i64 %60, 0
	}

[0x55fd5a5a0348]:   %71 = zext i1 %70 to i8 {
	[0x55fd5a5d6288]:  %72 = zext i1 %71 to i8
	}

[0x55fd5a5a03c0]:   store i8 %71, i8* %69, align 1, !tbaa !1261 {
	[0x55fd5a588450]:  store i8 %72, i8* %70, align 1
	}

[0x55fd5a5a0470]:   %72 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9 {
	[0x55fd5a5f0dc0]:  %73 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 9
	}

[0x55fd5a5a0500]:   store i8 0, i8* %72, align 1, !tbaa !1261 {
	[0x55fd5a532830]:  store i8 0, i8* %73, align 1
	}

[0x55fd5a5a05b0]:   %73 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13 {
	[0x55fd5a5d64d0]:  %74 = getelementptr inbounds %struct.State.0, %struct.State.0* %0, i64 0, i32 2, i32 13
	}

[0x55fd5a5a0640]:   store i8 %56, i8* %73, align 1, !tbaa !1261 {
	[0x55fd5a534410]:  store i8 %57, i8* %74, align 1
	}

[0x55fd5a5a06a8]:   br label %_ZN12_GLOBAL__N_1L3SHRI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_.exit {
	[0x55fd5a5d4bf8]:  br label %55
	[0x55fd5a5d5908]:  br label %55
	[0x55fd5a5d63b8]:  br label %routine_shrq__cl___rsi.exit
	}

[0x55fd5a5a07d0]:   %75 = add i64 %35, 18 {
	[0x55fd5a5351e0]:  %76 = add i64 %36, 18
	}

[0x55fd5a5a0850]:   store i64 %75, i64* %PC, align 8 {
	[0x55fd5a5ee8b0]:  store i64 %76, i64* %3, align 8
	}

[0x55fd5a5a08d0]:   store i64 %74, i64* %42, align 8 {
	[0x55fd5a5ef2c0]:  store i64 %75, i64* %43, align 8
	}

[0x55fd5a5a0950]:   %77 = add i64 %76, -24 {
	[0x55fd5a5ef050]:  %78 = add i64 %77, -24
	}

[0x55fd5a5a09b8]:   %78 = load i64, i64* %PC, align 8 {
	[0x55fd5a5d1e88]:  %79 = load i64, i64* %3, align 8
	}

[0x55fd5a5a0a30]:   %79 = add i64 %78, 4 {
	[0x55fd5a5ef910]:  %80 = add i64 %79, 4
	}

[0x55fd5a5a0ab0]:   store i64 %79, i64* %PC, align 8 {
	[0x55fd5a5efaf0]:  store i64 %80, i64* %3, align 8
	}

[0x55fd5a5a0b18]:   %80 = inttoptr i64 %77 to i64* {
	[0x55fd5a5d2218]:  %81 = inttoptr i64 %78 to i64*
	}

[0x55fd5a5a0b78]:   %81 = load i64, i64* %80, align 8 {
	[0x55fd5a5d7b08]:  %82 = load i64, i64* %81, align 8
	}

[0x55fd5a5a0bf0]:   store i64 %81, i64* %RSI, align 8, !tbaa !1257 {
	[0x55fd5a5f0020]:  store i64 %82, i64* %RSI.i34, align 8
	}

[0x55fd5a5a0c70]:   %82 = add i64 %76, -16 {
	[0x55fd5a5f01b0]:  %83 = add i64 %77, -16
	}

[0x55fd5a5a0cf0]:   %83 = add i64 %78, 8 {
	[0x55fd5a5eac30]:  %84 = add i64 %79, 8
	}

[0x55fd5a5a0d70]:   store i64 %83, i64* %PC, align 8 {
	[0x55fd5a5f2590]:  store i64 %84, i64* %3, align 8
	}

[0x55fd5a5a0dd8]:   %84 = inttoptr i64 %82 to i64* {
	[0x55fd5a5d7c38]:  %85 = inttoptr i64 %83 to i64*
	}

[0x55fd5a5a0e38]:   %85 = load i64, i64* %84, align 8 {
	[0x55fd5a5d92c8]:  %86 = load i64, i64* %85, align 8
	}

[0x55fd5a5a0eb0]:   store i64 %85, i64* %RAX, align 8, !tbaa !1257 {
	[0x55fd5a5f2ef0]:  store i64 %86, i64* %RAX.i6, align 8
	}

[0x55fd5a5a0f30]:   %86 = add i64 %78, 11 {
	[0x55fd5a5f2040]:  %87 = add i64 %79, 11
	}

[0x55fd5a5a0fb0]:   store i64 %86, i64* %PC, align 8 {
	[0x55fd5a5f35d0]:  store i64 %87, i64* %3, align 8
	}

[0x55fd5a5a1018]:   %87 = inttoptr i64 %85 to i64* {
	[0x55fd5a5dabb8]:  %88 = inttoptr i64 %86 to i64*
	}

[0x55fd5a5a1090]:   store i64 %81, i64* %87, align 8 {
	[0x55fd5a5f3780]:  store i64 %82, i64* %88, align 8
	}

[0x55fd5a5a10f8]:   %88 = load i64, i64* %PC, align 8 {
	[0x55fd5a5db8c8]:  %89 = load i64, i64* %3, align 8
	}

[0x55fd5a5a1170]:   %89 = add i64 %88, 1 {
	[0x55fd5a5f3b20]:  %90 = add i64 %89, 1
	}

[0x55fd5a5a11f0]:   store i64 %89, i64* %PC, align 8 {
	[0x55fd5a5ccab0]:  store i64 %90, i64* %3, align 8
	}

[0x55fd5a5a1258]:   %90 = load i64, i64* %6, align 8, !tbaa !1257 {
	[0x55fd5a5dbeb8]:  %91 = load i64, i64* %6, align 8
	}

[0x55fd5a5a12d0]:   %91 = add i64 %90, 8 {
	[0x55fd5a5f4210]:  %92 = add i64 %91, 8
	}

[0x55fd5a5a1338]:   %92 = inttoptr i64 %90 to i64* {
	[0x55fd5a5dc4a8]:  %93 = inttoptr i64 %91 to i64*
	}

[0x55fd5a5a1398]:   %93 = load i64, i64* %92, align 8 {
	[0x55fd5a5dca98]:  %94 = load i64, i64* %93, align 8
	}

[0x55fd5a5a1410]:   store i64 %93, i64* %RBP, align 8, !tbaa !1257 {
	[0x55fd5a5f3d70]:  store i64 %94, i64* %RBP.i, align 8
	}


[Info]: Phase II: Retrieve potential BB matches: Round: 1
Retrieved BB Matches...
[0x55fd5a59bb10]: block_400520 {
	[0x55fd5a5eb3a0]:entry
	}

[0x55fd5a59c3c0]:  {
	[0x55fd5a5eb880]:
	}

[0x55fd5a59ee60]: _ZN12_GLOBAL__N_1L3SHRI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_.exit {
	[0x55fd5a5ed250]:routine_shrq__cl___rsi.exit
	}

[0x55fd5a59f020]:  {
	[0x55fd5a5c9e00]:
	}

[0x55fd5a59f230]:  {
	[0x55fd5a5ccdf0]:
	}


[Info]: Phase II: Handle Conflicting Stores: Round: 1

[Info]: Check for multiple matches
Iso Match Found
Reading LLVM: mcsema/test.opt.ll
Reading LLVM: mcsema/test.proposed.opt.ll
Extracting function [shiftit] from mcsema/test.opt.ll
Extracting function [shiftit] from mcsema/test.proposed.opt.ll
Matcher Done...
