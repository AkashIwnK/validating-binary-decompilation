Disassembling ../binary/test
Disassembled output
  .text
  .globl main
  .type main, @function

#! file-offset 0x680
#! rip-offset  0x400680
#! capacity    619 bytes

# Text                             #  Line  RIP       Bytes  Opcode                  Target                
.main:                             #        0x400680  0      OPC=<label>             18446744073709551615  
  pushq %rbp                       #  1     0x400680  1      OPC=pushq_r64_1         18446744073709551615  
  movq %rsp, %rbp                  #  2     0x400681  3      OPC=movq_r64_r64        18446744073709551615  
  subq $0x70, %rsp                 #  3     0x400684  4      OPC=subq_r64_imm8       18446744073709551615  
  xorl %eax, %eax                  #  4     0x400688  2      OPC=xorl_r32_r32        18446744073709551615  
  movl $0x1c, %ecx                 #  5     0x40068a  5      OPC=movl_r32_imm32      18446744073709551615  
  movl %ecx, %edx                  #  6     0x40068f  2      OPC=movl_r32_r32        18446744073709551615  
  leaq -0x40(%rbp), %r8            #  7     0x400691  4      OPC=leaq_r64_m16        18446744073709551615  
  movq $0x601040, %r9              #  8     0x400695  10     OPC=movq_r64_imm64      18446744073709551615  
  movl $0x0, -0x4(%rbp)            #  9     0x40069f  7      OPC=movl_m32_imm32      18446744073709551615  
  movl %edi, -0x8(%rbp)            #  10    0x4006a6  3      OPC=movl_m32_r32        18446744073709551615  
  movq %rsi, -0x10(%rbp)           #  11    0x4006a9  4      OPC=movq_m64_r64        18446744073709551615  
  movl $0x0, -0x24(%rbp)           #  12    0x4006ad  7      OPC=movl_m32_imm32      18446744073709551615  
  movl $0x1, -0x14(%rbp)           #  13    0x4006b4  7      OPC=movl_m32_imm32      18446744073709551615  
  movl $0x1, -0x18(%rbp)           #  14    0x4006bb  7      OPC=movl_m32_imm32      18446744073709551615  
  movslq -0x18(%rbp), %rsi         #  15    0x4006c2  4      OPC=movslq_r64_m32      18446744073709551615  
  imulq $0xb, %rsi, %rsi           #  16    0x4006c6  4      OPC=imulq_r64_r64_imm8  18446744073709551615  
  addq %rsi, %r9                   #  17    0x4006ca  3      OPC=addq_r64_r64        18446744073709551615  
  movslq -0x14(%rbp), %rsi         #  18    0x4006cd  4      OPC=movslq_r64_m32      18446744073709551615  
  movb $0x58, (%r9,%rsi,1)         #  19    0x4006d1  5      OPC=movb_m8_imm8        18446744073709551615  
  movl %eax, %edi                  #  20    0x4006d6  2      OPC=movl_r32_r32        18446744073709551615  
  movq %r8, %rsi                   #  21    0x4006d8  3      OPC=movq_r64_r64        18446744073709551615  
  callq .read_plt                  #  22    0x4006db  5      OPC=callq_label         4195520               
  movq %rax, -0x48(%rbp)           #  23    0x4006e0  4      OPC=movq_m64_r64        18446744073709551615  
.L_4006e4:                         #        0x4006e4  0      OPC=<label>             18446744073709551615  
  cmpl $0x1c, -0x24(%rbp)          #  24    0x4006e4  4      OPC=cmpl_m32_imm8       18446744073709551615  
  jge .L_4008c7                    #  25    0x4006e8  6      OPC=jge_label_1         4196551               
  movl -0x14(%rbp), %eax           #  26    0x4006ee  3      OPC=movl_r32_m32        18446744073709551615  
  movl %eax, -0x1c(%rbp)           #  27    0x4006f1  3      OPC=movl_m32_r32        18446744073709551615  
  movl -0x18(%rbp), %eax           #  28    0x4006f4  3      OPC=movl_r32_m32        18446744073709551615  
  movl %eax, -0x20(%rbp)           #  29    0x4006f7  3      OPC=movl_m32_r32        18446744073709551615  
  movslq -0x24(%rbp), %rcx         #  30    0x4006fa  4      OPC=movslq_r64_m32      18446744073709551615  
  movsbl -0x40(%rbp,%rcx,1), %eax  #  31    0x4006fe  5      OPC=movsbl_r32_m8       18446744073709551615  
  addl $0xffffff9f, %eax           #  32    0x400703  3      OPC=addl_r32_imm8       18446744073709551615  
  movl %eax, %ecx                  #  33    0x400706  2      OPC=movl_r32_r32        18446744073709551615  
  subl $0x16, %eax                 #  34    0x400708  3      OPC=subl_r32_imm8       18446744073709551615  
  movq %rcx, -0x50(%rbp)           #  35    0x40070b  4      OPC=movq_m64_r64        18446744073709551615  
  movl %eax, -0x54(%rbp)           #  36    0x40070f  3      OPC=movl_m32_r32        18446744073709551615  
  ja .L_40075e                     #  37    0x400712  6      OPC=ja_label_1          4196190               
  movq -0x50(%rbp), %rax           #  38    0x400718  4      OPC=movq_r64_m64        18446744073709551615  
  movq 0x400978(,%rax,8), %rcx     #  39    0x40071c  8      OPC=movq_r64_m64        18446744073709551615  
  jmpq %rcx                        #  40    0x400724  2      OPC=jmpq_r64            18446744073709551615  
  movl -0x18(%rbp), %eax           #  41    0x400726  3      OPC=movl_r32_m32        18446744073709551615  
  addl $0xffffffff, %eax           #  42    0x400729  3      OPC=addl_r32_imm8       18446744073709551615  
  movl %eax, -0x18(%rbp)           #  43    0x40072c  3      OPC=movl_m32_r32        18446744073709551615  
  jmpq .L_400790                   #  44    0x40072f  5      OPC=jmpq_label_1        4196240               
  movl -0x18(%rbp), %eax           #  45    0x400734  3      OPC=movl_r32_m32        18446744073709551615  
  addl $0x1, %eax                  #  46    0x400737  3      OPC=addl_r32_imm8       18446744073709551615  
  movl %eax, -0x18(%rbp)           #  47    0x40073a  3      OPC=movl_m32_r32        18446744073709551615  
  jmpq .L_400790                   #  48    0x40073d  5      OPC=jmpq_label_1        4196240               
  movl -0x14(%rbp), %eax           #  49    0x400742  3      OPC=movl_r32_m32        18446744073709551615  
  addl $0xffffffff, %eax           #  50    0x400745  3      OPC=addl_r32_imm8       18446744073709551615  
  movl %eax, -0x14(%rbp)           #  51    0x400748  3      OPC=movl_m32_r32        18446744073709551615  
  jmpq .L_400790                   #  52    0x40074b  5      OPC=jmpq_label_1        4196240               
  movl -0x14(%rbp), %eax           #  53    0x400750  3      OPC=movl_r32_m32        18446744073709551615  
  addl $0x1, %eax                  #  54    0x400753  3      OPC=addl_r32_imm8       18446744073709551615  
  movl %eax, -0x14(%rbp)           #  55    0x400756  3      OPC=movl_m32_r32        18446744073709551615  
  jmpq .L_400790                   #  56    0x400759  5      OPC=jmpq_label_1        4196240               
.L_40075e:                         #        0x40075e  0      OPC=<label>             18446744073709551615  
  movq $0x400a33, %rdi             #  57    0x40075e  10     OPC=movq_r64_imm64      18446744073709551615  
  movb $0x0, %al                   #  58    0x400768  2      OPC=movb_r8_imm8        18446744073709551615  
  callq .printf_plt                #  59    0x40076a  5      OPC=callq_label         4195504               
  movq $0x400a5b, %rdi             #  60    0x40076f  10     OPC=movq_r64_imm64      18446744073709551615  
  movl %eax, -0x58(%rbp)           #  61    0x400779  3      OPC=movl_m32_r32        18446744073709551615  
  movb $0x0, %al                   #  62    0x40077c  2      OPC=movb_r8_imm8        18446744073709551615  
  callq .printf_plt                #  63    0x40077e  5      OPC=callq_label         4195504               
  movl $0xffffffff, %edi           #  64    0x400783  5      OPC=movl_r32_imm32      18446744073709551615  
  movl %eax, -0x5c(%rbp)           #  65    0x400788  3      OPC=movl_m32_r32        18446744073709551615  
  callq .exit_plt                  #  66    0x40078b  5      OPC=callq_label         4195536               
.L_400790:                         #        0x400790  0      OPC=<label>             18446744073709551615  
  movq $0x601040, %rax             #  67    0x400790  10     OPC=movq_r64_imm64      18446744073709551615  
  movslq -0x18(%rbp), %rcx         #  68    0x40079a  4      OPC=movslq_r64_m32      18446744073709551615  
  imulq $0xb, %rcx, %rcx           #  69    0x40079e  4      OPC=imulq_r64_r64_imm8  18446744073709551615  
  addq %rcx, %rax                  #  70    0x4007a2  3      OPC=addq_r64_r64        18446744073709551615  
  movslq -0x14(%rbp), %rcx         #  71    0x4007a5  4      OPC=movslq_r64_m32      18446744073709551615  
  movsbl (%rax,%rcx,1), %edx       #  72    0x4007a9  4      OPC=movsbl_r32_m8       18446744073709551615  
  cmpl $0x23, %edx                 #  73    0x4007ad  3      OPC=cmpl_r32_imm8       18446744073709551615  
  jne .L_4007e9                    #  74    0x4007b0  6      OPC=jne_label_1         4196329               
  movq $0x400a66, %rdi             #  75    0x4007b6  10     OPC=movq_r64_imm64      18446744073709551615  
  movb $0x0, %al                   #  76    0x4007c0  2      OPC=movb_r8_imm8        18446744073709551615  
  callq .printf_plt                #  77    0x4007c2  5      OPC=callq_label         4195504               
  movq $0x400a70, %rdi             #  78    0x4007c7  10     OPC=movq_r64_imm64      18446744073709551615  
  leaq -0x40(%rbp), %rsi           #  79    0x4007d1  4      OPC=leaq_r64_m16        18446744073709551615  
  movl %eax, -0x60(%rbp)           #  80    0x4007d5  3      OPC=movl_m32_r32        18446744073709551615  
  movb $0x0, %al                   #  81    0x4007d8  2      OPC=movb_r8_imm8        18446744073709551615  
  callq .printf_plt                #  82    0x4007da  5      OPC=callq_label         4195504               
  xorl %edi, %edi                  #  83    0x4007df  2      OPC=xorl_r32_r32        18446744073709551615  
  movl %eax, -0x64(%rbp)           #  84    0x4007e1  3      OPC=movl_m32_r32        18446744073709551615  
  callq .exit_plt                  #  85    0x4007e4  5      OPC=callq_label         4195536               
.L_4007e9:                         #        0x4007e9  0      OPC=<label>             18446744073709551615  
  movq $0x601040, %rax             #  86    0x4007e9  10     OPC=movq_r64_imm64      18446744073709551615  
  movslq -0x18(%rbp), %rcx         #  87    0x4007f3  4      OPC=movslq_r64_m32      18446744073709551615  
  imulq $0xb, %rcx, %rcx           #  88    0x4007f7  4      OPC=imulq_r64_r64_imm8  18446744073709551615  
  addq %rcx, %rax                  #  89    0x4007fb  3      OPC=addq_r64_r64        18446744073709551615  
  movslq -0x14(%rbp), %rcx         #  90    0x4007fe  4      OPC=movslq_r64_m32      18446744073709551615  
  movsbl (%rax,%rcx,1), %edx       #  91    0x400802  4      OPC=movsbl_r32_m8       18446744073709551615  
  cmpl $0x20, %edx                 #  92    0x400806  3      OPC=cmpl_r32_imm8       18446744073709551615  
  je .L_40085f                     #  93    0x400809  6      OPC=je_label_1          4196447               
  cmpl $0x2, -0x18(%rbp)           #  94    0x40080f  4      OPC=cmpl_m32_imm8       18446744073709551615  
  jne .L_400853                    #  95    0x400813  6      OPC=jne_label_1         4196435               
  movq $0x601040, %rax             #  96    0x400819  10     OPC=movq_r64_imm64      18446744073709551615  
  movslq -0x18(%rbp), %rcx         #  97    0x400823  4      OPC=movslq_r64_m32      18446744073709551615  
  imulq $0xb, %rcx, %rcx           #  98    0x400827  4      OPC=imulq_r64_r64_imm8  18446744073709551615  
  addq %rcx, %rax                  #  99    0x40082b  3      OPC=addq_r64_r64        18446744073709551615  
  movslq -0x14(%rbp), %rcx         #  100   0x40082e  4      OPC=movslq_r64_m32      18446744073709551615  
  movsbl (%rax,%rcx,1), %edx       #  101   0x400832  4      OPC=movsbl_r32_m8       18446744073709551615  
  cmpl $0x7c, %edx                 #  102   0x400836  3      OPC=cmpl_r32_imm8       18446744073709551615  
  jne .L_400853                    #  103   0x400839  6      OPC=jne_label_1         4196435               
  cmpl $0x0, -0x14(%rbp)           #  104   0x40083f  4      OPC=cmpl_m32_imm8       18446744073709551615  
  jle .L_400853                    #  105   0x400843  6      OPC=jle_label_1         4196435               
  cmpl $0xb, -0x14(%rbp)           #  106   0x400849  4      OPC=cmpl_m32_imm8       18446744073709551615  
  jl .L_40085f                     #  107   0x40084d  6      OPC=jl_label_1          4196447               
.L_400853:                         #        0x400853  0      OPC=<label>             18446744073709551615  
  movl -0x1c(%rbp), %eax           #  108   0x400853  3      OPC=movl_r32_m32        18446744073709551615  
  movl %eax, -0x14(%rbp)           #  109   0x400856  3      OPC=movl_m32_r32        18446744073709551615  
  movl -0x20(%rbp), %eax           #  110   0x400859  3      OPC=movl_r32_m32        18446744073709551615  
  movl %eax, -0x18(%rbp)           #  111   0x40085c  3      OPC=movl_m32_r32        18446744073709551615  
.L_40085f:                         #        0x40085f  0      OPC=<label>             18446744073709551615  
  movl -0x1c(%rbp), %eax           #  112   0x40085f  3      OPC=movl_r32_m32        18446744073709551615  
  cmpl -0x14(%rbp), %eax           #  113   0x400862  3      OPC=cmpl_r32_m32        18446744073709551615  
  jne .L_400897                    #  114   0x400865  6      OPC=jne_label_1         4196503               
  movl -0x20(%rbp), %eax           #  115   0x40086b  3      OPC=movl_r32_m32        18446744073709551615  
  cmpl -0x18(%rbp), %eax           #  116   0x40086e  3      OPC=cmpl_r32_m32        18446744073709551615  
  jne .L_400897                    #  117   0x400871  6      OPC=jne_label_1         4196503               
  movq $0x400a83, %rdi             #  118   0x400877  10     OPC=movq_r64_imm64      18446744073709551615  
  movb $0x0, %al                   #  119   0x400881  2      OPC=movb_r8_imm8        18446744073709551615  
  callq .printf_plt                #  120   0x400883  5      OPC=callq_label         4195504               
  movl $0x2, -0x4(%rbp)            #  121   0x400888  7      OPC=movl_m32_imm32      18446744073709551615  
  movl %eax, -0x68(%rbp)           #  122   0x40088f  3      OPC=movl_m32_r32        18446744073709551615  
  jmpq .L_4008e2                   #  123   0x400892  5      OPC=jmpq_label_1        4196578               
.L_400897:                         #        0x400897  0      OPC=<label>             18446744073709551615  
  movq $0x601040, %rax             #  124   0x400897  10     OPC=movq_r64_imm64      18446744073709551615  
  movslq -0x18(%rbp), %rcx         #  125   0x4008a1  4      OPC=movslq_r64_m32      18446744073709551615  
  imulq $0xb, %rcx, %rcx           #  126   0x4008a5  4      OPC=imulq_r64_r64_imm8  18446744073709551615  
  addq %rcx, %rax                  #  127   0x4008a9  3      OPC=addq_r64_r64        18446744073709551615  
  movslq -0x14(%rbp), %rcx         #  128   0x4008ac  4      OPC=movslq_r64_m32      18446744073709551615  
  movb $0x58, (%rax,%rcx,1)        #  129   0x4008b0  4      OPC=movb_m8_imm8        18446744073709551615  
  callq .draw                      #  130   0x4008b4  5      OPC=callq_label         4195792               
  movl -0x24(%rbp), %edx           #  131   0x4008b9  3      OPC=movl_r32_m32        18446744073709551615  
  addl $0x1, %edx                  #  132   0x4008bc  3      OPC=addl_r32_imm8       18446744073709551615  
  movl %edx, -0x24(%rbp)           #  133   0x4008bf  3      OPC=movl_m32_r32        18446744073709551615  
  jmpq .L_4006e4                   #  134   0x4008c2  5      OPC=jmpq_label_1        4196068               
.L_4008c7:                         #        0x4008c7  0      OPC=<label>             18446744073709551615  
  movq $0x400a83, %rdi             #  135   0x4008c7  10     OPC=movq_r64_imm64      18446744073709551615  
  movb $0x0, %al                   #  136   0x4008d1  2      OPC=movb_r8_imm8        18446744073709551615  
  callq .printf_plt                #  137   0x4008d3  5      OPC=callq_label         4195504               
  movl $0x1, -0x4(%rbp)            #  138   0x4008d8  7      OPC=movl_m32_imm32      18446744073709551615  
  movl %eax, -0x6c(%rbp)           #  139   0x4008df  3      OPC=movl_m32_r32        18446744073709551615  
.L_4008e2:                         #        0x4008e2  0      OPC=<label>             18446744073709551615  
  movl -0x4(%rbp), %eax            #  140   0x4008e2  3      OPC=movl_r32_m32        18446744073709551615  
  addq $0x70, %rsp                 #  141   0x4008e5  4      OPC=addq_r64_imm8       18446744073709551615  
  popq %rbp                        #  142   0x4008e9  1      OPC=popq_r64_1          18446744073709551615  
  retq                             #  143   0x4008ea  1      OPC=retq                18446744073709551615  
                                                                                                           
.size main, .-main
Disassembling Done.


Decompiling mcsema/test.proposed.ll
Computing Label PC values ...
.L_400897->4196503
.L_40085f->4196447
.L_4008e2->4196578
.L_4006e4->4196068
.main->4195968
.L_4008c7->4196551
.L_400853->4196435
.L_400790->4196240
.L_40075e->4196190
.L_4007e9->4196329

Computing Label PC values: Done.


Executing: cat ${HOME}/Github/validating-binary-decompilation/source/libs/compositional-decompiler/data/mcsema_template.txt
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

Decompiling Function: main...


Decompiling instr:.main:...


Decompiling instr:pushq %rbp...
Instr: pushq %rbp
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//pushq__rbp
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//pushq__rbp/test.mod.ll
Running artifacts...Done.

FuncCache inserted: _ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_
FuncCache inserted: routine_pushq__rbp
Decompiling instr:pushq %rbp Done...


Decompiling instr:movq %rsp, %rbp...
Instr: movq %rsp, %rbp
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rsp___rbp
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rsp___rbp/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq__rsp___rbp
Decompiling instr:movq %rsp, %rbp Done...


Decompiling instr:subq $0x70, %rsp...
Instr: subq $0x70, %rsp
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//subq__0x70___rsp
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//subq__0x70___rsp/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_
FuncCache inserted: routine_subq__0x70___rsp

Executing: ${HOME}/Github/validating-binary-decompilation/tests/scripts//find_pc_in_relocinfo.pl --binary ../binary/test --pc 400684 --size 4
Decompiling instr:subq $0x70, %rsp Done...


Decompiling instr:xorl %eax, %eax...
Instr: xorl %eax, %eax
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//xorl__eax___eax
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//xorl__eax___eax/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3XORI3RnWImE2RnIjES4_EEP6MemoryS6_R5StateT_T0_T1_
FuncCache inserted: routine_xorl__eax___eax
Decompiling instr:xorl %eax, %eax Done...


Decompiling instr:movl $0x1c, %ecx...
Instr: movl $0x1c, %ecx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0x1c___ecx
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0x1c___ecx/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__0x1c___ecx

Executing: ${HOME}/Github/validating-binary-decompilation/tests/scripts//find_pc_in_relocinfo.pl --binary ../binary/test --pc 40068a --size 5
Decompiling instr:movl $0x1c, %ecx Done...


Decompiling instr:movl %ecx, %edx...
Instr: movl %ecx, %edx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__ecx___edx
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__ecx___edx/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__ecx___edx
Decompiling instr:movl %ecx, %edx Done...


Decompiling instr:leaq -0x40(%rbp), %r8...
Instr: leaq -0x40(%rbp), %r8
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//leaq_MINUS0x40__rbp____r8
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//leaq_MINUS0x40__rbp____r8/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3LEAI3RnWImE2MnIhEmEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_leaq_MINUS0x40__rbp____r8
Decompiling instr:leaq -0x40(%rbp), %r8 Done...


Decompiling instr:movq $0x601040, %r9...
Instr: movq $0x601040, %r9
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__0x601040___r9
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__0x601040___r9/test.mod.ll
Running artifacts...Done.

Multiple defintions of %seg_4003a0__text_type
Multiple defintions of @seg_4003a0__text
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2InImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq__0x601040___r9

Executing: ${HOME}/Github/validating-binary-decompilation/tests/scripts//find_pc_in_relocinfo.pl --binary ../binary/test --pc 400695 --size 10
Global Access Fix: 6295616 Relocation: Address, McSema: Address
Decompiling instr:movq $0x601040, %r9 Done...


Decompiling instr:movl $0x0, -0x4(%rbp)...
Instr: movl $0x0, -0x4(%rbp)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0x0__MINUS0x4__rbp_
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0x0__MINUS0x4__rbp_/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__0x0__MINUS0x4__rbp_
Decompiling instr:movl $0x0, -0x4(%rbp) Done...


Decompiling instr:movl %edi, -0x8(%rbp)...
Instr: movl %edi, -0x8(%rbp)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__edi__MINUS0x8__rbp_
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__edi__MINUS0x8__rbp_/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__edi__MINUS0x8__rbp_
Decompiling instr:movl %edi, -0x8(%rbp) Done...


Decompiling instr:movq %rsi, -0x10(%rbp)...
Instr: movq %rsi, -0x10(%rbp)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rsi__MINUS0x10__rbp_
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rsi__MINUS0x10__rbp_/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq__rsi__MINUS0x10__rbp_
Decompiling instr:movq %rsi, -0x10(%rbp) Done...


Decompiling instr:movl $0x0, -0x24(%rbp)...
Instr: movl $0x0, -0x24(%rbp)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0x0__MINUS0x24__rbp_
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0x0__MINUS0x24__rbp_/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__0x0__MINUS0x24__rbp_
Decompiling instr:movl $0x0, -0x24(%rbp) Done...


Decompiling instr:movl $0x1, -0x14(%rbp)...
Instr: movl $0x1, -0x14(%rbp)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0x1__MINUS0x14__rbp_
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0x1__MINUS0x14__rbp_/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__0x1__MINUS0x14__rbp_
Decompiling instr:movl $0x1, -0x14(%rbp) Done...


Decompiling instr:movl $0x1, -0x18(%rbp)...
Instr: movl $0x1, -0x18(%rbp)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0x1__MINUS0x18__rbp_
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0x1__MINUS0x18__rbp_/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3MnWIjE2InIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__0x1__MINUS0x18__rbp_
Decompiling instr:movl $0x1, -0x18(%rbp) Done...


Decompiling instr:movslq -0x18(%rbp), %rsi...
Instr: movslq -0x18(%rbp), %rsi
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movslq_MINUS0x18__rbp____rsi
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movslq_MINUS0x18__rbp____rsi/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movslq_MINUS0x18__rbp____rsi
Decompiling instr:movslq -0x18(%rbp), %rsi Done...


Decompiling instr:imulq $0xb, %rsi, %rsi...
Instr: imulq $0xb, %rsi, %rsi
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//imulq__0xb___rsi___rsi
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//imulq__0xb___rsi___rsi/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L4IMULI3RnWImE2RnImE2InImEEEP6MemoryS8_R5StateT_T0_T1_
FuncCache inserted: routine_imulq__0xb___rsi___rsi

Executing: ${HOME}/Github/validating-binary-decompilation/tests/scripts//find_pc_in_relocinfo.pl --binary ../binary/test --pc 4006c6 --size 4
Decompiling instr:imulq $0xb, %rsi, %rsi Done...


Decompiling instr:addq %rsi, %r9...
Instr: addq %rsi, %r9
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//addq__rsi___r9
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//addq__rsi___r9/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnImES4_EEP6MemoryS6_R5StateT_T0_T1_
FuncCache inserted: routine_addq__rsi___r9
Decompiling instr:addq %rsi, %r9 Done...


Decompiling instr:movslq -0x14(%rbp), %rsi...
Instr: movslq -0x14(%rbp), %rsi
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movslq_MINUS0x14__rbp____rsi
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movslq_MINUS0x14__rbp____rsi/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movslq_MINUS0x14__rbp____rsi
Decompiling instr:movslq -0x14(%rbp), %rsi Done...


Decompiling instr:movb $0x58, (%r9,%rsi,1)...
Instr: movb $0x58, (%r9,%rsi,1)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movb__0x58____r9__rsi_1_
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movb__0x58____r9__rsi_1_/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3MnWIhE2InIhEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movb__0x58____r9__rsi_1_
Decompiling instr:movb $0x58, (%r9,%rsi,1) Done...


Decompiling instr:movl %eax, %edi...
Instr: movl %eax, %edi
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__eax___edi
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__eax___edi/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__eax___edi
Decompiling instr:movl %eax, %edi Done...


Decompiling instr:movq %r8, %rsi...
Instr: movq %r8, %rsi
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__r8___rsi
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__r8___rsi/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq__r8___rsi
Decompiling instr:movq %r8, %rsi Done...


Decompiling instr:callq .read_plt...
Instr: callq .read_plt
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//callq_.read_plt
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//callq_.read_plt/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_
FuncCache inserted: routine_callq_.read_plt
Decompiling instr:callq .read_plt Done...


Decompiling instr:movq %rax, -0x48(%rbp)...
Instr: movq %rax, -0x48(%rbp)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rax__MINUS0x48__rbp_
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rax__MINUS0x48__rbp_/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq__rax__MINUS0x48__rbp_
Decompiling instr:movq %rax, -0x48(%rbp) Done...


Decompiling instr:.L_4006e4:...


Decompiling instr:cmpl $0x1c, -0x24(%rbp)...
Instr: cmpl $0x1c, -0x24(%rbp)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//cmpl__0x1c__MINUS0x24__rbp_
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//cmpl__0x1c__MINUS0x24__rbp_/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3CMPI2MnIjE2InIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_cmpl__0x1c__MINUS0x24__rbp_
Decompiling instr:cmpl $0x1c, -0x24(%rbp) Done...


Decompiling instr:jge .L_4008c7...
Instr: jge .L_4008c7
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//jge_.L_4008c7
Creating artifacts...
Creating artifacts... Done.

Running artifacts...
Generating Binary -> McSema -> Declutter -> Cat: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//jge_.L_4008c7/test.mod.ll

test.c:1:1: warning: return type of 'main' is not 'int' [-Wmain-return-type]
void main() {
^
test.c:1:1: note: change return type to 'int'
void main() {
^~~~
int
1 warning generated.

Executing: make -C /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//jge_.L_4008c7 binary
make[1]: Entering directory '/home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation/jge_.L_4008c7'
clang -Os test.c -o test
make[1]: Leaving directory '/home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation/jge_.L_4008c7'

Executing: make -C /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//jge_.L_4008c7 mcsema
make[1]: Entering directory '/home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation/jge_.L_4008c7'
mcsema-disass --disassembler /home/ubuntu/ida-6.95/idal64 --os linux --arch amd64_avx --output test.cfg --binary test --entrypoint main
mcsema-lift-4.0 --os linux --arch amd64_avx --cfg test.cfg --output test.bc -disable_dead_store_elimination -disable_optimizer
llvm-dis test.bc -o test.ll
make[1]: Leaving directory '/home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation/jge_.L_4008c7'

Executing: make -C /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//jge_.L_4008c7 declutter
make[1]: Entering directory '/home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation/jge_.L_4008c7'
/home/ubuntu/Github/validating-binary-decompilation/tests/scripts//declutter.pl --file test.ll --programiv --opc jge_.L_4008c7
Expanding _ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_...
Generatin test.mod.ll for opcode jge_.L_4008c7 ...
make[1]: Leaving directory '/home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation/jge_.L_4008c7'

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//jge_.L_4008c7/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3JNLEP6MemoryR5State3RnWIhE2InImES7_
FuncCache inserted: routine_jge_.L_4008c7
Decompiling instr:jge .L_4008c7 Done...


Decompiling instr:movl -0x14(%rbp), %eax...
Instr: movl -0x14(%rbp), %eax
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl_MINUS0x14__rbp____eax
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl_MINUS0x14__rbp____eax/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl_MINUS0x14__rbp____eax
Decompiling instr:movl -0x14(%rbp), %eax Done...


Decompiling instr:movl %eax, -0x1c(%rbp)...
Instr: movl %eax, -0x1c(%rbp)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__eax__MINUS0x1c__rbp_
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__eax__MINUS0x1c__rbp_/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__eax__MINUS0x1c__rbp_
Decompiling instr:movl %eax, -0x1c(%rbp) Done...


Decompiling instr:movl -0x18(%rbp), %eax...
Instr: movl -0x18(%rbp), %eax
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl_MINUS0x18__rbp____eax
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl_MINUS0x18__rbp____eax/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl_MINUS0x18__rbp____eax
Decompiling instr:movl -0x18(%rbp), %eax Done...


Decompiling instr:movl %eax, -0x20(%rbp)...
Instr: movl %eax, -0x20(%rbp)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__eax__MINUS0x20__rbp_
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__eax__MINUS0x20__rbp_/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__eax__MINUS0x20__rbp_
Decompiling instr:movl %eax, -0x20(%rbp) Done...


Decompiling instr:movslq -0x24(%rbp), %rcx...
Instr: movslq -0x24(%rbp), %rcx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movslq_MINUS0x24__rbp____rcx
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movslq_MINUS0x24__rbp____rcx/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIjElEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movslq_MINUS0x24__rbp____rcx
Decompiling instr:movslq -0x24(%rbp), %rcx Done...


Decompiling instr:movsbl -0x40(%rbp,%rcx,1), %eax...
Instr: movsbl -0x40(%rbp,%rcx,1), %eax
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movsbl_MINUS0x40__rbp__rcx_1____eax
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movsbl_MINUS0x40__rbp__rcx_1____eax/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L5MOVSXI3RnWImE2MnIhEiEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movsbl_MINUS0x40__rbp__rcx_1____eax
Decompiling instr:movsbl -0x40(%rbp,%rcx,1), %eax Done...


Decompiling instr:addl $0xffffff9f, %eax...
Instr: addl $0xffffff9f, %eax
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//addl__0xffffff9f___eax
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//addl__0xffffff9f___eax/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3ADDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_
FuncCache inserted: routine_addl__0xffffff9f___eax

Executing: ${HOME}/Github/validating-binary-decompilation/tests/scripts//find_pc_in_relocinfo.pl --binary ../binary/test --pc 400703 --size 3
Decompiling instr:addl $0xffffff9f, %eax Done...


Decompiling instr:movl %eax, %ecx...
Instr: movl %eax, %ecx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__eax___ecx
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__eax___ecx/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__eax___ecx
Decompiling instr:movl %eax, %ecx Done...


Decompiling instr:subl $0x16, %eax...
Instr: subl $0x16, %eax
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//subl__0x16___eax
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//subl__0x16___eax/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3SUBI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_
FuncCache inserted: routine_subl__0x16___eax

Executing: ${HOME}/Github/validating-binary-decompilation/tests/scripts//find_pc_in_relocinfo.pl --binary ../binary/test --pc 400708 --size 3
Decompiling instr:subl $0x16, %eax Done...


Decompiling instr:movq %rcx, -0x50(%rbp)...
Instr: movq %rcx, -0x50(%rbp)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rcx__MINUS0x50__rbp_
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rcx__MINUS0x50__rbp_/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3MnWImE2RnImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq__rcx__MINUS0x50__rbp_
Decompiling instr:movq %rcx, -0x50(%rbp) Done...


Decompiling instr:movl %eax, -0x54(%rbp)...
Instr: movl %eax, -0x54(%rbp)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__eax__MINUS0x54__rbp_
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__eax__MINUS0x54__rbp_/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3MnWIjE2RnIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__eax__MINUS0x54__rbp_
Decompiling instr:movl %eax, -0x54(%rbp) Done...


Decompiling instr:ja .L_40075e...
Instr: ja .L_40075e
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//ja_.L_40075e
Creating artifacts...
Creating artifacts... Done.

Running artifacts...
Generating Binary -> McSema -> Declutter -> Cat: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//ja_.L_40075e/test.mod.ll

test.c:1:1: warning: return type of 'main' is not 'int' [-Wmain-return-type]
void main() {
^
test.c:1:1: note: change return type to 'int'
void main() {
^~~~
int
1 warning generated.

Executing: make -C /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//ja_.L_40075e binary
make[1]: Entering directory '/home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation/ja_.L_40075e'
clang -Os test.c -o test
make[1]: Leaving directory '/home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation/ja_.L_40075e'

Executing: make -C /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//ja_.L_40075e mcsema
make[1]: Entering directory '/home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation/ja_.L_40075e'
mcsema-disass --disassembler /home/ubuntu/ida-6.95/idal64 --os linux --arch amd64_avx --output test.cfg --binary test --entrypoint main
mcsema-lift-4.0 --os linux --arch amd64_avx --cfg test.cfg --output test.bc -disable_dead_store_elimination -disable_optimizer
llvm-dis test.bc -o test.ll
make[1]: Leaving directory '/home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation/ja_.L_40075e'

Executing: make -C /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//ja_.L_40075e declutter
make[1]: Entering directory '/home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation/ja_.L_40075e'
/home/ubuntu/Github/validating-binary-decompilation/tests/scripts//declutter.pl --file test.ll --programiv --opc ja_.L_40075e
Expanding _ZN12_GLOBAL__N_1L4JNBEEP6MemoryR5State3RnWIhE2InImES7_...
Generatin test.mod.ll for opcode ja_.L_40075e ...
make[1]: Leaving directory '/home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation/ja_.L_40075e'

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//ja_.L_40075e/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L4JNBEEP6MemoryR5State3RnWIhE2InImES7_
FuncCache inserted: routine_ja_.L_40075e
Decompiling instr:ja .L_40075e Done...


Decompiling instr:movq -0x50(%rbp), %rax...
Instr: movq -0x50(%rbp), %rax
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq_MINUS0x50__rbp____rax
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq_MINUS0x50__rbp____rax/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq_MINUS0x50__rbp____rax
Decompiling instr:movq -0x50(%rbp), %rax Done...


Decompiling instr:movq 0x400978(,%rax,8), %rcx...
Instr: movq 0x400978(,%rax,8), %rcx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq_0x400978___rax_8____rcx
Creating artifacts...
Creating artifacts... Done.

Running artifacts...
Generating Binary -> McSema -> Declutter -> Cat: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq_0x400978___rax_8____rcx/test.mod.ll

test.c:1:1: warning: return type of 'main' is not 'int' [-Wmain-return-type]
void main() {
^
test.c:1:1: note: change return type to 'int'
void main() {
^~~~
int
1 warning generated.

Executing: make -C /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq_0x400978___rax_8____rcx binary
make[1]: Entering directory '/home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation/movq_0x400978___rax_8____rcx'
clang -Os test.c -o test
make[1]: Leaving directory '/home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation/movq_0x400978___rax_8____rcx'

Executing: make -C /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq_0x400978___rax_8____rcx mcsema
make[1]: Entering directory '/home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation/movq_0x400978___rax_8____rcx'
mcsema-disass --disassembler /home/ubuntu/ida-6.95/idal64 --os linux --arch amd64_avx --output test.cfg --binary test --entrypoint main
mcsema-lift-4.0 --os linux --arch amd64_avx --cfg test.cfg --output test.bc -disable_dead_store_elimination -disable_optimizer
llvm-dis test.bc -o test.ll
make[1]: Leaving directory '/home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation/movq_0x400978___rax_8____rcx'

Executing: make -C /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq_0x400978___rax_8____rcx declutter
make[1]: Entering directory '/home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation/movq_0x400978___rax_8____rcx'
/home/ubuntu/Github/validating-binary-decompilation/tests/scripts//declutter.pl --file test.ll --programiv --opc movq_0x400978___rax_8____rcx
Expanding _ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_...
Generatin test.mod.ll for opcode movq_0x400978___rax_8____rcx ...
make[1]: Leaving directory '/home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation/movq_0x400978___rax_8____rcx'

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq_0x400978___rax_8____rcx/test.mod.ll
Running artifacts...Done.

Multiple defintions of %seg_4003a0__text_type
Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400558__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2MnImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq_0x400978___rax_8____rcx
FATAL ERROR: Missing target address for: jmpq %rcx
decompiler: /home/ubuntu/Github/stoke-develop/src/ext/cpputil/include/io/abort.h:35: void cpputil::Abort::operator()(std::streambuf*, char): Assertion `false' failed.
Command terminated by signal 6
9.71user 0.57system 0:12.09elapsed 85%CPU (0avgtext+0avgdata 60104maxresident)k
408inputs+41256outputs (0major+162479minor)pagefaults 0swaps
