Matching sub_400490_main Vs main


[Info] Retrieve Potential Matches...
[0x5608e1f67af0]:   %91 = add i64 %63, 6 {
	[0x5608e1f852d0]:  %92 = add i64 %64, 6
	}

[0x5608e1f67b70]:   store i64 %91, i64* %PC, align 8 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e1f67bd8]:   %92 = inttoptr i64 %88 to i64* {
	[0x5608e1fb5048]:  %9 = inttoptr i64 %8 to i64*
	[0x5608e1fe9fd8]:  %49 = inttoptr i64 %45 to i32*
	[0x5608e1fecf28]:  %42 = inttoptr i64 %40 to i32*
	[0x5608e1fedbf8]:  %62 = inttoptr i64 %61 to i64*
	[0x5608e1fee6a8]:  %55 = inttoptr i64 %51 to i64*
	[0x5608e1ff1348]:  %90 = inttoptr i64 %65 to i64*
	[0x5608e1ff1df8]:  %93 = inttoptr i64 %89 to i64*
	}

[0x5608e1f67c38]:   %93 = load i64, i64* %92, align 8 {
	[0x5608e1f6d8f8]:  %47 = load i64, i64* %3, align 8
	[0x5608e1f79378]:  %46 = load i32, i32* %EDI.i, align 4
	[0x5608e1fd6a68]:  %4 = load i64, i64* %RBP.i, align 8
	[0x5608e1fd6c58]:  %7 = load i64, i64* %6, align 8
	[0x5608e1fe8018]:  %50 = load i64, i64* %RBP.i, align 8
	[0x5608e1fe8808]:  %10 = load i64, i64* %3, align 8
	[0x5608e1feae48]:  %44 = load i64, i64* %RBP.i, align 8
	[0x5608e1fed2b8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x5608e1fed998]:  %63 = load i64, i64* %6, align 8
	[0x5608e1fedf88]:  %60 = load i64, i64* %6, align 8
	[0x5608e1fee448]:  %57 = load i64, i64* %3, align 8
	[0x5608e1fef158]:  %53 = load i64, i64* %3, align 8
	[0x5608e1fef3b8]:  %64 = load i64, i64* %3, align 8
	[0x5608e1ff1cc8]:  %94 = load i64, i64* %93, align 8
	[0x5608e1ff23e8]:  %91 = load i64, i64* %90, align 8
	}

[0x5608e1f67cb0]:   store i64 %93, i64* %PC, align 8, !tbaa !1261 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e1f67d30]:   %94 = add i64 %62, 32 {
	[0x5608e1f84eb0]:  %95 = add i64 %63, 32
	}

[0x5608e1f67db0]:   store i64 %94, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e1f67e18]:   ret %struct.Memory* %61 {
	[0x5608e1f854c8]:  ret %struct.Memory.32* %call2_4004a8
	}

[0x5608e1fc2350]: %struct.State* %0 {
	[0x5608e1f78eb0]:%struct.State.1* %0
	}

[0x5608e1fc2390]: i64 %1 {
	[0x5608e1f791c0]:i64 %1
	}

[0x5608e1fc23d0]: %struct.Memory* %2 {
	[0x5608e1f7a450]:%struct.Memory.32* %2
	}

[0x5608e1fc2588]:   %AL = bitcast %union.anon* %3 to i8* {
	[0x5608e1fecdf8]:  %EDI.i = bitcast %union.anon.5* %43 to i32*
	[0x5608e1fee578]:  %AL.i = bitcast %union.anon.5* %56 to i8*
	}

[0x5608e1fc2660]:   %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0 {
	[0x5608e1f957a0]:  %3 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 6, i32 33, i32 0, i32 0
	}

[0x5608e1fc2728]:   %EDI = bitcast %union.anon* %4 to i32* {
	[0x5608e1fecdf8]:  %EDI.i = bitcast %union.anon.5* %43 to i32*
	[0x5608e1fee578]:  %AL.i = bitcast %union.anon.5* %56 to i8*
	}

[0x5608e1fc2820]:   %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0 {
	[0x5608e1fd6080]:  %RSI.i = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 6, i32 9, i32 0, i32 0
	}

[0x5608e1fc2930]:   %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0 {
	[0x5608e1fd9960]:  %6 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 6, i32 13, i32 0, i32 0
	}

[0x5608e1fc2a40]:   %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0 {
	[0x5608e1fd9af0]:  %RBP.i = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 6, i32 15, i32 0, i32 0
	}

[0x5608e1fc2ad8]:   %5 = load i64, i64* %RBP, align 8 {
	[0x5608e1f6d8f8]:  %47 = load i64, i64* %3, align 8
	[0x5608e1f79378]:  %46 = load i32, i32* %EDI.i, align 4
	[0x5608e1fd6a68]:  %4 = load i64, i64* %RBP.i, align 8
	[0x5608e1fd6c58]:  %7 = load i64, i64* %6, align 8
	[0x5608e1fe8018]:  %50 = load i64, i64* %RBP.i, align 8
	[0x5608e1fe8808]:  %10 = load i64, i64* %3, align 8
	[0x5608e1feae48]:  %44 = load i64, i64* %RBP.i, align 8
	[0x5608e1fed2b8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x5608e1fed998]:  %63 = load i64, i64* %6, align 8
	[0x5608e1fedf88]:  %60 = load i64, i64* %6, align 8
	[0x5608e1fee448]:  %57 = load i64, i64* %3, align 8
	[0x5608e1fef158]:  %53 = load i64, i64* %3, align 8
	[0x5608e1fef3b8]:  %64 = load i64, i64* %3, align 8
	[0x5608e1ff1cc8]:  %94 = load i64, i64* %93, align 8
	[0x5608e1ff23e8]:  %91 = load i64, i64* %90, align 8
	}

[0x5608e1fc2b50]:   %6 = add i64 %1, 1 {
	[0x5608e1fe62e0]:  %5 = add i64 %1, 1
	}

[0x5608e1fc2bd0]:   store i64 %6, i64* %PC, align 8 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e1fc2c38]:   %7 = load i64, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1f6d8f8]:  %47 = load i64, i64* %3, align 8
	[0x5608e1f79378]:  %46 = load i32, i32* %EDI.i, align 4
	[0x5608e1fd6a68]:  %4 = load i64, i64* %RBP.i, align 8
	[0x5608e1fd6c58]:  %7 = load i64, i64* %6, align 8
	[0x5608e1fe8018]:  %50 = load i64, i64* %RBP.i, align 8
	[0x5608e1fe8808]:  %10 = load i64, i64* %3, align 8
	[0x5608e1feae48]:  %44 = load i64, i64* %RBP.i, align 8
	[0x5608e1fed2b8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x5608e1fed998]:  %63 = load i64, i64* %6, align 8
	[0x5608e1fedf88]:  %60 = load i64, i64* %6, align 8
	[0x5608e1fee448]:  %57 = load i64, i64* %3, align 8
	[0x5608e1fef158]:  %53 = load i64, i64* %3, align 8
	[0x5608e1fef3b8]:  %64 = load i64, i64* %3, align 8
	[0x5608e1ff1cc8]:  %94 = load i64, i64* %93, align 8
	[0x5608e1ff23e8]:  %91 = load i64, i64* %90, align 8
	}

[0x5608e1fc2cb0]:   %8 = add i64 %7, -8 {
	[0x5608e1f775a0]:  %8 = add i64 %7, -8
	[0x5608e1f7ada0]:  %45 = add i64 %44, -8
	[0x5608e1f7da90]:  %61 = add i64 %60, -8
	}

[0x5608e1fc2d30]:   %17 = tail call i32 @llvm.ctpop.i32(i32 %16) #9 {
	[0x5608e1f776b0]:  %call2_4004a8 = tail call %struct.Memory.32* @sub_4004c0.printdata(%struct.State.1* %0, i64 %58, %struct.Memory.32* %2)
	[0x5608e2001220]:  %70 = tail call i32 @llvm.ctpop.i32(i32 %69)
	[0x5608e20013f0]:  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
	}

[0x5608e1fc2da8]:   %9 = inttoptr i64 %8 to i64* {
	[0x5608e1fb5048]:  %9 = inttoptr i64 %8 to i64*
	[0x5608e1fe9fd8]:  %49 = inttoptr i64 %45 to i32*
	[0x5608e1fecf28]:  %42 = inttoptr i64 %40 to i32*
	[0x5608e1fedbf8]:  %62 = inttoptr i64 %61 to i64*
	[0x5608e1fee6a8]:  %55 = inttoptr i64 %51 to i64*
	[0x5608e1ff1348]:  %90 = inttoptr i64 %65 to i64*
	[0x5608e1ff1df8]:  %93 = inttoptr i64 %89 to i64*
	}

[0x5608e1fc2e20]:   store i64 %5, i64* %9, align 8 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e1fc2e88]:   %10 = load i64, i64* %PC, align 8 {
	[0x5608e1f6d8f8]:  %47 = load i64, i64* %3, align 8
	[0x5608e1f79378]:  %46 = load i32, i32* %EDI.i, align 4
	[0x5608e1fd6a68]:  %4 = load i64, i64* %RBP.i, align 8
	[0x5608e1fd6c58]:  %7 = load i64, i64* %6, align 8
	[0x5608e1fe8018]:  %50 = load i64, i64* %RBP.i, align 8
	[0x5608e1fe8808]:  %10 = load i64, i64* %3, align 8
	[0x5608e1feae48]:  %44 = load i64, i64* %RBP.i, align 8
	[0x5608e1fed2b8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x5608e1fed998]:  %63 = load i64, i64* %6, align 8
	[0x5608e1fedf88]:  %60 = load i64, i64* %6, align 8
	[0x5608e1fee448]:  %57 = load i64, i64* %3, align 8
	[0x5608e1fef158]:  %53 = load i64, i64* %3, align 8
	[0x5608e1fef3b8]:  %64 = load i64, i64* %3, align 8
	[0x5608e1ff1cc8]:  %94 = load i64, i64* %93, align 8
	[0x5608e1ff23e8]:  %91 = load i64, i64* %90, align 8
	}

[0x5608e1fc2f00]:   store i64 %8, i64* %RBP, align 8, !tbaa !1261 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e1fc2f80]:   %11 = add i64 %7, -24 {
	[0x5608e1f76cf0]:  %11 = add i64 %7, -24
	}

[0x5608e1fc3000]:   store i64 %11, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e1fc3080]:   %12 = icmp ult i64 %8, 16 {
	[0x5608e1f79f70]:  %86 = icmp eq i64 %85, 2
	[0x5608e1f7a500]:  %28 = icmp eq i64 %11, 0
	[0x5608e1f7b1b0]:  %37 = icmp eq i64 %36, 2
	[0x5608e1f7d130]:  %66 = icmp ugt i64 %63, -17
	[0x5608e1f81fb0]:  %79 = icmp eq i64 %65, 0
	[0x5608e1fe8bd0]:  %12 = icmp ult i64 %8, 16
	}

[0x5608e1fc30e8]:   %13 = zext i1 %12 to i8 {
	[0x5608e1f963b8]:  %29 = zext i1 %28 to i8
	[0x5608e1fe8ad8]:  %13 = zext i1 %12 to i8
	[0x5608e1fe9bc8]:  %38 = zext i1 %37 to i8
	[0x5608e1fef4e8]:  %87 = zext i1 %86 to i8
	[0x5608e1fef748]:  %80 = zext i1 %79 to i8
	[0x5608e1ff10e8]:  %67 = zext i1 %66 to i8
	}

[0x5608e1fc3190]:   %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1 {
	[0x5608e20c1120]:  %14 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 2, i32 1
	}

[0x5608e1fc3220]:   store i8 %13, i8* %14, align 1, !tbaa !1265 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e1fc3288]:   %15 = trunc i64 %11 to i32 {
	[0x5608e1f67fc8]:  %25 = trunc i64 %24 to i8
	[0x5608e1fe69d8]:  %18 = trunc i32 %17 to i8
	[0x5608e1fe6e08]:  %15 = trunc i64 %11 to i32
	[0x5608e1fef618]:  %82 = trunc i64 %81 to i8
	[0x5608e1fef878]:  %77 = trunc i64 %76 to i8
	[0x5608e1ff09c8]:  %71 = trunc i32 %70 to i8
	[0x5608e1ff0fb8]:  %68 = trunc i64 %65 to i32
	[0x5608e2003068]:  %32 = trunc i64 %31 to i8
	}

[0x5608e2018c10]:   %16 = and i32 %15, 255 {
	[0x5608e1f7f160]:  %69 = and i32 %68, 255
	[0x5608e1fea9b0]:  %16 = and i32 %15, 255
	}

[0x5608e2018cb8]:   %18 = trunc i32 %17 to i8 {
	[0x5608e1f67fc8]:  %25 = trunc i64 %24 to i8
	[0x5608e1fe69d8]:  %18 = trunc i32 %17 to i8
	[0x5608e1fe6e08]:  %15 = trunc i64 %11 to i32
	[0x5608e1fef618]:  %82 = trunc i64 %81 to i8
	[0x5608e1fef878]:  %77 = trunc i64 %76 to i8
	[0x5608e1ff09c8]:  %71 = trunc i32 %70 to i8
	[0x5608e1ff0fb8]:  %68 = trunc i64 %65 to i32
	[0x5608e2003068]:  %32 = trunc i64 %31 to i8
	}

[0x5608e2018d30]:   %19 = and i8 %18, 1 {
	[0x5608e1f794f0]:  %26 = and i8 %25, 1
	[0x5608e1f7d6c0]:  %72 = and i8 %71, 1
	[0x5608e1f822e0]:  %78 = and i8 %77, 1
	[0x5608e1febef0]:  %19 = and i8 %18, 1
	}

[0x5608e2018db0]:   %20 = xor i8 %19, 1 {
	[0x5608e1f7ede0]:  %73 = xor i8 %72, 1
	[0x5608e1febde0]:  %20 = xor i8 %19, 1
	}

[0x5608e2018e60]:   %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3 {
	[0x5608e1fe27f0]:  %21 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 2, i32 3
	}

[0x5608e2018ef0]:   store i8 %20, i8* %21, align 1, !tbaa !1279 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e2018f70]:   %22 = xor i64 %8, 16 {
	[0x5608e1f79110]:  %22 = xor i64 %8, 16
	[0x5608e1f7eb90]:  %74 = xor i64 %63, 16
	}

[0x5608e2018ff0]:   %23 = xor i64 %22, %11 {
	[0x5608e1f7d240]:  %75 = xor i64 %74, %65
	[0x5608e1f825a0]:  %84 = xor i64 %81, %83
	[0x5608e1feabb0]:  %35 = xor i64 %31, %34
	[0x5608e1febab0]:  %23 = xor i64 %22, %11
	}

[0x5608e2019070]:   %24 = lshr i64 %23, 4 {
	[0x5608e1f78bc0]:  %24 = lshr i64 %23, 4
	[0x5608e1f7f920]:  %76 = lshr i64 %75, 4
	}

[0x5608e20190d8]:   %25 = trunc i64 %24 to i8 {
	[0x5608e1f67fc8]:  %25 = trunc i64 %24 to i8
	[0x5608e1fe69d8]:  %18 = trunc i32 %17 to i8
	[0x5608e1fe6e08]:  %15 = trunc i64 %11 to i32
	[0x5608e1fef618]:  %82 = trunc i64 %81 to i8
	[0x5608e1fef878]:  %77 = trunc i64 %76 to i8
	[0x5608e1ff09c8]:  %71 = trunc i32 %70 to i8
	[0x5608e1ff0fb8]:  %68 = trunc i64 %65 to i32
	[0x5608e2003068]:  %32 = trunc i64 %31 to i8
	}

[0x5608e2019150]:   %26 = and i8 %25, 1 {
	[0x5608e1f794f0]:  %26 = and i8 %25, 1
	[0x5608e1f7d6c0]:  %72 = and i8 %71, 1
	[0x5608e1f822e0]:  %78 = and i8 %77, 1
	[0x5608e1febef0]:  %19 = and i8 %18, 1
	}

[0x5608e2019200]:   %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5 {
	[0x5608e1f7f5a0]:  %27 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 2, i32 5
	}

[0x5608e2019290]:   store i8 %26, i8* %27, align 1, !tbaa !1280 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e2019310]:   %28 = icmp eq i64 %11, 0 {
	[0x5608e1f79f70]:  %86 = icmp eq i64 %85, 2
	[0x5608e1f7a500]:  %28 = icmp eq i64 %11, 0
	[0x5608e1f7b1b0]:  %37 = icmp eq i64 %36, 2
	[0x5608e1f7d130]:  %66 = icmp ugt i64 %63, -17
	[0x5608e1f81fb0]:  %79 = icmp eq i64 %65, 0
	[0x5608e1fe8bd0]:  %12 = icmp ult i64 %8, 16
	}

[0x5608e2019378]:   %29 = zext i1 %28 to i8 {
	[0x5608e1f963b8]:  %29 = zext i1 %28 to i8
	[0x5608e1fe8ad8]:  %13 = zext i1 %12 to i8
	[0x5608e1fe9bc8]:  %38 = zext i1 %37 to i8
	[0x5608e1fef4e8]:  %87 = zext i1 %86 to i8
	[0x5608e1fef748]:  %80 = zext i1 %79 to i8
	[0x5608e1ff10e8]:  %67 = zext i1 %66 to i8
	}

[0x5608e2019420]:   %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7 {
	[0x5608e1f7bfa0]:  %30 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 2, i32 7
	}

[0x5608e20194b0]:   store i8 %29, i8* %30, align 1, !tbaa !1281 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e2019530]:   %31 = lshr i64 %11, 63 {
	[0x5608e1f800e0]:  %83 = lshr i64 %63, 63
	[0x5608e1f81cf0]:  %81 = lshr i64 %65, 63
	[0x5608e1fec110]:  %34 = lshr i64 %8, 63
	[0x5608e1fec330]:  %31 = lshr i64 %11, 63
	}

[0x5608e2019598]:   %32 = trunc i64 %31 to i8 {
	[0x5608e1f67fc8]:  %25 = trunc i64 %24 to i8
	[0x5608e1fe69d8]:  %18 = trunc i32 %17 to i8
	[0x5608e1fe6e08]:  %15 = trunc i64 %11 to i32
	[0x5608e1fef618]:  %82 = trunc i64 %81 to i8
	[0x5608e1fef878]:  %77 = trunc i64 %76 to i8
	[0x5608e1ff09c8]:  %71 = trunc i32 %70 to i8
	[0x5608e1ff0fb8]:  %68 = trunc i64 %65 to i32
	[0x5608e2003068]:  %32 = trunc i64 %31 to i8
	}

[0x5608e2019640]:   %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9 {
	[0x5608e1f7bd30]:  %33 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 2, i32 9
	}

[0x5608e20196d0]:   store i8 %32, i8* %33, align 1, !tbaa !1282 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e2019750]:   %34 = lshr i64 %8, 63 {
	[0x5608e1f800e0]:  %83 = lshr i64 %63, 63
	[0x5608e1f81cf0]:  %81 = lshr i64 %65, 63
	[0x5608e1fec110]:  %34 = lshr i64 %8, 63
	[0x5608e1fec330]:  %31 = lshr i64 %11, 63
	}

[0x5608e20197d0]:   %35 = xor i64 %31, %34 {
	[0x5608e1f7d240]:  %75 = xor i64 %74, %65
	[0x5608e1f825a0]:  %84 = xor i64 %81, %83
	[0x5608e1feabb0]:  %35 = xor i64 %31, %34
	[0x5608e1febab0]:  %23 = xor i64 %22, %11
	}

[0x5608e2019850]:   %36 = add nuw nsw i64 %35, %34 {
	[0x5608e1f7a0d0]:  %85 = add nuw nsw i64 %84, %81
	[0x5608e1f7aa30]:  %36 = add nuw nsw i64 %35, %34
	}

[0x5608e20198d0]:   %37 = icmp eq i64 %36, 2 {
	[0x5608e1f79f70]:  %86 = icmp eq i64 %85, 2
	[0x5608e1f7a500]:  %28 = icmp eq i64 %11, 0
	[0x5608e1f7b1b0]:  %37 = icmp eq i64 %36, 2
	[0x5608e1f7d130]:  %66 = icmp ugt i64 %63, -17
	[0x5608e1f81fb0]:  %79 = icmp eq i64 %65, 0
	[0x5608e1fe8bd0]:  %12 = icmp ult i64 %8, 16
	}

[0x5608e2019938]:   %38 = zext i1 %37 to i8 {
	[0x5608e1f963b8]:  %29 = zext i1 %28 to i8
	[0x5608e1fe8ad8]:  %13 = zext i1 %12 to i8
	[0x5608e1fe9bc8]:  %38 = zext i1 %37 to i8
	[0x5608e1fef4e8]:  %87 = zext i1 %86 to i8
	[0x5608e1fef748]:  %80 = zext i1 %79 to i8
	[0x5608e1ff10e8]:  %67 = zext i1 %66 to i8
	}

[0x5608e20199e0]:   %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13 {
	[0x5608e1f7a610]:  %39 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 2, i32 13
	}

[0x5608e2019a70]:   store i8 %38, i8* %39, align 1, !tbaa !1283 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e2019b30]:   %40 = add i64 %7, -12 {
	[0x5608e1fec990]:  %40 = add i64 %7, -12
	}

[0x5608e2019bb0]:   %41 = add i64 %10, 14 {
	[0x5608e1f7af00]:  %41 = add i64 %10, 14
	}

[0x5608e2019c30]:   store i64 %41, i64* %PC, align 8 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e2019c98]:   %42 = inttoptr i64 %40 to i32* {
	[0x5608e1fb5048]:  %9 = inttoptr i64 %8 to i64*
	[0x5608e1fe9fd8]:  %49 = inttoptr i64 %45 to i32*
	[0x5608e1fecf28]:  %42 = inttoptr i64 %40 to i32*
	[0x5608e1fedbf8]:  %62 = inttoptr i64 %61 to i64*
	[0x5608e1fee6a8]:  %55 = inttoptr i64 %51 to i64*
	[0x5608e1ff1348]:  %90 = inttoptr i64 %65 to i64*
	[0x5608e1ff1df8]:  %93 = inttoptr i64 %89 to i64*
	}

[0x5608e2019d10]:   store i32 0, i32* %42, align 4 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e2019d78]:   %43 = load i64, i64* %RBP, align 8 {
	[0x5608e1f6d8f8]:  %47 = load i64, i64* %3, align 8
	[0x5608e1f79378]:  %46 = load i32, i32* %EDI.i, align 4
	[0x5608e1fd6a68]:  %4 = load i64, i64* %RBP.i, align 8
	[0x5608e1fd6c58]:  %7 = load i64, i64* %6, align 8
	[0x5608e1fe8018]:  %50 = load i64, i64* %RBP.i, align 8
	[0x5608e1fe8808]:  %10 = load i64, i64* %3, align 8
	[0x5608e1feae48]:  %44 = load i64, i64* %RBP.i, align 8
	[0x5608e1fed2b8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x5608e1fed998]:  %63 = load i64, i64* %6, align 8
	[0x5608e1fedf88]:  %60 = load i64, i64* %6, align 8
	[0x5608e1fee448]:  %57 = load i64, i64* %3, align 8
	[0x5608e1fef158]:  %53 = load i64, i64* %3, align 8
	[0x5608e1fef3b8]:  %64 = load i64, i64* %3, align 8
	[0x5608e1ff1cc8]:  %94 = load i64, i64* %93, align 8
	[0x5608e1ff23e8]:  %91 = load i64, i64* %90, align 8
	}

[0x5608e2019df0]:   %44 = add i64 %43, -8 {
	[0x5608e1f775a0]:  %8 = add i64 %7, -8
	[0x5608e1f7ada0]:  %45 = add i64 %44, -8
	[0x5608e1f7da90]:  %61 = add i64 %60, -8
	}

[0x5608e2019e58]:   %45 = load i32, i32* %EDI, align 4 {
	[0x5608e1f6d8f8]:  %47 = load i64, i64* %3, align 8
	[0x5608e1f79378]:  %46 = load i32, i32* %EDI.i, align 4
	[0x5608e1fd6a68]:  %4 = load i64, i64* %RBP.i, align 8
	[0x5608e1fd6c58]:  %7 = load i64, i64* %6, align 8
	[0x5608e1fe8018]:  %50 = load i64, i64* %RBP.i, align 8
	[0x5608e1fe8808]:  %10 = load i64, i64* %3, align 8
	[0x5608e1feae48]:  %44 = load i64, i64* %RBP.i, align 8
	[0x5608e1fed2b8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x5608e1fed998]:  %63 = load i64, i64* %6, align 8
	[0x5608e1fedf88]:  %60 = load i64, i64* %6, align 8
	[0x5608e1fee448]:  %57 = load i64, i64* %3, align 8
	[0x5608e1fef158]:  %53 = load i64, i64* %3, align 8
	[0x5608e1fef3b8]:  %64 = load i64, i64* %3, align 8
	[0x5608e1ff1cc8]:  %94 = load i64, i64* %93, align 8
	[0x5608e1ff23e8]:  %91 = load i64, i64* %90, align 8
	}

[0x5608e2019eb8]:   %46 = load i64, i64* %PC, align 8 {
	[0x5608e1f6d8f8]:  %47 = load i64, i64* %3, align 8
	[0x5608e1f79378]:  %46 = load i32, i32* %EDI.i, align 4
	[0x5608e1fd6a68]:  %4 = load i64, i64* %RBP.i, align 8
	[0x5608e1fd6c58]:  %7 = load i64, i64* %6, align 8
	[0x5608e1fe8018]:  %50 = load i64, i64* %RBP.i, align 8
	[0x5608e1fe8808]:  %10 = load i64, i64* %3, align 8
	[0x5608e1feae48]:  %44 = load i64, i64* %RBP.i, align 8
	[0x5608e1fed2b8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x5608e1fed998]:  %63 = load i64, i64* %6, align 8
	[0x5608e1fedf88]:  %60 = load i64, i64* %6, align 8
	[0x5608e1fee448]:  %57 = load i64, i64* %3, align 8
	[0x5608e1fef158]:  %53 = load i64, i64* %3, align 8
	[0x5608e1fef3b8]:  %64 = load i64, i64* %3, align 8
	[0x5608e1ff1cc8]:  %94 = load i64, i64* %93, align 8
	[0x5608e1ff23e8]:  %91 = load i64, i64* %90, align 8
	}

[0x5608e2019f30]:   %47 = add i64 %46, 3 {
	[0x5608e1fecbb0]:  %48 = add i64 %47, 3
	}

[0x5608e2019fb0]:   store i64 %47, i64* %PC, align 8 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201a018]:   %48 = inttoptr i64 %44 to i32* {
	[0x5608e1fb5048]:  %9 = inttoptr i64 %8 to i64*
	[0x5608e1fe9fd8]:  %49 = inttoptr i64 %45 to i32*
	[0x5608e1fecf28]:  %42 = inttoptr i64 %40 to i32*
	[0x5608e1fedbf8]:  %62 = inttoptr i64 %61 to i64*
	[0x5608e1fee6a8]:  %55 = inttoptr i64 %51 to i64*
	[0x5608e1ff1348]:  %90 = inttoptr i64 %65 to i64*
	[0x5608e1ff1df8]:  %93 = inttoptr i64 %89 to i64*
	}

[0x5608e201a090]:   store i32 %45, i32* %48, align 4 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201a0f8]:   %49 = load i64, i64* %RBP, align 8 {
	[0x5608e1f6d8f8]:  %47 = load i64, i64* %3, align 8
	[0x5608e1f79378]:  %46 = load i32, i32* %EDI.i, align 4
	[0x5608e1fd6a68]:  %4 = load i64, i64* %RBP.i, align 8
	[0x5608e1fd6c58]:  %7 = load i64, i64* %6, align 8
	[0x5608e1fe8018]:  %50 = load i64, i64* %RBP.i, align 8
	[0x5608e1fe8808]:  %10 = load i64, i64* %3, align 8
	[0x5608e1feae48]:  %44 = load i64, i64* %RBP.i, align 8
	[0x5608e1fed2b8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x5608e1fed998]:  %63 = load i64, i64* %6, align 8
	[0x5608e1fedf88]:  %60 = load i64, i64* %6, align 8
	[0x5608e1fee448]:  %57 = load i64, i64* %3, align 8
	[0x5608e1fef158]:  %53 = load i64, i64* %3, align 8
	[0x5608e1fef3b8]:  %64 = load i64, i64* %3, align 8
	[0x5608e1ff1cc8]:  %94 = load i64, i64* %93, align 8
	[0x5608e1ff23e8]:  %91 = load i64, i64* %90, align 8
	}

[0x5608e201a170]:   %50 = add i64 %49, -16 {
	[0x5608e1f7b8c0]:  %51 = add i64 %50, -16
	}

[0x5608e201a1d8]:   %51 = load i64, i64* %RSI, align 8 {
	[0x5608e1f6d8f8]:  %47 = load i64, i64* %3, align 8
	[0x5608e1f79378]:  %46 = load i32, i32* %EDI.i, align 4
	[0x5608e1fd6a68]:  %4 = load i64, i64* %RBP.i, align 8
	[0x5608e1fd6c58]:  %7 = load i64, i64* %6, align 8
	[0x5608e1fe8018]:  %50 = load i64, i64* %RBP.i, align 8
	[0x5608e1fe8808]:  %10 = load i64, i64* %3, align 8
	[0x5608e1feae48]:  %44 = load i64, i64* %RBP.i, align 8
	[0x5608e1fed2b8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x5608e1fed998]:  %63 = load i64, i64* %6, align 8
	[0x5608e1fedf88]:  %60 = load i64, i64* %6, align 8
	[0x5608e1fee448]:  %57 = load i64, i64* %3, align 8
	[0x5608e1fef158]:  %53 = load i64, i64* %3, align 8
	[0x5608e1fef3b8]:  %64 = load i64, i64* %3, align 8
	[0x5608e1ff1cc8]:  %94 = load i64, i64* %93, align 8
	[0x5608e1ff23e8]:  %91 = load i64, i64* %90, align 8
	}

[0x5608e201a238]:   %52 = load i64, i64* %PC, align 8 {
	[0x5608e1f6d8f8]:  %47 = load i64, i64* %3, align 8
	[0x5608e1f79378]:  %46 = load i32, i32* %EDI.i, align 4
	[0x5608e1fd6a68]:  %4 = load i64, i64* %RBP.i, align 8
	[0x5608e1fd6c58]:  %7 = load i64, i64* %6, align 8
	[0x5608e1fe8018]:  %50 = load i64, i64* %RBP.i, align 8
	[0x5608e1fe8808]:  %10 = load i64, i64* %3, align 8
	[0x5608e1feae48]:  %44 = load i64, i64* %RBP.i, align 8
	[0x5608e1fed2b8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x5608e1fed998]:  %63 = load i64, i64* %6, align 8
	[0x5608e1fedf88]:  %60 = load i64, i64* %6, align 8
	[0x5608e1fee448]:  %57 = load i64, i64* %3, align 8
	[0x5608e1fef158]:  %53 = load i64, i64* %3, align 8
	[0x5608e1fef3b8]:  %64 = load i64, i64* %3, align 8
	[0x5608e1ff1cc8]:  %94 = load i64, i64* %93, align 8
	[0x5608e1ff23e8]:  %91 = load i64, i64* %90, align 8
	}

[0x5608e201a2b0]:   %53 = add i64 %52, 4 {
	[0x5608e1f7b720]:  %54 = add i64 %53, 4
	}

[0x5608e201a330]:   store i64 %53, i64* %PC, align 8 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201a398]:   %54 = inttoptr i64 %50 to i64* {
	[0x5608e1fb5048]:  %9 = inttoptr i64 %8 to i64*
	[0x5608e1fe9fd8]:  %49 = inttoptr i64 %45 to i32*
	[0x5608e1fecf28]:  %42 = inttoptr i64 %40 to i32*
	[0x5608e1fedbf8]:  %62 = inttoptr i64 %61 to i64*
	[0x5608e1fee6a8]:  %55 = inttoptr i64 %51 to i64*
	[0x5608e1ff1348]:  %90 = inttoptr i64 %65 to i64*
	[0x5608e1ff1df8]:  %93 = inttoptr i64 %89 to i64*
	}

[0x5608e201a410]:   store i64 %51, i64* %54, align 8 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201a478]:   %55 = load i64, i64* %PC, align 8 {
	[0x5608e1f6d8f8]:  %47 = load i64, i64* %3, align 8
	[0x5608e1f79378]:  %46 = load i32, i32* %EDI.i, align 4
	[0x5608e1fd6a68]:  %4 = load i64, i64* %RBP.i, align 8
	[0x5608e1fd6c58]:  %7 = load i64, i64* %6, align 8
	[0x5608e1fe8018]:  %50 = load i64, i64* %RBP.i, align 8
	[0x5608e1fe8808]:  %10 = load i64, i64* %3, align 8
	[0x5608e1feae48]:  %44 = load i64, i64* %RBP.i, align 8
	[0x5608e1fed2b8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x5608e1fed998]:  %63 = load i64, i64* %6, align 8
	[0x5608e1fedf88]:  %60 = load i64, i64* %6, align 8
	[0x5608e1fee448]:  %57 = load i64, i64* %3, align 8
	[0x5608e1fef158]:  %53 = load i64, i64* %3, align 8
	[0x5608e1fef3b8]:  %64 = load i64, i64* %3, align 8
	[0x5608e1ff1cc8]:  %94 = load i64, i64* %93, align 8
	[0x5608e1ff23e8]:  %91 = load i64, i64* %90, align 8
	}

[0x5608e201a4f0]:   store i8 0, i8* %AL, align 1, !tbaa !1284 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201a5b0]:   %56 = add i64 %55, 26 {
	[0x5608e1f7c370]:  %58 = add i64 %57, 26
	}

[0x5608e201a630]:   %57 = add i64 %55, 7 {
	[0x5608e1f7d020]:  %59 = add i64 %57, 7
	}

[0x5608e201a698]:   %58 = load i64, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1f6d8f8]:  %47 = load i64, i64* %3, align 8
	[0x5608e1f79378]:  %46 = load i32, i32* %EDI.i, align 4
	[0x5608e1fd6a68]:  %4 = load i64, i64* %RBP.i, align 8
	[0x5608e1fd6c58]:  %7 = load i64, i64* %6, align 8
	[0x5608e1fe8018]:  %50 = load i64, i64* %RBP.i, align 8
	[0x5608e1fe8808]:  %10 = load i64, i64* %3, align 8
	[0x5608e1feae48]:  %44 = load i64, i64* %RBP.i, align 8
	[0x5608e1fed2b8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x5608e1fed998]:  %63 = load i64, i64* %6, align 8
	[0x5608e1fedf88]:  %60 = load i64, i64* %6, align 8
	[0x5608e1fee448]:  %57 = load i64, i64* %3, align 8
	[0x5608e1fef158]:  %53 = load i64, i64* %3, align 8
	[0x5608e1fef3b8]:  %64 = load i64, i64* %3, align 8
	[0x5608e1ff1cc8]:  %94 = load i64, i64* %93, align 8
	[0x5608e1ff23e8]:  %91 = load i64, i64* %90, align 8
	}

[0x5608e201a710]:   %59 = add i64 %58, -8 {
	[0x5608e1f775a0]:  %8 = add i64 %7, -8
	[0x5608e1f7ada0]:  %45 = add i64 %44, -8
	[0x5608e1f7da90]:  %61 = add i64 %60, -8
	}

[0x5608e201a778]:   %60 = inttoptr i64 %59 to i64* {
	[0x5608e1fb5048]:  %9 = inttoptr i64 %8 to i64*
	[0x5608e1fe9fd8]:  %49 = inttoptr i64 %45 to i32*
	[0x5608e1fecf28]:  %42 = inttoptr i64 %40 to i32*
	[0x5608e1fedbf8]:  %62 = inttoptr i64 %61 to i64*
	[0x5608e1fee6a8]:  %55 = inttoptr i64 %51 to i64*
	[0x5608e1ff1348]:  %90 = inttoptr i64 %65 to i64*
	[0x5608e1ff1df8]:  %93 = inttoptr i64 %89 to i64*
	}

[0x5608e201a7f0]:   store i64 %57, i64* %60, align 8 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201a870]:   store i64 %59, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201a8f0]:   store i64 %56, i64* %PC, align 8, !tbaa !1261 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201a9f0]:   %61 = tail call %struct.Memory* @sub_4004c0_printdata(%struct.State* nonnull %0, i64 %56, %struct.Memory* %2) {
	[0x5608e1f776b0]:  %call2_4004a8 = tail call %struct.Memory.32* @sub_4004c0.printdata(%struct.State.1* %0, i64 %58, %struct.Memory.32* %2)
	[0x5608e2001220]:  %70 = tail call i32 @llvm.ctpop.i32(i32 %69)
	[0x5608e20013f0]:  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
	}

[0x5608e201aab8]:   %62 = load i64, i64* %RSP, align 8 {
	[0x5608e1f6d8f8]:  %47 = load i64, i64* %3, align 8
	[0x5608e1f79378]:  %46 = load i32, i32* %EDI.i, align 4
	[0x5608e1fd6a68]:  %4 = load i64, i64* %RBP.i, align 8
	[0x5608e1fd6c58]:  %7 = load i64, i64* %6, align 8
	[0x5608e1fe8018]:  %50 = load i64, i64* %RBP.i, align 8
	[0x5608e1fe8808]:  %10 = load i64, i64* %3, align 8
	[0x5608e1feae48]:  %44 = load i64, i64* %RBP.i, align 8
	[0x5608e1fed2b8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x5608e1fed998]:  %63 = load i64, i64* %6, align 8
	[0x5608e1fedf88]:  %60 = load i64, i64* %6, align 8
	[0x5608e1fee448]:  %57 = load i64, i64* %3, align 8
	[0x5608e1fef158]:  %53 = load i64, i64* %3, align 8
	[0x5608e1fef3b8]:  %64 = load i64, i64* %3, align 8
	[0x5608e1ff1cc8]:  %94 = load i64, i64* %93, align 8
	[0x5608e1ff23e8]:  %91 = load i64, i64* %90, align 8
	}

[0x5608e201ab18]:   %63 = load i64, i64* %PC, align 8 {
	[0x5608e1f6d8f8]:  %47 = load i64, i64* %3, align 8
	[0x5608e1f79378]:  %46 = load i32, i32* %EDI.i, align 4
	[0x5608e1fd6a68]:  %4 = load i64, i64* %RBP.i, align 8
	[0x5608e1fd6c58]:  %7 = load i64, i64* %6, align 8
	[0x5608e1fe8018]:  %50 = load i64, i64* %RBP.i, align 8
	[0x5608e1fe8808]:  %10 = load i64, i64* %3, align 8
	[0x5608e1feae48]:  %44 = load i64, i64* %RBP.i, align 8
	[0x5608e1fed2b8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x5608e1fed998]:  %63 = load i64, i64* %6, align 8
	[0x5608e1fedf88]:  %60 = load i64, i64* %6, align 8
	[0x5608e1fee448]:  %57 = load i64, i64* %3, align 8
	[0x5608e1fef158]:  %53 = load i64, i64* %3, align 8
	[0x5608e1fef3b8]:  %64 = load i64, i64* %3, align 8
	[0x5608e1ff1cc8]:  %94 = load i64, i64* %93, align 8
	[0x5608e1ff23e8]:  %91 = load i64, i64* %90, align 8
	}

[0x5608e201ab90]:   %64 = add i64 %62, 16 {
	[0x5608e1f7c620]:  %65 = add i64 %63, 16
	}

[0x5608e201ac10]:   store i64 %64, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201acd0]:   %65 = icmp ugt i64 %62, -17 {
	[0x5608e1f79f70]:  %86 = icmp eq i64 %85, 2
	[0x5608e1f7a500]:  %28 = icmp eq i64 %11, 0
	[0x5608e1f7b1b0]:  %37 = icmp eq i64 %36, 2
	[0x5608e1f7d130]:  %66 = icmp ugt i64 %63, -17
	[0x5608e1f81fb0]:  %79 = icmp eq i64 %65, 0
	[0x5608e1fe8bd0]:  %12 = icmp ult i64 %8, 16
	}

[0x5608e201ad38]:   %66 = zext i1 %65 to i8 {
	[0x5608e1f963b8]:  %29 = zext i1 %28 to i8
	[0x5608e1fe8ad8]:  %13 = zext i1 %12 to i8
	[0x5608e1fe9bc8]:  %38 = zext i1 %37 to i8
	[0x5608e1fef4e8]:  %87 = zext i1 %86 to i8
	[0x5608e1fef748]:  %80 = zext i1 %79 to i8
	[0x5608e1ff10e8]:  %67 = zext i1 %66 to i8
	}

[0x5608e201adb0]:   store i8 %66, i8* %14, align 1, !tbaa !1265 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201ae18]:   %67 = trunc i64 %64 to i32 {
	[0x5608e1f67fc8]:  %25 = trunc i64 %24 to i8
	[0x5608e1fe69d8]:  %18 = trunc i32 %17 to i8
	[0x5608e1fe6e08]:  %15 = trunc i64 %11 to i32
	[0x5608e1fef618]:  %82 = trunc i64 %81 to i8
	[0x5608e1fef878]:  %77 = trunc i64 %76 to i8
	[0x5608e1ff09c8]:  %71 = trunc i32 %70 to i8
	[0x5608e1ff0fb8]:  %68 = trunc i64 %65 to i32
	[0x5608e2003068]:  %32 = trunc i64 %31 to i8
	}

[0x5608e201ae90]:   %68 = and i32 %67, 255 {
	[0x5608e1f7f160]:  %69 = and i32 %68, 255
	[0x5608e1fea9b0]:  %16 = and i32 %15, 255
	}

[0x5608e201af10]:   %69 = tail call i32 @llvm.ctpop.i32(i32 %68) #9 {
	[0x5608e1f776b0]:  %call2_4004a8 = tail call %struct.Memory.32* @sub_4004c0.printdata(%struct.State.1* %0, i64 %58, %struct.Memory.32* %2)
	[0x5608e2001220]:  %70 = tail call i32 @llvm.ctpop.i32(i32 %69)
	[0x5608e20013f0]:  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
	}

[0x5608e201afd8]:   %70 = trunc i32 %69 to i8 {
	[0x5608e1f67fc8]:  %25 = trunc i64 %24 to i8
	[0x5608e1fe69d8]:  %18 = trunc i32 %17 to i8
	[0x5608e1fe6e08]:  %15 = trunc i64 %11 to i32
	[0x5608e1fef618]:  %82 = trunc i64 %81 to i8
	[0x5608e1fef878]:  %77 = trunc i64 %76 to i8
	[0x5608e1ff09c8]:  %71 = trunc i32 %70 to i8
	[0x5608e1ff0fb8]:  %68 = trunc i64 %65 to i32
	[0x5608e2003068]:  %32 = trunc i64 %31 to i8
	}

[0x5608e201b050]:   %71 = and i8 %70, 1 {
	[0x5608e1f794f0]:  %26 = and i8 %25, 1
	[0x5608e1f7d6c0]:  %72 = and i8 %71, 1
	[0x5608e1f822e0]:  %78 = and i8 %77, 1
	[0x5608e1febef0]:  %19 = and i8 %18, 1
	}

[0x5608e201b0d0]:   %72 = xor i8 %71, 1 {
	[0x5608e1f7ede0]:  %73 = xor i8 %72, 1
	[0x5608e1febde0]:  %20 = xor i8 %19, 1
	}

[0x5608e201b150]:   store i8 %72, i8* %21, align 1, !tbaa !1279 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201b1d0]:   %73 = xor i64 %62, 16 {
	[0x5608e1f79110]:  %22 = xor i64 %8, 16
	[0x5608e1f7eb90]:  %74 = xor i64 %63, 16
	}

[0x5608e201b250]:   %74 = xor i64 %73, %64 {
	[0x5608e1f7d240]:  %75 = xor i64 %74, %65
	[0x5608e1f825a0]:  %84 = xor i64 %81, %83
	[0x5608e1feabb0]:  %35 = xor i64 %31, %34
	[0x5608e1febab0]:  %23 = xor i64 %22, %11
	}

[0x5608e201b2d0]:   %75 = lshr i64 %74, 4 {
	[0x5608e1f78bc0]:  %24 = lshr i64 %23, 4
	[0x5608e1f7f920]:  %76 = lshr i64 %75, 4
	}

[0x5608e201b338]:   %76 = trunc i64 %75 to i8 {
	[0x5608e1f67fc8]:  %25 = trunc i64 %24 to i8
	[0x5608e1fe69d8]:  %18 = trunc i32 %17 to i8
	[0x5608e1fe6e08]:  %15 = trunc i64 %11 to i32
	[0x5608e1fef618]:  %82 = trunc i64 %81 to i8
	[0x5608e1fef878]:  %77 = trunc i64 %76 to i8
	[0x5608e1ff09c8]:  %71 = trunc i32 %70 to i8
	[0x5608e1ff0fb8]:  %68 = trunc i64 %65 to i32
	[0x5608e2003068]:  %32 = trunc i64 %31 to i8
	}

[0x5608e201b3b0]:   %77 = and i8 %76, 1 {
	[0x5608e1f794f0]:  %26 = and i8 %25, 1
	[0x5608e1f7d6c0]:  %72 = and i8 %71, 1
	[0x5608e1f822e0]:  %78 = and i8 %77, 1
	[0x5608e1febef0]:  %19 = and i8 %18, 1
	}

[0x5608e201b430]:   store i8 %77, i8* %27, align 1, !tbaa !1280 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201b4b0]:   %78 = icmp eq i64 %64, 0 {
	[0x5608e1f79f70]:  %86 = icmp eq i64 %85, 2
	[0x5608e1f7a500]:  %28 = icmp eq i64 %11, 0
	[0x5608e1f7b1b0]:  %37 = icmp eq i64 %36, 2
	[0x5608e1f7d130]:  %66 = icmp ugt i64 %63, -17
	[0x5608e1f81fb0]:  %79 = icmp eq i64 %65, 0
	[0x5608e1fe8bd0]:  %12 = icmp ult i64 %8, 16
	}

[0x5608e201b518]:   %79 = zext i1 %78 to i8 {
	[0x5608e1f963b8]:  %29 = zext i1 %28 to i8
	[0x5608e1fe8ad8]:  %13 = zext i1 %12 to i8
	[0x5608e1fe9bc8]:  %38 = zext i1 %37 to i8
	[0x5608e1fef4e8]:  %87 = zext i1 %86 to i8
	[0x5608e1fef748]:  %80 = zext i1 %79 to i8
	[0x5608e1ff10e8]:  %67 = zext i1 %66 to i8
	}

[0x5608e201b590]:   store i8 %79, i8* %30, align 1, !tbaa !1281 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201b610]:   %80 = lshr i64 %64, 63 {
	[0x5608e1f800e0]:  %83 = lshr i64 %63, 63
	[0x5608e1f81cf0]:  %81 = lshr i64 %65, 63
	[0x5608e1fec110]:  %34 = lshr i64 %8, 63
	[0x5608e1fec330]:  %31 = lshr i64 %11, 63
	}

[0x5608e201b678]:   %81 = trunc i64 %80 to i8 {
	[0x5608e1f67fc8]:  %25 = trunc i64 %24 to i8
	[0x5608e1fe69d8]:  %18 = trunc i32 %17 to i8
	[0x5608e1fe6e08]:  %15 = trunc i64 %11 to i32
	[0x5608e1fef618]:  %82 = trunc i64 %81 to i8
	[0x5608e1fef878]:  %77 = trunc i64 %76 to i8
	[0x5608e1ff09c8]:  %71 = trunc i32 %70 to i8
	[0x5608e1ff0fb8]:  %68 = trunc i64 %65 to i32
	[0x5608e2003068]:  %32 = trunc i64 %31 to i8
	}

[0x5608e201b6f0]:   store i8 %81, i8* %33, align 1, !tbaa !1282 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201b770]:   %82 = lshr i64 %62, 63 {
	[0x5608e1f800e0]:  %83 = lshr i64 %63, 63
	[0x5608e1f81cf0]:  %81 = lshr i64 %65, 63
	[0x5608e1fec110]:  %34 = lshr i64 %8, 63
	[0x5608e1fec330]:  %31 = lshr i64 %11, 63
	}

[0x5608e201b7f0]:   %83 = xor i64 %80, %82 {
	[0x5608e1f7d240]:  %75 = xor i64 %74, %65
	[0x5608e1f825a0]:  %84 = xor i64 %81, %83
	[0x5608e1feabb0]:  %35 = xor i64 %31, %34
	[0x5608e1febab0]:  %23 = xor i64 %22, %11
	}

[0x5608e201b870]:   %84 = add nuw nsw i64 %83, %80 {
	[0x5608e1f7a0d0]:  %85 = add nuw nsw i64 %84, %81
	[0x5608e1f7aa30]:  %36 = add nuw nsw i64 %35, %34
	}

[0x5608e201b8f0]:   %85 = icmp eq i64 %84, 2 {
	[0x5608e1f79f70]:  %86 = icmp eq i64 %85, 2
	[0x5608e1f7a500]:  %28 = icmp eq i64 %11, 0
	[0x5608e1f7b1b0]:  %37 = icmp eq i64 %36, 2
	[0x5608e1f7d130]:  %66 = icmp ugt i64 %63, -17
	[0x5608e1f81fb0]:  %79 = icmp eq i64 %65, 0
	[0x5608e1fe8bd0]:  %12 = icmp ult i64 %8, 16
	}

[0x5608e201b958]:   %86 = zext i1 %85 to i8 {
	[0x5608e1f963b8]:  %29 = zext i1 %28 to i8
	[0x5608e1fe8ad8]:  %13 = zext i1 %12 to i8
	[0x5608e1fe9bc8]:  %38 = zext i1 %37 to i8
	[0x5608e1fef4e8]:  %87 = zext i1 %86 to i8
	[0x5608e1fef748]:  %80 = zext i1 %79 to i8
	[0x5608e1ff10e8]:  %67 = zext i1 %66 to i8
	}

[0x5608e201b9d0]:   store i8 %86, i8* %39, align 1, !tbaa !1283 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201ba50]:   %87 = add i64 %63, 5 {
	[0x5608e1f79cf0]:  %88 = add i64 %64, 5
	}

[0x5608e201bad0]:   store i64 %87, i64* %PC, align 8 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201bb50]:   %88 = add i64 %62, 24 {
	[0x5608e1f799c0]:  %89 = add i64 %63, 24
	}

[0x5608e201bbb8]:   %89 = inttoptr i64 %64 to i64* {
	[0x5608e1fb5048]:  %9 = inttoptr i64 %8 to i64*
	[0x5608e1fe9fd8]:  %49 = inttoptr i64 %45 to i32*
	[0x5608e1fecf28]:  %42 = inttoptr i64 %40 to i32*
	[0x5608e1fedbf8]:  %62 = inttoptr i64 %61 to i64*
	[0x5608e1fee6a8]:  %55 = inttoptr i64 %51 to i64*
	[0x5608e1ff1348]:  %90 = inttoptr i64 %65 to i64*
	[0x5608e1ff1df8]:  %93 = inttoptr i64 %89 to i64*
	}

[0x5608e201bc18]:   %90 = load i64, i64* %89, align 8 {
	[0x5608e1f6d8f8]:  %47 = load i64, i64* %3, align 8
	[0x5608e1f79378]:  %46 = load i32, i32* %EDI.i, align 4
	[0x5608e1fd6a68]:  %4 = load i64, i64* %RBP.i, align 8
	[0x5608e1fd6c58]:  %7 = load i64, i64* %6, align 8
	[0x5608e1fe8018]:  %50 = load i64, i64* %RBP.i, align 8
	[0x5608e1fe8808]:  %10 = load i64, i64* %3, align 8
	[0x5608e1feae48]:  %44 = load i64, i64* %RBP.i, align 8
	[0x5608e1fed2b8]:  %52 = load i64, i64* %RSI.i, align 8
	[0x5608e1fed998]:  %63 = load i64, i64* %6, align 8
	[0x5608e1fedf88]:  %60 = load i64, i64* %6, align 8
	[0x5608e1fee448]:  %57 = load i64, i64* %3, align 8
	[0x5608e1fef158]:  %53 = load i64, i64* %3, align 8
	[0x5608e1fef3b8]:  %64 = load i64, i64* %3, align 8
	[0x5608e1ff1cc8]:  %94 = load i64, i64* %93, align 8
	[0x5608e1ff23e8]:  %91 = load i64, i64* %90, align 8
	}

[0x5608e201bc90]:   store i64 %90, i64* %RBP, align 8, !tbaa !1261 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201bd10]:   store i64 %88, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e202dd58]:   %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0 {
	[0x5608e20d9398]:  %56 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 6, i32 1, i32 0
	}

[0x5608e202e2c8]:   %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0 {
	[0x5608e2038858]:  %43 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 6, i32 11, i32 0
	}


[Info]: Phase I: Dual Simulation: Round: 0
Round: 0

Removing: [0x5608e1fe8018]:   %50 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x5608e1fc2ad8]:   %5 = load i64, i64* %RBP, align 8


Uprime : [0x5608e1fc2e20]:   store i64 %5, i64* %9, align 8


Uprime Matches: [0x5608e1f77210]:   store i64 %8, i64* %RBP.i, align 8
[0x5608e1f77360]:   store i64 %4, i64* %9, align 8
[0x5608e1f78a70]:   store i64 %5, i64* %3, align 8
[0x5608e1f79270]:   store i8 %20, i8* %21, align 1
[0x5608e1f798e0]:   store i64 %91, i64* %RBP.i, align 8
[0x5608e1f79ba0]:   store i64 %88, i64* %3, align 8
[0x5608e1f79e10]:   store i8 %87, i8* %39, align 1
[0x5608e1f7a3a0]:   store i8 %29, i8* %30, align 1
[0x5608e1f7b050]:   store i8 %38, i8* %39, align 1
[0x5608e1f7b300]:   store i8 0, i8* %AL.i, align 1
[0x5608e1f7b5c0]:   store i64 %54, i64* %3, align 8
[0x5608e1f7c220]:   store i64 %48, i64* %3, align 8
[0x5608e1f7c4d0]:   store i64 %65, i64* %6, align 8
[0x5608e1f7c780]:   store i64 %58, i64* %3, align 8
[0x5608e1f7c9b0]:   store i64 %61, i64* %6, align 8
[0x5608e1f7cbb0]:   store i64 %59, i64* %62, align 8
[0x5608e1f7d4a0]:   store i8 %67, i8* %14, align 1
[0x5608e1f7d570]:   store i8 %73, i8* %21, align 1
[0x5608e1f81b90]:   store i8 %82, i8* %33, align 1
[0x5608e1f81e50]:   store i8 %80, i8* %30, align 1
[0x5608e1f82190]:   store i8 %78, i8* %27, align 1
[0x5608e1f848f0]:   store i64 %89, i64* %6, align 8
[0x5608e1f84d50]:   store i64 %95, i64* %6, align 8
[0x5608e1f85090]:   store i64 %94, i64* %3, align 8
[0x5608e1f851f0]:   store i64 %92, i64* %3, align 8
[0x5608e1fea7b0]:   store i64 %11, i64* %6, align 8
[0x5608e1fead00]:   store i8 %32, i8* %33, align 1
[0x5608e1feb9a0]:   store i8 %13, i8* %14, align 1
[0x5608e1fec550]:   store i8 %26, i8* %27, align 1
[0x5608e1fec770]:   store i32 0, i32* %42, align 4
[0x5608e1fec880]:   store i64 %41, i64* %3, align 8
[0x5608e1fecae0]:   store i32 %46, i32* %49, align 4
[0x5608e1feccc0]:   store i64 %52, i64* %55, align 8


Adj: [0x5608e1f7b8c0]:   %51 = add i64 %50, -16


Removing: [0x5608e1feae48]:   %44 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x5608e1fc2ad8]:   %5 = load i64, i64* %RBP, align 8


Uprime : [0x5608e1fc2e20]:   store i64 %5, i64* %9, align 8


Uprime Matches: [0x5608e1f77210]:   store i64 %8, i64* %RBP.i, align 8
[0x5608e1f77360]:   store i64 %4, i64* %9, align 8
[0x5608e1f78a70]:   store i64 %5, i64* %3, align 8
[0x5608e1f79270]:   store i8 %20, i8* %21, align 1
[0x5608e1f798e0]:   store i64 %91, i64* %RBP.i, align 8
[0x5608e1f79ba0]:   store i64 %88, i64* %3, align 8
[0x5608e1f79e10]:   store i8 %87, i8* %39, align 1
[0x5608e1f7a3a0]:   store i8 %29, i8* %30, align 1
[0x5608e1f7b050]:   store i8 %38, i8* %39, align 1
[0x5608e1f7b300]:   store i8 0, i8* %AL.i, align 1
[0x5608e1f7b5c0]:   store i64 %54, i64* %3, align 8
[0x5608e1f7c220]:   store i64 %48, i64* %3, align 8
[0x5608e1f7c4d0]:   store i64 %65, i64* %6, align 8
[0x5608e1f7c780]:   store i64 %58, i64* %3, align 8
[0x5608e1f7c9b0]:   store i64 %61, i64* %6, align 8
[0x5608e1f7cbb0]:   store i64 %59, i64* %62, align 8
[0x5608e1f7d4a0]:   store i8 %67, i8* %14, align 1
[0x5608e1f7d570]:   store i8 %73, i8* %21, align 1
[0x5608e1f81b90]:   store i8 %82, i8* %33, align 1
[0x5608e1f81e50]:   store i8 %80, i8* %30, align 1
[0x5608e1f82190]:   store i8 %78, i8* %27, align 1
[0x5608e1f848f0]:   store i64 %89, i64* %6, align 8
[0x5608e1f84d50]:   store i64 %95, i64* %6, align 8
[0x5608e1f85090]:   store i64 %94, i64* %3, align 8
[0x5608e1f851f0]:   store i64 %92, i64* %3, align 8
[0x5608e1fea7b0]:   store i64 %11, i64* %6, align 8
[0x5608e1fead00]:   store i8 %32, i8* %33, align 1
[0x5608e1feb9a0]:   store i8 %13, i8* %14, align 1
[0x5608e1fec550]:   store i8 %26, i8* %27, align 1
[0x5608e1fec770]:   store i32 0, i32* %42, align 4
[0x5608e1fec880]:   store i64 %41, i64* %3, align 8
[0x5608e1fecae0]:   store i32 %46, i32* %49, align 4
[0x5608e1feccc0]:   store i64 %52, i64* %55, align 8


Adj: [0x5608e1f7ada0]:   %45 = add i64 %44, -8


Removing: [0x5608e1fed998]:   %63 = load i64, i64* %6, align 8
From the pot matches of: [0x5608e1fc2c38]:   %7 = load i64, i64* %RSP, align 8, !tbaa !1261


Uprime : [0x5608e2019b30]:   %40 = add i64 %7, -12


Uprime Matches: [0x5608e1fec990]:   %40 = add i64 %7, -12


Adj: [0x5608e1f799c0]:   %89 = add i64 %63, 24
[0x5608e1f7c620]:   %65 = add i64 %63, 16
[0x5608e1f7d130]:   %66 = icmp ugt i64 %63, -17
[0x5608e1f7eb90]:   %74 = xor i64 %63, 16
[0x5608e1f800e0]:   %83 = lshr i64 %63, 63
[0x5608e1f84eb0]:   %95 = add i64 %63, 32


Removing: [0x5608e1fedf88]:   %60 = load i64, i64* %6, align 8
From the pot matches of: [0x5608e1fc2c38]:   %7 = load i64, i64* %RSP, align 8, !tbaa !1261


Uprime : [0x5608e2019b30]:   %40 = add i64 %7, -12


Uprime Matches: [0x5608e1fec990]:   %40 = add i64 %7, -12


Adj: [0x5608e1f7da90]:   %61 = add i64 %60, -8


Removing: [0x5608e1f6d8f8]:   %47 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e1fc2e88]:   %10 = load i64, i64* %PC, align 8


Uprime : [0x5608e2019bb0]:   %41 = add i64 %10, 14


Uprime Matches: [0x5608e1f7af00]:   %41 = add i64 %10, 14


Adj: [0x5608e1fecbb0]:   %48 = add i64 %47, 3


Removing: [0x5608e1fee448]:   %57 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e1fc2e88]:   %10 = load i64, i64* %PC, align 8


Uprime : [0x5608e2019bb0]:   %41 = add i64 %10, 14


Uprime Matches: [0x5608e1f7af00]:   %41 = add i64 %10, 14


Adj: [0x5608e1f7c370]:   %58 = add i64 %57, 26
[0x5608e1f7d020]:   %59 = add i64 %57, 7


Removing: [0x5608e1fef158]:   %53 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e1fc2e88]:   %10 = load i64, i64* %PC, align 8


Uprime : [0x5608e2019bb0]:   %41 = add i64 %10, 14


Uprime Matches: [0x5608e1f7af00]:   %41 = add i64 %10, 14


Adj: [0x5608e1f7b720]:   %54 = add i64 %53, 4


Removing: [0x5608e1fef3b8]:   %64 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e1fc2e88]:   %10 = load i64, i64* %PC, align 8


Uprime : [0x5608e2019bb0]:   %41 = add i64 %10, 14


Uprime Matches: [0x5608e1f7af00]:   %41 = add i64 %10, 14


Adj: [0x5608e1f79cf0]:   %88 = add i64 %64, 5
[0x5608e1f852d0]:   %92 = add i64 %64, 6


Removing: [0x5608e1fe6e08]:   %15 = trunc i64 %11 to i32
From the pot matches of: [0x5608e2018cb8]:   %18 = trunc i32 %17 to i8


Uprime : [0x5608e2018d30]:   %19 = and i8 %18, 1


Uprime Matches: [0x5608e1f794f0]:   %26 = and i8 %25, 1
[0x5608e1f7d6c0]:   %72 = and i8 %71, 1
[0x5608e1f822e0]:   %78 = and i8 %77, 1
[0x5608e1febef0]:   %19 = and i8 %18, 1


Adj: [0x5608e1fea9b0]:   %16 = and i32 %15, 255


Removing: [0x5608e1fef618]:   %82 = trunc i64 %81 to i8
From the pot matches of: [0x5608e2018cb8]:   %18 = trunc i32 %17 to i8


Uprime : [0x5608e2018d30]:   %19 = and i8 %18, 1


Uprime Matches: [0x5608e1f794f0]:   %26 = and i8 %25, 1
[0x5608e1f7d6c0]:   %72 = and i8 %71, 1
[0x5608e1f822e0]:   %78 = and i8 %77, 1
[0x5608e1febef0]:   %19 = and i8 %18, 1


Adj: [0x5608e1f81b90]:   store i8 %82, i8* %33, align 1


Removing: [0x5608e1ff0fb8]:   %68 = trunc i64 %65 to i32
From the pot matches of: [0x5608e2018cb8]:   %18 = trunc i32 %17 to i8


Uprime : [0x5608e2018d30]:   %19 = and i8 %18, 1


Uprime Matches: [0x5608e1f794f0]:   %26 = and i8 %25, 1
[0x5608e1f7d6c0]:   %72 = and i8 %71, 1
[0x5608e1f822e0]:   %78 = and i8 %77, 1
[0x5608e1febef0]:   %19 = and i8 %18, 1


Adj: [0x5608e1f7f160]:   %69 = and i32 %68, 255


Removing: [0x5608e2003068]:   %32 = trunc i64 %31 to i8
From the pot matches of: [0x5608e2018cb8]:   %18 = trunc i32 %17 to i8


Uprime : [0x5608e2018d30]:   %19 = and i8 %18, 1


Uprime Matches: [0x5608e1f794f0]:   %26 = and i8 %25, 1
[0x5608e1f7d6c0]:   %72 = and i8 %71, 1
[0x5608e1f822e0]:   %78 = and i8 %77, 1
[0x5608e1febef0]:   %19 = and i8 %18, 1


Adj: [0x5608e1fead00]:   store i8 %32, i8* %33, align 1


Removing: [0x5608e1f794f0]:   %26 = and i8 %25, 1
From the pot matches of: [0x5608e2018d30]:   %19 = and i8 %18, 1


Uprime : [0x5608e2018db0]:   %20 = xor i8 %19, 1


Uprime Matches: [0x5608e1f7ede0]:   %73 = xor i8 %72, 1
[0x5608e1febde0]:   %20 = xor i8 %19, 1


Adj: [0x5608e1fec550]:   store i8 %26, i8* %27, align 1


Removing: [0x5608e1f822e0]:   %78 = and i8 %77, 1
From the pot matches of: [0x5608e2018d30]:   %19 = and i8 %18, 1


Uprime : [0x5608e2018db0]:   %20 = xor i8 %19, 1


Uprime Matches: [0x5608e1f7ede0]:   %73 = xor i8 %72, 1
[0x5608e1febde0]:   %20 = xor i8 %19, 1


Adj: [0x5608e1f82190]:   store i8 %78, i8* %27, align 1


Removing: [0x5608e1fd6a68]:   %4 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x5608e2019d78]:   %43 = load i64, i64* %RBP, align 8


Uprime : [0x5608e2019df0]:   %44 = add i64 %43, -8


Uprime Matches: [0x5608e1f775a0]:   %8 = add i64 %7, -8
[0x5608e1f7ada0]:   %45 = add i64 %44, -8
[0x5608e1f7da90]:   %61 = add i64 %60, -8


Adj: [0x5608e1f77360]:   store i64 %4, i64* %9, align 8


Removing: [0x5608e1fe8018]:   %50 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x5608e2019d78]:   %43 = load i64, i64* %RBP, align 8


Uprime : [0x5608e2019df0]:   %44 = add i64 %43, -8


Uprime Matches: [0x5608e1f775a0]:   %8 = add i64 %7, -8
[0x5608e1f7ada0]:   %45 = add i64 %44, -8
[0x5608e1f7da90]:   %61 = add i64 %60, -8


Adj: [0x5608e1f7b8c0]:   %51 = add i64 %50, -16


Removing: [0x5608e1fe8808]:   %10 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e2019eb8]:   %46 = load i64, i64* %PC, align 8


Uprime : [0x5608e2019f30]:   %47 = add i64 %46, 3


Uprime Matches: [0x5608e1fecbb0]:   %48 = add i64 %47, 3


Adj: [0x5608e1f7af00]:   %41 = add i64 %10, 14


Removing: [0x5608e1fee448]:   %57 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e2019eb8]:   %46 = load i64, i64* %PC, align 8


Uprime : [0x5608e2019f30]:   %47 = add i64 %46, 3


Uprime Matches: [0x5608e1fecbb0]:   %48 = add i64 %47, 3


Adj: [0x5608e1f7c370]:   %58 = add i64 %57, 26
[0x5608e1f7d020]:   %59 = add i64 %57, 7


Removing: [0x5608e1fef158]:   %53 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e2019eb8]:   %46 = load i64, i64* %PC, align 8


Uprime : [0x5608e2019f30]:   %47 = add i64 %46, 3


Uprime Matches: [0x5608e1fecbb0]:   %48 = add i64 %47, 3


Adj: [0x5608e1f7b720]:   %54 = add i64 %53, 4


Removing: [0x5608e1fef3b8]:   %64 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e2019eb8]:   %46 = load i64, i64* %PC, align 8


Uprime : [0x5608e2019f30]:   %47 = add i64 %46, 3


Uprime Matches: [0x5608e1fecbb0]:   %48 = add i64 %47, 3


Adj: [0x5608e1f79cf0]:   %88 = add i64 %64, 5
[0x5608e1f852d0]:   %92 = add i64 %64, 6


Removing: [0x5608e1fd6a68]:   %4 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x5608e201a0f8]:   %49 = load i64, i64* %RBP, align 8


Uprime : [0x5608e201a170]:   %50 = add i64 %49, -16


Uprime Matches: [0x5608e1f7b8c0]:   %51 = add i64 %50, -16


Adj: [0x5608e1f77360]:   store i64 %4, i64* %9, align 8


Removing: [0x5608e1feae48]:   %44 = load i64, i64* %RBP.i, align 8
From the pot matches of: [0x5608e201a0f8]:   %49 = load i64, i64* %RBP, align 8


Uprime : [0x5608e201a170]:   %50 = add i64 %49, -16


Uprime Matches: [0x5608e1f7b8c0]:   %51 = add i64 %50, -16


Adj: [0x5608e1f7ada0]:   %45 = add i64 %44, -8


Removing: [0x5608e1f6d8f8]:   %47 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e201a238]:   %52 = load i64, i64* %PC, align 8


Uprime : [0x5608e201a2b0]:   %53 = add i64 %52, 4


Uprime Matches: [0x5608e1f7b720]:   %54 = add i64 %53, 4


Adj: [0x5608e1fecbb0]:   %48 = add i64 %47, 3


Removing: [0x5608e1fe8808]:   %10 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e201a238]:   %52 = load i64, i64* %PC, align 8


Uprime : [0x5608e201a2b0]:   %53 = add i64 %52, 4


Uprime Matches: [0x5608e1f7b720]:   %54 = add i64 %53, 4


Adj: [0x5608e1f7af00]:   %41 = add i64 %10, 14


Removing: [0x5608e1fee448]:   %57 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e201a238]:   %52 = load i64, i64* %PC, align 8


Uprime : [0x5608e201a2b0]:   %53 = add i64 %52, 4


Uprime Matches: [0x5608e1f7b720]:   %54 = add i64 %53, 4


Adj: [0x5608e1f7c370]:   %58 = add i64 %57, 26
[0x5608e1f7d020]:   %59 = add i64 %57, 7


Removing: [0x5608e1fef3b8]:   %64 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e201a238]:   %52 = load i64, i64* %PC, align 8


Uprime : [0x5608e201a2b0]:   %53 = add i64 %52, 4


Uprime Matches: [0x5608e1f7b720]:   %54 = add i64 %53, 4


Adj: [0x5608e1f79cf0]:   %88 = add i64 %64, 5
[0x5608e1f852d0]:   %92 = add i64 %64, 6


Removing: [0x5608e1f6d8f8]:   %47 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e201a478]:   %55 = load i64, i64* %PC, align 8


Uprime : [0x5608e201a630]:   %57 = add i64 %55, 7


Uprime Matches: [0x5608e1f7d020]:   %59 = add i64 %57, 7


Adj: [0x5608e1fecbb0]:   %48 = add i64 %47, 3


Removing: [0x5608e1fe8808]:   %10 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e201a478]:   %55 = load i64, i64* %PC, align 8


Uprime : [0x5608e201a630]:   %57 = add i64 %55, 7


Uprime Matches: [0x5608e1f7d020]:   %59 = add i64 %57, 7


Adj: [0x5608e1f7af00]:   %41 = add i64 %10, 14


Removing: [0x5608e1fef158]:   %53 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e201a478]:   %55 = load i64, i64* %PC, align 8


Uprime : [0x5608e201a630]:   %57 = add i64 %55, 7


Uprime Matches: [0x5608e1f7d020]:   %59 = add i64 %57, 7


Adj: [0x5608e1f7b720]:   %54 = add i64 %53, 4


Removing: [0x5608e1fef3b8]:   %64 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e201a478]:   %55 = load i64, i64* %PC, align 8


Uprime : [0x5608e201a630]:   %57 = add i64 %55, 7


Uprime Matches: [0x5608e1f7d020]:   %59 = add i64 %57, 7


Adj: [0x5608e1f79cf0]:   %88 = add i64 %64, 5
[0x5608e1f852d0]:   %92 = add i64 %64, 6


Removing: [0x5608e1fed998]:   %63 = load i64, i64* %6, align 8
From the pot matches of: [0x5608e201a698]:   %58 = load i64, i64* %RSP, align 8, !tbaa !1261


Uprime : [0x5608e201a710]:   %59 = add i64 %58, -8


Uprime Matches: [0x5608e1f775a0]:   %8 = add i64 %7, -8
[0x5608e1f7ada0]:   %45 = add i64 %44, -8
[0x5608e1f7da90]:   %61 = add i64 %60, -8


Adj: [0x5608e1f799c0]:   %89 = add i64 %63, 24
[0x5608e1f7c620]:   %65 = add i64 %63, 16
[0x5608e1f7d130]:   %66 = icmp ugt i64 %63, -17
[0x5608e1f7eb90]:   %74 = xor i64 %63, 16
[0x5608e1f800e0]:   %83 = lshr i64 %63, 63
[0x5608e1f84eb0]:   %95 = add i64 %63, 32


Removing: [0x5608e1f775a0]:   %8 = add i64 %7, -8
From the pot matches of: [0x5608e201a710]:   %59 = add i64 %58, -8


Uprime : [0x5608e201a870]:   store i64 %59, i64* %RSP, align 8, !tbaa !1261


Uprime Matches: [0x5608e1f7c4d0]:   store i64 %65, i64* %6, align 8
[0x5608e1f7c9b0]:   store i64 %61, i64* %6, align 8
[0x5608e1f848f0]:   store i64 %89, i64* %6, align 8
[0x5608e1f84d50]:   store i64 %95, i64* %6, align 8
[0x5608e1fea7b0]:   store i64 %11, i64* %6, align 8


Adj: [0x5608e1f77210]:   store i64 %8, i64* %RBP.i, align 8
[0x5608e1f79110]:   %22 = xor i64 %8, 16
[0x5608e1fb5048]:   %9 = inttoptr i64 %8 to i64*
[0x5608e1fe8bd0]:   %12 = icmp ult i64 %8, 16
[0x5608e1fec110]:   %34 = lshr i64 %8, 63


Removing: [0x5608e1fd6c58]:   %7 = load i64, i64* %6, align 8
From the pot matches of: [0x5608e201aab8]:   %62 = load i64, i64* %RSP, align 8


Uprime : [0x5608e1f67d30]:   %94 = add i64 %62, 32


Uprime Matches: [0x5608e1f84eb0]:   %95 = add i64 %63, 32


Adj: [0x5608e1f76cf0]:   %11 = add i64 %7, -24
[0x5608e1f775a0]:   %8 = add i64 %7, -8
[0x5608e1fec990]:   %40 = add i64 %7, -12


Removing: [0x5608e1fedf88]:   %60 = load i64, i64* %6, align 8
From the pot matches of: [0x5608e201aab8]:   %62 = load i64, i64* %RSP, align 8


Uprime : [0x5608e1f67d30]:   %94 = add i64 %62, 32


Uprime Matches: [0x5608e1f84eb0]:   %95 = add i64 %63, 32


Adj: [0x5608e1f7da90]:   %61 = add i64 %60, -8


Removing: [0x5608e1f6d8f8]:   %47 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e201ab18]:   %63 = load i64, i64* %PC, align 8


Uprime : [0x5608e1f67af0]:   %91 = add i64 %63, 6


Uprime Matches: [0x5608e1f852d0]:   %92 = add i64 %64, 6


Adj: [0x5608e1fecbb0]:   %48 = add i64 %47, 3


Removing: [0x5608e1fe8808]:   %10 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e201ab18]:   %63 = load i64, i64* %PC, align 8


Uprime : [0x5608e1f67af0]:   %91 = add i64 %63, 6


Uprime Matches: [0x5608e1f852d0]:   %92 = add i64 %64, 6


Adj: [0x5608e1f7af00]:   %41 = add i64 %10, 14


Removing: [0x5608e1fee448]:   %57 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e201ab18]:   %63 = load i64, i64* %PC, align 8


Uprime : [0x5608e1f67af0]:   %91 = add i64 %63, 6


Uprime Matches: [0x5608e1f852d0]:   %92 = add i64 %64, 6


Adj: [0x5608e1f7c370]:   %58 = add i64 %57, 26
[0x5608e1f7d020]:   %59 = add i64 %57, 7


Removing: [0x5608e1fef158]:   %53 = load i64, i64* %3, align 8
From the pot matches of: [0x5608e201ab18]:   %63 = load i64, i64* %PC, align 8


Uprime : [0x5608e1f67af0]:   %91 = add i64 %63, 6


Uprime Matches: [0x5608e1f852d0]:   %92 = add i64 %64, 6


Adj: [0x5608e1f7b720]:   %54 = add i64 %53, 4


Removing: [0x5608e1fe6e08]:   %15 = trunc i64 %11 to i32
From the pot matches of: [0x5608e201afd8]:   %70 = trunc i32 %69 to i8


Uprime : [0x5608e201b050]:   %71 = and i8 %70, 1


Uprime Matches: [0x5608e1f794f0]:   %26 = and i8 %25, 1
[0x5608e1f7d6c0]:   %72 = and i8 %71, 1
[0x5608e1f822e0]:   %78 = and i8 %77, 1
[0x5608e1febef0]:   %19 = and i8 %18, 1


Adj: [0x5608e1fea9b0]:   %16 = and i32 %15, 255


Removing: [0x5608e1fef618]:   %82 = trunc i64 %81 to i8
From the pot matches of: [0x5608e201afd8]:   %70 = trunc i32 %69 to i8


Uprime : [0x5608e201b050]:   %71 = and i8 %70, 1


Uprime Matches: [0x5608e1f794f0]:   %26 = and i8 %25, 1
[0x5608e1f7d6c0]:   %72 = and i8 %71, 1
[0x5608e1f822e0]:   %78 = and i8 %77, 1
[0x5608e1febef0]:   %19 = and i8 %18, 1


Adj: [0x5608e1f81b90]:   store i8 %82, i8* %33, align 1


Removing: [0x5608e1ff0fb8]:   %68 = trunc i64 %65 to i32
From the pot matches of: [0x5608e201afd8]:   %70 = trunc i32 %69 to i8


Uprime : [0x5608e201b050]:   %71 = and i8 %70, 1


Uprime Matches: [0x5608e1f794f0]:   %26 = and i8 %25, 1
[0x5608e1f7d6c0]:   %72 = and i8 %71, 1
[0x5608e1f822e0]:   %78 = and i8 %77, 1
[0x5608e1febef0]:   %19 = and i8 %18, 1


Adj: [0x5608e1f7f160]:   %69 = and i32 %68, 255


Removing: [0x5608e2003068]:   %32 = trunc i64 %31 to i8
From the pot matches of: [0x5608e201afd8]:   %70 = trunc i32 %69 to i8


Uprime : [0x5608e201b050]:   %71 = and i8 %70, 1


Uprime Matches: [0x5608e1f794f0]:   %26 = and i8 %25, 1
[0x5608e1f7d6c0]:   %72 = and i8 %71, 1
[0x5608e1f822e0]:   %78 = and i8 %77, 1
[0x5608e1febef0]:   %19 = and i8 %18, 1


Adj: [0x5608e1fead00]:   store i8 %32, i8* %33, align 1


Removing: [0x5608e1f794f0]:   %26 = and i8 %25, 1
From the pot matches of: [0x5608e201b050]:   %71 = and i8 %70, 1


Uprime : [0x5608e201b0d0]:   %72 = xor i8 %71, 1


Uprime Matches: [0x5608e1f7ede0]:   %73 = xor i8 %72, 1
[0x5608e1febde0]:   %20 = xor i8 %19, 1


Adj: [0x5608e1fec550]:   store i8 %26, i8* %27, align 1


Removing: [0x5608e1f822e0]:   %78 = and i8 %77, 1
From the pot matches of: [0x5608e201b050]:   %71 = and i8 %70, 1


Uprime : [0x5608e201b0d0]:   %72 = xor i8 %71, 1


Uprime Matches: [0x5608e1f7ede0]:   %73 = xor i8 %72, 1
[0x5608e1febde0]:   %20 = xor i8 %19, 1


Adj: [0x5608e1f82190]:   store i8 %78, i8* %27, align 1

Round: 1

Removing: [0x5608e1f67fc8]:   %25 = trunc i64 %24 to i8
From the pot matches of: [0x5608e2018cb8]:   %18 = trunc i32 %17 to i8


Uprime : [0x5608e2018d30]:   %19 = and i8 %18, 1


Uprime Matches: [0x5608e1f7d6c0]:   %72 = and i8 %71, 1
[0x5608e1febef0]:   %19 = and i8 %18, 1


Adj: [0x5608e1f794f0]:   %26 = and i8 %25, 1


Removing: [0x5608e1fef878]:   %77 = trunc i64 %76 to i8
From the pot matches of: [0x5608e2018cb8]:   %18 = trunc i32 %17 to i8


Uprime : [0x5608e2018d30]:   %19 = and i8 %18, 1


Uprime Matches: [0x5608e1f7d6c0]:   %72 = and i8 %71, 1
[0x5608e1febef0]:   %19 = and i8 %18, 1


Adj: [0x5608e1f822e0]:   %78 = and i8 %77, 1


Removing: [0x5608e1fd6c58]:   %7 = load i64, i64* %6, align 8
From the pot matches of: [0x5608e201a698]:   %58 = load i64, i64* %RSP, align 8, !tbaa !1261


Uprime : [0x5608e201a710]:   %59 = add i64 %58, -8


Uprime Matches: [0x5608e1f7da90]:   %61 = add i64 %60, -8


Adj: [0x5608e1f76cf0]:   %11 = add i64 %7, -24
[0x5608e1f775a0]:   %8 = add i64 %7, -8
[0x5608e1fec990]:   %40 = add i64 %7, -12


Removing: [0x5608e1f67fc8]:   %25 = trunc i64 %24 to i8
From the pot matches of: [0x5608e201afd8]:   %70 = trunc i32 %69 to i8


Uprime : [0x5608e201b050]:   %71 = and i8 %70, 1


Uprime Matches: [0x5608e1f7d6c0]:   %72 = and i8 %71, 1
[0x5608e1febef0]:   %19 = and i8 %18, 1


Adj: [0x5608e1f794f0]:   %26 = and i8 %25, 1


Removing: [0x5608e1fef878]:   %77 = trunc i64 %76 to i8
From the pot matches of: [0x5608e201afd8]:   %70 = trunc i32 %69 to i8


Uprime : [0x5608e201b050]:   %71 = and i8 %70, 1


Uprime Matches: [0x5608e1f7d6c0]:   %72 = and i8 %71, 1
[0x5608e1febef0]:   %19 = and i8 %18, 1


Adj: [0x5608e1f822e0]:   %78 = and i8 %77, 1

Round: 2


[Info] After Dual Simulation: Round: 0
[0x5608e1f67af0]:   %91 = add i64 %63, 6 {
	[0x5608e1f852d0]:  %92 = add i64 %64, 6
	}

[0x5608e1f67b70]:   store i64 %91, i64* %PC, align 8 {
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	}

[0x5608e1f67bd8]:   %92 = inttoptr i64 %88 to i64* {
	[0x5608e1ff1df8]:  %93 = inttoptr i64 %89 to i64*
	}

[0x5608e1f67c38]:   %93 = load i64, i64* %92, align 8 {
	[0x5608e1ff1cc8]:  %94 = load i64, i64* %93, align 8
	}

[0x5608e1f67cb0]:   store i64 %93, i64* %PC, align 8, !tbaa !1261 {
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	}

[0x5608e1f67d30]:   %94 = add i64 %62, 32 {
	[0x5608e1f84eb0]:  %95 = add i64 %63, 32
	}

[0x5608e1f67db0]:   store i64 %94, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	}

[0x5608e1f67e18]:   ret %struct.Memory* %61 {
	[0x5608e1f854c8]:  ret %struct.Memory.32* %call2_4004a8
	}

[0x5608e1fc2350]: %struct.State* %0 {
	[0x5608e1f78eb0]:%struct.State.1* %0
	}

[0x5608e1fc2390]: i64 %1 {
	[0x5608e1f791c0]:i64 %1
	}

[0x5608e1fc23d0]: %struct.Memory* %2 {
	[0x5608e1f7a450]:%struct.Memory.32* %2
	}

[0x5608e1fc2588]:   %AL = bitcast %union.anon* %3 to i8* {
	[0x5608e1fee578]:  %AL.i = bitcast %union.anon.5* %56 to i8*
	}

[0x5608e1fc2660]:   %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0 {
	[0x5608e1f957a0]:  %3 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 6, i32 33, i32 0, i32 0
	}

[0x5608e1fc2728]:   %EDI = bitcast %union.anon* %4 to i32* {
	[0x5608e1fecdf8]:  %EDI.i = bitcast %union.anon.5* %43 to i32*
	}

[0x5608e1fc2820]:   %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0 {
	[0x5608e1fd6080]:  %RSI.i = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 6, i32 9, i32 0, i32 0
	}

[0x5608e1fc2930]:   %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0 {
	[0x5608e1fd9960]:  %6 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 6, i32 13, i32 0, i32 0
	}

[0x5608e1fc2a40]:   %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0 {
	[0x5608e1fd9af0]:  %RBP.i = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 6, i32 15, i32 0, i32 0
	}

[0x5608e1fc2ad8]:   %5 = load i64, i64* %RBP, align 8 {
	[0x5608e1fd6a68]:  %4 = load i64, i64* %RBP.i, align 8
	}

[0x5608e1fc2b50]:   %6 = add i64 %1, 1 {
	[0x5608e1fe62e0]:  %5 = add i64 %1, 1
	}

[0x5608e1fc2bd0]:   store i64 %6, i64* %PC, align 8 {
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	}

[0x5608e1fc2c38]:   %7 = load i64, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1fd6c58]:  %7 = load i64, i64* %6, align 8
	}

[0x5608e1fc2cb0]:   %8 = add i64 %7, -8 {
	[0x5608e1f775a0]:  %8 = add i64 %7, -8
	}

[0x5608e1fc2d30]:   %17 = tail call i32 @llvm.ctpop.i32(i32 %16) #9 {
	[0x5608e20013f0]:  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
	}

[0x5608e1fc2da8]:   %9 = inttoptr i64 %8 to i64* {
	[0x5608e1fb5048]:  %9 = inttoptr i64 %8 to i64*
	}

[0x5608e1fc2e20]:   store i64 %5, i64* %9, align 8 {
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	}

[0x5608e1fc2e88]:   %10 = load i64, i64* %PC, align 8 {
	[0x5608e1fe8808]:  %10 = load i64, i64* %3, align 8
	}

[0x5608e1fc2f00]:   store i64 %8, i64* %RBP, align 8, !tbaa !1261 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	}

[0x5608e1fc2f80]:   %11 = add i64 %7, -24 {
	[0x5608e1f76cf0]:  %11 = add i64 %7, -24
	}

[0x5608e1fc3000]:   store i64 %11, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	}

[0x5608e1fc3080]:   %12 = icmp ult i64 %8, 16 {
	[0x5608e1fe8bd0]:  %12 = icmp ult i64 %8, 16
	}

[0x5608e1fc30e8]:   %13 = zext i1 %12 to i8 {
	[0x5608e1fe8ad8]:  %13 = zext i1 %12 to i8
	}

[0x5608e1fc3190]:   %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1 {
	[0x5608e20c1120]:  %14 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 2, i32 1
	}

[0x5608e1fc3220]:   store i8 %13, i8* %14, align 1, !tbaa !1265 {
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	}

[0x5608e1fc3288]:   %15 = trunc i64 %11 to i32 {
	[0x5608e1fe6e08]:  %15 = trunc i64 %11 to i32
	}

[0x5608e2018c10]:   %16 = and i32 %15, 255 {
	[0x5608e1fea9b0]:  %16 = and i32 %15, 255
	}

[0x5608e2018cb8]:   %18 = trunc i32 %17 to i8 {
	[0x5608e1fe69d8]:  %18 = trunc i32 %17 to i8
	[0x5608e1ff09c8]:  %71 = trunc i32 %70 to i8
	}

[0x5608e2018d30]:   %19 = and i8 %18, 1 {
	[0x5608e1f7d6c0]:  %72 = and i8 %71, 1
	[0x5608e1febef0]:  %19 = and i8 %18, 1
	}

[0x5608e2018db0]:   %20 = xor i8 %19, 1 {
	[0x5608e1f7ede0]:  %73 = xor i8 %72, 1
	[0x5608e1febde0]:  %20 = xor i8 %19, 1
	}

[0x5608e2018e60]:   %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3 {
	[0x5608e1fe27f0]:  %21 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 2, i32 3
	}

[0x5608e2018ef0]:   store i8 %20, i8* %21, align 1, !tbaa !1279 {
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	}

[0x5608e2018f70]:   %22 = xor i64 %8, 16 {
	[0x5608e1f79110]:  %22 = xor i64 %8, 16
	}

[0x5608e2018ff0]:   %23 = xor i64 %22, %11 {
	[0x5608e1febab0]:  %23 = xor i64 %22, %11
	}

[0x5608e2019070]:   %24 = lshr i64 %23, 4 {
	[0x5608e1f78bc0]:  %24 = lshr i64 %23, 4
	}

[0x5608e20190d8]:   %25 = trunc i64 %24 to i8 {
	[0x5608e1f67fc8]:  %25 = trunc i64 %24 to i8
	}

[0x5608e2019150]:   %26 = and i8 %25, 1 {
	[0x5608e1f794f0]:  %26 = and i8 %25, 1
	}

[0x5608e2019200]:   %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5 {
	[0x5608e1f7f5a0]:  %27 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 2, i32 5
	}

[0x5608e2019290]:   store i8 %26, i8* %27, align 1, !tbaa !1280 {
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	}

[0x5608e2019310]:   %28 = icmp eq i64 %11, 0 {
	[0x5608e1f7a500]:  %28 = icmp eq i64 %11, 0
	}

[0x5608e2019378]:   %29 = zext i1 %28 to i8 {
	[0x5608e1f963b8]:  %29 = zext i1 %28 to i8
	}

[0x5608e2019420]:   %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7 {
	[0x5608e1f7bfa0]:  %30 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 2, i32 7
	}

[0x5608e20194b0]:   store i8 %29, i8* %30, align 1, !tbaa !1281 {
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	}

[0x5608e2019530]:   %31 = lshr i64 %11, 63 {
	[0x5608e1fec330]:  %31 = lshr i64 %11, 63
	}

[0x5608e2019598]:   %32 = trunc i64 %31 to i8 {
	[0x5608e2003068]:  %32 = trunc i64 %31 to i8
	}

[0x5608e2019640]:   %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9 {
	[0x5608e1f7bd30]:  %33 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 2, i32 9
	}

[0x5608e20196d0]:   store i8 %32, i8* %33, align 1, !tbaa !1282 {
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	}

[0x5608e2019750]:   %34 = lshr i64 %8, 63 {
	[0x5608e1fec110]:  %34 = lshr i64 %8, 63
	}

[0x5608e20197d0]:   %35 = xor i64 %31, %34 {
	[0x5608e1feabb0]:  %35 = xor i64 %31, %34
	}

[0x5608e2019850]:   %36 = add nuw nsw i64 %35, %34 {
	[0x5608e1f7aa30]:  %36 = add nuw nsw i64 %35, %34
	}

[0x5608e20198d0]:   %37 = icmp eq i64 %36, 2 {
	[0x5608e1f7b1b0]:  %37 = icmp eq i64 %36, 2
	}

[0x5608e2019938]:   %38 = zext i1 %37 to i8 {
	[0x5608e1fe9bc8]:  %38 = zext i1 %37 to i8
	}

[0x5608e20199e0]:   %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13 {
	[0x5608e1f7a610]:  %39 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 2, i32 13
	}

[0x5608e2019a70]:   store i8 %38, i8* %39, align 1, !tbaa !1283 {
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	}

[0x5608e2019b30]:   %40 = add i64 %7, -12 {
	[0x5608e1fec990]:  %40 = add i64 %7, -12
	}

[0x5608e2019bb0]:   %41 = add i64 %10, 14 {
	[0x5608e1f7af00]:  %41 = add i64 %10, 14
	}

[0x5608e2019c30]:   store i64 %41, i64* %PC, align 8 {
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	}

[0x5608e2019c98]:   %42 = inttoptr i64 %40 to i32* {
	[0x5608e1fecf28]:  %42 = inttoptr i64 %40 to i32*
	}

[0x5608e2019d10]:   store i32 0, i32* %42, align 4 {
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	}

[0x5608e2019d78]:   %43 = load i64, i64* %RBP, align 8 {
	[0x5608e1feae48]:  %44 = load i64, i64* %RBP.i, align 8
	}

[0x5608e2019df0]:   %44 = add i64 %43, -8 {
	[0x5608e1f7ada0]:  %45 = add i64 %44, -8
	}

[0x5608e2019e58]:   %45 = load i32, i32* %EDI, align 4 {
	[0x5608e1f79378]:  %46 = load i32, i32* %EDI.i, align 4
	}

[0x5608e2019eb8]:   %46 = load i64, i64* %PC, align 8 {
	[0x5608e1f6d8f8]:  %47 = load i64, i64* %3, align 8
	}

[0x5608e2019f30]:   %47 = add i64 %46, 3 {
	[0x5608e1fecbb0]:  %48 = add i64 %47, 3
	}

[0x5608e2019fb0]:   store i64 %47, i64* %PC, align 8 {
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	}

[0x5608e201a018]:   %48 = inttoptr i64 %44 to i32* {
	[0x5608e1fe9fd8]:  %49 = inttoptr i64 %45 to i32*
	}

[0x5608e201a090]:   store i32 %45, i32* %48, align 4 {
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	}

[0x5608e201a0f8]:   %49 = load i64, i64* %RBP, align 8 {
	[0x5608e1fe8018]:  %50 = load i64, i64* %RBP.i, align 8
	}

[0x5608e201a170]:   %50 = add i64 %49, -16 {
	[0x5608e1f7b8c0]:  %51 = add i64 %50, -16
	}

[0x5608e201a1d8]:   %51 = load i64, i64* %RSI, align 8 {
	[0x5608e1fed2b8]:  %52 = load i64, i64* %RSI.i, align 8
	}

[0x5608e201a238]:   %52 = load i64, i64* %PC, align 8 {
	[0x5608e1fef158]:  %53 = load i64, i64* %3, align 8
	}

[0x5608e201a2b0]:   %53 = add i64 %52, 4 {
	[0x5608e1f7b720]:  %54 = add i64 %53, 4
	}

[0x5608e201a330]:   store i64 %53, i64* %PC, align 8 {
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	}

[0x5608e201a398]:   %54 = inttoptr i64 %50 to i64* {
	[0x5608e1fee6a8]:  %55 = inttoptr i64 %51 to i64*
	}

[0x5608e201a410]:   store i64 %51, i64* %54, align 8 {
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201a478]:   %55 = load i64, i64* %PC, align 8 {
	[0x5608e1fee448]:  %57 = load i64, i64* %3, align 8
	}

[0x5608e201a4f0]:   store i8 0, i8* %AL, align 1, !tbaa !1284 {
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	}

[0x5608e201a5b0]:   %56 = add i64 %55, 26 {
	[0x5608e1f7c370]:  %58 = add i64 %57, 26
	}

[0x5608e201a630]:   %57 = add i64 %55, 7 {
	[0x5608e1f7d020]:  %59 = add i64 %57, 7
	}

[0x5608e201a698]:   %58 = load i64, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1fedf88]:  %60 = load i64, i64* %6, align 8
	}

[0x5608e201a710]:   %59 = add i64 %58, -8 {
	[0x5608e1f7da90]:  %61 = add i64 %60, -8
	}

[0x5608e201a778]:   %60 = inttoptr i64 %59 to i64* {
	[0x5608e1fedbf8]:  %62 = inttoptr i64 %61 to i64*
	}

[0x5608e201a7f0]:   store i64 %57, i64* %60, align 8 {
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	}

[0x5608e201a870]:   store i64 %59, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	}

[0x5608e201a8f0]:   store i64 %56, i64* %PC, align 8, !tbaa !1261 {
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	}

[0x5608e201a9f0]:   %61 = tail call %struct.Memory* @sub_4004c0_printdata(%struct.State* nonnull %0, i64 %56, %struct.Memory* %2) {
	[0x5608e1f776b0]:  %call2_4004a8 = tail call %struct.Memory.32* @sub_4004c0.printdata(%struct.State.1* %0, i64 %58, %struct.Memory.32* %2)
	}

[0x5608e201aab8]:   %62 = load i64, i64* %RSP, align 8 {
	[0x5608e1fed998]:  %63 = load i64, i64* %6, align 8
	}

[0x5608e201ab18]:   %63 = load i64, i64* %PC, align 8 {
	[0x5608e1fef3b8]:  %64 = load i64, i64* %3, align 8
	}

[0x5608e201ab90]:   %64 = add i64 %62, 16 {
	[0x5608e1f7c620]:  %65 = add i64 %63, 16
	}

[0x5608e201ac10]:   store i64 %64, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	}

[0x5608e201acd0]:   %65 = icmp ugt i64 %62, -17 {
	[0x5608e1f7d130]:  %66 = icmp ugt i64 %63, -17
	}

[0x5608e201ad38]:   %66 = zext i1 %65 to i8 {
	[0x5608e1ff10e8]:  %67 = zext i1 %66 to i8
	}

[0x5608e201adb0]:   store i8 %66, i8* %14, align 1, !tbaa !1265 {
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	}

[0x5608e201ae18]:   %67 = trunc i64 %64 to i32 {
	[0x5608e1ff0fb8]:  %68 = trunc i64 %65 to i32
	}

[0x5608e201ae90]:   %68 = and i32 %67, 255 {
	[0x5608e1f7f160]:  %69 = and i32 %68, 255
	}

[0x5608e201af10]:   %69 = tail call i32 @llvm.ctpop.i32(i32 %68) #9 {
	[0x5608e2001220]:  %70 = tail call i32 @llvm.ctpop.i32(i32 %69)
	}

[0x5608e201afd8]:   %70 = trunc i32 %69 to i8 {
	[0x5608e1fe69d8]:  %18 = trunc i32 %17 to i8
	[0x5608e1ff09c8]:  %71 = trunc i32 %70 to i8
	}

[0x5608e201b050]:   %71 = and i8 %70, 1 {
	[0x5608e1f7d6c0]:  %72 = and i8 %71, 1
	[0x5608e1febef0]:  %19 = and i8 %18, 1
	}

[0x5608e201b0d0]:   %72 = xor i8 %71, 1 {
	[0x5608e1f7ede0]:  %73 = xor i8 %72, 1
	[0x5608e1febde0]:  %20 = xor i8 %19, 1
	}

[0x5608e201b150]:   store i8 %72, i8* %21, align 1, !tbaa !1279 {
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	}

[0x5608e201b1d0]:   %73 = xor i64 %62, 16 {
	[0x5608e1f7eb90]:  %74 = xor i64 %63, 16
	}

[0x5608e201b250]:   %74 = xor i64 %73, %64 {
	[0x5608e1f7d240]:  %75 = xor i64 %74, %65
	}

[0x5608e201b2d0]:   %75 = lshr i64 %74, 4 {
	[0x5608e1f7f920]:  %76 = lshr i64 %75, 4
	}

[0x5608e201b338]:   %76 = trunc i64 %75 to i8 {
	[0x5608e1fef878]:  %77 = trunc i64 %76 to i8
	}

[0x5608e201b3b0]:   %77 = and i8 %76, 1 {
	[0x5608e1f822e0]:  %78 = and i8 %77, 1
	}

[0x5608e201b430]:   store i8 %77, i8* %27, align 1, !tbaa !1280 {
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	}

[0x5608e201b4b0]:   %78 = icmp eq i64 %64, 0 {
	[0x5608e1f81fb0]:  %79 = icmp eq i64 %65, 0
	}

[0x5608e201b518]:   %79 = zext i1 %78 to i8 {
	[0x5608e1fef748]:  %80 = zext i1 %79 to i8
	}

[0x5608e201b590]:   store i8 %79, i8* %30, align 1, !tbaa !1281 {
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	}

[0x5608e201b610]:   %80 = lshr i64 %64, 63 {
	[0x5608e1f81cf0]:  %81 = lshr i64 %65, 63
	}

[0x5608e201b678]:   %81 = trunc i64 %80 to i8 {
	[0x5608e1fef618]:  %82 = trunc i64 %81 to i8
	}

[0x5608e201b6f0]:   store i8 %81, i8* %33, align 1, !tbaa !1282 {
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	}

[0x5608e201b770]:   %82 = lshr i64 %62, 63 {
	[0x5608e1f800e0]:  %83 = lshr i64 %63, 63
	}

[0x5608e201b7f0]:   %83 = xor i64 %80, %82 {
	[0x5608e1f825a0]:  %84 = xor i64 %81, %83
	}

[0x5608e201b870]:   %84 = add nuw nsw i64 %83, %80 {
	[0x5608e1f7a0d0]:  %85 = add nuw nsw i64 %84, %81
	}

[0x5608e201b8f0]:   %85 = icmp eq i64 %84, 2 {
	[0x5608e1f79f70]:  %86 = icmp eq i64 %85, 2
	}

[0x5608e201b958]:   %86 = zext i1 %85 to i8 {
	[0x5608e1fef4e8]:  %87 = zext i1 %86 to i8
	}

[0x5608e201b9d0]:   store i8 %86, i8* %39, align 1, !tbaa !1283 {
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	}

[0x5608e201ba50]:   %87 = add i64 %63, 5 {
	[0x5608e1f79cf0]:  %88 = add i64 %64, 5
	}

[0x5608e201bad0]:   store i64 %87, i64* %PC, align 8 {
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	}

[0x5608e201bb50]:   %88 = add i64 %62, 24 {
	[0x5608e1f799c0]:  %89 = add i64 %63, 24
	}

[0x5608e201bbb8]:   %89 = inttoptr i64 %64 to i64* {
	[0x5608e1ff1348]:  %90 = inttoptr i64 %65 to i64*
	}

[0x5608e201bc18]:   %90 = load i64, i64* %89, align 8 {
	[0x5608e1ff23e8]:  %91 = load i64, i64* %90, align 8
	}

[0x5608e201bc90]:   store i64 %90, i64* %RBP, align 8, !tbaa !1261 {
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	}

[0x5608e201bd10]:   store i64 %88, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	}

[0x5608e202dd58]:   %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0 {
	[0x5608e20d9398]:  %56 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 6, i32 1, i32 0
	}

[0x5608e202e2c8]:   %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0 {
	[0x5608e2038858]:  %43 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 6, i32 11, i32 0
	}


[Info]: Phase II: Retrieve potential BB matches: Round: 0
Retrieved BB Matches...
[0x5608e1fc2410]: block_400490 {
	[0x5608e1f75490]:entry
	}


[Info]: Phase II: Handle Conflicting Stores: Round: 0

[Info]: Phase I: Dual Simulation: Round: 1
Round: 0

Removing: [0x5608e1f7ede0]:   %73 = xor i8 %72, 1
From the pot matches of: [0x5608e2018db0]:   %20 = xor i8 %19, 1


Uprime : [0x5608e2018ef0]:   store i8 %20, i8* %21, align 1, !tbaa !1279


Uprime Matches: [0x5608e1f79270]:   store i8 %20, i8* %21, align 1


Adj: [0x5608e1f7d570]:   store i8 %73, i8* %21, align 1


Removing: [0x5608e1febde0]:   %20 = xor i8 %19, 1
From the pot matches of: [0x5608e201b0d0]:   %72 = xor i8 %71, 1


Uprime : [0x5608e201b150]:   store i8 %72, i8* %21, align 1, !tbaa !1279


Uprime Matches: [0x5608e1f7d570]:   store i8 %73, i8* %21, align 1


Adj: [0x5608e1f79270]:   store i8 %20, i8* %21, align 1

Round: 1

Removing: [0x5608e1f7d6c0]:   %72 = and i8 %71, 1
From the pot matches of: [0x5608e2018d30]:   %19 = and i8 %18, 1


Uprime : [0x5608e2018db0]:   %20 = xor i8 %19, 1


Uprime Matches: [0x5608e1febde0]:   %20 = xor i8 %19, 1


Adj: [0x5608e1f7ede0]:   %73 = xor i8 %72, 1


Removing: [0x5608e1febef0]:   %19 = and i8 %18, 1
From the pot matches of: [0x5608e201b050]:   %71 = and i8 %70, 1


Uprime : [0x5608e201b0d0]:   %72 = xor i8 %71, 1


Uprime Matches: [0x5608e1f7ede0]:   %73 = xor i8 %72, 1


Adj: [0x5608e1febde0]:   %20 = xor i8 %19, 1

Round: 2

Removing: [0x5608e1ff09c8]:   %71 = trunc i32 %70 to i8
From the pot matches of: [0x5608e2018cb8]:   %18 = trunc i32 %17 to i8


Uprime : [0x5608e2018d30]:   %19 = and i8 %18, 1


Uprime Matches: [0x5608e1febef0]:   %19 = and i8 %18, 1


Adj: [0x5608e1f7d6c0]:   %72 = and i8 %71, 1


Removing: [0x5608e1fe69d8]:   %18 = trunc i32 %17 to i8
From the pot matches of: [0x5608e201afd8]:   %70 = trunc i32 %69 to i8


Uprime : [0x5608e201b050]:   %71 = and i8 %70, 1


Uprime Matches: [0x5608e1f7d6c0]:   %72 = and i8 %71, 1


Adj: [0x5608e1febef0]:   %19 = and i8 %18, 1

Round: 3


[Info] After Dual Simulation: Round: 1
[0x5608e1f67af0]:   %91 = add i64 %63, 6 {
	[0x5608e1f852d0]:  %92 = add i64 %64, 6
	}

[0x5608e1f67b70]:   store i64 %91, i64* %PC, align 8 {
	[0x5608e1f851f0]:  store i64 %92, i64* %3, align 8
	}

[0x5608e1f67bd8]:   %92 = inttoptr i64 %88 to i64* {
	[0x5608e1ff1df8]:  %93 = inttoptr i64 %89 to i64*
	}

[0x5608e1f67c38]:   %93 = load i64, i64* %92, align 8 {
	[0x5608e1ff1cc8]:  %94 = load i64, i64* %93, align 8
	}

[0x5608e1f67cb0]:   store i64 %93, i64* %PC, align 8, !tbaa !1261 {
	[0x5608e1f85090]:  store i64 %94, i64* %3, align 8
	}

[0x5608e1f67d30]:   %94 = add i64 %62, 32 {
	[0x5608e1f84eb0]:  %95 = add i64 %63, 32
	}

[0x5608e1f67db0]:   store i64 %94, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1f84d50]:  store i64 %95, i64* %6, align 8
	}

[0x5608e1f67e18]:   ret %struct.Memory* %61 {
	[0x5608e1f854c8]:  ret %struct.Memory.32* %call2_4004a8
	}

[0x5608e1fc2350]: %struct.State* %0 {
	[0x5608e1f78eb0]:%struct.State.1* %0
	}

[0x5608e1fc2390]: i64 %1 {
	[0x5608e1f791c0]:i64 %1
	}

[0x5608e1fc23d0]: %struct.Memory* %2 {
	[0x5608e1f7a450]:%struct.Memory.32* %2
	}

[0x5608e1fc2588]:   %AL = bitcast %union.anon* %3 to i8* {
	[0x5608e1fee578]:  %AL.i = bitcast %union.anon.5* %56 to i8*
	}

[0x5608e1fc2660]:   %PC = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 33, i32 0, i32 0 {
	[0x5608e1f957a0]:  %3 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 6, i32 33, i32 0, i32 0
	}

[0x5608e1fc2728]:   %EDI = bitcast %union.anon* %4 to i32* {
	[0x5608e1fecdf8]:  %EDI.i = bitcast %union.anon.5* %43 to i32*
	}

[0x5608e1fc2820]:   %RSI = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 9, i32 0, i32 0 {
	[0x5608e1fd6080]:  %RSI.i = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 6, i32 9, i32 0, i32 0
	}

[0x5608e1fc2930]:   %RSP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 13, i32 0, i32 0 {
	[0x5608e1fd9960]:  %6 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 6, i32 13, i32 0, i32 0
	}

[0x5608e1fc2a40]:   %RBP = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 15, i32 0, i32 0 {
	[0x5608e1fd9af0]:  %RBP.i = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 6, i32 15, i32 0, i32 0
	}

[0x5608e1fc2ad8]:   %5 = load i64, i64* %RBP, align 8 {
	[0x5608e1fd6a68]:  %4 = load i64, i64* %RBP.i, align 8
	}

[0x5608e1fc2b50]:   %6 = add i64 %1, 1 {
	[0x5608e1fe62e0]:  %5 = add i64 %1, 1
	}

[0x5608e1fc2bd0]:   store i64 %6, i64* %PC, align 8 {
	[0x5608e1f78a70]:  store i64 %5, i64* %3, align 8
	}

[0x5608e1fc2c38]:   %7 = load i64, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1fd6c58]:  %7 = load i64, i64* %6, align 8
	}

[0x5608e1fc2cb0]:   %8 = add i64 %7, -8 {
	[0x5608e1f775a0]:  %8 = add i64 %7, -8
	}

[0x5608e1fc2d30]:   %17 = tail call i32 @llvm.ctpop.i32(i32 %16) #9 {
	[0x5608e20013f0]:  %17 = tail call i32 @llvm.ctpop.i32(i32 %16)
	}

[0x5608e1fc2da8]:   %9 = inttoptr i64 %8 to i64* {
	[0x5608e1fb5048]:  %9 = inttoptr i64 %8 to i64*
	}

[0x5608e1fc2e20]:   store i64 %5, i64* %9, align 8 {
	[0x5608e1f77360]:  store i64 %4, i64* %9, align 8
	}

[0x5608e1fc2e88]:   %10 = load i64, i64* %PC, align 8 {
	[0x5608e1fe8808]:  %10 = load i64, i64* %3, align 8
	}

[0x5608e1fc2f00]:   store i64 %8, i64* %RBP, align 8, !tbaa !1261 {
	[0x5608e1f77210]:  store i64 %8, i64* %RBP.i, align 8
	}

[0x5608e1fc2f80]:   %11 = add i64 %7, -24 {
	[0x5608e1f76cf0]:  %11 = add i64 %7, -24
	}

[0x5608e1fc3000]:   store i64 %11, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1fea7b0]:  store i64 %11, i64* %6, align 8
	}

[0x5608e1fc3080]:   %12 = icmp ult i64 %8, 16 {
	[0x5608e1fe8bd0]:  %12 = icmp ult i64 %8, 16
	}

[0x5608e1fc30e8]:   %13 = zext i1 %12 to i8 {
	[0x5608e1fe8ad8]:  %13 = zext i1 %12 to i8
	}

[0x5608e1fc3190]:   %14 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 1 {
	[0x5608e20c1120]:  %14 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 2, i32 1
	}

[0x5608e1fc3220]:   store i8 %13, i8* %14, align 1, !tbaa !1265 {
	[0x5608e1feb9a0]:  store i8 %13, i8* %14, align 1
	}

[0x5608e1fc3288]:   %15 = trunc i64 %11 to i32 {
	[0x5608e1fe6e08]:  %15 = trunc i64 %11 to i32
	}

[0x5608e2018c10]:   %16 = and i32 %15, 255 {
	[0x5608e1fea9b0]:  %16 = and i32 %15, 255
	}

[0x5608e2018cb8]:   %18 = trunc i32 %17 to i8 {
	[0x5608e1fe69d8]:  %18 = trunc i32 %17 to i8
	}

[0x5608e2018d30]:   %19 = and i8 %18, 1 {
	[0x5608e1febef0]:  %19 = and i8 %18, 1
	}

[0x5608e2018db0]:   %20 = xor i8 %19, 1 {
	[0x5608e1febde0]:  %20 = xor i8 %19, 1
	}

[0x5608e2018e60]:   %21 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 3 {
	[0x5608e1fe27f0]:  %21 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 2, i32 3
	}

[0x5608e2018ef0]:   store i8 %20, i8* %21, align 1, !tbaa !1279 {
	[0x5608e1f79270]:  store i8 %20, i8* %21, align 1
	}

[0x5608e2018f70]:   %22 = xor i64 %8, 16 {
	[0x5608e1f79110]:  %22 = xor i64 %8, 16
	}

[0x5608e2018ff0]:   %23 = xor i64 %22, %11 {
	[0x5608e1febab0]:  %23 = xor i64 %22, %11
	}

[0x5608e2019070]:   %24 = lshr i64 %23, 4 {
	[0x5608e1f78bc0]:  %24 = lshr i64 %23, 4
	}

[0x5608e20190d8]:   %25 = trunc i64 %24 to i8 {
	[0x5608e1f67fc8]:  %25 = trunc i64 %24 to i8
	}

[0x5608e2019150]:   %26 = and i8 %25, 1 {
	[0x5608e1f794f0]:  %26 = and i8 %25, 1
	}

[0x5608e2019200]:   %27 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 5 {
	[0x5608e1f7f5a0]:  %27 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 2, i32 5
	}

[0x5608e2019290]:   store i8 %26, i8* %27, align 1, !tbaa !1280 {
	[0x5608e1fec550]:  store i8 %26, i8* %27, align 1
	}

[0x5608e2019310]:   %28 = icmp eq i64 %11, 0 {
	[0x5608e1f7a500]:  %28 = icmp eq i64 %11, 0
	}

[0x5608e2019378]:   %29 = zext i1 %28 to i8 {
	[0x5608e1f963b8]:  %29 = zext i1 %28 to i8
	}

[0x5608e2019420]:   %30 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 7 {
	[0x5608e1f7bfa0]:  %30 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 2, i32 7
	}

[0x5608e20194b0]:   store i8 %29, i8* %30, align 1, !tbaa !1281 {
	[0x5608e1f7a3a0]:  store i8 %29, i8* %30, align 1
	}

[0x5608e2019530]:   %31 = lshr i64 %11, 63 {
	[0x5608e1fec330]:  %31 = lshr i64 %11, 63
	}

[0x5608e2019598]:   %32 = trunc i64 %31 to i8 {
	[0x5608e2003068]:  %32 = trunc i64 %31 to i8
	}

[0x5608e2019640]:   %33 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 9 {
	[0x5608e1f7bd30]:  %33 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 2, i32 9
	}

[0x5608e20196d0]:   store i8 %32, i8* %33, align 1, !tbaa !1282 {
	[0x5608e1fead00]:  store i8 %32, i8* %33, align 1
	}

[0x5608e2019750]:   %34 = lshr i64 %8, 63 {
	[0x5608e1fec110]:  %34 = lshr i64 %8, 63
	}

[0x5608e20197d0]:   %35 = xor i64 %31, %34 {
	[0x5608e1feabb0]:  %35 = xor i64 %31, %34
	}

[0x5608e2019850]:   %36 = add nuw nsw i64 %35, %34 {
	[0x5608e1f7aa30]:  %36 = add nuw nsw i64 %35, %34
	}

[0x5608e20198d0]:   %37 = icmp eq i64 %36, 2 {
	[0x5608e1f7b1b0]:  %37 = icmp eq i64 %36, 2
	}

[0x5608e2019938]:   %38 = zext i1 %37 to i8 {
	[0x5608e1fe9bc8]:  %38 = zext i1 %37 to i8
	}

[0x5608e20199e0]:   %39 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 2, i32 13 {
	[0x5608e1f7a610]:  %39 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 2, i32 13
	}

[0x5608e2019a70]:   store i8 %38, i8* %39, align 1, !tbaa !1283 {
	[0x5608e1f7b050]:  store i8 %38, i8* %39, align 1
	}

[0x5608e2019b30]:   %40 = add i64 %7, -12 {
	[0x5608e1fec990]:  %40 = add i64 %7, -12
	}

[0x5608e2019bb0]:   %41 = add i64 %10, 14 {
	[0x5608e1f7af00]:  %41 = add i64 %10, 14
	}

[0x5608e2019c30]:   store i64 %41, i64* %PC, align 8 {
	[0x5608e1fec880]:  store i64 %41, i64* %3, align 8
	}

[0x5608e2019c98]:   %42 = inttoptr i64 %40 to i32* {
	[0x5608e1fecf28]:  %42 = inttoptr i64 %40 to i32*
	}

[0x5608e2019d10]:   store i32 0, i32* %42, align 4 {
	[0x5608e1fec770]:  store i32 0, i32* %42, align 4
	}

[0x5608e2019d78]:   %43 = load i64, i64* %RBP, align 8 {
	[0x5608e1feae48]:  %44 = load i64, i64* %RBP.i, align 8
	}

[0x5608e2019df0]:   %44 = add i64 %43, -8 {
	[0x5608e1f7ada0]:  %45 = add i64 %44, -8
	}

[0x5608e2019e58]:   %45 = load i32, i32* %EDI, align 4 {
	[0x5608e1f79378]:  %46 = load i32, i32* %EDI.i, align 4
	}

[0x5608e2019eb8]:   %46 = load i64, i64* %PC, align 8 {
	[0x5608e1f6d8f8]:  %47 = load i64, i64* %3, align 8
	}

[0x5608e2019f30]:   %47 = add i64 %46, 3 {
	[0x5608e1fecbb0]:  %48 = add i64 %47, 3
	}

[0x5608e2019fb0]:   store i64 %47, i64* %PC, align 8 {
	[0x5608e1f7c220]:  store i64 %48, i64* %3, align 8
	}

[0x5608e201a018]:   %48 = inttoptr i64 %44 to i32* {
	[0x5608e1fe9fd8]:  %49 = inttoptr i64 %45 to i32*
	}

[0x5608e201a090]:   store i32 %45, i32* %48, align 4 {
	[0x5608e1fecae0]:  store i32 %46, i32* %49, align 4
	}

[0x5608e201a0f8]:   %49 = load i64, i64* %RBP, align 8 {
	[0x5608e1fe8018]:  %50 = load i64, i64* %RBP.i, align 8
	}

[0x5608e201a170]:   %50 = add i64 %49, -16 {
	[0x5608e1f7b8c0]:  %51 = add i64 %50, -16
	}

[0x5608e201a1d8]:   %51 = load i64, i64* %RSI, align 8 {
	[0x5608e1fed2b8]:  %52 = load i64, i64* %RSI.i, align 8
	}

[0x5608e201a238]:   %52 = load i64, i64* %PC, align 8 {
	[0x5608e1fef158]:  %53 = load i64, i64* %3, align 8
	}

[0x5608e201a2b0]:   %53 = add i64 %52, 4 {
	[0x5608e1f7b720]:  %54 = add i64 %53, 4
	}

[0x5608e201a330]:   store i64 %53, i64* %PC, align 8 {
	[0x5608e1f7b5c0]:  store i64 %54, i64* %3, align 8
	}

[0x5608e201a398]:   %54 = inttoptr i64 %50 to i64* {
	[0x5608e1fee6a8]:  %55 = inttoptr i64 %51 to i64*
	}

[0x5608e201a410]:   store i64 %51, i64* %54, align 8 {
	[0x5608e1feccc0]:  store i64 %52, i64* %55, align 8
	}

[0x5608e201a478]:   %55 = load i64, i64* %PC, align 8 {
	[0x5608e1fee448]:  %57 = load i64, i64* %3, align 8
	}

[0x5608e201a4f0]:   store i8 0, i8* %AL, align 1, !tbaa !1284 {
	[0x5608e1f7b300]:  store i8 0, i8* %AL.i, align 1
	}

[0x5608e201a5b0]:   %56 = add i64 %55, 26 {
	[0x5608e1f7c370]:  %58 = add i64 %57, 26
	}

[0x5608e201a630]:   %57 = add i64 %55, 7 {
	[0x5608e1f7d020]:  %59 = add i64 %57, 7
	}

[0x5608e201a698]:   %58 = load i64, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1fedf88]:  %60 = load i64, i64* %6, align 8
	}

[0x5608e201a710]:   %59 = add i64 %58, -8 {
	[0x5608e1f7da90]:  %61 = add i64 %60, -8
	}

[0x5608e201a778]:   %60 = inttoptr i64 %59 to i64* {
	[0x5608e1fedbf8]:  %62 = inttoptr i64 %61 to i64*
	}

[0x5608e201a7f0]:   store i64 %57, i64* %60, align 8 {
	[0x5608e1f7cbb0]:  store i64 %59, i64* %62, align 8
	}

[0x5608e201a870]:   store i64 %59, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1f7c9b0]:  store i64 %61, i64* %6, align 8
	}

[0x5608e201a8f0]:   store i64 %56, i64* %PC, align 8, !tbaa !1261 {
	[0x5608e1f7c780]:  store i64 %58, i64* %3, align 8
	}

[0x5608e201a9f0]:   %61 = tail call %struct.Memory* @sub_4004c0_printdata(%struct.State* nonnull %0, i64 %56, %struct.Memory* %2) {
	[0x5608e1f776b0]:  %call2_4004a8 = tail call %struct.Memory.32* @sub_4004c0.printdata(%struct.State.1* %0, i64 %58, %struct.Memory.32* %2)
	}

[0x5608e201aab8]:   %62 = load i64, i64* %RSP, align 8 {
	[0x5608e1fed998]:  %63 = load i64, i64* %6, align 8
	}

[0x5608e201ab18]:   %63 = load i64, i64* %PC, align 8 {
	[0x5608e1fef3b8]:  %64 = load i64, i64* %3, align 8
	}

[0x5608e201ab90]:   %64 = add i64 %62, 16 {
	[0x5608e1f7c620]:  %65 = add i64 %63, 16
	}

[0x5608e201ac10]:   store i64 %64, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1f7c4d0]:  store i64 %65, i64* %6, align 8
	}

[0x5608e201acd0]:   %65 = icmp ugt i64 %62, -17 {
	[0x5608e1f7d130]:  %66 = icmp ugt i64 %63, -17
	}

[0x5608e201ad38]:   %66 = zext i1 %65 to i8 {
	[0x5608e1ff10e8]:  %67 = zext i1 %66 to i8
	}

[0x5608e201adb0]:   store i8 %66, i8* %14, align 1, !tbaa !1265 {
	[0x5608e1f7d4a0]:  store i8 %67, i8* %14, align 1
	}

[0x5608e201ae18]:   %67 = trunc i64 %64 to i32 {
	[0x5608e1ff0fb8]:  %68 = trunc i64 %65 to i32
	}

[0x5608e201ae90]:   %68 = and i32 %67, 255 {
	[0x5608e1f7f160]:  %69 = and i32 %68, 255
	}

[0x5608e201af10]:   %69 = tail call i32 @llvm.ctpop.i32(i32 %68) #9 {
	[0x5608e2001220]:  %70 = tail call i32 @llvm.ctpop.i32(i32 %69)
	}

[0x5608e201afd8]:   %70 = trunc i32 %69 to i8 {
	[0x5608e1ff09c8]:  %71 = trunc i32 %70 to i8
	}

[0x5608e201b050]:   %71 = and i8 %70, 1 {
	[0x5608e1f7d6c0]:  %72 = and i8 %71, 1
	}

[0x5608e201b0d0]:   %72 = xor i8 %71, 1 {
	[0x5608e1f7ede0]:  %73 = xor i8 %72, 1
	}

[0x5608e201b150]:   store i8 %72, i8* %21, align 1, !tbaa !1279 {
	[0x5608e1f7d570]:  store i8 %73, i8* %21, align 1
	}

[0x5608e201b1d0]:   %73 = xor i64 %62, 16 {
	[0x5608e1f7eb90]:  %74 = xor i64 %63, 16
	}

[0x5608e201b250]:   %74 = xor i64 %73, %64 {
	[0x5608e1f7d240]:  %75 = xor i64 %74, %65
	}

[0x5608e201b2d0]:   %75 = lshr i64 %74, 4 {
	[0x5608e1f7f920]:  %76 = lshr i64 %75, 4
	}

[0x5608e201b338]:   %76 = trunc i64 %75 to i8 {
	[0x5608e1fef878]:  %77 = trunc i64 %76 to i8
	}

[0x5608e201b3b0]:   %77 = and i8 %76, 1 {
	[0x5608e1f822e0]:  %78 = and i8 %77, 1
	}

[0x5608e201b430]:   store i8 %77, i8* %27, align 1, !tbaa !1280 {
	[0x5608e1f82190]:  store i8 %78, i8* %27, align 1
	}

[0x5608e201b4b0]:   %78 = icmp eq i64 %64, 0 {
	[0x5608e1f81fb0]:  %79 = icmp eq i64 %65, 0
	}

[0x5608e201b518]:   %79 = zext i1 %78 to i8 {
	[0x5608e1fef748]:  %80 = zext i1 %79 to i8
	}

[0x5608e201b590]:   store i8 %79, i8* %30, align 1, !tbaa !1281 {
	[0x5608e1f81e50]:  store i8 %80, i8* %30, align 1
	}

[0x5608e201b610]:   %80 = lshr i64 %64, 63 {
	[0x5608e1f81cf0]:  %81 = lshr i64 %65, 63
	}

[0x5608e201b678]:   %81 = trunc i64 %80 to i8 {
	[0x5608e1fef618]:  %82 = trunc i64 %81 to i8
	}

[0x5608e201b6f0]:   store i8 %81, i8* %33, align 1, !tbaa !1282 {
	[0x5608e1f81b90]:  store i8 %82, i8* %33, align 1
	}

[0x5608e201b770]:   %82 = lshr i64 %62, 63 {
	[0x5608e1f800e0]:  %83 = lshr i64 %63, 63
	}

[0x5608e201b7f0]:   %83 = xor i64 %80, %82 {
	[0x5608e1f825a0]:  %84 = xor i64 %81, %83
	}

[0x5608e201b870]:   %84 = add nuw nsw i64 %83, %80 {
	[0x5608e1f7a0d0]:  %85 = add nuw nsw i64 %84, %81
	}

[0x5608e201b8f0]:   %85 = icmp eq i64 %84, 2 {
	[0x5608e1f79f70]:  %86 = icmp eq i64 %85, 2
	}

[0x5608e201b958]:   %86 = zext i1 %85 to i8 {
	[0x5608e1fef4e8]:  %87 = zext i1 %86 to i8
	}

[0x5608e201b9d0]:   store i8 %86, i8* %39, align 1, !tbaa !1283 {
	[0x5608e1f79e10]:  store i8 %87, i8* %39, align 1
	}

[0x5608e201ba50]:   %87 = add i64 %63, 5 {
	[0x5608e1f79cf0]:  %88 = add i64 %64, 5
	}

[0x5608e201bad0]:   store i64 %87, i64* %PC, align 8 {
	[0x5608e1f79ba0]:  store i64 %88, i64* %3, align 8
	}

[0x5608e201bb50]:   %88 = add i64 %62, 24 {
	[0x5608e1f799c0]:  %89 = add i64 %63, 24
	}

[0x5608e201bbb8]:   %89 = inttoptr i64 %64 to i64* {
	[0x5608e1ff1348]:  %90 = inttoptr i64 %65 to i64*
	}

[0x5608e201bc18]:   %90 = load i64, i64* %89, align 8 {
	[0x5608e1ff23e8]:  %91 = load i64, i64* %90, align 8
	}

[0x5608e201bc90]:   store i64 %90, i64* %RBP, align 8, !tbaa !1261 {
	[0x5608e1f798e0]:  store i64 %91, i64* %RBP.i, align 8
	}

[0x5608e201bd10]:   store i64 %88, i64* %RSP, align 8, !tbaa !1261 {
	[0x5608e1f848f0]:  store i64 %89, i64* %6, align 8
	}

[0x5608e202dd58]:   %3 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 1, i32 0 {
	[0x5608e20d9398]:  %56 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 6, i32 1, i32 0
	}

[0x5608e202e2c8]:   %4 = getelementptr inbounds %struct.State, %struct.State* %0, i64 0, i32 6, i32 11, i32 0 {
	[0x5608e2038858]:  %43 = getelementptr inbounds %struct.State.1, %struct.State.1* %0, i64 0, i32 6, i32 11, i32 0
	}


[Info]: Phase II: Retrieve potential BB matches: Round: 1
Retrieved BB Matches...
[0x5608e1fc2410]: block_400490 {
	[0x5608e1f75490]:entry
	}


[Info]: Phase II: Handle Conflicting Stores: Round: 1

[Info]: Check for multiple matches
Iso Match Found
Reading LLVM: mcsema/test.opt.ll
Reading LLVM: mcsema/test.proposed.opt.ll
Extracting function [main] from mcsema/test.opt.ll
Extracting function [main] from mcsema/test.proposed.opt.ll
Matcher Done...
