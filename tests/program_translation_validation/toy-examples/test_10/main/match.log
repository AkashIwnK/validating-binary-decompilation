[Info]: Check for multiple matches
Multiple matches exist for [0x558e85b30908]:   %88 = tail call fastcc %struct.Memory* @ext_6010b0_malloc(%struct.State* nonnull %0, %struct.Memory* %70)
[0x558e85a92270]:   %call2_4006aa = tail call %struct.Memory.32* @sub_400510.printf_plt(%struct.State.1* %0, i64 %151, %struct.Memory.32* %call2_400691)
[0x558e85a923a0]:   %call2_400691 = tail call %struct.Memory.32* @sub_4006d0.demo3(%struct.State.1* %0, i64 %136, %struct.Memory.32* %call2_400680)
[0x558e85a9c740]:   %call2_40065f = tail call %struct.Memory.32* @sub_400530.malloc_plt(%struct.State.1* %0, i64 %84, %struct.Memory.32* %call2_400652)
[0x558e85aa5b40]:   %call2_400652 = tail call %struct.Memory.32* @sub_400530.malloc_plt(%struct.State.1* %0, i64 %66, %struct.Memory.32* %2)
[0x558e85ab2d50]:   %call2_400680 = tail call %struct.Memory.32* @sub_400500.strcpy_plt(%struct.State.1* %0, i64 %116, %struct.Memory.32* %call2_400672)
[0x558e85b1e540]:   %call2_4006b6 = tail call %struct.Memory.32* @sub_4004f0.free_plt(%struct.State.1* %0, i64 %167, %struct.Memory.32* %call2_4006aa)
[0x558e85b23580]:   %call2_4006bf = tail call %struct.Memory.32* @sub_4004f0.free_plt(%struct.State.1* %0, i64 %178, %struct.Memory.32* %call2_4006b6)
[0x558e85b56750]:   %call2_400672 = tail call %struct.Memory.32* @sub_400520.memset_plt(%struct.State.1* %0, i64 %105, %struct.Memory.32* %call2_40065f)
Multiple matches exist for [0x558e85accb48]:   %110 = tail call fastcc %struct.Memory* @ext_601070_memset(%struct.State* nonnull %0, %struct.Memory* %88)
[0x558e85a92270]:   %call2_4006aa = tail call %struct.Memory.32* @sub_400510.printf_plt(%struct.State.1* %0, i64 %151, %struct.Memory.32* %call2_400691)
[0x558e85a923a0]:   %call2_400691 = tail call %struct.Memory.32* @sub_4006d0.demo3(%struct.State.1* %0, i64 %136, %struct.Memory.32* %call2_400680)
[0x558e85a9c740]:   %call2_40065f = tail call %struct.Memory.32* @sub_400530.malloc_plt(%struct.State.1* %0, i64 %84, %struct.Memory.32* %call2_400652)
[0x558e85aa5b40]:   %call2_400652 = tail call %struct.Memory.32* @sub_400530.malloc_plt(%struct.State.1* %0, i64 %66, %struct.Memory.32* %2)
[0x558e85ab2d50]:   %call2_400680 = tail call %struct.Memory.32* @sub_400500.strcpy_plt(%struct.State.1* %0, i64 %116, %struct.Memory.32* %call2_400672)
[0x558e85b1e540]:   %call2_4006b6 = tail call %struct.Memory.32* @sub_4004f0.free_plt(%struct.State.1* %0, i64 %167, %struct.Memory.32* %call2_4006aa)
[0x558e85b23580]:   %call2_4006bf = tail call %struct.Memory.32* @sub_4004f0.free_plt(%struct.State.1* %0, i64 %178, %struct.Memory.32* %call2_4006b6)
[0x558e85b56750]:   %call2_400672 = tail call %struct.Memory.32* @sub_400520.memset_plt(%struct.State.1* %0, i64 %105, %struct.Memory.32* %call2_40065f)
Multiple matches exist for [0x558e85acd6a8]:   %122 = tail call fastcc %struct.Memory* @ext_601090_strcpy(%struct.State* nonnull %0, %struct.Memory* %110)
[0x558e85a92270]:   %call2_4006aa = tail call %struct.Memory.32* @sub_400510.printf_plt(%struct.State.1* %0, i64 %151, %struct.Memory.32* %call2_400691)
[0x558e85a923a0]:   %call2_400691 = tail call %struct.Memory.32* @sub_4006d0.demo3(%struct.State.1* %0, i64 %136, %struct.Memory.32* %call2_400680)
[0x558e85a9c740]:   %call2_40065f = tail call %struct.Memory.32* @sub_400530.malloc_plt(%struct.State.1* %0, i64 %84, %struct.Memory.32* %call2_400652)
[0x558e85aa5b40]:   %call2_400652 = tail call %struct.Memory.32* @sub_400530.malloc_plt(%struct.State.1* %0, i64 %66, %struct.Memory.32* %2)
[0x558e85ab2d50]:   %call2_400680 = tail call %struct.Memory.32* @sub_400500.strcpy_plt(%struct.State.1* %0, i64 %116, %struct.Memory.32* %call2_400672)
[0x558e85b1e540]:   %call2_4006b6 = tail call %struct.Memory.32* @sub_4004f0.free_plt(%struct.State.1* %0, i64 %167, %struct.Memory.32* %call2_4006aa)
[0x558e85b23580]:   %call2_4006bf = tail call %struct.Memory.32* @sub_4004f0.free_plt(%struct.State.1* %0, i64 %178, %struct.Memory.32* %call2_4006b6)
[0x558e85b56750]:   %call2_400672 = tail call %struct.Memory.32* @sub_400520.memset_plt(%struct.State.1* %0, i64 %105, %struct.Memory.32* %call2_40065f)
Multiple matches exist for [0x558e85a8cde8]:   %159 = tail call fastcc %struct.Memory* @ext_400510_printf(%struct.State* nonnull %0, %struct.Memory* %143)
[0x558e85a92270]:   %call2_4006aa = tail call %struct.Memory.32* @sub_400510.printf_plt(%struct.State.1* %0, i64 %151, %struct.Memory.32* %call2_400691)
[0x558e85a923a0]:   %call2_400691 = tail call %struct.Memory.32* @sub_4006d0.demo3(%struct.State.1* %0, i64 %136, %struct.Memory.32* %call2_400680)
[0x558e85a9c740]:   %call2_40065f = tail call %struct.Memory.32* @sub_400530.malloc_plt(%struct.State.1* %0, i64 %84, %struct.Memory.32* %call2_400652)
[0x558e85aa5b40]:   %call2_400652 = tail call %struct.Memory.32* @sub_400530.malloc_plt(%struct.State.1* %0, i64 %66, %struct.Memory.32* %2)
[0x558e85ab2d50]:   %call2_400680 = tail call %struct.Memory.32* @sub_400500.strcpy_plt(%struct.State.1* %0, i64 %116, %struct.Memory.32* %call2_400672)
[0x558e85b1e540]:   %call2_4006b6 = tail call %struct.Memory.32* @sub_4004f0.free_plt(%struct.State.1* %0, i64 %167, %struct.Memory.32* %call2_4006aa)
[0x558e85b23580]:   %call2_4006bf = tail call %struct.Memory.32* @sub_4004f0.free_plt(%struct.State.1* %0, i64 %178, %struct.Memory.32* %call2_4006b6)
[0x558e85b56750]:   %call2_400672 = tail call %struct.Memory.32* @sub_400520.memset_plt(%struct.State.1* %0, i64 %105, %struct.Memory.32* %call2_40065f)
Multiple matches exist for [0x558e85ae3db8]:   %176 = tail call fastcc %struct.Memory* @ext_601088_free(%struct.State* nonnull %0, %struct.Memory* %159)
[0x558e85a92270]:   %call2_4006aa = tail call %struct.Memory.32* @sub_400510.printf_plt(%struct.State.1* %0, i64 %151, %struct.Memory.32* %call2_400691)
[0x558e85a923a0]:   %call2_400691 = tail call %struct.Memory.32* @sub_4006d0.demo3(%struct.State.1* %0, i64 %136, %struct.Memory.32* %call2_400680)
[0x558e85a9c740]:   %call2_40065f = tail call %struct.Memory.32* @sub_400530.malloc_plt(%struct.State.1* %0, i64 %84, %struct.Memory.32* %call2_400652)
[0x558e85aa5b40]:   %call2_400652 = tail call %struct.Memory.32* @sub_400530.malloc_plt(%struct.State.1* %0, i64 %66, %struct.Memory.32* %2)
[0x558e85ab2d50]:   %call2_400680 = tail call %struct.Memory.32* @sub_400500.strcpy_plt(%struct.State.1* %0, i64 %116, %struct.Memory.32* %call2_400672)
[0x558e85b1e540]:   %call2_4006b6 = tail call %struct.Memory.32* @sub_4004f0.free_plt(%struct.State.1* %0, i64 %167, %struct.Memory.32* %call2_4006aa)
[0x558e85b23580]:   %call2_4006bf = tail call %struct.Memory.32* @sub_4004f0.free_plt(%struct.State.1* %0, i64 %178, %struct.Memory.32* %call2_4006b6)
[0x558e85b56750]:   %call2_400672 = tail call %struct.Memory.32* @sub_400520.memset_plt(%struct.State.1* %0, i64 %105, %struct.Memory.32* %call2_40065f)
Multiple matches exist for [0x558e85ae4628]:   %188 = tail call fastcc %struct.Memory* @ext_601088_free(%struct.State* nonnull %0, %struct.Memory* %176)
[0x558e85a92270]:   %call2_4006aa = tail call %struct.Memory.32* @sub_400510.printf_plt(%struct.State.1* %0, i64 %151, %struct.Memory.32* %call2_400691)
[0x558e85a923a0]:   %call2_400691 = tail call %struct.Memory.32* @sub_4006d0.demo3(%struct.State.1* %0, i64 %136, %struct.Memory.32* %call2_400680)
[0x558e85a9c740]:   %call2_40065f = tail call %struct.Memory.32* @sub_400530.malloc_plt(%struct.State.1* %0, i64 %84, %struct.Memory.32* %call2_400652)
[0x558e85aa5b40]:   %call2_400652 = tail call %struct.Memory.32* @sub_400530.malloc_plt(%struct.State.1* %0, i64 %66, %struct.Memory.32* %2)
[0x558e85ab2d50]:   %call2_400680 = tail call %struct.Memory.32* @sub_400500.strcpy_plt(%struct.State.1* %0, i64 %116, %struct.Memory.32* %call2_400672)
[0x558e85b1e540]:   %call2_4006b6 = tail call %struct.Memory.32* @sub_4004f0.free_plt(%struct.State.1* %0, i64 %167, %struct.Memory.32* %call2_4006aa)
[0x558e85b23580]:   %call2_4006bf = tail call %struct.Memory.32* @sub_4004f0.free_plt(%struct.State.1* %0, i64 %178, %struct.Memory.32* %call2_4006b6)
[0x558e85b56750]:   %call2_400672 = tail call %struct.Memory.32* @sub_400520.memset_plt(%struct.State.1* %0, i64 %105, %struct.Memory.32* %call2_40065f)
Iso Match NOT Found
Reading LLVM: ../binary/test.mcsema.opt.ll
Reading LLVM: mcsema/test.proposed.opt.ll
Extracting function [main] from ../binary/test.mcsema.opt.ll
Extracting function [main] from mcsema/test.proposed.opt.ll
Matcher Done...
