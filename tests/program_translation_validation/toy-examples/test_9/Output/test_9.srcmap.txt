========================================================
Source line mapping for function: sub_1
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx
288 :   %77 = load i64* %RAX_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx

289 :   %78 = and i64 %77, 4294967295 : NIL

290 :   store i64 %78, i64* %RCX_val, !mcsema_real_eip !2 :          <1>	movl	%eax, %ecx

291 :   store i64 1, i64* %RAX_val, !mcsema_real_eip !3 :          <5>	incl	%eax

292 :   store i64 0, i64* %RBX_val, !mcsema_real_eip !4 :          <7>	xorl	%ebx, %ebx

293 :   %79 = trunc i64 %77 to i32, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx
294 :   %80 = sub i32 0, %79, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx
295 :   %81 = xor i32 %79, %80, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx
296 :   %82 = and i32 %81, 16, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx
297 :   %83 = icmp ne i32 %82, 0, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx
298 :   store i1 %83, i1* %AF_val, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx
299 :   %84 = trunc i32 %80 to i8, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx
300 :   %85 = tail call i8 @llvm.ctpop.i8(i8 %84), !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx

301 :   %86 = and i8 %85, 1 : NIL
302 :   %87 = icmp eq i8 %86, 0 : NIL

303 :   store i1 %87, i1* %PF_val, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx

304 :   %88 = icmp eq i32 %79, 0 : NIL

305 :   store i1 %88, i1* %ZF_val, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx

306 :   %89 = icmp slt i32 %80, 0 : NIL

307 :   store i1 %89, i1* %SF_val, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx

308 :   %90 = icmp ne i32 %79, 0 : NIL

309 :   store i1 %90, i1* %CF_val, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx
310 :   %91 = and i32 %79, %80, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx

311 :   %92 = icmp slt i32 %91, 0 : NIL

312 :   store i1 %92, i1* %OF_val, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx

313 :   %93 = load i1* %ZF_val, !mcsema_real_eip !6 :          <b>	je	6
314 :   br i1 %93, label %block_0x13, label %block_0xd.preheader, !mcsema_real_eip !6 :          <b>	je	6

315 :   %94 = load i64* %RCX_val, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx
316 :   %95 = trunc i64 %94 to i32, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx

317 :   %RAX_val.promoted = load i64* %RAX_val : NIL
318 :   %RBX_val.promoted = load i64* %RBX_val : NIL
319 :   br label %block_0xd : NIL
320 :   %.lcssa91 = phi i1 [ %190, %block_0xd ] : NIL
321 :   %.lcssa90 = phi i32 [ %189, %block_0xd ] : NIL
322 :   %.lcssa89 = phi i32 [ %188, %block_0xd ] : NIL
323 :   %.lcssa88 = phi i64 [ %187, %block_0xd ] : NIL
324 :   %.lcssa87 = phi i32 [ %186, %block_0xd ] : NIL
325 :   %.lcssa = phi i64 [ %184, %block_0xd ] : NIL

326 :   %96 = xor i32 %.lcssa90, %95, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx
327 :   %97 = and i32 %96, 16, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx
328 :   %98 = icmp ne i32 %97, 0, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx

329 :   %99 = icmp slt i32 %.lcssa89, 0 : NIL

330 :   %100 = xor i32 %95, %.lcssa87, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx
331 :   %101 = and i32 %.lcssa90, %100, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx

332 :   %102 = icmp slt i32 %101, 0 : NIL

333 :   %103 = trunc i32 %.lcssa89 to i8, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx
334 :   %104 = tail call i8 @llvm.ctpop.i8(i8 %103), !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx

335 :   %105 = and i8 %104, 1 : NIL
336 :   %106 = icmp eq i8 %105, 0 : NIL

337 :   %107 = icmp ult i32 %.lcssa87, %95, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx

338 :   store i64 %.lcssa, i64* %RAX_val : NIL
339 :   store i1 %98, i1* %AF_val : NIL
340 :   store i1 %99, i1* %SF_val : NIL
341 :   store i1 %.lcssa91, i1* %ZF_val : NIL
342 :   store i1 %102, i1* %OF_val : NIL
343 :   store i1 %106, i1* %PF_val : NIL
344 :   store i1 %107, i1* %CF_val : NIL
345 :   store i64 %.lcssa88, i64* %RBX_val : NIL
346 :   br label %block_0x13 : NIL

347 :   %108 = load i64* %RSP_val, !mcsema_real_eip !7 :          <13>	retq
348 :   %109 = add i64 %108, 8, !mcsema_real_eip !7 :          <13>	retq
349 :   store i64 %109, i64* %RSP_val, !mcsema_real_eip !7 :          <13>	retq
350 :   %110 = load i64* %RAX_val, !mcsema_real_eip !7 :          <13>	retq
351 :   store i64 %110, i64* %RAX, !mcsema_real_eip !7 :          <13>	retq
352 :   %111 = load i64* %RBX_val, !mcsema_real_eip !7 :          <13>	retq
353 :   store i64 %111, i64* %RBX, !mcsema_real_eip !7 :          <13>	retq
354 :   %112 = load i64* %RCX_val, !mcsema_real_eip !7 :          <13>	retq
355 :   store i64 %112, i64* %RCX, !mcsema_real_eip !7 :          <13>	retq
356 :   %113 = load i64* %RDX_val, !mcsema_real_eip !7 :          <13>	retq
357 :   store i64 %113, i64* %RDX, !mcsema_real_eip !7 :          <13>	retq
358 :   %114 = load i64* %RSI_val, !mcsema_real_eip !7 :          <13>	retq
359 :   store i64 %114, i64* %RSI, !mcsema_real_eip !7 :          <13>	retq
360 :   %115 = load i64* %RDI_val, !mcsema_real_eip !7 :          <13>	retq
361 :   store i64 %115, i64* %RDI, !mcsema_real_eip !7 :          <13>	retq
362 :   %116 = load i64* %RSP_val, !mcsema_real_eip !7 :          <13>	retq
363 :   store i64 %116, i64* %RSP, !mcsema_real_eip !7 :          <13>	retq
364 :   %117 = load i64* %RBP_val, !mcsema_real_eip !7 :          <13>	retq
365 :   store i64 %117, i64* %RBP, !mcsema_real_eip !7 :          <13>	retq
366 :   %118 = load i64* %R8_val, !mcsema_real_eip !7 :          <13>	retq
367 :   store i64 %118, i64* %R8, !mcsema_real_eip !7 :          <13>	retq
368 :   %119 = load i64* %R9_val, !mcsema_real_eip !7 :          <13>	retq
369 :   store i64 %119, i64* %R9, !mcsema_real_eip !7 :          <13>	retq
370 :   %120 = load i64* %R10_val, !mcsema_real_eip !7 :          <13>	retq
371 :   store i64 %120, i64* %R10, !mcsema_real_eip !7 :          <13>	retq
372 :   %121 = load i64* %R11_val, !mcsema_real_eip !7 :          <13>	retq
373 :   store i64 %121, i64* %R11, !mcsema_real_eip !7 :          <13>	retq
374 :   %122 = load i64* %R12_val, !mcsema_real_eip !7 :          <13>	retq
375 :   store i64 %122, i64* %R12, !mcsema_real_eip !7 :          <13>	retq
376 :   %123 = load i64* %R13_val, !mcsema_real_eip !7 :          <13>	retq
377 :   store i64 %123, i64* %R13, !mcsema_real_eip !7 :          <13>	retq
378 :   %124 = load i64* %R14_val, !mcsema_real_eip !7 :          <13>	retq
379 :   store i64 %124, i64* %R14, !mcsema_real_eip !7 :          <13>	retq
380 :   %125 = load i64* %R15_val, !mcsema_real_eip !7 :          <13>	retq
381 :   store i64 %125, i64* %R15, !mcsema_real_eip !7 :          <13>	retq
382 :   %126 = load i64* %RIP_val, !mcsema_real_eip !7 :          <13>	retq
383 :   store i64 %126, i64* %RIP, !mcsema_real_eip !7 :          <13>	retq
384 :   %127 = load i1* %CF_val, !mcsema_real_eip !7 :          <13>	retq
385 :   store i1 %127, i1* %CF, align 1, !mcsema_real_eip !7 :          <13>	retq
386 :   %128 = load i1* %PF_val, !mcsema_real_eip !7 :          <13>	retq
387 :   store i1 %128, i1* %PF, align 1, !mcsema_real_eip !7 :          <13>	retq
388 :   %129 = load i1* %AF_val, !mcsema_real_eip !7 :          <13>	retq
389 :   store i1 %129, i1* %AF, align 1, !mcsema_real_eip !7 :          <13>	retq
390 :   %130 = load i1* %ZF_val, !mcsema_real_eip !7 :          <13>	retq
391 :   store i1 %130, i1* %ZF, align 1, !mcsema_real_eip !7 :          <13>	retq
392 :   %131 = load i1* %SF_val, !mcsema_real_eip !7 :          <13>	retq
393 :   store i1 %131, i1* %SF, align 1, !mcsema_real_eip !7 :          <13>	retq
394 :   %132 = load i1* %OF_val, !mcsema_real_eip !7 :          <13>	retq
395 :   store i1 %132, i1* %OF, align 1, !mcsema_real_eip !7 :          <13>	retq
396 :   %133 = load i1* %DF_val, !mcsema_real_eip !7 :          <13>	retq
397 :   store i1 %133, i1* %DF, align 1, !mcsema_real_eip !7 :          <13>	retq
398 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !7 :          <13>	retq
399 :   %134 = load i1* %FPU_B_val, !mcsema_real_eip !7 :          <13>	retq
400 :   store i1 %134, i1* %FPU_B, align 1, !mcsema_real_eip !7 :          <13>	retq
401 :   %135 = load i1* %FPU_C3_val, !mcsema_real_eip !7 :          <13>	retq
402 :   store i1 %135, i1* %FPU_C3, align 1, !mcsema_real_eip !7 :          <13>	retq
403 :   %136 = load i3* %FPU_TOP_val, !mcsema_real_eip !7 :          <13>	retq
404 :   store i3 %136, i3* %FPU_TOP, align 1, !mcsema_real_eip !7 :          <13>	retq
405 :   %137 = load i1* %FPU_C2_val, !mcsema_real_eip !7 :          <13>	retq
406 :   store i1 %137, i1* %FPU_C2, align 1, !mcsema_real_eip !7 :          <13>	retq
407 :   %138 = load i1* %FPU_C1_val, !mcsema_real_eip !7 :          <13>	retq
408 :   store i1 %138, i1* %FPU_C1, align 1, !mcsema_real_eip !7 :          <13>	retq
409 :   %139 = load i1* %FPU_C0_val, !mcsema_real_eip !7 :          <13>	retq
410 :   store i1 %139, i1* %FPU_C0, align 1, !mcsema_real_eip !7 :          <13>	retq
411 :   %140 = load i1* %FPU_ES_val, !mcsema_real_eip !7 :          <13>	retq
412 :   store i1 %140, i1* %FPU_ES, align 1, !mcsema_real_eip !7 :          <13>	retq
413 :   %141 = load i1* %FPU_SF_val, !mcsema_real_eip !7 :          <13>	retq
414 :   store i1 %141, i1* %FPU_SF, align 1, !mcsema_real_eip !7 :          <13>	retq
415 :   %142 = load i1* %FPU_PE_val, !mcsema_real_eip !7 :          <13>	retq
416 :   store i1 %142, i1* %FPU_PE, align 1, !mcsema_real_eip !7 :          <13>	retq
417 :   %143 = load i1* %FPU_UE_val, !mcsema_real_eip !7 :          <13>	retq
418 :   store i1 %143, i1* %FPU_UE, align 1, !mcsema_real_eip !7 :          <13>	retq
419 :   %144 = load i1* %FPU_OE_val, !mcsema_real_eip !7 :          <13>	retq
420 :   store i1 %144, i1* %FPU_OE, align 1, !mcsema_real_eip !7 :          <13>	retq
421 :   %145 = load i1* %FPU_ZE_val, !mcsema_real_eip !7 :          <13>	retq
422 :   store i1 %145, i1* %FPU_ZE, align 1, !mcsema_real_eip !7 :          <13>	retq
423 :   %146 = load i1* %FPU_DE_val, !mcsema_real_eip !7 :          <13>	retq
424 :   store i1 %146, i1* %FPU_DE, align 1, !mcsema_real_eip !7 :          <13>	retq
425 :   %147 = load i1* %FPU_IE_val, !mcsema_real_eip !7 :          <13>	retq
426 :   store i1 %147, i1* %FPU_IE, align 1, !mcsema_real_eip !7 :          <13>	retq
427 :   %148 = load i1* %FPU_X_val, !mcsema_real_eip !7 :          <13>	retq
428 :   store i1 %148, i1* %FPU_X, align 1, !mcsema_real_eip !7 :          <13>	retq
429 :   %149 = load i2* %FPU_RC_val, !mcsema_real_eip !7 :          <13>	retq
430 :   store i2 %149, i2* %FPU_RC, align 1, !mcsema_real_eip !7 :          <13>	retq
431 :   %150 = load i2* %FPU_PC_val, !mcsema_real_eip !7 :          <13>	retq
432 :   store i2 %150, i2* %FPU_PC, align 1, !mcsema_real_eip !7 :          <13>	retq
433 :   %151 = load i1* %FPU_PM_val, !mcsema_real_eip !7 :          <13>	retq
434 :   store i1 %151, i1* %FPU_PM, align 1, !mcsema_real_eip !7 :          <13>	retq
435 :   %152 = load i1* %FPU_UM_val, !mcsema_real_eip !7 :          <13>	retq
436 :   store i1 %152, i1* %FPU_UM, align 1, !mcsema_real_eip !7 :          <13>	retq
437 :   %153 = load i1* %FPU_OM_val, !mcsema_real_eip !7 :          <13>	retq
438 :   store i1 %153, i1* %FPU_OM, align 1, !mcsema_real_eip !7 :          <13>	retq
439 :   %154 = load i1* %FPU_ZM_val, !mcsema_real_eip !7 :          <13>	retq
440 :   store i1 %154, i1* %FPU_ZM, align 1, !mcsema_real_eip !7 :          <13>	retq
441 :   %155 = load i1* %FPU_DM_val, !mcsema_real_eip !7 :          <13>	retq
442 :   store i1 %155, i1* %FPU_DM, align 1, !mcsema_real_eip !7 :          <13>	retq
443 :   %156 = load i1* %FPU_IM_val, !mcsema_real_eip !7 :          <13>	retq
444 :   store i1 %156, i1* %FPU_IM, align 1, !mcsema_real_eip !7 :          <13>	retq

445 :   %157 = load i64* %53, align 4 : NIL
446 :   store i64 %157, i64* %52, align 4 : NIL

447 :   %158 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !7 :          <13>	retq
448 :   store i16 %158, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !7 :          <13>	retq
449 :   %159 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !7 :          <13>	retq
450 :   store i64 %159, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !7 :          <13>	retq
451 :   %160 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !7 :          <13>	retq
452 :   store i16 %160, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !7 :          <13>	retq
453 :   %161 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !7 :          <13>	retq
454 :   store i64 %161, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !7 :          <13>	retq
455 :   %162 = load i128* %XMM0_val, !mcsema_real_eip !7 :          <13>	retq
456 :   store i128 %162, i128* %XMM0, align 1, !mcsema_real_eip !7 :          <13>	retq
457 :   %163 = load i128* %XMM1_val, !mcsema_real_eip !7 :          <13>	retq
458 :   store i128 %163, i128* %XMM1, align 1, !mcsema_real_eip !7 :          <13>	retq
459 :   %164 = load i128* %XMM2_val, !mcsema_real_eip !7 :          <13>	retq
460 :   store i128 %164, i128* %XMM2, align 1, !mcsema_real_eip !7 :          <13>	retq
461 :   %165 = load i128* %XMM3_val, !mcsema_real_eip !7 :          <13>	retq
462 :   store i128 %165, i128* %XMM3, align 1, !mcsema_real_eip !7 :          <13>	retq
463 :   %166 = load i128* %XMM4_val, !mcsema_real_eip !7 :          <13>	retq
464 :   store i128 %166, i128* %XMM4, align 1, !mcsema_real_eip !7 :          <13>	retq
465 :   %167 = load i128* %XMM5_val, !mcsema_real_eip !7 :          <13>	retq
466 :   store i128 %167, i128* %XMM5, align 1, !mcsema_real_eip !7 :          <13>	retq
467 :   %168 = load i128* %XMM6_val, !mcsema_real_eip !7 :          <13>	retq
468 :   store i128 %168, i128* %XMM6, align 1, !mcsema_real_eip !7 :          <13>	retq
469 :   %169 = load i128* %XMM7_val, !mcsema_real_eip !7 :          <13>	retq
470 :   store i128 %169, i128* %XMM7, align 1, !mcsema_real_eip !7 :          <13>	retq
471 :   %170 = load i128* %XMM8_val, !mcsema_real_eip !7 :          <13>	retq
472 :   store i128 %170, i128* %XMM8, align 1, !mcsema_real_eip !7 :          <13>	retq
473 :   %171 = load i128* %XMM9_val, !mcsema_real_eip !7 :          <13>	retq
474 :   store i128 %171, i128* %XMM9, align 1, !mcsema_real_eip !7 :          <13>	retq
475 :   %172 = load i128* %XMM10_val, !mcsema_real_eip !7 :          <13>	retq
476 :   store i128 %172, i128* %XMM10, align 1, !mcsema_real_eip !7 :          <13>	retq
477 :   %173 = load i128* %XMM11_val, !mcsema_real_eip !7 :          <13>	retq
478 :   store i128 %173, i128* %XMM11, align 1, !mcsema_real_eip !7 :          <13>	retq
479 :   %174 = load i128* %XMM12_val, !mcsema_real_eip !7 :          <13>	retq
480 :   store i128 %174, i128* %XMM12, align 1, !mcsema_real_eip !7 :          <13>	retq
481 :   %175 = load i128* %XMM13_val, !mcsema_real_eip !7 :          <13>	retq
482 :   store i128 %175, i128* %XMM13, align 1, !mcsema_real_eip !7 :          <13>	retq
483 :   %176 = load i128* %XMM14_val, !mcsema_real_eip !7 :          <13>	retq
484 :   store i128 %176, i128* %XMM14, align 1, !mcsema_real_eip !7 :          <13>	retq
485 :   %177 = load i128* %XMM15_val, !mcsema_real_eip !7 :          <13>	retq
486 :   store i128 %177, i128* %XMM15, align 1, !mcsema_real_eip !7 :          <13>	retq
487 :   %178 = load i64* %STACK_BASE_val, !mcsema_real_eip !7 :          <13>	retq
488 :   store i64 %178, i64* %STACK_BASE, align 1, !mcsema_real_eip !7 :          <13>	retq
489 :   %179 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !7 :          <13>	retq
490 :   store i64 %179, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !7 :          <13>	retq
491 :   ret void, !mcsema_real_eip !7 :          <13>	retq

492 :   %180 = phi i64 [ %RBX_val.promoted, %block_0xd.preheader ], [ %187, %block_0xd ] : NIL
493 :   %181 = phi i64 [ %RAX_val.promoted, %block_0xd.preheader ], [ %184, %block_0xd ] : NIL

494 :   %182 = trunc i64 %181 to i32, !mcsema_real_eip !8 :          <d>	addl	%eax, %eax

495 :   %183 = shl i32 %182, 1 : NIL

496 :   %184 = zext i32 %183 to i64, !mcsema_real_eip !8 :          <d>	addl	%eax, %eax

497 :   %185 = trunc i64 %180 to i32, !mcsema_real_eip !9 :          <f>	incl	%ebx
498 :   %186 = add i32 %185, 1, !mcsema_real_eip !9 :          <f>	incl	%ebx
499 :   %187 = zext i32 %186 to i64, !mcsema_real_eip !9 :          <f>	incl	%ebx

500 :   %188 = sub i32 %186, %95, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx
501 :   %189 = xor i32 %188, %186, !mcsema_real_eip !5 :          <9>	cmpl	%ecx, %ebx

502 :   %190 = icmp eq i32 %186, %95 : NIL

503 :   br i1 %190, label %block_0x13.loopexit, label %block_0xd, !mcsema_real_eip !6 :          <b>	je	6
========================================================
Source line mapping for function: mcsema_main
========================================================

1 :   tail call x86_64_sysvcc void @sub_1(%struct.regs* %0) : NIL
2 :   ret void : NIL
