Disassembling ../binary_O2/test.reloc
Disassembled output
  .text
  .globl keycomp
  .type keycomp, @function

#! file-offset 0x730
#! rip-offset  0x400730
#! capacity    468 bytes

# Text                      #  Line  RIP       Bytes  Opcode               Target                
.keycomp:                   #        0x400730  0      OPC=<label>          18446744073709551615  
  pushq %rbp                #  1     0x400730  1      OPC=pushq_r64_1      18446744073709551615  
  movq %rsp, %rbp           #  2     0x400731  3      OPC=movq_r64_r64     18446744073709551615  
  pushq %r15                #  3     0x400734  2      OPC=pushq_r64_1      18446744073709551615  
  pushq %r14                #  4     0x400736  2      OPC=pushq_r64_1      18446744073709551615  
  pushq %rbx                #  5     0x400738  1      OPC=pushq_r64_1      18446744073709551615  
  pushq %rax                #  6     0x400739  1      OPC=pushq_r64_1      18446744073709551615  
  movq %rdi, %rbx           #  7     0x40073a  3      OPC=movq_r64_r64     18446744073709551615  
  callq .strlen_plt         #  8     0x40073d  5      OPC=callq_label      4195616               
  cmpl $0x25, %eax          #  9     0x400742  3      OPC=cmpl_r32_imm8    18446744073709551615  
  jne .L_4008f9             #  10    0x400745  6      OPC=jne_label_1      4196601               
  movl $0xfffffffe, %eax    #  11    0x40074b  5      OPC=movl_r32_imm32   18446744073709551615  
  cmpb $0x64, 0x4(%rbx)     #  12    0x400750  4      OPC=cmpb_m8_imm8     18446744073709551615  
  jne .L_4008f9             #  13    0x400754  6      OPC=jne_label_1      4196601               
  movzbl 0x5(%rbx), %edi    #  14    0x40075a  4      OPC=movzbl_r32_m8    18446744073709551615  
  callq .to_byte            #  15    0x40075e  5      OPC=callq_label      4195904               
  movl %eax, %ecx           #  16    0x400763  2      OPC=movl_r32_r32     18446744073709551615  
  movl $0xfffffffd, %eax    #  17    0x400765  5      OPC=movl_r32_imm32   18446744073709551615  
  cmpl $0x9, %ecx           #  18    0x40076a  3      OPC=cmpl_r32_imm8    18446744073709551615  
  jne .L_4008f9             #  19    0x40076d  6      OPC=jne_label_1      4196601               
  movzbl 0x6(%rbx), %edi    #  20    0x400773  4      OPC=movzbl_r32_m8    18446744073709551615  
  callq .to_byte            #  21    0x400777  5      OPC=callq_label      4195904               
  movl %eax, %ecx           #  22    0x40077c  2      OPC=movl_r32_r32     18446744073709551615  
  andl $0x7fffffff, %ecx    #  23    0x40077e  6      OPC=andl_r32_imm32   18446744073709551615  
  movl $0xfffffffc, %eax    #  24    0x400784  5      OPC=movl_r32_imm32   18446744073709551615  
  cmpl $0xd, %ecx           #  25    0x400789  3      OPC=cmpl_r32_imm8    18446744073709551615  
  jne .L_4008f9             #  26    0x40078c  6      OPC=jne_label_1      4196601               
  movzbl 0x7(%rbx), %edi    #  27    0x400792  4      OPC=movzbl_r32_m8    18446744073709551615  
  callq .to_byte            #  28    0x400796  5      OPC=callq_label      4195904               
  movl %eax, %ecx           #  29    0x40079b  2      OPC=movl_r32_r32     18446744073709551615  
  incl %ecx                 #  30    0x40079d  2      OPC=incl_r32         18446744073709551615  
  andl $0xfffffffe, %ecx    #  31    0x40079f  3      OPC=andl_r32_imm8    18446744073709551615  
  movl $0xfffffffb, %eax    #  32    0x4007a2  5      OPC=movl_r32_imm32   18446744073709551615  
  cmpl $0xe, %ecx           #  33    0x4007a7  3      OPC=cmpl_r32_imm8    18446744073709551615  
  jne .L_4008f9             #  34    0x4007aa  6      OPC=jne_label_1      4196601               
  movl $0xfffffffa, %eax    #  35    0x4007b0  5      OPC=movl_r32_imm32   18446744073709551615  
  cmpb $0x31, 0x8(%rbx)     #  36    0x4007b5  4      OPC=cmpb_m8_imm8     18446744073709551615  
  jne .L_4008f9             #  37    0x4007b9  6      OPC=jne_label_1      4196601               
  xorl %ecx, %ecx           #  38    0x4007bf  2      OPC=xorl_r32_r32     18446744073709551615  
  cmpb $0x63, 0x9(%rbx)     #  39    0x4007c1  4      OPC=cmpb_m8_imm8     18446744073709551615  
  setne %cl                 #  40    0x4007c5  3      OPC=setne_r8         18446744073709551615  
  shll %cl, %ecx            #  41    0x4007c8  2      OPC=shll_r32_cl      18446744073709551615  
  movl $0xfffffff9, %eax    #  42    0x4007ca  5      OPC=movl_r32_imm32   18446744073709551615  
  testl %ecx, %ecx          #  43    0x4007cf  2      OPC=testl_r32_r32    18446744073709551615  
  jne .L_4008f9             #  44    0x4007d1  6      OPC=jne_label_1      4196601               
  leaq 0xc(%rbx), %rsi      #  45    0x4007d7  4      OPC=leaq_r64_m16     18446744073709551615  
  xorl %r14d, %r14d         #  46    0x4007db  3      OPC=xorl_r32_r32     18446744073709551615  
  xorl %edi, %edi           #  47    0x4007de  2      OPC=xorl_r32_r32     18446744073709551615  
  movl $0x4, %edx           #  48    0x4007e0  5      OPC=movl_r32_imm32   18446744073709551615  
  callq .read_bytes         #  49    0x4007e5  5      OPC=callq_label      4195952               
  movzwl %ax, %eax          #  50    0x4007ea  3      OPC=movzwl_r32_r16   18446744073709551615  
  movl %eax, %ecx           #  51    0x4007ed  2      OPC=movl_r32_r32     18446744073709551615  
  orl $0x5555, %ecx         #  52    0x4007ef  6      OPC=orl_r32_imm32    18446744073709551615  
  orl $0xaaaa, %eax         #  53    0x4007f5  5      OPC=orl_eax_imm32    18446744073709551615  
  cmpl $0xfebb, %eax        #  54    0x4007fa  5      OPC=cmpl_eax_imm32   18446744073709551615  
  movl $0xaaaa, %r15d       #  55    0x4007ff  6      OPC=movl_r32_imm32   18446744073709551615  
  movl $0xbbbb, %eax        #  56    0x400805  5      OPC=movl_r32_imm32   18446744073709551615  
  cmovnel %eax, %r15d       #  57    0x40080a  4      OPC=cmovnel_r32_r32  18446744073709551615  
  cmpl $0xdd57, %ecx        #  58    0x40080e  6      OPC=cmpl_r32_imm32   18446744073709551615  
  cmovnel %eax, %r15d       #  59    0x400814  4      OPC=cmovnel_r32_r32  18446744073709551615  
  leaq 0x10(%rbx), %rsi     #  60    0x400818  4      OPC=leaq_r64_m16     18446744073709551615  
  xorl %edi, %edi           #  61    0x40081c  2      OPC=xorl_r32_r32     18446744073709551615  
  movl $0x8, %edx           #  62    0x40081e  5      OPC=movl_r32_imm32   18446744073709551615  
  callq .read_bytes         #  63    0x400823  5      OPC=callq_label      4195952               
  xorl $0xa488769d, %eax    #  64    0x400828  5      OPC=xorl_eax_imm32   18446744073709551615  
  movzwl %ax, %ecx          #  65    0x40082d  3      OPC=movzwl_r32_r16   18446744073709551615  
  andl $0xffff0000, %eax    #  66    0x400830  5      OPC=andl_eax_imm32   18446744073709551615  
  cmpl %r15d, %ecx          #  67    0x400835  3      OPC=cmpl_r32_r32     18446744073709551615  
  movl $0xbcdf, %ecx        #  68    0x400838  5      OPC=movl_r32_imm32   18446744073709551615  
  cmovnel %ecx, %r14d       #  69    0x40083d  4      OPC=cmovnel_r32_r32  18446744073709551615  
  cmpl $0x4f0000, %eax      #  70    0x400841  5      OPC=cmpl_eax_imm32   18446744073709551615  
  cmovnel %ecx, %r14d       #  71    0x400846  4      OPC=cmovnel_r32_r32  18446744073709551615  
  leaq 0x18(%rbx), %rsi     #  72    0x40084a  4      OPC=leaq_r64_m16     18446744073709551615  
  movl $0x8, %edx           #  73    0x40084e  5      OPC=movl_r32_imm32   18446744073709551615  
  movl %r14d, %edi          #  74    0x400853  3      OPC=movl_r32_r32     18446744073709551615  
  callq .read_bytes         #  75    0x400856  5      OPC=callq_label      4195952               
  movl %eax, %ecx           #  76    0x40085b  2      OPC=movl_r32_r32     18446744073709551615  
  leal 0x5(%rcx), %edx      #  77    0x40085d  3      OPC=leal_r32_m16     18446744073709551615  
  movl $0xffffffeb, %eax    #  78    0x400860  5      OPC=movl_r32_imm32   18446744073709551615  
  testb $0x7, %dl           #  79    0x400865  3      OPC=testb_r8_imm8    18446744073709551615  
  jne .L_4008f9             #  80    0x400868  6      OPC=jne_label_1      4196601               
  addl $0x7ffffffd, %ecx    #  81    0x40086e  6      OPC=addl_r32_imm32   18446744073709551615  
  movl $0xffffffea, %eax    #  82    0x400874  5      OPC=movl_r32_imm32   18446744073709551615  
  cmpl $0xfffffff, %ecx     #  83    0x400879  6      OPC=cmpl_r32_imm32   18446744073709551615  
  ja .L_4008f9              #  84    0x40087f  2      OPC=ja_label         4196601               
  shrl $0x4, %ecx           #  85    0x400881  3      OPC=shrl_r32_imm8    18446744073709551615  
  xorl $0xd0000, %ecx       #  86    0x400884  6      OPC=xorl_r32_imm32   18446744073709551615  
  leal -0x7612(%rcx), %eax  #  87    0x40088a  6      OPC=leal_r32_m16     18446744073709551615  
  cmpl $0x2710, %eax        #  88    0x400890  5      OPC=cmpl_eax_imm32   18446744073709551615  
  jb .L_4008ac              #  89    0x400895  2      OPC=jb_label         4196524               
  addl $0xffffff1e, %ecx    #  90    0x400897  6      OPC=addl_r32_imm32   18446744073709551615  
  movl $0xd1b71759, %eax    #  91    0x40089d  5      OPC=movl_r32_imm32   18446744073709551615  
  imulq %rcx, %rax          #  92    0x4008a2  4      OPC=imulq_r64_r64    18446744073709551615  
  shrq $0x2d, %rax          #  93    0x4008a6  4      OPC=shrq_r64_imm8    18446744073709551615  
  jmpq .L_4008f9            #  94    0x4008aa  2      OPC=jmpq_label       4196601               
.L_4008ac:                  #        0x4008ac  0      OPC=<label>          18446744073709551615  
  leaq 0x20(%rbx), %rsi     #  95    0x4008ac  4      OPC=leaq_r64_m16     18446744073709551615  
  movl $0x4, %edx           #  96    0x4008b0  5      OPC=movl_r32_imm32   18446744073709551615  
  movl %r14d, %edi          #  97    0x4008b5  3      OPC=movl_r32_r32     18446744073709551615  
  callq .read_bytes         #  98    0x4008b8  5      OPC=callq_label      4195952               
  movb 0x20(%rbx), %cl      #  99    0x4008bd  3      OPC=movb_r8_m8       18446744073709551615  
  movb 0x21(%rbx), %dl      #  100   0x4008c0  3      OPC=movb_r8_m8       18446744073709551615  
  cmpb $0x64, %cl           #  101   0x4008c3  3      OPC=cmpb_r8_imm8     18446744073709551615  
  jne .L_4008d2             #  102   0x4008c6  2      OPC=jne_label        4196562               
  cmpb $0x64, %dl           #  103   0x4008c8  3      OPC=cmpb_r8_imm8     18446744073709551615  
  jne .L_4008d2             #  104   0x4008cb  2      OPC=jne_label        4196562               
  xorl %r14d, %eax          #  105   0x4008cd  3      OPC=xorl_r32_r32     18446744073709551615  
  jmpq .L_4008f9            #  106   0x4008d0  2      OPC=jmpq_label       4196601               
.L_4008d2:                  #        0x4008d2  0      OPC=<label>          18446744073709551615  
  cmpb %dl, %cl             #  107   0x4008d2  2      OPC=cmpb_r8_r8       18446744073709551615  
  jne .L_4008f9             #  108   0x4008d4  2      OPC=jne_label        4196601               
  movsbl 0x23(%rbx), %r15d  #  109   0x4008d6  5      OPC=movsbl_r32_m8    18446744073709551615  
  movsbl 0x22(%rbx), %ebx   #  110   0x4008db  4      OPC=movsbl_r32_m8    18446744073709551615  
  movzbl %cl, %edi          #  111   0x4008df  3      OPC=movzbl_r32_r8    18446744073709551615  
  callq .to_byte            #  112   0x4008e2  5      OPC=callq_label      4195904               
  addl $0xf, %r14d          #  113   0x4008e7  4      OPC=addl_r32_imm8    18446744073709551615  
  subl %r15d, %r14d         #  114   0x4008eb  3      OPC=subl_r32_r32     18446744073709551615  
  addl %ebx, %r14d          #  115   0x4008ee  3      OPC=addl_r32_r32     18446744073709551615  
  subl %eax, %r14d          #  116   0x4008f1  3      OPC=subl_r32_r32     18446744073709551615  
  movl %r14d, %eax          #  117   0x4008f4  3      OPC=movl_r32_r32     18446744073709551615  
  je .L_400904              #  118   0x4008f7  2      OPC=je_label         4196612               
.L_4008f9:                  #        0x4008f9  0      OPC=<label>          18446744073709551615  
  addq $0x8, %rsp           #  119   0x4008f9  4      OPC=addq_r64_imm8    18446744073709551615  
  popq %rbx                 #  120   0x4008fd  1      OPC=popq_r64_1       18446744073709551615  
  popq %r14                 #  121   0x4008fe  2      OPC=popq_r64_1       18446744073709551615  
  popq %r15                 #  122   0x400900  2      OPC=popq_r64_1       18446744073709551615  
  popq %rbp                 #  123   0x400902  1      OPC=popq_r64_1       18446744073709551615  
  retq                      #  124   0x400903  1      OPC=retq             18446744073709551615  
                                                                                                 
.size keycomp, .-keycomp
Disassembling Done.


Decompiling mcsema_O2/test.proposed.ll
Computing Label PC values ...
.L_4008f9->4196601
.L_4008d2->4196562
.keycomp->4196144
.L_4008ac->4196524

Computing Label PC values: Done.


Executing: cat ${HOME}/Github/validating-binary-decompilation/source/libs/compositional-decompiler/data/mcsema_template.txt
declare %struct.Memory* @__remill_error(%struct.State* dereferenceable(3376), i64, %struct.Memory*)
declare i32 @__remill_fpu_exception_test_and_clear(i32, i32)
declare void @llvm.lifetime.start(i64, i8* nocapture)
declare void @llvm.lifetime.end(i64, i8* nocapture)
declare i32 @llvm.ctpop.i32(i32)
declare i32 @llvm.bswap.i32(i32)
declare i64 @llvm.bswap.i64(i64)
declare i32 @llvm.cttz.i32(i32, i1)
declare i64 @llvm.cttz.i64(i64, i1)
declare i32 @llvm.ctlz.i32(i32, i1)
declare i64 @llvm.ctlz.i64(i64, i1)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1)
declare double @llvm.nearbyint.f64(double)
declare double @llvm.fabs.f64(double)
declare <4 x double> @llvm.nearbyint.v4f64(<4 x double>)
declare <4 x double> @llvm.fabs.v4f64(<4 x double>)
declare double @llvm.trunc.f64(double)
declare <4 x double> @llvm.trunc.v4f64(<4 x double>)
declare float @llvm.nearbyint.f32(float)
declare float @llvm.fabs.f32(float)
declare <4 x float> @llvm.nearbyint.v4f32(<4 x float>)
declare <4 x float> @llvm.fabs.v4f32(<4 x float>)
declare float @llvm.trunc.f32(float)
declare <4 x float> @llvm.trunc.v4f32(<4 x float>)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1)

; Buiitins  
declare double @atan(double) local_unnamed_addr #9
declare double @cos(double) local_unnamed_addr #9
declare double @sin(double) local_unnamed_addr #9
declare double @sqrt(double) local_unnamed_addr #9
declare double @tan(double) local_unnamed_addr #9
declare extern_weak x86_64_sysvcc i64 @abort() #18
declare extern_weak x86_64_sysvcc i64 @abs(i64) #18
declare extern_weak x86_64_sysvcc i64 @asin(i64) #18
declare extern_weak x86_64_sysvcc i64 @atof(i64) #18
declare extern_weak x86_64_sysvcc i64 @atoi(i64) #18
declare extern_weak x86_64_sysvcc i64 @atol(i64) #18
declare extern_weak x86_64_sysvcc i64 @calloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @clock() #18
declare extern_weak x86_64_sysvcc i64 @cosf(i64) #18
declare extern_weak x86_64_sysvcc i64 @exit(i64) #18
declare extern_weak x86_64_sysvcc i64 @exp(i64) #18
declare extern_weak x86_64_sysvcc i64 @fflush(i64) #18
declare extern_weak x86_64_sysvcc i64 @floor(i64) #18
declare extern_weak x86_64_sysvcc i64 @fprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @fputs(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @free(i64) #18
declare extern_weak x86_64_sysvcc i64 @fwrite(i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @getchar() #18
declare extern_weak x86_64_sysvcc i64 @gettimeofday(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_fscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_scanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @__isoc99_sscanf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @log(i64) #18
declare extern_weak x86_64_sysvcc i64 @lrand48() #18
declare extern_weak x86_64_sysvcc i64 @malloc(i64) #18
declare extern_weak x86_64_sysvcc i64 @memalign(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memcpy(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @memset(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @perror(i64) #18
declare extern_weak x86_64_sysvcc i64 @posix_memalign(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pow(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @printf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @putchar(i64) #18
declare extern_weak x86_64_sysvcc i64 @puts(i64) #18
declare extern_weak x86_64_sysvcc i64 @rand() #18
declare extern_weak x86_64_sysvcc i64 @random() #18
declare extern_weak x86_64_sysvcc i64 @realloc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @seed48(i64) #18
declare extern_weak x86_64_sysvcc i64 @sinf(i64) #18
declare extern_weak x86_64_sysvcc i64 @sprintf(i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @srand(i64) #18
declare extern_weak x86_64_sysvcc i64 @strcat(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcmp(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strcpy(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strdup(i64) #18
declare extern_weak x86_64_sysvcc i64 @strlen(i64) #18
declare extern_weak x86_64_sysvcc i64 @strncmp(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @strtoll(i64, i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @time(i64) #18
declare extern_weak x86_64_sysvcc i64 @ungetc(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_join(i64, i64) #18
declare extern_weak x86_64_sysvcc i64 @pthread_create(i64, i64, i64, i64) #18

declare %struct.Memory* @__remill_function_call(%struct.State* dereferenceable(3376), i64, %struct.Memory*)

define internal %struct.Memory* @ext_pthread_create(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @pthread_create to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pthread_join(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pthread_join to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_gettimeofday(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @gettimeofday to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_scanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_scanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_fflush(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @fflush to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_fscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_fscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext___isoc99_sscanf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @__isoc99_sscanf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_posix_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @posix_memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @fprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memset(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @memset to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_perror(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @perror to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_floor(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @floor to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_malloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @malloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atoi(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atoi to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcpy(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcpy to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_ungetc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @ungetc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_pow(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @pow to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_seed48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @seed48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_asin(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @asin to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strdup(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strdup to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_cosf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @cosf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @abs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_abort(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @abort to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_exit(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exit to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_putchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @putchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strncmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strncmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcmp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcmp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_rand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @rand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_calloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @calloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fwrite(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64)* @fwrite to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_realloc(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @realloc to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_log(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @log to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}


define internal %struct.Memory* @ext_exp(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @exp to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sprintf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @sprintf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strcat(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @strcat to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_puts(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @puts to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atol(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atol to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_atof(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @atof to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_clock(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @clock to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strlen(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @strlen to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_free(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @free to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_srand(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @srand to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_fputs(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @fputs to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_strtoll(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64)* @strtoll to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_sinf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @sinf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_time(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64)* @time to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_printf(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64)* @printf to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_memalign(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 (i64, i64)* @memalign to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_random(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @random to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_lrand48(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @lrand48 to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

define internal %struct.Memory* @ext_getchar(%struct.State*, i64, %struct.Memory*) #18 {
  %4 = call %struct.Memory* @__remill_function_call(%struct.State* %0, i64 ptrtoint (i64 ()* @getchar to i64), %struct.Memory* %2)
  ret %struct.Memory* %4
}

declare %struct.Memory* @ext_sqrt(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_atan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias)
declare %struct.Memory* @ext_cos(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_tan(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 
declare %struct.Memory* @ext_sin(%struct.State* noalias dereferenceable(3376), i64, %struct.Memory* noalias) 

Decompiling Function: keycomp...


Decompiling instr:.keycomp:...


Decompiling instr:pushq %rbp...
Instr: pushq %rbp
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//pushq__rbp
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//pushq__rbp/test.mod.ll
Running artifacts...Done.

FuncCache inserted: _ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_
FuncCache inserted: routine_pushq__rbp
Decompiling instr:pushq %rbp Done...


Decompiling instr:movq %rsp, %rbp...
Instr: movq %rsp, %rbp
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rsp___rbp
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rsp___rbp/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq__rsp___rbp
Decompiling instr:movq %rsp, %rbp Done...


Decompiling instr:pushq %r15...
Instr: pushq %r15
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//pushq__r15
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//pushq__r15/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_
FuncCache inserted: routine_pushq__r15
Decompiling instr:pushq %r15 Done...


Decompiling instr:pushq %r14...
Instr: pushq %r14
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//pushq__r14
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//pushq__r14/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_
FuncCache inserted: routine_pushq__r14
Decompiling instr:pushq %r14 Done...


Decompiling instr:pushq %rbx...
Instr: pushq %rbx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//pushq__rbx
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//pushq__rbx/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
FuncCache skipped: _ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_
FuncCache inserted: routine_pushq__rbx
Decompiling instr:pushq %rbx Done...


Decompiling instr:pushq %rax...
Instr: pushq %rax
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//pushq__rax
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//pushq__rax/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
FuncCache skipped: _ZN12_GLOBAL__N_1L4PUSHI2InImEEEP6MemoryS4_R5StateT_
FuncCache inserted: routine_pushq__rax
Decompiling instr:pushq %rax Done...


Decompiling instr:movq %rdi, %rbx...
Instr: movq %rdi, %rbx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rdi___rbx
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movq__rdi___rbx/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnImEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movq__rdi___rbx
Decompiling instr:movq %rdi, %rbx Done...


Decompiling instr:callq .strlen_plt...
Instr: callq .strlen_plt
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//callq_.strlen_plt
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//callq_.strlen_plt/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_
FuncCache inserted: routine_callq_.strlen_plt
Decompiling instr:callq .strlen_plt Done...


Decompiling instr:cmpl $0x25, %eax...
Instr: cmpl $0x25, %eax
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//cmpl__0x25___eax
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//cmpl__0x25___eax/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_cmpl__0x25___eax

Executing: ${HOME}/Github/validating-binary-decompilation/tests/scripts//find_pc_in_relocinfo.pl --binary ../binary_O2/test.reloc --pc 400742 --size 3
Decompiling instr:cmpl $0x25, %eax Done...


Decompiling instr:jne .L_4008f9...
Instr: jne .L_4008f9
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//jne_.L_4008f9
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//jne_.L_4008f9/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_
FuncCache inserted: routine_jne_.L_4008f9
Decompiling instr:jne .L_4008f9 Done...


Decompiling instr:movl $0xfffffffe, %eax...
Instr: movl $0xfffffffe, %eax
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0xfffffffe___eax
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0xfffffffe___eax/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__0xfffffffe___eax

Executing: ${HOME}/Github/validating-binary-decompilation/tests/scripts//find_pc_in_relocinfo.pl --binary ../binary_O2/test.reloc --pc 40074b --size 5
Decompiling instr:movl $0xfffffffe, %eax Done...


Decompiling instr:cmpb $0x64, 0x4(%rbx)...
Instr: cmpb $0x64, 0x4(%rbx)
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//cmpb__0x64__0x4__rbx_
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//cmpb__0x64__0x4__rbx_/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3CMPI2MnIhE2InIhEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_cmpb__0x64__0x4__rbx_
Decompiling instr:cmpb $0x64, 0x4(%rbx) Done...


Decompiling instr:jne .L_4008f9...
Instr: jne .L_4008f9
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//jne_.L_4008f9
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//jne_.L_4008f9/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_
FuncCache skipped: routine_jne_.L_4008f9
Decompiling instr:jne .L_4008f9 Done...


Decompiling instr:movzbl 0x5(%rbx), %edi...
Instr: movzbl 0x5(%rbx), %edi
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movzbl_0x5__rbx____edi
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movzbl_0x5__rbx____edi/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movzbl_0x5__rbx____edi
Decompiling instr:movzbl 0x5(%rbx), %edi Done...


Decompiling instr:callq .to_byte...
Instr: callq .to_byte
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//callq_.to_byte
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//callq_.to_byte/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_
FuncCache inserted: routine_callq_.to_byte
Decompiling instr:callq .to_byte Done...


Decompiling instr:movl %eax, %ecx...
Instr: movl %eax, %ecx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__eax___ecx
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__eax___ecx/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__eax___ecx
Decompiling instr:movl %eax, %ecx Done...


Decompiling instr:movl $0xfffffffd, %eax...
Instr: movl $0xfffffffd, %eax
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0xfffffffd___eax
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0xfffffffd___eax/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__0xfffffffd___eax

Executing: ${HOME}/Github/validating-binary-decompilation/tests/scripts//find_pc_in_relocinfo.pl --binary ../binary_O2/test.reloc --pc 400765 --size 5
Decompiling instr:movl $0xfffffffd, %eax Done...


Decompiling instr:cmpl $0x9, %ecx...
Instr: cmpl $0x9, %ecx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//cmpl__0x9___ecx
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//cmpl__0x9___ecx/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_cmpl__0x9___ecx

Executing: ${HOME}/Github/validating-binary-decompilation/tests/scripts//find_pc_in_relocinfo.pl --binary ../binary_O2/test.reloc --pc 40076a --size 3
Decompiling instr:cmpl $0x9, %ecx Done...


Decompiling instr:jne .L_4008f9...
Instr: jne .L_4008f9
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//jne_.L_4008f9
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//jne_.L_4008f9/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_
FuncCache skipped: routine_jne_.L_4008f9
Decompiling instr:jne .L_4008f9 Done...


Decompiling instr:movzbl 0x6(%rbx), %edi...
Instr: movzbl 0x6(%rbx), %edi
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movzbl_0x6__rbx____edi
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movzbl_0x6__rbx____edi/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movzbl_0x6__rbx____edi
Decompiling instr:movzbl 0x6(%rbx), %edi Done...


Decompiling instr:callq .to_byte...
Instr: callq .to_byte
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//callq_.to_byte
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//callq_.to_byte/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_
FuncCache skipped: routine_callq_.to_byte
Decompiling instr:callq .to_byte Done...


Decompiling instr:movl %eax, %ecx...
Instr: movl %eax, %ecx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__eax___ecx
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__eax___ecx/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_
FuncCache skipped: routine_movl__eax___ecx
Decompiling instr:movl %eax, %ecx Done...


Decompiling instr:andl $0x7fffffff, %ecx...
Instr: andl $0x7fffffff, %ecx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//andl__0x7fffffff___ecx
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//andl__0x7fffffff___ecx/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_
FuncCache inserted: routine_andl__0x7fffffff___ecx

Executing: ${HOME}/Github/validating-binary-decompilation/tests/scripts//find_pc_in_relocinfo.pl --binary ../binary_O2/test.reloc --pc 40077e --size 6
Decompiling instr:andl $0x7fffffff, %ecx Done...


Decompiling instr:movl $0xfffffffc, %eax...
Instr: movl $0xfffffffc, %eax
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0xfffffffc___eax
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0xfffffffc___eax/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__0xfffffffc___eax

Executing: ${HOME}/Github/validating-binary-decompilation/tests/scripts//find_pc_in_relocinfo.pl --binary ../binary_O2/test.reloc --pc 400784 --size 5
Decompiling instr:movl $0xfffffffc, %eax Done...


Decompiling instr:cmpl $0xd, %ecx...
Instr: cmpl $0xd, %ecx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//cmpl__0xd___ecx
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//cmpl__0xd___ecx/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3CMPI2RnIjE2InIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_cmpl__0xd___ecx

Executing: ${HOME}/Github/validating-binary-decompilation/tests/scripts//find_pc_in_relocinfo.pl --binary ../binary_O2/test.reloc --pc 400789 --size 3
Decompiling instr:cmpl $0xd, %ecx Done...


Decompiling instr:jne .L_4008f9...
Instr: jne .L_4008f9
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//jne_.L_4008f9
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//jne_.L_4008f9/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3JNZEP6MemoryR5State3RnWIhE2InImES7_
FuncCache skipped: routine_jne_.L_4008f9
Decompiling instr:jne .L_4008f9 Done...


Decompiling instr:movzbl 0x7(%rbx), %edi...
Instr: movzbl 0x7(%rbx), %edi
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movzbl_0x7__rbx____edi
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movzbl_0x7__rbx____edi/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L5MOVZXI3RnWImE2MnIhEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movzbl_0x7__rbx____edi
Decompiling instr:movzbl 0x7(%rbx), %edi Done...


Decompiling instr:callq .to_byte...
Instr: callq .to_byte
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//callq_.to_byte
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//callq_.to_byte/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L4CALLI2InImEEEP6MemoryS4_R5StateT_S2_
FuncCache skipped: routine_callq_.to_byte
Decompiling instr:callq .to_byte Done...


Decompiling instr:movl %eax, %ecx...
Instr: movl %eax, %ecx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__eax___ecx
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__eax___ecx/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_
FuncCache skipped: routine_movl__eax___ecx
Decompiling instr:movl %eax, %ecx Done...


Decompiling instr:incl %ecx...
Instr: incl %ecx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//incl__ecx
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//incl__ecx/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache inserted: _ZN12_GLOBAL__N_1L3INCI3RnWImE2RnIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_incl__ecx
Decompiling instr:incl %ecx Done...


Decompiling instr:andl $0xfffffffe, %ecx...
Instr: andl $0xfffffffe, %ecx
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//andl__0xfffffffe___ecx
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//andl__0xfffffffe___ecx/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3ANDI3RnWImE2RnIjE2InIjEEEP6MemoryS8_R5StateT_T0_T1_
FuncCache inserted: routine_andl__0xfffffffe___ecx

Executing: ${HOME}/Github/validating-binary-decompilation/tests/scripts//find_pc_in_relocinfo.pl --binary ../binary_O2/test.reloc --pc 40079f --size 3
Decompiling instr:andl $0xfffffffe, %ecx Done...


Decompiling instr:movl $0xfffffffb, %eax...
Instr: movl $0xfffffffb, %eax
Workdir: /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0xfffffffb___eax
Creating artifacts...
Already Exists
Creating artifacts... Done.
Running artifacts...
Reusing Declutter Output...

Executing: cat /home/ubuntu/Github/validating-binary-decompilation/tests/compositional_artifacts_single_instruction_decompilation//movl__0xfffffffb___eax/test.mod.ll
Running artifacts...Done.

Multiple defintions of @seg_4003a0__text
Multiple defintions of @seg_400548__eh_frame
FuncCache skipped: _ZN12_GLOBAL__N_1L3MOVI3RnWImE2InIjEEEP6MemoryS6_R5StateT_T0_
FuncCache inserted: routine_movl__0xfffffffb___eax
