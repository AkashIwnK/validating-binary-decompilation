========================================================
Source line mapping for function: sub_70
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <70>	pushq	%rbp
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <70>	pushq	%rbp
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <70>	pushq	%rbp
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <70>	pushq	%rbp
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <70>	pushq	%rbp
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <70>	pushq	%rbp
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <70>	pushq	%rbp
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <70>	pushq	%rbp
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <70>	pushq	%rbp
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <70>	pushq	%rbp
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <70>	pushq	%rbp
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <70>	pushq	%rbp
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <70>	pushq	%rbp
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <70>	pushq	%rbp
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <70>	pushq	%rbp
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <70>	pushq	%rbp
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <70>	pushq	%rbp
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <70>	pushq	%rbp
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <70>	pushq	%rbp
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <70>	pushq	%rbp
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <70>	pushq	%rbp
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <70>	pushq	%rbp
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <70>	pushq	%rbp
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <70>	pushq	%rbp
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <70>	pushq	%rbp
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <70>	pushq	%rbp
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <70>	pushq	%rbp
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <70>	pushq	%rbp
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <70>	pushq	%rbp
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <70>	pushq	%rbp
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <70>	pushq	%rbp
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <70>	pushq	%rbp
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <70>	pushq	%rbp
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <70>	pushq	%rbp
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <70>	pushq	%rbp
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <70>	pushq	%rbp
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <70>	pushq	%rbp
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <70>	pushq	%rbp
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <70>	pushq	%rbp
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <70>	pushq	%rbp
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <70>	pushq	%rbp
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <70>	pushq	%rbp
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <70>	pushq	%rbp
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <70>	pushq	%rbp
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <70>	pushq	%rbp
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <70>	pushq	%rbp
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <70>	pushq	%rbp
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <70>	pushq	%rbp
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <70>	pushq	%rbp
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <70>	pushq	%rbp
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <70>	pushq	%rbp
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <70>	pushq	%rbp
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <70>	pushq	%rbp
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <70>	pushq	%rbp
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <70>	pushq	%rbp
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <70>	pushq	%rbp
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <70>	pushq	%rbp
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <70>	pushq	%rbp
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <70>	pushq	%rbp
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <70>	pushq	%rbp
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <70>	pushq	%rbp
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <70>	pushq	%rbp
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <70>	pushq	%rbp
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <70>	pushq	%rbp
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <70>	pushq	%rbp
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <70>	pushq	%rbp
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <70>	pushq	%rbp
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <70>	pushq	%rbp
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <70>	pushq	%rbp
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <70>	pushq	%rbp
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <70>	pushq	%rbp
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <70>	pushq	%rbp
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <70>	pushq	%rbp
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <70>	pushq	%rbp
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <70>	pushq	%rbp
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <70>	pushq	%rbp

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <70>	pushq	%rbp
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <70>	pushq	%rbp
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <70>	pushq	%rbp
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <70>	pushq	%rbp
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <70>	pushq	%rbp
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <70>	pushq	%rbp
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <70>	pushq	%rbp
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <70>	pushq	%rbp
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <70>	pushq	%rbp
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <70>	pushq	%rbp
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <70>	pushq	%rbp
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <70>	pushq	%rbp
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <70>	pushq	%rbp
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <70>	pushq	%rbp
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <70>	pushq	%rbp
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <70>	pushq	%rbp
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <70>	pushq	%rbp
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <70>	pushq	%rbp
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <70>	pushq	%rbp
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <70>	pushq	%rbp
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <70>	pushq	%rbp
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <70>	pushq	%rbp
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <70>	pushq	%rbp
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <70>	pushq	%rbp
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <70>	pushq	%rbp
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <70>	pushq	%rbp
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <70>	pushq	%rbp
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
288 :   %77 = load i64* %RBP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp
289 :   %78 = load i64* %RSP_val, !mcsema_real_eip !2 :          <70>	pushq	%rbp

290 :   %79 = add i64 %78, -8 : NIL

291 :   %80 = inttoptr i64 %79 to i64*, !mcsema_real_eip !2 :          <70>	pushq	%rbp
292 :   store i64 %77, i64* %80, !mcsema_real_eip !2 :          <70>	pushq	%rbp

293 :   store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :          <71>	movq	%rsp, %rbp

294 :   %81 = add i64 %78, -24 : NIL

295 :   %82 = xor i64 %81, %79, !mcsema_real_eip !4 :          <74>	subq	$16, %rsp

296 :   %83 = and i64 %82, 16 : NIL
297 :   %84 = icmp eq i64 %83, 0 : NIL

298 :   store i1 %84, i1* %AF_val, !mcsema_real_eip !4 :          <74>	subq	$16, %rsp
299 :   %85 = trunc i64 %81 to i8, !mcsema_real_eip !4 :          <74>	subq	$16, %rsp
300 :   %86 = tail call i8 @llvm.ctpop.i8(i8 %85), !mcsema_real_eip !4 :          <74>	subq	$16, %rsp

301 :   %87 = and i8 %86, 1 : NIL
302 :   %88 = icmp eq i8 %87, 0 : NIL

303 :   store i1 %88, i1* %PF_val, !mcsema_real_eip !4 :          <74>	subq	$16, %rsp
304 :   %89 = icmp eq i64 %81, 0, !mcsema_real_eip !4 :          <74>	subq	$16, %rsp
305 :   store i1 %89, i1* %ZF_val, !mcsema_real_eip !4 :          <74>	subq	$16, %rsp

306 :   %90 = icmp slt i64 %81, 0 : NIL

307 :   store i1 %90, i1* %SF_val, !mcsema_real_eip !4 :          <74>	subq	$16, %rsp
308 :   %91 = icmp ult i64 %79, 16, !mcsema_real_eip !4 :          <74>	subq	$16, %rsp
309 :   store i1 %91, i1* %CF_val, !mcsema_real_eip !4 :          <74>	subq	$16, %rsp
310 :   %92 = and i64 %82, %79, !mcsema_real_eip !4 :          <74>	subq	$16, %rsp

311 :   %93 = icmp slt i64 %92, 0 : NIL

312 :   store i1 %93, i1* %OF_val, !mcsema_real_eip !4 :          <74>	subq	$16, %rsp
313 :   store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :          <74>	subq	$16, %rsp

314 :   store i64 10, i64* %RDI_val, !mcsema_real_eip !5 :          <78>	movl	$10, %edi

315 :   store i64 20, i64* %RSI_val, !mcsema_real_eip !6 :          <7d>	movl	$20, %esi

316 :   %94 = load i64* %RBP_val, !mcsema_real_eip !7 :          <82>	movl	$0, -4(%rbp)
317 :   %95 = add i64 %94, -4, !mcsema_real_eip !7 :          <82>	movl	$0, -4(%rbp)
318 :   %96 = inttoptr i64 %95 to i64*, !mcsema_real_eip !7 :          <82>	movl	$0, -4(%rbp)

319 :   %97 = bitcast i64* %96 to i32* : NIL

320 :   store i32 0, i32* %97, !mcsema_real_eip !7 :          <82>	movl	$0, -4(%rbp)

321 :   %98 = load i64* %RSP_val, !mcsema_real_eip !8 :          <89>	callq	-142

322 :   %99 = add i64 %98, -8 : NIL

323 :   %100 = inttoptr i64 %99 to i64*, !mcsema_real_eip !8 :          <89>	callq	-142
324 :   store i64 -4981261766360305936, i64* %100, !mcsema_real_eip !8 :          <89>	callq	-142
325 :   store i64 %99, i64* %RSP_val, !mcsema_real_eip !8 :          <89>	callq	-142
326 :   %101 = load i64* %RAX_val, !mcsema_real_eip !8 :          <89>	callq	-142
327 :   store i64 %101, i64* %RAX, !mcsema_real_eip !8 :          <89>	callq	-142
328 :   %102 = load i64* %RBX_val, !mcsema_real_eip !8 :          <89>	callq	-142
329 :   store i64 %102, i64* %RBX, !mcsema_real_eip !8 :          <89>	callq	-142
330 :   %103 = load i64* %RCX_val, !mcsema_real_eip !8 :          <89>	callq	-142
331 :   store i64 %103, i64* %RCX, !mcsema_real_eip !8 :          <89>	callq	-142
332 :   %104 = load i64* %RDX_val, !mcsema_real_eip !8 :          <89>	callq	-142
333 :   store i64 %104, i64* %RDX, !mcsema_real_eip !8 :          <89>	callq	-142
334 :   %105 = load i64* %RSI_val, !mcsema_real_eip !8 :          <89>	callq	-142
335 :   store i64 %105, i64* %RSI, !mcsema_real_eip !8 :          <89>	callq	-142
336 :   %106 = load i64* %RDI_val, !mcsema_real_eip !8 :          <89>	callq	-142
337 :   store i64 %106, i64* %RDI, !mcsema_real_eip !8 :          <89>	callq	-142
338 :   %107 = load i64* %RSP_val, !mcsema_real_eip !8 :          <89>	callq	-142
339 :   store i64 %107, i64* %RSP, !mcsema_real_eip !8 :          <89>	callq	-142
340 :   %108 = load i64* %RBP_val, !mcsema_real_eip !8 :          <89>	callq	-142
341 :   store i64 %108, i64* %RBP, !mcsema_real_eip !8 :          <89>	callq	-142
342 :   %109 = load i64* %R8_val, !mcsema_real_eip !8 :          <89>	callq	-142
343 :   store i64 %109, i64* %R8, !mcsema_real_eip !8 :          <89>	callq	-142
344 :   %110 = load i64* %R9_val, !mcsema_real_eip !8 :          <89>	callq	-142
345 :   store i64 %110, i64* %R9, !mcsema_real_eip !8 :          <89>	callq	-142
346 :   %111 = load i64* %R10_val, !mcsema_real_eip !8 :          <89>	callq	-142
347 :   store i64 %111, i64* %R10, !mcsema_real_eip !8 :          <89>	callq	-142
348 :   %112 = load i64* %R11_val, !mcsema_real_eip !8 :          <89>	callq	-142
349 :   store i64 %112, i64* %R11, !mcsema_real_eip !8 :          <89>	callq	-142
350 :   %113 = load i64* %R12_val, !mcsema_real_eip !8 :          <89>	callq	-142
351 :   store i64 %113, i64* %R12, !mcsema_real_eip !8 :          <89>	callq	-142
352 :   %114 = load i64* %R13_val, !mcsema_real_eip !8 :          <89>	callq	-142
353 :   store i64 %114, i64* %R13, !mcsema_real_eip !8 :          <89>	callq	-142
354 :   %115 = load i64* %R14_val, !mcsema_real_eip !8 :          <89>	callq	-142
355 :   store i64 %115, i64* %R14, !mcsema_real_eip !8 :          <89>	callq	-142
356 :   %116 = load i64* %R15_val, !mcsema_real_eip !8 :          <89>	callq	-142
357 :   store i64 %116, i64* %R15, !mcsema_real_eip !8 :          <89>	callq	-142
358 :   %117 = load i64* %RIP_val, !mcsema_real_eip !8 :          <89>	callq	-142
359 :   store i64 %117, i64* %RIP, !mcsema_real_eip !8 :          <89>	callq	-142
360 :   %118 = load i1* %CF_val, !mcsema_real_eip !8 :          <89>	callq	-142
361 :   store i1 %118, i1* %CF, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
362 :   %119 = load i1* %PF_val, !mcsema_real_eip !8 :          <89>	callq	-142
363 :   store i1 %119, i1* %PF, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
364 :   %120 = load i1* %AF_val, !mcsema_real_eip !8 :          <89>	callq	-142
365 :   store i1 %120, i1* %AF, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
366 :   %121 = load i1* %ZF_val, !mcsema_real_eip !8 :          <89>	callq	-142
367 :   store i1 %121, i1* %ZF, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
368 :   %122 = load i1* %SF_val, !mcsema_real_eip !8 :          <89>	callq	-142
369 :   store i1 %122, i1* %SF, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
370 :   %123 = load i1* %OF_val, !mcsema_real_eip !8 :          <89>	callq	-142
371 :   store i1 %123, i1* %OF, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
372 :   %124 = load i1* %DF_val, !mcsema_real_eip !8 :          <89>	callq	-142
373 :   store i1 %124, i1* %DF, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
374 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !8 :          <89>	callq	-142
375 :   %125 = load i1* %FPU_B_val, !mcsema_real_eip !8 :          <89>	callq	-142
376 :   store i1 %125, i1* %FPU_B, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
377 :   %126 = load i1* %FPU_C3_val, !mcsema_real_eip !8 :          <89>	callq	-142
378 :   store i1 %126, i1* %FPU_C3, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
379 :   %127 = load i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <89>	callq	-142
380 :   store i3 %127, i3* %FPU_TOP, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
381 :   %128 = load i1* %FPU_C2_val, !mcsema_real_eip !8 :          <89>	callq	-142
382 :   store i1 %128, i1* %FPU_C2, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
383 :   %129 = load i1* %FPU_C1_val, !mcsema_real_eip !8 :          <89>	callq	-142
384 :   store i1 %129, i1* %FPU_C1, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
385 :   %130 = load i1* %FPU_C0_val, !mcsema_real_eip !8 :          <89>	callq	-142
386 :   store i1 %130, i1* %FPU_C0, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
387 :   %131 = load i1* %FPU_ES_val, !mcsema_real_eip !8 :          <89>	callq	-142
388 :   store i1 %131, i1* %FPU_ES, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
389 :   %132 = load i1* %FPU_SF_val, !mcsema_real_eip !8 :          <89>	callq	-142
390 :   store i1 %132, i1* %FPU_SF, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
391 :   %133 = load i1* %FPU_PE_val, !mcsema_real_eip !8 :          <89>	callq	-142
392 :   store i1 %133, i1* %FPU_PE, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
393 :   %134 = load i1* %FPU_UE_val, !mcsema_real_eip !8 :          <89>	callq	-142
394 :   store i1 %134, i1* %FPU_UE, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
395 :   %135 = load i1* %FPU_OE_val, !mcsema_real_eip !8 :          <89>	callq	-142
396 :   store i1 %135, i1* %FPU_OE, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
397 :   %136 = load i1* %FPU_ZE_val, !mcsema_real_eip !8 :          <89>	callq	-142
398 :   store i1 %136, i1* %FPU_ZE, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
399 :   %137 = load i1* %FPU_DE_val, !mcsema_real_eip !8 :          <89>	callq	-142
400 :   store i1 %137, i1* %FPU_DE, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
401 :   %138 = load i1* %FPU_IE_val, !mcsema_real_eip !8 :          <89>	callq	-142
402 :   store i1 %138, i1* %FPU_IE, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
403 :   %139 = load i1* %FPU_X_val, !mcsema_real_eip !8 :          <89>	callq	-142
404 :   store i1 %139, i1* %FPU_X, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
405 :   %140 = load i2* %FPU_RC_val, !mcsema_real_eip !8 :          <89>	callq	-142
406 :   store i2 %140, i2* %FPU_RC, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
407 :   %141 = load i2* %FPU_PC_val, !mcsema_real_eip !8 :          <89>	callq	-142
408 :   store i2 %141, i2* %FPU_PC, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
409 :   %142 = load i1* %FPU_PM_val, !mcsema_real_eip !8 :          <89>	callq	-142
410 :   store i1 %142, i1* %FPU_PM, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
411 :   %143 = load i1* %FPU_UM_val, !mcsema_real_eip !8 :          <89>	callq	-142
412 :   store i1 %143, i1* %FPU_UM, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
413 :   %144 = load i1* %FPU_OM_val, !mcsema_real_eip !8 :          <89>	callq	-142
414 :   store i1 %144, i1* %FPU_OM, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
415 :   %145 = load i1* %FPU_ZM_val, !mcsema_real_eip !8 :          <89>	callq	-142
416 :   store i1 %145, i1* %FPU_ZM, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
417 :   %146 = load i1* %FPU_DM_val, !mcsema_real_eip !8 :          <89>	callq	-142
418 :   store i1 %146, i1* %FPU_DM, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
419 :   %147 = load i1* %FPU_IM_val, !mcsema_real_eip !8 :          <89>	callq	-142
420 :   store i1 %147, i1* %FPU_IM, align 1, !mcsema_real_eip !8 :          <89>	callq	-142

421 :   %148 = load i64* %53, align 4 : NIL
422 :   store i64 %148, i64* %52, align 4 : NIL

423 :   %149 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !8 :          <89>	callq	-142
424 :   store i16 %149, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
425 :   %150 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !8 :          <89>	callq	-142
426 :   store i64 %150, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
427 :   %151 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !8 :          <89>	callq	-142
428 :   store i16 %151, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
429 :   %152 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !8 :          <89>	callq	-142
430 :   store i64 %152, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
431 :   %153 = load i128* %XMM0_val, !mcsema_real_eip !8 :          <89>	callq	-142
432 :   store i128 %153, i128* %XMM0, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
433 :   %154 = load i128* %XMM1_val, !mcsema_real_eip !8 :          <89>	callq	-142
434 :   store i128 %154, i128* %XMM1, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
435 :   %155 = load i128* %XMM2_val, !mcsema_real_eip !8 :          <89>	callq	-142
436 :   store i128 %155, i128* %XMM2, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
437 :   %156 = load i128* %XMM3_val, !mcsema_real_eip !8 :          <89>	callq	-142
438 :   store i128 %156, i128* %XMM3, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
439 :   %157 = load i128* %XMM4_val, !mcsema_real_eip !8 :          <89>	callq	-142
440 :   store i128 %157, i128* %XMM4, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
441 :   %158 = load i128* %XMM5_val, !mcsema_real_eip !8 :          <89>	callq	-142
442 :   store i128 %158, i128* %XMM5, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
443 :   %159 = load i128* %XMM6_val, !mcsema_real_eip !8 :          <89>	callq	-142
444 :   store i128 %159, i128* %XMM6, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
445 :   %160 = load i128* %XMM7_val, !mcsema_real_eip !8 :          <89>	callq	-142
446 :   store i128 %160, i128* %XMM7, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
447 :   %161 = load i128* %XMM8_val, !mcsema_real_eip !8 :          <89>	callq	-142
448 :   store i128 %161, i128* %XMM8, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
449 :   %162 = load i128* %XMM9_val, !mcsema_real_eip !8 :          <89>	callq	-142
450 :   store i128 %162, i128* %XMM9, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
451 :   %163 = load i128* %XMM10_val, !mcsema_real_eip !8 :          <89>	callq	-142
452 :   store i128 %163, i128* %XMM10, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
453 :   %164 = load i128* %XMM11_val, !mcsema_real_eip !8 :          <89>	callq	-142
454 :   store i128 %164, i128* %XMM11, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
455 :   %165 = load i128* %XMM12_val, !mcsema_real_eip !8 :          <89>	callq	-142
456 :   store i128 %165, i128* %XMM12, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
457 :   %166 = load i128* %XMM13_val, !mcsema_real_eip !8 :          <89>	callq	-142
458 :   store i128 %166, i128* %XMM13, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
459 :   %167 = load i128* %XMM14_val, !mcsema_real_eip !8 :          <89>	callq	-142
460 :   store i128 %167, i128* %XMM14, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
461 :   %168 = load i128* %XMM15_val, !mcsema_real_eip !8 :          <89>	callq	-142
462 :   store i128 %168, i128* %XMM15, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
463 :   %169 = load i64* %STACK_BASE_val, !mcsema_real_eip !8 :          <89>	callq	-142
464 :   store i64 %169, i64* %STACK_BASE, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
465 :   %170 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !8 :          <89>	callq	-142
466 :   store i64 %170, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
467 :   tail call x86_64_sysvcc void @sub_0(%struct.regs* %0), !mcsema_real_eip !8 :          <89>	callq	-142
468 :   %171 = load i64* %RAX, !mcsema_real_eip !8 :          <89>	callq	-142
469 :   store i64 %171, i64* %RAX_val, !mcsema_real_eip !8 :          <89>	callq	-142
470 :   %172 = load i64* %RBX, !mcsema_real_eip !8 :          <89>	callq	-142
471 :   store i64 %172, i64* %RBX_val, !mcsema_real_eip !8 :          <89>	callq	-142
472 :   %173 = load i64* %RCX, !mcsema_real_eip !8 :          <89>	callq	-142
473 :   store i64 %173, i64* %RCX_val, !mcsema_real_eip !8 :          <89>	callq	-142
474 :   %174 = load i64* %RDX, !mcsema_real_eip !8 :          <89>	callq	-142
475 :   store i64 %174, i64* %RDX_val, !mcsema_real_eip !8 :          <89>	callq	-142
476 :   %175 = load i64* %RSI, !mcsema_real_eip !8 :          <89>	callq	-142
477 :   store i64 %175, i64* %RSI_val, !mcsema_real_eip !8 :          <89>	callq	-142
478 :   %176 = load i64* %RDI, !mcsema_real_eip !8 :          <89>	callq	-142
479 :   store i64 %176, i64* %RDI_val, !mcsema_real_eip !8 :          <89>	callq	-142
480 :   %177 = load i64* %RSP, !mcsema_real_eip !8 :          <89>	callq	-142
481 :   store i64 %177, i64* %RSP_val, !mcsema_real_eip !8 :          <89>	callq	-142
482 :   %178 = load i64* %RBP, !mcsema_real_eip !8 :          <89>	callq	-142
483 :   store i64 %178, i64* %RBP_val, !mcsema_real_eip !8 :          <89>	callq	-142
484 :   %179 = load i64* %R8, !mcsema_real_eip !8 :          <89>	callq	-142
485 :   store i64 %179, i64* %R8_val, !mcsema_real_eip !8 :          <89>	callq	-142
486 :   %180 = load i64* %R9, !mcsema_real_eip !8 :          <89>	callq	-142
487 :   store i64 %180, i64* %R9_val, !mcsema_real_eip !8 :          <89>	callq	-142
488 :   %181 = load i64* %R10, !mcsema_real_eip !8 :          <89>	callq	-142
489 :   store i64 %181, i64* %R10_val, !mcsema_real_eip !8 :          <89>	callq	-142
490 :   %182 = load i64* %R11, !mcsema_real_eip !8 :          <89>	callq	-142
491 :   store i64 %182, i64* %R11_val, !mcsema_real_eip !8 :          <89>	callq	-142
492 :   %183 = load i64* %R12, !mcsema_real_eip !8 :          <89>	callq	-142
493 :   store i64 %183, i64* %R12_val, !mcsema_real_eip !8 :          <89>	callq	-142
494 :   %184 = load i64* %R13, !mcsema_real_eip !8 :          <89>	callq	-142
495 :   store i64 %184, i64* %R13_val, !mcsema_real_eip !8 :          <89>	callq	-142
496 :   %185 = load i64* %R14, !mcsema_real_eip !8 :          <89>	callq	-142
497 :   store i64 %185, i64* %R14_val, !mcsema_real_eip !8 :          <89>	callq	-142
498 :   %186 = load i64* %R15, !mcsema_real_eip !8 :          <89>	callq	-142
499 :   store i64 %186, i64* %R15_val, !mcsema_real_eip !8 :          <89>	callq	-142
500 :   %187 = load i64* %RIP, !mcsema_real_eip !8 :          <89>	callq	-142
501 :   store i64 %187, i64* %RIP_val, !mcsema_real_eip !8 :          <89>	callq	-142
502 :   %188 = load i1* %CF, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
503 :   store i1 %188, i1* %CF_val, !mcsema_real_eip !8 :          <89>	callq	-142
504 :   %189 = load i1* %PF, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
505 :   store i1 %189, i1* %PF_val, !mcsema_real_eip !8 :          <89>	callq	-142
506 :   %190 = load i1* %AF, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
507 :   store i1 %190, i1* %AF_val, !mcsema_real_eip !8 :          <89>	callq	-142
508 :   %191 = load i1* %ZF, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
509 :   store i1 %191, i1* %ZF_val, !mcsema_real_eip !8 :          <89>	callq	-142
510 :   %192 = load i1* %SF, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
511 :   store i1 %192, i1* %SF_val, !mcsema_real_eip !8 :          <89>	callq	-142
512 :   %193 = load i1* %OF, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
513 :   store i1 %193, i1* %OF_val, !mcsema_real_eip !8 :          <89>	callq	-142
514 :   %194 = load i1* %DF, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
515 :   store i1 %194, i1* %DF_val, !mcsema_real_eip !8 :          <89>	callq	-142
516 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !8 :          <89>	callq	-142
517 :   %195 = load i1* %FPU_B, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
518 :   store i1 %195, i1* %FPU_B_val, !mcsema_real_eip !8 :          <89>	callq	-142
519 :   %196 = load i1* %FPU_C3, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
520 :   store i1 %196, i1* %FPU_C3_val, !mcsema_real_eip !8 :          <89>	callq	-142
521 :   %197 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
522 :   store i3 %197, i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <89>	callq	-142
523 :   %198 = load i1* %FPU_C2, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
524 :   store i1 %198, i1* %FPU_C2_val, !mcsema_real_eip !8 :          <89>	callq	-142
525 :   %199 = load i1* %FPU_C1, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
526 :   store i1 %199, i1* %FPU_C1_val, !mcsema_real_eip !8 :          <89>	callq	-142
527 :   %200 = load i1* %FPU_C0, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
528 :   store i1 %200, i1* %FPU_C0_val, !mcsema_real_eip !8 :          <89>	callq	-142
529 :   %201 = load i1* %FPU_ES, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
530 :   store i1 %201, i1* %FPU_ES_val, !mcsema_real_eip !8 :          <89>	callq	-142
531 :   %202 = load i1* %FPU_SF, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
532 :   store i1 %202, i1* %FPU_SF_val, !mcsema_real_eip !8 :          <89>	callq	-142
533 :   %203 = load i1* %FPU_PE, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
534 :   store i1 %203, i1* %FPU_PE_val, !mcsema_real_eip !8 :          <89>	callq	-142
535 :   %204 = load i1* %FPU_UE, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
536 :   store i1 %204, i1* %FPU_UE_val, !mcsema_real_eip !8 :          <89>	callq	-142
537 :   %205 = load i1* %FPU_OE, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
538 :   store i1 %205, i1* %FPU_OE_val, !mcsema_real_eip !8 :          <89>	callq	-142
539 :   %206 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
540 :   store i1 %206, i1* %FPU_ZE_val, !mcsema_real_eip !8 :          <89>	callq	-142
541 :   %207 = load i1* %FPU_DE, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
542 :   store i1 %207, i1* %FPU_DE_val, !mcsema_real_eip !8 :          <89>	callq	-142
543 :   %208 = load i1* %FPU_IE, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
544 :   store i1 %208, i1* %FPU_IE_val, !mcsema_real_eip !8 :          <89>	callq	-142
545 :   %209 = load i1* %FPU_X, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
546 :   store i1 %209, i1* %FPU_X_val, !mcsema_real_eip !8 :          <89>	callq	-142
547 :   %210 = load i2* %FPU_RC, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
548 :   store i2 %210, i2* %FPU_RC_val, !mcsema_real_eip !8 :          <89>	callq	-142
549 :   %211 = load i2* %FPU_PC, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
550 :   store i2 %211, i2* %FPU_PC_val, !mcsema_real_eip !8 :          <89>	callq	-142
551 :   %212 = load i1* %FPU_PM, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
552 :   store i1 %212, i1* %FPU_PM_val, !mcsema_real_eip !8 :          <89>	callq	-142
553 :   %213 = load i1* %FPU_UM, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
554 :   store i1 %213, i1* %FPU_UM_val, !mcsema_real_eip !8 :          <89>	callq	-142
555 :   %214 = load i1* %FPU_OM, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
556 :   store i1 %214, i1* %FPU_OM_val, !mcsema_real_eip !8 :          <89>	callq	-142
557 :   %215 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
558 :   store i1 %215, i1* %FPU_ZM_val, !mcsema_real_eip !8 :          <89>	callq	-142
559 :   %216 = load i1* %FPU_DM, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
560 :   store i1 %216, i1* %FPU_DM_val, !mcsema_real_eip !8 :          <89>	callq	-142
561 :   %217 = load i1* %FPU_IM, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
562 :   store i1 %217, i1* %FPU_IM_val, !mcsema_real_eip !8 :          <89>	callq	-142

563 :   %218 = load i64* %52, align 4 : NIL
564 :   store i64 %218, i64* %53, align 4 : NIL

565 :   %219 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
566 :   store i16 %219, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !8 :          <89>	callq	-142
567 :   %220 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !8 :          <89>	callq	-142
568 :   store i64 %220, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !8 :          <89>	callq	-142
569 :   %221 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
570 :   store i16 %221, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !8 :          <89>	callq	-142
571 :   %222 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !8 :          <89>	callq	-142
572 :   store i64 %222, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !8 :          <89>	callq	-142
573 :   %223 = load i128* %XMM0, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
574 :   store i128 %223, i128* %XMM0_val, !mcsema_real_eip !8 :          <89>	callq	-142
575 :   %224 = load i128* %XMM1, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
576 :   store i128 %224, i128* %XMM1_val, !mcsema_real_eip !8 :          <89>	callq	-142
577 :   %225 = load i128* %XMM2, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
578 :   store i128 %225, i128* %XMM2_val, !mcsema_real_eip !8 :          <89>	callq	-142
579 :   %226 = load i128* %XMM3, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
580 :   store i128 %226, i128* %XMM3_val, !mcsema_real_eip !8 :          <89>	callq	-142
581 :   %227 = load i128* %XMM4, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
582 :   store i128 %227, i128* %XMM4_val, !mcsema_real_eip !8 :          <89>	callq	-142
583 :   %228 = load i128* %XMM5, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
584 :   store i128 %228, i128* %XMM5_val, !mcsema_real_eip !8 :          <89>	callq	-142
585 :   %229 = load i128* %XMM6, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
586 :   store i128 %229, i128* %XMM6_val, !mcsema_real_eip !8 :          <89>	callq	-142
587 :   %230 = load i128* %XMM7, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
588 :   store i128 %230, i128* %XMM7_val, !mcsema_real_eip !8 :          <89>	callq	-142
589 :   %231 = load i128* %XMM8, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
590 :   store i128 %231, i128* %XMM8_val, !mcsema_real_eip !8 :          <89>	callq	-142
591 :   %232 = load i128* %XMM9, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
592 :   store i128 %232, i128* %XMM9_val, !mcsema_real_eip !8 :          <89>	callq	-142
593 :   %233 = load i128* %XMM10, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
594 :   store i128 %233, i128* %XMM10_val, !mcsema_real_eip !8 :          <89>	callq	-142
595 :   %234 = load i128* %XMM11, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
596 :   store i128 %234, i128* %XMM11_val, !mcsema_real_eip !8 :          <89>	callq	-142
597 :   %235 = load i128* %XMM12, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
598 :   store i128 %235, i128* %XMM12_val, !mcsema_real_eip !8 :          <89>	callq	-142
599 :   %236 = load i128* %XMM13, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
600 :   store i128 %236, i128* %XMM13_val, !mcsema_real_eip !8 :          <89>	callq	-142
601 :   %237 = load i128* %XMM14, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
602 :   store i128 %237, i128* %XMM14_val, !mcsema_real_eip !8 :          <89>	callq	-142
603 :   %238 = load i128* %XMM15, align 1, !mcsema_real_eip !8 :          <89>	callq	-142
604 :   store i128 %238, i128* %XMM15_val, !mcsema_real_eip !8 :          <89>	callq	-142
605 :   %239 = load i64* %STACK_BASE, !mcsema_real_eip !8 :          <89>	callq	-142
606 :   store i64 %239, i64* %STACK_BASE_val, !mcsema_real_eip !8 :          <89>	callq	-142
607 :   %240 = load i64* %STACK_LIMIT, !mcsema_real_eip !8 :          <89>	callq	-142
608 :   store i64 %240, i64* %STACK_LIMIT_val, !mcsema_real_eip !8 :          <89>	callq	-142

609 :   %241 = load i64* %RBP_val, !mcsema_real_eip !9 :          <8e>	movl	%eax, -8(%rbp)
610 :   %242 = add i64 %241, -8, !mcsema_real_eip !9 :          <8e>	movl	%eax, -8(%rbp)
611 :   %243 = inttoptr i64 %242 to i64*, !mcsema_real_eip !9 :          <8e>	movl	%eax, -8(%rbp)
612 :   %244 = load i64* %RAX_val, !mcsema_real_eip !9 :          <8e>	movl	%eax, -8(%rbp)
613 :   %245 = trunc i64 %244 to i32, !mcsema_real_eip !9 :          <8e>	movl	%eax, -8(%rbp)

614 :   %246 = bitcast i64* %243 to i32* : NIL

615 :   store i32 %245, i32* %246, !mcsema_real_eip !9 :          <8e>	movl	%eax, -8(%rbp)

616 :   %247 = load i64* %RBP_val, !mcsema_real_eip !10 :          <91>	movl	-8(%rbp), %eax
617 :   %248 = add i64 %247, -8, !mcsema_real_eip !10 :          <91>	movl	-8(%rbp), %eax
618 :   %249 = inttoptr i64 %248 to i64*, !mcsema_real_eip !10 :          <91>	movl	-8(%rbp), %eax

619 :   %250 = bitcast i64* %249 to i32* : NIL

620 :   %251 = load i32* %250, !mcsema_real_eip !10 :          <91>	movl	-8(%rbp), %eax
621 :   %252 = zext i32 %251 to i64, !mcsema_real_eip !10 :          <91>	movl	-8(%rbp), %eax
622 :   store i64 %252, i64* %RAX_val, !mcsema_real_eip !10 :          <91>	movl	-8(%rbp), %eax

623 :   %253 = load i64* %RSP_val, !mcsema_real_eip !11 :          <94>	addq	$16, %rsp

624 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %253, i64 16) : NIL
625 :   %254 = extractvalue { i64, i1 } %uadd, 0 : NIL

626 :   %255 = xor i64 %254, %253, !mcsema_real_eip !11 :          <94>	addq	$16, %rsp

627 :   %256 = and i64 %255, 16 : NIL
628 :   %257 = icmp eq i64 %256, 0 : NIL

629 :   store i1 %257, i1* %AF_val, !mcsema_real_eip !11 :          <94>	addq	$16, %rsp

630 :   %258 = icmp slt i64 %254, 0 : NIL

631 :   store i1 %258, i1* %SF_val, !mcsema_real_eip !11 :          <94>	addq	$16, %rsp
632 :   %259 = icmp eq i64 %254, 0, !mcsema_real_eip !11 :          <94>	addq	$16, %rsp
633 :   store i1 %259, i1* %ZF_val, !mcsema_real_eip !11 :          <94>	addq	$16, %rsp
634 :   %260 = xor i64 %253, -9223372036854775808, !mcsema_real_eip !11 :          <94>	addq	$16, %rsp
635 :   %261 = and i64 %255, %260, !mcsema_real_eip !11 :          <94>	addq	$16, %rsp

636 :   %262 = icmp slt i64 %261, 0 : NIL

637 :   store i1 %262, i1* %OF_val, !mcsema_real_eip !11 :          <94>	addq	$16, %rsp
638 :   %263 = trunc i64 %254 to i8, !mcsema_real_eip !11 :          <94>	addq	$16, %rsp
639 :   %264 = tail call i8 @llvm.ctpop.i8(i8 %263), !mcsema_real_eip !11 :          <94>	addq	$16, %rsp

640 :   %265 = and i8 %264, 1 : NIL
641 :   %266 = icmp eq i8 %265, 0 : NIL

642 :   store i1 %266, i1* %PF_val, !mcsema_real_eip !11 :          <94>	addq	$16, %rsp

643 :   %267 = extractvalue { i64, i1 } %uadd, 1 : NIL

644 :   store i1 %267, i1* %CF_val, !mcsema_real_eip !11 :          <94>	addq	$16, %rsp
645 :   store i64 %254, i64* %RSP_val, !mcsema_real_eip !11 :          <94>	addq	$16, %rsp

646 :   %268 = inttoptr i64 %254 to i64*, !mcsema_real_eip !12 :          <98>	popq	%rbp
647 :   %269 = load i64* %268, !mcsema_real_eip !12 :          <98>	popq	%rbp
648 :   store i64 %269, i64* %RBP_val, !mcsema_real_eip !12 :          <98>	popq	%rbp

649 :   %270 = add i64 %254, 16, !mcsema_real_eip !13 :          <99>	retq
650 :   store i64 %270, i64* %RSP_val, !mcsema_real_eip !13 :          <99>	retq
651 :   %271 = load i64* %RAX_val, !mcsema_real_eip !13 :          <99>	retq
652 :   store i64 %271, i64* %RAX, !mcsema_real_eip !13 :          <99>	retq
653 :   %272 = load i64* %RBX_val, !mcsema_real_eip !13 :          <99>	retq
654 :   store i64 %272, i64* %RBX, !mcsema_real_eip !13 :          <99>	retq
655 :   %273 = load i64* %RCX_val, !mcsema_real_eip !13 :          <99>	retq
656 :   store i64 %273, i64* %RCX, !mcsema_real_eip !13 :          <99>	retq
657 :   %274 = load i64* %RDX_val, !mcsema_real_eip !13 :          <99>	retq
658 :   store i64 %274, i64* %RDX, !mcsema_real_eip !13 :          <99>	retq
659 :   %275 = load i64* %RSI_val, !mcsema_real_eip !13 :          <99>	retq
660 :   store i64 %275, i64* %RSI, !mcsema_real_eip !13 :          <99>	retq
661 :   %276 = load i64* %RDI_val, !mcsema_real_eip !13 :          <99>	retq
662 :   store i64 %276, i64* %RDI, !mcsema_real_eip !13 :          <99>	retq
663 :   %277 = load i64* %RSP_val, !mcsema_real_eip !13 :          <99>	retq
664 :   store i64 %277, i64* %RSP, !mcsema_real_eip !13 :          <99>	retq
665 :   %278 = load i64* %RBP_val, !mcsema_real_eip !13 :          <99>	retq
666 :   store i64 %278, i64* %RBP, !mcsema_real_eip !13 :          <99>	retq
667 :   %279 = load i64* %R8_val, !mcsema_real_eip !13 :          <99>	retq
668 :   store i64 %279, i64* %R8, !mcsema_real_eip !13 :          <99>	retq
669 :   %280 = load i64* %R9_val, !mcsema_real_eip !13 :          <99>	retq
670 :   store i64 %280, i64* %R9, !mcsema_real_eip !13 :          <99>	retq
671 :   %281 = load i64* %R10_val, !mcsema_real_eip !13 :          <99>	retq
672 :   store i64 %281, i64* %R10, !mcsema_real_eip !13 :          <99>	retq
673 :   %282 = load i64* %R11_val, !mcsema_real_eip !13 :          <99>	retq
674 :   store i64 %282, i64* %R11, !mcsema_real_eip !13 :          <99>	retq
675 :   %283 = load i64* %R12_val, !mcsema_real_eip !13 :          <99>	retq
676 :   store i64 %283, i64* %R12, !mcsema_real_eip !13 :          <99>	retq
677 :   %284 = load i64* %R13_val, !mcsema_real_eip !13 :          <99>	retq
678 :   store i64 %284, i64* %R13, !mcsema_real_eip !13 :          <99>	retq
679 :   %285 = load i64* %R14_val, !mcsema_real_eip !13 :          <99>	retq
680 :   store i64 %285, i64* %R14, !mcsema_real_eip !13 :          <99>	retq
681 :   %286 = load i64* %R15_val, !mcsema_real_eip !13 :          <99>	retq
682 :   store i64 %286, i64* %R15, !mcsema_real_eip !13 :          <99>	retq
683 :   %287 = load i64* %RIP_val, !mcsema_real_eip !13 :          <99>	retq
684 :   store i64 %287, i64* %RIP, !mcsema_real_eip !13 :          <99>	retq
685 :   %288 = load i1* %CF_val, !mcsema_real_eip !13 :          <99>	retq
686 :   store i1 %288, i1* %CF, align 1, !mcsema_real_eip !13 :          <99>	retq
687 :   %289 = load i1* %PF_val, !mcsema_real_eip !13 :          <99>	retq
688 :   store i1 %289, i1* %PF, align 1, !mcsema_real_eip !13 :          <99>	retq
689 :   %290 = load i1* %AF_val, !mcsema_real_eip !13 :          <99>	retq
690 :   store i1 %290, i1* %AF, align 1, !mcsema_real_eip !13 :          <99>	retq
691 :   %291 = load i1* %ZF_val, !mcsema_real_eip !13 :          <99>	retq
692 :   store i1 %291, i1* %ZF, align 1, !mcsema_real_eip !13 :          <99>	retq
693 :   %292 = load i1* %SF_val, !mcsema_real_eip !13 :          <99>	retq
694 :   store i1 %292, i1* %SF, align 1, !mcsema_real_eip !13 :          <99>	retq
695 :   %293 = load i1* %OF_val, !mcsema_real_eip !13 :          <99>	retq
696 :   store i1 %293, i1* %OF, align 1, !mcsema_real_eip !13 :          <99>	retq
697 :   %294 = load i1* %DF_val, !mcsema_real_eip !13 :          <99>	retq
698 :   store i1 %294, i1* %DF, align 1, !mcsema_real_eip !13 :          <99>	retq
699 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !13 :          <99>	retq
700 :   %295 = load i1* %FPU_B_val, !mcsema_real_eip !13 :          <99>	retq
701 :   store i1 %295, i1* %FPU_B, align 1, !mcsema_real_eip !13 :          <99>	retq
702 :   %296 = load i1* %FPU_C3_val, !mcsema_real_eip !13 :          <99>	retq
703 :   store i1 %296, i1* %FPU_C3, align 1, !mcsema_real_eip !13 :          <99>	retq
704 :   %297 = load i3* %FPU_TOP_val, !mcsema_real_eip !13 :          <99>	retq
705 :   store i3 %297, i3* %FPU_TOP, align 1, !mcsema_real_eip !13 :          <99>	retq
706 :   %298 = load i1* %FPU_C2_val, !mcsema_real_eip !13 :          <99>	retq
707 :   store i1 %298, i1* %FPU_C2, align 1, !mcsema_real_eip !13 :          <99>	retq
708 :   %299 = load i1* %FPU_C1_val, !mcsema_real_eip !13 :          <99>	retq
709 :   store i1 %299, i1* %FPU_C1, align 1, !mcsema_real_eip !13 :          <99>	retq
710 :   %300 = load i1* %FPU_C0_val, !mcsema_real_eip !13 :          <99>	retq
711 :   store i1 %300, i1* %FPU_C0, align 1, !mcsema_real_eip !13 :          <99>	retq
712 :   %301 = load i1* %FPU_ES_val, !mcsema_real_eip !13 :          <99>	retq
713 :   store i1 %301, i1* %FPU_ES, align 1, !mcsema_real_eip !13 :          <99>	retq
714 :   %302 = load i1* %FPU_SF_val, !mcsema_real_eip !13 :          <99>	retq
715 :   store i1 %302, i1* %FPU_SF, align 1, !mcsema_real_eip !13 :          <99>	retq
716 :   %303 = load i1* %FPU_PE_val, !mcsema_real_eip !13 :          <99>	retq
717 :   store i1 %303, i1* %FPU_PE, align 1, !mcsema_real_eip !13 :          <99>	retq
718 :   %304 = load i1* %FPU_UE_val, !mcsema_real_eip !13 :          <99>	retq
719 :   store i1 %304, i1* %FPU_UE, align 1, !mcsema_real_eip !13 :          <99>	retq
720 :   %305 = load i1* %FPU_OE_val, !mcsema_real_eip !13 :          <99>	retq
721 :   store i1 %305, i1* %FPU_OE, align 1, !mcsema_real_eip !13 :          <99>	retq
722 :   %306 = load i1* %FPU_ZE_val, !mcsema_real_eip !13 :          <99>	retq
723 :   store i1 %306, i1* %FPU_ZE, align 1, !mcsema_real_eip !13 :          <99>	retq
724 :   %307 = load i1* %FPU_DE_val, !mcsema_real_eip !13 :          <99>	retq
725 :   store i1 %307, i1* %FPU_DE, align 1, !mcsema_real_eip !13 :          <99>	retq
726 :   %308 = load i1* %FPU_IE_val, !mcsema_real_eip !13 :          <99>	retq
727 :   store i1 %308, i1* %FPU_IE, align 1, !mcsema_real_eip !13 :          <99>	retq
728 :   %309 = load i1* %FPU_X_val, !mcsema_real_eip !13 :          <99>	retq
729 :   store i1 %309, i1* %FPU_X, align 1, !mcsema_real_eip !13 :          <99>	retq
730 :   %310 = load i2* %FPU_RC_val, !mcsema_real_eip !13 :          <99>	retq
731 :   store i2 %310, i2* %FPU_RC, align 1, !mcsema_real_eip !13 :          <99>	retq
732 :   %311 = load i2* %FPU_PC_val, !mcsema_real_eip !13 :          <99>	retq
733 :   store i2 %311, i2* %FPU_PC, align 1, !mcsema_real_eip !13 :          <99>	retq
734 :   %312 = load i1* %FPU_PM_val, !mcsema_real_eip !13 :          <99>	retq
735 :   store i1 %312, i1* %FPU_PM, align 1, !mcsema_real_eip !13 :          <99>	retq
736 :   %313 = load i1* %FPU_UM_val, !mcsema_real_eip !13 :          <99>	retq
737 :   store i1 %313, i1* %FPU_UM, align 1, !mcsema_real_eip !13 :          <99>	retq
738 :   %314 = load i1* %FPU_OM_val, !mcsema_real_eip !13 :          <99>	retq
739 :   store i1 %314, i1* %FPU_OM, align 1, !mcsema_real_eip !13 :          <99>	retq
740 :   %315 = load i1* %FPU_ZM_val, !mcsema_real_eip !13 :          <99>	retq
741 :   store i1 %315, i1* %FPU_ZM, align 1, !mcsema_real_eip !13 :          <99>	retq
742 :   %316 = load i1* %FPU_DM_val, !mcsema_real_eip !13 :          <99>	retq
743 :   store i1 %316, i1* %FPU_DM, align 1, !mcsema_real_eip !13 :          <99>	retq
744 :   %317 = load i1* %FPU_IM_val, !mcsema_real_eip !13 :          <99>	retq
745 :   store i1 %317, i1* %FPU_IM, align 1, !mcsema_real_eip !13 :          <99>	retq

746 :   %318 = load i64* %53, align 4 : NIL
747 :   store i64 %318, i64* %52, align 4 : NIL

748 :   %319 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !13 :          <99>	retq
749 :   store i16 %319, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !13 :          <99>	retq
750 :   %320 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !13 :          <99>	retq
751 :   store i64 %320, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !13 :          <99>	retq
752 :   %321 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !13 :          <99>	retq
753 :   store i16 %321, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !13 :          <99>	retq
754 :   %322 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !13 :          <99>	retq
755 :   store i64 %322, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !13 :          <99>	retq
756 :   %323 = load i128* %XMM0_val, !mcsema_real_eip !13 :          <99>	retq
757 :   store i128 %323, i128* %XMM0, align 1, !mcsema_real_eip !13 :          <99>	retq
758 :   %324 = load i128* %XMM1_val, !mcsema_real_eip !13 :          <99>	retq
759 :   store i128 %324, i128* %XMM1, align 1, !mcsema_real_eip !13 :          <99>	retq
760 :   %325 = load i128* %XMM2_val, !mcsema_real_eip !13 :          <99>	retq
761 :   store i128 %325, i128* %XMM2, align 1, !mcsema_real_eip !13 :          <99>	retq
762 :   %326 = load i128* %XMM3_val, !mcsema_real_eip !13 :          <99>	retq
763 :   store i128 %326, i128* %XMM3, align 1, !mcsema_real_eip !13 :          <99>	retq
764 :   %327 = load i128* %XMM4_val, !mcsema_real_eip !13 :          <99>	retq
765 :   store i128 %327, i128* %XMM4, align 1, !mcsema_real_eip !13 :          <99>	retq
766 :   %328 = load i128* %XMM5_val, !mcsema_real_eip !13 :          <99>	retq
767 :   store i128 %328, i128* %XMM5, align 1, !mcsema_real_eip !13 :          <99>	retq
768 :   %329 = load i128* %XMM6_val, !mcsema_real_eip !13 :          <99>	retq
769 :   store i128 %329, i128* %XMM6, align 1, !mcsema_real_eip !13 :          <99>	retq
770 :   %330 = load i128* %XMM7_val, !mcsema_real_eip !13 :          <99>	retq
771 :   store i128 %330, i128* %XMM7, align 1, !mcsema_real_eip !13 :          <99>	retq
772 :   %331 = load i128* %XMM8_val, !mcsema_real_eip !13 :          <99>	retq
773 :   store i128 %331, i128* %XMM8, align 1, !mcsema_real_eip !13 :          <99>	retq
774 :   %332 = load i128* %XMM9_val, !mcsema_real_eip !13 :          <99>	retq
775 :   store i128 %332, i128* %XMM9, align 1, !mcsema_real_eip !13 :          <99>	retq
776 :   %333 = load i128* %XMM10_val, !mcsema_real_eip !13 :          <99>	retq
777 :   store i128 %333, i128* %XMM10, align 1, !mcsema_real_eip !13 :          <99>	retq
778 :   %334 = load i128* %XMM11_val, !mcsema_real_eip !13 :          <99>	retq
779 :   store i128 %334, i128* %XMM11, align 1, !mcsema_real_eip !13 :          <99>	retq
780 :   %335 = load i128* %XMM12_val, !mcsema_real_eip !13 :          <99>	retq
781 :   store i128 %335, i128* %XMM12, align 1, !mcsema_real_eip !13 :          <99>	retq
782 :   %336 = load i128* %XMM13_val, !mcsema_real_eip !13 :          <99>	retq
783 :   store i128 %336, i128* %XMM13, align 1, !mcsema_real_eip !13 :          <99>	retq
784 :   %337 = load i128* %XMM14_val, !mcsema_real_eip !13 :          <99>	retq
785 :   store i128 %337, i128* %XMM14, align 1, !mcsema_real_eip !13 :          <99>	retq
786 :   %338 = load i128* %XMM15_val, !mcsema_real_eip !13 :          <99>	retq
787 :   store i128 %338, i128* %XMM15, align 1, !mcsema_real_eip !13 :          <99>	retq
788 :   %339 = load i64* %STACK_BASE_val, !mcsema_real_eip !13 :          <99>	retq
789 :   store i64 %339, i64* %STACK_BASE, align 1, !mcsema_real_eip !13 :          <99>	retq
790 :   %340 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !13 :          <99>	retq
791 :   store i64 %340, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !13 :          <99>	retq
792 :   ret void, !mcsema_real_eip !13 :          <99>	retq
========================================================
Source line mapping for function: sub_0
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <0>	pushq	%rbp
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <0>	pushq	%rbp
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <0>	pushq	%rbp
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <0>	pushq	%rbp
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <0>	pushq	%rbp
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <0>	pushq	%rbp
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <0>	pushq	%rbp
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <0>	pushq	%rbp
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <0>	pushq	%rbp
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <0>	pushq	%rbp
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <0>	pushq	%rbp
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <0>	pushq	%rbp
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <0>	pushq	%rbp
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <0>	pushq	%rbp
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <0>	pushq	%rbp
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <0>	pushq	%rbp
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <0>	pushq	%rbp
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <0>	pushq	%rbp
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <0>	pushq	%rbp
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <0>	pushq	%rbp
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <0>	pushq	%rbp
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <0>	pushq	%rbp
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <0>	pushq	%rbp
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <0>	pushq	%rbp
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <0>	pushq	%rbp
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <0>	pushq	%rbp
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <0>	pushq	%rbp
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <0>	pushq	%rbp
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <0>	pushq	%rbp
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <0>	pushq	%rbp
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <0>	pushq	%rbp
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <0>	pushq	%rbp
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <0>	pushq	%rbp
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <0>	pushq	%rbp
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <0>	pushq	%rbp
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <0>	pushq	%rbp
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <0>	pushq	%rbp
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <0>	pushq	%rbp
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <0>	pushq	%rbp
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <0>	pushq	%rbp
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <0>	pushq	%rbp
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <0>	pushq	%rbp
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <0>	pushq	%rbp
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <0>	pushq	%rbp
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <0>	pushq	%rbp
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <0>	pushq	%rbp
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <0>	pushq	%rbp
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <0>	pushq	%rbp
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <0>	pushq	%rbp
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <0>	pushq	%rbp
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <0>	pushq	%rbp
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <0>	pushq	%rbp
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <0>	pushq	%rbp
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <0>	pushq	%rbp
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <0>	pushq	%rbp
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <0>	pushq	%rbp
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <0>	pushq	%rbp
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <0>	pushq	%rbp
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <0>	pushq	%rbp
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <0>	pushq	%rbp
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <0>	pushq	%rbp
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <0>	pushq	%rbp
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <0>	pushq	%rbp
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <0>	pushq	%rbp
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <0>	pushq	%rbp
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <0>	pushq	%rbp
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <0>	pushq	%rbp
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <0>	pushq	%rbp
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <0>	pushq	%rbp
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <0>	pushq	%rbp
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <0>	pushq	%rbp
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <0>	pushq	%rbp
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <0>	pushq	%rbp
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <0>	pushq	%rbp
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <0>	pushq	%rbp
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <0>	pushq	%rbp
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <0>	pushq	%rbp
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <0>	pushq	%rbp
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <0>	pushq	%rbp
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <0>	pushq	%rbp
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <0>	pushq	%rbp
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <0>	pushq	%rbp
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
288 :   %77 = load i64* %RBP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
289 :   %78 = load i64* %RSP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp

290 :   %79 = add i64 %78, -8 : NIL

291 :   %80 = inttoptr i64 %79 to i64*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
292 :   store i64 %77, i64* %80, !mcsema_real_eip !2 :          <0>	pushq	%rbp
293 :   store i64 %79, i64* %RSP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp

294 :   store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :          <1>	movq	%rsp, %rbp

295 :   %81 = add i64 %78, -12, !mcsema_real_eip !4 :          <4>	movl	%edi, -4(%rbp)
296 :   %82 = inttoptr i64 %81 to i64*, !mcsema_real_eip !4 :          <4>	movl	%edi, -4(%rbp)
297 :   %83 = load i64* %RDI_val, !mcsema_real_eip !4 :          <4>	movl	%edi, -4(%rbp)
298 :   %84 = trunc i64 %83 to i32, !mcsema_real_eip !4 :          <4>	movl	%edi, -4(%rbp)

299 :   %85 = bitcast i64* %82 to i32* : NIL

300 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <4>	movl	%edi, -4(%rbp)

301 :   %86 = load i64* %RBP_val, !mcsema_real_eip !5 :          <7>	movl	%esi, -8(%rbp)
302 :   %87 = add i64 %86, -8, !mcsema_real_eip !5 :          <7>	movl	%esi, -8(%rbp)
303 :   %88 = inttoptr i64 %87 to i64*, !mcsema_real_eip !5 :          <7>	movl	%esi, -8(%rbp)
304 :   %89 = load i64* %RSI_val, !mcsema_real_eip !5 :          <7>	movl	%esi, -8(%rbp)
305 :   %90 = trunc i64 %89 to i32, !mcsema_real_eip !5 :          <7>	movl	%esi, -8(%rbp)

306 :   %91 = bitcast i64* %88 to i32* : NIL

307 :   store i32 %90, i32* %91, !mcsema_real_eip !5 :          <7>	movl	%esi, -8(%rbp)

308 :   %92 = load i64* %RBP_val, !mcsema_real_eip !6 :          <a>	movl	-4(%rbp), %esi
309 :   %93 = add i64 %92, -4, !mcsema_real_eip !6 :          <a>	movl	-4(%rbp), %esi
310 :   %94 = inttoptr i64 %93 to i64*, !mcsema_real_eip !6 :          <a>	movl	-4(%rbp), %esi

311 :   %95 = bitcast i64* %94 to i32* : NIL

312 :   %96 = load i32* %95, !mcsema_real_eip !6 :          <a>	movl	-4(%rbp), %esi
313 :   %97 = zext i32 %96 to i64, !mcsema_real_eip !6 :          <a>	movl	-4(%rbp), %esi
314 :   store i64 %97, i64* %RSI_val, !mcsema_real_eip !6 :          <a>	movl	-4(%rbp), %esi

315 :   %98 = load i64* %RBP_val, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
316 :   %99 = add i64 %98, -8, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
317 :   %100 = inttoptr i64 %99 to i64*, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi

318 :   %101 = bitcast i64* %100 to i32* : NIL

319 :   %102 = load i32* %101, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi

320 :   %uadd = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %96, i32 %102) : NIL
321 :   %103 = extractvalue { i32, i1 } %uadd, 0 : NIL

322 :   %104 = xor i32 %103, %102, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
323 :   %105 = xor i32 %104, %96, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
324 :   %106 = and i32 %105, 16, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
325 :   %107 = icmp ne i32 %106, 0, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
326 :   store i1 %107, i1* %AF_val, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi

327 :   %108 = icmp slt i32 %103, 0 : NIL

328 :   store i1 %108, i1* %SF_val, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
329 :   %109 = icmp eq i32 %103, 0, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
330 :   store i1 %109, i1* %ZF_val, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
331 :   %110 = xor i32 %96, -2147483648, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
332 :   %111 = xor i32 %110, %102, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
333 :   %112 = and i32 %104, %111, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi

334 :   %113 = icmp slt i32 %112, 0 : NIL

335 :   store i1 %113, i1* %OF_val, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
336 :   %114 = trunc i32 %103 to i8, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
337 :   %115 = tail call i8 @llvm.ctpop.i8(i8 %114), !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi

338 :   %116 = and i8 %115, 1 : NIL
339 :   %117 = icmp eq i8 %116, 0 : NIL

340 :   store i1 %117, i1* %PF_val, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi

341 :   %118 = extractvalue { i32, i1 } %uadd, 1 : NIL

342 :   store i1 %118, i1* %CF_val, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
343 :   %119 = zext i32 %103 to i64, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi
344 :   store i64 %119, i64* %RSI_val, !mcsema_real_eip !7 :          <d>	addl	-8(%rbp), %esi

345 :   %120 = load i64* %RBP_val, !mcsema_real_eip !8 :          <10>	movl	%esi, -12(%rbp)
346 :   %121 = add i64 %120, -12, !mcsema_real_eip !8 :          <10>	movl	%esi, -12(%rbp)
347 :   %122 = inttoptr i64 %121 to i64*, !mcsema_real_eip !8 :          <10>	movl	%esi, -12(%rbp)

348 :   %123 = bitcast i64* %122 to i32* : NIL

349 :   store i32 %103, i32* %123, !mcsema_real_eip !8 :          <10>	movl	%esi, -12(%rbp)

350 :   %124 = load i64* %RBP_val, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)
351 :   %125 = add i64 %124, -4, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)
352 :   %126 = inttoptr i64 %125 to i64*, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)

353 :   %127 = bitcast i64* %126 to i32* : NIL

354 :   %128 = load i32* %127, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)
355 :   store i1 false, i1* %AF_val, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)
356 :   %129 = trunc i32 %128 to i8, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)
357 :   %130 = tail call i8 @llvm.ctpop.i8(i8 %129), !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)

358 :   %131 = and i8 %130, 1 : NIL
359 :   %132 = icmp eq i8 %131, 0 : NIL

360 :   store i1 %132, i1* %PF_val, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)
361 :   %133 = icmp eq i32 %128, 0, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)
362 :   store i1 %133, i1* %ZF_val, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)

363 :   %134 = icmp slt i32 %128, 0 : NIL

364 :   store i1 %134, i1* %SF_val, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)
365 :   store i1 false, i1* %CF_val, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)
366 :   store i1 false, i1* %OF_val, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)

367 :   br i1 %134, label %block_0x6a, label %block_0x20.preheader, !mcsema_real_eip !10 :          <1a>	jl	74

368 :   br label %block_0x20 : NIL
369 :   br label %block_0x6a : NIL

370 :   %135 = load i64* %RBP_val, !mcsema_real_eip !11 :          <6a>	movl	-16(%rbp), %eax
371 :   %136 = add i64 %135, -16, !mcsema_real_eip !11 :          <6a>	movl	-16(%rbp), %eax
372 :   %137 = inttoptr i64 %136 to i64*, !mcsema_real_eip !11 :          <6a>	movl	-16(%rbp), %eax

373 :   %138 = bitcast i64* %137 to i32* : NIL

374 :   %139 = load i32* %138, !mcsema_real_eip !11 :          <6a>	movl	-16(%rbp), %eax
375 :   %140 = zext i32 %139 to i64, !mcsema_real_eip !11 :          <6a>	movl	-16(%rbp), %eax
376 :   store i64 %140, i64* %RAX_val, !mcsema_real_eip !11 :          <6a>	movl	-16(%rbp), %eax

377 :   %141 = load i64* %RSP_val, !mcsema_real_eip !12 :          <6d>	popq	%rbp
378 :   %142 = inttoptr i64 %141 to i64*, !mcsema_real_eip !12 :          <6d>	popq	%rbp
379 :   %143 = load i64* %142, !mcsema_real_eip !12 :          <6d>	popq	%rbp
380 :   store i64 %143, i64* %RBP_val, !mcsema_real_eip !12 :          <6d>	popq	%rbp

381 :   %144 = add i64 %141, 16, !mcsema_real_eip !13 :          <6e>	retq
382 :   store i64 %144, i64* %RSP_val, !mcsema_real_eip !13 :          <6e>	retq
383 :   %145 = load i64* %RAX_val, !mcsema_real_eip !13 :          <6e>	retq
384 :   store i64 %145, i64* %RAX, !mcsema_real_eip !13 :          <6e>	retq
385 :   %146 = load i64* %RBX_val, !mcsema_real_eip !13 :          <6e>	retq
386 :   store i64 %146, i64* %RBX, !mcsema_real_eip !13 :          <6e>	retq
387 :   %147 = load i64* %RCX_val, !mcsema_real_eip !13 :          <6e>	retq
388 :   store i64 %147, i64* %RCX, !mcsema_real_eip !13 :          <6e>	retq
389 :   %148 = load i64* %RDX_val, !mcsema_real_eip !13 :          <6e>	retq
390 :   store i64 %148, i64* %RDX, !mcsema_real_eip !13 :          <6e>	retq
391 :   %149 = load i64* %RSI_val, !mcsema_real_eip !13 :          <6e>	retq
392 :   store i64 %149, i64* %RSI, !mcsema_real_eip !13 :          <6e>	retq
393 :   %150 = load i64* %RDI_val, !mcsema_real_eip !13 :          <6e>	retq
394 :   store i64 %150, i64* %RDI, !mcsema_real_eip !13 :          <6e>	retq
395 :   %151 = load i64* %RSP_val, !mcsema_real_eip !13 :          <6e>	retq
396 :   store i64 %151, i64* %RSP, !mcsema_real_eip !13 :          <6e>	retq
397 :   %152 = load i64* %RBP_val, !mcsema_real_eip !13 :          <6e>	retq
398 :   store i64 %152, i64* %RBP, !mcsema_real_eip !13 :          <6e>	retq
399 :   %153 = load i64* %R8_val, !mcsema_real_eip !13 :          <6e>	retq
400 :   store i64 %153, i64* %R8, !mcsema_real_eip !13 :          <6e>	retq
401 :   %154 = load i64* %R9_val, !mcsema_real_eip !13 :          <6e>	retq
402 :   store i64 %154, i64* %R9, !mcsema_real_eip !13 :          <6e>	retq
403 :   %155 = load i64* %R10_val, !mcsema_real_eip !13 :          <6e>	retq
404 :   store i64 %155, i64* %R10, !mcsema_real_eip !13 :          <6e>	retq
405 :   %156 = load i64* %R11_val, !mcsema_real_eip !13 :          <6e>	retq
406 :   store i64 %156, i64* %R11, !mcsema_real_eip !13 :          <6e>	retq
407 :   %157 = load i64* %R12_val, !mcsema_real_eip !13 :          <6e>	retq
408 :   store i64 %157, i64* %R12, !mcsema_real_eip !13 :          <6e>	retq
409 :   %158 = load i64* %R13_val, !mcsema_real_eip !13 :          <6e>	retq
410 :   store i64 %158, i64* %R13, !mcsema_real_eip !13 :          <6e>	retq
411 :   %159 = load i64* %R14_val, !mcsema_real_eip !13 :          <6e>	retq
412 :   store i64 %159, i64* %R14, !mcsema_real_eip !13 :          <6e>	retq
413 :   %160 = load i64* %R15_val, !mcsema_real_eip !13 :          <6e>	retq
414 :   store i64 %160, i64* %R15, !mcsema_real_eip !13 :          <6e>	retq
415 :   %161 = load i64* %RIP_val, !mcsema_real_eip !13 :          <6e>	retq
416 :   store i64 %161, i64* %RIP, !mcsema_real_eip !13 :          <6e>	retq
417 :   %162 = load i1* %CF_val, !mcsema_real_eip !13 :          <6e>	retq
418 :   store i1 %162, i1* %CF, align 1, !mcsema_real_eip !13 :          <6e>	retq
419 :   %163 = load i1* %PF_val, !mcsema_real_eip !13 :          <6e>	retq
420 :   store i1 %163, i1* %PF, align 1, !mcsema_real_eip !13 :          <6e>	retq
421 :   %164 = load i1* %AF_val, !mcsema_real_eip !13 :          <6e>	retq
422 :   store i1 %164, i1* %AF, align 1, !mcsema_real_eip !13 :          <6e>	retq
423 :   %165 = load i1* %ZF_val, !mcsema_real_eip !13 :          <6e>	retq
424 :   store i1 %165, i1* %ZF, align 1, !mcsema_real_eip !13 :          <6e>	retq
425 :   %166 = load i1* %SF_val, !mcsema_real_eip !13 :          <6e>	retq
426 :   store i1 %166, i1* %SF, align 1, !mcsema_real_eip !13 :          <6e>	retq
427 :   %167 = load i1* %OF_val, !mcsema_real_eip !13 :          <6e>	retq
428 :   store i1 %167, i1* %OF, align 1, !mcsema_real_eip !13 :          <6e>	retq
429 :   %168 = load i1* %DF_val, !mcsema_real_eip !13 :          <6e>	retq
430 :   store i1 %168, i1* %DF, align 1, !mcsema_real_eip !13 :          <6e>	retq
431 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !13 :          <6e>	retq
432 :   %169 = load i1* %FPU_B_val, !mcsema_real_eip !13 :          <6e>	retq
433 :   store i1 %169, i1* %FPU_B, align 1, !mcsema_real_eip !13 :          <6e>	retq
434 :   %170 = load i1* %FPU_C3_val, !mcsema_real_eip !13 :          <6e>	retq
435 :   store i1 %170, i1* %FPU_C3, align 1, !mcsema_real_eip !13 :          <6e>	retq
436 :   %171 = load i3* %FPU_TOP_val, !mcsema_real_eip !13 :          <6e>	retq
437 :   store i3 %171, i3* %FPU_TOP, align 1, !mcsema_real_eip !13 :          <6e>	retq
438 :   %172 = load i1* %FPU_C2_val, !mcsema_real_eip !13 :          <6e>	retq
439 :   store i1 %172, i1* %FPU_C2, align 1, !mcsema_real_eip !13 :          <6e>	retq
440 :   %173 = load i1* %FPU_C1_val, !mcsema_real_eip !13 :          <6e>	retq
441 :   store i1 %173, i1* %FPU_C1, align 1, !mcsema_real_eip !13 :          <6e>	retq
442 :   %174 = load i1* %FPU_C0_val, !mcsema_real_eip !13 :          <6e>	retq
443 :   store i1 %174, i1* %FPU_C0, align 1, !mcsema_real_eip !13 :          <6e>	retq
444 :   %175 = load i1* %FPU_ES_val, !mcsema_real_eip !13 :          <6e>	retq
445 :   store i1 %175, i1* %FPU_ES, align 1, !mcsema_real_eip !13 :          <6e>	retq
446 :   %176 = load i1* %FPU_SF_val, !mcsema_real_eip !13 :          <6e>	retq
447 :   store i1 %176, i1* %FPU_SF, align 1, !mcsema_real_eip !13 :          <6e>	retq
448 :   %177 = load i1* %FPU_PE_val, !mcsema_real_eip !13 :          <6e>	retq
449 :   store i1 %177, i1* %FPU_PE, align 1, !mcsema_real_eip !13 :          <6e>	retq
450 :   %178 = load i1* %FPU_UE_val, !mcsema_real_eip !13 :          <6e>	retq
451 :   store i1 %178, i1* %FPU_UE, align 1, !mcsema_real_eip !13 :          <6e>	retq
452 :   %179 = load i1* %FPU_OE_val, !mcsema_real_eip !13 :          <6e>	retq
453 :   store i1 %179, i1* %FPU_OE, align 1, !mcsema_real_eip !13 :          <6e>	retq
454 :   %180 = load i1* %FPU_ZE_val, !mcsema_real_eip !13 :          <6e>	retq
455 :   store i1 %180, i1* %FPU_ZE, align 1, !mcsema_real_eip !13 :          <6e>	retq
456 :   %181 = load i1* %FPU_DE_val, !mcsema_real_eip !13 :          <6e>	retq
457 :   store i1 %181, i1* %FPU_DE, align 1, !mcsema_real_eip !13 :          <6e>	retq
458 :   %182 = load i1* %FPU_IE_val, !mcsema_real_eip !13 :          <6e>	retq
459 :   store i1 %182, i1* %FPU_IE, align 1, !mcsema_real_eip !13 :          <6e>	retq
460 :   %183 = load i1* %FPU_X_val, !mcsema_real_eip !13 :          <6e>	retq
461 :   store i1 %183, i1* %FPU_X, align 1, !mcsema_real_eip !13 :          <6e>	retq
462 :   %184 = load i2* %FPU_RC_val, !mcsema_real_eip !13 :          <6e>	retq
463 :   store i2 %184, i2* %FPU_RC, align 1, !mcsema_real_eip !13 :          <6e>	retq
464 :   %185 = load i2* %FPU_PC_val, !mcsema_real_eip !13 :          <6e>	retq
465 :   store i2 %185, i2* %FPU_PC, align 1, !mcsema_real_eip !13 :          <6e>	retq
466 :   %186 = load i1* %FPU_PM_val, !mcsema_real_eip !13 :          <6e>	retq
467 :   store i1 %186, i1* %FPU_PM, align 1, !mcsema_real_eip !13 :          <6e>	retq
468 :   %187 = load i1* %FPU_UM_val, !mcsema_real_eip !13 :          <6e>	retq
469 :   store i1 %187, i1* %FPU_UM, align 1, !mcsema_real_eip !13 :          <6e>	retq
470 :   %188 = load i1* %FPU_OM_val, !mcsema_real_eip !13 :          <6e>	retq
471 :   store i1 %188, i1* %FPU_OM, align 1, !mcsema_real_eip !13 :          <6e>	retq
472 :   %189 = load i1* %FPU_ZM_val, !mcsema_real_eip !13 :          <6e>	retq
473 :   store i1 %189, i1* %FPU_ZM, align 1, !mcsema_real_eip !13 :          <6e>	retq
474 :   %190 = load i1* %FPU_DM_val, !mcsema_real_eip !13 :          <6e>	retq
475 :   store i1 %190, i1* %FPU_DM, align 1, !mcsema_real_eip !13 :          <6e>	retq
476 :   %191 = load i1* %FPU_IM_val, !mcsema_real_eip !13 :          <6e>	retq
477 :   store i1 %191, i1* %FPU_IM, align 1, !mcsema_real_eip !13 :          <6e>	retq

478 :   %192 = load i64* %53, align 4 : NIL
479 :   store i64 %192, i64* %52, align 4 : NIL

480 :   %193 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !13 :          <6e>	retq
481 :   store i16 %193, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !13 :          <6e>	retq
482 :   %194 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !13 :          <6e>	retq
483 :   store i64 %194, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !13 :          <6e>	retq
484 :   %195 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !13 :          <6e>	retq
485 :   store i16 %195, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !13 :          <6e>	retq
486 :   %196 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !13 :          <6e>	retq
487 :   store i64 %196, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !13 :          <6e>	retq
488 :   %197 = load i128* %XMM0_val, !mcsema_real_eip !13 :          <6e>	retq
489 :   store i128 %197, i128* %XMM0, align 1, !mcsema_real_eip !13 :          <6e>	retq
490 :   %198 = load i128* %XMM1_val, !mcsema_real_eip !13 :          <6e>	retq
491 :   store i128 %198, i128* %XMM1, align 1, !mcsema_real_eip !13 :          <6e>	retq
492 :   %199 = load i128* %XMM2_val, !mcsema_real_eip !13 :          <6e>	retq
493 :   store i128 %199, i128* %XMM2, align 1, !mcsema_real_eip !13 :          <6e>	retq
494 :   %200 = load i128* %XMM3_val, !mcsema_real_eip !13 :          <6e>	retq
495 :   store i128 %200, i128* %XMM3, align 1, !mcsema_real_eip !13 :          <6e>	retq
496 :   %201 = load i128* %XMM4_val, !mcsema_real_eip !13 :          <6e>	retq
497 :   store i128 %201, i128* %XMM4, align 1, !mcsema_real_eip !13 :          <6e>	retq
498 :   %202 = load i128* %XMM5_val, !mcsema_real_eip !13 :          <6e>	retq
499 :   store i128 %202, i128* %XMM5, align 1, !mcsema_real_eip !13 :          <6e>	retq
500 :   %203 = load i128* %XMM6_val, !mcsema_real_eip !13 :          <6e>	retq
501 :   store i128 %203, i128* %XMM6, align 1, !mcsema_real_eip !13 :          <6e>	retq
502 :   %204 = load i128* %XMM7_val, !mcsema_real_eip !13 :          <6e>	retq
503 :   store i128 %204, i128* %XMM7, align 1, !mcsema_real_eip !13 :          <6e>	retq
504 :   %205 = load i128* %XMM8_val, !mcsema_real_eip !13 :          <6e>	retq
505 :   store i128 %205, i128* %XMM8, align 1, !mcsema_real_eip !13 :          <6e>	retq
506 :   %206 = load i128* %XMM9_val, !mcsema_real_eip !13 :          <6e>	retq
507 :   store i128 %206, i128* %XMM9, align 1, !mcsema_real_eip !13 :          <6e>	retq
508 :   %207 = load i128* %XMM10_val, !mcsema_real_eip !13 :          <6e>	retq
509 :   store i128 %207, i128* %XMM10, align 1, !mcsema_real_eip !13 :          <6e>	retq
510 :   %208 = load i128* %XMM11_val, !mcsema_real_eip !13 :          <6e>	retq
511 :   store i128 %208, i128* %XMM11, align 1, !mcsema_real_eip !13 :          <6e>	retq
512 :   %209 = load i128* %XMM12_val, !mcsema_real_eip !13 :          <6e>	retq
513 :   store i128 %209, i128* %XMM12, align 1, !mcsema_real_eip !13 :          <6e>	retq
514 :   %210 = load i128* %XMM13_val, !mcsema_real_eip !13 :          <6e>	retq
515 :   store i128 %210, i128* %XMM13, align 1, !mcsema_real_eip !13 :          <6e>	retq
516 :   %211 = load i128* %XMM14_val, !mcsema_real_eip !13 :          <6e>	retq
517 :   store i128 %211, i128* %XMM14, align 1, !mcsema_real_eip !13 :          <6e>	retq
518 :   %212 = load i128* %XMM15_val, !mcsema_real_eip !13 :          <6e>	retq
519 :   store i128 %212, i128* %XMM15, align 1, !mcsema_real_eip !13 :          <6e>	retq
520 :   %213 = load i64* %STACK_BASE_val, !mcsema_real_eip !13 :          <6e>	retq
521 :   store i64 %213, i64* %STACK_BASE, align 1, !mcsema_real_eip !13 :          <6e>	retq
522 :   %214 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !13 :          <6e>	retq
523 :   store i64 %214, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !13 :          <6e>	retq
524 :   ret void, !mcsema_real_eip !13 :          <6e>	retq

525 :   store i64 2, i64* %RAX_val, !mcsema_real_eip !14 :          <20>	movl	$2, %eax

526 :   %215 = load i64* %RBP_val, !mcsema_real_eip !15 :          <25>	movl	-4(%rbp), %ecx
527 :   %216 = add i64 %215, -4, !mcsema_real_eip !15 :          <25>	movl	-4(%rbp), %ecx
528 :   %217 = inttoptr i64 %216 to i64*, !mcsema_real_eip !15 :          <25>	movl	-4(%rbp), %ecx

529 :   %218 = bitcast i64* %217 to i32* : NIL

530 :   %219 = load i32* %218, !mcsema_real_eip !15 :          <25>	movl	-4(%rbp), %ecx
531 :   %220 = zext i32 %219 to i64, !mcsema_real_eip !15 :          <25>	movl	-4(%rbp), %ecx
532 :   store i64 %220, i64* %RCX_val, !mcsema_real_eip !15 :          <25>	movl	-4(%rbp), %ecx

533 :   %221 = load i64* %RBP_val, !mcsema_real_eip !16 :          <28>	movl	%eax, -20(%rbp)
534 :   %222 = add i64 %221, -20, !mcsema_real_eip !16 :          <28>	movl	%eax, -20(%rbp)
535 :   %223 = inttoptr i64 %222 to i64*, !mcsema_real_eip !16 :          <28>	movl	%eax, -20(%rbp)
536 :   %224 = load i64* %RAX_val, !mcsema_real_eip !16 :          <28>	movl	%eax, -20(%rbp)
537 :   %225 = trunc i64 %224 to i32, !mcsema_real_eip !16 :          <28>	movl	%eax, -20(%rbp)

538 :   %226 = bitcast i64* %223 to i32* : NIL

539 :   store i32 %225, i32* %226, !mcsema_real_eip !16 :          <28>	movl	%eax, -20(%rbp)

540 :   %227 = load i64* %RCX_val, !mcsema_real_eip !17 :          <2b>	movl	%ecx, %eax

541 :   %228 = and i64 %227, 4294967295 : NIL

542 :   store i64 %228, i64* %RAX_val, !mcsema_real_eip !17 :          <2b>	movl	%ecx, %eax

543 :   %229 = shl i64 %227, 32 : NIL
544 :   %sext = ashr i64 %229, 63 : NIL
545 :   %230 = and i64 %sext, 4294967295 : NIL

546 :   store i64 %230, i64* %RDX_val, !mcsema_real_eip !18 :          <2d>	cltd

547 :   %231 = load i64* %RBP_val, !mcsema_real_eip !19 :          <2e>	movl	-20(%rbp), %ecx
548 :   %232 = add i64 %231, -20, !mcsema_real_eip !19 :          <2e>	movl	-20(%rbp), %ecx
549 :   %233 = inttoptr i64 %232 to i64*, !mcsema_real_eip !19 :          <2e>	movl	-20(%rbp), %ecx

550 :   %234 = bitcast i64* %233 to i32* : NIL

551 :   %235 = load i32* %234, !mcsema_real_eip !19 :          <2e>	movl	-20(%rbp), %ecx
552 :   %236 = zext i32 %235 to i64, !mcsema_real_eip !19 :          <2e>	movl	-20(%rbp), %ecx
553 :   store i64 %236, i64* %RCX_val, !mcsema_real_eip !19 :          <2e>	movl	-20(%rbp), %ecx

554 :   %237 = load i64* %RAX_val, !mcsema_real_eip !20 :          <31>	idivl	%ecx
555 :   %238 = load i64* %RDX_val, !mcsema_real_eip !20 :          <31>	idivl	%ecx
556 :   %239 = shl i64 %238, 32, !mcsema_real_eip !20 :          <31>	idivl	%ecx

557 :   %sext70 = shl i64 %237, 32 : NIL
558 :   %240 = ashr exact i64 %sext70, 32 : NIL

559 :   %241 = or i64 %239, %240, !mcsema_real_eip !20 :          <31>	idivl	%ecx
560 :   %242 = sext i32 %235 to i64, !mcsema_real_eip !20 :          <31>	idivl	%ecx
561 :   %243 = sdiv i64 %241, %242, !mcsema_real_eip !20 :          <31>	idivl	%ecx
562 :   %244 = srem i64 %241, %242, !mcsema_real_eip !20 :          <31>	idivl	%ecx

563 :   %245 = and i64 %244, 4294967295 : NIL

564 :   store i64 %245, i64* %RDX_val, !mcsema_real_eip !20 :          <31>	idivl	%ecx

565 :   %246 = and i64 %243, 4294967295 : NIL

566 :   store i64 %246, i64* %RAX_val, !mcsema_real_eip !20 :          <31>	idivl	%ecx

567 :   %247 = trunc i64 %244 to i32, !mcsema_real_eip !21 :          <33>	cmpl	$0, %edx
568 :   store i1 false, i1* %AF_val, !mcsema_real_eip !21 :          <33>	cmpl	$0, %edx

569 :   %248 = trunc i64 %244 to i8 : NIL

570 :   %249 = tail call i8 @llvm.ctpop.i8(i8 %248), !mcsema_real_eip !21 :          <33>	cmpl	$0, %edx

571 :   %250 = and i8 %249, 1 : NIL
572 :   %251 = icmp eq i8 %250, 0 : NIL

573 :   store i1 %251, i1* %PF_val, !mcsema_real_eip !21 :          <33>	cmpl	$0, %edx
574 :   %252 = icmp eq i32 %247, 0, !mcsema_real_eip !21 :          <33>	cmpl	$0, %edx
575 :   store i1 %252, i1* %ZF_val, !mcsema_real_eip !21 :          <33>	cmpl	$0, %edx

576 :   %253 = icmp slt i32 %247, 0 : NIL

577 :   store i1 %253, i1* %SF_val, !mcsema_real_eip !21 :          <33>	cmpl	$0, %edx
578 :   store i1 false, i1* %CF_val, !mcsema_real_eip !21 :          <33>	cmpl	$0, %edx
579 :   store i1 false, i1* %OF_val, !mcsema_real_eip !21 :          <33>	cmpl	$0, %edx

580 :   %254 = load i64* %RBP_val, !mcsema_real_eip !22 :          <4f>	movl	-12(%rbp), %eax
581 :   %255 = add i64 %254, -12, !mcsema_real_eip !22 :          <4f>	movl	-12(%rbp), %eax
582 :   %256 = inttoptr i64 %255 to i64*, !mcsema_real_eip !22 :          <4f>	movl	-12(%rbp), %eax

583 :   %257 = bitcast i64* %256 to i32* : NIL

584 :   %258 = load i32* %257, !mcsema_real_eip !22 :          <4f>	movl	-12(%rbp), %eax
585 :   %259 = zext i32 %258 to i64, !mcsema_real_eip !22 :          <4f>	movl	-12(%rbp), %eax
586 :   store i64 %259, i64* %RAX_val, !mcsema_real_eip !22 :          <4f>	movl	-12(%rbp), %eax

587 :   br i1 %252, label %block_0x3f, label %block_0x4f, !mcsema_real_eip !23 :          <39>	jne	16

588 :   %260 = add i32 %258, -10 : NIL

589 :   %261 = xor i32 %260, %258, !mcsema_real_eip !24 :          <52>	subl	$10, %eax
590 :   %262 = and i32 %261, 16, !mcsema_real_eip !24 :          <52>	subl	$10, %eax
591 :   %263 = icmp ne i32 %262, 0, !mcsema_real_eip !24 :          <52>	subl	$10, %eax
592 :   store i1 %263, i1* %AF_val, !mcsema_real_eip !24 :          <52>	subl	$10, %eax
593 :   %264 = trunc i32 %260 to i8, !mcsema_real_eip !24 :          <52>	subl	$10, %eax
594 :   %265 = tail call i8 @llvm.ctpop.i8(i8 %264), !mcsema_real_eip !24 :          <52>	subl	$10, %eax

595 :   %266 = and i8 %265, 1 : NIL
596 :   %267 = icmp eq i8 %266, 0 : NIL

597 :   store i1 %267, i1* %PF_val, !mcsema_real_eip !24 :          <52>	subl	$10, %eax
598 :   %268 = icmp eq i32 %260, 0, !mcsema_real_eip !24 :          <52>	subl	$10, %eax
599 :   store i1 %268, i1* %ZF_val, !mcsema_real_eip !24 :          <52>	subl	$10, %eax

600 :   %269 = icmp slt i32 %260, 0 : NIL

601 :   store i1 %269, i1* %SF_val, !mcsema_real_eip !24 :          <52>	subl	$10, %eax
602 :   %270 = icmp ult i32 %258, 10, !mcsema_real_eip !24 :          <52>	subl	$10, %eax
603 :   store i1 %270, i1* %CF_val, !mcsema_real_eip !24 :          <52>	subl	$10, %eax
604 :   %271 = and i32 %261, %258, !mcsema_real_eip !24 :          <52>	subl	$10, %eax

605 :   %272 = icmp slt i32 %271, 0 : NIL

606 :   store i1 %272, i1* %OF_val, !mcsema_real_eip !24 :          <52>	subl	$10, %eax
607 :   %273 = zext i32 %260 to i64, !mcsema_real_eip !24 :          <52>	subl	$10, %eax
608 :   store i64 %273, i64* %RAX_val, !mcsema_real_eip !24 :          <52>	subl	$10, %eax

609 :   %274 = load i64* %RBP_val, !mcsema_real_eip !25 :          <57>	movl	%eax, -12(%rbp)
610 :   %275 = add i64 %274, -12, !mcsema_real_eip !25 :          <57>	movl	%eax, -12(%rbp)
611 :   %276 = inttoptr i64 %275 to i64*, !mcsema_real_eip !25 :          <57>	movl	%eax, -12(%rbp)

612 :   %277 = bitcast i64* %276 to i32* : NIL

613 :   store i32 %260, i32* %277, !mcsema_real_eip !25 :          <57>	movl	%eax, -12(%rbp)

614 :   %278 = load i64* %RBP_val, !mcsema_real_eip !26 :          <5a>	movl	-4(%rbp), %eax
615 :   %279 = add i64 %278, -4, !mcsema_real_eip !26 :          <5a>	movl	-4(%rbp), %eax
616 :   %280 = inttoptr i64 %279 to i64*, !mcsema_real_eip !26 :          <5a>	movl	-4(%rbp), %eax

617 :   %281 = bitcast i64* %280 to i32* : NIL

618 :   %282 = load i32* %281, !mcsema_real_eip !26 :          <5a>	movl	-4(%rbp), %eax

619 :   %uadd73 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %282, i32 -1) : NIL
620 :   %283 = extractvalue { i32, i1 } %uadd73, 0 : NIL

621 :   %284 = xor i32 %283, %282, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax

622 :   %285 = and i32 %284, 16 : NIL
623 :   %286 = icmp eq i32 %285, 0 : NIL

624 :   store i1 %286, i1* %AF_val, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax

625 :   %287 = icmp slt i32 %283, 0 : NIL

626 :   store i1 %287, i1* %SF_val, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax
627 :   %288 = icmp eq i32 %283, 0, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax
628 :   store i1 %288, i1* %ZF_val, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax
629 :   %289 = and i32 %284, %282, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax

630 :   %290 = icmp slt i32 %289, 0 : NIL

631 :   store i1 %290, i1* %OF_val, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax
632 :   %291 = trunc i32 %283 to i8, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax
633 :   %292 = tail call i8 @llvm.ctpop.i8(i8 %291), !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax

634 :   %293 = and i8 %292, 1 : NIL
635 :   %294 = icmp eq i8 %293, 0 : NIL

636 :   store i1 %294, i1* %PF_val, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax

637 :   %295 = extractvalue { i32, i1 } %uadd73, 1 : NIL

638 :   store i1 %295, i1* %CF_val, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax
639 :   %296 = zext i32 %283 to i64, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax
640 :   store i64 %296, i64* %RAX_val, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax

641 :   %297 = load i64* %RBP_val, !mcsema_real_eip !28 :          <62>	movl	%eax, -4(%rbp)
642 :   %298 = add i64 %297, -4, !mcsema_real_eip !28 :          <62>	movl	%eax, -4(%rbp)
643 :   %299 = inttoptr i64 %298 to i64*, !mcsema_real_eip !28 :          <62>	movl	%eax, -4(%rbp)

644 :   %300 = bitcast i64* %299 to i32* : NIL

645 :   store i32 %283, i32* %300, !mcsema_real_eip !28 :          <62>	movl	%eax, -4(%rbp)

646 :   br label %block_0x13, !mcsema_real_eip !29 :          <65>	jmp	-87

647 :   %uadd71 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %258, i32 10) : NIL
648 :   %301 = extractvalue { i32, i1 } %uadd71, 0 : NIL

649 :   %302 = xor i32 %301, %258, !mcsema_real_eip !30 :          <42>	addl	$10, %eax
650 :   %303 = and i32 %302, 16, !mcsema_real_eip !30 :          <42>	addl	$10, %eax
651 :   %304 = icmp ne i32 %303, 0, !mcsema_real_eip !30 :          <42>	addl	$10, %eax
652 :   store i1 %304, i1* %AF_val, !mcsema_real_eip !30 :          <42>	addl	$10, %eax

653 :   %305 = icmp slt i32 %301, 0 : NIL

654 :   store i1 %305, i1* %SF_val, !mcsema_real_eip !30 :          <42>	addl	$10, %eax
655 :   %306 = icmp eq i32 %301, 0, !mcsema_real_eip !30 :          <42>	addl	$10, %eax
656 :   store i1 %306, i1* %ZF_val, !mcsema_real_eip !30 :          <42>	addl	$10, %eax
657 :   %307 = xor i32 %258, -2147483648, !mcsema_real_eip !30 :          <42>	addl	$10, %eax
658 :   %308 = and i32 %302, %307, !mcsema_real_eip !30 :          <42>	addl	$10, %eax

659 :   %309 = icmp slt i32 %308, 0 : NIL

660 :   store i1 %309, i1* %OF_val, !mcsema_real_eip !30 :          <42>	addl	$10, %eax
661 :   %310 = trunc i32 %301 to i8, !mcsema_real_eip !30 :          <42>	addl	$10, %eax
662 :   %311 = tail call i8 @llvm.ctpop.i8(i8 %310), !mcsema_real_eip !30 :          <42>	addl	$10, %eax

663 :   %312 = and i8 %311, 1 : NIL
664 :   %313 = icmp eq i8 %312, 0 : NIL

665 :   store i1 %313, i1* %PF_val, !mcsema_real_eip !30 :          <42>	addl	$10, %eax

666 :   %314 = extractvalue { i32, i1 } %uadd71, 1 : NIL

667 :   store i1 %314, i1* %CF_val, !mcsema_real_eip !30 :          <42>	addl	$10, %eax
668 :   %315 = zext i32 %301 to i64, !mcsema_real_eip !30 :          <42>	addl	$10, %eax
669 :   store i64 %315, i64* %RAX_val, !mcsema_real_eip !30 :          <42>	addl	$10, %eax

670 :   %316 = load i64* %RBP_val, !mcsema_real_eip !31 :          <47>	movl	%eax, -16(%rbp)
671 :   %317 = add i64 %316, -16, !mcsema_real_eip !31 :          <47>	movl	%eax, -16(%rbp)
672 :   %318 = inttoptr i64 %317 to i64*, !mcsema_real_eip !31 :          <47>	movl	%eax, -16(%rbp)

673 :   %319 = bitcast i64* %318 to i32* : NIL

674 :   store i32 %301, i32* %319, !mcsema_real_eip !31 :          <47>	movl	%eax, -16(%rbp)

675 :   %320 = load i64* %RBP_val, !mcsema_real_eip !26 :          <5a>	movl	-4(%rbp), %eax
676 :   %321 = add i64 %320, -4, !mcsema_real_eip !26 :          <5a>	movl	-4(%rbp), %eax
677 :   %322 = inttoptr i64 %321 to i64*, !mcsema_real_eip !26 :          <5a>	movl	-4(%rbp), %eax

678 :   %323 = bitcast i64* %322 to i32* : NIL

679 :   %324 = load i32* %323, !mcsema_real_eip !26 :          <5a>	movl	-4(%rbp), %eax

680 :   %uadd72 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %324, i32 -1) : NIL
681 :   %325 = extractvalue { i32, i1 } %uadd72, 0 : NIL

682 :   %326 = xor i32 %325, %324, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax

683 :   %327 = and i32 %326, 16 : NIL
684 :   %328 = icmp eq i32 %327, 0 : NIL

685 :   store i1 %328, i1* %AF_val, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax

686 :   %329 = icmp slt i32 %325, 0 : NIL

687 :   store i1 %329, i1* %SF_val, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax
688 :   %330 = icmp eq i32 %325, 0, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax
689 :   store i1 %330, i1* %ZF_val, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax
690 :   %331 = and i32 %326, %324, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax

691 :   %332 = icmp slt i32 %331, 0 : NIL

692 :   store i1 %332, i1* %OF_val, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax
693 :   %333 = trunc i32 %325 to i8, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax
694 :   %334 = tail call i8 @llvm.ctpop.i8(i8 %333), !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax

695 :   %335 = and i8 %334, 1 : NIL
696 :   %336 = icmp eq i8 %335, 0 : NIL

697 :   store i1 %336, i1* %PF_val, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax

698 :   %337 = extractvalue { i32, i1 } %uadd72, 1 : NIL

699 :   store i1 %337, i1* %CF_val, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax
700 :   %338 = zext i32 %325 to i64, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax
701 :   store i64 %338, i64* %RAX_val, !mcsema_real_eip !27 :          <5d>	addl	$4294967295, %eax

702 :   %339 = load i64* %RBP_val, !mcsema_real_eip !28 :          <62>	movl	%eax, -4(%rbp)
703 :   %340 = add i64 %339, -4, !mcsema_real_eip !28 :          <62>	movl	%eax, -4(%rbp)
704 :   %341 = inttoptr i64 %340 to i64*, !mcsema_real_eip !28 :          <62>	movl	%eax, -4(%rbp)

705 :   %342 = bitcast i64* %341 to i32* : NIL

706 :   store i32 %325, i32* %342, !mcsema_real_eip !28 :          <62>	movl	%eax, -4(%rbp)

707 :   br label %block_0x13, !mcsema_real_eip !29 :          <65>	jmp	-87

708 :   %343 = load i64* %RBP_val, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)
709 :   %344 = add i64 %343, -4, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)
710 :   %345 = inttoptr i64 %344 to i64*, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)

711 :   %346 = bitcast i64* %345 to i32* : NIL

712 :   %347 = load i32* %346, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)
713 :   store i1 false, i1* %AF_val, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)
714 :   %348 = trunc i32 %347 to i8, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)
715 :   %349 = tail call i8 @llvm.ctpop.i8(i8 %348), !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)

716 :   %350 = and i8 %349, 1 : NIL
717 :   %351 = icmp eq i8 %350, 0 : NIL

718 :   store i1 %351, i1* %PF_val, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)
719 :   %352 = icmp eq i32 %347, 0, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)
720 :   store i1 %352, i1* %ZF_val, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)

721 :   %353 = icmp slt i32 %347, 0 : NIL

722 :   store i1 %353, i1* %SF_val, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)
723 :   store i1 false, i1* %CF_val, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)
724 :   store i1 false, i1* %OF_val, !mcsema_real_eip !9 :          <13>	cmpl	$0, -4(%rbp)

725 :   br i1 %353, label %block_0x6a.loopexit, label %block_0x20, !mcsema_real_eip !10 :          <1a>	jl	74
========================================================
Source line mapping for function: mcsema_main
========================================================

1 :   tail call x86_64_sysvcc void @sub_70(%struct.regs* %0) : NIL
2 :   ret void : NIL
