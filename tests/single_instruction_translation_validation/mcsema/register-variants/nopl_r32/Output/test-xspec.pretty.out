Importing: Source(/home/ubuntu/Github/validating-binary-decompilation/tests/single_instruction_translation_validation/mcsema/register-variants/nopl_r32/././test-xspec.k)
Importing: Source(/home/ubuntu/Github/validating-binary-decompilation/tests/single_instruction_translation_validation/mcsema/register-variants/nopl_r32/test-xspec.k)
Parse spec modules [1/9 rules]                               =  0.020s
StateLog: /home/ubuntu/Github/X86-64-semantics/semantics/x86-semantics-kompiled/stateLog/prove-2044796696.log

Parsing finished:  173.188 s
Pre-processing rule:
rule too long...
	Source: /home/ubuntu/Github/validating-binary-decompilation/tests/single_instruction_translation_validation/mcsema/register-variants/nopl_r32/test-xspec.k Location(6,5,101,61)
==================================

Initialization finished
==================================
Stats for each phase, time, used memory, implicit main GC time percentage:
Total                 :  173.657 s,	 1710 MB, gc:  2.532 %
  Parsing             :  173.188 s,	 1566 MB, gc:  2.539 %
  Init                :    0.469 s,	 1710 MB, gc:  0.000 %

Init+Execution time:       0.469 s

  Time and top-level event counts:
  resolveFunctionAndAnywhere time  :    0.046 s,      #        443
    evaluateFunction time            :    0.032 s,      #        192
      builtin evaluation               :           ,      #        156
      no function rules                :           ,      #         36
    applyAnywhereRules time          :    0.000 s,      #         89
      no anywhere rules                :           ,      #         89
    remaining time & # cached        :    0.013 s,      #        162

  Recursive event counts:
  resolveFunctionAndAnywhere time  :           ,      #        126
    evaluateFunction time            :           ,      #          0
      builtin evaluation               :           ,      #          0
      no function rules                :           ,      #          0
    applyAnywhereRules time          :           ,      #          0
      no anywhere rules                :           ,      #          0
    # cached                         :           ,      #        126
==================================


Initial term
=====================

<generatedTop>
  <k>
    fetchNoDBG
  </k>
  <functargets>
    _start |-> ptr ( symloc ( -1 , 0 , 0 , 0 , 0 ) , 64'0 )
  </functargets>
  <rotargets>
    .Map
  </rotargets>
  <datatargets>
    .Map
  </datatargets>
  <bsstargets>
    .Map
  </bsstargets>
  <entrypoint>
    .
  </entrypoint>
  <nextLocPc>
    _0
  </nextLocPc>
  <lastseenlabel>
    .
  </lastseenlabel>
  <currentsection>
    "text"
  </currentsection>
  <memstate>
    <text>
      code ( ptr ( symloc ( -1 , 0 , 0 , 0 , 0 ) , 64'0 ) |-> storedInstr ( nopl %ebx , .Operands )
      ptr ( symloc ( -1 , 0 , 0 , 0 , 0 ) , 64'1 ) |-> storedInstr ( ret .Operands ) )
    </text>
    <stack>
      <memory>
        <nextLoc>
          1
        </nextLoc>
        <objects>
          mem ( symloc ( 1 , 128 , 1024 , 8 , 1000 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1001 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1002 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1003 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1004 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1005 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1006 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1007 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1008 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1009 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1010 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1011 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1012 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1013 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1014 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1015 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1016 ) |-> byte ( 0 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1017 ) |-> byte ( 1 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1018 ) |-> byte ( 2 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1019 ) |-> byte ( 3 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1020 ) |-> byte ( 4 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1021 ) |-> byte ( 5 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1022 ) |-> byte ( 6 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1023 ) |-> byte ( 7 , 64'-1 ) )
        </objects>
        <freed>
          .Set
        </freed>
      </memory>
      <stackbase>
        stackBaseInfo ( symloc ( 1 , 128 , 1024 , 8 , 0 ) , 64'1016 )
      </stackbase>
      <robase>
        roBaseInfo ( . , . , . )
      </robase>
      <database>
        dataBaseInfo ( . , . , . )
      </database>
      <bssbase>
        bssBaseInfo ( . , . , . )
      </bssbase>
    </stack>
  </memstate>
  <environment>
    <argc>
      .
    </argc>
    <argv>
      .
    </argv>
  </environment>
  <regstate>
    "AF" |-> _7
    "CF" |-> _9
    "OF" |-> _11
    "PF" |-> _13
    "RAX" |-> mi ( 64 , V_RAX )
    "RBP" |-> ptr ( symloc ( 1 , 128 , 1024 , 8 , 0 ) , 64'1016 )
    "RBX" |-> mi ( 64 , V_RBX )
    "RCX" |-> mi ( 64 , V_RCX )
    "RDI" |-> mi ( 64 , V_RDI )
    "RDX" |-> mi ( 64 , V_RDX )
    "RIP" |-> ptr ( symloc ( -1 , 0 , 0 , 0 , 0 ) , 64'0 )
    "RSI" |-> mi ( 64 , V_RSI )
    "RSP" |-> ptr ( symloc ( 1 , 128 , 1024 , 8 , 0 ) , 64'1016 )
    "SF" |-> _15
    "ZF" |-> _17
  </regstate>
  _35
  _36
  _37
  _38
  _39
</generatedTop>
/\
  V_RAX <Int 18446744073709551616 ==K true
#And
  V_RAX >=Int 0 ==K true
#And
  V_RBX <Int 18446744073709551616 ==K true
#And
  V_RBX >=Int 0 ==K true
#And
  V_RCX <Int 18446744073709551616 ==K true
#And
  V_RCX >=Int 0 ==K true
#And
  V_RDI <Int 18446744073709551616 ==K true
#And
  V_RDI >=Int 0 ==K true
#And
  V_RDX <Int 18446744073709551616 ==K true
#And
  V_RDX >=Int 0 ==K true
#And
  V_RSI <Int 18446744073709551616 ==K true
#And
  V_RSI >=Int 0 ==K true


Target term
=====================

<generatedTop>
  <k>
    exit_0
  </k>
  <functargets>
    _start |-> ptr ( symloc ( -1 , 0 , 0 , 0 , 0 ) , 64'0 )
  </functargets>
  <rotargets>
    .Map
  </rotargets>
  <datatargets>
    .Map
  </datatargets>
  <bsstargets>
    .Map
  </bsstargets>
  <entrypoint>
    .
  </entrypoint>
  <nextLocPc>
    _0
  </nextLocPc>
  <lastseenlabel>
    .
  </lastseenlabel>
  <currentsection>
    "text"
  </currentsection>
  <memstate>
    <text>
      code ( ptr ( symloc ( -1 , 0 , 0 , 0 , 0 ) , 64'0 ) |-> storedInstr ( nopl %ebx , .Operands )
      ptr ( symloc ( -1 , 0 , 0 , 0 , 0 ) , 64'1 ) |-> storedInstr ( ret .Operands ) )
    </text>
    <stack>
      <memory>
        <nextLoc>
          1
        </nextLoc>
        <objects>
          mem ( symloc ( 1 , 128 , 1024 , 8 , 1000 ) |-> _19
          symloc ( 1 , 128 , 1024 , 8 , 1001 ) |-> _20
          symloc ( 1 , 128 , 1024 , 8 , 1002 ) |-> _21
          symloc ( 1 , 128 , 1024 , 8 , 1003 ) |-> _22
          symloc ( 1 , 128 , 1024 , 8 , 1004 ) |-> _23
          symloc ( 1 , 128 , 1024 , 8 , 1005 ) |-> _24
          symloc ( 1 , 128 , 1024 , 8 , 1006 ) |-> _25
          symloc ( 1 , 128 , 1024 , 8 , 1007 ) |-> _26
          symloc ( 1 , 128 , 1024 , 8 , 1008 ) |-> _27
          symloc ( 1 , 128 , 1024 , 8 , 1009 ) |-> _28
          symloc ( 1 , 128 , 1024 , 8 , 1010 ) |-> _29
          symloc ( 1 , 128 , 1024 , 8 , 1011 ) |-> _30
          symloc ( 1 , 128 , 1024 , 8 , 1012 ) |-> _31
          symloc ( 1 , 128 , 1024 , 8 , 1013 ) |-> _32
          symloc ( 1 , 128 , 1024 , 8 , 1014 ) |-> _33
          symloc ( 1 , 128 , 1024 , 8 , 1015 ) |-> _34
          symloc ( 1 , 128 , 1024 , 8 , 1016 ) |-> byte ( 0 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1017 ) |-> byte ( 1 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1018 ) |-> byte ( 2 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1019 ) |-> byte ( 3 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1020 ) |-> byte ( 4 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1021 ) |-> byte ( 5 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1022 ) |-> byte ( 6 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1023 ) |-> byte ( 7 , 64'-1 ) )
        </objects>
        <freed>
          .Set
        </freed>
      </memory>
      <stackbase>
        stackBaseInfo ( symloc ( 1 , 128 , 1024 , 8 , 0 ) , 64'1016 )
      </stackbase>
      <robase>
        roBaseInfo ( . , . , . )
      </robase>
      <database>
        dataBaseInfo ( . , . , . )
      </database>
      <bssbase>
        bssBaseInfo ( . , . , . )
      </bssbase>
    </stack>
  </memstate>
  <environment>
    <argc>
      .
    </argc>
    <argv>
      .
    </argv>
  </environment>
  <regstate>
    "AF" |-> _8
    "CF" |-> _10
    "OF" |-> _12
    "PF" |-> _14
    "RAX" |-> mi ( 64 , _1 )
    "RBP" |-> ptr ( symloc ( 1 , 128 , 1024 , 8 , 0 ) , 64'1016 )
    "RBX" |-> mi ( 64 , _2 )
    "RCX" |-> mi ( 64 , _3 )
    "RDI" |-> mi ( 64 , _6 )
    "RDX" |-> mi ( 64 , _4 )
    "RIP" |-> 64'18446744073709551615
    "RSI" |-> mi ( 64 , _5 )
    "RSP" |-> ptr ( symloc ( 1 , 128 , 1024 , 8 , 0 ) , 64'1024 )
    "SF" |-> _16
    "ZF" |-> _18
  </regstate>
  _35
  _36
  _37
  _38
  _39
</generatedTop>
/\
#True


STEP 1 v1 :    5.669 s, 		 2260 MB, gc:  0.000 %
===================
<memory>
  <nextLoc>
    1
  </nextLoc>
  <objects>
    mem ( symloc ( 1 , 128 , 1024 , 8 , 1000 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1001 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1002 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1003 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1004 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1005 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1006 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1007 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1008 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1009 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1010 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1011 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1012 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1013 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1014 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1015 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1016 ) |-> byte ( 0 , 64'-1 )
    symloc ( 1 , 128 , 1024 , 8 , 1017 ) |-> byte ( 1 , 64'-1 )
    symloc ( 1 , 128 , 1024 , 8 , 1018 ) |-> byte ( 2 , 64'-1 )
    symloc ( 1 , 128 , 1024 , 8 , 1019 ) |-> byte ( 3 , 64'-1 )
    symloc ( 1 , 128 , 1024 , 8 , 1020 ) |-> byte ( 4 , 64'-1 )
    symloc ( 1 , 128 , 1024 , 8 , 1021 ) |-> byte ( 5 , 64'-1 )
    symloc ( 1 , 128 , 1024 , 8 , 1022 ) |-> byte ( 6 , 64'-1 )
    symloc ( 1 , 128 , 1024 , 8 , 1023 ) |-> byte ( 7 , 64'-1 ) )
  </objects>
  <freed>
    .Set
  </freed>
</memory>

STEP 14 v1 :    7.383 s, 		 3052 MB, gc:  0.000 %
===================
<memory>
  <nextLoc>
    1
  </nextLoc>
  <objects>
    mem ( symloc ( 1 , 128 , 1024 , 8 , 1000 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1001 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1002 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1003 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1004 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1005 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1006 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1007 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1008 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1009 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1010 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1011 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1012 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1013 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1014 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1015 ) |-> byte ( 0 , undefMInt )
    symloc ( 1 , 128 , 1024 , 8 , 1016 ) |-> byte ( 0 , 64'-1 )
    symloc ( 1 , 128 , 1024 , 8 , 1017 ) |-> byte ( 1 , 64'-1 )
    symloc ( 1 , 128 , 1024 , 8 , 1018 ) |-> byte ( 2 , 64'-1 )
    symloc ( 1 , 128 , 1024 , 8 , 1019 ) |-> byte ( 3 , 64'-1 )
    symloc ( 1 , 128 , 1024 , 8 , 1020 ) |-> byte ( 4 , 64'-1 )
    symloc ( 1 , 128 , 1024 , 8 , 1021 ) |-> byte ( 5 , 64'-1 )
    symloc ( 1 , 128 , 1024 , 8 , 1022 ) |-> byte ( 6 , 64'-1 )
    symloc ( 1 , 128 , 1024 , 8 , 1023 ) |-> byte ( 7 , 64'-1 ) )
  </objects>
  <freed>
    .Set
  </freed>
</memory>

Step above: 14, evaluation ended with no successors.

SPEC FAILED: /home/ubuntu/Github/validating-binary-decompilation/tests/single_instruction_translation_validation/mcsema/register-variants/nopl_r32/test-xspec.k Location(6,5,101,61)
==================================
Success execution paths: 0
Failed execution paths: 1
Longest path: 14 steps
Stats for each phase, time, used memory, implicit main GC time percentage:
Total                 :  182.321 s,	 1360 MB, gc:  2.489 %
  Parsing             :  173.188 s,	 1566 MB, gc:  2.539 %
  Init                :    0.469 s,	 1710 MB, gc:  0.000 %
  Execution           :    8.664 s,	 1360 MB, gc:  1.627 %

Init+Execution time:       9.134 s
  query build time                 :    0.004 s,      #          1

  Time and top-level event counts:
  resolveFunctionAndAnywhere time  :    0.108 s,      #        659
    evaluateFunction time            :    0.087 s,      #        300
      builtin evaluation               :           ,      #        188
      function rule                    :           ,      #         13
      sort predicate                   :           ,      #          2
      no rule applicable               :           ,      #          1
      no function rules                :           ,      #         96
    applyAnywhereRules time          :    0.001 s,      #        141
      no anywhere rules                :           ,      #        141
    remaining time & # cached        :    0.020 s,      #        218
  log time                         :    2.777 s,      #         15
  impliesSMT time                  :    0.004 s,      #          1

  Recursive event counts:
  resolveFunctionAndAnywhere time  :           ,      #        486
    evaluateFunction time            :           ,      #        207
      builtin evaluation               :           ,      #        136
      function rule                    :           ,      #         70
      sort predicate                   :           ,      #          0
      no rule applicable               :           ,      #          0
      no function rules                :           ,      #          0
    applyAnywhereRules time          :           ,      #         19
      no anywhere rules                :           ,      #         19
    # cached                         :           ,      #        260

Max memory : 262144 MB
==================================

<generatedTop>
  <k>
    exit_0
  </k>
  <functargets>
    _start |-> ptr ( symloc ( -1 , 0 , 0 , 0 , 0 ) , 64'0 )
  </functargets>
  <rotargets>
    .Map
  </rotargets>
  <datatargets>
    .Map
  </datatargets>
  <bsstargets>
    .Map
  </bsstargets>
  <entrypoint>
    .
  </entrypoint>
  <nextLocPc>
    _0
  </nextLocPc>
  <lastseenlabel>
    .
  </lastseenlabel>
  <currentsection>
    "text"
  </currentsection>
  <memstate>
    <text>
      code ( ptr ( symloc ( -1 , 0 , 0 , 0 , 0 ) , 64'0 ) |-> storedInstr ( nopl %ebx , .Operands )
      ptr ( symloc ( -1 , 0 , 0 , 0 , 0 ) , 64'1 ) |-> storedInstr ( ret .Operands ) )
    </text>
    <stack>
      <memory>
        <nextLoc>
          1
        </nextLoc>
        <objects>
          mem ( symloc ( 1 , 128 , 1024 , 8 , 1000 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1001 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1002 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1003 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1004 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1005 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1006 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1007 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1008 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1009 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1010 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1011 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1012 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1013 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1014 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1015 ) |-> byte ( 0 , undefMInt )
          symloc ( 1 , 128 , 1024 , 8 , 1016 ) |-> byte ( 0 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1017 ) |-> byte ( 1 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1018 ) |-> byte ( 2 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1019 ) |-> byte ( 3 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1020 ) |-> byte ( 4 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1021 ) |-> byte ( 5 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1022 ) |-> byte ( 6 , 64'-1 )
          symloc ( 1 , 128 , 1024 , 8 , 1023 ) |-> byte ( 7 , 64'-1 ) )
        </objects>
        <freed>
          .Set
        </freed>
      </memory>
      <stackbase>
        stackBaseInfo ( symloc ( 1 , 128 , 1024 , 8 , 0 ) , 64'1016 )
      </stackbase>
      <robase>
        roBaseInfo ( . , . , . )
      </robase>
      <database>
        dataBaseInfo ( . , . , . )
      </database>
      <bssbase>
        bssBaseInfo ( . , . , . )
      </bssbase>
    </stack>
  </memstate>
  <environment>
    <argc>
      .
    </argc>
    <argv>
      .
    </argv>
  </environment>
  <regstate>
    "AF" |-> _7
    "CF" |-> _9
    "OF" |-> _11
    "PF" |-> _13
    "RAX" |-> mi ( 64 , V_RAX )
    "RBP" |-> ptr ( symloc ( 1 , 128 , 1024 , 8 , 0 ) , 64'1016 )
    "RBX" |-> mi ( 64 , V_RBX )
    "RCX" |-> mi ( 64 , V_RCX )
    "RDI" |-> mi ( 64 , V_RDI )
    "RDX" |-> mi ( 64 , V_RDX )
    "RIP" |-> 64'18446744073709551615
    "RSI" |-> mi ( 64 , V_RSI )
    "RSP" |-> ptr ( symloc ( 1 , 128 , 1024 , 8 , 0 ) , 64'1024 )
    "SF" |-> _15
    "ZF" |-> _17
  </regstate>
  _35
  _36
  _37
  _38
  _39
</generatedTop>
[Warning] Internal: execution phase: missing SMTLib translation for mi . Please
re-run with the --debug-z3 flag. Search the logs starting with 'Z3 warning' to
see the Z3 implication that generated the warning. (missing SMTLib translation
for mi)
Command exited with non-zero status 1
290.15user 102.67system 3:05.13elapsed 212%CPU (0avgtext+0avgdata 14573320maxresident)k
0inputs+178520outputs (0major+6978738minor)pagefaults 0swaps
