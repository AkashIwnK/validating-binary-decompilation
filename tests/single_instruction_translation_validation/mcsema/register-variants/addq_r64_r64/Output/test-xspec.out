Importing: Source(/home/ubuntu/Github/validating-binary-decompilation/tests/single_instruction_translation_validation/mcsema/register-variants/addq_r64_r64/././test-xspec.k)
Importing: Source(/home/ubuntu/Github/validating-binary-decompilation/tests/single_instruction_translation_validation/mcsema/register-variants/addq_r64_r64/test-xspec.k)
Parse spec modules [1/9 rules]                               =  0.020s
StateLog: /home/ubuntu/Github/X86-64-semantics/semantics/x86-semantics-kompiled/stateLog/prove-2044796696.log

Parsing finished:  187.657 s
Pre-processing rule:
rule too long...
	Source: /home/ubuntu/Github/validating-binary-decompilation/tests/single_instruction_translation_validation/mcsema/register-variants/addq_r64_r64/test-xspec.k Location(6,5,101,61)
==================================

Initialization finished
==================================
Stats for each phase, time, used memory, implicit main GC time percentage:
Total                 :  188.162 s,	 1679 MB, gc:  3.628 %
  Parsing             :  187.657 s,	 1551 MB, gc:  3.638 %
  Init                :    0.505 s,	 1679 MB, gc:  0.000 %

Init+Execution time:       0.505 s

  Time and top-level event counts:
  resolveFunctionAndAnywhere time  :    0.056 s,      #        447
    evaluateFunction time            :    0.038 s,      #        192
      builtin evaluation               :           ,      #        156
      no function rules                :           ,      #         36
    applyAnywhereRules time          :    0.001 s,      #         91
      no anywhere rules                :           ,      #         91
    remaining time & # cached        :    0.018 s,      #        164

  Recursive event counts:
  resolveFunctionAndAnywhere time  :           ,      #        126
    evaluateFunction time            :           ,      #          0
      builtin evaluation               :           ,      #          0
      no function rules                :           ,      #          0
    applyAnywhereRules time          :           ,      #          0
      no anywhere rules                :           ,      #          0
    # cached                         :           ,      #        126
==================================


Initial term
=====================

`<generatedTop>`(`<k>`(#token("fetchNoDBG","KItem")),`<functargets>`(`_|->_`(#token("_start","X86Id"),ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")))),`<rotargets>`(`.Map`(.KList)),`<datatargets>`(`.Map`(.KList)),`<bsstargets>`(`.Map`(.KList)),`<entrypoint>`(#EmptyK(.KList)),`<nextLocPc>`(_0),`<lastseenlabel>`(#EmptyK(.KList)),`<currentsection>`(#token("\"text\"","String")),`<memstate>`(`<text>`(code(`_Map_`(`_|->_`(ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")),storedInstr(`___X86-SYNTAX`(`addq_X86-SYNTAX`(.KList),operandlist(`%rcx_X86-SYNTAX`(.KList),operandlist(`%rbx_X86-SYNTAX`(.KList),`.List{"operandlist"}`(.KList)))))),`_|->_`(ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'1","MInt")),storedInstr(`___X86-SYNTAX`(`ret_X86-SYNTAX`(.KList),`.List{"operandlist"}`(.KList))))))),`<stack>`(`<memory>`(`<nextLoc>`(#token("1","Int")),`<objects>`(mem(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1000","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1001","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1002","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1003","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1004","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1005","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1006","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1007","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1008","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1009","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1010","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1011","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1012","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1013","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1014","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1015","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1016","Int")),byte(#token("0","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1017","Int")),byte(#token("1","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1018","Int")),byte(#token("2","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1019","Int")),byte(#token("3","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1020","Int")),byte(#token("4","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1021","Int")),byte(#token("5","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1022","Int")),byte(#token("6","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1023","Int")),byte(#token("7","Int"),#token("64'-1","MInt")))))),`<freed>`(`.Set`(.KList))),`<stackbase>`(stackBaseInfo(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("0","Int")),#token("64'1016","MInt"))),`<robase>`(roBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))),`<database>`(dataBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))),`<bssbase>`(bssBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))))),`<environment>`(`<argc>`(#EmptyK(.KList)),`<argv>`(#EmptyK(.KList))),`<regstate>`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_|->_`(#token("\"AF\"","String"),_7),`_|->_`(#token("\"CF\"","String"),_9)),`_|->_`(#token("\"OF\"","String"),_11)),`_|->_`(#token("\"PF\"","String"),_13)),`_|->_`(#token("\"RAX\"","String"),mi(#token("64","Int"),V_RAX))),`_|->_`(#token("\"RBP\"","String"),ptr(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("0","Int")),#token("64'1016","MInt")))),`_|->_`(#token("\"RBX\"","String"),mi(#token("64","Int"),V_RBX))),`_|->_`(#token("\"RCX\"","String"),mi(#token("64","Int"),V_RCX))),`_|->_`(#token("\"RDI\"","String"),mi(#token("64","Int"),V_RDI))),`_|->_`(#token("\"RDX\"","String"),mi(#token("64","Int"),V_RDX))),`_|->_`(#token("\"RIP\"","String"),ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")))),`_|->_`(#token("\"RSI\"","String"),mi(#token("64","Int"),V_RSI))),`_|->_`(#token("\"RSP\"","String"),ptr(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("0","Int")),#token("64'1016","MInt")))),`_|->_`(#token("\"SF\"","String"),_15)),`_|->_`(#token("\"ZF\"","String"),_17))),_35,_36,_37,_38,_39)
/\
#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(`_==K_`(`_<Int_`(V_RAX,#token("18446744073709551616","Int")),#token("true","Bool")),`_==K_`(`_>=Int_`(V_RAX,#token("0","Int")),#token("true","Bool"))),`_==K_`(`_<Int_`(V_RBX,#token("18446744073709551616","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(V_RBX,#token("0","Int")),#token("true","Bool"))),`_==K_`(`_<Int_`(V_RCX,#token("18446744073709551616","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(V_RCX,#token("0","Int")),#token("true","Bool"))),`_==K_`(`_<Int_`(V_RDI,#token("18446744073709551616","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(V_RDI,#token("0","Int")),#token("true","Bool"))),`_==K_`(`_<Int_`(V_RDX,#token("18446744073709551616","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(V_RDX,#token("0","Int")),#token("true","Bool"))),`_==K_`(`_<Int_`(V_RSI,#token("18446744073709551616","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(V_RSI,#token("0","Int")),#token("true","Bool")))


Target term
=====================

`<generatedTop>`(`<k>`(`exit_0_X86-FETCH-EXECUTE`(.KList)),`<functargets>`(`_|->_`(#token("_start","X86Id"),ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")))),`<rotargets>`(`.Map`(.KList)),`<datatargets>`(`.Map`(.KList)),`<bsstargets>`(`.Map`(.KList)),`<entrypoint>`(#EmptyK(.KList)),`<nextLocPc>`(_0),`<lastseenlabel>`(#EmptyK(.KList)),`<currentsection>`(#token("\"text\"","String")),`<memstate>`(`<text>`(code(`_Map_`(`_|->_`(ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")),storedInstr(`___X86-SYNTAX`(`addq_X86-SYNTAX`(.KList),operandlist(`%rcx_X86-SYNTAX`(.KList),operandlist(`%rbx_X86-SYNTAX`(.KList),`.List{"operandlist"}`(.KList)))))),`_|->_`(ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'1","MInt")),storedInstr(`___X86-SYNTAX`(`ret_X86-SYNTAX`(.KList),`.List{"operandlist"}`(.KList))))))),`<stack>`(`<memory>`(`<nextLoc>`(#token("1","Int")),`<objects>`(mem(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1000","Int")),_19),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1001","Int")),_20)),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1002","Int")),_21)),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1003","Int")),_22)),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1004","Int")),_23)),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1005","Int")),_24)),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1006","Int")),_25)),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1007","Int")),_26)),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1008","Int")),_27)),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1009","Int")),_28)),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1010","Int")),_29)),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1011","Int")),_30)),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1012","Int")),_31)),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1013","Int")),_32)),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1014","Int")),_33)),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1015","Int")),_34)),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1016","Int")),byte(#token("0","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1017","Int")),byte(#token("1","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1018","Int")),byte(#token("2","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1019","Int")),byte(#token("3","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1020","Int")),byte(#token("4","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1021","Int")),byte(#token("5","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1022","Int")),byte(#token("6","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1023","Int")),byte(#token("7","Int"),#token("64'-1","MInt")))))),`<freed>`(`.Set`(.KList))),`<stackbase>`(stackBaseInfo(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("0","Int")),#token("64'1016","MInt"))),`<robase>`(roBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))),`<database>`(dataBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))),`<bssbase>`(bssBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))))),`<environment>`(`<argc>`(#EmptyK(.KList)),`<argv>`(#EmptyK(.KList))),`<regstate>`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_|->_`(#token("\"AF\"","String"),_8),`_|->_`(#token("\"CF\"","String"),_10)),`_|->_`(#token("\"OF\"","String"),_12)),`_|->_`(#token("\"PF\"","String"),_14)),`_|->_`(#token("\"RAX\"","String"),mi(#token("64","Int"),_1))),`_|->_`(#token("\"RBP\"","String"),ptr(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("0","Int")),#token("64'1016","MInt")))),`_|->_`(#token("\"RBX\"","String"),mi(#token("64","Int"),_2))),`_|->_`(#token("\"RCX\"","String"),mi(#token("64","Int"),_3))),`_|->_`(#token("\"RDI\"","String"),mi(#token("64","Int"),_6))),`_|->_`(#token("\"RDX\"","String"),mi(#token("64","Int"),_4))),`_|->_`(#token("\"RIP\"","String"),#token("64'18446744073709551615","MInt"))),`_|->_`(#token("\"RSI\"","String"),mi(#token("64","Int"),_5))),`_|->_`(#token("\"RSP\"","String"),ptr(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("0","Int")),#token("64'1024","MInt")))),`_|->_`(#token("\"SF\"","String"),_16)),`_|->_`(#token("\"ZF\"","String"),_18))),_35,_36,_37,_38,_39)
/\
#True(.KList)


STEP 1 v1 :    2.314 s, 		 2959 MB, gc:  0.000 %
===================
`<memory>`(`<nextLoc>`(#token("1","Int")),`<objects>`(mem(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1000","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1001","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1002","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1003","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1004","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1005","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1006","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1007","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1008","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1009","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1010","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1011","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1012","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1013","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1014","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1015","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1016","Int")),byte(#token("0","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1017","Int")),byte(#token("1","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1018","Int")),byte(#token("2","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1019","Int")),byte(#token("3","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1020","Int")),byte(#token("4","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1021","Int")),byte(#token("5","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1022","Int")),byte(#token("6","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1023","Int")),byte(#token("7","Int"),#token("64'-1","MInt")))))),`<freed>`(`.Set`(.KList)))

STEP 14 v1 :    3.010 s, 		 1655 MB, gc:  5.600 %
===================
`<memory>`(`<nextLoc>`(#token("1","Int")),`<objects>`(mem(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1000","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1001","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1002","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1003","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1004","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1005","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1006","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1007","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1008","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1009","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1010","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1011","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1012","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1013","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1014","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1015","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1016","Int")),byte(#token("0","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1017","Int")),byte(#token("1","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1018","Int")),byte(#token("2","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1019","Int")),byte(#token("3","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1020","Int")),byte(#token("4","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1021","Int")),byte(#token("5","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1022","Int")),byte(#token("6","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1023","Int")),byte(#token("7","Int"),#token("64'-1","MInt")))))),`<freed>`(`.Set`(.KList)))

Step above: 14, evaluation ended with no successors.

SPEC FAILED: /home/ubuntu/Github/validating-binary-decompilation/tests/single_instruction_translation_validation/mcsema/register-variants/addq_r64_r64/test-xspec.k Location(6,5,101,61)
==================================
Success execution paths: 0
Failed execution paths: 1
Longest path: 14 steps
Stats for each phase, time, used memory, implicit main GC time percentage:
Total                 :  191.607 s,	 2005 MB, gc:  3.583 %
  Parsing             :  187.657 s,	 1551 MB, gc:  3.638 %
  Init                :    0.505 s,	 1679 MB, gc:  0.000 %
  Execution           :    3.445 s,	 2005 MB, gc:  1.132 %

Init+Execution time:       3.950 s
  query build time                 :    0.009 s,      #          7

  Time and top-level event counts:
  resolveFunctionAndAnywhere time  :    0.168 s,      #       1025
    evaluateFunction time            :    0.141 s,      #        413
      builtin evaluation               :           ,      #        204
      function rule                    :           ,      #         18
      sort predicate                   :           ,      #          2
      no rule applicable               :           ,      #         91
      no function rules                :           ,      #         98
    applyAnywhereRules time          :    0.001 s,      #        144
      no anywhere rules                :           ,      #        144
    remaining time & # cached        :    0.026 s,      #        468
  log time                         :    0.890 s,      #         15
  impliesSMT time                  :    0.010 s,      #          7

  Recursive event counts:
  resolveFunctionAndAnywhere time  :           ,      #       2003
    evaluateFunction time            :           ,      #        226
      builtin evaluation               :           ,      #        138
      function rule                    :           ,      #         79
      sort predicate                   :           ,      #          0
      no rule applicable               :           ,      #          6
      no function rules                :           ,      #          2
    applyAnywhereRules time          :           ,      #         19
      no anywhere rules                :           ,      #         19
    # cached                         :           ,      #       1758

Max memory : 262144 MB
==================================

`<generatedTop>`(`<k>`(`exit_0_X86-FETCH-EXECUTE`(.KList)),`<functargets>`(`_|->_`(#token("_start","X86Id"),ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")))),`<rotargets>`(`.Map`(.KList)),`<datatargets>`(`.Map`(.KList)),`<bsstargets>`(`.Map`(.KList)),`<entrypoint>`(#EmptyK(.KList)),`<nextLocPc>`(_0),`<lastseenlabel>`(#EmptyK(.KList)),`<currentsection>`(#token("\"text\"","String")),`<memstate>`(`<text>`(code(`_Map_`(`_|->_`(ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")),storedInstr(`___X86-SYNTAX`(`addq_X86-SYNTAX`(.KList),operandlist(`%rcx_X86-SYNTAX`(.KList),operandlist(`%rbx_X86-SYNTAX`(.KList),`.List{"operandlist"}`(.KList)))))),`_|->_`(ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'1","MInt")),storedInstr(`___X86-SYNTAX`(`ret_X86-SYNTAX`(.KList),`.List{"operandlist"}`(.KList))))))),`<stack>`(`<memory>`(`<nextLoc>`(#token("1","Int")),`<objects>`(mem(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1000","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1001","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1002","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1003","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1004","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1005","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1006","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1007","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1008","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1009","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1010","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1011","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1012","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1013","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1014","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1015","Int")),byte(#token("0","Int"),`undefMInt_MINT-WRAPPER-SYNTAX`(.KList)))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1016","Int")),byte(#token("0","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1017","Int")),byte(#token("1","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1018","Int")),byte(#token("2","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1019","Int")),byte(#token("3","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1020","Int")),byte(#token("4","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1021","Int")),byte(#token("5","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1022","Int")),byte(#token("6","Int"),#token("64'-1","MInt")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("1023","Int")),byte(#token("7","Int"),#token("64'-1","MInt")))))),`<freed>`(`.Set`(.KList))),`<stackbase>`(stackBaseInfo(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("0","Int")),#token("64'1016","MInt"))),`<robase>`(roBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))),`<database>`(dataBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))),`<bssbase>`(bssBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))))),`<environment>`(`<argc>`(#EmptyK(.KList)),`<argv>`(#EmptyK(.KList))),`<regstate>`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_Map_`(`_|->_`(#token("\"AF\"","String"),xorMInt(xorMInt(extractMInt(mi(#token("64","Int"),V_RCX),#token("59","Int"),#token("60","Int")),extractMInt(mi(#token("64","Int"),V_RBX),#token("59","Int"),#token("60","Int"))),extractMInt(addMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RCX)),concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RBX))),#token("60","Int"),#token("61","Int")))),`_|->_`(#token("\"CF\"","String"),extractMInt(addMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RCX)),concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RBX))),#token("0","Int"),#token("1","Int")))),`_|->_`(#token("\"OF\"","String"),`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(`_andBool_`(`_==K_`(eqMInt(extractMInt(mi(#token("64","Int"),V_RCX),#token("0","Int"),#token("1","Int")),#token("1'1","MInt")),eqMInt(extractMInt(mi(#token("64","Int"),V_RBX),#token("0","Int"),#token("1","Int")),#token("1'1","MInt"))),`notBool_`(`_==K_`(eqMInt(extractMInt(mi(#token("64","Int"),V_RCX),#token("0","Int"),#token("1","Int")),#token("1'1","MInt")),eqMInt(extractMInt(addMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RCX)),concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RBX))),#token("1","Int"),#token("2","Int")),#token("1'1","MInt"))))),#token("1'1","MInt"),#token("1'0","MInt")))),`_|->_`(#token("\"PF\"","String"),`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(`notBool_`(`_xorBool_`(`_xorBool_`(`_xorBool_`(`_xorBool_`(`_xorBool_`(`_xorBool_`(`_xorBool_`(eqMInt(extractMInt(addMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RCX)),concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RBX))),#token("64","Int"),#token("65","Int")),#token("1'1","MInt")),eqMInt(extractMInt(addMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RCX)),concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RBX))),#token("63","Int"),#token("64","Int")),#token("1'1","MInt"))),eqMInt(extractMInt(addMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RCX)),concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RBX))),#token("62","Int"),#token("63","Int")),#token("1'1","MInt"))),eqMInt(extractMInt(addMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RCX)),concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RBX))),#token("61","Int"),#token("62","Int")),#token("1'1","MInt"))),eqMInt(extractMInt(addMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RCX)),concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RBX))),#token("60","Int"),#token("61","Int")),#token("1'1","MInt"))),eqMInt(extractMInt(addMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RCX)),concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RBX))),#token("59","Int"),#token("60","Int")),#token("1'1","MInt"))),eqMInt(extractMInt(addMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RCX)),concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RBX))),#token("58","Int"),#token("59","Int")),#token("1'1","MInt"))),eqMInt(extractMInt(addMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RCX)),concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RBX))),#token("57","Int"),#token("58","Int")),#token("1'1","MInt")))),#token("1'1","MInt"),#token("1'0","MInt")))),`_|->_`(#token("\"RAX\"","String"),mi(#token("64","Int"),V_RAX))),`_|->_`(#token("\"RBP\"","String"),ptr(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("0","Int")),#token("64'1016","MInt")))),`_|->_`(#token("\"RBX\"","String"),extractMInt(addMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RCX)),concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RBX))),#token("1","Int"),#token("65","Int")))),`_|->_`(#token("\"RCX\"","String"),mi(#token("64","Int"),V_RCX))),`_|->_`(#token("\"RDI\"","String"),mi(#token("64","Int"),V_RDI))),`_|->_`(#token("\"RDX\"","String"),mi(#token("64","Int"),V_RDX))),`_|->_`(#token("\"RIP\"","String"),#token("64'18446744073709551615","MInt"))),`_|->_`(#token("\"RSI\"","String"),mi(#token("64","Int"),V_RSI))),`_|->_`(#token("\"RSP\"","String"),ptr(symloc(#token("1","Int"),#token("128","Int"),#token("1024","Int"),#token("8","Int"),#token("0","Int")),#token("64'1024","MInt")))),`_|->_`(#token("\"SF\"","String"),extractMInt(addMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RCX)),concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RBX))),#token("1","Int"),#token("2","Int")))),`_|->_`(#token("\"ZF\"","String"),`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(extractMInt(addMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RCX)),concatenateMInt(#token("1'0","MInt"),mi(#token("64","Int"),V_RBX))),#token("1","Int"),#token("65","Int")),#token("64'0","MInt")),#token("1'1","MInt"),#token("1'0","MInt"))))),_35,_36,_37,_38,_39)
[Warning] Internal: execution phase: missing SMTLib translation for mi . Please
re-run with the --debug-z3 flag. Search the logs starting with 'Z3 warning' to
see the Z3 implication that generated the warning. (missing SMTLib translation
for mi)
Command exited with non-zero status 1
301.48user 217.54system 3:13.78elapsed 267%CPU (0avgtext+0avgdata 9686384maxresident)k
24inputs+178984outputs (0major+6560710minor)pagefaults 0swaps
