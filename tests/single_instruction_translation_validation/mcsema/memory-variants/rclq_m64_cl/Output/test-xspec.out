Importing: Source(/home/ubuntu/Github/validating-binary-decompilation/tests/single_instruction_translation_validation/mcsema/memory-variants/rclq_m64_cl/././test-xspec.k)
Importing: Source(/home/ubuntu/Github/validating-binary-decompilation/tests/single_instruction_translation_validation/mcsema/memory-variants/rclq_m64_cl/test-xspec.k)
Parse spec modules [1/9 rules]                               =  0.021s
StateLog: /home/ubuntu/Github/X86-64-semantics/semantics/x86-semantics-kompiled/stateLog/prove-2044796696.log

Parsing finished:  609.337 s
Pre-processing rule:
rule too long...
	Source: /home/ubuntu/Github/validating-binary-decompilation/tests/single_instruction_translation_validation/mcsema/memory-variants/rclq_m64_cl/test-xspec.k Location(6,5,106,69)
==================================

Initialization finished
==================================
Stats for each phase, time, used memory, implicit main GC time percentage:
Total                 :  610.153 s,	 6170 MB, gc:  1.432 %
  Parsing             :  609.337 s,	 5978 MB, gc:  1.434 %
  Init                :    0.816 s,	 6170 MB, gc:  0.000 %

Init+Execution time:       0.816 s

  Time and top-level event counts:
  resolveFunctionAndAnywhere time  :    0.102 s,      #        450
    evaluateFunction time            :    0.080 s,      #        225
      builtin evaluation               :           ,      #        132
      function rule                    :           ,      #         12
      no rule applicable               :           ,      #         41
      no function rules                :           ,      #         40
    applyAnywhereRules time          :    0.000 s,      #         90
      no anywhere rules                :           ,      #         90
    remaining time & # cached        :    0.022 s,      #        135

  Recursive event counts:
  resolveFunctionAndAnywhere time  :           ,      #        464
    evaluateFunction time            :           ,      #         12
      builtin evaluation               :           ,      #          0
      function rule                    :           ,      #          0
      no rule applicable               :           ,      #          0
      no function rules                :           ,      #         12
    applyAnywhereRules time          :           ,      #          0
      no anywhere rules                :           ,      #          0
    # cached                         :           ,      #        452
==================================


Initial term
=====================

`<generatedTop>`(`<k>`(#token("fetchNoDBG","KItem")),`<functargets>`(`_|->_`(#token("_start","X86Id"),ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")))),`<rotargets>`(`.Map`(.KList)),`<datatargets>`(`.Map`(.KList)),`<bsstargets>`(`.Map`(.KList)),`<entrypoint>`(#EmptyK(.KList)),`<nextLocPc>`(_0),`<lastseenlabel>`(#EmptyK(.KList)),`<currentsection>`(#token("\"text\"","String")),`<memstate>`(`<text>`(code(`_Map_`(`_|->_`(ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")),storedInstr(`___X86-SYNTAX`(`rclq_X86-SYNTAX`(.KList),operandlist(`%cl_X86-SYNTAX`(.KList),operandlist(`_(_)_X86-SYNTAX`(#token("-32","Int"),`%rbp_X86-SYNTAX`(.KList)),`.List{"operandlist"}`(.KList)))))),`_|->_`(ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'1","MInt")),storedInstr(`___X86-SYNTAX`(`ret_X86-SYNTAX`(.KList),`.List{"operandlist"}`(.KList))))))),`<stack>`(`<memory>`(`<nextLoc>`(#token("1","Int")),`<objects>`(mem(`_Map_`(`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1000","Int")),byte(#token("0","Int"),mi(#token("64","Int"),VX_MEM_64))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1001","Int")),byte(#token("1","Int"),mi(#token("64","Int"),VX_MEM_64))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1002","Int")),byte(#token("2","Int"),mi(#token("64","Int"),VX_MEM_64))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1003","Int")),byte(#token("3","Int"),mi(#token("64","Int"),VX_MEM_64))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1004","Int")),byte(#token("4","Int"),mi(#token("64","Int"),VX_MEM_64))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1005","Int")),byte(#token("5","Int"),mi(#token("64","Int"),VX_MEM_64))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1006","Int")),byte(#token("6","Int"),mi(#token("64","Int"),VX_MEM_64))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1007","Int")),byte(#token("7","Int"),mi(#token("64","Int"),VX_MEM_64))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1032","Int")),byte(#token("0","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1033","Int")),byte(#token("1","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1034","Int")),byte(#token("2","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1035","Int")),byte(#token("3","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1036","Int")),byte(#token("4","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1037","Int")),byte(#token("5","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1038","Int")),byte(#token("6","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1039","Int")),byte(#token("7","Int"),#token("64'-1","MInt")))))),`<freed>`(`.Set`(.KList))),`<stackbase>`(stackBaseInfo(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("0","Int")),#token("64'1032","MInt"))),`<robase>`(roBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))),`<database>`(dataBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))),`<bssbase>`(bssBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))))),`<environment>`(`<argc>`(#EmptyK(.KList)),`<argv>`(#EmptyK(.KList))),`<regstate>`(`_Map_`(`_|->_`(#token("\"AF\"","String"),mi(#token("1","Int"),VX_AF)),`_|->_`(#token("\"CF\"","String"),mi(#token("1","Int"),VX_CF)),`_|->_`(#token("\"OF\"","String"),mi(#token("1","Int"),VX_OF)),`_|->_`(#token("\"PF\"","String"),mi(#token("1","Int"),VX_PF)),`_|->_`(#token("\"RAX\"","String"),mi(#token("64","Int"),VX_RAX)),`_|->_`(#token("\"RBP\"","String"),ptr(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("0","Int")),#token("64'1032","MInt"))),`_|->_`(#token("\"RBX\"","String"),mi(#token("64","Int"),VX_RBX)),`_|->_`(#token("\"RCX\"","String"),mi(#token("64","Int"),VX_RCX)),`_|->_`(#token("\"RDI\"","String"),mi(#token("64","Int"),VX_RDI)),`_|->_`(#token("\"RDX\"","String"),mi(#token("64","Int"),VX_RDX)),`_|->_`(#token("\"RIP\"","String"),ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt"))),`_|->_`(#token("\"RSI\"","String"),mi(#token("64","Int"),VX_RSI)),`_|->_`(#token("\"RSP\"","String"),ptr(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("0","Int")),#token("64'1032","MInt"))),`_|->_`(#token("\"SF\"","String"),mi(#token("1","Int"),VX_SF)),`_|->_`(#token("\"YMM1\"","String"),mi(#token("256","Int"),VX_YMM1)),`_|->_`(#token("\"YMM2\"","String"),mi(#token("256","Int"),VX_YMM2)),`_|->_`(#token("\"ZF\"","String"),mi(#token("1","Int"),VX_ZF)))),_23,_24,_25,_26,_27)
/\
#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(`_==K_`(`_orBool_`(`_==K_`(VX_AF,#token("0","Int")),`_==K_`(VX_AF,#token("1","Int"))),#token("true","Bool")),`_==K_`(`_orBool_`(`_==K_`(VX_CF,#token("0","Int")),`_==K_`(VX_CF,#token("1","Int"))),#token("true","Bool"))),`_==K_`(`_orBool_`(`_==K_`(VX_OF,#token("0","Int")),`_==K_`(VX_OF,#token("1","Int"))),#token("true","Bool"))),`_==K_`(`_orBool_`(`_==K_`(VX_PF,#token("0","Int")),`_==K_`(VX_PF,#token("1","Int"))),#token("true","Bool"))),`_==K_`(`_orBool_`(`_==K_`(VX_SF,#token("0","Int")),`_==K_`(VX_SF,#token("1","Int"))),#token("true","Bool"))),`_==K_`(`_orBool_`(`_==K_`(VX_ZF,#token("0","Int")),`_==K_`(VX_ZF,#token("1","Int"))),#token("true","Bool"))),`_==K_`(`_<Int_`(VX_MEM_64,#token("18446744073709551616","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(VX_MEM_64,#token("0","Int")),#token("true","Bool"))),`_==K_`(`_<Int_`(VX_RAX,#token("18446744073709551616","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(VX_RAX,#token("0","Int")),#token("true","Bool"))),`_==K_`(`_<Int_`(VX_RBX,#token("18446744073709551616","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(VX_RBX,#token("0","Int")),#token("true","Bool"))),`_==K_`(`_<Int_`(VX_RCX,#token("18446744073709551616","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(VX_RCX,#token("0","Int")),#token("true","Bool"))),`_==K_`(`_<Int_`(VX_RDI,#token("18446744073709551616","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(VX_RDI,#token("0","Int")),#token("true","Bool"))),`_==K_`(`_<Int_`(VX_RDX,#token("18446744073709551616","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(VX_RDX,#token("0","Int")),#token("true","Bool"))),`_==K_`(`_<Int_`(VX_RSI,#token("18446744073709551616","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(VX_RSI,#token("0","Int")),#token("true","Bool")))


Target term
=====================

`<generatedTop>`(`<k>`(`exit_0_X86-FETCH-EXECUTE`(.KList)),`<functargets>`(`_|->_`(#token("_start","X86Id"),ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")))),`<rotargets>`(`.Map`(.KList)),`<datatargets>`(`.Map`(.KList)),`<bsstargets>`(`.Map`(.KList)),`<entrypoint>`(#EmptyK(.KList)),`<nextLocPc>`(_0),`<lastseenlabel>`(#EmptyK(.KList)),`<currentsection>`(#token("\"text\"","String")),`<memstate>`(`<text>`(code(`_Map_`(`_|->_`(ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")),storedInstr(`___X86-SYNTAX`(`rclq_X86-SYNTAX`(.KList),operandlist(`%cl_X86-SYNTAX`(.KList),operandlist(`_(_)_X86-SYNTAX`(#token("-32","Int"),`%rbp_X86-SYNTAX`(.KList)),`.List{"operandlist"}`(.KList)))))),`_|->_`(ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'1","MInt")),storedInstr(`___X86-SYNTAX`(`ret_X86-SYNTAX`(.KList),`.List{"operandlist"}`(.KList))))))),`<stack>`(`<memory>`(`<nextLoc>`(#token("1","Int")),`<objects>`(mem(`_Map_`(`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1000","Int")),_15),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1001","Int")),_16),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1002","Int")),_17),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1003","Int")),_18),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1004","Int")),_19),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1005","Int")),_20),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1006","Int")),_21),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1007","Int")),_22),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1032","Int")),byte(#token("0","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1033","Int")),byte(#token("1","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1034","Int")),byte(#token("2","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1035","Int")),byte(#token("3","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1036","Int")),byte(#token("4","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1037","Int")),byte(#token("5","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1038","Int")),byte(#token("6","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1039","Int")),byte(#token("7","Int"),#token("64'-1","MInt")))))),`<freed>`(`.Set`(.KList))),`<stackbase>`(stackBaseInfo(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("0","Int")),#token("64'1032","MInt"))),`<robase>`(roBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))),`<database>`(dataBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))),`<bssbase>`(bssBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))))),`<environment>`(`<argc>`(#EmptyK(.KList)),`<argv>`(#EmptyK(.KList))),`<regstate>`(`_Map_`(`_|->_`(#token("\"AF\"","String"),mi(#token("1","Int"),_7)),`_|->_`(#token("\"CF\"","String"),mi(#token("1","Int"),_8)),`_|->_`(#token("\"OF\"","String"),mi(#token("1","Int"),_9)),`_|->_`(#token("\"PF\"","String"),mi(#token("1","Int"),_10)),`_|->_`(#token("\"RAX\"","String"),mi(#token("64","Int"),_1)),`_|->_`(#token("\"RBP\"","String"),ptr(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("0","Int")),#token("64'1032","MInt"))),`_|->_`(#token("\"RBX\"","String"),mi(#token("64","Int"),_2)),`_|->_`(#token("\"RCX\"","String"),mi(#token("64","Int"),_3)),`_|->_`(#token("\"RDI\"","String"),mi(#token("64","Int"),_6)),`_|->_`(#token("\"RDX\"","String"),mi(#token("64","Int"),_4)),`_|->_`(#token("\"RIP\"","String"),#token("64'18446744073709551615","MInt")),`_|->_`(#token("\"RSI\"","String"),mi(#token("64","Int"),_5)),`_|->_`(#token("\"RSP\"","String"),ptr(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("0","Int")),#token("64'1040","MInt"))),`_|->_`(#token("\"SF\"","String"),mi(#token("1","Int"),_11)),`_|->_`(#token("\"YMM1\"","String"),mi(#token("256","Int"),_13)),`_|->_`(#token("\"YMM2\"","String"),mi(#token("256","Int"),_14)),`_|->_`(#token("\"ZF\"","String"),mi(#token("1","Int"),_12)))),_23,_24,_25,_26,_27)
/\
#True(.KList)


STEP 1 v1 :    5.236 s, 		 1797 MB, gc:  0.000 %
===================
`<memory>`(`<nextLoc>`(#token("1","Int")),`<objects>`(mem(`_Map_`(`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1000","Int")),byte(#token("0","Int"),mi(#token("64","Int"),VX_MEM_64))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1001","Int")),byte(#token("1","Int"),mi(#token("64","Int"),VX_MEM_64))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1002","Int")),byte(#token("2","Int"),mi(#token("64","Int"),VX_MEM_64))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1003","Int")),byte(#token("3","Int"),mi(#token("64","Int"),VX_MEM_64))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1004","Int")),byte(#token("4","Int"),mi(#token("64","Int"),VX_MEM_64))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1005","Int")),byte(#token("5","Int"),mi(#token("64","Int"),VX_MEM_64))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1006","Int")),byte(#token("6","Int"),mi(#token("64","Int"),VX_MEM_64))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1007","Int")),byte(#token("7","Int"),mi(#token("64","Int"),VX_MEM_64))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1032","Int")),byte(#token("0","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1033","Int")),byte(#token("1","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1034","Int")),byte(#token("2","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1035","Int")),byte(#token("3","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1036","Int")),byte(#token("4","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1037","Int")),byte(#token("5","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1038","Int")),byte(#token("6","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1039","Int")),byte(#token("7","Int"),#token("64'-1","MInt")))))),`<freed>`(`.Set`(.KList)))

STEP 25 v1 :    6.337 s, 		 2469 MB, gc:  0.000 %
===================
`<memory>`(`<nextLoc>`(#token("1","Int")),`<objects>`(mem(`_Map_`(`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1000","Int")),byte(#token("0","Int"),extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("1","Int"),#token("65","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1001","Int")),byte(#token("1","Int"),extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("1","Int"),#token("65","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1002","Int")),byte(#token("2","Int"),extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("1","Int"),#token("65","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1003","Int")),byte(#token("3","Int"),extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("1","Int"),#token("65","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1004","Int")),byte(#token("4","Int"),extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("1","Int"),#token("65","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1005","Int")),byte(#token("5","Int"),extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("1","Int"),#token("65","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1006","Int")),byte(#token("6","Int"),extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("1","Int"),#token("65","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1007","Int")),byte(#token("7","Int"),extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("1","Int"),#token("65","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1032","Int")),byte(#token("0","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1033","Int")),byte(#token("1","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1034","Int")),byte(#token("2","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1035","Int")),byte(#token("3","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1036","Int")),byte(#token("4","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1037","Int")),byte(#token("5","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1038","Int")),byte(#token("6","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1039","Int")),byte(#token("7","Int"),#token("64'-1","MInt")))))),`<freed>`(`.Set`(.KList)))

Step above: 25, evaluation ended with no successors.

SPEC FAILED: /home/ubuntu/Github/validating-binary-decompilation/tests/single_instruction_translation_validation/mcsema/memory-variants/rclq_m64_cl/test-xspec.k Location(6,5,106,69)
==================================
Success execution paths: 0
Failed execution paths: 1
Longest path: 25 steps
Stats for each phase, time, used memory, implicit main GC time percentage:
Total                 :  617.926 s,	 2837 MB, gc:  1.444 %
  Parsing             :  609.337 s,	 5978 MB, gc:  1.434 %
  Init                :    0.816 s,	 6170 MB, gc:  0.000 %
  Execution           :    7.773 s,	 2837 MB, gc:  2.406 %

Init+Execution time:       8.590 s
  query build time                 :    0.013 s,      #         25

  Time and top-level event counts:
  resolveFunctionAndAnywhere time  :    0.282 s,      #       1401
    evaluateFunction time            :    0.251 s,      #        513
      builtin evaluation               :           ,      #        179
      function rule                    :           ,      #         51
      sort predicate                   :           ,      #          6
      no rule applicable               :           ,      #        180
      no function rules                :           ,      #         97
    applyAnywhereRules time          :    0.001 s,      #        248
      no anywhere rules                :           ,      #        248
    remaining time & # cached        :    0.029 s,      #        640
  log time                         :    2.110 s,      #         26
  impliesSMT time                  :    0.015 s,      #         41

  Recursive event counts:
  resolveFunctionAndAnywhere time  :           ,      #       2909
    evaluateFunction time            :           ,      #        575
      builtin evaluation               :           ,      #        239
      function rule                    :           ,      #        247
      sort predicate                   :           ,      #          0
      no rule applicable               :           ,      #         47
      no function rules                :           ,      #         39
    applyAnywhereRules time          :           ,      #         54
      no anywhere rules                :           ,      #         54
    # cached                         :           ,      #       2280

Max memory : 262144 MB
==================================

`<generatedTop>`(`<k>`(`exit_0_X86-FETCH-EXECUTE`(.KList)),`<functargets>`(`_|->_`(#token("_start","X86Id"),ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")))),`<rotargets>`(`.Map`(.KList)),`<datatargets>`(`.Map`(.KList)),`<bsstargets>`(`.Map`(.KList)),`<entrypoint>`(#EmptyK(.KList)),`<nextLocPc>`(_0),`<lastseenlabel>`(#EmptyK(.KList)),`<currentsection>`(#token("\"text\"","String")),`<memstate>`(`<text>`(code(`_Map_`(`_|->_`(ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")),storedInstr(`___X86-SYNTAX`(`rclq_X86-SYNTAX`(.KList),operandlist(`%cl_X86-SYNTAX`(.KList),operandlist(`_(_)_X86-SYNTAX`(#token("-32","Int"),`%rbp_X86-SYNTAX`(.KList)),`.List{"operandlist"}`(.KList)))))),`_|->_`(ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'1","MInt")),storedInstr(`___X86-SYNTAX`(`ret_X86-SYNTAX`(.KList),`.List{"operandlist"}`(.KList))))))),`<stack>`(`<memory>`(`<nextLoc>`(#token("1","Int")),`<objects>`(mem(`_Map_`(`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1000","Int")),byte(#token("0","Int"),extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("1","Int"),#token("65","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1001","Int")),byte(#token("1","Int"),extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("1","Int"),#token("65","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1002","Int")),byte(#token("2","Int"),extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("1","Int"),#token("65","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1003","Int")),byte(#token("3","Int"),extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("1","Int"),#token("65","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1004","Int")),byte(#token("4","Int"),extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("1","Int"),#token("65","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1005","Int")),byte(#token("5","Int"),extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("1","Int"),#token("65","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1006","Int")),byte(#token("6","Int"),extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("1","Int"),#token("65","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1007","Int")),byte(#token("7","Int"),extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("1","Int"),#token("65","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1032","Int")),byte(#token("0","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1033","Int")),byte(#token("1","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1034","Int")),byte(#token("2","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1035","Int")),byte(#token("3","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1036","Int")),byte(#token("4","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1037","Int")),byte(#token("5","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1038","Int")),byte(#token("6","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1039","Int")),byte(#token("7","Int"),#token("64'-1","MInt")))))),`<freed>`(`.Set`(.KList))),`<stackbase>`(stackBaseInfo(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("0","Int")),#token("64'1032","MInt"))),`<robase>`(roBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))),`<database>`(dataBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))),`<bssbase>`(bssBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))))),`<environment>`(`<argc>`(#EmptyK(.KList)),`<argv>`(#EmptyK(.KList))),`<regstate>`(`_Map_`(`_|->_`(#token("\"AF\"","String"),mi(#token("1","Int"),VX_AF)),`_|->_`(#token("\"CF\"","String"),extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("0","Int"),#token("1","Int"))),`_|->_`(#token("\"OF\"","String"),`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(`_orBool_`(`_andBool_`(eqMInt(extractMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt")),#token("57","Int"),#token("65","Int")),#token("8'1","MInt")),`_xorBool_`(eqMInt(extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("0","Int"),#token("1","Int")),#token("1'1","MInt")),eqMInt(extractMInt(rolHelper(concatenateMInt(`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(mi(#token("1","Int"),VX_CF),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt")),mi(#token("64","Int"),VX_MEM_64)),uvalueMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt"))),#token("0","Int")),#token("1","Int"),#token("2","Int")),#token("1'1","MInt")))),`_andBool_`(`notBool_`(eqMInt(extractMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt")),#token("57","Int"),#token("65","Int")),#token("8'1","MInt"))),`_orBool_`(`_andBool_`(`notBool_`(eqMInt(extractMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt")),#token("57","Int"),#token("65","Int")),#token("8'0","MInt"))),`undefBool_MINT-WRAPPER-SYNTAX`(.KList)),`_andBool_`(`notBool_`(`notBool_`(eqMInt(extractMInt(uremMInt(concatenateMInt(#token("57'0","MInt"),andMInt(extractMInt(mi(#token("64","Int"),VX_RCX),#token("56","Int"),#token("64","Int")),#token("8'63","MInt"))),#token("65'65","MInt")),#token("57","Int"),#token("65","Int")),#token("8'0","MInt")))),eqMInt(mi(#token("1","Int"),VX_OF),#token("1'1","MInt")))))),#token("1'1","MInt"),#token("1'0","MInt"))),`_|->_`(#token("\"PF\"","String"),mi(#token("1","Int"),VX_PF)),`_|->_`(#token("\"RAX\"","String"),mi(#token("64","Int"),VX_RAX)),`_|->_`(#token("\"RBP\"","String"),ptr(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("0","Int")),#token("64'1032","MInt"))),`_|->_`(#token("\"RBX\"","String"),mi(#token("64","Int"),VX_RBX)),`_|->_`(#token("\"RCX\"","String"),mi(#token("64","Int"),VX_RCX)),`_|->_`(#token("\"RDI\"","String"),mi(#token("64","Int"),VX_RDI)),`_|->_`(#token("\"RDX\"","String"),mi(#token("64","Int"),VX_RDX)),`_|->_`(#token("\"RIP\"","String"),#token("64'18446744073709551615","MInt")),`_|->_`(#token("\"RSI\"","String"),mi(#token("64","Int"),VX_RSI)),`_|->_`(#token("\"RSP\"","String"),ptr(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("0","Int")),#token("64'1040","MInt"))),`_|->_`(#token("\"SF\"","String"),mi(#token("1","Int"),VX_SF)),`_|->_`(#token("\"YMM1\"","String"),mi(#token("256","Int"),VX_YMM1)),`_|->_`(#token("\"YMM2\"","String"),mi(#token("256","Int"),VX_YMM2)),`_|->_`(#token("\"ZF\"","String"),mi(#token("1","Int"),VX_ZF)))),_23,_24,_25,_26,_27)
[Warning] Internal: execution phase: missing SMTLib translation for
bitwidthMInt . Please re-run with the --debug-z3 flag. Search the logs starting
with 'Z3 warning' to see the Z3 implication that generated the warning.
(missing SMTLib translation for bitwidthMInt)
[Warning] Internal: execution phase: missing SMTLib translation for mi . Please
re-run with the --debug-z3 flag. Search the logs starting with 'Z3 warning' to
see the Z3 implication that generated the warning. (missing SMTLib translation
for mi)
[Warning] Internal: execution phase: missing SMTLib translation for rolHelper .
Please re-run with the --debug-z3 flag. Search the logs starting with 'Z3
warning' to see the Z3 implication that generated the warning. (missing SMTLib
translation for rolHelper)
[Warning] Internal: execution phase: missing SMTLib translation for svalueMInt
. Please re-run with the --debug-z3 flag. Search the logs starting with 'Z3
warning' to see the Z3 implication that generated the warning. (missing SMTLib
translation for svalueMInt)
Command exited with non-zero status 1
775.72user 271.47system 10:20.09elapsed 168%CPU (0avgtext+0avgdata 10084104maxresident)k
0inputs+253064outputs (0major+18256847minor)pagefaults 0swaps
