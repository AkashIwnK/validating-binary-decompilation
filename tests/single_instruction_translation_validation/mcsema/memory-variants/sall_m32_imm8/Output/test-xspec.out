Importing: Source(/home/ubuntu/Github/validating-binary-decompilation/tests/single_instruction_translation_validation/mcsema/memory-variants/sall_m32_imm8/././test-xspec.k)
Importing: Source(/home/ubuntu/Github/validating-binary-decompilation/tests/single_instruction_translation_validation/mcsema/memory-variants/sall_m32_imm8/test-xspec.k)
Parse spec modules [1/9 rules]                               =  0.020s
StateLog: /home/ubuntu/Github/X86-64-semantics/semantics/x86-semantics-kompiled/stateLog/prove-2044796696.log

Parsing finished:  637.616 s
Pre-processing rule:
rule too long...
	Source: /home/ubuntu/Github/validating-binary-decompilation/tests/single_instruction_translation_validation/mcsema/memory-variants/sall_m32_imm8/test-xspec.k Location(6,5,102,69)
==================================

Initialization finished
==================================
Stats for each phase, time, used memory, implicit main GC time percentage:
Total                 :  638.112 s,	 4833 MB, gc:  1.270 %
  Parsing             :  637.616 s,	 4641 MB, gc:  1.271 %
  Init                :    0.496 s,	 4833 MB, gc:  0.000 %

Init+Execution time:       0.496 s

  Time and top-level event counts:
  resolveFunctionAndAnywhere time  :    0.073 s,      #        416
    evaluateFunction time            :    0.058 s,      #        210
      builtin evaluation               :           ,      #        117
      function rule                    :           ,      #         12
      no rule applicable               :           ,      #         41
      no function rules                :           ,      #         40
    applyAnywhereRules time          :    0.000 s,      #         81
      no anywhere rules                :           ,      #         81
    remaining time & # cached        :    0.014 s,      #        125

  Recursive event counts:
  resolveFunctionAndAnywhere time  :           ,      #        340
    evaluateFunction time            :           ,      #         12
      builtin evaluation               :           ,      #          0
      function rule                    :           ,      #          0
      no rule applicable               :           ,      #          0
      no function rules                :           ,      #         12
    applyAnywhereRules time          :           ,      #          0
      no anywhere rules                :           ,      #          0
    # cached                         :           ,      #        328
==================================


Initial term
=====================

`<generatedTop>`(`<k>`(#token("fetchNoDBG","KItem")),`<functargets>`(`_|->_`(#token("_start","X86Id"),ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")))),`<rotargets>`(`.Map`(.KList)),`<datatargets>`(`.Map`(.KList)),`<bsstargets>`(`.Map`(.KList)),`<entrypoint>`(#EmptyK(.KList)),`<nextLocPc>`(_0),`<lastseenlabel>`(#EmptyK(.KList)),`<currentsection>`(#token("\"text\"","String")),`<memstate>`(`<text>`(code(`_Map_`(`_|->_`(ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")),storedInstr(`___X86-SYNTAX`(`sall_X86-SYNTAX`(.KList),operandlist(#token("$0xa","HexConstant"),operandlist(`_(_)_X86-SYNTAX`(#token("-32","Int"),`%rbp_X86-SYNTAX`(.KList)),`.List{"operandlist"}`(.KList)))))),`_|->_`(ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'1","MInt")),storedInstr(`___X86-SYNTAX`(`ret_X86-SYNTAX`(.KList),`.List{"operandlist"}`(.KList))))))),`<stack>`(`<memory>`(`<nextLoc>`(#token("1","Int")),`<objects>`(mem(`_Map_`(`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1000","Int")),byte(#token("0","Int"),mi(#token("32","Int"),VX_MEM_32))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1001","Int")),byte(#token("1","Int"),mi(#token("32","Int"),VX_MEM_32))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1002","Int")),byte(#token("2","Int"),mi(#token("32","Int"),VX_MEM_32))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1003","Int")),byte(#token("3","Int"),mi(#token("32","Int"),VX_MEM_32))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1032","Int")),byte(#token("0","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1033","Int")),byte(#token("1","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1034","Int")),byte(#token("2","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1035","Int")),byte(#token("3","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1036","Int")),byte(#token("4","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1037","Int")),byte(#token("5","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1038","Int")),byte(#token("6","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1039","Int")),byte(#token("7","Int"),#token("64'-1","MInt")))))),`<freed>`(`.Set`(.KList))),`<stackbase>`(stackBaseInfo(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("0","Int")),#token("64'1032","MInt"))),`<robase>`(roBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))),`<database>`(dataBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))),`<bssbase>`(bssBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))))),`<environment>`(`<argc>`(#EmptyK(.KList)),`<argv>`(#EmptyK(.KList))),`<regstate>`(`_Map_`(`_|->_`(#token("\"AF\"","String"),mi(#token("1","Int"),VX_AF)),`_|->_`(#token("\"CF\"","String"),mi(#token("1","Int"),VX_CF)),`_|->_`(#token("\"OF\"","String"),mi(#token("1","Int"),VX_OF)),`_|->_`(#token("\"PF\"","String"),mi(#token("1","Int"),VX_PF)),`_|->_`(#token("\"RAX\"","String"),mi(#token("64","Int"),VX_RAX)),`_|->_`(#token("\"RBP\"","String"),ptr(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("0","Int")),#token("64'1032","MInt"))),`_|->_`(#token("\"RBX\"","String"),mi(#token("64","Int"),VX_RBX)),`_|->_`(#token("\"RCX\"","String"),mi(#token("64","Int"),VX_RCX)),`_|->_`(#token("\"RDI\"","String"),mi(#token("64","Int"),VX_RDI)),`_|->_`(#token("\"RDX\"","String"),mi(#token("64","Int"),VX_RDX)),`_|->_`(#token("\"RIP\"","String"),ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt"))),`_|->_`(#token("\"RSI\"","String"),mi(#token("64","Int"),VX_RSI)),`_|->_`(#token("\"RSP\"","String"),ptr(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("0","Int")),#token("64'1032","MInt"))),`_|->_`(#token("\"SF\"","String"),mi(#token("1","Int"),VX_SF)),`_|->_`(#token("\"YMM1\"","String"),mi(#token("256","Int"),VX_YMM1)),`_|->_`(#token("\"YMM2\"","String"),mi(#token("256","Int"),VX_YMM2)),`_|->_`(#token("\"ZF\"","String"),mi(#token("1","Int"),VX_ZF)))),_19,_20,_21,_22,_23)
/\
#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(#And(`_==K_`(`_orBool_`(`_==K_`(VX_AF,#token("0","Int")),`_==K_`(VX_AF,#token("1","Int"))),#token("true","Bool")),`_==K_`(`_orBool_`(`_==K_`(VX_CF,#token("0","Int")),`_==K_`(VX_CF,#token("1","Int"))),#token("true","Bool"))),`_==K_`(`_orBool_`(`_==K_`(VX_OF,#token("0","Int")),`_==K_`(VX_OF,#token("1","Int"))),#token("true","Bool"))),`_==K_`(`_orBool_`(`_==K_`(VX_PF,#token("0","Int")),`_==K_`(VX_PF,#token("1","Int"))),#token("true","Bool"))),`_==K_`(`_orBool_`(`_==K_`(VX_SF,#token("0","Int")),`_==K_`(VX_SF,#token("1","Int"))),#token("true","Bool"))),`_==K_`(`_orBool_`(`_==K_`(VX_ZF,#token("0","Int")),`_==K_`(VX_ZF,#token("1","Int"))),#token("true","Bool"))),`_==K_`(`_<Int_`(VX_MEM_32,#token("4294967296","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(VX_MEM_32,#token("0","Int")),#token("true","Bool"))),`_==K_`(`_<Int_`(VX_RAX,#token("18446744073709551616","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(VX_RAX,#token("0","Int")),#token("true","Bool"))),`_==K_`(`_<Int_`(VX_RBX,#token("18446744073709551616","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(VX_RBX,#token("0","Int")),#token("true","Bool"))),`_==K_`(`_<Int_`(VX_RCX,#token("18446744073709551616","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(VX_RCX,#token("0","Int")),#token("true","Bool"))),`_==K_`(`_<Int_`(VX_RDI,#token("18446744073709551616","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(VX_RDI,#token("0","Int")),#token("true","Bool"))),`_==K_`(`_<Int_`(VX_RDX,#token("18446744073709551616","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(VX_RDX,#token("0","Int")),#token("true","Bool"))),`_==K_`(`_<Int_`(VX_RSI,#token("18446744073709551616","Int")),#token("true","Bool"))),`_==K_`(`_>=Int_`(VX_RSI,#token("0","Int")),#token("true","Bool")))


Target term
=====================

`<generatedTop>`(`<k>`(`exit_0_X86-FETCH-EXECUTE`(.KList)),`<functargets>`(`_|->_`(#token("_start","X86Id"),ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")))),`<rotargets>`(`.Map`(.KList)),`<datatargets>`(`.Map`(.KList)),`<bsstargets>`(`.Map`(.KList)),`<entrypoint>`(#EmptyK(.KList)),`<nextLocPc>`(_0),`<lastseenlabel>`(#EmptyK(.KList)),`<currentsection>`(#token("\"text\"","String")),`<memstate>`(`<text>`(code(`_Map_`(`_|->_`(ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")),storedInstr(`___X86-SYNTAX`(`sall_X86-SYNTAX`(.KList),operandlist(#token("$0xa","HexConstant"),operandlist(`_(_)_X86-SYNTAX`(#token("-32","Int"),`%rbp_X86-SYNTAX`(.KList)),`.List{"operandlist"}`(.KList)))))),`_|->_`(ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'1","MInt")),storedInstr(`___X86-SYNTAX`(`ret_X86-SYNTAX`(.KList),`.List{"operandlist"}`(.KList))))))),`<stack>`(`<memory>`(`<nextLoc>`(#token("1","Int")),`<objects>`(mem(`_Map_`(`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1000","Int")),_15),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1001","Int")),_16),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1002","Int")),_17),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1003","Int")),_18),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1032","Int")),byte(#token("0","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1033","Int")),byte(#token("1","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1034","Int")),byte(#token("2","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1035","Int")),byte(#token("3","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1036","Int")),byte(#token("4","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1037","Int")),byte(#token("5","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1038","Int")),byte(#token("6","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1039","Int")),byte(#token("7","Int"),#token("64'-1","MInt")))))),`<freed>`(`.Set`(.KList))),`<stackbase>`(stackBaseInfo(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("0","Int")),#token("64'1032","MInt"))),`<robase>`(roBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))),`<database>`(dataBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))),`<bssbase>`(bssBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))))),`<environment>`(`<argc>`(#EmptyK(.KList)),`<argv>`(#EmptyK(.KList))),`<regstate>`(`_Map_`(`_|->_`(#token("\"AF\"","String"),mi(#token("1","Int"),_7)),`_|->_`(#token("\"CF\"","String"),mi(#token("1","Int"),_8)),`_|->_`(#token("\"OF\"","String"),mi(#token("1","Int"),_9)),`_|->_`(#token("\"PF\"","String"),mi(#token("1","Int"),_10)),`_|->_`(#token("\"RAX\"","String"),mi(#token("64","Int"),_1)),`_|->_`(#token("\"RBP\"","String"),ptr(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("0","Int")),#token("64'1032","MInt"))),`_|->_`(#token("\"RBX\"","String"),mi(#token("64","Int"),_2)),`_|->_`(#token("\"RCX\"","String"),mi(#token("64","Int"),_3)),`_|->_`(#token("\"RDI\"","String"),mi(#token("64","Int"),_6)),`_|->_`(#token("\"RDX\"","String"),mi(#token("64","Int"),_4)),`_|->_`(#token("\"RIP\"","String"),#token("64'18446744073709551615","MInt")),`_|->_`(#token("\"RSI\"","String"),mi(#token("64","Int"),_5)),`_|->_`(#token("\"RSP\"","String"),ptr(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("0","Int")),#token("64'1040","MInt"))),`_|->_`(#token("\"SF\"","String"),mi(#token("1","Int"),_11)),`_|->_`(#token("\"YMM1\"","String"),mi(#token("256","Int"),_13)),`_|->_`(#token("\"YMM2\"","String"),mi(#token("256","Int"),_14)),`_|->_`(#token("\"ZF\"","String"),mi(#token("1","Int"),_12)))),_19,_20,_21,_22,_23)
/\
#True(.KList)


STEP 1 v1 :    2.075 s, 		 6097 MB, gc:  0.000 %
===================
`<memory>`(`<nextLoc>`(#token("1","Int")),`<objects>`(mem(`_Map_`(`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1000","Int")),byte(#token("0","Int"),mi(#token("32","Int"),VX_MEM_32))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1001","Int")),byte(#token("1","Int"),mi(#token("32","Int"),VX_MEM_32))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1002","Int")),byte(#token("2","Int"),mi(#token("32","Int"),VX_MEM_32))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1003","Int")),byte(#token("3","Int"),mi(#token("32","Int"),VX_MEM_32))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1032","Int")),byte(#token("0","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1033","Int")),byte(#token("1","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1034","Int")),byte(#token("2","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1035","Int")),byte(#token("3","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1036","Int")),byte(#token("4","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1037","Int")),byte(#token("5","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1038","Int")),byte(#token("6","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1039","Int")),byte(#token("7","Int"),#token("64'-1","MInt")))))),`<freed>`(`.Set`(.KList)))

STEP 25 v1 :    4.033 s, 		 2135 MB, gc:  5.721 %
===================
`<memory>`(`<nextLoc>`(#token("1","Int")),`<objects>`(mem(`_Map_`(`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1000","Int")),byte(#token("0","Int"),extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("1","Int"),#token("33","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1001","Int")),byte(#token("1","Int"),extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("1","Int"),#token("33","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1002","Int")),byte(#token("2","Int"),extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("1","Int"),#token("33","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1003","Int")),byte(#token("3","Int"),extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("1","Int"),#token("33","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1032","Int")),byte(#token("0","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1033","Int")),byte(#token("1","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1034","Int")),byte(#token("2","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1035","Int")),byte(#token("3","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1036","Int")),byte(#token("4","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1037","Int")),byte(#token("5","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1038","Int")),byte(#token("6","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1039","Int")),byte(#token("7","Int"),#token("64'-1","MInt")))))),`<freed>`(`.Set`(.KList)))

Step above: 25, evaluation ended with no successors.

SPEC FAILED: /home/ubuntu/Github/validating-binary-decompilation/tests/single_instruction_translation_validation/mcsema/memory-variants/sall_m32_imm8/test-xspec.k Location(6,5,102,69)
==================================
Success execution paths: 0
Failed execution paths: 1
Longest path: 25 steps
Stats for each phase, time, used memory, implicit main GC time percentage:
Total                 :  642.615 s,	 2492 MB, gc:  1.279 %
  Parsing             :  637.616 s,	 4641 MB, gc:  1.271 %
  Init                :    0.496 s,	 4833 MB, gc:  0.000 %
  Execution           :    4.504 s,	 2492 MB, gc:  2.487 %

Init+Execution time:       4.999 s
  query build time                 :    0.013 s,      #         14

  Time and top-level event counts:
  resolveFunctionAndAnywhere time  :    0.371 s,      #       1460
    evaluateFunction time            :    0.345 s,      #        563
      builtin evaluation               :           ,      #        182
      function rule                    :           ,      #         75
      sort predicate                   :           ,      #          6
      no rule applicable               :           ,      #        206
      no function rules                :           ,      #         94
    applyAnywhereRules time          :    0.001 s,      #        215
      no anywhere rules                :           ,      #        215
    remaining time & # cached        :    0.025 s,      #        682
  log time                         :    1.738 s,      #         26
  impliesSMT time                  :    0.014 s,      #         32

  Recursive event counts:
  resolveFunctionAndAnywhere time  :           ,      #       2101
    evaluateFunction time            :           ,      #        434
      builtin evaluation               :           ,      #        223
      function rule                    :           ,      #        161
      sort predicate                   :           ,      #          0
      no rule applicable               :           ,      #         23
      no function rules                :           ,      #         24
    applyAnywhereRules time          :           ,      #         38
      no anywhere rules                :           ,      #         38
    # cached                         :           ,      #       1629

Max memory : 262144 MB
==================================

`<generatedTop>`(`<k>`(`exit_0_X86-FETCH-EXECUTE`(.KList)),`<functargets>`(`_|->_`(#token("_start","X86Id"),ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")))),`<rotargets>`(`.Map`(.KList)),`<datatargets>`(`.Map`(.KList)),`<bsstargets>`(`.Map`(.KList)),`<entrypoint>`(#EmptyK(.KList)),`<nextLocPc>`(_0),`<lastseenlabel>`(#EmptyK(.KList)),`<currentsection>`(#token("\"text\"","String")),`<memstate>`(`<text>`(code(`_Map_`(`_|->_`(ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'0","MInt")),storedInstr(`___X86-SYNTAX`(`sall_X86-SYNTAX`(.KList),operandlist(#token("$0xa","HexConstant"),operandlist(`_(_)_X86-SYNTAX`(#token("-32","Int"),`%rbp_X86-SYNTAX`(.KList)),`.List{"operandlist"}`(.KList)))))),`_|->_`(ptr(symloc(#token("-1","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int"),#token("0","Int")),#token("64'1","MInt")),storedInstr(`___X86-SYNTAX`(`ret_X86-SYNTAX`(.KList),`.List{"operandlist"}`(.KList))))))),`<stack>`(`<memory>`(`<nextLoc>`(#token("1","Int")),`<objects>`(mem(`_Map_`(`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1000","Int")),byte(#token("0","Int"),extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("1","Int"),#token("33","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1001","Int")),byte(#token("1","Int"),extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("1","Int"),#token("33","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1002","Int")),byte(#token("2","Int"),extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("1","Int"),#token("33","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1003","Int")),byte(#token("3","Int"),extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("1","Int"),#token("33","Int")))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1032","Int")),byte(#token("0","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1033","Int")),byte(#token("1","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1034","Int")),byte(#token("2","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1035","Int")),byte(#token("3","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1036","Int")),byte(#token("4","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1037","Int")),byte(#token("5","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1038","Int")),byte(#token("6","Int"),#token("64'-1","MInt"))),`_|->_`(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("1039","Int")),byte(#token("7","Int"),#token("64'-1","MInt")))))),`<freed>`(`.Set`(.KList))),`<stackbase>`(stackBaseInfo(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("0","Int")),#token("64'1032","MInt"))),`<robase>`(roBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))),`<database>`(dataBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))),`<bssbase>`(bssBaseInfo(#EmptyK(.KList),#EmptyK(.KList),#EmptyK(.KList))))),`<environment>`(`<argc>`(#EmptyK(.KList)),`<argv>`(#EmptyK(.KList))),`<regstate>`(`_Map_`(`_|->_`(#token("\"AF\"","String"),`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(`undefBool_MINT-WRAPPER-SYNTAX`(.KList),#token("1'1","MInt"),#token("1'0","MInt"))),`_|->_`(#token("\"CF\"","String"),`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("0","Int"),#token("1","Int")),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt"))),`_|->_`(#token("\"OF\"","String"),`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(`undefBool_MINT-WRAPPER-SYNTAX`(.KList),#token("1'1","MInt"),#token("1'0","MInt"))),`_|->_`(#token("\"PF\"","String"),`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(`notBool_`(`_xorBool_`(`_xorBool_`(`_xorBool_`(`_xorBool_`(`_xorBool_`(`_xorBool_`(`_xorBool_`(eqMInt(extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("32","Int"),#token("33","Int")),#token("1'1","MInt")),eqMInt(extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("31","Int"),#token("32","Int")),#token("1'1","MInt"))),eqMInt(extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("30","Int"),#token("31","Int")),#token("1'1","MInt"))),eqMInt(extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("29","Int"),#token("30","Int")),#token("1'1","MInt"))),eqMInt(extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("28","Int"),#token("29","Int")),#token("1'1","MInt"))),eqMInt(extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("27","Int"),#token("28","Int")),#token("1'1","MInt"))),eqMInt(extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("26","Int"),#token("27","Int")),#token("1'1","MInt"))),eqMInt(extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("25","Int"),#token("26","Int")),#token("1'1","MInt")))),#token("1'1","MInt"),#token("1'0","MInt"))),`_|->_`(#token("\"RAX\"","String"),mi(#token("64","Int"),VX_RAX)),`_|->_`(#token("\"RBP\"","String"),ptr(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("0","Int")),#token("64'1032","MInt"))),`_|->_`(#token("\"RBX\"","String"),mi(#token("64","Int"),VX_RBX)),`_|->_`(#token("\"RCX\"","String"),mi(#token("64","Int"),VX_RCX)),`_|->_`(#token("\"RDI\"","String"),mi(#token("64","Int"),VX_RDI)),`_|->_`(#token("\"RDX\"","String"),mi(#token("64","Int"),VX_RDX)),`_|->_`(#token("\"RIP\"","String"),#token("64'18446744073709551615","MInt")),`_|->_`(#token("\"RSI\"","String"),mi(#token("64","Int"),VX_RSI)),`_|->_`(#token("\"RSP\"","String"),ptr(symloc(#token("1","Int"),#token("128","Int"),#token("1040","Int"),#token("8","Int"),#token("0","Int")),#token("64'1040","MInt"))),`_|->_`(#token("\"SF\"","String"),`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("1","Int"),#token("2","Int")),#token("1'1","MInt")),#token("1'1","MInt"),#token("1'0","MInt"))),`_|->_`(#token("\"YMM1\"","String"),mi(#token("256","Int"),VX_YMM1)),`_|->_`(#token("\"YMM2\"","String"),mi(#token("256","Int"),VX_YMM2)),`_|->_`(#token("\"ZF\"","String"),`#ifMInt_#then_#else_#fi_MINT-WRAPPER-SYNTAX`(eqMInt(extractMInt(shlMInt(concatenateMInt(#token("1'0","MInt"),mi(#token("32","Int"),VX_MEM_32)),#token("10","Int")),#token("1","Int"),#token("33","Int")),#token("32'0","MInt")),#token("1'1","MInt"),#token("1'0","MInt"))))),_19,_20,_21,_22,_23)
[Warning] Internal: execution phase: missing SMTLib translation for mi . Please
re-run with the --debug-z3 flag. Search the logs starting with 'Z3 warning' to
see the Z3 implication that generated the warning. (missing SMTLib translation
for mi)
Command exited with non-zero status 1
791.43user 267.87system 10:44.68elapsed 164%CPU (0avgtext+0avgdata 13678564maxresident)k
0inputs+251296outputs (0major+13716079minor)pagefaults 0swaps
