
Output/test_0.clang.o:     file format elf64-x86-64


Disassembly of section .init:

00000000004003b8 <_init>:
  4003b8:	48 83 ec 08          	sub    $0x8,%rsp
  4003bc:	48 8b 05 35 0c 20 00 	mov    0x200c35(%rip),%rax        # 600ff8 <__gmon_start__>
  4003c3:	48 85 c0             	test   %rax,%rax
  4003c6:	74 02                	je     4003ca <_init+0x12>
  4003c8:	ff d0                	callq  *%rax
  4003ca:	48 83 c4 08          	add    $0x8,%rsp
  4003ce:	c3                   	retq   

Disassembly of section .plt:

00000000004003d0 <.plt>:
  4003d0:	ff 35 32 0c 20 00    	pushq  0x200c32(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4003d6:	ff 25 34 0c 20 00    	jmpq   *0x200c34(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4003dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003e0 <printf@plt>:
  4003e0:	ff 25 32 0c 20 00    	jmpq   *0x200c32(%rip)        # 601018 <printf@GLIBC_2.2.5>
  4003e6:	68 00 00 00 00       	pushq  $0x0
  4003eb:	e9 e0 ff ff ff       	jmpq   4003d0 <.plt>

Disassembly of section .text:

00000000004003f0 <_start>:
  4003f0:	31 ed                	xor    %ebp,%ebp
  4003f2:	49 89 d1             	mov    %rdx,%r9
  4003f5:	5e                   	pop    %rsi
  4003f6:	48 89 e2             	mov    %rsp,%rdx
  4003f9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4003fd:	50                   	push   %rax
  4003fe:	54                   	push   %rsp
  4003ff:	49 c7 c0 a0 05 40 00 	mov    $0x4005a0,%r8
  400406:	48 c7 c1 30 05 40 00 	mov    $0x400530,%rcx
  40040d:	48 c7 c7 d0 04 40 00 	mov    $0x4004d0,%rdi
  400414:	ff 15 d6 0b 20 00    	callq  *0x200bd6(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>
  40041a:	f4                   	hlt    
  40041b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400420 <deregister_tm_clones>:
  400420:	55                   	push   %rbp
  400421:	b8 30 10 60 00       	mov    $0x601030,%eax
  400426:	48 3d 30 10 60 00    	cmp    $0x601030,%rax
  40042c:	48 89 e5             	mov    %rsp,%rbp
  40042f:	74 17                	je     400448 <deregister_tm_clones+0x28>
  400431:	b8 00 00 00 00       	mov    $0x0,%eax
  400436:	48 85 c0             	test   %rax,%rax
  400439:	74 0d                	je     400448 <deregister_tm_clones+0x28>
  40043b:	5d                   	pop    %rbp
  40043c:	bf 30 10 60 00       	mov    $0x601030,%edi
  400441:	ff e0                	jmpq   *%rax
  400443:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400448:	5d                   	pop    %rbp
  400449:	c3                   	retq   
  40044a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400450 <register_tm_clones>:
  400450:	be 30 10 60 00       	mov    $0x601030,%esi
  400455:	55                   	push   %rbp
  400456:	48 81 ee 30 10 60 00 	sub    $0x601030,%rsi
  40045d:	48 89 e5             	mov    %rsp,%rbp
  400460:	48 c1 fe 03          	sar    $0x3,%rsi
  400464:	48 89 f0             	mov    %rsi,%rax
  400467:	48 c1 e8 3f          	shr    $0x3f,%rax
  40046b:	48 01 c6             	add    %rax,%rsi
  40046e:	48 d1 fe             	sar    %rsi
  400471:	74 15                	je     400488 <register_tm_clones+0x38>
  400473:	b8 00 00 00 00       	mov    $0x0,%eax
  400478:	48 85 c0             	test   %rax,%rax
  40047b:	74 0b                	je     400488 <register_tm_clones+0x38>
  40047d:	5d                   	pop    %rbp
  40047e:	bf 30 10 60 00       	mov    $0x601030,%edi
  400483:	ff e0                	jmpq   *%rax
  400485:	0f 1f 00             	nopl   (%rax)
  400488:	5d                   	pop    %rbp
  400489:	c3                   	retq   
  40048a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400490 <__do_global_dtors_aux>:
  400490:	80 3d 99 0b 20 00 00 	cmpb   $0x0,0x200b99(%rip)        # 601030 <__TMC_END__>
  400497:	75 17                	jne    4004b0 <__do_global_dtors_aux+0x20>
  400499:	55                   	push   %rbp
  40049a:	48 89 e5             	mov    %rsp,%rbp
  40049d:	e8 7e ff ff ff       	callq  400420 <deregister_tm_clones>
  4004a2:	c6 05 87 0b 20 00 01 	movb   $0x1,0x200b87(%rip)        # 601030 <__TMC_END__>
  4004a9:	5d                   	pop    %rbp
  4004aa:	c3                   	retq   
  4004ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4004b0:	f3 c3                	repz retq 
  4004b2:	0f 1f 40 00          	nopl   0x0(%rax)
  4004b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4004bd:	00 00 00 

00000000004004c0 <frame_dummy>:
  4004c0:	55                   	push   %rbp
  4004c1:	48 89 e5             	mov    %rsp,%rbp
  4004c4:	5d                   	pop    %rbp
  4004c5:	eb 89                	jmp    400450 <register_tm_clones>
  4004c7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4004ce:	00 00 

00000000004004d0 <main>:
  4004d0:	55                   	push   %rbp
  4004d1:	48 89 e5             	mov    %rsp,%rbp
  4004d4:	48 83 ec 20          	sub    $0x20,%rsp
  4004d8:	48 bf b4 05 40 00 00 	movabs $0x4005b4,%rdi
  4004df:	00 00 00 
  4004e2:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  4004e6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4004ed:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4004f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4004f5:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  4004fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4004ff:	c7 40 04 02 00 00 00 	movl   $0x2,0x4(%rax)
  400506:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40050a:	8b 70 04             	mov    0x4(%rax),%esi
  40050d:	b0 00                	mov    $0x0,%al
  40050f:	e8 cc fe ff ff       	callq  4003e0 <printf@plt>
  400514:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  400518:	8b 77 04             	mov    0x4(%rdi),%esi
  40051b:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40051e:	89 f0                	mov    %esi,%eax
  400520:	48 83 c4 20          	add    $0x20,%rsp
  400524:	5d                   	pop    %rbp
  400525:	c3                   	retq   
  400526:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40052d:	00 00 00 

0000000000400530 <__libc_csu_init>:
  400530:	41 57                	push   %r15
  400532:	41 56                	push   %r14
  400534:	41 89 ff             	mov    %edi,%r15d
  400537:	41 55                	push   %r13
  400539:	41 54                	push   %r12
  40053b:	4c 8d 25 be 08 20 00 	lea    0x2008be(%rip),%r12        # 600e00 <__frame_dummy_init_array_entry>
  400542:	55                   	push   %rbp
  400543:	48 8d 2d be 08 20 00 	lea    0x2008be(%rip),%rbp        # 600e08 <__init_array_end>
  40054a:	53                   	push   %rbx
  40054b:	49 89 f6             	mov    %rsi,%r14
  40054e:	49 89 d5             	mov    %rdx,%r13
  400551:	4c 29 e5             	sub    %r12,%rbp
  400554:	48 83 ec 08          	sub    $0x8,%rsp
  400558:	48 c1 fd 03          	sar    $0x3,%rbp
  40055c:	e8 57 fe ff ff       	callq  4003b8 <_init>
  400561:	48 85 ed             	test   %rbp,%rbp
  400564:	74 20                	je     400586 <__libc_csu_init+0x56>
  400566:	31 db                	xor    %ebx,%ebx
  400568:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40056f:	00 
  400570:	4c 89 ea             	mov    %r13,%rdx
  400573:	4c 89 f6             	mov    %r14,%rsi
  400576:	44 89 ff             	mov    %r15d,%edi
  400579:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40057d:	48 83 c3 01          	add    $0x1,%rbx
  400581:	48 39 dd             	cmp    %rbx,%rbp
  400584:	75 ea                	jne    400570 <__libc_csu_init+0x40>
  400586:	48 83 c4 08          	add    $0x8,%rsp
  40058a:	5b                   	pop    %rbx
  40058b:	5d                   	pop    %rbp
  40058c:	41 5c                	pop    %r12
  40058e:	41 5d                	pop    %r13
  400590:	41 5e                	pop    %r14
  400592:	41 5f                	pop    %r15
  400594:	c3                   	retq   
  400595:	90                   	nop
  400596:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40059d:	00 00 00 

00000000004005a0 <__libc_csu_fini>:
  4005a0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004005a4 <_fini>:
  4005a4:	48 83 ec 08          	sub    $0x8,%rsp
  4005a8:	48 83 c4 08          	add    $0x8,%rsp
  4005ac:	c3                   	retq   
