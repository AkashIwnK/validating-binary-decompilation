
Output/test_10.clang.o:     file format elf64-x86-64


Disassembly of section .init:

00000000004004a0 <_init>:
  4004a0:	48 83 ec 08          	sub    $0x8,%rsp
  4004a4:	48 8b 05 4d 0b 20 00 	mov    0x200b4d(%rip),%rax        # 600ff8 <__gmon_start__>
  4004ab:	48 85 c0             	test   %rax,%rax
  4004ae:	74 02                	je     4004b2 <_init+0x12>
  4004b0:	ff d0                	callq  *%rax
  4004b2:	48 83 c4 08          	add    $0x8,%rsp
  4004b6:	c3                   	retq   

Disassembly of section .plt:

00000000004004c0 <.plt>:
  4004c0:	ff 35 42 0b 20 00    	pushq  0x200b42(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004c6:	ff 25 44 0b 20 00    	jmpq   *0x200b44(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004004d0 <free@plt>:
  4004d0:	ff 25 42 0b 20 00    	jmpq   *0x200b42(%rip)        # 601018 <free@GLIBC_2.2.5>
  4004d6:	68 00 00 00 00       	pushq  $0x0
  4004db:	e9 e0 ff ff ff       	jmpq   4004c0 <.plt>

00000000004004e0 <strcpy@plt>:
  4004e0:	ff 25 3a 0b 20 00    	jmpq   *0x200b3a(%rip)        # 601020 <strcpy@GLIBC_2.2.5>
  4004e6:	68 01 00 00 00       	pushq  $0x1
  4004eb:	e9 d0 ff ff ff       	jmpq   4004c0 <.plt>

00000000004004f0 <printf@plt>:
  4004f0:	ff 25 32 0b 20 00    	jmpq   *0x200b32(%rip)        # 601028 <printf@GLIBC_2.2.5>
  4004f6:	68 02 00 00 00       	pushq  $0x2
  4004fb:	e9 c0 ff ff ff       	jmpq   4004c0 <.plt>

0000000000400500 <memset@plt>:
  400500:	ff 25 2a 0b 20 00    	jmpq   *0x200b2a(%rip)        # 601030 <memset@GLIBC_2.2.5>
  400506:	68 03 00 00 00       	pushq  $0x3
  40050b:	e9 b0 ff ff ff       	jmpq   4004c0 <.plt>

0000000000400510 <malloc@plt>:
  400510:	ff 25 22 0b 20 00    	jmpq   *0x200b22(%rip)        # 601038 <malloc@GLIBC_2.2.5>
  400516:	68 04 00 00 00       	pushq  $0x4
  40051b:	e9 a0 ff ff ff       	jmpq   4004c0 <.plt>

Disassembly of section .text:

0000000000400520 <_start>:
  400520:	31 ed                	xor    %ebp,%ebp
  400522:	49 89 d1             	mov    %rdx,%r9
  400525:	5e                   	pop    %rsi
  400526:	48 89 e2             	mov    %rsp,%rdx
  400529:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40052d:	50                   	push   %rax
  40052e:	54                   	push   %rsp
  40052f:	49 c7 c0 c0 07 40 00 	mov    $0x4007c0,%r8
  400536:	48 c7 c1 50 07 40 00 	mov    $0x400750,%rcx
  40053d:	48 c7 c7 a0 06 40 00 	mov    $0x4006a0,%rdi
  400544:	ff 15 a6 0a 20 00    	callq  *0x200aa6(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>
  40054a:	f4                   	hlt    
  40054b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400550 <deregister_tm_clones>:
  400550:	b8 57 10 60 00       	mov    $0x601057,%eax
  400555:	55                   	push   %rbp
  400556:	48 2d 50 10 60 00    	sub    $0x601050,%rax
  40055c:	48 83 f8 0e          	cmp    $0xe,%rax
  400560:	48 89 e5             	mov    %rsp,%rbp
  400563:	76 1b                	jbe    400580 <deregister_tm_clones+0x30>
  400565:	b8 00 00 00 00       	mov    $0x0,%eax
  40056a:	48 85 c0             	test   %rax,%rax
  40056d:	74 11                	je     400580 <deregister_tm_clones+0x30>
  40056f:	5d                   	pop    %rbp
  400570:	bf 50 10 60 00       	mov    $0x601050,%edi
  400575:	ff e0                	jmpq   *%rax
  400577:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40057e:	00 00 
  400580:	5d                   	pop    %rbp
  400581:	c3                   	retq   
  400582:	0f 1f 40 00          	nopl   0x0(%rax)
  400586:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40058d:	00 00 00 

0000000000400590 <register_tm_clones>:
  400590:	be 50 10 60 00       	mov    $0x601050,%esi
  400595:	55                   	push   %rbp
  400596:	48 81 ee 50 10 60 00 	sub    $0x601050,%rsi
  40059d:	48 c1 fe 03          	sar    $0x3,%rsi
  4005a1:	48 89 e5             	mov    %rsp,%rbp
  4005a4:	48 89 f0             	mov    %rsi,%rax
  4005a7:	48 c1 e8 3f          	shr    $0x3f,%rax
  4005ab:	48 01 c6             	add    %rax,%rsi
  4005ae:	48 d1 fe             	sar    %rsi
  4005b1:	74 15                	je     4005c8 <register_tm_clones+0x38>
  4005b3:	b8 00 00 00 00       	mov    $0x0,%eax
  4005b8:	48 85 c0             	test   %rax,%rax
  4005bb:	74 0b                	je     4005c8 <register_tm_clones+0x38>
  4005bd:	5d                   	pop    %rbp
  4005be:	bf 50 10 60 00       	mov    $0x601050,%edi
  4005c3:	ff e0                	jmpq   *%rax
  4005c5:	0f 1f 00             	nopl   (%rax)
  4005c8:	5d                   	pop    %rbp
  4005c9:	c3                   	retq   
  4005ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004005d0 <__do_global_dtors_aux>:
  4005d0:	80 3d 79 0a 20 00 00 	cmpb   $0x0,0x200a79(%rip)        # 601050 <__TMC_END__>
  4005d7:	75 11                	jne    4005ea <__do_global_dtors_aux+0x1a>
  4005d9:	55                   	push   %rbp
  4005da:	48 89 e5             	mov    %rsp,%rbp
  4005dd:	e8 6e ff ff ff       	callq  400550 <deregister_tm_clones>
  4005e2:	5d                   	pop    %rbp
  4005e3:	c6 05 66 0a 20 00 01 	movb   $0x1,0x200a66(%rip)        # 601050 <__TMC_END__>
  4005ea:	f3 c3                	repz retq 
  4005ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004005f0 <frame_dummy>:
  4005f0:	bf 08 0e 60 00       	mov    $0x600e08,%edi
  4005f5:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  4005f9:	75 05                	jne    400600 <frame_dummy+0x10>
  4005fb:	eb 93                	jmp    400590 <register_tm_clones>
  4005fd:	0f 1f 00             	nopl   (%rax)
  400600:	b8 00 00 00 00       	mov    $0x0,%eax
  400605:	48 85 c0             	test   %rax,%rax
  400608:	74 f1                	je     4005fb <frame_dummy+0xb>
  40060a:	55                   	push   %rbp
  40060b:	48 89 e5             	mov    %rsp,%rbp
  40060e:	ff d0                	callq  *%rax
  400610:	5d                   	pop    %rbp
  400611:	e9 7a ff ff ff       	jmpq   400590 <register_tm_clones>
  400616:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40061d:	00 00 00 

0000000000400620 <demo3>:
  400620:	55                   	push   %rbp
  400621:	48 89 e5             	mov    %rsp,%rbp
  400624:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  400628:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40062c:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
  400630:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
  400634:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  400638:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40063c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
  400640:	8a 06                	mov    (%rsi),%al
  400642:	88 45 df             	mov    %al,-0x21(%rbp)
  400645:	0f be 45 df          	movsbl -0x21(%rbp),%eax
  400649:	83 f8 00             	cmp    $0x0,%eax
  40064c:	0f 84 48 00 00 00    	je     40069a <demo3+0x7a>
  400652:	0f be 45 df          	movsbl -0x21(%rbp),%eax
  400656:	83 f8 2f             	cmp    $0x2f,%eax
  400659:	0f 85 0c 00 00 00    	jne    40066b <demo3+0x4b>
  40065f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400663:	c6 00 5c             	movb   $0x5c,(%rax)
  400666:	e9 09 00 00 00       	jmpq   400674 <demo3+0x54>
  40066b:	8a 45 df             	mov    -0x21(%rbp),%al
  40066e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  400672:	88 01                	mov    %al,(%rcx)
  400674:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400678:	48 83 c0 01          	add    $0x1,%rax
  40067c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  400680:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400684:	48 83 c0 01          	add    $0x1,%rax
  400688:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  40068c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400690:	8a 08                	mov    (%rax),%cl
  400692:	88 4d df             	mov    %cl,-0x21(%rbp)
  400695:	e9 ab ff ff ff       	jmpq   400645 <demo3+0x25>
  40069a:	5d                   	pop    %rbp
  40069b:	c3                   	retq   
  40069c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004006a0 <main>:
  4006a0:	55                   	push   %rbp
  4006a1:	48 89 e5             	mov    %rsp,%rbp
  4006a4:	48 83 ec 40          	sub    $0x40,%rsp
  4006a8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4006af:	89 7d f8             	mov    %edi,-0x8(%rbp)
  4006b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4006b6:	48 c7 45 e8 11 00 00 	movq   $0x11,-0x18(%rbp)
  4006bd:	00 
  4006be:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  4006c2:	e8 49 fe ff ff       	callq  400510 <malloc@plt>
  4006c7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4006cb:	48 8b 7d e8          	mov    -0x18(%rbp),%rdi
  4006cf:	e8 3c fe ff ff       	callq  400510 <malloc@plt>
  4006d4:	31 f6                	xor    %esi,%esi
  4006d6:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4006da:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  4006de:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4006e2:	e8 19 fe ff ff       	callq  400500 <memset@plt>
  4006e7:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  4006eb:	be d4 07 40 00       	mov    $0x4007d4,%esi
  4006f0:	e8 eb fd ff ff       	callq  4004e0 <strcpy@plt>
  4006f5:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  4006f9:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
  4006fd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  400701:	b0 00                	mov    $0x0,%al
  400703:	e8 18 ff ff ff       	callq  400620 <demo3>
  400708:	48 bf e5 07 40 00 00 	movabs $0x4007e5,%rdi
  40070f:	00 00 00 
  400712:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
  400716:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40071a:	89 45 cc             	mov    %eax,-0x34(%rbp)
  40071d:	b0 00                	mov    $0x0,%al
  40071f:	e8 cc fd ff ff       	callq  4004f0 <printf@plt>
  400724:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
  400728:	89 45 c8             	mov    %eax,-0x38(%rbp)
  40072b:	e8 a0 fd ff ff       	callq  4004d0 <free@plt>
  400730:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
  400734:	e8 97 fd ff ff       	callq  4004d0 <free@plt>
  400739:	31 c0                	xor    %eax,%eax
  40073b:	48 83 c4 40          	add    $0x40,%rsp
  40073f:	5d                   	pop    %rbp
  400740:	c3                   	retq   
  400741:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400748:	00 00 00 
  40074b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400750 <__libc_csu_init>:
  400750:	41 57                	push   %r15
  400752:	41 56                	push   %r14
  400754:	41 89 ff             	mov    %edi,%r15d
  400757:	41 55                	push   %r13
  400759:	41 54                	push   %r12
  40075b:	4c 8d 25 96 06 20 00 	lea    0x200696(%rip),%r12        # 600df8 <__frame_dummy_init_array_entry>
  400762:	55                   	push   %rbp
  400763:	48 8d 2d 96 06 20 00 	lea    0x200696(%rip),%rbp        # 600e00 <__init_array_end>
  40076a:	53                   	push   %rbx
  40076b:	49 89 f6             	mov    %rsi,%r14
  40076e:	49 89 d5             	mov    %rdx,%r13
  400771:	4c 29 e5             	sub    %r12,%rbp
  400774:	48 83 ec 08          	sub    $0x8,%rsp
  400778:	48 c1 fd 03          	sar    $0x3,%rbp
  40077c:	e8 1f fd ff ff       	callq  4004a0 <_init>
  400781:	48 85 ed             	test   %rbp,%rbp
  400784:	74 20                	je     4007a6 <__libc_csu_init+0x56>
  400786:	31 db                	xor    %ebx,%ebx
  400788:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40078f:	00 
  400790:	4c 89 ea             	mov    %r13,%rdx
  400793:	4c 89 f6             	mov    %r14,%rsi
  400796:	44 89 ff             	mov    %r15d,%edi
  400799:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40079d:	48 83 c3 01          	add    $0x1,%rbx
  4007a1:	48 39 dd             	cmp    %rbx,%rbp
  4007a4:	75 ea                	jne    400790 <__libc_csu_init+0x40>
  4007a6:	48 83 c4 08          	add    $0x8,%rsp
  4007aa:	5b                   	pop    %rbx
  4007ab:	5d                   	pop    %rbp
  4007ac:	41 5c                	pop    %r12
  4007ae:	41 5d                	pop    %r13
  4007b0:	41 5e                	pop    %r14
  4007b2:	41 5f                	pop    %r15
  4007b4:	c3                   	retq   
  4007b5:	90                   	nop
  4007b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4007bd:	00 00 00 

00000000004007c0 <__libc_csu_fini>:
  4007c0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004007c4 <_fini>:
  4007c4:	48 83 ec 08          	sub    $0x8,%rsp
  4007c8:	48 83 c4 08          	add    $0x8,%rsp
  4007cc:	c3                   	retq   
