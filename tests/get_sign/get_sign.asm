

;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-38F3-7EE4-0C			    |
; |			    University of Illinois			    |
; +-------------------------------------------------------------------------+
;
; Input	SHA256 : 702B2BAA3B9956F5EEFCF887AF4EB212C2AE89EE5342FB0D44B984D010994A79
; Input	MD5    : 79F660D17D2A09D068938F1D7C0309CD
; Input	CRC32  : 9B88A369

; File Name   :	/home/sdasgup3/Github/binary-decompilation/test/decompilation/get_sign/get_sign
; Format      :	ELF64 for x86-64 (Relocatable)
;
; Source File :	'get_sign.c'

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	byte public 'CODE' use64
		assume cs:_text
		assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

		public get_sign
get_sign	proc near

var_4		= dword	ptr -4

		push	rbp
		mov	rbp, rsp
		mov	rcx, edi
		cmp	rcx, 0
		jg	short loc_14
		mov	eax, 1
		jmp	short loc_19
; ---------------------------------------------------------------------------

loc_14:					; CODE XREF: get_sign+Bj
		mov	eax, 0

loc_19:					; CODE XREF: get_sign+12j
		pop	rbp

locret_1A:				; DATA XREF: .eh_frame:0000000000000040o
		retn
get_sign	endp

_text		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_data		segment	byte public 'DATA' use64
_data		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_bss		segment	byte public 'BSS' use64
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
; Segment alignment 'qword' can not be represented in assembly
_eh_frame	segment	para public 'CONST' use64
		assume cs:_eh_frame
		;org 20h
		db  14h
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    0
		db    1
		db  7Ah	; z
		db  52h	; R
		db    0
		db    1
		db  78h	; x
		db  10h
		db    1
		db  1Bh
		db  0Ch
		db    7
		db    8
		db  90h	; ê
		db    1
		db    0
		db    0
		db  1Ch
		db    0
		db    0
		db    0
		db  1Ch
		db    0
		db    0
		db    0
		dd offset locret_1A+0FFFFFFA6h
		db  1Bh
		db    0
		db    0
		db    0
		db    0
		db  41h	; A
		db  0Eh
		db  10h
		db  86h	; Ü
		db    2
		db  43h	; C
		db  0Dh
		db    6
		db  56h	; V
		db  0Ch
		db    7
		db    8
		db    0
		db    0
		db    0
_eh_frame	ends


		end
