$C is [get_sign.c]
$BIN is [get_sign.bin]
$LABEL is []

cd mcsema; \
~/Github/validating-binary-decompilation/source/build/bin/matcher --file1 test.unoptimized.mod.opt.ll:sub_660_get_sign --file2 test.proposed.opt.ll:sub_4004a6_get_sign ; \
        cd ..
Matching sub_660_get_sign Vs sub_4004a6_get_sign
Retrieve Potential Matches...
[0x5612405777d8]:   %5 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 11, i32 0 {
	[0x561240574058]:  %13 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 11, i32 0
	}

[0x561240577848]:   %6 = bitcast %2* %5 to i32* {
	[0x5612405740c8]:  %14 = bitcast %2* %13 to i32*
	}

[0x561240577960]:   %7 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 1, i32 0, i32 0 {
	[0x56124057e880]:  %45 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 1, i32 0, i32 0
	}

[0x561240577a70]:   %18 = add i64 %15, 6 {
	[0x561240573ce0]:  %17 = add i64 %12, 6
	[0x56124057e7a0]:  %44 = add i64 %19, %43
	}

[0x561240577b70]:   %4 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 33, i32 0, i32 0 {
	[0x561240573c50]:  %4 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 33, i32 0, i32 0
	}

[0x561240577c60]:   %8 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 15, i32 0, i32 0 {
	[0x561240573890]:  %5 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 15, i32 0, i32 0
	}

[0x561240577cd8]:   %17 = load i32, i32* %6, align 4 {
	[0x561240573908]:  %6 = load i64, i64* %5, align 8
	[0x561240573d58]:  %9 = load i64, i64* %8, align 8
	[0x561240573f18]:  %12 = load i64, i64* %4, align 8
	[0x561240574128]:  %16 = load i32, i32* %14, align 4
	[0x56124057d5b8]:  %19 = load i64, i64* %4, align 8
	[0x56124057d618]:  %20 = load i64, i64* %5, align 8
	[0x56124057d858]:  %24 = load i32, i32* %23, align 4
	[0x56124057f068]:  %53 = load i64, i64* %8, align 8
	[0x56124057f1a8]:  %56 = load i64, i64* %55, align 8
	[0x56124057f468]:  %59 = load i64, i64* %58, align 8
	}

[0x561240577d68]:   %9 = load i64, i64* %8, align 8 {
	[0x561240573908]:  %6 = load i64, i64* %5, align 8
	[0x561240573d58]:  %9 = load i64, i64* %8, align 8
	[0x561240573f18]:  %12 = load i64, i64* %4, align 8
	[0x561240574128]:  %16 = load i32, i32* %14, align 4
	[0x56124057d5b8]:  %19 = load i64, i64* %4, align 8
	[0x56124057d618]:  %20 = load i64, i64* %5, align 8
	[0x56124057d858]:  %24 = load i32, i32* %23, align 4
	[0x56124057f068]:  %53 = load i64, i64* %8, align 8
	[0x56124057f1a8]:  %56 = load i64, i64* %55, align 8
	[0x56124057f468]:  %59 = load i64, i64* %58, align 8
	}

[0x561240577e20]:   %10 = add i64 %1, 1 {
	[0x561240573980]:  %7 = add i64 %1, 1
	[0x56124057e7a0]:  %44 = add i64 %19, %43
	[0x56124057ef80]:  %52 = add i64 %51, 1
	}

[0x561240577ea0]:   store i64 %10, i64* %4, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x561240577fc0]:   %11 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 13, i32 0, i32 0 {
	[0x561240573ae0]:  %8 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 13, i32 0, i32 0
	}

[0x561240578038]:   %12 = load i64, i64* %11, align 8 {
	[0x561240573908]:  %6 = load i64, i64* %5, align 8
	[0x561240573d58]:  %9 = load i64, i64* %8, align 8
	[0x561240573f18]:  %12 = load i64, i64* %4, align 8
	[0x561240574128]:  %16 = load i32, i32* %14, align 4
	[0x56124057d5b8]:  %19 = load i64, i64* %4, align 8
	[0x56124057d618]:  %20 = load i64, i64* %5, align 8
	[0x56124057d858]:  %24 = load i32, i32* %23, align 4
	[0x56124057f068]:  %53 = load i64, i64* %8, align 8
	[0x56124057f1a8]:  %56 = load i64, i64* %55, align 8
	[0x56124057f468]:  %59 = load i64, i64* %58, align 8
	}

[0x5612405780f0]:   %13 = add i64 %12, -8 {
	[0x561240573b70]:  %10 = add i64 %9, -8
	[0x56124057e7a0]:  %44 = add i64 %19, %43
	}

[0x561240578158]:   %14 = inttoptr i64 %13 to i64* {
	[0x561240573db8]:  %11 = inttoptr i64 %10 to i64*
	[0x56124057d4d8]:  %18 = inttoptr i64 %15 to i32*
	[0x56124057d7f8]:  %23 = inttoptr i64 %21 to i32*
	[0x56124057f148]:  %55 = inttoptr i64 %53 to i64*
	[0x56124057f408]:  %58 = inttoptr i64 %54 to i64*
	}

[0x5612405781d0]:   store i64 %9, i64* %14, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x561240578250]:   store i64 %13, i64* %11, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x5612405782b8]:   %15 = load i64, i64* %4, align 8 {
	[0x561240573908]:  %6 = load i64, i64* %5, align 8
	[0x561240573d58]:  %9 = load i64, i64* %8, align 8
	[0x561240573f18]:  %12 = load i64, i64* %4, align 8
	[0x561240574128]:  %16 = load i32, i32* %14, align 4
	[0x56124057d5b8]:  %19 = load i64, i64* %4, align 8
	[0x56124057d618]:  %20 = load i64, i64* %5, align 8
	[0x56124057d858]:  %24 = load i32, i32* %23, align 4
	[0x56124057f068]:  %53 = load i64, i64* %8, align 8
	[0x56124057f1a8]:  %56 = load i64, i64* %55, align 8
	[0x56124057f468]:  %59 = load i64, i64* %58, align 8
	}

[0x561240578330]:   store i64 %13, i64* %8, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x5612405783f0]:   %16 = add i64 %12, -12 {
	[0x56124057d2e0]:  %15 = add i64 %9, -12
	[0x56124057e7a0]:  %44 = add i64 %19, %43
	}

[0x561240578470]:   store i8 %31, i8* %32, align 1 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x561240578580]:   store i64 %18, i64* %4, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x5612405785e8]:   %19 = inttoptr i64 %16 to i32* {
	[0x561240573db8]:  %11 = inttoptr i64 %10 to i64*
	[0x56124057d4d8]:  %18 = inttoptr i64 %15 to i32*
	[0x56124057d7f8]:  %23 = inttoptr i64 %21 to i32*
	[0x56124057f148]:  %55 = inttoptr i64 %53 to i64*
	[0x56124057f408]:  %58 = inttoptr i64 %54 to i64*
	}

[0x561240578660]:   store i32 %17, i32* %19, align 4 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x5612405786c8]:   %20 = load i64, i64* %8, align 8 {
	[0x561240573908]:  %6 = load i64, i64* %5, align 8
	[0x561240573d58]:  %9 = load i64, i64* %8, align 8
	[0x561240573f18]:  %12 = load i64, i64* %4, align 8
	[0x561240574128]:  %16 = load i32, i32* %14, align 4
	[0x56124057d5b8]:  %19 = load i64, i64* %4, align 8
	[0x56124057d618]:  %20 = load i64, i64* %5, align 8
	[0x56124057d858]:  %24 = load i32, i32* %23, align 4
	[0x56124057f068]:  %53 = load i64, i64* %8, align 8
	[0x56124057f1a8]:  %56 = load i64, i64* %55, align 8
	[0x56124057f468]:  %59 = load i64, i64* %58, align 8
	}

[0x561240578780]:   %21 = add i64 %20, -4 {
	[0x56124057d690]:  %21 = add i64 %20, -4
	[0x56124057e7a0]:  %44 = add i64 %19, %43
	}

[0x5612405787e8]:   %22 = load i64, i64* %4, align 8 {
	[0x561240573908]:  %6 = load i64, i64* %5, align 8
	[0x561240573d58]:  %9 = load i64, i64* %8, align 8
	[0x561240573f18]:  %12 = load i64, i64* %4, align 8
	[0x561240574128]:  %16 = load i32, i32* %14, align 4
	[0x56124057d5b8]:  %19 = load i64, i64* %4, align 8
	[0x56124057d618]:  %20 = load i64, i64* %5, align 8
	[0x56124057d858]:  %24 = load i32, i32* %23, align 4
	[0x56124057f068]:  %53 = load i64, i64* %8, align 8
	[0x56124057f1a8]:  %56 = load i64, i64* %55, align 8
	[0x56124057f468]:  %59 = load i64, i64* %58, align 8
	}

[0x5612405788a0]:   %23 = add i64 %22, 4 {
	[0x56124057d710]:  %22 = add i64 %19, 4
	[0x56124057e7a0]:  %44 = add i64 %19, %43
	}

[0x561240578920]:   store i64 %23, i64* %4, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x561240578988]:   %24 = inttoptr i64 %21 to i32* {
	[0x561240573db8]:  %11 = inttoptr i64 %10 to i64*
	[0x56124057d4d8]:  %18 = inttoptr i64 %15 to i32*
	[0x56124057d7f8]:  %23 = inttoptr i64 %21 to i32*
	[0x56124057f148]:  %55 = inttoptr i64 %53 to i64*
	[0x56124057f408]:  %58 = inttoptr i64 %54 to i64*
	}

[0x5612405789e8]:   %25 = load i32, i32* %24, align 4 {
	[0x561240573908]:  %6 = load i64, i64* %5, align 8
	[0x561240573d58]:  %9 = load i64, i64* %8, align 8
	[0x561240573f18]:  %12 = load i64, i64* %4, align 8
	[0x561240574128]:  %16 = load i32, i32* %14, align 4
	[0x56124057d5b8]:  %19 = load i64, i64* %4, align 8
	[0x56124057d618]:  %20 = load i64, i64* %5, align 8
	[0x56124057d858]:  %24 = load i32, i32* %23, align 4
	[0x56124057f068]:  %53 = load i64, i64* %8, align 8
	[0x56124057f1a8]:  %56 = load i64, i64* %55, align 8
	[0x56124057f468]:  %59 = load i64, i64* %58, align 8
	}

[0x561240578ad0]:   %26 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 1 {
	[0x56124057d900]:  %25 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 1
	}

[0x561240578ba0]:   store i8 0, i8* %26, align 1 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x561240578c60]:   %27 = and i32 %25, 255 {
	[0x56124057da10]:  %26 = and i32 %24, 255
	[0x56124057e690]:  %42 = and i1 %41, %40
	}

[0x561240578ce0]:   %28 = tail call i32 @llvm.ctpop.i32(i32 %27) {
	[0x56124057da90]:  %27 = tail call i32 @llvm.ctpop.i32(i32 %26)
	}

[0x561240578d58]:   %29 = trunc i32 %28 to i8 {
	[0x56124057db08]:  %28 = trunc i32 %27 to i8
	[0x56124057e298]:  %37 = trunc i32 %36 to i8
	}

[0x561240578e10]:   %30 = and i8 %29, 1 {
	[0x56124057db80]:  %29 = and i8 %28, 1
	[0x56124057e690]:  %42 = and i1 %41, %40
	}

[0x561240578e90]:   %31 = xor i8 %30, 1 {
	[0x56124057dc00]:  %30 = xor i8 %29, 1
	}

[0x561240578f80]:   %32 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 3 {
	[0x56124057dcb0]:  %31 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 3
	}

[0x561240579250]:   %33 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 5 {
	[0x56124057ddf0]:  %32 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 5
	}

[0x5612405792e0]:   store i8 0, i8* %33, align 1 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x561240579360]:   %34 = icmp eq i32 %25, 0 {
	[0x56124057d3e0]:  %33 = icmp eq i32 %24, 0
	[0x56124057e610]:  %41 = icmp eq i8 %37, 0
	}

[0x5612405793c8]:   %35 = zext i1 %34 to i8 {
	[0x56124057e078]:  %34 = zext i1 %33 to i8
	}

[0x5612405794b0]:   %36 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 7 {
	[0x56124057e120]:  %35 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 7
	}

[0x561240579540]:   store i8 %35, i8* %36, align 1 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x561240579600]:   %37 = lshr i32 %25, 31 {
	[0x56124057e230]:  %36 = lshr i32 %24, 31
	}

[0x561240579668]:   %38 = trunc i32 %37 to i8 {
	[0x56124057db08]:  %28 = trunc i32 %27 to i8
	[0x56124057e298]:  %37 = trunc i32 %36 to i8
	}

[0x561240579750]:   %39 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 9 {
	[0x56124057e340]:  %38 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 9
	}

[0x5612405797e0]:   store i8 %38, i8* %39, align 1 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x561240579890]:   %40 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 13 {
	[0x56124057e480]:  %39 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 13
	}

[0x561240579920]:   store i8 0, i8* %40, align 1 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x5612405799e0]:   %41 = xor i1 %34, true {
	[0x56124057e590]:  %40 = xor i1 %33, true
	}

[0x561240579a60]:   %42 = icmp eq i8 %38, 0 {
	[0x56124057d3e0]:  %33 = icmp eq i32 %24, 0
	[0x56124057e610]:  %41 = icmp eq i8 %37, 0
	}

[0x561240579ae0]:   %43 = and i1 %42, %41 {
	[0x56124057da10]:  %26 = and i32 %24, 255
	[0x56124057db80]:  %29 = and i8 %28, 1
	[0x56124057e690]:  %42 = and i1 %41, %40
	}

[0x561240579bb8]:   %44 = select i1 %43, i64 13, i64 6 {
	[0x56124057e728]:  %43 = select i1 %42, i64 13, i64 6
	}

[0x561240579c30]:   %45 = add i64 %22, %44 {
	[0x561240573980]:  %7 = add i64 %1, 1
	[0x561240573b70]:  %10 = add i64 %9, -8
	[0x561240573ce0]:  %17 = add i64 %12, 6
	[0x56124057d2e0]:  %15 = add i64 %9, -12
	[0x56124057d690]:  %21 = add i64 %20, -4
	[0x56124057d710]:  %22 = add i64 %19, 4
	[0x56124057e7a0]:  %44 = add i64 %19, %43
	[0x56124057e910]:  %46 = add i64 %44, 5
	[0x56124057ec40]:  %48 = add i64 %44, 12
	[0x56124057ef80]:  %52 = add i64 %51, 1
	[0x56124057f0e0]:  %54 = add i64 %53, 8
	[0x56124057f320]:  %57 = add i64 %51, 2
	[0x56124057f560]:  %60 = add i64 %53, 16
	}

[0x561240579cf0]:   %46 = add i64 %45, 5 {
	[0x56124057e7a0]:  %44 = add i64 %19, %43
	[0x56124057e910]:  %46 = add i64 %44, 5
	}

[0x561240579d70]:   store i64 %46, i64* %4, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x561240579ed8]:   br i1 %43, label %49, label %47 {
	[0x56124057eb48]:  br i1 %42, label %49, label %47
	[0x56124057ed78]:  br label %50
	[0x56124057ee58]:  br label %50
	}

[0x561240579f50]:   store i64 1, i64* %7, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x561240579fd0]:   %48 = add i64 %45, 12 {
	[0x56124057e7a0]:  %44 = add i64 %19, %43
	[0x56124057ec40]:  %48 = add i64 %44, 12
	}

[0x56124057a050]:   store i64 %48, i64* %4, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x56124057a148]:   br label %50 {
	[0x56124057eb48]:  br i1 %42, label %49, label %47
	[0x56124057ed78]:  br label %50
	[0x56124057ee58]:  br label %50
	}

[0x56124057a1c0]:   store i64 0, i64* %7, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x56124057a228]:   br label %50 {
	[0x56124057eb48]:  br i1 %42, label %49, label %47
	[0x56124057ed78]:  br label %50
	[0x56124057ee58]:  br label %50
	}

[0x56124057a278]:   %51 = phi i64 [ %46, %49 ], [ %48, %47 ] {
	[0x56124057eea8]:  %51 = phi i64 [ %46, %49 ], [ %48, %47 ]
	}

[0x56124057a350]:   %52 = add i64 %51, 1 {
	[0x561240573980]:  %7 = add i64 %1, 1
	[0x56124057e7a0]:  %44 = add i64 %19, %43
	[0x56124057ef80]:  %52 = add i64 %51, 1
	}

[0x56124057a3d0]:   store i64 %52, i64* %4, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x56124057a438]:   %53 = load i64, i64* %11, align 8 {
	[0x561240573908]:  %6 = load i64, i64* %5, align 8
	[0x561240573d58]:  %9 = load i64, i64* %8, align 8
	[0x561240573f18]:  %12 = load i64, i64* %4, align 8
	[0x561240574128]:  %16 = load i32, i32* %14, align 4
	[0x56124057d5b8]:  %19 = load i64, i64* %4, align 8
	[0x56124057d618]:  %20 = load i64, i64* %5, align 8
	[0x56124057d858]:  %24 = load i32, i32* %23, align 4
	[0x56124057f068]:  %53 = load i64, i64* %8, align 8
	[0x56124057f1a8]:  %56 = load i64, i64* %55, align 8
	[0x56124057f468]:  %59 = load i64, i64* %58, align 8
	}

[0x56124057a4b0]:   %54 = add i64 %53, 8 {
	[0x56124057e7a0]:  %44 = add i64 %19, %43
	[0x56124057f0e0]:  %54 = add i64 %53, 8
	}

[0x56124057a518]:   %55 = inttoptr i64 %53 to i64* {
	[0x561240573db8]:  %11 = inttoptr i64 %10 to i64*
	[0x56124057d4d8]:  %18 = inttoptr i64 %15 to i32*
	[0x56124057d7f8]:  %23 = inttoptr i64 %21 to i32*
	[0x56124057f148]:  %55 = inttoptr i64 %53 to i64*
	[0x56124057f408]:  %58 = inttoptr i64 %54 to i64*
	}

[0x56124057a578]:   %56 = load i64, i64* %55, align 8 {
	[0x561240573908]:  %6 = load i64, i64* %5, align 8
	[0x561240573d58]:  %9 = load i64, i64* %8, align 8
	[0x561240573f18]:  %12 = load i64, i64* %4, align 8
	[0x561240574128]:  %16 = load i32, i32* %14, align 4
	[0x56124057d5b8]:  %19 = load i64, i64* %4, align 8
	[0x56124057d618]:  %20 = load i64, i64* %5, align 8
	[0x56124057d858]:  %24 = load i32, i32* %23, align 4
	[0x56124057f068]:  %53 = load i64, i64* %8, align 8
	[0x56124057f1a8]:  %56 = load i64, i64* %55, align 8
	[0x56124057f468]:  %59 = load i64, i64* %58, align 8
	}

[0x56124057a5f0]:   store i64 %56, i64* %8, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x56124057a670]:   store i64 %54, i64* %11, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x56124057a6f0]:   %57 = add i64 %51, 2 {
	[0x56124057e7a0]:  %44 = add i64 %19, %43
	[0x56124057f320]:  %57 = add i64 %51, 2
	}

[0x56124057a770]:   store i64 %57, i64* %4, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x56124057a7d8]:   %58 = inttoptr i64 %54 to i64* {
	[0x561240573db8]:  %11 = inttoptr i64 %10 to i64*
	[0x56124057d4d8]:  %18 = inttoptr i64 %15 to i32*
	[0x56124057d7f8]:  %23 = inttoptr i64 %21 to i32*
	[0x56124057f148]:  %55 = inttoptr i64 %53 to i64*
	[0x56124057f408]:  %58 = inttoptr i64 %54 to i64*
	}

[0x56124057a838]:   %59 = load i64, i64* %58, align 8 {
	[0x561240573908]:  %6 = load i64, i64* %5, align 8
	[0x561240573d58]:  %9 = load i64, i64* %8, align 8
	[0x561240573f18]:  %12 = load i64, i64* %4, align 8
	[0x561240574128]:  %16 = load i32, i32* %14, align 4
	[0x56124057d5b8]:  %19 = load i64, i64* %4, align 8
	[0x56124057d618]:  %20 = load i64, i64* %5, align 8
	[0x56124057d858]:  %24 = load i32, i32* %23, align 4
	[0x56124057f068]:  %53 = load i64, i64* %8, align 8
	[0x56124057f1a8]:  %56 = load i64, i64* %55, align 8
	[0x56124057f468]:  %59 = load i64, i64* %58, align 8
	}

[0x56124057a8b0]:   store i64 %59, i64* %4, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x56124057a970]:   %60 = add i64 %53, 16 {
	[0x56124057e7a0]:  %44 = add i64 %19, %43
	[0x56124057f560]:  %60 = add i64 %53, 16
	}

[0x56124057a9f0]:   store i64 %60, i64* %11, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x56124057aa58]:   ret %9* %2 {
	[0x56124057f648]:  ret %9* %2
	}



After Simple Simulation...
[0x561240576ef0]: %0* %0 {
	[0x5612405790a0]:%0* %0
	}

[0x561240576f30]: i64 %1 {
	[0x5612405790e0]:i64 %1
	}

[0x561240576f70]: %9* %2 {
	[0x561240579120]:%9* %2
	}

[0x5612405777d8]:   %5 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 11, i32 0 {
	[0x561240574058]:  %13 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 11, i32 0
	}

[0x561240577848]:   %6 = bitcast %2* %5 to i32* {
	[0x5612405740c8]:  %14 = bitcast %2* %13 to i32*
	}

[0x561240577960]:   %7 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 1, i32 0, i32 0 {
	[0x56124057e880]:  %45 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 1, i32 0, i32 0
	}

[0x561240577a70]:   %18 = add i64 %15, 6 {
	[0x561240573ce0]:  %17 = add i64 %12, 6
	}

[0x561240577b70]:   %4 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 33, i32 0, i32 0 {
	[0x561240573c50]:  %4 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 33, i32 0, i32 0
	}

[0x561240577c60]:   %8 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 15, i32 0, i32 0 {
	[0x561240573890]:  %5 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 15, i32 0, i32 0
	}

[0x561240577cd8]:   %17 = load i32, i32* %6, align 4 {
	[0x561240574128]:  %16 = load i32, i32* %14, align 4
	}

[0x561240577d68]:   %9 = load i64, i64* %8, align 8 {
	[0x561240573908]:  %6 = load i64, i64* %5, align 8
	}

[0x561240577e20]:   %10 = add i64 %1, 1 {
	[0x561240573980]:  %7 = add i64 %1, 1
	}

[0x561240577ea0]:   store i64 %10, i64* %4, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	}

[0x561240577fc0]:   %11 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 13, i32 0, i32 0 {
	[0x561240573ae0]:  %8 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 13, i32 0, i32 0
	}

[0x561240578038]:   %12 = load i64, i64* %11, align 8 {
	[0x561240573d58]:  %9 = load i64, i64* %8, align 8
	}

[0x5612405780f0]:   %13 = add i64 %12, -8 {
	[0x561240573b70]:  %10 = add i64 %9, -8
	}

[0x561240578158]:   %14 = inttoptr i64 %13 to i64* {
	[0x561240573db8]:  %11 = inttoptr i64 %10 to i64*
	}

[0x5612405781d0]:   store i64 %9, i64* %14, align 8 {
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	}

[0x561240578250]:   store i64 %13, i64* %11, align 8 {
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	}

[0x5612405782b8]:   %15 = load i64, i64* %4, align 8 {
	[0x561240573f18]:  %12 = load i64, i64* %4, align 8
	}

[0x561240578330]:   store i64 %13, i64* %8, align 8 {
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	}

[0x5612405783f0]:   %16 = add i64 %12, -12 {
	[0x56124057d2e0]:  %15 = add i64 %9, -12
	}

[0x561240578470]:   store i8 %31, i8* %32, align 1 {
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	}

[0x561240578580]:   store i64 %18, i64* %4, align 8 {
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	}

[0x5612405785e8]:   %19 = inttoptr i64 %16 to i32* {
	[0x56124057d4d8]:  %18 = inttoptr i64 %15 to i32*
	}

[0x561240578660]:   store i32 %17, i32* %19, align 4 {
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	}

[0x5612405786c8]:   %20 = load i64, i64* %8, align 8 {
	[0x56124057d618]:  %20 = load i64, i64* %5, align 8
	}

[0x561240578780]:   %21 = add i64 %20, -4 {
	[0x56124057d690]:  %21 = add i64 %20, -4
	}

[0x5612405787e8]:   %22 = load i64, i64* %4, align 8 {
	[0x56124057d5b8]:  %19 = load i64, i64* %4, align 8
	}

[0x5612405788a0]:   %23 = add i64 %22, 4 {
	[0x56124057d710]:  %22 = add i64 %19, 4
	}

[0x561240578920]:   store i64 %23, i64* %4, align 8 {
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	}

[0x561240578988]:   %24 = inttoptr i64 %21 to i32* {
	[0x56124057d7f8]:  %23 = inttoptr i64 %21 to i32*
	}

[0x5612405789e8]:   %25 = load i32, i32* %24, align 4 {
	[0x56124057d858]:  %24 = load i32, i32* %23, align 4
	}

[0x561240578ad0]:   %26 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 1 {
	[0x56124057d900]:  %25 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 1
	}

[0x561240578ba0]:   store i8 0, i8* %26, align 1 {
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	}

[0x561240578c60]:   %27 = and i32 %25, 255 {
	[0x56124057da10]:  %26 = and i32 %24, 255
	}

[0x561240578ce0]:   %28 = tail call i32 @llvm.ctpop.i32(i32 %27) {
	[0x56124057da90]:  %27 = tail call i32 @llvm.ctpop.i32(i32 %26)
	}

[0x561240578d58]:   %29 = trunc i32 %28 to i8 {
	[0x56124057db08]:  %28 = trunc i32 %27 to i8
	}

[0x561240578e10]:   %30 = and i8 %29, 1 {
	[0x56124057db80]:  %29 = and i8 %28, 1
	}

[0x561240578e90]:   %31 = xor i8 %30, 1 {
	[0x56124057dc00]:  %30 = xor i8 %29, 1
	}

[0x561240578f80]:   %32 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 3 {
	[0x56124057dcb0]:  %31 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 3
	}

[0x561240579250]:   %33 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 5 {
	[0x56124057ddf0]:  %32 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 5
	}

[0x5612405792e0]:   store i8 0, i8* %33, align 1 {
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	}

[0x561240579360]:   %34 = icmp eq i32 %25, 0 {
	[0x56124057d3e0]:  %33 = icmp eq i32 %24, 0
	}

[0x5612405793c8]:   %35 = zext i1 %34 to i8 {
	[0x56124057e078]:  %34 = zext i1 %33 to i8
	}

[0x5612405794b0]:   %36 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 7 {
	[0x56124057e120]:  %35 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 7
	}

[0x561240579540]:   store i8 %35, i8* %36, align 1 {
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	}

[0x561240579600]:   %37 = lshr i32 %25, 31 {
	[0x56124057e230]:  %36 = lshr i32 %24, 31
	}

[0x561240579668]:   %38 = trunc i32 %37 to i8 {
	[0x56124057e298]:  %37 = trunc i32 %36 to i8
	}

[0x561240579750]:   %39 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 9 {
	[0x56124057e340]:  %38 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 9
	}

[0x5612405797e0]:   store i8 %38, i8* %39, align 1 {
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	}

[0x561240579890]:   %40 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 13 {
	[0x56124057e480]:  %39 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 13
	}

[0x561240579920]:   store i8 0, i8* %40, align 1 {
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	}

[0x5612405799e0]:   %41 = xor i1 %34, true {
	[0x56124057e590]:  %40 = xor i1 %33, true
	}

[0x561240579a60]:   %42 = icmp eq i8 %38, 0 {
	[0x56124057e610]:  %41 = icmp eq i8 %37, 0
	}

[0x561240579ae0]:   %43 = and i1 %42, %41 {
	[0x56124057e690]:  %42 = and i1 %41, %40
	}

[0x561240579bb8]:   %44 = select i1 %43, i64 13, i64 6 {
	[0x56124057e728]:  %43 = select i1 %42, i64 13, i64 6
	}

[0x561240579c30]:   %45 = add i64 %22, %44 {
	[0x56124057e7a0]:  %44 = add i64 %19, %43
	}

[0x561240579cf0]:   %46 = add i64 %45, 5 {
	[0x56124057e910]:  %46 = add i64 %44, 5
	}

[0x561240579d70]:   store i64 %46, i64* %4, align 8 {
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	}

[0x561240579ed8]:   br i1 %43, label %49, label %47 {
	[0x56124057eb48]:  br i1 %42, label %49, label %47
	}

[0x561240579f50]:   store i64 1, i64* %7, align 8 {
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	}

[0x561240579fd0]:   %48 = add i64 %45, 12 {
	[0x56124057ec40]:  %48 = add i64 %44, 12
	}

[0x56124057a050]:   store i64 %48, i64* %4, align 8 {
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	}

[0x56124057a148]:   br label %50 {
	[0x56124057eb48]:  br i1 %42, label %49, label %47
	[0x56124057ed78]:  br label %50
	[0x56124057ee58]:  br label %50
	}

[0x56124057a1c0]:   store i64 0, i64* %7, align 8 {
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	}

[0x56124057a228]:   br label %50 {
	[0x56124057eb48]:  br i1 %42, label %49, label %47
	[0x56124057ed78]:  br label %50
	[0x56124057ee58]:  br label %50
	}

[0x56124057a278]:   %51 = phi i64 [ %46, %49 ], [ %48, %47 ] {
	[0x56124057eea8]:  %51 = phi i64 [ %46, %49 ], [ %48, %47 ]
	}

[0x56124057a350]:   %52 = add i64 %51, 1 {
	[0x56124057ef80]:  %52 = add i64 %51, 1
	}

[0x56124057a3d0]:   store i64 %52, i64* %4, align 8 {
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	}

[0x56124057a438]:   %53 = load i64, i64* %11, align 8 {
	[0x56124057f068]:  %53 = load i64, i64* %8, align 8
	}

[0x56124057a4b0]:   %54 = add i64 %53, 8 {
	[0x56124057f0e0]:  %54 = add i64 %53, 8
	}

[0x56124057a518]:   %55 = inttoptr i64 %53 to i64* {
	[0x56124057f148]:  %55 = inttoptr i64 %53 to i64*
	}

[0x56124057a578]:   %56 = load i64, i64* %55, align 8 {
	[0x56124057f1a8]:  %56 = load i64, i64* %55, align 8
	}

[0x56124057a5f0]:   store i64 %56, i64* %8, align 8 {
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	}

[0x56124057a670]:   store i64 %54, i64* %11, align 8 {
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	}

[0x56124057a6f0]:   %57 = add i64 %51, 2 {
	[0x56124057f320]:  %57 = add i64 %51, 2
	}

[0x56124057a770]:   store i64 %57, i64* %4, align 8 {
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	}

[0x56124057a7d8]:   %58 = inttoptr i64 %54 to i64* {
	[0x56124057f408]:  %58 = inttoptr i64 %54 to i64*
	}

[0x56124057a838]:   %59 = load i64, i64* %58, align 8 {
	[0x56124057f468]:  %59 = load i64, i64* %58, align 8
	}

[0x56124057a8b0]:   store i64 %59, i64* %4, align 8 {
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	}

[0x56124057a970]:   %60 = add i64 %53, 16 {
	[0x56124057f560]:  %60 = add i64 %53, 16
	}

[0x56124057a9f0]:   store i64 %60, i64* %11, align 8 {
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x56124057aa58]:   ret %9* %2 {
	[0x56124057f648]:  ret %9* %2
	}

Retrieved BB Matches...
[0x561240576fb0]:  {
	[0x561240579180]:
	}

[0x561240579e00]:  {
	[0x56124057ea70]:
	}

[0x56124057a0a0]:  {
	[0x56124057ed10]:
	}



After Simple Simulation...
[0x561240576ef0]: %0* %0 {
	[0x5612405790a0]:%0* %0
	}

[0x561240576f30]: i64 %1 {
	[0x5612405790e0]:i64 %1
	}

[0x561240576f70]: %9* %2 {
	[0x561240579120]:%9* %2
	}

[0x5612405777d8]:   %5 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 11, i32 0 {
	[0x561240574058]:  %13 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 11, i32 0
	}

[0x561240577848]:   %6 = bitcast %2* %5 to i32* {
	[0x5612405740c8]:  %14 = bitcast %2* %13 to i32*
	}

[0x561240577960]:   %7 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 1, i32 0, i32 0 {
	[0x56124057e880]:  %45 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 1, i32 0, i32 0
	}

[0x561240577a70]:   %18 = add i64 %15, 6 {
	[0x561240573ce0]:  %17 = add i64 %12, 6
	}

[0x561240577b70]:   %4 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 33, i32 0, i32 0 {
	[0x561240573c50]:  %4 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 33, i32 0, i32 0
	}

[0x561240577c60]:   %8 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 15, i32 0, i32 0 {
	[0x561240573890]:  %5 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 15, i32 0, i32 0
	}

[0x561240577cd8]:   %17 = load i32, i32* %6, align 4 {
	[0x561240574128]:  %16 = load i32, i32* %14, align 4
	}

[0x561240577d68]:   %9 = load i64, i64* %8, align 8 {
	[0x561240573908]:  %6 = load i64, i64* %5, align 8
	}

[0x561240577e20]:   %10 = add i64 %1, 1 {
	[0x561240573980]:  %7 = add i64 %1, 1
	}

[0x561240577ea0]:   store i64 %10, i64* %4, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	}

[0x561240577fc0]:   %11 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 13, i32 0, i32 0 {
	[0x561240573ae0]:  %8 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 13, i32 0, i32 0
	}

[0x561240578038]:   %12 = load i64, i64* %11, align 8 {
	[0x561240573d58]:  %9 = load i64, i64* %8, align 8
	}

[0x5612405780f0]:   %13 = add i64 %12, -8 {
	[0x561240573b70]:  %10 = add i64 %9, -8
	}

[0x561240578158]:   %14 = inttoptr i64 %13 to i64* {
	[0x561240573db8]:  %11 = inttoptr i64 %10 to i64*
	}

[0x5612405781d0]:   store i64 %9, i64* %14, align 8 {
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	}

[0x561240578250]:   store i64 %13, i64* %11, align 8 {
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	}

[0x5612405782b8]:   %15 = load i64, i64* %4, align 8 {
	[0x561240573f18]:  %12 = load i64, i64* %4, align 8
	}

[0x561240578330]:   store i64 %13, i64* %8, align 8 {
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	}

[0x5612405783f0]:   %16 = add i64 %12, -12 {
	[0x56124057d2e0]:  %15 = add i64 %9, -12
	}

[0x561240578470]:   store i8 %31, i8* %32, align 1 {
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	}

[0x561240578580]:   store i64 %18, i64* %4, align 8 {
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	}

[0x5612405785e8]:   %19 = inttoptr i64 %16 to i32* {
	[0x56124057d4d8]:  %18 = inttoptr i64 %15 to i32*
	}

[0x561240578660]:   store i32 %17, i32* %19, align 4 {
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	}

[0x5612405786c8]:   %20 = load i64, i64* %8, align 8 {
	[0x56124057d618]:  %20 = load i64, i64* %5, align 8
	}

[0x561240578780]:   %21 = add i64 %20, -4 {
	[0x56124057d690]:  %21 = add i64 %20, -4
	}

[0x5612405787e8]:   %22 = load i64, i64* %4, align 8 {
	[0x56124057d5b8]:  %19 = load i64, i64* %4, align 8
	}

[0x5612405788a0]:   %23 = add i64 %22, 4 {
	[0x56124057d710]:  %22 = add i64 %19, 4
	}

[0x561240578920]:   store i64 %23, i64* %4, align 8 {
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	}

[0x561240578988]:   %24 = inttoptr i64 %21 to i32* {
	[0x56124057d7f8]:  %23 = inttoptr i64 %21 to i32*
	}

[0x5612405789e8]:   %25 = load i32, i32* %24, align 4 {
	[0x56124057d858]:  %24 = load i32, i32* %23, align 4
	}

[0x561240578ad0]:   %26 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 1 {
	[0x56124057d900]:  %25 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 1
	}

[0x561240578ba0]:   store i8 0, i8* %26, align 1 {
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	}

[0x561240578c60]:   %27 = and i32 %25, 255 {
	[0x56124057da10]:  %26 = and i32 %24, 255
	}

[0x561240578ce0]:   %28 = tail call i32 @llvm.ctpop.i32(i32 %27) {
	[0x56124057da90]:  %27 = tail call i32 @llvm.ctpop.i32(i32 %26)
	}

[0x561240578d58]:   %29 = trunc i32 %28 to i8 {
	[0x56124057db08]:  %28 = trunc i32 %27 to i8
	}

[0x561240578e10]:   %30 = and i8 %29, 1 {
	[0x56124057db80]:  %29 = and i8 %28, 1
	}

[0x561240578e90]:   %31 = xor i8 %30, 1 {
	[0x56124057dc00]:  %30 = xor i8 %29, 1
	}

[0x561240578f80]:   %32 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 3 {
	[0x56124057dcb0]:  %31 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 3
	}

[0x561240579250]:   %33 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 5 {
	[0x56124057ddf0]:  %32 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 5
	}

[0x5612405792e0]:   store i8 0, i8* %33, align 1 {
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	}

[0x561240579360]:   %34 = icmp eq i32 %25, 0 {
	[0x56124057d3e0]:  %33 = icmp eq i32 %24, 0
	}

[0x5612405793c8]:   %35 = zext i1 %34 to i8 {
	[0x56124057e078]:  %34 = zext i1 %33 to i8
	}

[0x5612405794b0]:   %36 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 7 {
	[0x56124057e120]:  %35 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 7
	}

[0x561240579540]:   store i8 %35, i8* %36, align 1 {
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	}

[0x561240579600]:   %37 = lshr i32 %25, 31 {
	[0x56124057e230]:  %36 = lshr i32 %24, 31
	}

[0x561240579668]:   %38 = trunc i32 %37 to i8 {
	[0x56124057e298]:  %37 = trunc i32 %36 to i8
	}

[0x561240579750]:   %39 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 9 {
	[0x56124057e340]:  %38 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 9
	}

[0x5612405797e0]:   store i8 %38, i8* %39, align 1 {
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	}

[0x561240579890]:   %40 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 13 {
	[0x56124057e480]:  %39 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 13
	}

[0x561240579920]:   store i8 0, i8* %40, align 1 {
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	}

[0x5612405799e0]:   %41 = xor i1 %34, true {
	[0x56124057e590]:  %40 = xor i1 %33, true
	}

[0x561240579a60]:   %42 = icmp eq i8 %38, 0 {
	[0x56124057e610]:  %41 = icmp eq i8 %37, 0
	}

[0x561240579ae0]:   %43 = and i1 %42, %41 {
	[0x56124057e690]:  %42 = and i1 %41, %40
	}

[0x561240579bb8]:   %44 = select i1 %43, i64 13, i64 6 {
	[0x56124057e728]:  %43 = select i1 %42, i64 13, i64 6
	}

[0x561240579c30]:   %45 = add i64 %22, %44 {
	[0x56124057e7a0]:  %44 = add i64 %19, %43
	}

[0x561240579cf0]:   %46 = add i64 %45, 5 {
	[0x56124057e910]:  %46 = add i64 %44, 5
	}

[0x561240579d70]:   store i64 %46, i64* %4, align 8 {
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	}

[0x561240579ed8]:   br i1 %43, label %49, label %47 {
	[0x56124057eb48]:  br i1 %42, label %49, label %47
	}

[0x561240579f50]:   store i64 1, i64* %7, align 8 {
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	}

[0x561240579fd0]:   %48 = add i64 %45, 12 {
	[0x56124057ec40]:  %48 = add i64 %44, 12
	}

[0x56124057a050]:   store i64 %48, i64* %4, align 8 {
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	}

[0x56124057a148]:   br label %50 {
	[0x56124057eb48]:  br i1 %42, label %49, label %47
	[0x56124057ed78]:  br label %50
	[0x56124057ee58]:  br label %50
	}

[0x56124057a1c0]:   store i64 0, i64* %7, align 8 {
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	}

[0x56124057a228]:   br label %50 {
	[0x56124057eb48]:  br i1 %42, label %49, label %47
	[0x56124057ed78]:  br label %50
	[0x56124057ee58]:  br label %50
	}

[0x56124057a278]:   %51 = phi i64 [ %46, %49 ], [ %48, %47 ] {
	[0x56124057eea8]:  %51 = phi i64 [ %46, %49 ], [ %48, %47 ]
	}

[0x56124057a350]:   %52 = add i64 %51, 1 {
	[0x56124057ef80]:  %52 = add i64 %51, 1
	}

[0x56124057a3d0]:   store i64 %52, i64* %4, align 8 {
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	}

[0x56124057a438]:   %53 = load i64, i64* %11, align 8 {
	[0x56124057f068]:  %53 = load i64, i64* %8, align 8
	}

[0x56124057a4b0]:   %54 = add i64 %53, 8 {
	[0x56124057f0e0]:  %54 = add i64 %53, 8
	}

[0x56124057a518]:   %55 = inttoptr i64 %53 to i64* {
	[0x56124057f148]:  %55 = inttoptr i64 %53 to i64*
	}

[0x56124057a578]:   %56 = load i64, i64* %55, align 8 {
	[0x56124057f1a8]:  %56 = load i64, i64* %55, align 8
	}

[0x56124057a5f0]:   store i64 %56, i64* %8, align 8 {
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	}

[0x56124057a670]:   store i64 %54, i64* %11, align 8 {
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	}

[0x56124057a6f0]:   %57 = add i64 %51, 2 {
	[0x56124057f320]:  %57 = add i64 %51, 2
	}

[0x56124057a770]:   store i64 %57, i64* %4, align 8 {
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	}

[0x56124057a7d8]:   %58 = inttoptr i64 %54 to i64* {
	[0x56124057f408]:  %58 = inttoptr i64 %54 to i64*
	}

[0x56124057a838]:   %59 = load i64, i64* %58, align 8 {
	[0x56124057f468]:  %59 = load i64, i64* %58, align 8
	}

[0x56124057a8b0]:   store i64 %59, i64* %4, align 8 {
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	}

[0x56124057a970]:   %60 = add i64 %53, 16 {
	[0x56124057f560]:  %60 = add i64 %53, 16
	}

[0x56124057a9f0]:   store i64 %60, i64* %11, align 8 {
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x56124057aa58]:   ret %9* %2 {
	[0x56124057f648]:  ret %9* %2
	}

Retrieved BB Matches...
[0x561240576fb0]:  {
	[0x561240579180]:
	}

[0x561240578500]:  {
	[0x56124057e9e0]:
	}

[0x561240579e00]:  {
	[0x56124057ea70]:
	}

[0x56124057a0a0]:  {
	[0x56124057ed10]:
	}



After Simple Simulation...
[0x561240576ef0]: %0* %0 {
	[0x5612405790a0]:%0* %0
	}

[0x561240576f30]: i64 %1 {
	[0x5612405790e0]:i64 %1
	}

[0x561240576f70]: %9* %2 {
	[0x561240579120]:%9* %2
	}

[0x5612405777d8]:   %5 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 11, i32 0 {
	[0x561240574058]:  %13 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 11, i32 0
	}

[0x561240577848]:   %6 = bitcast %2* %5 to i32* {
	[0x5612405740c8]:  %14 = bitcast %2* %13 to i32*
	}

[0x561240577960]:   %7 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 1, i32 0, i32 0 {
	[0x56124057e880]:  %45 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 1, i32 0, i32 0
	}

[0x561240577a70]:   %18 = add i64 %15, 6 {
	[0x561240573ce0]:  %17 = add i64 %12, 6
	}

[0x561240577b70]:   %4 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 33, i32 0, i32 0 {
	[0x561240573c50]:  %4 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 33, i32 0, i32 0
	}

[0x561240577c60]:   %8 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 15, i32 0, i32 0 {
	[0x561240573890]:  %5 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 15, i32 0, i32 0
	}

[0x561240577cd8]:   %17 = load i32, i32* %6, align 4 {
	[0x561240574128]:  %16 = load i32, i32* %14, align 4
	}

[0x561240577d68]:   %9 = load i64, i64* %8, align 8 {
	[0x561240573908]:  %6 = load i64, i64* %5, align 8
	}

[0x561240577e20]:   %10 = add i64 %1, 1 {
	[0x561240573980]:  %7 = add i64 %1, 1
	}

[0x561240577ea0]:   store i64 %10, i64* %4, align 8 {
	[0x561240573a00]:  store i64 %7, i64* %4, align 8
	}

[0x561240577fc0]:   %11 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 13, i32 0, i32 0 {
	[0x561240573ae0]:  %8 = getelementptr inbounds %0, %0* %0, i64 0, i32 6, i32 13, i32 0, i32 0
	}

[0x561240578038]:   %12 = load i64, i64* %11, align 8 {
	[0x561240573d58]:  %9 = load i64, i64* %8, align 8
	}

[0x5612405780f0]:   %13 = add i64 %12, -8 {
	[0x561240573b70]:  %10 = add i64 %9, -8
	}

[0x561240578158]:   %14 = inttoptr i64 %13 to i64* {
	[0x561240573db8]:  %11 = inttoptr i64 %10 to i64*
	}

[0x5612405781d0]:   store i64 %9, i64* %14, align 8 {
	[0x561240573e30]:  store i64 %6, i64* %11, align 8
	}

[0x561240578250]:   store i64 %13, i64* %11, align 8 {
	[0x561240573eb0]:  store i64 %10, i64* %8, align 8
	}

[0x5612405782b8]:   %15 = load i64, i64* %4, align 8 {
	[0x561240573f18]:  %12 = load i64, i64* %4, align 8
	}

[0x561240578330]:   store i64 %13, i64* %8, align 8 {
	[0x561240573f90]:  store i64 %10, i64* %5, align 8
	}

[0x5612405783f0]:   %16 = add i64 %12, -12 {
	[0x56124057d2e0]:  %15 = add i64 %9, -12
	}

[0x561240578470]:   store i8 %31, i8* %32, align 1 {
	[0x56124057dd40]:  store i8 %30, i8* %31, align 1
	}

[0x561240578580]:   store i64 %18, i64* %4, align 8 {
	[0x56124057d470]:  store i64 %17, i64* %4, align 8
	}

[0x5612405785e8]:   %19 = inttoptr i64 %16 to i32* {
	[0x56124057d4d8]:  %18 = inttoptr i64 %15 to i32*
	}

[0x561240578660]:   store i32 %17, i32* %19, align 4 {
	[0x56124057d550]:  store i32 %16, i32* %18, align 4
	}

[0x5612405786c8]:   %20 = load i64, i64* %8, align 8 {
	[0x56124057d618]:  %20 = load i64, i64* %5, align 8
	}

[0x561240578780]:   %21 = add i64 %20, -4 {
	[0x56124057d690]:  %21 = add i64 %20, -4
	}

[0x5612405787e8]:   %22 = load i64, i64* %4, align 8 {
	[0x56124057d5b8]:  %19 = load i64, i64* %4, align 8
	}

[0x5612405788a0]:   %23 = add i64 %22, 4 {
	[0x56124057d710]:  %22 = add i64 %19, 4
	}

[0x561240578920]:   store i64 %23, i64* %4, align 8 {
	[0x56124057d790]:  store i64 %22, i64* %4, align 8
	}

[0x561240578988]:   %24 = inttoptr i64 %21 to i32* {
	[0x56124057d7f8]:  %23 = inttoptr i64 %21 to i32*
	}

[0x5612405789e8]:   %25 = load i32, i32* %24, align 4 {
	[0x56124057d858]:  %24 = load i32, i32* %23, align 4
	}

[0x561240578ad0]:   %26 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 1 {
	[0x56124057d900]:  %25 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 1
	}

[0x561240578ba0]:   store i8 0, i8* %26, align 1 {
	[0x56124057d990]:  store i8 0, i8* %25, align 1
	}

[0x561240578c60]:   %27 = and i32 %25, 255 {
	[0x56124057da10]:  %26 = and i32 %24, 255
	}

[0x561240578ce0]:   %28 = tail call i32 @llvm.ctpop.i32(i32 %27) {
	[0x56124057da90]:  %27 = tail call i32 @llvm.ctpop.i32(i32 %26)
	}

[0x561240578d58]:   %29 = trunc i32 %28 to i8 {
	[0x56124057db08]:  %28 = trunc i32 %27 to i8
	}

[0x561240578e10]:   %30 = and i8 %29, 1 {
	[0x56124057db80]:  %29 = and i8 %28, 1
	}

[0x561240578e90]:   %31 = xor i8 %30, 1 {
	[0x56124057dc00]:  %30 = xor i8 %29, 1
	}

[0x561240578f80]:   %32 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 3 {
	[0x56124057dcb0]:  %31 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 3
	}

[0x561240579250]:   %33 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 5 {
	[0x56124057ddf0]:  %32 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 5
	}

[0x5612405792e0]:   store i8 0, i8* %33, align 1 {
	[0x56124057d360]:  store i8 0, i8* %32, align 1
	}

[0x561240579360]:   %34 = icmp eq i32 %25, 0 {
	[0x56124057d3e0]:  %33 = icmp eq i32 %24, 0
	}

[0x5612405793c8]:   %35 = zext i1 %34 to i8 {
	[0x56124057e078]:  %34 = zext i1 %33 to i8
	}

[0x5612405794b0]:   %36 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 7 {
	[0x56124057e120]:  %35 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 7
	}

[0x561240579540]:   store i8 %35, i8* %36, align 1 {
	[0x56124057e1b0]:  store i8 %34, i8* %35, align 1
	}

[0x561240579600]:   %37 = lshr i32 %25, 31 {
	[0x56124057e230]:  %36 = lshr i32 %24, 31
	}

[0x561240579668]:   %38 = trunc i32 %37 to i8 {
	[0x56124057e298]:  %37 = trunc i32 %36 to i8
	}

[0x561240579750]:   %39 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 9 {
	[0x56124057e340]:  %38 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 9
	}

[0x5612405797e0]:   store i8 %38, i8* %39, align 1 {
	[0x56124057e3d0]:  store i8 %37, i8* %38, align 1
	}

[0x561240579890]:   %40 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 13 {
	[0x56124057e480]:  %39 = getelementptr inbounds %0, %0* %0, i64 0, i32 2, i32 13
	}

[0x561240579920]:   store i8 0, i8* %40, align 1 {
	[0x56124057e510]:  store i8 0, i8* %39, align 1
	}

[0x5612405799e0]:   %41 = xor i1 %34, true {
	[0x56124057e590]:  %40 = xor i1 %33, true
	}

[0x561240579a60]:   %42 = icmp eq i8 %38, 0 {
	[0x56124057e610]:  %41 = icmp eq i8 %37, 0
	}

[0x561240579ae0]:   %43 = and i1 %42, %41 {
	[0x56124057e690]:  %42 = and i1 %41, %40
	}

[0x561240579bb8]:   %44 = select i1 %43, i64 13, i64 6 {
	[0x56124057e728]:  %43 = select i1 %42, i64 13, i64 6
	}

[0x561240579c30]:   %45 = add i64 %22, %44 {
	[0x56124057e7a0]:  %44 = add i64 %19, %43
	}

[0x561240579cf0]:   %46 = add i64 %45, 5 {
	[0x56124057e910]:  %46 = add i64 %44, 5
	}

[0x561240579d70]:   store i64 %46, i64* %4, align 8 {
	[0x56124057e990]:  store i64 %46, i64* %4, align 8
	}

[0x561240579ed8]:   br i1 %43, label %49, label %47 {
	[0x56124057eb48]:  br i1 %42, label %49, label %47
	}

[0x561240579f50]:   store i64 1, i64* %7, align 8 {
	[0x56124057ebc0]:  store i64 1, i64* %45, align 8
	}

[0x561240579fd0]:   %48 = add i64 %45, 12 {
	[0x56124057ec40]:  %48 = add i64 %44, 12
	}

[0x56124057a050]:   store i64 %48, i64* %4, align 8 {
	[0x56124057ecc0]:  store i64 %48, i64* %4, align 8
	}

[0x56124057a148]:   br label %50 {
	[0x56124057eb48]:  br i1 %42, label %49, label %47
	[0x56124057ed78]:  br label %50
	[0x56124057ee58]:  br label %50
	}

[0x56124057a1c0]:   store i64 0, i64* %7, align 8 {
	[0x56124057edf0]:  store i64 0, i64* %45, align 8
	}

[0x56124057a228]:   br label %50 {
	[0x56124057eb48]:  br i1 %42, label %49, label %47
	[0x56124057ed78]:  br label %50
	[0x56124057ee58]:  br label %50
	}

[0x56124057a278]:   %51 = phi i64 [ %46, %49 ], [ %48, %47 ] {
	[0x56124057eea8]:  %51 = phi i64 [ %46, %49 ], [ %48, %47 ]
	}

[0x56124057a350]:   %52 = add i64 %51, 1 {
	[0x56124057ef80]:  %52 = add i64 %51, 1
	}

[0x56124057a3d0]:   store i64 %52, i64* %4, align 8 {
	[0x56124057f000]:  store i64 %52, i64* %4, align 8
	}

[0x56124057a438]:   %53 = load i64, i64* %11, align 8 {
	[0x56124057f068]:  %53 = load i64, i64* %8, align 8
	}

[0x56124057a4b0]:   %54 = add i64 %53, 8 {
	[0x56124057f0e0]:  %54 = add i64 %53, 8
	}

[0x56124057a518]:   %55 = inttoptr i64 %53 to i64* {
	[0x56124057f148]:  %55 = inttoptr i64 %53 to i64*
	}

[0x56124057a578]:   %56 = load i64, i64* %55, align 8 {
	[0x56124057f1a8]:  %56 = load i64, i64* %55, align 8
	}

[0x56124057a5f0]:   store i64 %56, i64* %8, align 8 {
	[0x56124057f220]:  store i64 %56, i64* %5, align 8
	}

[0x56124057a670]:   store i64 %54, i64* %11, align 8 {
	[0x56124057f2a0]:  store i64 %54, i64* %8, align 8
	}

[0x56124057a6f0]:   %57 = add i64 %51, 2 {
	[0x56124057f320]:  %57 = add i64 %51, 2
	}

[0x56124057a770]:   store i64 %57, i64* %4, align 8 {
	[0x56124057f3a0]:  store i64 %57, i64* %4, align 8
	}

[0x56124057a7d8]:   %58 = inttoptr i64 %54 to i64* {
	[0x56124057f408]:  %58 = inttoptr i64 %54 to i64*
	}

[0x56124057a838]:   %59 = load i64, i64* %58, align 8 {
	[0x56124057f468]:  %59 = load i64, i64* %58, align 8
	}

[0x56124057a8b0]:   store i64 %59, i64* %4, align 8 {
	[0x56124057f4e0]:  store i64 %59, i64* %4, align 8
	}

[0x56124057a970]:   %60 = add i64 %53, 16 {
	[0x56124057f560]:  %60 = add i64 %53, 16
	}

[0x56124057a9f0]:   store i64 %60, i64* %11, align 8 {
	[0x56124057f5e0]:  store i64 %60, i64* %8, align 8
	}

[0x56124057aa58]:   ret %9* %2 {
	[0x56124057f648]:  ret %9* %2
	}

Retrieved BB Matches...
[0x561240576fb0]:  {
	[0x561240579180]:
	}

[0x561240578500]:  {
	[0x56124057e9e0]:
	}

[0x561240579e00]:  {
	[0x56124057ea70]:
	}

[0x56124057a0a0]:  {
	[0x56124057ed10]:
	}

Iso Match Found
Reading LLVM: test.unoptimized.mod.opt.ll
Reading LLVM: test.proposed.opt.ll
Extracting function [sub_660_get_sign] from test.unoptimized.mod.opt.ll
Extracting function [sub_4004a6_get_sign] from test.proposed.opt.ll
Exiting Simple Matcher ...
