========================================================
Source line mapping for function: do_call_value
========================================================

1 :   %1 = inttoptr i64 %ptr to void (%struct.regs*)* : NIL
2 :   tail call x86_64_sysvcc void %1(%struct.regs* %reg_context) : NIL
3 :   ret void : NIL
========================================================
Source line mapping for function: sub_0
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <0>	pushq	%rbp
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <0>	pushq	%rbp
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <0>	pushq	%rbp
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <0>	pushq	%rbp
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <0>	pushq	%rbp
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <0>	pushq	%rbp
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <0>	pushq	%rbp
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <0>	pushq	%rbp
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <0>	pushq	%rbp
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <0>	pushq	%rbp
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <0>	pushq	%rbp
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <0>	pushq	%rbp
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <0>	pushq	%rbp
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <0>	pushq	%rbp
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <0>	pushq	%rbp
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <0>	pushq	%rbp
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <0>	pushq	%rbp
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <0>	pushq	%rbp
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <0>	pushq	%rbp
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <0>	pushq	%rbp
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <0>	pushq	%rbp
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <0>	pushq	%rbp
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <0>	pushq	%rbp
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <0>	pushq	%rbp
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <0>	pushq	%rbp
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <0>	pushq	%rbp
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <0>	pushq	%rbp
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <0>	pushq	%rbp
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <0>	pushq	%rbp
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <0>	pushq	%rbp
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <0>	pushq	%rbp
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <0>	pushq	%rbp
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <0>	pushq	%rbp
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <0>	pushq	%rbp
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <0>	pushq	%rbp
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <0>	pushq	%rbp
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <0>	pushq	%rbp
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <0>	pushq	%rbp
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <0>	pushq	%rbp
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <0>	pushq	%rbp
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <0>	pushq	%rbp
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <0>	pushq	%rbp
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <0>	pushq	%rbp
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <0>	pushq	%rbp
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <0>	pushq	%rbp
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <0>	pushq	%rbp
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <0>	pushq	%rbp
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <0>	pushq	%rbp
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <0>	pushq	%rbp
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <0>	pushq	%rbp
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <0>	pushq	%rbp
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <0>	pushq	%rbp
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <0>	pushq	%rbp
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <0>	pushq	%rbp
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <0>	pushq	%rbp
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <0>	pushq	%rbp
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <0>	pushq	%rbp
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <0>	pushq	%rbp
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <0>	pushq	%rbp
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <0>	pushq	%rbp
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <0>	pushq	%rbp
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <0>	pushq	%rbp
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <0>	pushq	%rbp

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <0>	pushq	%rbp
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <0>	pushq	%rbp
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <0>	pushq	%rbp
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <0>	pushq	%rbp
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <0>	pushq	%rbp
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <0>	pushq	%rbp
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <0>	pushq	%rbp
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <0>	pushq	%rbp
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <0>	pushq	%rbp
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <0>	pushq	%rbp
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <0>	pushq	%rbp
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <0>	pushq	%rbp
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <0>	pushq	%rbp
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <0>	pushq	%rbp
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <0>	pushq	%rbp
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <0>	pushq	%rbp
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <0>	pushq	%rbp
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <0>	pushq	%rbp
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <0>	pushq	%rbp
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <0>	pushq	%rbp
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <0>	pushq	%rbp
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <0>	pushq	%rbp
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <0>	pushq	%rbp
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <0>	pushq	%rbp
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <0>	pushq	%rbp
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <0>	pushq	%rbp
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <0>	pushq	%rbp
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
288 :   %77 = load i64* %RBP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp
289 :   %78 = load i64* %RSP_val, !mcsema_real_eip !2 :          <0>	pushq	%rbp

290 :   %79 = add i64 %78, -8 : NIL

291 :   %80 = inttoptr i64 %79 to i64*, !mcsema_real_eip !2 :          <0>	pushq	%rbp
292 :   store i64 %77, i64* %80, !mcsema_real_eip !2 :          <0>	pushq	%rbp

293 :   store i64 %79, i64* %RBP_val, !mcsema_real_eip !3 :          <1>	movq	%rsp, %rbp

294 :   %81 = add i64 %78, -152 : NIL

295 :   store i64 %81, i64* %RSP_val, !mcsema_real_eip !4 :          <4>	subq	$144, %rsp

296 :   %82 = add i64 %78, -12, !mcsema_real_eip !5 :          <b>	movl	%edi, -4(%rbp)
297 :   %83 = inttoptr i64 %82 to i64*, !mcsema_real_eip !5 :          <b>	movl	%edi, -4(%rbp)
298 :   %84 = load i64* %RDI_val, !mcsema_real_eip !5 :          <b>	movl	%edi, -4(%rbp)
299 :   %85 = trunc i64 %84 to i32, !mcsema_real_eip !5 :          <b>	movl	%edi, -4(%rbp)

300 :   %86 = bitcast i64* %83 to i32* : NIL

301 :   store i32 %85, i32* %86, !mcsema_real_eip !5 :          <b>	movl	%edi, -4(%rbp)

302 :   %87 = load i64* %RDI_val, !mcsema_real_eip !6 :          <e>	movl	%edi, %eax

303 :   %88 = and i64 %87, 4294967295 : NIL

304 :   store i64 %88, i64* %RAX_val, !mcsema_real_eip !6 :          <e>	movl	%edi, %eax

305 :   %89 = trunc i64 %87 to i32, !mcsema_real_eip !7 :          <10>	subl	$74632, %edi

306 :   %90 = add i32 %89, -74632 : NIL

307 :   %91 = xor i32 %90, %89, !mcsema_real_eip !7 :          <10>	subl	$74632, %edi
308 :   %92 = and i32 %91, 16, !mcsema_real_eip !7 :          <10>	subl	$74632, %edi
309 :   %93 = icmp ne i32 %92, 0, !mcsema_real_eip !7 :          <10>	subl	$74632, %edi
310 :   store i1 %93, i1* %AF_val, !mcsema_real_eip !7 :          <10>	subl	$74632, %edi
311 :   %94 = trunc i32 %90 to i8, !mcsema_real_eip !7 :          <10>	subl	$74632, %edi
312 :   %95 = tail call i8 @llvm.ctpop.i8(i8 %94), !mcsema_real_eip !7 :          <10>	subl	$74632, %edi

313 :   %96 = and i8 %95, 1 : NIL
314 :   %97 = icmp eq i8 %96, 0 : NIL

315 :   store i1 %97, i1* %PF_val, !mcsema_real_eip !7 :          <10>	subl	$74632, %edi
316 :   %98 = icmp eq i32 %90, 0, !mcsema_real_eip !7 :          <10>	subl	$74632, %edi
317 :   store i1 %98, i1* %ZF_val, !mcsema_real_eip !7 :          <10>	subl	$74632, %edi

318 :   %99 = icmp slt i32 %90, 0 : NIL

319 :   store i1 %99, i1* %SF_val, !mcsema_real_eip !7 :          <10>	subl	$74632, %edi
320 :   %100 = icmp ult i32 %89, 74632, !mcsema_real_eip !7 :          <10>	subl	$74632, %edi
321 :   store i1 %100, i1* %CF_val, !mcsema_real_eip !7 :          <10>	subl	$74632, %edi
322 :   %101 = and i32 %91, %89, !mcsema_real_eip !7 :          <10>	subl	$74632, %edi

323 :   %102 = icmp slt i32 %101, 0 : NIL

324 :   store i1 %102, i1* %OF_val, !mcsema_real_eip !7 :          <10>	subl	$74632, %edi
325 :   %103 = zext i32 %90 to i64, !mcsema_real_eip !7 :          <10>	subl	$74632, %edi
326 :   store i64 %103, i64* %RDI_val, !mcsema_real_eip !7 :          <10>	subl	$74632, %edi

327 :   %104 = load i64* %RBP_val, !mcsema_real_eip !8 :          <16>	movl	%eax, -8(%rbp)
328 :   %105 = add i64 %104, -8, !mcsema_real_eip !8 :          <16>	movl	%eax, -8(%rbp)
329 :   %106 = inttoptr i64 %105 to i64*, !mcsema_real_eip !8 :          <16>	movl	%eax, -8(%rbp)
330 :   %107 = load i64* %RAX_val, !mcsema_real_eip !8 :          <16>	movl	%eax, -8(%rbp)
331 :   %108 = trunc i64 %107 to i32, !mcsema_real_eip !8 :          <16>	movl	%eax, -8(%rbp)

332 :   %109 = bitcast i64* %106 to i32* : NIL

333 :   store i32 %108, i32* %109, !mcsema_real_eip !8 :          <16>	movl	%eax, -8(%rbp)

334 :   %110 = load i64* %RBP_val, !mcsema_real_eip !9 :          <19>	movl	%edi, -12(%rbp)
335 :   %111 = add i64 %110, -12, !mcsema_real_eip !9 :          <19>	movl	%edi, -12(%rbp)
336 :   %112 = inttoptr i64 %111 to i64*, !mcsema_real_eip !9 :          <19>	movl	%edi, -12(%rbp)
337 :   %113 = load i64* %RDI_val, !mcsema_real_eip !9 :          <19>	movl	%edi, -12(%rbp)
338 :   %114 = trunc i64 %113 to i32, !mcsema_real_eip !9 :          <19>	movl	%edi, -12(%rbp)

339 :   %115 = bitcast i64* %112 to i32* : NIL

340 :   store i32 %114, i32* %115, !mcsema_real_eip !9 :          <19>	movl	%edi, -12(%rbp)

341 :   %116 = load i1* %OF_val, !mcsema_real_eip !10 :          <1c>	jg	86
342 :   %117 = load i1* %SF_val, !mcsema_real_eip !10 :          <1c>	jg	86

343 :   %tmp = xor i1 %117, %116 : NIL

344 :   %118 = load i1* %ZF_val, !mcsema_real_eip !10 :          <1c>	jg	86

345 :   %.demorgan = or i1 %118, %tmp : NIL

346 :   %119 = load i64* %RBP_val, !mcsema_real_eip !11 :          <78>	movl	-8(%rbp), %eax
347 :   %120 = add i64 %119, -8, !mcsema_real_eip !11 :          <78>	movl	-8(%rbp), %eax
348 :   %121 = inttoptr i64 %120 to i64*, !mcsema_real_eip !11 :          <78>	movl	-8(%rbp), %eax

349 :   %122 = bitcast i64* %121 to i32* : NIL

350 :   %123 = load i32* %122, !mcsema_real_eip !11 :          <78>	movl	-8(%rbp), %eax
351 :   %124 = zext i32 %123 to i64, !mcsema_real_eip !11 :          <78>	movl	-8(%rbp), %eax
352 :   store i64 %124, i64* %RAX_val, !mcsema_real_eip !11 :          <78>	movl	-8(%rbp), %eax

353 :   br i1 %.demorgan, label %block_0x27, label %block_0x78, !mcsema_real_eip !10 :          <1c>	jg	86

354 :   %125 = add i32 %123, -74633 : NIL

355 :   %126 = zext i32 %125 to i64, !mcsema_real_eip !12 :          <7b>	addl	$4294892663, %eax

356 :   store i64 %126, i64* %RCX_val, !mcsema_real_eip !13 :          <80>	movl	%eax, %ecx

357 :   %127 = add i32 %123, -74643 : NIL

358 :   %128 = xor i32 %127, %125, !mcsema_real_eip !14 :          <82>	subl	$10, %eax
359 :   %129 = and i32 %128, 16, !mcsema_real_eip !14 :          <82>	subl	$10, %eax
360 :   %130 = icmp ne i32 %129, 0, !mcsema_real_eip !14 :          <82>	subl	$10, %eax
361 :   store i1 %130, i1* %AF_val, !mcsema_real_eip !14 :          <82>	subl	$10, %eax
362 :   %131 = trunc i32 %127 to i8, !mcsema_real_eip !14 :          <82>	subl	$10, %eax
363 :   %132 = tail call i8 @llvm.ctpop.i8(i8 %131), !mcsema_real_eip !14 :          <82>	subl	$10, %eax

364 :   %133 = and i8 %132, 1 : NIL
365 :   %134 = icmp eq i8 %133, 0 : NIL

366 :   store i1 %134, i1* %PF_val, !mcsema_real_eip !14 :          <82>	subl	$10, %eax
367 :   %135 = icmp eq i32 %127, 0, !mcsema_real_eip !14 :          <82>	subl	$10, %eax
368 :   store i1 %135, i1* %ZF_val, !mcsema_real_eip !14 :          <82>	subl	$10, %eax

369 :   %136 = icmp slt i32 %127, 0 : NIL

370 :   store i1 %136, i1* %SF_val, !mcsema_real_eip !14 :          <82>	subl	$10, %eax
371 :   %137 = icmp ult i32 %125, 10, !mcsema_real_eip !14 :          <82>	subl	$10, %eax
372 :   store i1 %137, i1* %CF_val, !mcsema_real_eip !14 :          <82>	subl	$10, %eax
373 :   %138 = and i32 %128, %125, !mcsema_real_eip !14 :          <82>	subl	$10, %eax

374 :   %139 = icmp slt i32 %138, 0 : NIL

375 :   store i1 %139, i1* %OF_val, !mcsema_real_eip !14 :          <82>	subl	$10, %eax
376 :   %140 = zext i32 %127 to i64, !mcsema_real_eip !14 :          <82>	subl	$10, %eax
377 :   store i64 %140, i64* %RAX_val, !mcsema_real_eip !14 :          <82>	subl	$10, %eax

378 :   %141 = load i64* %RBP_val, !mcsema_real_eip !15 :          <85>	movq	%rcx, -48(%rbp)
379 :   %142 = add i64 %141, -48, !mcsema_real_eip !15 :          <85>	movq	%rcx, -48(%rbp)
380 :   %143 = inttoptr i64 %142 to i64*, !mcsema_real_eip !15 :          <85>	movq	%rcx, -48(%rbp)
381 :   %144 = load i64* %RCX_val, !mcsema_real_eip !15 :          <85>	movq	%rcx, -48(%rbp)
382 :   store i64 %144, i64* %143, !mcsema_real_eip !15 :          <85>	movq	%rcx, -48(%rbp)

383 :   %145 = load i64* %RBP_val, !mcsema_real_eip !16 :          <89>	movl	%eax, -52(%rbp)
384 :   %146 = add i64 %145, -52, !mcsema_real_eip !16 :          <89>	movl	%eax, -52(%rbp)
385 :   %147 = inttoptr i64 %146 to i64*, !mcsema_real_eip !16 :          <89>	movl	%eax, -52(%rbp)
386 :   %148 = load i64* %RAX_val, !mcsema_real_eip !16 :          <89>	movl	%eax, -52(%rbp)
387 :   %149 = trunc i64 %148 to i32, !mcsema_real_eip !16 :          <89>	movl	%eax, -52(%rbp)

388 :   %150 = bitcast i64* %147 to i32* : NIL

389 :   store i32 %149, i32* %150, !mcsema_real_eip !16 :          <89>	movl	%eax, -52(%rbp)

390 :   %151 = load i1* %ZF_val, !mcsema_real_eip !17 :          <8c>	ja	489
391 :   %152 = load i1* %CF_val, !mcsema_real_eip !17 :          <8c>	ja	489

392 :   %.demorgan566 = or i1 %152, %151 : NIL

393 :   br i1 %.demorgan566, label %block_0x92, label %block_0x27b, !mcsema_real_eip !17 :          <8c>	ja	489

394 :   %153 = add i32 %123, -254 : NIL

395 :   %154 = xor i32 %153, %123, !mcsema_real_eip !18 :          <2a>	subl	$254, %eax

396 :   %155 = and i32 %154, 16 : NIL
397 :   %156 = icmp eq i32 %155, 0 : NIL

398 :   store i1 %156, i1* %AF_val, !mcsema_real_eip !18 :          <2a>	subl	$254, %eax
399 :   %157 = trunc i32 %153 to i8, !mcsema_real_eip !18 :          <2a>	subl	$254, %eax
400 :   %158 = tail call i8 @llvm.ctpop.i8(i8 %157), !mcsema_real_eip !18 :          <2a>	subl	$254, %eax

401 :   %159 = and i8 %158, 1 : NIL
402 :   %160 = icmp eq i8 %159, 0 : NIL

403 :   store i1 %160, i1* %PF_val, !mcsema_real_eip !18 :          <2a>	subl	$254, %eax
404 :   %161 = icmp eq i32 %153, 0, !mcsema_real_eip !18 :          <2a>	subl	$254, %eax
405 :   store i1 %161, i1* %ZF_val, !mcsema_real_eip !18 :          <2a>	subl	$254, %eax

406 :   %162 = icmp slt i32 %153, 0 : NIL

407 :   store i1 %162, i1* %SF_val, !mcsema_real_eip !18 :          <2a>	subl	$254, %eax
408 :   %163 = icmp ult i32 %123, 254, !mcsema_real_eip !18 :          <2a>	subl	$254, %eax
409 :   store i1 %163, i1* %CF_val, !mcsema_real_eip !18 :          <2a>	subl	$254, %eax
410 :   %164 = and i32 %154, %123, !mcsema_real_eip !18 :          <2a>	subl	$254, %eax

411 :   %165 = icmp slt i32 %164, 0 : NIL

412 :   store i1 %165, i1* %OF_val, !mcsema_real_eip !18 :          <2a>	subl	$254, %eax
413 :   %166 = zext i32 %153 to i64, !mcsema_real_eip !18 :          <2a>	subl	$254, %eax
414 :   store i64 %166, i64* %RAX_val, !mcsema_real_eip !18 :          <2a>	subl	$254, %eax

415 :   %167 = load i64* %RBP_val, !mcsema_real_eip !19 :          <2f>	movl	%eax, -16(%rbp)
416 :   %168 = add i64 %167, -16, !mcsema_real_eip !19 :          <2f>	movl	%eax, -16(%rbp)
417 :   %169 = inttoptr i64 %168 to i64*, !mcsema_real_eip !19 :          <2f>	movl	%eax, -16(%rbp)

418 :   %170 = bitcast i64* %169 to i32* : NIL

419 :   store i32 %153, i32* %170, !mcsema_real_eip !19 :          <2f>	movl	%eax, -16(%rbp)

420 :   %171 = load i1* %OF_val, !mcsema_real_eip !20 :          <32>	jg	42
421 :   %172 = load i1* %SF_val, !mcsema_real_eip !20 :          <32>	jg	42

422 :   %tmp556 = xor i1 %172, %171 : NIL

423 :   %173 = load i1* %ZF_val, !mcsema_real_eip !20 :          <32>	jg	42

424 :   %.demorgan558 = or i1 %173, %tmp556 : NIL

425 :   %174 = load i64* %RBP_val, !mcsema_real_eip !21 :          <62>	movl	-8(%rbp), %eax
426 :   %175 = add i64 %174, -8, !mcsema_real_eip !21 :          <62>	movl	-8(%rbp), %eax
427 :   %176 = inttoptr i64 %175 to i64*, !mcsema_real_eip !21 :          <62>	movl	-8(%rbp), %eax

428 :   %177 = bitcast i64* %176 to i32* : NIL

429 :   %178 = load i32* %177, !mcsema_real_eip !21 :          <62>	movl	-8(%rbp), %eax
430 :   %179 = zext i32 %178 to i64, !mcsema_real_eip !21 :          <62>	movl	-8(%rbp), %eax
431 :   store i64 %179, i64* %RAX_val, !mcsema_real_eip !21 :          <62>	movl	-8(%rbp), %eax

432 :   br i1 %.demorgan558, label %block_0x3d, label %block_0x62, !mcsema_real_eip !20 :          <32>	jg	42

433 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 449), i64* %RDI_val, !mcsema_real_eip !22 :          <27b>	movabsq	$0, %rdi

434 :   %180 = load i64* %RBP_val, !mcsema_real_eip !23 :          <285>	movl	-4(%rbp), %esi
435 :   %181 = add i64 %180, -4, !mcsema_real_eip !23 :          <285>	movl	-4(%rbp), %esi
436 :   %182 = inttoptr i64 %181 to i64*, !mcsema_real_eip !23 :          <285>	movl	-4(%rbp), %esi

437 :   %183 = bitcast i64* %182 to i32* : NIL

438 :   %184 = load i32* %183, !mcsema_real_eip !23 :          <285>	movl	-4(%rbp), %esi
439 :   %185 = zext i32 %184 to i64, !mcsema_real_eip !23 :          <285>	movl	-4(%rbp), %esi
440 :   store i64 %185, i64* %RSI_val, !mcsema_real_eip !23 :          <285>	movl	-4(%rbp), %esi

441 :   %186 = load i64* %RDI_val, !mcsema_real_eip !24 :          <28a>	callq	0
442 :   %187 = load i64* %RDX_val, !mcsema_real_eip !24 :          <28a>	callq	0
443 :   %188 = load i64* %RCX_val, !mcsema_real_eip !24 :          <28a>	callq	0
444 :   %189 = tail call x86_64_sysvcc i64 @printf(i64 %186, i64 %185, i64 %187, i64 %188), !mcsema_real_eip !24 :          <28a>	callq	0

445 :   %190 = load i64* %RBP_val, !mcsema_real_eip !25 :          <28f>	movl	%eax, -132(%rbp)
446 :   %191 = add i64 %190, -132, !mcsema_real_eip !25 :          <28f>	movl	%eax, -132(%rbp)
447 :   %192 = inttoptr i64 %191 to i64*, !mcsema_real_eip !25 :          <28f>	movl	%eax, -132(%rbp)
448 :   %193 = trunc i64 %189 to i32, !mcsema_real_eip !25 :          <28f>	movl	%eax, -132(%rbp)

449 :   %194 = bitcast i64* %192 to i32* : NIL

450 :   store i32 %193, i32* %194, !mcsema_real_eip !25 :          <28f>	movl	%eax, -132(%rbp)

451 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !26 :          <295>	movl	$0, %eax

452 :   %195 = load i64* %RSP_val, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp

453 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %195, i64 144) : NIL
454 :   %196 = extractvalue { i64, i1 } %uadd, 0 : NIL

455 :   %197 = xor i64 %196, %195, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp

456 :   %198 = and i64 %197, 16 : NIL
457 :   %199 = icmp eq i64 %198, 0 : NIL

458 :   store i1 %199, i1* %AF_val, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp

459 :   %200 = icmp slt i64 %196, 0 : NIL

460 :   store i1 %200, i1* %SF_val, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp
461 :   %201 = icmp eq i64 %196, 0, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp
462 :   store i1 %201, i1* %ZF_val, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp
463 :   %202 = xor i64 %195, -9223372036854775808, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp
464 :   %203 = and i64 %197, %202, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp

465 :   %204 = icmp slt i64 %203, 0 : NIL

466 :   store i1 %204, i1* %OF_val, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp
467 :   %205 = trunc i64 %196 to i8, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp
468 :   %206 = tail call i8 @llvm.ctpop.i8(i8 %205), !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp

469 :   %207 = and i8 %206, 1 : NIL
470 :   %208 = icmp eq i8 %207, 0 : NIL

471 :   store i1 %208, i1* %PF_val, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp

472 :   %209 = extractvalue { i64, i1 } %uadd, 1 : NIL

473 :   store i1 %209, i1* %CF_val, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp
474 :   store i64 %196, i64* %RSP_val, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp

475 :   %210 = inttoptr i64 %196 to i64*, !mcsema_real_eip !28 :          <2a1>	popq	%rbp
476 :   %211 = load i64* %210, !mcsema_real_eip !28 :          <2a1>	popq	%rbp
477 :   store i64 %211, i64* %RBP_val, !mcsema_real_eip !28 :          <2a1>	popq	%rbp

478 :   %212 = add i64 %196, 16, !mcsema_real_eip !29 :          <2a2>	retq
479 :   store i64 %212, i64* %RSP_val, !mcsema_real_eip !29 :          <2a2>	retq
480 :   %213 = load i64* %RAX_val, !mcsema_real_eip !29 :          <2a2>	retq
481 :   store i64 %213, i64* %RAX, !mcsema_real_eip !29 :          <2a2>	retq
482 :   %214 = load i64* %RBX_val, !mcsema_real_eip !29 :          <2a2>	retq
483 :   store i64 %214, i64* %RBX, !mcsema_real_eip !29 :          <2a2>	retq
484 :   %215 = load i64* %RCX_val, !mcsema_real_eip !29 :          <2a2>	retq
485 :   store i64 %215, i64* %RCX, !mcsema_real_eip !29 :          <2a2>	retq
486 :   %216 = load i64* %RDX_val, !mcsema_real_eip !29 :          <2a2>	retq
487 :   store i64 %216, i64* %RDX, !mcsema_real_eip !29 :          <2a2>	retq
488 :   %217 = load i64* %RSI_val, !mcsema_real_eip !29 :          <2a2>	retq
489 :   store i64 %217, i64* %RSI, !mcsema_real_eip !29 :          <2a2>	retq
490 :   %218 = load i64* %RDI_val, !mcsema_real_eip !29 :          <2a2>	retq
491 :   store i64 %218, i64* %RDI, !mcsema_real_eip !29 :          <2a2>	retq
492 :   %219 = load i64* %RSP_val, !mcsema_real_eip !29 :          <2a2>	retq
493 :   store i64 %219, i64* %RSP, !mcsema_real_eip !29 :          <2a2>	retq
494 :   %220 = load i64* %RBP_val, !mcsema_real_eip !29 :          <2a2>	retq
495 :   store i64 %220, i64* %RBP, !mcsema_real_eip !29 :          <2a2>	retq
496 :   %221 = load i64* %R8_val, !mcsema_real_eip !29 :          <2a2>	retq
497 :   store i64 %221, i64* %R8, !mcsema_real_eip !29 :          <2a2>	retq
498 :   %222 = load i64* %R9_val, !mcsema_real_eip !29 :          <2a2>	retq
499 :   store i64 %222, i64* %R9, !mcsema_real_eip !29 :          <2a2>	retq
500 :   %223 = load i64* %R10_val, !mcsema_real_eip !29 :          <2a2>	retq
501 :   store i64 %223, i64* %R10, !mcsema_real_eip !29 :          <2a2>	retq
502 :   %224 = load i64* %R11_val, !mcsema_real_eip !29 :          <2a2>	retq
503 :   store i64 %224, i64* %R11, !mcsema_real_eip !29 :          <2a2>	retq
504 :   %225 = load i64* %R12_val, !mcsema_real_eip !29 :          <2a2>	retq
505 :   store i64 %225, i64* %R12, !mcsema_real_eip !29 :          <2a2>	retq
506 :   %226 = load i64* %R13_val, !mcsema_real_eip !29 :          <2a2>	retq
507 :   store i64 %226, i64* %R13, !mcsema_real_eip !29 :          <2a2>	retq
508 :   %227 = load i64* %R14_val, !mcsema_real_eip !29 :          <2a2>	retq
509 :   store i64 %227, i64* %R14, !mcsema_real_eip !29 :          <2a2>	retq
510 :   %228 = load i64* %R15_val, !mcsema_real_eip !29 :          <2a2>	retq
511 :   store i64 %228, i64* %R15, !mcsema_real_eip !29 :          <2a2>	retq
512 :   %229 = load i64* %RIP_val, !mcsema_real_eip !29 :          <2a2>	retq
513 :   store i64 %229, i64* %RIP, !mcsema_real_eip !29 :          <2a2>	retq
514 :   %230 = load i1* %CF_val, !mcsema_real_eip !29 :          <2a2>	retq
515 :   store i1 %230, i1* %CF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
516 :   %231 = load i1* %PF_val, !mcsema_real_eip !29 :          <2a2>	retq
517 :   store i1 %231, i1* %PF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
518 :   %232 = load i1* %AF_val, !mcsema_real_eip !29 :          <2a2>	retq
519 :   store i1 %232, i1* %AF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
520 :   %233 = load i1* %ZF_val, !mcsema_real_eip !29 :          <2a2>	retq
521 :   store i1 %233, i1* %ZF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
522 :   %234 = load i1* %SF_val, !mcsema_real_eip !29 :          <2a2>	retq
523 :   store i1 %234, i1* %SF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
524 :   %235 = load i1* %OF_val, !mcsema_real_eip !29 :          <2a2>	retq
525 :   store i1 %235, i1* %OF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
526 :   %236 = load i1* %DF_val, !mcsema_real_eip !29 :          <2a2>	retq
527 :   store i1 %236, i1* %DF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
528 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !29 :          <2a2>	retq
529 :   %237 = load i1* %FPU_B_val, !mcsema_real_eip !29 :          <2a2>	retq
530 :   store i1 %237, i1* %FPU_B, align 1, !mcsema_real_eip !29 :          <2a2>	retq
531 :   %238 = load i1* %FPU_C3_val, !mcsema_real_eip !29 :          <2a2>	retq
532 :   store i1 %238, i1* %FPU_C3, align 1, !mcsema_real_eip !29 :          <2a2>	retq
533 :   %239 = load i3* %FPU_TOP_val, !mcsema_real_eip !29 :          <2a2>	retq
534 :   store i3 %239, i3* %FPU_TOP, align 1, !mcsema_real_eip !29 :          <2a2>	retq
535 :   %240 = load i1* %FPU_C2_val, !mcsema_real_eip !29 :          <2a2>	retq
536 :   store i1 %240, i1* %FPU_C2, align 1, !mcsema_real_eip !29 :          <2a2>	retq
537 :   %241 = load i1* %FPU_C1_val, !mcsema_real_eip !29 :          <2a2>	retq
538 :   store i1 %241, i1* %FPU_C1, align 1, !mcsema_real_eip !29 :          <2a2>	retq
539 :   %242 = load i1* %FPU_C0_val, !mcsema_real_eip !29 :          <2a2>	retq
540 :   store i1 %242, i1* %FPU_C0, align 1, !mcsema_real_eip !29 :          <2a2>	retq
541 :   %243 = load i1* %FPU_ES_val, !mcsema_real_eip !29 :          <2a2>	retq
542 :   store i1 %243, i1* %FPU_ES, align 1, !mcsema_real_eip !29 :          <2a2>	retq
543 :   %244 = load i1* %FPU_SF_val, !mcsema_real_eip !29 :          <2a2>	retq
544 :   store i1 %244, i1* %FPU_SF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
545 :   %245 = load i1* %FPU_PE_val, !mcsema_real_eip !29 :          <2a2>	retq
546 :   store i1 %245, i1* %FPU_PE, align 1, !mcsema_real_eip !29 :          <2a2>	retq
547 :   %246 = load i1* %FPU_UE_val, !mcsema_real_eip !29 :          <2a2>	retq
548 :   store i1 %246, i1* %FPU_UE, align 1, !mcsema_real_eip !29 :          <2a2>	retq
549 :   %247 = load i1* %FPU_OE_val, !mcsema_real_eip !29 :          <2a2>	retq
550 :   store i1 %247, i1* %FPU_OE, align 1, !mcsema_real_eip !29 :          <2a2>	retq
551 :   %248 = load i1* %FPU_ZE_val, !mcsema_real_eip !29 :          <2a2>	retq
552 :   store i1 %248, i1* %FPU_ZE, align 1, !mcsema_real_eip !29 :          <2a2>	retq
553 :   %249 = load i1* %FPU_DE_val, !mcsema_real_eip !29 :          <2a2>	retq
554 :   store i1 %249, i1* %FPU_DE, align 1, !mcsema_real_eip !29 :          <2a2>	retq
555 :   %250 = load i1* %FPU_IE_val, !mcsema_real_eip !29 :          <2a2>	retq
556 :   store i1 %250, i1* %FPU_IE, align 1, !mcsema_real_eip !29 :          <2a2>	retq
557 :   %251 = load i1* %FPU_X_val, !mcsema_real_eip !29 :          <2a2>	retq
558 :   store i1 %251, i1* %FPU_X, align 1, !mcsema_real_eip !29 :          <2a2>	retq
559 :   %252 = load i2* %FPU_RC_val, !mcsema_real_eip !29 :          <2a2>	retq
560 :   store i2 %252, i2* %FPU_RC, align 1, !mcsema_real_eip !29 :          <2a2>	retq
561 :   %253 = load i2* %FPU_PC_val, !mcsema_real_eip !29 :          <2a2>	retq
562 :   store i2 %253, i2* %FPU_PC, align 1, !mcsema_real_eip !29 :          <2a2>	retq
563 :   %254 = load i1* %FPU_PM_val, !mcsema_real_eip !29 :          <2a2>	retq
564 :   store i1 %254, i1* %FPU_PM, align 1, !mcsema_real_eip !29 :          <2a2>	retq
565 :   %255 = load i1* %FPU_UM_val, !mcsema_real_eip !29 :          <2a2>	retq
566 :   store i1 %255, i1* %FPU_UM, align 1, !mcsema_real_eip !29 :          <2a2>	retq
567 :   %256 = load i1* %FPU_OM_val, !mcsema_real_eip !29 :          <2a2>	retq
568 :   store i1 %256, i1* %FPU_OM, align 1, !mcsema_real_eip !29 :          <2a2>	retq
569 :   %257 = load i1* %FPU_ZM_val, !mcsema_real_eip !29 :          <2a2>	retq
570 :   store i1 %257, i1* %FPU_ZM, align 1, !mcsema_real_eip !29 :          <2a2>	retq
571 :   %258 = load i1* %FPU_DM_val, !mcsema_real_eip !29 :          <2a2>	retq
572 :   store i1 %258, i1* %FPU_DM, align 1, !mcsema_real_eip !29 :          <2a2>	retq
573 :   %259 = load i1* %FPU_IM_val, !mcsema_real_eip !29 :          <2a2>	retq
574 :   store i1 %259, i1* %FPU_IM, align 1, !mcsema_real_eip !29 :          <2a2>	retq

575 :   %260 = load i64* %53, align 4 : NIL
576 :   store i64 %260, i64* %52, align 4 : NIL

577 :   %261 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !29 :          <2a2>	retq
578 :   store i16 %261, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !29 :          <2a2>	retq
579 :   %262 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !29 :          <2a2>	retq
580 :   store i64 %262, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
581 :   %263 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !29 :          <2a2>	retq
582 :   store i16 %263, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !29 :          <2a2>	retq
583 :   %264 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !29 :          <2a2>	retq
584 :   store i64 %264, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
585 :   %265 = load i128* %XMM0_val, !mcsema_real_eip !29 :          <2a2>	retq
586 :   store i128 %265, i128* %XMM0, align 1, !mcsema_real_eip !29 :          <2a2>	retq
587 :   %266 = load i128* %XMM1_val, !mcsema_real_eip !29 :          <2a2>	retq
588 :   store i128 %266, i128* %XMM1, align 1, !mcsema_real_eip !29 :          <2a2>	retq
589 :   %267 = load i128* %XMM2_val, !mcsema_real_eip !29 :          <2a2>	retq
590 :   store i128 %267, i128* %XMM2, align 1, !mcsema_real_eip !29 :          <2a2>	retq
591 :   %268 = load i128* %XMM3_val, !mcsema_real_eip !29 :          <2a2>	retq
592 :   store i128 %268, i128* %XMM3, align 1, !mcsema_real_eip !29 :          <2a2>	retq
593 :   %269 = load i128* %XMM4_val, !mcsema_real_eip !29 :          <2a2>	retq
594 :   store i128 %269, i128* %XMM4, align 1, !mcsema_real_eip !29 :          <2a2>	retq
595 :   %270 = load i128* %XMM5_val, !mcsema_real_eip !29 :          <2a2>	retq
596 :   store i128 %270, i128* %XMM5, align 1, !mcsema_real_eip !29 :          <2a2>	retq
597 :   %271 = load i128* %XMM6_val, !mcsema_real_eip !29 :          <2a2>	retq
598 :   store i128 %271, i128* %XMM6, align 1, !mcsema_real_eip !29 :          <2a2>	retq
599 :   %272 = load i128* %XMM7_val, !mcsema_real_eip !29 :          <2a2>	retq
600 :   store i128 %272, i128* %XMM7, align 1, !mcsema_real_eip !29 :          <2a2>	retq
601 :   %273 = load i128* %XMM8_val, !mcsema_real_eip !29 :          <2a2>	retq
602 :   store i128 %273, i128* %XMM8, align 1, !mcsema_real_eip !29 :          <2a2>	retq
603 :   %274 = load i128* %XMM9_val, !mcsema_real_eip !29 :          <2a2>	retq
604 :   store i128 %274, i128* %XMM9, align 1, !mcsema_real_eip !29 :          <2a2>	retq
605 :   %275 = load i128* %XMM10_val, !mcsema_real_eip !29 :          <2a2>	retq
606 :   store i128 %275, i128* %XMM10, align 1, !mcsema_real_eip !29 :          <2a2>	retq
607 :   %276 = load i128* %XMM11_val, !mcsema_real_eip !29 :          <2a2>	retq
608 :   store i128 %276, i128* %XMM11, align 1, !mcsema_real_eip !29 :          <2a2>	retq
609 :   %277 = load i128* %XMM12_val, !mcsema_real_eip !29 :          <2a2>	retq
610 :   store i128 %277, i128* %XMM12, align 1, !mcsema_real_eip !29 :          <2a2>	retq
611 :   %278 = load i128* %XMM13_val, !mcsema_real_eip !29 :          <2a2>	retq
612 :   store i128 %278, i128* %XMM13, align 1, !mcsema_real_eip !29 :          <2a2>	retq
613 :   %279 = load i128* %XMM14_val, !mcsema_real_eip !29 :          <2a2>	retq
614 :   store i128 %279, i128* %XMM14, align 1, !mcsema_real_eip !29 :          <2a2>	retq
615 :   %280 = load i128* %XMM15_val, !mcsema_real_eip !29 :          <2a2>	retq
616 :   store i128 %280, i128* %XMM15, align 1, !mcsema_real_eip !29 :          <2a2>	retq
617 :   %281 = load i64* %STACK_BASE_val, !mcsema_real_eip !29 :          <2a2>	retq
618 :   store i64 %281, i64* %STACK_BASE, align 1, !mcsema_real_eip !29 :          <2a2>	retq
619 :   %282 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !29 :          <2a2>	retq
620 :   store i64 %282, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !29 :          <2a2>	retq
621 :   ret void, !mcsema_real_eip !29 :          <2a2>	retq

622 :   %283 = load i64* %RBP_val, !mcsema_real_eip !30 :          <92>	movq	-48(%rbp), %rax
623 :   %284 = add i64 %283, -48, !mcsema_real_eip !30 :          <92>	movq	-48(%rbp), %rax
624 :   %285 = inttoptr i64 %284 to i64*, !mcsema_real_eip !30 :          <92>	movq	-48(%rbp), %rax
625 :   %286 = load i64* %285, !mcsema_real_eip !30 :          <92>	movq	-48(%rbp), %rax
626 :   store i64 %286, i64* %RAX_val, !mcsema_real_eip !30 :          <92>	movq	-48(%rbp), %rax

627 :   %287 = shl i64 %286, 3 : NIL

628 :   %288 = add i64 %287, ptrtoint (%0* @data_0x2a3 to i64), !mcsema_real_eip !31 :          <96>	movq	(,%rax,8), %rcx
629 :   %289 = inttoptr i64 %288 to i64*, !mcsema_real_eip !31 :          <96>	movq	(,%rax,8), %rcx
630 :   %290 = load i64* %289, !mcsema_real_eip !31 :          <96>	movq	(,%rax,8), %rcx
631 :   store i64 %290, i64* %RCX_val, !mcsema_real_eip !31 :          <96>	movq	(,%rax,8), %rcx

632 :   store i64 %286, i64* %RAX, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
633 :   %291 = load i64* %RBX_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
634 :   store i64 %291, i64* %RBX, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
635 :   %292 = load i64* %RCX_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
636 :   store i64 %292, i64* %RCX, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
637 :   %293 = load i64* %RDX_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
638 :   store i64 %293, i64* %RDX, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
639 :   %294 = load i64* %RSI_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
640 :   store i64 %294, i64* %RSI, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
641 :   %295 = load i64* %RDI_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
642 :   store i64 %295, i64* %RDI, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
643 :   %296 = load i64* %RSP_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
644 :   store i64 %296, i64* %RSP, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
645 :   %297 = load i64* %RBP_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
646 :   store i64 %297, i64* %RBP, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
647 :   %298 = load i64* %R8_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
648 :   store i64 %298, i64* %R8, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
649 :   %299 = load i64* %R9_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
650 :   store i64 %299, i64* %R9, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
651 :   %300 = load i64* %R10_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
652 :   store i64 %300, i64* %R10, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
653 :   %301 = load i64* %R11_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
654 :   store i64 %301, i64* %R11, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
655 :   %302 = load i64* %R12_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
656 :   store i64 %302, i64* %R12, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
657 :   %303 = load i64* %R13_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
658 :   store i64 %303, i64* %R13, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
659 :   %304 = load i64* %R14_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
660 :   store i64 %304, i64* %R14, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
661 :   %305 = load i64* %R15_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
662 :   store i64 %305, i64* %R15, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
663 :   %306 = load i64* %RIP_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
664 :   store i64 %306, i64* %RIP, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
665 :   %307 = load i1* %CF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
666 :   store i1 %307, i1* %CF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
667 :   %308 = load i1* %PF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
668 :   store i1 %308, i1* %PF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
669 :   %309 = load i1* %AF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
670 :   store i1 %309, i1* %AF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
671 :   %310 = load i1* %ZF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
672 :   store i1 %310, i1* %ZF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
673 :   %311 = load i1* %SF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
674 :   store i1 %311, i1* %SF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
675 :   %312 = load i1* %OF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
676 :   store i1 %312, i1* %OF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
677 :   %313 = load i1* %DF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
678 :   store i1 %313, i1* %DF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
679 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
680 :   %314 = load i1* %FPU_B_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
681 :   store i1 %314, i1* %FPU_B, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
682 :   %315 = load i1* %FPU_C3_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
683 :   store i1 %315, i1* %FPU_C3, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
684 :   %316 = load i3* %FPU_TOP_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
685 :   store i3 %316, i3* %FPU_TOP, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
686 :   %317 = load i1* %FPU_C2_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
687 :   store i1 %317, i1* %FPU_C2, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
688 :   %318 = load i1* %FPU_C1_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
689 :   store i1 %318, i1* %FPU_C1, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
690 :   %319 = load i1* %FPU_C0_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
691 :   store i1 %319, i1* %FPU_C0, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
692 :   %320 = load i1* %FPU_ES_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
693 :   store i1 %320, i1* %FPU_ES, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
694 :   %321 = load i1* %FPU_SF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
695 :   store i1 %321, i1* %FPU_SF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
696 :   %322 = load i1* %FPU_PE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
697 :   store i1 %322, i1* %FPU_PE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
698 :   %323 = load i1* %FPU_UE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
699 :   store i1 %323, i1* %FPU_UE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
700 :   %324 = load i1* %FPU_OE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
701 :   store i1 %324, i1* %FPU_OE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
702 :   %325 = load i1* %FPU_ZE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
703 :   store i1 %325, i1* %FPU_ZE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
704 :   %326 = load i1* %FPU_DE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
705 :   store i1 %326, i1* %FPU_DE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
706 :   %327 = load i1* %FPU_IE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
707 :   store i1 %327, i1* %FPU_IE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
708 :   %328 = load i1* %FPU_X_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
709 :   store i1 %328, i1* %FPU_X, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
710 :   %329 = load i2* %FPU_RC_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
711 :   store i2 %329, i2* %FPU_RC, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
712 :   %330 = load i2* %FPU_PC_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
713 :   store i2 %330, i2* %FPU_PC, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
714 :   %331 = load i1* %FPU_PM_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
715 :   store i1 %331, i1* %FPU_PM, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
716 :   %332 = load i1* %FPU_UM_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
717 :   store i1 %332, i1* %FPU_UM, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
718 :   %333 = load i1* %FPU_OM_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
719 :   store i1 %333, i1* %FPU_OM, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
720 :   %334 = load i1* %FPU_ZM_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
721 :   store i1 %334, i1* %FPU_ZM, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
722 :   %335 = load i1* %FPU_DM_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
723 :   store i1 %335, i1* %FPU_DM, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
724 :   %336 = load i1* %FPU_IM_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
725 :   store i1 %336, i1* %FPU_IM, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx

726 :   %337 = load i64* %53, align 4 : NIL
727 :   store i64 %337, i64* %52, align 4 : NIL

728 :   %338 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
729 :   store i16 %338, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
730 :   %339 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
731 :   store i64 %339, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
732 :   %340 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
733 :   store i16 %340, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
734 :   %341 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
735 :   store i64 %341, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
736 :   %342 = load i128* %XMM0_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
737 :   store i128 %342, i128* %XMM0, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
738 :   %343 = load i128* %XMM1_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
739 :   store i128 %343, i128* %XMM1, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
740 :   %344 = load i128* %XMM2_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
741 :   store i128 %344, i128* %XMM2, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
742 :   %345 = load i128* %XMM3_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
743 :   store i128 %345, i128* %XMM3, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
744 :   %346 = load i128* %XMM4_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
745 :   store i128 %346, i128* %XMM4, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
746 :   %347 = load i128* %XMM5_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
747 :   store i128 %347, i128* %XMM5, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
748 :   %348 = load i128* %XMM6_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
749 :   store i128 %348, i128* %XMM6, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
750 :   %349 = load i128* %XMM7_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
751 :   store i128 %349, i128* %XMM7, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
752 :   %350 = load i128* %XMM8_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
753 :   store i128 %350, i128* %XMM8, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
754 :   %351 = load i128* %XMM9_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
755 :   store i128 %351, i128* %XMM9, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
756 :   %352 = load i128* %XMM10_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
757 :   store i128 %352, i128* %XMM10, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
758 :   %353 = load i128* %XMM11_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
759 :   store i128 %353, i128* %XMM11, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
760 :   %354 = load i128* %XMM12_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
761 :   store i128 %354, i128* %XMM12, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
762 :   %355 = load i128* %XMM13_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
763 :   store i128 %355, i128* %XMM13, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
764 :   %356 = load i128* %XMM14_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
765 :   store i128 %356, i128* %XMM14, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
766 :   %357 = load i128* %XMM15_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
767 :   store i128 %357, i128* %XMM15, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
768 :   %358 = load i64* %STACK_BASE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
769 :   store i64 %358, i64* %STACK_BASE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
770 :   %359 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
771 :   store i64 %359, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
772 :   tail call fastcc void @do_call_value(%struct.regs* %0, i64 %290), !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
773 :   %360 = load i64* %RAX, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
774 :   store i64 %360, i64* %RAX_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
775 :   %361 = load i64* %RBX, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
776 :   store i64 %361, i64* %RBX_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
777 :   %362 = load i64* %RCX, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
778 :   store i64 %362, i64* %RCX_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
779 :   %363 = load i64* %RDX, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
780 :   store i64 %363, i64* %RDX_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
781 :   %364 = load i64* %RSI, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
782 :   store i64 %364, i64* %RSI_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
783 :   %365 = load i64* %RDI, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
784 :   store i64 %365, i64* %RDI_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
785 :   %366 = load i64* %RSP, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
786 :   store i64 %366, i64* %RSP_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
787 :   %367 = load i64* %RBP, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
788 :   store i64 %367, i64* %RBP_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
789 :   %368 = load i64* %R8, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
790 :   store i64 %368, i64* %R8_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
791 :   %369 = load i64* %R9, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
792 :   store i64 %369, i64* %R9_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
793 :   %370 = load i64* %R10, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
794 :   store i64 %370, i64* %R10_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
795 :   %371 = load i64* %R11, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
796 :   store i64 %371, i64* %R11_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
797 :   %372 = load i64* %R12, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
798 :   store i64 %372, i64* %R12_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
799 :   %373 = load i64* %R13, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
800 :   store i64 %373, i64* %R13_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
801 :   %374 = load i64* %R14, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
802 :   store i64 %374, i64* %R14_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
803 :   %375 = load i64* %R15, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
804 :   store i64 %375, i64* %R15_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
805 :   %376 = load i64* %RIP, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
806 :   store i64 %376, i64* %RIP_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
807 :   %377 = load i1* %CF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
808 :   store i1 %377, i1* %CF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
809 :   %378 = load i1* %PF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
810 :   store i1 %378, i1* %PF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
811 :   %379 = load i1* %AF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
812 :   store i1 %379, i1* %AF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
813 :   %380 = load i1* %ZF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
814 :   store i1 %380, i1* %ZF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
815 :   %381 = load i1* %SF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
816 :   store i1 %381, i1* %SF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
817 :   %382 = load i1* %OF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
818 :   store i1 %382, i1* %OF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
819 :   %383 = load i1* %DF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
820 :   store i1 %383, i1* %DF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
821 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
822 :   %384 = load i1* %FPU_B, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
823 :   store i1 %384, i1* %FPU_B_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
824 :   %385 = load i1* %FPU_C3, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
825 :   store i1 %385, i1* %FPU_C3_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
826 :   %386 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
827 :   store i3 %386, i3* %FPU_TOP_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
828 :   %387 = load i1* %FPU_C2, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
829 :   store i1 %387, i1* %FPU_C2_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
830 :   %388 = load i1* %FPU_C1, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
831 :   store i1 %388, i1* %FPU_C1_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
832 :   %389 = load i1* %FPU_C0, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
833 :   store i1 %389, i1* %FPU_C0_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
834 :   %390 = load i1* %FPU_ES, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
835 :   store i1 %390, i1* %FPU_ES_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
836 :   %391 = load i1* %FPU_SF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
837 :   store i1 %391, i1* %FPU_SF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
838 :   %392 = load i1* %FPU_PE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
839 :   store i1 %392, i1* %FPU_PE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
840 :   %393 = load i1* %FPU_UE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
841 :   store i1 %393, i1* %FPU_UE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
842 :   %394 = load i1* %FPU_OE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
843 :   store i1 %394, i1* %FPU_OE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
844 :   %395 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
845 :   store i1 %395, i1* %FPU_ZE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
846 :   %396 = load i1* %FPU_DE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
847 :   store i1 %396, i1* %FPU_DE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
848 :   %397 = load i1* %FPU_IE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
849 :   store i1 %397, i1* %FPU_IE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
850 :   %398 = load i1* %FPU_X, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
851 :   store i1 %398, i1* %FPU_X_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
852 :   %399 = load i2* %FPU_RC, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
853 :   store i2 %399, i2* %FPU_RC_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
854 :   %400 = load i2* %FPU_PC, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
855 :   store i2 %400, i2* %FPU_PC_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
856 :   %401 = load i1* %FPU_PM, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
857 :   store i1 %401, i1* %FPU_PM_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
858 :   %402 = load i1* %FPU_UM, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
859 :   store i1 %402, i1* %FPU_UM_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
860 :   %403 = load i1* %FPU_OM, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
861 :   store i1 %403, i1* %FPU_OM_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
862 :   %404 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
863 :   store i1 %404, i1* %FPU_ZM_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
864 :   %405 = load i1* %FPU_DM, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
865 :   store i1 %405, i1* %FPU_DM_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
866 :   %406 = load i1* %FPU_IM, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
867 :   store i1 %406, i1* %FPU_IM_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx

868 :   %407 = load i64* %52, align 4 : NIL
869 :   store i64 %407, i64* %53, align 4 : NIL

870 :   %408 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
871 :   store i16 %408, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
872 :   %409 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
873 :   store i64 %409, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
874 :   %410 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
875 :   store i16 %410, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
876 :   %411 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
877 :   store i64 %411, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
878 :   %412 = load i128* %XMM0, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
879 :   store i128 %412, i128* %XMM0_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
880 :   %413 = load i128* %XMM1, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
881 :   store i128 %413, i128* %XMM1_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
882 :   %414 = load i128* %XMM2, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
883 :   store i128 %414, i128* %XMM2_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
884 :   %415 = load i128* %XMM3, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
885 :   store i128 %415, i128* %XMM3_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
886 :   %416 = load i128* %XMM4, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
887 :   store i128 %416, i128* %XMM4_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
888 :   %417 = load i128* %XMM5, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
889 :   store i128 %417, i128* %XMM5_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
890 :   %418 = load i128* %XMM6, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
891 :   store i128 %418, i128* %XMM6_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
892 :   %419 = load i128* %XMM7, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
893 :   store i128 %419, i128* %XMM7_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
894 :   %420 = load i128* %XMM8, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
895 :   store i128 %420, i128* %XMM8_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
896 :   %421 = load i128* %XMM9, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
897 :   store i128 %421, i128* %XMM9_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
898 :   %422 = load i128* %XMM10, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
899 :   store i128 %422, i128* %XMM10_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
900 :   %423 = load i128* %XMM11, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
901 :   store i128 %423, i128* %XMM11_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
902 :   %424 = load i128* %XMM12, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
903 :   store i128 %424, i128* %XMM12_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
904 :   %425 = load i128* %XMM13, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
905 :   store i128 %425, i128* %XMM13_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
906 :   %426 = load i128* %XMM14, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
907 :   store i128 %426, i128* %XMM14_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
908 :   %427 = load i128* %XMM15, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
909 :   store i128 %427, i128* %XMM15_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
910 :   %428 = load i64* %STACK_BASE, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
911 :   store i64 %428, i64* %STACK_BASE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
912 :   %429 = load i64* %STACK_LIMIT, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
913 :   store i64 %429, i64* %STACK_LIMIT_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
914 :   %430 = load i64* %RSP_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
915 :   %431 = add i64 %430, 8, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
916 :   store i64 %431, i64* %RSP_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
917 :   %432 = load i64* %RAX_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
918 :   store i64 %432, i64* %RAX, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
919 :   %433 = load i64* %RBX_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
920 :   store i64 %433, i64* %RBX, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
921 :   %434 = load i64* %RCX_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
922 :   store i64 %434, i64* %RCX, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
923 :   %435 = load i64* %RDX_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
924 :   store i64 %435, i64* %RDX, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
925 :   %436 = load i64* %RSI_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
926 :   store i64 %436, i64* %RSI, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
927 :   %437 = load i64* %RDI_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
928 :   store i64 %437, i64* %RDI, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
929 :   %438 = load i64* %RSP_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
930 :   store i64 %438, i64* %RSP, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
931 :   %439 = load i64* %RBP_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
932 :   store i64 %439, i64* %RBP, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
933 :   %440 = load i64* %R8_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
934 :   store i64 %440, i64* %R8, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
935 :   %441 = load i64* %R9_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
936 :   store i64 %441, i64* %R9, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
937 :   %442 = load i64* %R10_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
938 :   store i64 %442, i64* %R10, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
939 :   %443 = load i64* %R11_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
940 :   store i64 %443, i64* %R11, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
941 :   %444 = load i64* %R12_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
942 :   store i64 %444, i64* %R12, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
943 :   %445 = load i64* %R13_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
944 :   store i64 %445, i64* %R13, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
945 :   %446 = load i64* %R14_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
946 :   store i64 %446, i64* %R14, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
947 :   %447 = load i64* %R15_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
948 :   store i64 %447, i64* %R15, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
949 :   %448 = load i64* %RIP_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
950 :   store i64 %448, i64* %RIP, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
951 :   %449 = load i1* %CF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
952 :   store i1 %449, i1* %CF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
953 :   %450 = load i1* %PF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
954 :   store i1 %450, i1* %PF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
955 :   %451 = load i1* %AF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
956 :   store i1 %451, i1* %AF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
957 :   %452 = load i1* %ZF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
958 :   store i1 %452, i1* %ZF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
959 :   %453 = load i1* %SF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
960 :   store i1 %453, i1* %SF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
961 :   %454 = load i1* %OF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
962 :   store i1 %454, i1* %OF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
963 :   %455 = load i1* %DF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
964 :   store i1 %455, i1* %DF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
965 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
966 :   %456 = load i1* %FPU_B_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
967 :   store i1 %456, i1* %FPU_B, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
968 :   %457 = load i1* %FPU_C3_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
969 :   store i1 %457, i1* %FPU_C3, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
970 :   %458 = load i3* %FPU_TOP_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
971 :   store i3 %458, i3* %FPU_TOP, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
972 :   %459 = load i1* %FPU_C2_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
973 :   store i1 %459, i1* %FPU_C2, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
974 :   %460 = load i1* %FPU_C1_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
975 :   store i1 %460, i1* %FPU_C1, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
976 :   %461 = load i1* %FPU_C0_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
977 :   store i1 %461, i1* %FPU_C0, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
978 :   %462 = load i1* %FPU_ES_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
979 :   store i1 %462, i1* %FPU_ES, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
980 :   %463 = load i1* %FPU_SF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
981 :   store i1 %463, i1* %FPU_SF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
982 :   %464 = load i1* %FPU_PE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
983 :   store i1 %464, i1* %FPU_PE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
984 :   %465 = load i1* %FPU_UE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
985 :   store i1 %465, i1* %FPU_UE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
986 :   %466 = load i1* %FPU_OE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
987 :   store i1 %466, i1* %FPU_OE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
988 :   %467 = load i1* %FPU_ZE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
989 :   store i1 %467, i1* %FPU_ZE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
990 :   %468 = load i1* %FPU_DE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
991 :   store i1 %468, i1* %FPU_DE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
992 :   %469 = load i1* %FPU_IE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
993 :   store i1 %469, i1* %FPU_IE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
994 :   %470 = load i1* %FPU_X_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
995 :   store i1 %470, i1* %FPU_X, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
996 :   %471 = load i2* %FPU_RC_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
997 :   store i2 %471, i2* %FPU_RC, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
998 :   %472 = load i2* %FPU_PC_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
999 :   store i2 %472, i2* %FPU_PC, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1000 :   %473 = load i1* %FPU_PM_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1001 :   store i1 %473, i1* %FPU_PM, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1002 :   %474 = load i1* %FPU_UM_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1003 :   store i1 %474, i1* %FPU_UM, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1004 :   %475 = load i1* %FPU_OM_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1005 :   store i1 %475, i1* %FPU_OM, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1006 :   %476 = load i1* %FPU_ZM_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1007 :   store i1 %476, i1* %FPU_ZM, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1008 :   %477 = load i1* %FPU_DM_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1009 :   store i1 %477, i1* %FPU_DM, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1010 :   %478 = load i1* %FPU_IM_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1011 :   store i1 %478, i1* %FPU_IM, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx

1012 :   %479 = load i64* %53, align 4 : NIL
1013 :   store i64 %479, i64* %52, align 4 : NIL

1014 :   %480 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1015 :   store i16 %480, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1016 :   %481 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1017 :   store i64 %481, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1018 :   %482 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1019 :   store i16 %482, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1020 :   %483 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1021 :   store i64 %483, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1022 :   %484 = load i128* %XMM0_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1023 :   store i128 %484, i128* %XMM0, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1024 :   %485 = load i128* %XMM1_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1025 :   store i128 %485, i128* %XMM1, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1026 :   %486 = load i128* %XMM2_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1027 :   store i128 %486, i128* %XMM2, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1028 :   %487 = load i128* %XMM3_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1029 :   store i128 %487, i128* %XMM3, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1030 :   %488 = load i128* %XMM4_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1031 :   store i128 %488, i128* %XMM4, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1032 :   %489 = load i128* %XMM5_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1033 :   store i128 %489, i128* %XMM5, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1034 :   %490 = load i128* %XMM6_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1035 :   store i128 %490, i128* %XMM6, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1036 :   %491 = load i128* %XMM7_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1037 :   store i128 %491, i128* %XMM7, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1038 :   %492 = load i128* %XMM8_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1039 :   store i128 %492, i128* %XMM8, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1040 :   %493 = load i128* %XMM9_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1041 :   store i128 %493, i128* %XMM9, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1042 :   %494 = load i128* %XMM10_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1043 :   store i128 %494, i128* %XMM10, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1044 :   %495 = load i128* %XMM11_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1045 :   store i128 %495, i128* %XMM11, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1046 :   %496 = load i128* %XMM12_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1047 :   store i128 %496, i128* %XMM12, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1048 :   %497 = load i128* %XMM13_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1049 :   store i128 %497, i128* %XMM13, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1050 :   %498 = load i128* %XMM14_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1051 :   store i128 %498, i128* %XMM14, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1052 :   %499 = load i128* %XMM15_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1053 :   store i128 %499, i128* %XMM15, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1054 :   %500 = load i64* %STACK_BASE_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1055 :   store i64 %500, i64* %STACK_BASE, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1056 :   %501 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1057 :   store i64 %501, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx
1058 :   ret void, !mcsema_real_eip !32 :          <9e>	jmpq	*%rcx

1059 :   %502 = add i32 %178, -255 : NIL

1060 :   %503 = xor i32 %502, %178, !mcsema_real_eip !33 :          <65>	subl	$255, %eax

1061 :   %504 = and i32 %503, 16 : NIL
1062 :   %505 = icmp eq i32 %504, 0 : NIL

1063 :   store i1 %505, i1* %AF_val, !mcsema_real_eip !33 :          <65>	subl	$255, %eax
1064 :   %506 = trunc i32 %502 to i8, !mcsema_real_eip !33 :          <65>	subl	$255, %eax
1065 :   %507 = tail call i8 @llvm.ctpop.i8(i8 %506), !mcsema_real_eip !33 :          <65>	subl	$255, %eax

1066 :   %508 = and i8 %507, 1 : NIL
1067 :   %509 = icmp eq i8 %508, 0 : NIL

1068 :   store i1 %509, i1* %PF_val, !mcsema_real_eip !33 :          <65>	subl	$255, %eax
1069 :   %510 = icmp eq i32 %502, 0, !mcsema_real_eip !33 :          <65>	subl	$255, %eax
1070 :   store i1 %510, i1* %ZF_val, !mcsema_real_eip !33 :          <65>	subl	$255, %eax

1071 :   %511 = icmp slt i32 %502, 0 : NIL

1072 :   store i1 %511, i1* %SF_val, !mcsema_real_eip !33 :          <65>	subl	$255, %eax
1073 :   %512 = icmp ult i32 %178, 255, !mcsema_real_eip !33 :          <65>	subl	$255, %eax
1074 :   store i1 %512, i1* %CF_val, !mcsema_real_eip !33 :          <65>	subl	$255, %eax
1075 :   %513 = and i32 %503, %178, !mcsema_real_eip !33 :          <65>	subl	$255, %eax

1076 :   %514 = icmp slt i32 %513, 0 : NIL

1077 :   store i1 %514, i1* %OF_val, !mcsema_real_eip !33 :          <65>	subl	$255, %eax
1078 :   %515 = zext i32 %502 to i64, !mcsema_real_eip !33 :          <65>	subl	$255, %eax
1079 :   store i64 %515, i64* %RAX_val, !mcsema_real_eip !33 :          <65>	subl	$255, %eax

1080 :   %516 = load i64* %RBP_val, !mcsema_real_eip !34 :          <6a>	movl	%eax, -36(%rbp)
1081 :   %517 = add i64 %516, -36, !mcsema_real_eip !34 :          <6a>	movl	%eax, -36(%rbp)
1082 :   %518 = inttoptr i64 %517 to i64*, !mcsema_real_eip !34 :          <6a>	movl	%eax, -36(%rbp)

1083 :   %519 = bitcast i64* %518 to i32* : NIL

1084 :   store i32 %502, i32* %519, !mcsema_real_eip !34 :          <6a>	movl	%eax, -36(%rbp)

1085 :   %520 = load i1* %ZF_val, !mcsema_real_eip !35 :          <6d>	je	245
1086 :   br i1 %520, label %block_0x168, label %block_0x27b, !mcsema_real_eip !35 :          <6d>	je	245

1087 :   store i64 %179, i64* %RCX_val, !mcsema_real_eip !36 :          <40>	movl	%eax, %ecx

1088 :   store i64 %179, i64* %RDX_val, !mcsema_real_eip !37 :          <42>	movl	%ecx, %edx

1089 :   %521 = load i64* %RAX_val, !mcsema_real_eip !38 :          <44>	subl	$19, %eax
1090 :   %522 = trunc i64 %521 to i32, !mcsema_real_eip !38 :          <44>	subl	$19, %eax

1091 :   %523 = add i32 %522, -19 : NIL

1092 :   %524 = xor i32 %523, %522, !mcsema_real_eip !38 :          <44>	subl	$19, %eax

1093 :   %525 = and i32 %524, 16 : NIL
1094 :   %526 = icmp eq i32 %525, 0 : NIL

1095 :   store i1 %526, i1* %AF_val, !mcsema_real_eip !38 :          <44>	subl	$19, %eax
1096 :   %527 = trunc i32 %523 to i8, !mcsema_real_eip !38 :          <44>	subl	$19, %eax
1097 :   %528 = tail call i8 @llvm.ctpop.i8(i8 %527), !mcsema_real_eip !38 :          <44>	subl	$19, %eax

1098 :   %529 = and i8 %528, 1 : NIL
1099 :   %530 = icmp eq i8 %529, 0 : NIL

1100 :   store i1 %530, i1* %PF_val, !mcsema_real_eip !38 :          <44>	subl	$19, %eax
1101 :   %531 = icmp eq i32 %523, 0, !mcsema_real_eip !38 :          <44>	subl	$19, %eax
1102 :   store i1 %531, i1* %ZF_val, !mcsema_real_eip !38 :          <44>	subl	$19, %eax

1103 :   %532 = icmp slt i32 %523, 0 : NIL

1104 :   store i1 %532, i1* %SF_val, !mcsema_real_eip !38 :          <44>	subl	$19, %eax
1105 :   %533 = icmp ult i32 %522, 19, !mcsema_real_eip !38 :          <44>	subl	$19, %eax
1106 :   store i1 %533, i1* %CF_val, !mcsema_real_eip !38 :          <44>	subl	$19, %eax
1107 :   %534 = and i32 %524, %522, !mcsema_real_eip !38 :          <44>	subl	$19, %eax

1108 :   %535 = icmp slt i32 %534, 0 : NIL

1109 :   store i1 %535, i1* %OF_val, !mcsema_real_eip !38 :          <44>	subl	$19, %eax
1110 :   %536 = zext i32 %523 to i64, !mcsema_real_eip !38 :          <44>	subl	$19, %eax
1111 :   store i64 %536, i64* %RAX_val, !mcsema_real_eip !38 :          <44>	subl	$19, %eax

1112 :   %537 = load i64* %RBP_val, !mcsema_real_eip !39 :          <47>	movl	%eax, -20(%rbp)
1113 :   %538 = add i64 %537, -20, !mcsema_real_eip !39 :          <47>	movl	%eax, -20(%rbp)
1114 :   %539 = inttoptr i64 %538 to i64*, !mcsema_real_eip !39 :          <47>	movl	%eax, -20(%rbp)

1115 :   %540 = bitcast i64* %539 to i32* : NIL

1116 :   store i32 %523, i32* %540, !mcsema_real_eip !39 :          <47>	movl	%eax, -20(%rbp)

1117 :   %541 = load i64* %RBP_val, !mcsema_real_eip !40 :          <4a>	movq	%rdx, -32(%rbp)
1118 :   %542 = add i64 %541, -32, !mcsema_real_eip !40 :          <4a>	movq	%rdx, -32(%rbp)
1119 :   %543 = inttoptr i64 %542 to i64*, !mcsema_real_eip !40 :          <4a>	movq	%rdx, -32(%rbp)
1120 :   %544 = load i64* %RDX_val, !mcsema_real_eip !40 :          <4a>	movq	%rdx, -32(%rbp)
1121 :   store i64 %544, i64* %543, !mcsema_real_eip !40 :          <4a>	movq	%rdx, -32(%rbp)

1122 :   %545 = load i1* %ZF_val, !mcsema_real_eip !41 :          <4e>	ja	551
1123 :   %546 = load i1* %CF_val, !mcsema_real_eip !41 :          <4e>	ja	551

1124 :   %.demorgan561 = or i1 %546, %545 : NIL

1125 :   br i1 %.demorgan561, label %block_0x54, label %block_0x27b, !mcsema_real_eip !41 :          <4e>	ja	551

1126 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 135), i64* %RDI_val, !mcsema_real_eip !42 :          <168>	movabsq	$0, %rdi

1127 :   %547 = load i64* %RSI_val, !mcsema_real_eip !43 :          <174>	callq	0
1128 :   %548 = load i64* %RDX_val, !mcsema_real_eip !43 :          <174>	callq	0
1129 :   %549 = load i64* %RCX_val, !mcsema_real_eip !43 :          <174>	callq	0
1130 :   %550 = tail call x86_64_sysvcc i64 @printf(i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 135), i64 %547, i64 %548, i64 %549), !mcsema_real_eip !43 :          <174>	callq	0

1131 :   %551 = load i64* %RBP_val, !mcsema_real_eip !44 :          <179>	movl	%eax, -88(%rbp)
1132 :   %552 = add i64 %551, -88, !mcsema_real_eip !44 :          <179>	movl	%eax, -88(%rbp)
1133 :   %553 = inttoptr i64 %552 to i64*, !mcsema_real_eip !44 :          <179>	movl	%eax, -88(%rbp)
1134 :   %554 = trunc i64 %550 to i32, !mcsema_real_eip !44 :          <179>	movl	%eax, -88(%rbp)

1135 :   %555 = bitcast i64* %553 to i32* : NIL

1136 :   store i32 %554, i32* %555, !mcsema_real_eip !44 :          <179>	movl	%eax, -88(%rbp)

1137 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !26 :          <295>	movl	$0, %eax

1138 :   %556 = load i64* %RSP_val, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp

1139 :   %uadd562 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %556, i64 144) : NIL
1140 :   %557 = extractvalue { i64, i1 } %uadd562, 0 : NIL

1141 :   %558 = xor i64 %557, %556, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp

1142 :   %559 = and i64 %558, 16 : NIL
1143 :   %560 = icmp eq i64 %559, 0 : NIL

1144 :   store i1 %560, i1* %AF_val, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp

1145 :   %561 = icmp slt i64 %557, 0 : NIL

1146 :   store i1 %561, i1* %SF_val, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp
1147 :   %562 = icmp eq i64 %557, 0, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp
1148 :   store i1 %562, i1* %ZF_val, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp
1149 :   %563 = xor i64 %556, -9223372036854775808, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp
1150 :   %564 = and i64 %558, %563, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp

1151 :   %565 = icmp slt i64 %564, 0 : NIL

1152 :   store i1 %565, i1* %OF_val, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp
1153 :   %566 = trunc i64 %557 to i8, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp
1154 :   %567 = tail call i8 @llvm.ctpop.i8(i8 %566), !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp

1155 :   %568 = and i8 %567, 1 : NIL
1156 :   %569 = icmp eq i8 %568, 0 : NIL

1157 :   store i1 %569, i1* %PF_val, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp

1158 :   %570 = extractvalue { i64, i1 } %uadd562, 1 : NIL

1159 :   store i1 %570, i1* %CF_val, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp
1160 :   store i64 %557, i64* %RSP_val, !mcsema_real_eip !27 :          <29a>	addq	$144, %rsp

1161 :   %571 = inttoptr i64 %557 to i64*, !mcsema_real_eip !28 :          <2a1>	popq	%rbp
1162 :   %572 = load i64* %571, !mcsema_real_eip !28 :          <2a1>	popq	%rbp
1163 :   store i64 %572, i64* %RBP_val, !mcsema_real_eip !28 :          <2a1>	popq	%rbp

1164 :   %573 = add i64 %557, 16, !mcsema_real_eip !29 :          <2a2>	retq
1165 :   store i64 %573, i64* %RSP_val, !mcsema_real_eip !29 :          <2a2>	retq
1166 :   %574 = load i64* %RAX_val, !mcsema_real_eip !29 :          <2a2>	retq
1167 :   store i64 %574, i64* %RAX, !mcsema_real_eip !29 :          <2a2>	retq
1168 :   %575 = load i64* %RBX_val, !mcsema_real_eip !29 :          <2a2>	retq
1169 :   store i64 %575, i64* %RBX, !mcsema_real_eip !29 :          <2a2>	retq
1170 :   %576 = load i64* %RCX_val, !mcsema_real_eip !29 :          <2a2>	retq
1171 :   store i64 %576, i64* %RCX, !mcsema_real_eip !29 :          <2a2>	retq
1172 :   %577 = load i64* %RDX_val, !mcsema_real_eip !29 :          <2a2>	retq
1173 :   store i64 %577, i64* %RDX, !mcsema_real_eip !29 :          <2a2>	retq
1174 :   %578 = load i64* %RSI_val, !mcsema_real_eip !29 :          <2a2>	retq
1175 :   store i64 %578, i64* %RSI, !mcsema_real_eip !29 :          <2a2>	retq
1176 :   %579 = load i64* %RDI_val, !mcsema_real_eip !29 :          <2a2>	retq
1177 :   store i64 %579, i64* %RDI, !mcsema_real_eip !29 :          <2a2>	retq
1178 :   %580 = load i64* %RSP_val, !mcsema_real_eip !29 :          <2a2>	retq
1179 :   store i64 %580, i64* %RSP, !mcsema_real_eip !29 :          <2a2>	retq
1180 :   %581 = load i64* %RBP_val, !mcsema_real_eip !29 :          <2a2>	retq
1181 :   store i64 %581, i64* %RBP, !mcsema_real_eip !29 :          <2a2>	retq
1182 :   %582 = load i64* %R8_val, !mcsema_real_eip !29 :          <2a2>	retq
1183 :   store i64 %582, i64* %R8, !mcsema_real_eip !29 :          <2a2>	retq
1184 :   %583 = load i64* %R9_val, !mcsema_real_eip !29 :          <2a2>	retq
1185 :   store i64 %583, i64* %R9, !mcsema_real_eip !29 :          <2a2>	retq
1186 :   %584 = load i64* %R10_val, !mcsema_real_eip !29 :          <2a2>	retq
1187 :   store i64 %584, i64* %R10, !mcsema_real_eip !29 :          <2a2>	retq
1188 :   %585 = load i64* %R11_val, !mcsema_real_eip !29 :          <2a2>	retq
1189 :   store i64 %585, i64* %R11, !mcsema_real_eip !29 :          <2a2>	retq
1190 :   %586 = load i64* %R12_val, !mcsema_real_eip !29 :          <2a2>	retq
1191 :   store i64 %586, i64* %R12, !mcsema_real_eip !29 :          <2a2>	retq
1192 :   %587 = load i64* %R13_val, !mcsema_real_eip !29 :          <2a2>	retq
1193 :   store i64 %587, i64* %R13, !mcsema_real_eip !29 :          <2a2>	retq
1194 :   %588 = load i64* %R14_val, !mcsema_real_eip !29 :          <2a2>	retq
1195 :   store i64 %588, i64* %R14, !mcsema_real_eip !29 :          <2a2>	retq
1196 :   %589 = load i64* %R15_val, !mcsema_real_eip !29 :          <2a2>	retq
1197 :   store i64 %589, i64* %R15, !mcsema_real_eip !29 :          <2a2>	retq
1198 :   %590 = load i64* %RIP_val, !mcsema_real_eip !29 :          <2a2>	retq
1199 :   store i64 %590, i64* %RIP, !mcsema_real_eip !29 :          <2a2>	retq
1200 :   %591 = load i1* %CF_val, !mcsema_real_eip !29 :          <2a2>	retq
1201 :   store i1 %591, i1* %CF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1202 :   %592 = load i1* %PF_val, !mcsema_real_eip !29 :          <2a2>	retq
1203 :   store i1 %592, i1* %PF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1204 :   %593 = load i1* %AF_val, !mcsema_real_eip !29 :          <2a2>	retq
1205 :   store i1 %593, i1* %AF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1206 :   %594 = load i1* %ZF_val, !mcsema_real_eip !29 :          <2a2>	retq
1207 :   store i1 %594, i1* %ZF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1208 :   %595 = load i1* %SF_val, !mcsema_real_eip !29 :          <2a2>	retq
1209 :   store i1 %595, i1* %SF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1210 :   %596 = load i1* %OF_val, !mcsema_real_eip !29 :          <2a2>	retq
1211 :   store i1 %596, i1* %OF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1212 :   %597 = load i1* %DF_val, !mcsema_real_eip !29 :          <2a2>	retq
1213 :   store i1 %597, i1* %DF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1214 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !29 :          <2a2>	retq
1215 :   %598 = load i1* %FPU_B_val, !mcsema_real_eip !29 :          <2a2>	retq
1216 :   store i1 %598, i1* %FPU_B, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1217 :   %599 = load i1* %FPU_C3_val, !mcsema_real_eip !29 :          <2a2>	retq
1218 :   store i1 %599, i1* %FPU_C3, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1219 :   %600 = load i3* %FPU_TOP_val, !mcsema_real_eip !29 :          <2a2>	retq
1220 :   store i3 %600, i3* %FPU_TOP, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1221 :   %601 = load i1* %FPU_C2_val, !mcsema_real_eip !29 :          <2a2>	retq
1222 :   store i1 %601, i1* %FPU_C2, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1223 :   %602 = load i1* %FPU_C1_val, !mcsema_real_eip !29 :          <2a2>	retq
1224 :   store i1 %602, i1* %FPU_C1, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1225 :   %603 = load i1* %FPU_C0_val, !mcsema_real_eip !29 :          <2a2>	retq
1226 :   store i1 %603, i1* %FPU_C0, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1227 :   %604 = load i1* %FPU_ES_val, !mcsema_real_eip !29 :          <2a2>	retq
1228 :   store i1 %604, i1* %FPU_ES, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1229 :   %605 = load i1* %FPU_SF_val, !mcsema_real_eip !29 :          <2a2>	retq
1230 :   store i1 %605, i1* %FPU_SF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1231 :   %606 = load i1* %FPU_PE_val, !mcsema_real_eip !29 :          <2a2>	retq
1232 :   store i1 %606, i1* %FPU_PE, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1233 :   %607 = load i1* %FPU_UE_val, !mcsema_real_eip !29 :          <2a2>	retq
1234 :   store i1 %607, i1* %FPU_UE, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1235 :   %608 = load i1* %FPU_OE_val, !mcsema_real_eip !29 :          <2a2>	retq
1236 :   store i1 %608, i1* %FPU_OE, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1237 :   %609 = load i1* %FPU_ZE_val, !mcsema_real_eip !29 :          <2a2>	retq
1238 :   store i1 %609, i1* %FPU_ZE, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1239 :   %610 = load i1* %FPU_DE_val, !mcsema_real_eip !29 :          <2a2>	retq
1240 :   store i1 %610, i1* %FPU_DE, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1241 :   %611 = load i1* %FPU_IE_val, !mcsema_real_eip !29 :          <2a2>	retq
1242 :   store i1 %611, i1* %FPU_IE, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1243 :   %612 = load i1* %FPU_X_val, !mcsema_real_eip !29 :          <2a2>	retq
1244 :   store i1 %612, i1* %FPU_X, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1245 :   %613 = load i2* %FPU_RC_val, !mcsema_real_eip !29 :          <2a2>	retq
1246 :   store i2 %613, i2* %FPU_RC, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1247 :   %614 = load i2* %FPU_PC_val, !mcsema_real_eip !29 :          <2a2>	retq
1248 :   store i2 %614, i2* %FPU_PC, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1249 :   %615 = load i1* %FPU_PM_val, !mcsema_real_eip !29 :          <2a2>	retq
1250 :   store i1 %615, i1* %FPU_PM, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1251 :   %616 = load i1* %FPU_UM_val, !mcsema_real_eip !29 :          <2a2>	retq
1252 :   store i1 %616, i1* %FPU_UM, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1253 :   %617 = load i1* %FPU_OM_val, !mcsema_real_eip !29 :          <2a2>	retq
1254 :   store i1 %617, i1* %FPU_OM, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1255 :   %618 = load i1* %FPU_ZM_val, !mcsema_real_eip !29 :          <2a2>	retq
1256 :   store i1 %618, i1* %FPU_ZM, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1257 :   %619 = load i1* %FPU_DM_val, !mcsema_real_eip !29 :          <2a2>	retq
1258 :   store i1 %619, i1* %FPU_DM, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1259 :   %620 = load i1* %FPU_IM_val, !mcsema_real_eip !29 :          <2a2>	retq
1260 :   store i1 %620, i1* %FPU_IM, align 1, !mcsema_real_eip !29 :          <2a2>	retq

1261 :   %621 = load i64* %53, align 4 : NIL
1262 :   store i64 %621, i64* %52, align 4 : NIL

1263 :   %622 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !29 :          <2a2>	retq
1264 :   store i16 %622, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1265 :   %623 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !29 :          <2a2>	retq
1266 :   store i64 %623, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1267 :   %624 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !29 :          <2a2>	retq
1268 :   store i16 %624, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1269 :   %625 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !29 :          <2a2>	retq
1270 :   store i64 %625, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1271 :   %626 = load i128* %XMM0_val, !mcsema_real_eip !29 :          <2a2>	retq
1272 :   store i128 %626, i128* %XMM0, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1273 :   %627 = load i128* %XMM1_val, !mcsema_real_eip !29 :          <2a2>	retq
1274 :   store i128 %627, i128* %XMM1, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1275 :   %628 = load i128* %XMM2_val, !mcsema_real_eip !29 :          <2a2>	retq
1276 :   store i128 %628, i128* %XMM2, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1277 :   %629 = load i128* %XMM3_val, !mcsema_real_eip !29 :          <2a2>	retq
1278 :   store i128 %629, i128* %XMM3, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1279 :   %630 = load i128* %XMM4_val, !mcsema_real_eip !29 :          <2a2>	retq
1280 :   store i128 %630, i128* %XMM4, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1281 :   %631 = load i128* %XMM5_val, !mcsema_real_eip !29 :          <2a2>	retq
1282 :   store i128 %631, i128* %XMM5, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1283 :   %632 = load i128* %XMM6_val, !mcsema_real_eip !29 :          <2a2>	retq
1284 :   store i128 %632, i128* %XMM6, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1285 :   %633 = load i128* %XMM7_val, !mcsema_real_eip !29 :          <2a2>	retq
1286 :   store i128 %633, i128* %XMM7, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1287 :   %634 = load i128* %XMM8_val, !mcsema_real_eip !29 :          <2a2>	retq
1288 :   store i128 %634, i128* %XMM8, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1289 :   %635 = load i128* %XMM9_val, !mcsema_real_eip !29 :          <2a2>	retq
1290 :   store i128 %635, i128* %XMM9, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1291 :   %636 = load i128* %XMM10_val, !mcsema_real_eip !29 :          <2a2>	retq
1292 :   store i128 %636, i128* %XMM10, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1293 :   %637 = load i128* %XMM11_val, !mcsema_real_eip !29 :          <2a2>	retq
1294 :   store i128 %637, i128* %XMM11, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1295 :   %638 = load i128* %XMM12_val, !mcsema_real_eip !29 :          <2a2>	retq
1296 :   store i128 %638, i128* %XMM12, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1297 :   %639 = load i128* %XMM13_val, !mcsema_real_eip !29 :          <2a2>	retq
1298 :   store i128 %639, i128* %XMM13, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1299 :   %640 = load i128* %XMM14_val, !mcsema_real_eip !29 :          <2a2>	retq
1300 :   store i128 %640, i128* %XMM14, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1301 :   %641 = load i128* %XMM15_val, !mcsema_real_eip !29 :          <2a2>	retq
1302 :   store i128 %641, i128* %XMM15, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1303 :   %642 = load i64* %STACK_BASE_val, !mcsema_real_eip !29 :          <2a2>	retq
1304 :   store i64 %642, i64* %STACK_BASE, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1305 :   %643 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !29 :          <2a2>	retq
1306 :   store i64 %643, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !29 :          <2a2>	retq
1307 :   ret void, !mcsema_real_eip !29 :          <2a2>	retq

1308 :   %644 = load i64* %RBP_val, !mcsema_real_eip !45 :          <54>	movq	-32(%rbp), %rax
1309 :   %645 = add i64 %644, -32, !mcsema_real_eip !45 :          <54>	movq	-32(%rbp), %rax
1310 :   %646 = inttoptr i64 %645 to i64*, !mcsema_real_eip !45 :          <54>	movq	-32(%rbp), %rax
1311 :   %647 = load i64* %646, !mcsema_real_eip !45 :          <54>	movq	-32(%rbp), %rax
1312 :   store i64 %647, i64* %RAX_val, !mcsema_real_eip !45 :          <54>	movq	-32(%rbp), %rax

1313 :   %648 = shl i64 %647, 3 : NIL

1314 :   %649 = add i64 %648, add (i64 ptrtoint (%0* @data_0x2a3 to i64), i64 88), !mcsema_real_eip !46 :          <58>	movq	(,%rax,8), %rcx
1315 :   %650 = inttoptr i64 %649 to i64*, !mcsema_real_eip !46 :          <58>	movq	(,%rax,8), %rcx
1316 :   %651 = load i64* %650, !mcsema_real_eip !46 :          <58>	movq	(,%rax,8), %rcx
1317 :   store i64 %651, i64* %RCX_val, !mcsema_real_eip !46 :          <58>	movq	(,%rax,8), %rcx

1318 :   store i64 %647, i64* %RAX, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1319 :   %652 = load i64* %RBX_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1320 :   store i64 %652, i64* %RBX, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1321 :   %653 = load i64* %RCX_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1322 :   store i64 %653, i64* %RCX, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1323 :   %654 = load i64* %RDX_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1324 :   store i64 %654, i64* %RDX, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1325 :   %655 = load i64* %RSI_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1326 :   store i64 %655, i64* %RSI, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1327 :   %656 = load i64* %RDI_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1328 :   store i64 %656, i64* %RDI, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1329 :   %657 = load i64* %RSP_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1330 :   store i64 %657, i64* %RSP, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1331 :   %658 = load i64* %RBP_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1332 :   store i64 %658, i64* %RBP, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1333 :   %659 = load i64* %R8_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1334 :   store i64 %659, i64* %R8, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1335 :   %660 = load i64* %R9_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1336 :   store i64 %660, i64* %R9, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1337 :   %661 = load i64* %R10_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1338 :   store i64 %661, i64* %R10, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1339 :   %662 = load i64* %R11_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1340 :   store i64 %662, i64* %R11, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1341 :   %663 = load i64* %R12_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1342 :   store i64 %663, i64* %R12, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1343 :   %664 = load i64* %R13_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1344 :   store i64 %664, i64* %R13, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1345 :   %665 = load i64* %R14_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1346 :   store i64 %665, i64* %R14, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1347 :   %666 = load i64* %R15_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1348 :   store i64 %666, i64* %R15, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1349 :   %667 = load i64* %RIP_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1350 :   store i64 %667, i64* %RIP, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1351 :   %668 = load i1* %CF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1352 :   store i1 %668, i1* %CF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1353 :   %669 = load i1* %PF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1354 :   store i1 %669, i1* %PF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1355 :   %670 = load i1* %AF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1356 :   store i1 %670, i1* %AF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1357 :   %671 = load i1* %ZF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1358 :   store i1 %671, i1* %ZF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1359 :   %672 = load i1* %SF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1360 :   store i1 %672, i1* %SF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1361 :   %673 = load i1* %OF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1362 :   store i1 %673, i1* %OF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1363 :   %674 = load i1* %DF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1364 :   store i1 %674, i1* %DF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1365 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1366 :   %675 = load i1* %FPU_B_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1367 :   store i1 %675, i1* %FPU_B, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1368 :   %676 = load i1* %FPU_C3_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1369 :   store i1 %676, i1* %FPU_C3, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1370 :   %677 = load i3* %FPU_TOP_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1371 :   store i3 %677, i3* %FPU_TOP, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1372 :   %678 = load i1* %FPU_C2_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1373 :   store i1 %678, i1* %FPU_C2, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1374 :   %679 = load i1* %FPU_C1_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1375 :   store i1 %679, i1* %FPU_C1, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1376 :   %680 = load i1* %FPU_C0_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1377 :   store i1 %680, i1* %FPU_C0, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1378 :   %681 = load i1* %FPU_ES_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1379 :   store i1 %681, i1* %FPU_ES, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1380 :   %682 = load i1* %FPU_SF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1381 :   store i1 %682, i1* %FPU_SF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1382 :   %683 = load i1* %FPU_PE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1383 :   store i1 %683, i1* %FPU_PE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1384 :   %684 = load i1* %FPU_UE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1385 :   store i1 %684, i1* %FPU_UE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1386 :   %685 = load i1* %FPU_OE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1387 :   store i1 %685, i1* %FPU_OE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1388 :   %686 = load i1* %FPU_ZE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1389 :   store i1 %686, i1* %FPU_ZE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1390 :   %687 = load i1* %FPU_DE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1391 :   store i1 %687, i1* %FPU_DE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1392 :   %688 = load i1* %FPU_IE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1393 :   store i1 %688, i1* %FPU_IE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1394 :   %689 = load i1* %FPU_X_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1395 :   store i1 %689, i1* %FPU_X, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1396 :   %690 = load i2* %FPU_RC_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1397 :   store i2 %690, i2* %FPU_RC, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1398 :   %691 = load i2* %FPU_PC_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1399 :   store i2 %691, i2* %FPU_PC, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1400 :   %692 = load i1* %FPU_PM_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1401 :   store i1 %692, i1* %FPU_PM, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1402 :   %693 = load i1* %FPU_UM_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1403 :   store i1 %693, i1* %FPU_UM, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1404 :   %694 = load i1* %FPU_OM_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1405 :   store i1 %694, i1* %FPU_OM, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1406 :   %695 = load i1* %FPU_ZM_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1407 :   store i1 %695, i1* %FPU_ZM, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1408 :   %696 = load i1* %FPU_DM_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1409 :   store i1 %696, i1* %FPU_DM, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1410 :   %697 = load i1* %FPU_IM_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1411 :   store i1 %697, i1* %FPU_IM, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx

1412 :   %698 = load i64* %53, align 4 : NIL
1413 :   store i64 %698, i64* %52, align 4 : NIL

1414 :   %699 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1415 :   store i16 %699, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1416 :   %700 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1417 :   store i64 %700, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1418 :   %701 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1419 :   store i16 %701, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1420 :   %702 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1421 :   store i64 %702, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1422 :   %703 = load i128* %XMM0_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1423 :   store i128 %703, i128* %XMM0, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1424 :   %704 = load i128* %XMM1_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1425 :   store i128 %704, i128* %XMM1, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1426 :   %705 = load i128* %XMM2_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1427 :   store i128 %705, i128* %XMM2, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1428 :   %706 = load i128* %XMM3_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1429 :   store i128 %706, i128* %XMM3, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1430 :   %707 = load i128* %XMM4_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1431 :   store i128 %707, i128* %XMM4, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1432 :   %708 = load i128* %XMM5_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1433 :   store i128 %708, i128* %XMM5, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1434 :   %709 = load i128* %XMM6_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1435 :   store i128 %709, i128* %XMM6, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1436 :   %710 = load i128* %XMM7_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1437 :   store i128 %710, i128* %XMM7, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1438 :   %711 = load i128* %XMM8_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1439 :   store i128 %711, i128* %XMM8, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1440 :   %712 = load i128* %XMM9_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1441 :   store i128 %712, i128* %XMM9, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1442 :   %713 = load i128* %XMM10_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1443 :   store i128 %713, i128* %XMM10, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1444 :   %714 = load i128* %XMM11_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1445 :   store i128 %714, i128* %XMM11, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1446 :   %715 = load i128* %XMM12_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1447 :   store i128 %715, i128* %XMM12, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1448 :   %716 = load i128* %XMM13_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1449 :   store i128 %716, i128* %XMM13, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1450 :   %717 = load i128* %XMM14_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1451 :   store i128 %717, i128* %XMM14, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1452 :   %718 = load i128* %XMM15_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1453 :   store i128 %718, i128* %XMM15, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1454 :   %719 = load i64* %STACK_BASE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1455 :   store i64 %719, i64* %STACK_BASE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1456 :   %720 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1457 :   store i64 %720, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1458 :   tail call fastcc void @do_call_value(%struct.regs* %0, i64 %651), !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1459 :   %721 = load i64* %RAX, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1460 :   store i64 %721, i64* %RAX_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1461 :   %722 = load i64* %RBX, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1462 :   store i64 %722, i64* %RBX_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1463 :   %723 = load i64* %RCX, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1464 :   store i64 %723, i64* %RCX_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1465 :   %724 = load i64* %RDX, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1466 :   store i64 %724, i64* %RDX_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1467 :   %725 = load i64* %RSI, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1468 :   store i64 %725, i64* %RSI_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1469 :   %726 = load i64* %RDI, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1470 :   store i64 %726, i64* %RDI_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1471 :   %727 = load i64* %RSP, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1472 :   store i64 %727, i64* %RSP_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1473 :   %728 = load i64* %RBP, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1474 :   store i64 %728, i64* %RBP_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1475 :   %729 = load i64* %R8, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1476 :   store i64 %729, i64* %R8_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1477 :   %730 = load i64* %R9, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1478 :   store i64 %730, i64* %R9_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1479 :   %731 = load i64* %R10, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1480 :   store i64 %731, i64* %R10_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1481 :   %732 = load i64* %R11, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1482 :   store i64 %732, i64* %R11_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1483 :   %733 = load i64* %R12, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1484 :   store i64 %733, i64* %R12_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1485 :   %734 = load i64* %R13, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1486 :   store i64 %734, i64* %R13_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1487 :   %735 = load i64* %R14, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1488 :   store i64 %735, i64* %R14_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1489 :   %736 = load i64* %R15, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1490 :   store i64 %736, i64* %R15_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1491 :   %737 = load i64* %RIP, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1492 :   store i64 %737, i64* %RIP_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1493 :   %738 = load i1* %CF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1494 :   store i1 %738, i1* %CF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1495 :   %739 = load i1* %PF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1496 :   store i1 %739, i1* %PF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1497 :   %740 = load i1* %AF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1498 :   store i1 %740, i1* %AF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1499 :   %741 = load i1* %ZF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1500 :   store i1 %741, i1* %ZF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1501 :   %742 = load i1* %SF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1502 :   store i1 %742, i1* %SF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1503 :   %743 = load i1* %OF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1504 :   store i1 %743, i1* %OF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1505 :   %744 = load i1* %DF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1506 :   store i1 %744, i1* %DF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1507 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1508 :   %745 = load i1* %FPU_B, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1509 :   store i1 %745, i1* %FPU_B_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1510 :   %746 = load i1* %FPU_C3, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1511 :   store i1 %746, i1* %FPU_C3_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1512 :   %747 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1513 :   store i3 %747, i3* %FPU_TOP_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1514 :   %748 = load i1* %FPU_C2, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1515 :   store i1 %748, i1* %FPU_C2_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1516 :   %749 = load i1* %FPU_C1, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1517 :   store i1 %749, i1* %FPU_C1_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1518 :   %750 = load i1* %FPU_C0, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1519 :   store i1 %750, i1* %FPU_C0_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1520 :   %751 = load i1* %FPU_ES, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1521 :   store i1 %751, i1* %FPU_ES_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1522 :   %752 = load i1* %FPU_SF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1523 :   store i1 %752, i1* %FPU_SF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1524 :   %753 = load i1* %FPU_PE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1525 :   store i1 %753, i1* %FPU_PE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1526 :   %754 = load i1* %FPU_UE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1527 :   store i1 %754, i1* %FPU_UE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1528 :   %755 = load i1* %FPU_OE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1529 :   store i1 %755, i1* %FPU_OE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1530 :   %756 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1531 :   store i1 %756, i1* %FPU_ZE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1532 :   %757 = load i1* %FPU_DE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1533 :   store i1 %757, i1* %FPU_DE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1534 :   %758 = load i1* %FPU_IE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1535 :   store i1 %758, i1* %FPU_IE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1536 :   %759 = load i1* %FPU_X, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1537 :   store i1 %759, i1* %FPU_X_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1538 :   %760 = load i2* %FPU_RC, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1539 :   store i2 %760, i2* %FPU_RC_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1540 :   %761 = load i2* %FPU_PC, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1541 :   store i2 %761, i2* %FPU_PC_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1542 :   %762 = load i1* %FPU_PM, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1543 :   store i1 %762, i1* %FPU_PM_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1544 :   %763 = load i1* %FPU_UM, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1545 :   store i1 %763, i1* %FPU_UM_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1546 :   %764 = load i1* %FPU_OM, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1547 :   store i1 %764, i1* %FPU_OM_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1548 :   %765 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1549 :   store i1 %765, i1* %FPU_ZM_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1550 :   %766 = load i1* %FPU_DM, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1551 :   store i1 %766, i1* %FPU_DM_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1552 :   %767 = load i1* %FPU_IM, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1553 :   store i1 %767, i1* %FPU_IM_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx

1554 :   %768 = load i64* %52, align 4 : NIL
1555 :   store i64 %768, i64* %53, align 4 : NIL

1556 :   %769 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1557 :   store i16 %769, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1558 :   %770 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1559 :   store i64 %770, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1560 :   %771 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1561 :   store i16 %771, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1562 :   %772 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1563 :   store i64 %772, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1564 :   %773 = load i128* %XMM0, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1565 :   store i128 %773, i128* %XMM0_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1566 :   %774 = load i128* %XMM1, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1567 :   store i128 %774, i128* %XMM1_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1568 :   %775 = load i128* %XMM2, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1569 :   store i128 %775, i128* %XMM2_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1570 :   %776 = load i128* %XMM3, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1571 :   store i128 %776, i128* %XMM3_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1572 :   %777 = load i128* %XMM4, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1573 :   store i128 %777, i128* %XMM4_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1574 :   %778 = load i128* %XMM5, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1575 :   store i128 %778, i128* %XMM5_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1576 :   %779 = load i128* %XMM6, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1577 :   store i128 %779, i128* %XMM6_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1578 :   %780 = load i128* %XMM7, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1579 :   store i128 %780, i128* %XMM7_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1580 :   %781 = load i128* %XMM8, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1581 :   store i128 %781, i128* %XMM8_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1582 :   %782 = load i128* %XMM9, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1583 :   store i128 %782, i128* %XMM9_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1584 :   %783 = load i128* %XMM10, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1585 :   store i128 %783, i128* %XMM10_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1586 :   %784 = load i128* %XMM11, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1587 :   store i128 %784, i128* %XMM11_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1588 :   %785 = load i128* %XMM12, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1589 :   store i128 %785, i128* %XMM12_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1590 :   %786 = load i128* %XMM13, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1591 :   store i128 %786, i128* %XMM13_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1592 :   %787 = load i128* %XMM14, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1593 :   store i128 %787, i128* %XMM14_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1594 :   %788 = load i128* %XMM15, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1595 :   store i128 %788, i128* %XMM15_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1596 :   %789 = load i64* %STACK_BASE, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1597 :   store i64 %789, i64* %STACK_BASE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1598 :   %790 = load i64* %STACK_LIMIT, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1599 :   store i64 %790, i64* %STACK_LIMIT_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1600 :   %791 = load i64* %RSP_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1601 :   %792 = add i64 %791, 8, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1602 :   store i64 %792, i64* %RSP_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1603 :   %793 = load i64* %RAX_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1604 :   store i64 %793, i64* %RAX, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1605 :   %794 = load i64* %RBX_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1606 :   store i64 %794, i64* %RBX, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1607 :   %795 = load i64* %RCX_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1608 :   store i64 %795, i64* %RCX, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1609 :   %796 = load i64* %RDX_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1610 :   store i64 %796, i64* %RDX, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1611 :   %797 = load i64* %RSI_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1612 :   store i64 %797, i64* %RSI, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1613 :   %798 = load i64* %RDI_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1614 :   store i64 %798, i64* %RDI, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1615 :   %799 = load i64* %RSP_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1616 :   store i64 %799, i64* %RSP, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1617 :   %800 = load i64* %RBP_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1618 :   store i64 %800, i64* %RBP, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1619 :   %801 = load i64* %R8_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1620 :   store i64 %801, i64* %R8, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1621 :   %802 = load i64* %R9_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1622 :   store i64 %802, i64* %R9, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1623 :   %803 = load i64* %R10_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1624 :   store i64 %803, i64* %R10, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1625 :   %804 = load i64* %R11_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1626 :   store i64 %804, i64* %R11, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1627 :   %805 = load i64* %R12_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1628 :   store i64 %805, i64* %R12, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1629 :   %806 = load i64* %R13_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1630 :   store i64 %806, i64* %R13, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1631 :   %807 = load i64* %R14_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1632 :   store i64 %807, i64* %R14, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1633 :   %808 = load i64* %R15_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1634 :   store i64 %808, i64* %R15, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1635 :   %809 = load i64* %RIP_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1636 :   store i64 %809, i64* %RIP, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1637 :   %810 = load i1* %CF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1638 :   store i1 %810, i1* %CF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1639 :   %811 = load i1* %PF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1640 :   store i1 %811, i1* %PF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1641 :   %812 = load i1* %AF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1642 :   store i1 %812, i1* %AF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1643 :   %813 = load i1* %ZF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1644 :   store i1 %813, i1* %ZF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1645 :   %814 = load i1* %SF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1646 :   store i1 %814, i1* %SF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1647 :   %815 = load i1* %OF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1648 :   store i1 %815, i1* %OF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1649 :   %816 = load i1* %DF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1650 :   store i1 %816, i1* %DF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1651 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1652 :   %817 = load i1* %FPU_B_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1653 :   store i1 %817, i1* %FPU_B, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1654 :   %818 = load i1* %FPU_C3_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1655 :   store i1 %818, i1* %FPU_C3, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1656 :   %819 = load i3* %FPU_TOP_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1657 :   store i3 %819, i3* %FPU_TOP, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1658 :   %820 = load i1* %FPU_C2_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1659 :   store i1 %820, i1* %FPU_C2, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1660 :   %821 = load i1* %FPU_C1_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1661 :   store i1 %821, i1* %FPU_C1, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1662 :   %822 = load i1* %FPU_C0_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1663 :   store i1 %822, i1* %FPU_C0, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1664 :   %823 = load i1* %FPU_ES_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1665 :   store i1 %823, i1* %FPU_ES, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1666 :   %824 = load i1* %FPU_SF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1667 :   store i1 %824, i1* %FPU_SF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1668 :   %825 = load i1* %FPU_PE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1669 :   store i1 %825, i1* %FPU_PE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1670 :   %826 = load i1* %FPU_UE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1671 :   store i1 %826, i1* %FPU_UE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1672 :   %827 = load i1* %FPU_OE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1673 :   store i1 %827, i1* %FPU_OE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1674 :   %828 = load i1* %FPU_ZE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1675 :   store i1 %828, i1* %FPU_ZE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1676 :   %829 = load i1* %FPU_DE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1677 :   store i1 %829, i1* %FPU_DE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1678 :   %830 = load i1* %FPU_IE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1679 :   store i1 %830, i1* %FPU_IE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1680 :   %831 = load i1* %FPU_X_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1681 :   store i1 %831, i1* %FPU_X, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1682 :   %832 = load i2* %FPU_RC_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1683 :   store i2 %832, i2* %FPU_RC, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1684 :   %833 = load i2* %FPU_PC_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1685 :   store i2 %833, i2* %FPU_PC, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1686 :   %834 = load i1* %FPU_PM_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1687 :   store i1 %834, i1* %FPU_PM, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1688 :   %835 = load i1* %FPU_UM_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1689 :   store i1 %835, i1* %FPU_UM, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1690 :   %836 = load i1* %FPU_OM_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1691 :   store i1 %836, i1* %FPU_OM, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1692 :   %837 = load i1* %FPU_ZM_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1693 :   store i1 %837, i1* %FPU_ZM, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1694 :   %838 = load i1* %FPU_DM_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1695 :   store i1 %838, i1* %FPU_DM, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1696 :   %839 = load i1* %FPU_IM_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1697 :   store i1 %839, i1* %FPU_IM, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx

1698 :   %840 = load i64* %53, align 4 : NIL
1699 :   store i64 %840, i64* %52, align 4 : NIL

1700 :   %841 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1701 :   store i16 %841, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1702 :   %842 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1703 :   store i64 %842, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1704 :   %843 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1705 :   store i16 %843, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1706 :   %844 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1707 :   store i64 %844, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1708 :   %845 = load i128* %XMM0_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1709 :   store i128 %845, i128* %XMM0, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1710 :   %846 = load i128* %XMM1_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1711 :   store i128 %846, i128* %XMM1, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1712 :   %847 = load i128* %XMM2_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1713 :   store i128 %847, i128* %XMM2, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1714 :   %848 = load i128* %XMM3_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1715 :   store i128 %848, i128* %XMM3, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1716 :   %849 = load i128* %XMM4_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1717 :   store i128 %849, i128* %XMM4, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1718 :   %850 = load i128* %XMM5_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1719 :   store i128 %850, i128* %XMM5, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1720 :   %851 = load i128* %XMM6_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1721 :   store i128 %851, i128* %XMM6, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1722 :   %852 = load i128* %XMM7_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1723 :   store i128 %852, i128* %XMM7, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1724 :   %853 = load i128* %XMM8_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1725 :   store i128 %853, i128* %XMM8, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1726 :   %854 = load i128* %XMM9_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1727 :   store i128 %854, i128* %XMM9, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1728 :   %855 = load i128* %XMM10_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1729 :   store i128 %855, i128* %XMM10, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1730 :   %856 = load i128* %XMM11_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1731 :   store i128 %856, i128* %XMM11, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1732 :   %857 = load i128* %XMM12_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1733 :   store i128 %857, i128* %XMM12, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1734 :   %858 = load i128* %XMM13_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1735 :   store i128 %858, i128* %XMM13, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1736 :   %859 = load i128* %XMM14_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1737 :   store i128 %859, i128* %XMM14, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1738 :   %860 = load i128* %XMM15_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1739 :   store i128 %860, i128* %XMM15, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1740 :   %861 = load i64* %STACK_BASE_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1741 :   store i64 %861, i64* %STACK_BASE, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1742 :   %862 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1743 :   store i64 %862, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
1744 :   ret void, !mcsema_real_eip !47 :          <60>	jmpq	*%rcx
========================================================
Source line mapping for function: sub_181
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi
288 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 169), i64* %RDI_val, !mcsema_real_eip !2 :          <181>	movabsq	$0, %rdi

289 :   %77 = load i64* %RSI_val, !mcsema_real_eip !3 :          <18d>	callq	0
290 :   %78 = load i64* %RDX_val, !mcsema_real_eip !3 :          <18d>	callq	0
291 :   %79 = load i64* %RCX_val, !mcsema_real_eip !3 :          <18d>	callq	0
292 :   %80 = tail call x86_64_sysvcc i64 @printf(i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 169), i64 %77, i64 %78, i64 %79), !mcsema_real_eip !3 :          <18d>	callq	0

293 :   %81 = load i64* %RBP_val, !mcsema_real_eip !4 :          <192>	movl	%eax, -92(%rbp)
294 :   %82 = add i64 %81, -92, !mcsema_real_eip !4 :          <192>	movl	%eax, -92(%rbp)
295 :   %83 = inttoptr i64 %82 to i64*, !mcsema_real_eip !4 :          <192>	movl	%eax, -92(%rbp)
296 :   %84 = trunc i64 %80 to i32, !mcsema_real_eip !4 :          <192>	movl	%eax, -92(%rbp)

297 :   %85 = bitcast i64* %83 to i32* : NIL

298 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <192>	movl	%eax, -92(%rbp)

299 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <295>	movl	$0, %eax

300 :   %86 = load i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

301 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %86, i64 144) : NIL
302 :   %87 = extractvalue { i64, i1 } %uadd, 0 : NIL

303 :   %88 = xor i64 %87, %86, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

304 :   %89 = and i64 %88, 16 : NIL
305 :   %90 = icmp eq i64 %89, 0 : NIL

306 :   store i1 %90, i1* %AF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

307 :   %91 = icmp slt i64 %87, 0 : NIL

308 :   store i1 %91, i1* %SF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
309 :   %92 = icmp eq i64 %87, 0, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
310 :   store i1 %92, i1* %ZF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
311 :   %93 = xor i64 %86, -9223372036854775808, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
312 :   %94 = and i64 %88, %93, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

313 :   %95 = icmp slt i64 %94, 0 : NIL

314 :   store i1 %95, i1* %OF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
315 :   %96 = trunc i64 %87 to i8, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
316 :   %97 = tail call i8 @llvm.ctpop.i8(i8 %96), !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

317 :   %98 = and i8 %97, 1 : NIL
318 :   %99 = icmp eq i8 %98, 0 : NIL

319 :   store i1 %99, i1* %PF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

320 :   %100 = extractvalue { i64, i1 } %uadd, 1 : NIL

321 :   store i1 %100, i1* %CF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
322 :   store i64 %87, i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

323 :   %101 = inttoptr i64 %87 to i64*, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
324 :   %102 = load i64* %101, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
325 :   store i64 %102, i64* %RBP_val, !mcsema_real_eip !7 :          <2a1>	popq	%rbp

326 :   %103 = add i64 %87, 16, !mcsema_real_eip !8 :          <2a2>	retq
327 :   store i64 %103, i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
328 :   %104 = load i64* %RAX_val, !mcsema_real_eip !8 :          <2a2>	retq
329 :   store i64 %104, i64* %RAX, !mcsema_real_eip !8 :          <2a2>	retq
330 :   %105 = load i64* %RBX_val, !mcsema_real_eip !8 :          <2a2>	retq
331 :   store i64 %105, i64* %RBX, !mcsema_real_eip !8 :          <2a2>	retq
332 :   %106 = load i64* %RCX_val, !mcsema_real_eip !8 :          <2a2>	retq
333 :   store i64 %106, i64* %RCX, !mcsema_real_eip !8 :          <2a2>	retq
334 :   %107 = load i64* %RDX_val, !mcsema_real_eip !8 :          <2a2>	retq
335 :   store i64 %107, i64* %RDX, !mcsema_real_eip !8 :          <2a2>	retq
336 :   %108 = load i64* %RSI_val, !mcsema_real_eip !8 :          <2a2>	retq
337 :   store i64 %108, i64* %RSI, !mcsema_real_eip !8 :          <2a2>	retq
338 :   %109 = load i64* %RDI_val, !mcsema_real_eip !8 :          <2a2>	retq
339 :   store i64 %109, i64* %RDI, !mcsema_real_eip !8 :          <2a2>	retq
340 :   %110 = load i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
341 :   store i64 %110, i64* %RSP, !mcsema_real_eip !8 :          <2a2>	retq
342 :   %111 = load i64* %RBP_val, !mcsema_real_eip !8 :          <2a2>	retq
343 :   store i64 %111, i64* %RBP, !mcsema_real_eip !8 :          <2a2>	retq
344 :   %112 = load i64* %R8_val, !mcsema_real_eip !8 :          <2a2>	retq
345 :   store i64 %112, i64* %R8, !mcsema_real_eip !8 :          <2a2>	retq
346 :   %113 = load i64* %R9_val, !mcsema_real_eip !8 :          <2a2>	retq
347 :   store i64 %113, i64* %R9, !mcsema_real_eip !8 :          <2a2>	retq
348 :   %114 = load i64* %R10_val, !mcsema_real_eip !8 :          <2a2>	retq
349 :   store i64 %114, i64* %R10, !mcsema_real_eip !8 :          <2a2>	retq
350 :   %115 = load i64* %R11_val, !mcsema_real_eip !8 :          <2a2>	retq
351 :   store i64 %115, i64* %R11, !mcsema_real_eip !8 :          <2a2>	retq
352 :   %116 = load i64* %R12_val, !mcsema_real_eip !8 :          <2a2>	retq
353 :   store i64 %116, i64* %R12, !mcsema_real_eip !8 :          <2a2>	retq
354 :   %117 = load i64* %R13_val, !mcsema_real_eip !8 :          <2a2>	retq
355 :   store i64 %117, i64* %R13, !mcsema_real_eip !8 :          <2a2>	retq
356 :   %118 = load i64* %R14_val, !mcsema_real_eip !8 :          <2a2>	retq
357 :   store i64 %118, i64* %R14, !mcsema_real_eip !8 :          <2a2>	retq
358 :   %119 = load i64* %R15_val, !mcsema_real_eip !8 :          <2a2>	retq
359 :   store i64 %119, i64* %R15, !mcsema_real_eip !8 :          <2a2>	retq
360 :   %120 = load i64* %RIP_val, !mcsema_real_eip !8 :          <2a2>	retq
361 :   store i64 %120, i64* %RIP, !mcsema_real_eip !8 :          <2a2>	retq
362 :   %121 = load i1* %CF_val, !mcsema_real_eip !8 :          <2a2>	retq
363 :   store i1 %121, i1* %CF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
364 :   %122 = load i1* %PF_val, !mcsema_real_eip !8 :          <2a2>	retq
365 :   store i1 %122, i1* %PF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
366 :   %123 = load i1* %AF_val, !mcsema_real_eip !8 :          <2a2>	retq
367 :   store i1 %123, i1* %AF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
368 :   %124 = load i1* %ZF_val, !mcsema_real_eip !8 :          <2a2>	retq
369 :   store i1 %124, i1* %ZF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
370 :   %125 = load i1* %SF_val, !mcsema_real_eip !8 :          <2a2>	retq
371 :   store i1 %125, i1* %SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
372 :   %126 = load i1* %OF_val, !mcsema_real_eip !8 :          <2a2>	retq
373 :   store i1 %126, i1* %OF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
374 :   %127 = load i1* %DF_val, !mcsema_real_eip !8 :          <2a2>	retq
375 :   store i1 %127, i1* %DF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
376 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !8 :          <2a2>	retq
377 :   %128 = load i1* %FPU_B_val, !mcsema_real_eip !8 :          <2a2>	retq
378 :   store i1 %128, i1* %FPU_B, align 1, !mcsema_real_eip !8 :          <2a2>	retq
379 :   %129 = load i1* %FPU_C3_val, !mcsema_real_eip !8 :          <2a2>	retq
380 :   store i1 %129, i1* %FPU_C3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
381 :   %130 = load i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <2a2>	retq
382 :   store i3 %130, i3* %FPU_TOP, align 1, !mcsema_real_eip !8 :          <2a2>	retq
383 :   %131 = load i1* %FPU_C2_val, !mcsema_real_eip !8 :          <2a2>	retq
384 :   store i1 %131, i1* %FPU_C2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
385 :   %132 = load i1* %FPU_C1_val, !mcsema_real_eip !8 :          <2a2>	retq
386 :   store i1 %132, i1* %FPU_C1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
387 :   %133 = load i1* %FPU_C0_val, !mcsema_real_eip !8 :          <2a2>	retq
388 :   store i1 %133, i1* %FPU_C0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
389 :   %134 = load i1* %FPU_ES_val, !mcsema_real_eip !8 :          <2a2>	retq
390 :   store i1 %134, i1* %FPU_ES, align 1, !mcsema_real_eip !8 :          <2a2>	retq
391 :   %135 = load i1* %FPU_SF_val, !mcsema_real_eip !8 :          <2a2>	retq
392 :   store i1 %135, i1* %FPU_SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
393 :   %136 = load i1* %FPU_PE_val, !mcsema_real_eip !8 :          <2a2>	retq
394 :   store i1 %136, i1* %FPU_PE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
395 :   %137 = load i1* %FPU_UE_val, !mcsema_real_eip !8 :          <2a2>	retq
396 :   store i1 %137, i1* %FPU_UE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
397 :   %138 = load i1* %FPU_OE_val, !mcsema_real_eip !8 :          <2a2>	retq
398 :   store i1 %138, i1* %FPU_OE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
399 :   %139 = load i1* %FPU_ZE_val, !mcsema_real_eip !8 :          <2a2>	retq
400 :   store i1 %139, i1* %FPU_ZE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
401 :   %140 = load i1* %FPU_DE_val, !mcsema_real_eip !8 :          <2a2>	retq
402 :   store i1 %140, i1* %FPU_DE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
403 :   %141 = load i1* %FPU_IE_val, !mcsema_real_eip !8 :          <2a2>	retq
404 :   store i1 %141, i1* %FPU_IE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
405 :   %142 = load i1* %FPU_X_val, !mcsema_real_eip !8 :          <2a2>	retq
406 :   store i1 %142, i1* %FPU_X, align 1, !mcsema_real_eip !8 :          <2a2>	retq
407 :   %143 = load i2* %FPU_RC_val, !mcsema_real_eip !8 :          <2a2>	retq
408 :   store i2 %143, i2* %FPU_RC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
409 :   %144 = load i2* %FPU_PC_val, !mcsema_real_eip !8 :          <2a2>	retq
410 :   store i2 %144, i2* %FPU_PC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
411 :   %145 = load i1* %FPU_PM_val, !mcsema_real_eip !8 :          <2a2>	retq
412 :   store i1 %145, i1* %FPU_PM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
413 :   %146 = load i1* %FPU_UM_val, !mcsema_real_eip !8 :          <2a2>	retq
414 :   store i1 %146, i1* %FPU_UM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
415 :   %147 = load i1* %FPU_OM_val, !mcsema_real_eip !8 :          <2a2>	retq
416 :   store i1 %147, i1* %FPU_OM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
417 :   %148 = load i1* %FPU_ZM_val, !mcsema_real_eip !8 :          <2a2>	retq
418 :   store i1 %148, i1* %FPU_ZM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
419 :   %149 = load i1* %FPU_DM_val, !mcsema_real_eip !8 :          <2a2>	retq
420 :   store i1 %149, i1* %FPU_DM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
421 :   %150 = load i1* %FPU_IM_val, !mcsema_real_eip !8 :          <2a2>	retq
422 :   store i1 %150, i1* %FPU_IM, align 1, !mcsema_real_eip !8 :          <2a2>	retq

423 :   %151 = load i64* %53, align 4 : NIL
424 :   store i64 %151, i64* %52, align 4 : NIL

425 :   %152 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
426 :   store i16 %152, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
427 :   %153 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
428 :   store i64 %153, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
429 :   %154 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
430 :   store i16 %154, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
431 :   %155 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
432 :   store i64 %155, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
433 :   %156 = load i128* %XMM0_val, !mcsema_real_eip !8 :          <2a2>	retq
434 :   store i128 %156, i128* %XMM0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
435 :   %157 = load i128* %XMM1_val, !mcsema_real_eip !8 :          <2a2>	retq
436 :   store i128 %157, i128* %XMM1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
437 :   %158 = load i128* %XMM2_val, !mcsema_real_eip !8 :          <2a2>	retq
438 :   store i128 %158, i128* %XMM2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
439 :   %159 = load i128* %XMM3_val, !mcsema_real_eip !8 :          <2a2>	retq
440 :   store i128 %159, i128* %XMM3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
441 :   %160 = load i128* %XMM4_val, !mcsema_real_eip !8 :          <2a2>	retq
442 :   store i128 %160, i128* %XMM4, align 1, !mcsema_real_eip !8 :          <2a2>	retq
443 :   %161 = load i128* %XMM5_val, !mcsema_real_eip !8 :          <2a2>	retq
444 :   store i128 %161, i128* %XMM5, align 1, !mcsema_real_eip !8 :          <2a2>	retq
445 :   %162 = load i128* %XMM6_val, !mcsema_real_eip !8 :          <2a2>	retq
446 :   store i128 %162, i128* %XMM6, align 1, !mcsema_real_eip !8 :          <2a2>	retq
447 :   %163 = load i128* %XMM7_val, !mcsema_real_eip !8 :          <2a2>	retq
448 :   store i128 %163, i128* %XMM7, align 1, !mcsema_real_eip !8 :          <2a2>	retq
449 :   %164 = load i128* %XMM8_val, !mcsema_real_eip !8 :          <2a2>	retq
450 :   store i128 %164, i128* %XMM8, align 1, !mcsema_real_eip !8 :          <2a2>	retq
451 :   %165 = load i128* %XMM9_val, !mcsema_real_eip !8 :          <2a2>	retq
452 :   store i128 %165, i128* %XMM9, align 1, !mcsema_real_eip !8 :          <2a2>	retq
453 :   %166 = load i128* %XMM10_val, !mcsema_real_eip !8 :          <2a2>	retq
454 :   store i128 %166, i128* %XMM10, align 1, !mcsema_real_eip !8 :          <2a2>	retq
455 :   %167 = load i128* %XMM11_val, !mcsema_real_eip !8 :          <2a2>	retq
456 :   store i128 %167, i128* %XMM11, align 1, !mcsema_real_eip !8 :          <2a2>	retq
457 :   %168 = load i128* %XMM12_val, !mcsema_real_eip !8 :          <2a2>	retq
458 :   store i128 %168, i128* %XMM12, align 1, !mcsema_real_eip !8 :          <2a2>	retq
459 :   %169 = load i128* %XMM13_val, !mcsema_real_eip !8 :          <2a2>	retq
460 :   store i128 %169, i128* %XMM13, align 1, !mcsema_real_eip !8 :          <2a2>	retq
461 :   %170 = load i128* %XMM14_val, !mcsema_real_eip !8 :          <2a2>	retq
462 :   store i128 %170, i128* %XMM14, align 1, !mcsema_real_eip !8 :          <2a2>	retq
463 :   %171 = load i128* %XMM15_val, !mcsema_real_eip !8 :          <2a2>	retq
464 :   store i128 %171, i128* %XMM15, align 1, !mcsema_real_eip !8 :          <2a2>	retq
465 :   %172 = load i64* %STACK_BASE_val, !mcsema_real_eip !8 :          <2a2>	retq
466 :   store i64 %172, i64* %STACK_BASE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
467 :   %173 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !8 :          <2a2>	retq
468 :   store i64 %173, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !8 :          <2a2>	retq
469 :   ret void, !mcsema_real_eip !8 :          <2a2>	retq
========================================================
Source line mapping for function: sub_19a
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi
288 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 197), i64* %RDI_val, !mcsema_real_eip !2 :          <19a>	movabsq	$0, %rdi

289 :   %77 = load i64* %RSI_val, !mcsema_real_eip !3 :          <1a6>	callq	0
290 :   %78 = load i64* %RDX_val, !mcsema_real_eip !3 :          <1a6>	callq	0
291 :   %79 = load i64* %RCX_val, !mcsema_real_eip !3 :          <1a6>	callq	0
292 :   %80 = tail call x86_64_sysvcc i64 @printf(i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 197), i64 %77, i64 %78, i64 %79), !mcsema_real_eip !3 :          <1a6>	callq	0

293 :   %81 = load i64* %RBP_val, !mcsema_real_eip !4 :          <1ab>	movl	%eax, -96(%rbp)
294 :   %82 = add i64 %81, -96, !mcsema_real_eip !4 :          <1ab>	movl	%eax, -96(%rbp)
295 :   %83 = inttoptr i64 %82 to i64*, !mcsema_real_eip !4 :          <1ab>	movl	%eax, -96(%rbp)
296 :   %84 = trunc i64 %80 to i32, !mcsema_real_eip !4 :          <1ab>	movl	%eax, -96(%rbp)

297 :   %85 = bitcast i64* %83 to i32* : NIL

298 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <1ab>	movl	%eax, -96(%rbp)

299 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <295>	movl	$0, %eax

300 :   %86 = load i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

301 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %86, i64 144) : NIL
302 :   %87 = extractvalue { i64, i1 } %uadd, 0 : NIL

303 :   %88 = xor i64 %87, %86, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

304 :   %89 = and i64 %88, 16 : NIL
305 :   %90 = icmp eq i64 %89, 0 : NIL

306 :   store i1 %90, i1* %AF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

307 :   %91 = icmp slt i64 %87, 0 : NIL

308 :   store i1 %91, i1* %SF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
309 :   %92 = icmp eq i64 %87, 0, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
310 :   store i1 %92, i1* %ZF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
311 :   %93 = xor i64 %86, -9223372036854775808, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
312 :   %94 = and i64 %88, %93, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

313 :   %95 = icmp slt i64 %94, 0 : NIL

314 :   store i1 %95, i1* %OF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
315 :   %96 = trunc i64 %87 to i8, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
316 :   %97 = tail call i8 @llvm.ctpop.i8(i8 %96), !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

317 :   %98 = and i8 %97, 1 : NIL
318 :   %99 = icmp eq i8 %98, 0 : NIL

319 :   store i1 %99, i1* %PF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

320 :   %100 = extractvalue { i64, i1 } %uadd, 1 : NIL

321 :   store i1 %100, i1* %CF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
322 :   store i64 %87, i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

323 :   %101 = inttoptr i64 %87 to i64*, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
324 :   %102 = load i64* %101, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
325 :   store i64 %102, i64* %RBP_val, !mcsema_real_eip !7 :          <2a1>	popq	%rbp

326 :   %103 = add i64 %87, 16, !mcsema_real_eip !8 :          <2a2>	retq
327 :   store i64 %103, i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
328 :   %104 = load i64* %RAX_val, !mcsema_real_eip !8 :          <2a2>	retq
329 :   store i64 %104, i64* %RAX, !mcsema_real_eip !8 :          <2a2>	retq
330 :   %105 = load i64* %RBX_val, !mcsema_real_eip !8 :          <2a2>	retq
331 :   store i64 %105, i64* %RBX, !mcsema_real_eip !8 :          <2a2>	retq
332 :   %106 = load i64* %RCX_val, !mcsema_real_eip !8 :          <2a2>	retq
333 :   store i64 %106, i64* %RCX, !mcsema_real_eip !8 :          <2a2>	retq
334 :   %107 = load i64* %RDX_val, !mcsema_real_eip !8 :          <2a2>	retq
335 :   store i64 %107, i64* %RDX, !mcsema_real_eip !8 :          <2a2>	retq
336 :   %108 = load i64* %RSI_val, !mcsema_real_eip !8 :          <2a2>	retq
337 :   store i64 %108, i64* %RSI, !mcsema_real_eip !8 :          <2a2>	retq
338 :   %109 = load i64* %RDI_val, !mcsema_real_eip !8 :          <2a2>	retq
339 :   store i64 %109, i64* %RDI, !mcsema_real_eip !8 :          <2a2>	retq
340 :   %110 = load i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
341 :   store i64 %110, i64* %RSP, !mcsema_real_eip !8 :          <2a2>	retq
342 :   %111 = load i64* %RBP_val, !mcsema_real_eip !8 :          <2a2>	retq
343 :   store i64 %111, i64* %RBP, !mcsema_real_eip !8 :          <2a2>	retq
344 :   %112 = load i64* %R8_val, !mcsema_real_eip !8 :          <2a2>	retq
345 :   store i64 %112, i64* %R8, !mcsema_real_eip !8 :          <2a2>	retq
346 :   %113 = load i64* %R9_val, !mcsema_real_eip !8 :          <2a2>	retq
347 :   store i64 %113, i64* %R9, !mcsema_real_eip !8 :          <2a2>	retq
348 :   %114 = load i64* %R10_val, !mcsema_real_eip !8 :          <2a2>	retq
349 :   store i64 %114, i64* %R10, !mcsema_real_eip !8 :          <2a2>	retq
350 :   %115 = load i64* %R11_val, !mcsema_real_eip !8 :          <2a2>	retq
351 :   store i64 %115, i64* %R11, !mcsema_real_eip !8 :          <2a2>	retq
352 :   %116 = load i64* %R12_val, !mcsema_real_eip !8 :          <2a2>	retq
353 :   store i64 %116, i64* %R12, !mcsema_real_eip !8 :          <2a2>	retq
354 :   %117 = load i64* %R13_val, !mcsema_real_eip !8 :          <2a2>	retq
355 :   store i64 %117, i64* %R13, !mcsema_real_eip !8 :          <2a2>	retq
356 :   %118 = load i64* %R14_val, !mcsema_real_eip !8 :          <2a2>	retq
357 :   store i64 %118, i64* %R14, !mcsema_real_eip !8 :          <2a2>	retq
358 :   %119 = load i64* %R15_val, !mcsema_real_eip !8 :          <2a2>	retq
359 :   store i64 %119, i64* %R15, !mcsema_real_eip !8 :          <2a2>	retq
360 :   %120 = load i64* %RIP_val, !mcsema_real_eip !8 :          <2a2>	retq
361 :   store i64 %120, i64* %RIP, !mcsema_real_eip !8 :          <2a2>	retq
362 :   %121 = load i1* %CF_val, !mcsema_real_eip !8 :          <2a2>	retq
363 :   store i1 %121, i1* %CF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
364 :   %122 = load i1* %PF_val, !mcsema_real_eip !8 :          <2a2>	retq
365 :   store i1 %122, i1* %PF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
366 :   %123 = load i1* %AF_val, !mcsema_real_eip !8 :          <2a2>	retq
367 :   store i1 %123, i1* %AF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
368 :   %124 = load i1* %ZF_val, !mcsema_real_eip !8 :          <2a2>	retq
369 :   store i1 %124, i1* %ZF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
370 :   %125 = load i1* %SF_val, !mcsema_real_eip !8 :          <2a2>	retq
371 :   store i1 %125, i1* %SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
372 :   %126 = load i1* %OF_val, !mcsema_real_eip !8 :          <2a2>	retq
373 :   store i1 %126, i1* %OF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
374 :   %127 = load i1* %DF_val, !mcsema_real_eip !8 :          <2a2>	retq
375 :   store i1 %127, i1* %DF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
376 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !8 :          <2a2>	retq
377 :   %128 = load i1* %FPU_B_val, !mcsema_real_eip !8 :          <2a2>	retq
378 :   store i1 %128, i1* %FPU_B, align 1, !mcsema_real_eip !8 :          <2a2>	retq
379 :   %129 = load i1* %FPU_C3_val, !mcsema_real_eip !8 :          <2a2>	retq
380 :   store i1 %129, i1* %FPU_C3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
381 :   %130 = load i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <2a2>	retq
382 :   store i3 %130, i3* %FPU_TOP, align 1, !mcsema_real_eip !8 :          <2a2>	retq
383 :   %131 = load i1* %FPU_C2_val, !mcsema_real_eip !8 :          <2a2>	retq
384 :   store i1 %131, i1* %FPU_C2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
385 :   %132 = load i1* %FPU_C1_val, !mcsema_real_eip !8 :          <2a2>	retq
386 :   store i1 %132, i1* %FPU_C1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
387 :   %133 = load i1* %FPU_C0_val, !mcsema_real_eip !8 :          <2a2>	retq
388 :   store i1 %133, i1* %FPU_C0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
389 :   %134 = load i1* %FPU_ES_val, !mcsema_real_eip !8 :          <2a2>	retq
390 :   store i1 %134, i1* %FPU_ES, align 1, !mcsema_real_eip !8 :          <2a2>	retq
391 :   %135 = load i1* %FPU_SF_val, !mcsema_real_eip !8 :          <2a2>	retq
392 :   store i1 %135, i1* %FPU_SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
393 :   %136 = load i1* %FPU_PE_val, !mcsema_real_eip !8 :          <2a2>	retq
394 :   store i1 %136, i1* %FPU_PE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
395 :   %137 = load i1* %FPU_UE_val, !mcsema_real_eip !8 :          <2a2>	retq
396 :   store i1 %137, i1* %FPU_UE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
397 :   %138 = load i1* %FPU_OE_val, !mcsema_real_eip !8 :          <2a2>	retq
398 :   store i1 %138, i1* %FPU_OE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
399 :   %139 = load i1* %FPU_ZE_val, !mcsema_real_eip !8 :          <2a2>	retq
400 :   store i1 %139, i1* %FPU_ZE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
401 :   %140 = load i1* %FPU_DE_val, !mcsema_real_eip !8 :          <2a2>	retq
402 :   store i1 %140, i1* %FPU_DE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
403 :   %141 = load i1* %FPU_IE_val, !mcsema_real_eip !8 :          <2a2>	retq
404 :   store i1 %141, i1* %FPU_IE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
405 :   %142 = load i1* %FPU_X_val, !mcsema_real_eip !8 :          <2a2>	retq
406 :   store i1 %142, i1* %FPU_X, align 1, !mcsema_real_eip !8 :          <2a2>	retq
407 :   %143 = load i2* %FPU_RC_val, !mcsema_real_eip !8 :          <2a2>	retq
408 :   store i2 %143, i2* %FPU_RC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
409 :   %144 = load i2* %FPU_PC_val, !mcsema_real_eip !8 :          <2a2>	retq
410 :   store i2 %144, i2* %FPU_PC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
411 :   %145 = load i1* %FPU_PM_val, !mcsema_real_eip !8 :          <2a2>	retq
412 :   store i1 %145, i1* %FPU_PM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
413 :   %146 = load i1* %FPU_UM_val, !mcsema_real_eip !8 :          <2a2>	retq
414 :   store i1 %146, i1* %FPU_UM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
415 :   %147 = load i1* %FPU_OM_val, !mcsema_real_eip !8 :          <2a2>	retq
416 :   store i1 %147, i1* %FPU_OM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
417 :   %148 = load i1* %FPU_ZM_val, !mcsema_real_eip !8 :          <2a2>	retq
418 :   store i1 %148, i1* %FPU_ZM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
419 :   %149 = load i1* %FPU_DM_val, !mcsema_real_eip !8 :          <2a2>	retq
420 :   store i1 %149, i1* %FPU_DM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
421 :   %150 = load i1* %FPU_IM_val, !mcsema_real_eip !8 :          <2a2>	retq
422 :   store i1 %150, i1* %FPU_IM, align 1, !mcsema_real_eip !8 :          <2a2>	retq

423 :   %151 = load i64* %53, align 4 : NIL
424 :   store i64 %151, i64* %52, align 4 : NIL

425 :   %152 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
426 :   store i16 %152, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
427 :   %153 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
428 :   store i64 %153, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
429 :   %154 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
430 :   store i16 %154, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
431 :   %155 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
432 :   store i64 %155, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
433 :   %156 = load i128* %XMM0_val, !mcsema_real_eip !8 :          <2a2>	retq
434 :   store i128 %156, i128* %XMM0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
435 :   %157 = load i128* %XMM1_val, !mcsema_real_eip !8 :          <2a2>	retq
436 :   store i128 %157, i128* %XMM1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
437 :   %158 = load i128* %XMM2_val, !mcsema_real_eip !8 :          <2a2>	retq
438 :   store i128 %158, i128* %XMM2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
439 :   %159 = load i128* %XMM3_val, !mcsema_real_eip !8 :          <2a2>	retq
440 :   store i128 %159, i128* %XMM3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
441 :   %160 = load i128* %XMM4_val, !mcsema_real_eip !8 :          <2a2>	retq
442 :   store i128 %160, i128* %XMM4, align 1, !mcsema_real_eip !8 :          <2a2>	retq
443 :   %161 = load i128* %XMM5_val, !mcsema_real_eip !8 :          <2a2>	retq
444 :   store i128 %161, i128* %XMM5, align 1, !mcsema_real_eip !8 :          <2a2>	retq
445 :   %162 = load i128* %XMM6_val, !mcsema_real_eip !8 :          <2a2>	retq
446 :   store i128 %162, i128* %XMM6, align 1, !mcsema_real_eip !8 :          <2a2>	retq
447 :   %163 = load i128* %XMM7_val, !mcsema_real_eip !8 :          <2a2>	retq
448 :   store i128 %163, i128* %XMM7, align 1, !mcsema_real_eip !8 :          <2a2>	retq
449 :   %164 = load i128* %XMM8_val, !mcsema_real_eip !8 :          <2a2>	retq
450 :   store i128 %164, i128* %XMM8, align 1, !mcsema_real_eip !8 :          <2a2>	retq
451 :   %165 = load i128* %XMM9_val, !mcsema_real_eip !8 :          <2a2>	retq
452 :   store i128 %165, i128* %XMM9, align 1, !mcsema_real_eip !8 :          <2a2>	retq
453 :   %166 = load i128* %XMM10_val, !mcsema_real_eip !8 :          <2a2>	retq
454 :   store i128 %166, i128* %XMM10, align 1, !mcsema_real_eip !8 :          <2a2>	retq
455 :   %167 = load i128* %XMM11_val, !mcsema_real_eip !8 :          <2a2>	retq
456 :   store i128 %167, i128* %XMM11, align 1, !mcsema_real_eip !8 :          <2a2>	retq
457 :   %168 = load i128* %XMM12_val, !mcsema_real_eip !8 :          <2a2>	retq
458 :   store i128 %168, i128* %XMM12, align 1, !mcsema_real_eip !8 :          <2a2>	retq
459 :   %169 = load i128* %XMM13_val, !mcsema_real_eip !8 :          <2a2>	retq
460 :   store i128 %169, i128* %XMM13, align 1, !mcsema_real_eip !8 :          <2a2>	retq
461 :   %170 = load i128* %XMM14_val, !mcsema_real_eip !8 :          <2a2>	retq
462 :   store i128 %170, i128* %XMM14, align 1, !mcsema_real_eip !8 :          <2a2>	retq
463 :   %171 = load i128* %XMM15_val, !mcsema_real_eip !8 :          <2a2>	retq
464 :   store i128 %171, i128* %XMM15, align 1, !mcsema_real_eip !8 :          <2a2>	retq
465 :   %172 = load i64* %STACK_BASE_val, !mcsema_real_eip !8 :          <2a2>	retq
466 :   store i64 %172, i64* %STACK_BASE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
467 :   %173 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !8 :          <2a2>	retq
468 :   store i64 %173, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !8 :          <2a2>	retq
469 :   ret void, !mcsema_real_eip !8 :          <2a2>	retq
========================================================
Source line mapping for function: sub_1b3
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi
288 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 225), i64* %RDI_val, !mcsema_real_eip !2 :          <1b3>	movabsq	$0, %rdi

289 :   %77 = load i64* %RSI_val, !mcsema_real_eip !3 :          <1bf>	callq	0
290 :   %78 = load i64* %RDX_val, !mcsema_real_eip !3 :          <1bf>	callq	0
291 :   %79 = load i64* %RCX_val, !mcsema_real_eip !3 :          <1bf>	callq	0
292 :   %80 = tail call x86_64_sysvcc i64 @printf(i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 225), i64 %77, i64 %78, i64 %79), !mcsema_real_eip !3 :          <1bf>	callq	0

293 :   %81 = load i64* %RBP_val, !mcsema_real_eip !4 :          <1c4>	movl	%eax, -100(%rbp)
294 :   %82 = add i64 %81, -100, !mcsema_real_eip !4 :          <1c4>	movl	%eax, -100(%rbp)
295 :   %83 = inttoptr i64 %82 to i64*, !mcsema_real_eip !4 :          <1c4>	movl	%eax, -100(%rbp)
296 :   %84 = trunc i64 %80 to i32, !mcsema_real_eip !4 :          <1c4>	movl	%eax, -100(%rbp)

297 :   %85 = bitcast i64* %83 to i32* : NIL

298 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <1c4>	movl	%eax, -100(%rbp)

299 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <295>	movl	$0, %eax

300 :   %86 = load i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

301 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %86, i64 144) : NIL
302 :   %87 = extractvalue { i64, i1 } %uadd, 0 : NIL

303 :   %88 = xor i64 %87, %86, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

304 :   %89 = and i64 %88, 16 : NIL
305 :   %90 = icmp eq i64 %89, 0 : NIL

306 :   store i1 %90, i1* %AF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

307 :   %91 = icmp slt i64 %87, 0 : NIL

308 :   store i1 %91, i1* %SF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
309 :   %92 = icmp eq i64 %87, 0, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
310 :   store i1 %92, i1* %ZF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
311 :   %93 = xor i64 %86, -9223372036854775808, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
312 :   %94 = and i64 %88, %93, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

313 :   %95 = icmp slt i64 %94, 0 : NIL

314 :   store i1 %95, i1* %OF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
315 :   %96 = trunc i64 %87 to i8, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
316 :   %97 = tail call i8 @llvm.ctpop.i8(i8 %96), !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

317 :   %98 = and i8 %97, 1 : NIL
318 :   %99 = icmp eq i8 %98, 0 : NIL

319 :   store i1 %99, i1* %PF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

320 :   %100 = extractvalue { i64, i1 } %uadd, 1 : NIL

321 :   store i1 %100, i1* %CF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
322 :   store i64 %87, i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

323 :   %101 = inttoptr i64 %87 to i64*, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
324 :   %102 = load i64* %101, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
325 :   store i64 %102, i64* %RBP_val, !mcsema_real_eip !7 :          <2a1>	popq	%rbp

326 :   %103 = add i64 %87, 16, !mcsema_real_eip !8 :          <2a2>	retq
327 :   store i64 %103, i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
328 :   %104 = load i64* %RAX_val, !mcsema_real_eip !8 :          <2a2>	retq
329 :   store i64 %104, i64* %RAX, !mcsema_real_eip !8 :          <2a2>	retq
330 :   %105 = load i64* %RBX_val, !mcsema_real_eip !8 :          <2a2>	retq
331 :   store i64 %105, i64* %RBX, !mcsema_real_eip !8 :          <2a2>	retq
332 :   %106 = load i64* %RCX_val, !mcsema_real_eip !8 :          <2a2>	retq
333 :   store i64 %106, i64* %RCX, !mcsema_real_eip !8 :          <2a2>	retq
334 :   %107 = load i64* %RDX_val, !mcsema_real_eip !8 :          <2a2>	retq
335 :   store i64 %107, i64* %RDX, !mcsema_real_eip !8 :          <2a2>	retq
336 :   %108 = load i64* %RSI_val, !mcsema_real_eip !8 :          <2a2>	retq
337 :   store i64 %108, i64* %RSI, !mcsema_real_eip !8 :          <2a2>	retq
338 :   %109 = load i64* %RDI_val, !mcsema_real_eip !8 :          <2a2>	retq
339 :   store i64 %109, i64* %RDI, !mcsema_real_eip !8 :          <2a2>	retq
340 :   %110 = load i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
341 :   store i64 %110, i64* %RSP, !mcsema_real_eip !8 :          <2a2>	retq
342 :   %111 = load i64* %RBP_val, !mcsema_real_eip !8 :          <2a2>	retq
343 :   store i64 %111, i64* %RBP, !mcsema_real_eip !8 :          <2a2>	retq
344 :   %112 = load i64* %R8_val, !mcsema_real_eip !8 :          <2a2>	retq
345 :   store i64 %112, i64* %R8, !mcsema_real_eip !8 :          <2a2>	retq
346 :   %113 = load i64* %R9_val, !mcsema_real_eip !8 :          <2a2>	retq
347 :   store i64 %113, i64* %R9, !mcsema_real_eip !8 :          <2a2>	retq
348 :   %114 = load i64* %R10_val, !mcsema_real_eip !8 :          <2a2>	retq
349 :   store i64 %114, i64* %R10, !mcsema_real_eip !8 :          <2a2>	retq
350 :   %115 = load i64* %R11_val, !mcsema_real_eip !8 :          <2a2>	retq
351 :   store i64 %115, i64* %R11, !mcsema_real_eip !8 :          <2a2>	retq
352 :   %116 = load i64* %R12_val, !mcsema_real_eip !8 :          <2a2>	retq
353 :   store i64 %116, i64* %R12, !mcsema_real_eip !8 :          <2a2>	retq
354 :   %117 = load i64* %R13_val, !mcsema_real_eip !8 :          <2a2>	retq
355 :   store i64 %117, i64* %R13, !mcsema_real_eip !8 :          <2a2>	retq
356 :   %118 = load i64* %R14_val, !mcsema_real_eip !8 :          <2a2>	retq
357 :   store i64 %118, i64* %R14, !mcsema_real_eip !8 :          <2a2>	retq
358 :   %119 = load i64* %R15_val, !mcsema_real_eip !8 :          <2a2>	retq
359 :   store i64 %119, i64* %R15, !mcsema_real_eip !8 :          <2a2>	retq
360 :   %120 = load i64* %RIP_val, !mcsema_real_eip !8 :          <2a2>	retq
361 :   store i64 %120, i64* %RIP, !mcsema_real_eip !8 :          <2a2>	retq
362 :   %121 = load i1* %CF_val, !mcsema_real_eip !8 :          <2a2>	retq
363 :   store i1 %121, i1* %CF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
364 :   %122 = load i1* %PF_val, !mcsema_real_eip !8 :          <2a2>	retq
365 :   store i1 %122, i1* %PF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
366 :   %123 = load i1* %AF_val, !mcsema_real_eip !8 :          <2a2>	retq
367 :   store i1 %123, i1* %AF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
368 :   %124 = load i1* %ZF_val, !mcsema_real_eip !8 :          <2a2>	retq
369 :   store i1 %124, i1* %ZF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
370 :   %125 = load i1* %SF_val, !mcsema_real_eip !8 :          <2a2>	retq
371 :   store i1 %125, i1* %SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
372 :   %126 = load i1* %OF_val, !mcsema_real_eip !8 :          <2a2>	retq
373 :   store i1 %126, i1* %OF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
374 :   %127 = load i1* %DF_val, !mcsema_real_eip !8 :          <2a2>	retq
375 :   store i1 %127, i1* %DF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
376 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !8 :          <2a2>	retq
377 :   %128 = load i1* %FPU_B_val, !mcsema_real_eip !8 :          <2a2>	retq
378 :   store i1 %128, i1* %FPU_B, align 1, !mcsema_real_eip !8 :          <2a2>	retq
379 :   %129 = load i1* %FPU_C3_val, !mcsema_real_eip !8 :          <2a2>	retq
380 :   store i1 %129, i1* %FPU_C3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
381 :   %130 = load i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <2a2>	retq
382 :   store i3 %130, i3* %FPU_TOP, align 1, !mcsema_real_eip !8 :          <2a2>	retq
383 :   %131 = load i1* %FPU_C2_val, !mcsema_real_eip !8 :          <2a2>	retq
384 :   store i1 %131, i1* %FPU_C2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
385 :   %132 = load i1* %FPU_C1_val, !mcsema_real_eip !8 :          <2a2>	retq
386 :   store i1 %132, i1* %FPU_C1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
387 :   %133 = load i1* %FPU_C0_val, !mcsema_real_eip !8 :          <2a2>	retq
388 :   store i1 %133, i1* %FPU_C0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
389 :   %134 = load i1* %FPU_ES_val, !mcsema_real_eip !8 :          <2a2>	retq
390 :   store i1 %134, i1* %FPU_ES, align 1, !mcsema_real_eip !8 :          <2a2>	retq
391 :   %135 = load i1* %FPU_SF_val, !mcsema_real_eip !8 :          <2a2>	retq
392 :   store i1 %135, i1* %FPU_SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
393 :   %136 = load i1* %FPU_PE_val, !mcsema_real_eip !8 :          <2a2>	retq
394 :   store i1 %136, i1* %FPU_PE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
395 :   %137 = load i1* %FPU_UE_val, !mcsema_real_eip !8 :          <2a2>	retq
396 :   store i1 %137, i1* %FPU_UE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
397 :   %138 = load i1* %FPU_OE_val, !mcsema_real_eip !8 :          <2a2>	retq
398 :   store i1 %138, i1* %FPU_OE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
399 :   %139 = load i1* %FPU_ZE_val, !mcsema_real_eip !8 :          <2a2>	retq
400 :   store i1 %139, i1* %FPU_ZE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
401 :   %140 = load i1* %FPU_DE_val, !mcsema_real_eip !8 :          <2a2>	retq
402 :   store i1 %140, i1* %FPU_DE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
403 :   %141 = load i1* %FPU_IE_val, !mcsema_real_eip !8 :          <2a2>	retq
404 :   store i1 %141, i1* %FPU_IE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
405 :   %142 = load i1* %FPU_X_val, !mcsema_real_eip !8 :          <2a2>	retq
406 :   store i1 %142, i1* %FPU_X, align 1, !mcsema_real_eip !8 :          <2a2>	retq
407 :   %143 = load i2* %FPU_RC_val, !mcsema_real_eip !8 :          <2a2>	retq
408 :   store i2 %143, i2* %FPU_RC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
409 :   %144 = load i2* %FPU_PC_val, !mcsema_real_eip !8 :          <2a2>	retq
410 :   store i2 %144, i2* %FPU_PC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
411 :   %145 = load i1* %FPU_PM_val, !mcsema_real_eip !8 :          <2a2>	retq
412 :   store i1 %145, i1* %FPU_PM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
413 :   %146 = load i1* %FPU_UM_val, !mcsema_real_eip !8 :          <2a2>	retq
414 :   store i1 %146, i1* %FPU_UM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
415 :   %147 = load i1* %FPU_OM_val, !mcsema_real_eip !8 :          <2a2>	retq
416 :   store i1 %147, i1* %FPU_OM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
417 :   %148 = load i1* %FPU_ZM_val, !mcsema_real_eip !8 :          <2a2>	retq
418 :   store i1 %148, i1* %FPU_ZM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
419 :   %149 = load i1* %FPU_DM_val, !mcsema_real_eip !8 :          <2a2>	retq
420 :   store i1 %149, i1* %FPU_DM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
421 :   %150 = load i1* %FPU_IM_val, !mcsema_real_eip !8 :          <2a2>	retq
422 :   store i1 %150, i1* %FPU_IM, align 1, !mcsema_real_eip !8 :          <2a2>	retq

423 :   %151 = load i64* %53, align 4 : NIL
424 :   store i64 %151, i64* %52, align 4 : NIL

425 :   %152 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
426 :   store i16 %152, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
427 :   %153 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
428 :   store i64 %153, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
429 :   %154 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
430 :   store i16 %154, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
431 :   %155 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
432 :   store i64 %155, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
433 :   %156 = load i128* %XMM0_val, !mcsema_real_eip !8 :          <2a2>	retq
434 :   store i128 %156, i128* %XMM0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
435 :   %157 = load i128* %XMM1_val, !mcsema_real_eip !8 :          <2a2>	retq
436 :   store i128 %157, i128* %XMM1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
437 :   %158 = load i128* %XMM2_val, !mcsema_real_eip !8 :          <2a2>	retq
438 :   store i128 %158, i128* %XMM2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
439 :   %159 = load i128* %XMM3_val, !mcsema_real_eip !8 :          <2a2>	retq
440 :   store i128 %159, i128* %XMM3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
441 :   %160 = load i128* %XMM4_val, !mcsema_real_eip !8 :          <2a2>	retq
442 :   store i128 %160, i128* %XMM4, align 1, !mcsema_real_eip !8 :          <2a2>	retq
443 :   %161 = load i128* %XMM5_val, !mcsema_real_eip !8 :          <2a2>	retq
444 :   store i128 %161, i128* %XMM5, align 1, !mcsema_real_eip !8 :          <2a2>	retq
445 :   %162 = load i128* %XMM6_val, !mcsema_real_eip !8 :          <2a2>	retq
446 :   store i128 %162, i128* %XMM6, align 1, !mcsema_real_eip !8 :          <2a2>	retq
447 :   %163 = load i128* %XMM7_val, !mcsema_real_eip !8 :          <2a2>	retq
448 :   store i128 %163, i128* %XMM7, align 1, !mcsema_real_eip !8 :          <2a2>	retq
449 :   %164 = load i128* %XMM8_val, !mcsema_real_eip !8 :          <2a2>	retq
450 :   store i128 %164, i128* %XMM8, align 1, !mcsema_real_eip !8 :          <2a2>	retq
451 :   %165 = load i128* %XMM9_val, !mcsema_real_eip !8 :          <2a2>	retq
452 :   store i128 %165, i128* %XMM9, align 1, !mcsema_real_eip !8 :          <2a2>	retq
453 :   %166 = load i128* %XMM10_val, !mcsema_real_eip !8 :          <2a2>	retq
454 :   store i128 %166, i128* %XMM10, align 1, !mcsema_real_eip !8 :          <2a2>	retq
455 :   %167 = load i128* %XMM11_val, !mcsema_real_eip !8 :          <2a2>	retq
456 :   store i128 %167, i128* %XMM11, align 1, !mcsema_real_eip !8 :          <2a2>	retq
457 :   %168 = load i128* %XMM12_val, !mcsema_real_eip !8 :          <2a2>	retq
458 :   store i128 %168, i128* %XMM12, align 1, !mcsema_real_eip !8 :          <2a2>	retq
459 :   %169 = load i128* %XMM13_val, !mcsema_real_eip !8 :          <2a2>	retq
460 :   store i128 %169, i128* %XMM13, align 1, !mcsema_real_eip !8 :          <2a2>	retq
461 :   %170 = load i128* %XMM14_val, !mcsema_real_eip !8 :          <2a2>	retq
462 :   store i128 %170, i128* %XMM14, align 1, !mcsema_real_eip !8 :          <2a2>	retq
463 :   %171 = load i128* %XMM15_val, !mcsema_real_eip !8 :          <2a2>	retq
464 :   store i128 %171, i128* %XMM15, align 1, !mcsema_real_eip !8 :          <2a2>	retq
465 :   %172 = load i64* %STACK_BASE_val, !mcsema_real_eip !8 :          <2a2>	retq
466 :   store i64 %172, i64* %STACK_BASE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
467 :   %173 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !8 :          <2a2>	retq
468 :   store i64 %173, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !8 :          <2a2>	retq
469 :   ret void, !mcsema_real_eip !8 :          <2a2>	retq
========================================================
Source line mapping for function: sub_1cc
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi
288 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 253), i64* %RDI_val, !mcsema_real_eip !2 :          <1cc>	movabsq	$0, %rdi

289 :   %77 = load i64* %RSI_val, !mcsema_real_eip !3 :          <1d8>	callq	0
290 :   %78 = load i64* %RDX_val, !mcsema_real_eip !3 :          <1d8>	callq	0
291 :   %79 = load i64* %RCX_val, !mcsema_real_eip !3 :          <1d8>	callq	0
292 :   %80 = tail call x86_64_sysvcc i64 @printf(i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 253), i64 %77, i64 %78, i64 %79), !mcsema_real_eip !3 :          <1d8>	callq	0

293 :   %81 = load i64* %RBP_val, !mcsema_real_eip !4 :          <1dd>	movl	%eax, -104(%rbp)
294 :   %82 = add i64 %81, -104, !mcsema_real_eip !4 :          <1dd>	movl	%eax, -104(%rbp)
295 :   %83 = inttoptr i64 %82 to i64*, !mcsema_real_eip !4 :          <1dd>	movl	%eax, -104(%rbp)
296 :   %84 = trunc i64 %80 to i32, !mcsema_real_eip !4 :          <1dd>	movl	%eax, -104(%rbp)

297 :   %85 = bitcast i64* %83 to i32* : NIL

298 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <1dd>	movl	%eax, -104(%rbp)

299 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <295>	movl	$0, %eax

300 :   %86 = load i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

301 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %86, i64 144) : NIL
302 :   %87 = extractvalue { i64, i1 } %uadd, 0 : NIL

303 :   %88 = xor i64 %87, %86, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

304 :   %89 = and i64 %88, 16 : NIL
305 :   %90 = icmp eq i64 %89, 0 : NIL

306 :   store i1 %90, i1* %AF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

307 :   %91 = icmp slt i64 %87, 0 : NIL

308 :   store i1 %91, i1* %SF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
309 :   %92 = icmp eq i64 %87, 0, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
310 :   store i1 %92, i1* %ZF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
311 :   %93 = xor i64 %86, -9223372036854775808, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
312 :   %94 = and i64 %88, %93, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

313 :   %95 = icmp slt i64 %94, 0 : NIL

314 :   store i1 %95, i1* %OF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
315 :   %96 = trunc i64 %87 to i8, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
316 :   %97 = tail call i8 @llvm.ctpop.i8(i8 %96), !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

317 :   %98 = and i8 %97, 1 : NIL
318 :   %99 = icmp eq i8 %98, 0 : NIL

319 :   store i1 %99, i1* %PF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

320 :   %100 = extractvalue { i64, i1 } %uadd, 1 : NIL

321 :   store i1 %100, i1* %CF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
322 :   store i64 %87, i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

323 :   %101 = inttoptr i64 %87 to i64*, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
324 :   %102 = load i64* %101, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
325 :   store i64 %102, i64* %RBP_val, !mcsema_real_eip !7 :          <2a1>	popq	%rbp

326 :   %103 = add i64 %87, 16, !mcsema_real_eip !8 :          <2a2>	retq
327 :   store i64 %103, i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
328 :   %104 = load i64* %RAX_val, !mcsema_real_eip !8 :          <2a2>	retq
329 :   store i64 %104, i64* %RAX, !mcsema_real_eip !8 :          <2a2>	retq
330 :   %105 = load i64* %RBX_val, !mcsema_real_eip !8 :          <2a2>	retq
331 :   store i64 %105, i64* %RBX, !mcsema_real_eip !8 :          <2a2>	retq
332 :   %106 = load i64* %RCX_val, !mcsema_real_eip !8 :          <2a2>	retq
333 :   store i64 %106, i64* %RCX, !mcsema_real_eip !8 :          <2a2>	retq
334 :   %107 = load i64* %RDX_val, !mcsema_real_eip !8 :          <2a2>	retq
335 :   store i64 %107, i64* %RDX, !mcsema_real_eip !8 :          <2a2>	retq
336 :   %108 = load i64* %RSI_val, !mcsema_real_eip !8 :          <2a2>	retq
337 :   store i64 %108, i64* %RSI, !mcsema_real_eip !8 :          <2a2>	retq
338 :   %109 = load i64* %RDI_val, !mcsema_real_eip !8 :          <2a2>	retq
339 :   store i64 %109, i64* %RDI, !mcsema_real_eip !8 :          <2a2>	retq
340 :   %110 = load i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
341 :   store i64 %110, i64* %RSP, !mcsema_real_eip !8 :          <2a2>	retq
342 :   %111 = load i64* %RBP_val, !mcsema_real_eip !8 :          <2a2>	retq
343 :   store i64 %111, i64* %RBP, !mcsema_real_eip !8 :          <2a2>	retq
344 :   %112 = load i64* %R8_val, !mcsema_real_eip !8 :          <2a2>	retq
345 :   store i64 %112, i64* %R8, !mcsema_real_eip !8 :          <2a2>	retq
346 :   %113 = load i64* %R9_val, !mcsema_real_eip !8 :          <2a2>	retq
347 :   store i64 %113, i64* %R9, !mcsema_real_eip !8 :          <2a2>	retq
348 :   %114 = load i64* %R10_val, !mcsema_real_eip !8 :          <2a2>	retq
349 :   store i64 %114, i64* %R10, !mcsema_real_eip !8 :          <2a2>	retq
350 :   %115 = load i64* %R11_val, !mcsema_real_eip !8 :          <2a2>	retq
351 :   store i64 %115, i64* %R11, !mcsema_real_eip !8 :          <2a2>	retq
352 :   %116 = load i64* %R12_val, !mcsema_real_eip !8 :          <2a2>	retq
353 :   store i64 %116, i64* %R12, !mcsema_real_eip !8 :          <2a2>	retq
354 :   %117 = load i64* %R13_val, !mcsema_real_eip !8 :          <2a2>	retq
355 :   store i64 %117, i64* %R13, !mcsema_real_eip !8 :          <2a2>	retq
356 :   %118 = load i64* %R14_val, !mcsema_real_eip !8 :          <2a2>	retq
357 :   store i64 %118, i64* %R14, !mcsema_real_eip !8 :          <2a2>	retq
358 :   %119 = load i64* %R15_val, !mcsema_real_eip !8 :          <2a2>	retq
359 :   store i64 %119, i64* %R15, !mcsema_real_eip !8 :          <2a2>	retq
360 :   %120 = load i64* %RIP_val, !mcsema_real_eip !8 :          <2a2>	retq
361 :   store i64 %120, i64* %RIP, !mcsema_real_eip !8 :          <2a2>	retq
362 :   %121 = load i1* %CF_val, !mcsema_real_eip !8 :          <2a2>	retq
363 :   store i1 %121, i1* %CF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
364 :   %122 = load i1* %PF_val, !mcsema_real_eip !8 :          <2a2>	retq
365 :   store i1 %122, i1* %PF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
366 :   %123 = load i1* %AF_val, !mcsema_real_eip !8 :          <2a2>	retq
367 :   store i1 %123, i1* %AF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
368 :   %124 = load i1* %ZF_val, !mcsema_real_eip !8 :          <2a2>	retq
369 :   store i1 %124, i1* %ZF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
370 :   %125 = load i1* %SF_val, !mcsema_real_eip !8 :          <2a2>	retq
371 :   store i1 %125, i1* %SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
372 :   %126 = load i1* %OF_val, !mcsema_real_eip !8 :          <2a2>	retq
373 :   store i1 %126, i1* %OF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
374 :   %127 = load i1* %DF_val, !mcsema_real_eip !8 :          <2a2>	retq
375 :   store i1 %127, i1* %DF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
376 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !8 :          <2a2>	retq
377 :   %128 = load i1* %FPU_B_val, !mcsema_real_eip !8 :          <2a2>	retq
378 :   store i1 %128, i1* %FPU_B, align 1, !mcsema_real_eip !8 :          <2a2>	retq
379 :   %129 = load i1* %FPU_C3_val, !mcsema_real_eip !8 :          <2a2>	retq
380 :   store i1 %129, i1* %FPU_C3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
381 :   %130 = load i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <2a2>	retq
382 :   store i3 %130, i3* %FPU_TOP, align 1, !mcsema_real_eip !8 :          <2a2>	retq
383 :   %131 = load i1* %FPU_C2_val, !mcsema_real_eip !8 :          <2a2>	retq
384 :   store i1 %131, i1* %FPU_C2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
385 :   %132 = load i1* %FPU_C1_val, !mcsema_real_eip !8 :          <2a2>	retq
386 :   store i1 %132, i1* %FPU_C1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
387 :   %133 = load i1* %FPU_C0_val, !mcsema_real_eip !8 :          <2a2>	retq
388 :   store i1 %133, i1* %FPU_C0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
389 :   %134 = load i1* %FPU_ES_val, !mcsema_real_eip !8 :          <2a2>	retq
390 :   store i1 %134, i1* %FPU_ES, align 1, !mcsema_real_eip !8 :          <2a2>	retq
391 :   %135 = load i1* %FPU_SF_val, !mcsema_real_eip !8 :          <2a2>	retq
392 :   store i1 %135, i1* %FPU_SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
393 :   %136 = load i1* %FPU_PE_val, !mcsema_real_eip !8 :          <2a2>	retq
394 :   store i1 %136, i1* %FPU_PE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
395 :   %137 = load i1* %FPU_UE_val, !mcsema_real_eip !8 :          <2a2>	retq
396 :   store i1 %137, i1* %FPU_UE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
397 :   %138 = load i1* %FPU_OE_val, !mcsema_real_eip !8 :          <2a2>	retq
398 :   store i1 %138, i1* %FPU_OE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
399 :   %139 = load i1* %FPU_ZE_val, !mcsema_real_eip !8 :          <2a2>	retq
400 :   store i1 %139, i1* %FPU_ZE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
401 :   %140 = load i1* %FPU_DE_val, !mcsema_real_eip !8 :          <2a2>	retq
402 :   store i1 %140, i1* %FPU_DE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
403 :   %141 = load i1* %FPU_IE_val, !mcsema_real_eip !8 :          <2a2>	retq
404 :   store i1 %141, i1* %FPU_IE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
405 :   %142 = load i1* %FPU_X_val, !mcsema_real_eip !8 :          <2a2>	retq
406 :   store i1 %142, i1* %FPU_X, align 1, !mcsema_real_eip !8 :          <2a2>	retq
407 :   %143 = load i2* %FPU_RC_val, !mcsema_real_eip !8 :          <2a2>	retq
408 :   store i2 %143, i2* %FPU_RC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
409 :   %144 = load i2* %FPU_PC_val, !mcsema_real_eip !8 :          <2a2>	retq
410 :   store i2 %144, i2* %FPU_PC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
411 :   %145 = load i1* %FPU_PM_val, !mcsema_real_eip !8 :          <2a2>	retq
412 :   store i1 %145, i1* %FPU_PM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
413 :   %146 = load i1* %FPU_UM_val, !mcsema_real_eip !8 :          <2a2>	retq
414 :   store i1 %146, i1* %FPU_UM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
415 :   %147 = load i1* %FPU_OM_val, !mcsema_real_eip !8 :          <2a2>	retq
416 :   store i1 %147, i1* %FPU_OM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
417 :   %148 = load i1* %FPU_ZM_val, !mcsema_real_eip !8 :          <2a2>	retq
418 :   store i1 %148, i1* %FPU_ZM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
419 :   %149 = load i1* %FPU_DM_val, !mcsema_real_eip !8 :          <2a2>	retq
420 :   store i1 %149, i1* %FPU_DM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
421 :   %150 = load i1* %FPU_IM_val, !mcsema_real_eip !8 :          <2a2>	retq
422 :   store i1 %150, i1* %FPU_IM, align 1, !mcsema_real_eip !8 :          <2a2>	retq

423 :   %151 = load i64* %53, align 4 : NIL
424 :   store i64 %151, i64* %52, align 4 : NIL

425 :   %152 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
426 :   store i16 %152, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
427 :   %153 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
428 :   store i64 %153, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
429 :   %154 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
430 :   store i16 %154, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
431 :   %155 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
432 :   store i64 %155, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
433 :   %156 = load i128* %XMM0_val, !mcsema_real_eip !8 :          <2a2>	retq
434 :   store i128 %156, i128* %XMM0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
435 :   %157 = load i128* %XMM1_val, !mcsema_real_eip !8 :          <2a2>	retq
436 :   store i128 %157, i128* %XMM1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
437 :   %158 = load i128* %XMM2_val, !mcsema_real_eip !8 :          <2a2>	retq
438 :   store i128 %158, i128* %XMM2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
439 :   %159 = load i128* %XMM3_val, !mcsema_real_eip !8 :          <2a2>	retq
440 :   store i128 %159, i128* %XMM3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
441 :   %160 = load i128* %XMM4_val, !mcsema_real_eip !8 :          <2a2>	retq
442 :   store i128 %160, i128* %XMM4, align 1, !mcsema_real_eip !8 :          <2a2>	retq
443 :   %161 = load i128* %XMM5_val, !mcsema_real_eip !8 :          <2a2>	retq
444 :   store i128 %161, i128* %XMM5, align 1, !mcsema_real_eip !8 :          <2a2>	retq
445 :   %162 = load i128* %XMM6_val, !mcsema_real_eip !8 :          <2a2>	retq
446 :   store i128 %162, i128* %XMM6, align 1, !mcsema_real_eip !8 :          <2a2>	retq
447 :   %163 = load i128* %XMM7_val, !mcsema_real_eip !8 :          <2a2>	retq
448 :   store i128 %163, i128* %XMM7, align 1, !mcsema_real_eip !8 :          <2a2>	retq
449 :   %164 = load i128* %XMM8_val, !mcsema_real_eip !8 :          <2a2>	retq
450 :   store i128 %164, i128* %XMM8, align 1, !mcsema_real_eip !8 :          <2a2>	retq
451 :   %165 = load i128* %XMM9_val, !mcsema_real_eip !8 :          <2a2>	retq
452 :   store i128 %165, i128* %XMM9, align 1, !mcsema_real_eip !8 :          <2a2>	retq
453 :   %166 = load i128* %XMM10_val, !mcsema_real_eip !8 :          <2a2>	retq
454 :   store i128 %166, i128* %XMM10, align 1, !mcsema_real_eip !8 :          <2a2>	retq
455 :   %167 = load i128* %XMM11_val, !mcsema_real_eip !8 :          <2a2>	retq
456 :   store i128 %167, i128* %XMM11, align 1, !mcsema_real_eip !8 :          <2a2>	retq
457 :   %168 = load i128* %XMM12_val, !mcsema_real_eip !8 :          <2a2>	retq
458 :   store i128 %168, i128* %XMM12, align 1, !mcsema_real_eip !8 :          <2a2>	retq
459 :   %169 = load i128* %XMM13_val, !mcsema_real_eip !8 :          <2a2>	retq
460 :   store i128 %169, i128* %XMM13, align 1, !mcsema_real_eip !8 :          <2a2>	retq
461 :   %170 = load i128* %XMM14_val, !mcsema_real_eip !8 :          <2a2>	retq
462 :   store i128 %170, i128* %XMM14, align 1, !mcsema_real_eip !8 :          <2a2>	retq
463 :   %171 = load i128* %XMM15_val, !mcsema_real_eip !8 :          <2a2>	retq
464 :   store i128 %171, i128* %XMM15, align 1, !mcsema_real_eip !8 :          <2a2>	retq
465 :   %172 = load i64* %STACK_BASE_val, !mcsema_real_eip !8 :          <2a2>	retq
466 :   store i64 %172, i64* %STACK_BASE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
467 :   %173 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !8 :          <2a2>	retq
468 :   store i64 %173, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !8 :          <2a2>	retq
469 :   ret void, !mcsema_real_eip !8 :          <2a2>	retq
========================================================
Source line mapping for function: sub_1e5
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi
288 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 281), i64* %RDI_val, !mcsema_real_eip !2 :          <1e5>	movabsq	$0, %rdi

289 :   %77 = load i64* %RSI_val, !mcsema_real_eip !3 :          <1f1>	callq	0
290 :   %78 = load i64* %RDX_val, !mcsema_real_eip !3 :          <1f1>	callq	0
291 :   %79 = load i64* %RCX_val, !mcsema_real_eip !3 :          <1f1>	callq	0
292 :   %80 = tail call x86_64_sysvcc i64 @printf(i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 281), i64 %77, i64 %78, i64 %79), !mcsema_real_eip !3 :          <1f1>	callq	0

293 :   %81 = load i64* %RBP_val, !mcsema_real_eip !4 :          <1f6>	movl	%eax, -108(%rbp)
294 :   %82 = add i64 %81, -108, !mcsema_real_eip !4 :          <1f6>	movl	%eax, -108(%rbp)
295 :   %83 = inttoptr i64 %82 to i64*, !mcsema_real_eip !4 :          <1f6>	movl	%eax, -108(%rbp)
296 :   %84 = trunc i64 %80 to i32, !mcsema_real_eip !4 :          <1f6>	movl	%eax, -108(%rbp)

297 :   %85 = bitcast i64* %83 to i32* : NIL

298 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <1f6>	movl	%eax, -108(%rbp)

299 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <295>	movl	$0, %eax

300 :   %86 = load i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

301 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %86, i64 144) : NIL
302 :   %87 = extractvalue { i64, i1 } %uadd, 0 : NIL

303 :   %88 = xor i64 %87, %86, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

304 :   %89 = and i64 %88, 16 : NIL
305 :   %90 = icmp eq i64 %89, 0 : NIL

306 :   store i1 %90, i1* %AF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

307 :   %91 = icmp slt i64 %87, 0 : NIL

308 :   store i1 %91, i1* %SF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
309 :   %92 = icmp eq i64 %87, 0, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
310 :   store i1 %92, i1* %ZF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
311 :   %93 = xor i64 %86, -9223372036854775808, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
312 :   %94 = and i64 %88, %93, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

313 :   %95 = icmp slt i64 %94, 0 : NIL

314 :   store i1 %95, i1* %OF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
315 :   %96 = trunc i64 %87 to i8, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
316 :   %97 = tail call i8 @llvm.ctpop.i8(i8 %96), !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

317 :   %98 = and i8 %97, 1 : NIL
318 :   %99 = icmp eq i8 %98, 0 : NIL

319 :   store i1 %99, i1* %PF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

320 :   %100 = extractvalue { i64, i1 } %uadd, 1 : NIL

321 :   store i1 %100, i1* %CF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
322 :   store i64 %87, i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

323 :   %101 = inttoptr i64 %87 to i64*, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
324 :   %102 = load i64* %101, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
325 :   store i64 %102, i64* %RBP_val, !mcsema_real_eip !7 :          <2a1>	popq	%rbp

326 :   %103 = add i64 %87, 16, !mcsema_real_eip !8 :          <2a2>	retq
327 :   store i64 %103, i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
328 :   %104 = load i64* %RAX_val, !mcsema_real_eip !8 :          <2a2>	retq
329 :   store i64 %104, i64* %RAX, !mcsema_real_eip !8 :          <2a2>	retq
330 :   %105 = load i64* %RBX_val, !mcsema_real_eip !8 :          <2a2>	retq
331 :   store i64 %105, i64* %RBX, !mcsema_real_eip !8 :          <2a2>	retq
332 :   %106 = load i64* %RCX_val, !mcsema_real_eip !8 :          <2a2>	retq
333 :   store i64 %106, i64* %RCX, !mcsema_real_eip !8 :          <2a2>	retq
334 :   %107 = load i64* %RDX_val, !mcsema_real_eip !8 :          <2a2>	retq
335 :   store i64 %107, i64* %RDX, !mcsema_real_eip !8 :          <2a2>	retq
336 :   %108 = load i64* %RSI_val, !mcsema_real_eip !8 :          <2a2>	retq
337 :   store i64 %108, i64* %RSI, !mcsema_real_eip !8 :          <2a2>	retq
338 :   %109 = load i64* %RDI_val, !mcsema_real_eip !8 :          <2a2>	retq
339 :   store i64 %109, i64* %RDI, !mcsema_real_eip !8 :          <2a2>	retq
340 :   %110 = load i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
341 :   store i64 %110, i64* %RSP, !mcsema_real_eip !8 :          <2a2>	retq
342 :   %111 = load i64* %RBP_val, !mcsema_real_eip !8 :          <2a2>	retq
343 :   store i64 %111, i64* %RBP, !mcsema_real_eip !8 :          <2a2>	retq
344 :   %112 = load i64* %R8_val, !mcsema_real_eip !8 :          <2a2>	retq
345 :   store i64 %112, i64* %R8, !mcsema_real_eip !8 :          <2a2>	retq
346 :   %113 = load i64* %R9_val, !mcsema_real_eip !8 :          <2a2>	retq
347 :   store i64 %113, i64* %R9, !mcsema_real_eip !8 :          <2a2>	retq
348 :   %114 = load i64* %R10_val, !mcsema_real_eip !8 :          <2a2>	retq
349 :   store i64 %114, i64* %R10, !mcsema_real_eip !8 :          <2a2>	retq
350 :   %115 = load i64* %R11_val, !mcsema_real_eip !8 :          <2a2>	retq
351 :   store i64 %115, i64* %R11, !mcsema_real_eip !8 :          <2a2>	retq
352 :   %116 = load i64* %R12_val, !mcsema_real_eip !8 :          <2a2>	retq
353 :   store i64 %116, i64* %R12, !mcsema_real_eip !8 :          <2a2>	retq
354 :   %117 = load i64* %R13_val, !mcsema_real_eip !8 :          <2a2>	retq
355 :   store i64 %117, i64* %R13, !mcsema_real_eip !8 :          <2a2>	retq
356 :   %118 = load i64* %R14_val, !mcsema_real_eip !8 :          <2a2>	retq
357 :   store i64 %118, i64* %R14, !mcsema_real_eip !8 :          <2a2>	retq
358 :   %119 = load i64* %R15_val, !mcsema_real_eip !8 :          <2a2>	retq
359 :   store i64 %119, i64* %R15, !mcsema_real_eip !8 :          <2a2>	retq
360 :   %120 = load i64* %RIP_val, !mcsema_real_eip !8 :          <2a2>	retq
361 :   store i64 %120, i64* %RIP, !mcsema_real_eip !8 :          <2a2>	retq
362 :   %121 = load i1* %CF_val, !mcsema_real_eip !8 :          <2a2>	retq
363 :   store i1 %121, i1* %CF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
364 :   %122 = load i1* %PF_val, !mcsema_real_eip !8 :          <2a2>	retq
365 :   store i1 %122, i1* %PF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
366 :   %123 = load i1* %AF_val, !mcsema_real_eip !8 :          <2a2>	retq
367 :   store i1 %123, i1* %AF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
368 :   %124 = load i1* %ZF_val, !mcsema_real_eip !8 :          <2a2>	retq
369 :   store i1 %124, i1* %ZF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
370 :   %125 = load i1* %SF_val, !mcsema_real_eip !8 :          <2a2>	retq
371 :   store i1 %125, i1* %SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
372 :   %126 = load i1* %OF_val, !mcsema_real_eip !8 :          <2a2>	retq
373 :   store i1 %126, i1* %OF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
374 :   %127 = load i1* %DF_val, !mcsema_real_eip !8 :          <2a2>	retq
375 :   store i1 %127, i1* %DF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
376 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !8 :          <2a2>	retq
377 :   %128 = load i1* %FPU_B_val, !mcsema_real_eip !8 :          <2a2>	retq
378 :   store i1 %128, i1* %FPU_B, align 1, !mcsema_real_eip !8 :          <2a2>	retq
379 :   %129 = load i1* %FPU_C3_val, !mcsema_real_eip !8 :          <2a2>	retq
380 :   store i1 %129, i1* %FPU_C3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
381 :   %130 = load i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <2a2>	retq
382 :   store i3 %130, i3* %FPU_TOP, align 1, !mcsema_real_eip !8 :          <2a2>	retq
383 :   %131 = load i1* %FPU_C2_val, !mcsema_real_eip !8 :          <2a2>	retq
384 :   store i1 %131, i1* %FPU_C2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
385 :   %132 = load i1* %FPU_C1_val, !mcsema_real_eip !8 :          <2a2>	retq
386 :   store i1 %132, i1* %FPU_C1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
387 :   %133 = load i1* %FPU_C0_val, !mcsema_real_eip !8 :          <2a2>	retq
388 :   store i1 %133, i1* %FPU_C0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
389 :   %134 = load i1* %FPU_ES_val, !mcsema_real_eip !8 :          <2a2>	retq
390 :   store i1 %134, i1* %FPU_ES, align 1, !mcsema_real_eip !8 :          <2a2>	retq
391 :   %135 = load i1* %FPU_SF_val, !mcsema_real_eip !8 :          <2a2>	retq
392 :   store i1 %135, i1* %FPU_SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
393 :   %136 = load i1* %FPU_PE_val, !mcsema_real_eip !8 :          <2a2>	retq
394 :   store i1 %136, i1* %FPU_PE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
395 :   %137 = load i1* %FPU_UE_val, !mcsema_real_eip !8 :          <2a2>	retq
396 :   store i1 %137, i1* %FPU_UE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
397 :   %138 = load i1* %FPU_OE_val, !mcsema_real_eip !8 :          <2a2>	retq
398 :   store i1 %138, i1* %FPU_OE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
399 :   %139 = load i1* %FPU_ZE_val, !mcsema_real_eip !8 :          <2a2>	retq
400 :   store i1 %139, i1* %FPU_ZE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
401 :   %140 = load i1* %FPU_DE_val, !mcsema_real_eip !8 :          <2a2>	retq
402 :   store i1 %140, i1* %FPU_DE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
403 :   %141 = load i1* %FPU_IE_val, !mcsema_real_eip !8 :          <2a2>	retq
404 :   store i1 %141, i1* %FPU_IE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
405 :   %142 = load i1* %FPU_X_val, !mcsema_real_eip !8 :          <2a2>	retq
406 :   store i1 %142, i1* %FPU_X, align 1, !mcsema_real_eip !8 :          <2a2>	retq
407 :   %143 = load i2* %FPU_RC_val, !mcsema_real_eip !8 :          <2a2>	retq
408 :   store i2 %143, i2* %FPU_RC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
409 :   %144 = load i2* %FPU_PC_val, !mcsema_real_eip !8 :          <2a2>	retq
410 :   store i2 %144, i2* %FPU_PC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
411 :   %145 = load i1* %FPU_PM_val, !mcsema_real_eip !8 :          <2a2>	retq
412 :   store i1 %145, i1* %FPU_PM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
413 :   %146 = load i1* %FPU_UM_val, !mcsema_real_eip !8 :          <2a2>	retq
414 :   store i1 %146, i1* %FPU_UM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
415 :   %147 = load i1* %FPU_OM_val, !mcsema_real_eip !8 :          <2a2>	retq
416 :   store i1 %147, i1* %FPU_OM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
417 :   %148 = load i1* %FPU_ZM_val, !mcsema_real_eip !8 :          <2a2>	retq
418 :   store i1 %148, i1* %FPU_ZM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
419 :   %149 = load i1* %FPU_DM_val, !mcsema_real_eip !8 :          <2a2>	retq
420 :   store i1 %149, i1* %FPU_DM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
421 :   %150 = load i1* %FPU_IM_val, !mcsema_real_eip !8 :          <2a2>	retq
422 :   store i1 %150, i1* %FPU_IM, align 1, !mcsema_real_eip !8 :          <2a2>	retq

423 :   %151 = load i64* %53, align 4 : NIL
424 :   store i64 %151, i64* %52, align 4 : NIL

425 :   %152 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
426 :   store i16 %152, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
427 :   %153 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
428 :   store i64 %153, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
429 :   %154 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
430 :   store i16 %154, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
431 :   %155 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
432 :   store i64 %155, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
433 :   %156 = load i128* %XMM0_val, !mcsema_real_eip !8 :          <2a2>	retq
434 :   store i128 %156, i128* %XMM0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
435 :   %157 = load i128* %XMM1_val, !mcsema_real_eip !8 :          <2a2>	retq
436 :   store i128 %157, i128* %XMM1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
437 :   %158 = load i128* %XMM2_val, !mcsema_real_eip !8 :          <2a2>	retq
438 :   store i128 %158, i128* %XMM2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
439 :   %159 = load i128* %XMM3_val, !mcsema_real_eip !8 :          <2a2>	retq
440 :   store i128 %159, i128* %XMM3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
441 :   %160 = load i128* %XMM4_val, !mcsema_real_eip !8 :          <2a2>	retq
442 :   store i128 %160, i128* %XMM4, align 1, !mcsema_real_eip !8 :          <2a2>	retq
443 :   %161 = load i128* %XMM5_val, !mcsema_real_eip !8 :          <2a2>	retq
444 :   store i128 %161, i128* %XMM5, align 1, !mcsema_real_eip !8 :          <2a2>	retq
445 :   %162 = load i128* %XMM6_val, !mcsema_real_eip !8 :          <2a2>	retq
446 :   store i128 %162, i128* %XMM6, align 1, !mcsema_real_eip !8 :          <2a2>	retq
447 :   %163 = load i128* %XMM7_val, !mcsema_real_eip !8 :          <2a2>	retq
448 :   store i128 %163, i128* %XMM7, align 1, !mcsema_real_eip !8 :          <2a2>	retq
449 :   %164 = load i128* %XMM8_val, !mcsema_real_eip !8 :          <2a2>	retq
450 :   store i128 %164, i128* %XMM8, align 1, !mcsema_real_eip !8 :          <2a2>	retq
451 :   %165 = load i128* %XMM9_val, !mcsema_real_eip !8 :          <2a2>	retq
452 :   store i128 %165, i128* %XMM9, align 1, !mcsema_real_eip !8 :          <2a2>	retq
453 :   %166 = load i128* %XMM10_val, !mcsema_real_eip !8 :          <2a2>	retq
454 :   store i128 %166, i128* %XMM10, align 1, !mcsema_real_eip !8 :          <2a2>	retq
455 :   %167 = load i128* %XMM11_val, !mcsema_real_eip !8 :          <2a2>	retq
456 :   store i128 %167, i128* %XMM11, align 1, !mcsema_real_eip !8 :          <2a2>	retq
457 :   %168 = load i128* %XMM12_val, !mcsema_real_eip !8 :          <2a2>	retq
458 :   store i128 %168, i128* %XMM12, align 1, !mcsema_real_eip !8 :          <2a2>	retq
459 :   %169 = load i128* %XMM13_val, !mcsema_real_eip !8 :          <2a2>	retq
460 :   store i128 %169, i128* %XMM13, align 1, !mcsema_real_eip !8 :          <2a2>	retq
461 :   %170 = load i128* %XMM14_val, !mcsema_real_eip !8 :          <2a2>	retq
462 :   store i128 %170, i128* %XMM14, align 1, !mcsema_real_eip !8 :          <2a2>	retq
463 :   %171 = load i128* %XMM15_val, !mcsema_real_eip !8 :          <2a2>	retq
464 :   store i128 %171, i128* %XMM15, align 1, !mcsema_real_eip !8 :          <2a2>	retq
465 :   %172 = load i64* %STACK_BASE_val, !mcsema_real_eip !8 :          <2a2>	retq
466 :   store i64 %172, i64* %STACK_BASE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
467 :   %173 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !8 :          <2a2>	retq
468 :   store i64 %173, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !8 :          <2a2>	retq
469 :   ret void, !mcsema_real_eip !8 :          <2a2>	retq
========================================================
Source line mapping for function: sub_27b
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi
288 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 449), i64* %RDI_val, !mcsema_real_eip !2 :          <27b>	movabsq	$0, %rdi

289 :   %77 = load i64* %RBP_val, !mcsema_real_eip !3 :          <285>	movl	-4(%rbp), %esi
290 :   %78 = add i64 %77, -4, !mcsema_real_eip !3 :          <285>	movl	-4(%rbp), %esi
291 :   %79 = inttoptr i64 %78 to i64*, !mcsema_real_eip !3 :          <285>	movl	-4(%rbp), %esi

292 :   %80 = bitcast i64* %79 to i32* : NIL

293 :   %81 = load i32* %80, !mcsema_real_eip !3 :          <285>	movl	-4(%rbp), %esi
294 :   %82 = zext i32 %81 to i64, !mcsema_real_eip !3 :          <285>	movl	-4(%rbp), %esi
295 :   store i64 %82, i64* %RSI_val, !mcsema_real_eip !3 :          <285>	movl	-4(%rbp), %esi

296 :   %83 = load i64* %RDI_val, !mcsema_real_eip !4 :          <28a>	callq	0
297 :   %84 = load i64* %RDX_val, !mcsema_real_eip !4 :          <28a>	callq	0
298 :   %85 = load i64* %RCX_val, !mcsema_real_eip !4 :          <28a>	callq	0
299 :   %86 = tail call x86_64_sysvcc i64 @printf(i64 %83, i64 %82, i64 %84, i64 %85), !mcsema_real_eip !4 :          <28a>	callq	0

300 :   %87 = load i64* %RBP_val, !mcsema_real_eip !5 :          <28f>	movl	%eax, -132(%rbp)
301 :   %88 = add i64 %87, -132, !mcsema_real_eip !5 :          <28f>	movl	%eax, -132(%rbp)
302 :   %89 = inttoptr i64 %88 to i64*, !mcsema_real_eip !5 :          <28f>	movl	%eax, -132(%rbp)
303 :   %90 = trunc i64 %86 to i32, !mcsema_real_eip !5 :          <28f>	movl	%eax, -132(%rbp)

304 :   %91 = bitcast i64* %89 to i32* : NIL

305 :   store i32 %90, i32* %91, !mcsema_real_eip !5 :          <28f>	movl	%eax, -132(%rbp)

306 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !6 :          <295>	movl	$0, %eax

307 :   %92 = load i64* %RSP_val, !mcsema_real_eip !7 :          <29a>	addq	$144, %rsp

308 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %92, i64 144) : NIL
309 :   %93 = extractvalue { i64, i1 } %uadd, 0 : NIL

310 :   %94 = xor i64 %93, %92, !mcsema_real_eip !7 :          <29a>	addq	$144, %rsp

311 :   %95 = and i64 %94, 16 : NIL
312 :   %96 = icmp eq i64 %95, 0 : NIL

313 :   store i1 %96, i1* %AF_val, !mcsema_real_eip !7 :          <29a>	addq	$144, %rsp

314 :   %97 = icmp slt i64 %93, 0 : NIL

315 :   store i1 %97, i1* %SF_val, !mcsema_real_eip !7 :          <29a>	addq	$144, %rsp
316 :   %98 = icmp eq i64 %93, 0, !mcsema_real_eip !7 :          <29a>	addq	$144, %rsp
317 :   store i1 %98, i1* %ZF_val, !mcsema_real_eip !7 :          <29a>	addq	$144, %rsp
318 :   %99 = xor i64 %92, -9223372036854775808, !mcsema_real_eip !7 :          <29a>	addq	$144, %rsp
319 :   %100 = and i64 %94, %99, !mcsema_real_eip !7 :          <29a>	addq	$144, %rsp

320 :   %101 = icmp slt i64 %100, 0 : NIL

321 :   store i1 %101, i1* %OF_val, !mcsema_real_eip !7 :          <29a>	addq	$144, %rsp
322 :   %102 = trunc i64 %93 to i8, !mcsema_real_eip !7 :          <29a>	addq	$144, %rsp
323 :   %103 = tail call i8 @llvm.ctpop.i8(i8 %102), !mcsema_real_eip !7 :          <29a>	addq	$144, %rsp

324 :   %104 = and i8 %103, 1 : NIL
325 :   %105 = icmp eq i8 %104, 0 : NIL

326 :   store i1 %105, i1* %PF_val, !mcsema_real_eip !7 :          <29a>	addq	$144, %rsp

327 :   %106 = extractvalue { i64, i1 } %uadd, 1 : NIL

328 :   store i1 %106, i1* %CF_val, !mcsema_real_eip !7 :          <29a>	addq	$144, %rsp
329 :   store i64 %93, i64* %RSP_val, !mcsema_real_eip !7 :          <29a>	addq	$144, %rsp

330 :   %107 = inttoptr i64 %93 to i64*, !mcsema_real_eip !8 :          <2a1>	popq	%rbp
331 :   %108 = load i64* %107, !mcsema_real_eip !8 :          <2a1>	popq	%rbp
332 :   store i64 %108, i64* %RBP_val, !mcsema_real_eip !8 :          <2a1>	popq	%rbp

333 :   %109 = add i64 %93, 16, !mcsema_real_eip !9 :          <2a2>	retq
334 :   store i64 %109, i64* %RSP_val, !mcsema_real_eip !9 :          <2a2>	retq
335 :   %110 = load i64* %RAX_val, !mcsema_real_eip !9 :          <2a2>	retq
336 :   store i64 %110, i64* %RAX, !mcsema_real_eip !9 :          <2a2>	retq
337 :   %111 = load i64* %RBX_val, !mcsema_real_eip !9 :          <2a2>	retq
338 :   store i64 %111, i64* %RBX, !mcsema_real_eip !9 :          <2a2>	retq
339 :   %112 = load i64* %RCX_val, !mcsema_real_eip !9 :          <2a2>	retq
340 :   store i64 %112, i64* %RCX, !mcsema_real_eip !9 :          <2a2>	retq
341 :   %113 = load i64* %RDX_val, !mcsema_real_eip !9 :          <2a2>	retq
342 :   store i64 %113, i64* %RDX, !mcsema_real_eip !9 :          <2a2>	retq
343 :   %114 = load i64* %RSI_val, !mcsema_real_eip !9 :          <2a2>	retq
344 :   store i64 %114, i64* %RSI, !mcsema_real_eip !9 :          <2a2>	retq
345 :   %115 = load i64* %RDI_val, !mcsema_real_eip !9 :          <2a2>	retq
346 :   store i64 %115, i64* %RDI, !mcsema_real_eip !9 :          <2a2>	retq
347 :   %116 = load i64* %RSP_val, !mcsema_real_eip !9 :          <2a2>	retq
348 :   store i64 %116, i64* %RSP, !mcsema_real_eip !9 :          <2a2>	retq
349 :   %117 = load i64* %RBP_val, !mcsema_real_eip !9 :          <2a2>	retq
350 :   store i64 %117, i64* %RBP, !mcsema_real_eip !9 :          <2a2>	retq
351 :   %118 = load i64* %R8_val, !mcsema_real_eip !9 :          <2a2>	retq
352 :   store i64 %118, i64* %R8, !mcsema_real_eip !9 :          <2a2>	retq
353 :   %119 = load i64* %R9_val, !mcsema_real_eip !9 :          <2a2>	retq
354 :   store i64 %119, i64* %R9, !mcsema_real_eip !9 :          <2a2>	retq
355 :   %120 = load i64* %R10_val, !mcsema_real_eip !9 :          <2a2>	retq
356 :   store i64 %120, i64* %R10, !mcsema_real_eip !9 :          <2a2>	retq
357 :   %121 = load i64* %R11_val, !mcsema_real_eip !9 :          <2a2>	retq
358 :   store i64 %121, i64* %R11, !mcsema_real_eip !9 :          <2a2>	retq
359 :   %122 = load i64* %R12_val, !mcsema_real_eip !9 :          <2a2>	retq
360 :   store i64 %122, i64* %R12, !mcsema_real_eip !9 :          <2a2>	retq
361 :   %123 = load i64* %R13_val, !mcsema_real_eip !9 :          <2a2>	retq
362 :   store i64 %123, i64* %R13, !mcsema_real_eip !9 :          <2a2>	retq
363 :   %124 = load i64* %R14_val, !mcsema_real_eip !9 :          <2a2>	retq
364 :   store i64 %124, i64* %R14, !mcsema_real_eip !9 :          <2a2>	retq
365 :   %125 = load i64* %R15_val, !mcsema_real_eip !9 :          <2a2>	retq
366 :   store i64 %125, i64* %R15, !mcsema_real_eip !9 :          <2a2>	retq
367 :   %126 = load i64* %RIP_val, !mcsema_real_eip !9 :          <2a2>	retq
368 :   store i64 %126, i64* %RIP, !mcsema_real_eip !9 :          <2a2>	retq
369 :   %127 = load i1* %CF_val, !mcsema_real_eip !9 :          <2a2>	retq
370 :   store i1 %127, i1* %CF, align 1, !mcsema_real_eip !9 :          <2a2>	retq
371 :   %128 = load i1* %PF_val, !mcsema_real_eip !9 :          <2a2>	retq
372 :   store i1 %128, i1* %PF, align 1, !mcsema_real_eip !9 :          <2a2>	retq
373 :   %129 = load i1* %AF_val, !mcsema_real_eip !9 :          <2a2>	retq
374 :   store i1 %129, i1* %AF, align 1, !mcsema_real_eip !9 :          <2a2>	retq
375 :   %130 = load i1* %ZF_val, !mcsema_real_eip !9 :          <2a2>	retq
376 :   store i1 %130, i1* %ZF, align 1, !mcsema_real_eip !9 :          <2a2>	retq
377 :   %131 = load i1* %SF_val, !mcsema_real_eip !9 :          <2a2>	retq
378 :   store i1 %131, i1* %SF, align 1, !mcsema_real_eip !9 :          <2a2>	retq
379 :   %132 = load i1* %OF_val, !mcsema_real_eip !9 :          <2a2>	retq
380 :   store i1 %132, i1* %OF, align 1, !mcsema_real_eip !9 :          <2a2>	retq
381 :   %133 = load i1* %DF_val, !mcsema_real_eip !9 :          <2a2>	retq
382 :   store i1 %133, i1* %DF, align 1, !mcsema_real_eip !9 :          <2a2>	retq
383 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !9 :          <2a2>	retq
384 :   %134 = load i1* %FPU_B_val, !mcsema_real_eip !9 :          <2a2>	retq
385 :   store i1 %134, i1* %FPU_B, align 1, !mcsema_real_eip !9 :          <2a2>	retq
386 :   %135 = load i1* %FPU_C3_val, !mcsema_real_eip !9 :          <2a2>	retq
387 :   store i1 %135, i1* %FPU_C3, align 1, !mcsema_real_eip !9 :          <2a2>	retq
388 :   %136 = load i3* %FPU_TOP_val, !mcsema_real_eip !9 :          <2a2>	retq
389 :   store i3 %136, i3* %FPU_TOP, align 1, !mcsema_real_eip !9 :          <2a2>	retq
390 :   %137 = load i1* %FPU_C2_val, !mcsema_real_eip !9 :          <2a2>	retq
391 :   store i1 %137, i1* %FPU_C2, align 1, !mcsema_real_eip !9 :          <2a2>	retq
392 :   %138 = load i1* %FPU_C1_val, !mcsema_real_eip !9 :          <2a2>	retq
393 :   store i1 %138, i1* %FPU_C1, align 1, !mcsema_real_eip !9 :          <2a2>	retq
394 :   %139 = load i1* %FPU_C0_val, !mcsema_real_eip !9 :          <2a2>	retq
395 :   store i1 %139, i1* %FPU_C0, align 1, !mcsema_real_eip !9 :          <2a2>	retq
396 :   %140 = load i1* %FPU_ES_val, !mcsema_real_eip !9 :          <2a2>	retq
397 :   store i1 %140, i1* %FPU_ES, align 1, !mcsema_real_eip !9 :          <2a2>	retq
398 :   %141 = load i1* %FPU_SF_val, !mcsema_real_eip !9 :          <2a2>	retq
399 :   store i1 %141, i1* %FPU_SF, align 1, !mcsema_real_eip !9 :          <2a2>	retq
400 :   %142 = load i1* %FPU_PE_val, !mcsema_real_eip !9 :          <2a2>	retq
401 :   store i1 %142, i1* %FPU_PE, align 1, !mcsema_real_eip !9 :          <2a2>	retq
402 :   %143 = load i1* %FPU_UE_val, !mcsema_real_eip !9 :          <2a2>	retq
403 :   store i1 %143, i1* %FPU_UE, align 1, !mcsema_real_eip !9 :          <2a2>	retq
404 :   %144 = load i1* %FPU_OE_val, !mcsema_real_eip !9 :          <2a2>	retq
405 :   store i1 %144, i1* %FPU_OE, align 1, !mcsema_real_eip !9 :          <2a2>	retq
406 :   %145 = load i1* %FPU_ZE_val, !mcsema_real_eip !9 :          <2a2>	retq
407 :   store i1 %145, i1* %FPU_ZE, align 1, !mcsema_real_eip !9 :          <2a2>	retq
408 :   %146 = load i1* %FPU_DE_val, !mcsema_real_eip !9 :          <2a2>	retq
409 :   store i1 %146, i1* %FPU_DE, align 1, !mcsema_real_eip !9 :          <2a2>	retq
410 :   %147 = load i1* %FPU_IE_val, !mcsema_real_eip !9 :          <2a2>	retq
411 :   store i1 %147, i1* %FPU_IE, align 1, !mcsema_real_eip !9 :          <2a2>	retq
412 :   %148 = load i1* %FPU_X_val, !mcsema_real_eip !9 :          <2a2>	retq
413 :   store i1 %148, i1* %FPU_X, align 1, !mcsema_real_eip !9 :          <2a2>	retq
414 :   %149 = load i2* %FPU_RC_val, !mcsema_real_eip !9 :          <2a2>	retq
415 :   store i2 %149, i2* %FPU_RC, align 1, !mcsema_real_eip !9 :          <2a2>	retq
416 :   %150 = load i2* %FPU_PC_val, !mcsema_real_eip !9 :          <2a2>	retq
417 :   store i2 %150, i2* %FPU_PC, align 1, !mcsema_real_eip !9 :          <2a2>	retq
418 :   %151 = load i1* %FPU_PM_val, !mcsema_real_eip !9 :          <2a2>	retq
419 :   store i1 %151, i1* %FPU_PM, align 1, !mcsema_real_eip !9 :          <2a2>	retq
420 :   %152 = load i1* %FPU_UM_val, !mcsema_real_eip !9 :          <2a2>	retq
421 :   store i1 %152, i1* %FPU_UM, align 1, !mcsema_real_eip !9 :          <2a2>	retq
422 :   %153 = load i1* %FPU_OM_val, !mcsema_real_eip !9 :          <2a2>	retq
423 :   store i1 %153, i1* %FPU_OM, align 1, !mcsema_real_eip !9 :          <2a2>	retq
424 :   %154 = load i1* %FPU_ZM_val, !mcsema_real_eip !9 :          <2a2>	retq
425 :   store i1 %154, i1* %FPU_ZM, align 1, !mcsema_real_eip !9 :          <2a2>	retq
426 :   %155 = load i1* %FPU_DM_val, !mcsema_real_eip !9 :          <2a2>	retq
427 :   store i1 %155, i1* %FPU_DM, align 1, !mcsema_real_eip !9 :          <2a2>	retq
428 :   %156 = load i1* %FPU_IM_val, !mcsema_real_eip !9 :          <2a2>	retq
429 :   store i1 %156, i1* %FPU_IM, align 1, !mcsema_real_eip !9 :          <2a2>	retq

430 :   %157 = load i64* %53, align 4 : NIL
431 :   store i64 %157, i64* %52, align 4 : NIL

432 :   %158 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !9 :          <2a2>	retq
433 :   store i16 %158, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !9 :          <2a2>	retq
434 :   %159 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !9 :          <2a2>	retq
435 :   store i64 %159, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !9 :          <2a2>	retq
436 :   %160 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !9 :          <2a2>	retq
437 :   store i16 %160, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !9 :          <2a2>	retq
438 :   %161 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !9 :          <2a2>	retq
439 :   store i64 %161, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !9 :          <2a2>	retq
440 :   %162 = load i128* %XMM0_val, !mcsema_real_eip !9 :          <2a2>	retq
441 :   store i128 %162, i128* %XMM0, align 1, !mcsema_real_eip !9 :          <2a2>	retq
442 :   %163 = load i128* %XMM1_val, !mcsema_real_eip !9 :          <2a2>	retq
443 :   store i128 %163, i128* %XMM1, align 1, !mcsema_real_eip !9 :          <2a2>	retq
444 :   %164 = load i128* %XMM2_val, !mcsema_real_eip !9 :          <2a2>	retq
445 :   store i128 %164, i128* %XMM2, align 1, !mcsema_real_eip !9 :          <2a2>	retq
446 :   %165 = load i128* %XMM3_val, !mcsema_real_eip !9 :          <2a2>	retq
447 :   store i128 %165, i128* %XMM3, align 1, !mcsema_real_eip !9 :          <2a2>	retq
448 :   %166 = load i128* %XMM4_val, !mcsema_real_eip !9 :          <2a2>	retq
449 :   store i128 %166, i128* %XMM4, align 1, !mcsema_real_eip !9 :          <2a2>	retq
450 :   %167 = load i128* %XMM5_val, !mcsema_real_eip !9 :          <2a2>	retq
451 :   store i128 %167, i128* %XMM5, align 1, !mcsema_real_eip !9 :          <2a2>	retq
452 :   %168 = load i128* %XMM6_val, !mcsema_real_eip !9 :          <2a2>	retq
453 :   store i128 %168, i128* %XMM6, align 1, !mcsema_real_eip !9 :          <2a2>	retq
454 :   %169 = load i128* %XMM7_val, !mcsema_real_eip !9 :          <2a2>	retq
455 :   store i128 %169, i128* %XMM7, align 1, !mcsema_real_eip !9 :          <2a2>	retq
456 :   %170 = load i128* %XMM8_val, !mcsema_real_eip !9 :          <2a2>	retq
457 :   store i128 %170, i128* %XMM8, align 1, !mcsema_real_eip !9 :          <2a2>	retq
458 :   %171 = load i128* %XMM9_val, !mcsema_real_eip !9 :          <2a2>	retq
459 :   store i128 %171, i128* %XMM9, align 1, !mcsema_real_eip !9 :          <2a2>	retq
460 :   %172 = load i128* %XMM10_val, !mcsema_real_eip !9 :          <2a2>	retq
461 :   store i128 %172, i128* %XMM10, align 1, !mcsema_real_eip !9 :          <2a2>	retq
462 :   %173 = load i128* %XMM11_val, !mcsema_real_eip !9 :          <2a2>	retq
463 :   store i128 %173, i128* %XMM11, align 1, !mcsema_real_eip !9 :          <2a2>	retq
464 :   %174 = load i128* %XMM12_val, !mcsema_real_eip !9 :          <2a2>	retq
465 :   store i128 %174, i128* %XMM12, align 1, !mcsema_real_eip !9 :          <2a2>	retq
466 :   %175 = load i128* %XMM13_val, !mcsema_real_eip !9 :          <2a2>	retq
467 :   store i128 %175, i128* %XMM13, align 1, !mcsema_real_eip !9 :          <2a2>	retq
468 :   %176 = load i128* %XMM14_val, !mcsema_real_eip !9 :          <2a2>	retq
469 :   store i128 %176, i128* %XMM14, align 1, !mcsema_real_eip !9 :          <2a2>	retq
470 :   %177 = load i128* %XMM15_val, !mcsema_real_eip !9 :          <2a2>	retq
471 :   store i128 %177, i128* %XMM15, align 1, !mcsema_real_eip !9 :          <2a2>	retq
472 :   %178 = load i64* %STACK_BASE_val, !mcsema_real_eip !9 :          <2a2>	retq
473 :   store i64 %178, i64* %STACK_BASE, align 1, !mcsema_real_eip !9 :          <2a2>	retq
474 :   %179 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !9 :          <2a2>	retq
475 :   store i64 %179, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !9 :          <2a2>	retq
476 :   ret void, !mcsema_real_eip !9 :          <2a2>	retq
========================================================
Source line mapping for function: sub_1fe
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi
288 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 309), i64* %RDI_val, !mcsema_real_eip !2 :          <1fe>	movabsq	$0, %rdi

289 :   %77 = load i64* %RSI_val, !mcsema_real_eip !3 :          <20a>	callq	0
290 :   %78 = load i64* %RDX_val, !mcsema_real_eip !3 :          <20a>	callq	0
291 :   %79 = load i64* %RCX_val, !mcsema_real_eip !3 :          <20a>	callq	0
292 :   %80 = tail call x86_64_sysvcc i64 @printf(i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 309), i64 %77, i64 %78, i64 %79), !mcsema_real_eip !3 :          <20a>	callq	0

293 :   %81 = load i64* %RBP_val, !mcsema_real_eip !4 :          <20f>	movl	%eax, -112(%rbp)
294 :   %82 = add i64 %81, -112, !mcsema_real_eip !4 :          <20f>	movl	%eax, -112(%rbp)
295 :   %83 = inttoptr i64 %82 to i64*, !mcsema_real_eip !4 :          <20f>	movl	%eax, -112(%rbp)
296 :   %84 = trunc i64 %80 to i32, !mcsema_real_eip !4 :          <20f>	movl	%eax, -112(%rbp)

297 :   %85 = bitcast i64* %83 to i32* : NIL

298 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <20f>	movl	%eax, -112(%rbp)

299 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <295>	movl	$0, %eax

300 :   %86 = load i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

301 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %86, i64 144) : NIL
302 :   %87 = extractvalue { i64, i1 } %uadd, 0 : NIL

303 :   %88 = xor i64 %87, %86, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

304 :   %89 = and i64 %88, 16 : NIL
305 :   %90 = icmp eq i64 %89, 0 : NIL

306 :   store i1 %90, i1* %AF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

307 :   %91 = icmp slt i64 %87, 0 : NIL

308 :   store i1 %91, i1* %SF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
309 :   %92 = icmp eq i64 %87, 0, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
310 :   store i1 %92, i1* %ZF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
311 :   %93 = xor i64 %86, -9223372036854775808, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
312 :   %94 = and i64 %88, %93, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

313 :   %95 = icmp slt i64 %94, 0 : NIL

314 :   store i1 %95, i1* %OF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
315 :   %96 = trunc i64 %87 to i8, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
316 :   %97 = tail call i8 @llvm.ctpop.i8(i8 %96), !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

317 :   %98 = and i8 %97, 1 : NIL
318 :   %99 = icmp eq i8 %98, 0 : NIL

319 :   store i1 %99, i1* %PF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

320 :   %100 = extractvalue { i64, i1 } %uadd, 1 : NIL

321 :   store i1 %100, i1* %CF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
322 :   store i64 %87, i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

323 :   %101 = inttoptr i64 %87 to i64*, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
324 :   %102 = load i64* %101, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
325 :   store i64 %102, i64* %RBP_val, !mcsema_real_eip !7 :          <2a1>	popq	%rbp

326 :   %103 = add i64 %87, 16, !mcsema_real_eip !8 :          <2a2>	retq
327 :   store i64 %103, i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
328 :   %104 = load i64* %RAX_val, !mcsema_real_eip !8 :          <2a2>	retq
329 :   store i64 %104, i64* %RAX, !mcsema_real_eip !8 :          <2a2>	retq
330 :   %105 = load i64* %RBX_val, !mcsema_real_eip !8 :          <2a2>	retq
331 :   store i64 %105, i64* %RBX, !mcsema_real_eip !8 :          <2a2>	retq
332 :   %106 = load i64* %RCX_val, !mcsema_real_eip !8 :          <2a2>	retq
333 :   store i64 %106, i64* %RCX, !mcsema_real_eip !8 :          <2a2>	retq
334 :   %107 = load i64* %RDX_val, !mcsema_real_eip !8 :          <2a2>	retq
335 :   store i64 %107, i64* %RDX, !mcsema_real_eip !8 :          <2a2>	retq
336 :   %108 = load i64* %RSI_val, !mcsema_real_eip !8 :          <2a2>	retq
337 :   store i64 %108, i64* %RSI, !mcsema_real_eip !8 :          <2a2>	retq
338 :   %109 = load i64* %RDI_val, !mcsema_real_eip !8 :          <2a2>	retq
339 :   store i64 %109, i64* %RDI, !mcsema_real_eip !8 :          <2a2>	retq
340 :   %110 = load i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
341 :   store i64 %110, i64* %RSP, !mcsema_real_eip !8 :          <2a2>	retq
342 :   %111 = load i64* %RBP_val, !mcsema_real_eip !8 :          <2a2>	retq
343 :   store i64 %111, i64* %RBP, !mcsema_real_eip !8 :          <2a2>	retq
344 :   %112 = load i64* %R8_val, !mcsema_real_eip !8 :          <2a2>	retq
345 :   store i64 %112, i64* %R8, !mcsema_real_eip !8 :          <2a2>	retq
346 :   %113 = load i64* %R9_val, !mcsema_real_eip !8 :          <2a2>	retq
347 :   store i64 %113, i64* %R9, !mcsema_real_eip !8 :          <2a2>	retq
348 :   %114 = load i64* %R10_val, !mcsema_real_eip !8 :          <2a2>	retq
349 :   store i64 %114, i64* %R10, !mcsema_real_eip !8 :          <2a2>	retq
350 :   %115 = load i64* %R11_val, !mcsema_real_eip !8 :          <2a2>	retq
351 :   store i64 %115, i64* %R11, !mcsema_real_eip !8 :          <2a2>	retq
352 :   %116 = load i64* %R12_val, !mcsema_real_eip !8 :          <2a2>	retq
353 :   store i64 %116, i64* %R12, !mcsema_real_eip !8 :          <2a2>	retq
354 :   %117 = load i64* %R13_val, !mcsema_real_eip !8 :          <2a2>	retq
355 :   store i64 %117, i64* %R13, !mcsema_real_eip !8 :          <2a2>	retq
356 :   %118 = load i64* %R14_val, !mcsema_real_eip !8 :          <2a2>	retq
357 :   store i64 %118, i64* %R14, !mcsema_real_eip !8 :          <2a2>	retq
358 :   %119 = load i64* %R15_val, !mcsema_real_eip !8 :          <2a2>	retq
359 :   store i64 %119, i64* %R15, !mcsema_real_eip !8 :          <2a2>	retq
360 :   %120 = load i64* %RIP_val, !mcsema_real_eip !8 :          <2a2>	retq
361 :   store i64 %120, i64* %RIP, !mcsema_real_eip !8 :          <2a2>	retq
362 :   %121 = load i1* %CF_val, !mcsema_real_eip !8 :          <2a2>	retq
363 :   store i1 %121, i1* %CF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
364 :   %122 = load i1* %PF_val, !mcsema_real_eip !8 :          <2a2>	retq
365 :   store i1 %122, i1* %PF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
366 :   %123 = load i1* %AF_val, !mcsema_real_eip !8 :          <2a2>	retq
367 :   store i1 %123, i1* %AF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
368 :   %124 = load i1* %ZF_val, !mcsema_real_eip !8 :          <2a2>	retq
369 :   store i1 %124, i1* %ZF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
370 :   %125 = load i1* %SF_val, !mcsema_real_eip !8 :          <2a2>	retq
371 :   store i1 %125, i1* %SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
372 :   %126 = load i1* %OF_val, !mcsema_real_eip !8 :          <2a2>	retq
373 :   store i1 %126, i1* %OF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
374 :   %127 = load i1* %DF_val, !mcsema_real_eip !8 :          <2a2>	retq
375 :   store i1 %127, i1* %DF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
376 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !8 :          <2a2>	retq
377 :   %128 = load i1* %FPU_B_val, !mcsema_real_eip !8 :          <2a2>	retq
378 :   store i1 %128, i1* %FPU_B, align 1, !mcsema_real_eip !8 :          <2a2>	retq
379 :   %129 = load i1* %FPU_C3_val, !mcsema_real_eip !8 :          <2a2>	retq
380 :   store i1 %129, i1* %FPU_C3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
381 :   %130 = load i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <2a2>	retq
382 :   store i3 %130, i3* %FPU_TOP, align 1, !mcsema_real_eip !8 :          <2a2>	retq
383 :   %131 = load i1* %FPU_C2_val, !mcsema_real_eip !8 :          <2a2>	retq
384 :   store i1 %131, i1* %FPU_C2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
385 :   %132 = load i1* %FPU_C1_val, !mcsema_real_eip !8 :          <2a2>	retq
386 :   store i1 %132, i1* %FPU_C1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
387 :   %133 = load i1* %FPU_C0_val, !mcsema_real_eip !8 :          <2a2>	retq
388 :   store i1 %133, i1* %FPU_C0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
389 :   %134 = load i1* %FPU_ES_val, !mcsema_real_eip !8 :          <2a2>	retq
390 :   store i1 %134, i1* %FPU_ES, align 1, !mcsema_real_eip !8 :          <2a2>	retq
391 :   %135 = load i1* %FPU_SF_val, !mcsema_real_eip !8 :          <2a2>	retq
392 :   store i1 %135, i1* %FPU_SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
393 :   %136 = load i1* %FPU_PE_val, !mcsema_real_eip !8 :          <2a2>	retq
394 :   store i1 %136, i1* %FPU_PE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
395 :   %137 = load i1* %FPU_UE_val, !mcsema_real_eip !8 :          <2a2>	retq
396 :   store i1 %137, i1* %FPU_UE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
397 :   %138 = load i1* %FPU_OE_val, !mcsema_real_eip !8 :          <2a2>	retq
398 :   store i1 %138, i1* %FPU_OE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
399 :   %139 = load i1* %FPU_ZE_val, !mcsema_real_eip !8 :          <2a2>	retq
400 :   store i1 %139, i1* %FPU_ZE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
401 :   %140 = load i1* %FPU_DE_val, !mcsema_real_eip !8 :          <2a2>	retq
402 :   store i1 %140, i1* %FPU_DE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
403 :   %141 = load i1* %FPU_IE_val, !mcsema_real_eip !8 :          <2a2>	retq
404 :   store i1 %141, i1* %FPU_IE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
405 :   %142 = load i1* %FPU_X_val, !mcsema_real_eip !8 :          <2a2>	retq
406 :   store i1 %142, i1* %FPU_X, align 1, !mcsema_real_eip !8 :          <2a2>	retq
407 :   %143 = load i2* %FPU_RC_val, !mcsema_real_eip !8 :          <2a2>	retq
408 :   store i2 %143, i2* %FPU_RC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
409 :   %144 = load i2* %FPU_PC_val, !mcsema_real_eip !8 :          <2a2>	retq
410 :   store i2 %144, i2* %FPU_PC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
411 :   %145 = load i1* %FPU_PM_val, !mcsema_real_eip !8 :          <2a2>	retq
412 :   store i1 %145, i1* %FPU_PM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
413 :   %146 = load i1* %FPU_UM_val, !mcsema_real_eip !8 :          <2a2>	retq
414 :   store i1 %146, i1* %FPU_UM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
415 :   %147 = load i1* %FPU_OM_val, !mcsema_real_eip !8 :          <2a2>	retq
416 :   store i1 %147, i1* %FPU_OM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
417 :   %148 = load i1* %FPU_ZM_val, !mcsema_real_eip !8 :          <2a2>	retq
418 :   store i1 %148, i1* %FPU_ZM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
419 :   %149 = load i1* %FPU_DM_val, !mcsema_real_eip !8 :          <2a2>	retq
420 :   store i1 %149, i1* %FPU_DM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
421 :   %150 = load i1* %FPU_IM_val, !mcsema_real_eip !8 :          <2a2>	retq
422 :   store i1 %150, i1* %FPU_IM, align 1, !mcsema_real_eip !8 :          <2a2>	retq

423 :   %151 = load i64* %53, align 4 : NIL
424 :   store i64 %151, i64* %52, align 4 : NIL

425 :   %152 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
426 :   store i16 %152, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
427 :   %153 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
428 :   store i64 %153, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
429 :   %154 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
430 :   store i16 %154, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
431 :   %155 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
432 :   store i64 %155, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
433 :   %156 = load i128* %XMM0_val, !mcsema_real_eip !8 :          <2a2>	retq
434 :   store i128 %156, i128* %XMM0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
435 :   %157 = load i128* %XMM1_val, !mcsema_real_eip !8 :          <2a2>	retq
436 :   store i128 %157, i128* %XMM1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
437 :   %158 = load i128* %XMM2_val, !mcsema_real_eip !8 :          <2a2>	retq
438 :   store i128 %158, i128* %XMM2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
439 :   %159 = load i128* %XMM3_val, !mcsema_real_eip !8 :          <2a2>	retq
440 :   store i128 %159, i128* %XMM3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
441 :   %160 = load i128* %XMM4_val, !mcsema_real_eip !8 :          <2a2>	retq
442 :   store i128 %160, i128* %XMM4, align 1, !mcsema_real_eip !8 :          <2a2>	retq
443 :   %161 = load i128* %XMM5_val, !mcsema_real_eip !8 :          <2a2>	retq
444 :   store i128 %161, i128* %XMM5, align 1, !mcsema_real_eip !8 :          <2a2>	retq
445 :   %162 = load i128* %XMM6_val, !mcsema_real_eip !8 :          <2a2>	retq
446 :   store i128 %162, i128* %XMM6, align 1, !mcsema_real_eip !8 :          <2a2>	retq
447 :   %163 = load i128* %XMM7_val, !mcsema_real_eip !8 :          <2a2>	retq
448 :   store i128 %163, i128* %XMM7, align 1, !mcsema_real_eip !8 :          <2a2>	retq
449 :   %164 = load i128* %XMM8_val, !mcsema_real_eip !8 :          <2a2>	retq
450 :   store i128 %164, i128* %XMM8, align 1, !mcsema_real_eip !8 :          <2a2>	retq
451 :   %165 = load i128* %XMM9_val, !mcsema_real_eip !8 :          <2a2>	retq
452 :   store i128 %165, i128* %XMM9, align 1, !mcsema_real_eip !8 :          <2a2>	retq
453 :   %166 = load i128* %XMM10_val, !mcsema_real_eip !8 :          <2a2>	retq
454 :   store i128 %166, i128* %XMM10, align 1, !mcsema_real_eip !8 :          <2a2>	retq
455 :   %167 = load i128* %XMM11_val, !mcsema_real_eip !8 :          <2a2>	retq
456 :   store i128 %167, i128* %XMM11, align 1, !mcsema_real_eip !8 :          <2a2>	retq
457 :   %168 = load i128* %XMM12_val, !mcsema_real_eip !8 :          <2a2>	retq
458 :   store i128 %168, i128* %XMM12, align 1, !mcsema_real_eip !8 :          <2a2>	retq
459 :   %169 = load i128* %XMM13_val, !mcsema_real_eip !8 :          <2a2>	retq
460 :   store i128 %169, i128* %XMM13, align 1, !mcsema_real_eip !8 :          <2a2>	retq
461 :   %170 = load i128* %XMM14_val, !mcsema_real_eip !8 :          <2a2>	retq
462 :   store i128 %170, i128* %XMM14, align 1, !mcsema_real_eip !8 :          <2a2>	retq
463 :   %171 = load i128* %XMM15_val, !mcsema_real_eip !8 :          <2a2>	retq
464 :   store i128 %171, i128* %XMM15, align 1, !mcsema_real_eip !8 :          <2a2>	retq
465 :   %172 = load i64* %STACK_BASE_val, !mcsema_real_eip !8 :          <2a2>	retq
466 :   store i64 %172, i64* %STACK_BASE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
467 :   %173 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !8 :          <2a2>	retq
468 :   store i64 %173, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !8 :          <2a2>	retq
469 :   ret void, !mcsema_real_eip !8 :          <2a2>	retq
========================================================
Source line mapping for function: sub_217
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi
288 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 337), i64* %RDI_val, !mcsema_real_eip !2 :          <217>	movabsq	$0, %rdi

289 :   %77 = load i64* %RSI_val, !mcsema_real_eip !3 :          <223>	callq	0
290 :   %78 = load i64* %RDX_val, !mcsema_real_eip !3 :          <223>	callq	0
291 :   %79 = load i64* %RCX_val, !mcsema_real_eip !3 :          <223>	callq	0
292 :   %80 = tail call x86_64_sysvcc i64 @printf(i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 337), i64 %77, i64 %78, i64 %79), !mcsema_real_eip !3 :          <223>	callq	0

293 :   %81 = load i64* %RBP_val, !mcsema_real_eip !4 :          <228>	movl	%eax, -116(%rbp)
294 :   %82 = add i64 %81, -116, !mcsema_real_eip !4 :          <228>	movl	%eax, -116(%rbp)
295 :   %83 = inttoptr i64 %82 to i64*, !mcsema_real_eip !4 :          <228>	movl	%eax, -116(%rbp)
296 :   %84 = trunc i64 %80 to i32, !mcsema_real_eip !4 :          <228>	movl	%eax, -116(%rbp)

297 :   %85 = bitcast i64* %83 to i32* : NIL

298 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <228>	movl	%eax, -116(%rbp)

299 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <295>	movl	$0, %eax

300 :   %86 = load i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

301 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %86, i64 144) : NIL
302 :   %87 = extractvalue { i64, i1 } %uadd, 0 : NIL

303 :   %88 = xor i64 %87, %86, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

304 :   %89 = and i64 %88, 16 : NIL
305 :   %90 = icmp eq i64 %89, 0 : NIL

306 :   store i1 %90, i1* %AF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

307 :   %91 = icmp slt i64 %87, 0 : NIL

308 :   store i1 %91, i1* %SF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
309 :   %92 = icmp eq i64 %87, 0, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
310 :   store i1 %92, i1* %ZF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
311 :   %93 = xor i64 %86, -9223372036854775808, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
312 :   %94 = and i64 %88, %93, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

313 :   %95 = icmp slt i64 %94, 0 : NIL

314 :   store i1 %95, i1* %OF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
315 :   %96 = trunc i64 %87 to i8, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
316 :   %97 = tail call i8 @llvm.ctpop.i8(i8 %96), !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

317 :   %98 = and i8 %97, 1 : NIL
318 :   %99 = icmp eq i8 %98, 0 : NIL

319 :   store i1 %99, i1* %PF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

320 :   %100 = extractvalue { i64, i1 } %uadd, 1 : NIL

321 :   store i1 %100, i1* %CF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
322 :   store i64 %87, i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

323 :   %101 = inttoptr i64 %87 to i64*, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
324 :   %102 = load i64* %101, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
325 :   store i64 %102, i64* %RBP_val, !mcsema_real_eip !7 :          <2a1>	popq	%rbp

326 :   %103 = add i64 %87, 16, !mcsema_real_eip !8 :          <2a2>	retq
327 :   store i64 %103, i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
328 :   %104 = load i64* %RAX_val, !mcsema_real_eip !8 :          <2a2>	retq
329 :   store i64 %104, i64* %RAX, !mcsema_real_eip !8 :          <2a2>	retq
330 :   %105 = load i64* %RBX_val, !mcsema_real_eip !8 :          <2a2>	retq
331 :   store i64 %105, i64* %RBX, !mcsema_real_eip !8 :          <2a2>	retq
332 :   %106 = load i64* %RCX_val, !mcsema_real_eip !8 :          <2a2>	retq
333 :   store i64 %106, i64* %RCX, !mcsema_real_eip !8 :          <2a2>	retq
334 :   %107 = load i64* %RDX_val, !mcsema_real_eip !8 :          <2a2>	retq
335 :   store i64 %107, i64* %RDX, !mcsema_real_eip !8 :          <2a2>	retq
336 :   %108 = load i64* %RSI_val, !mcsema_real_eip !8 :          <2a2>	retq
337 :   store i64 %108, i64* %RSI, !mcsema_real_eip !8 :          <2a2>	retq
338 :   %109 = load i64* %RDI_val, !mcsema_real_eip !8 :          <2a2>	retq
339 :   store i64 %109, i64* %RDI, !mcsema_real_eip !8 :          <2a2>	retq
340 :   %110 = load i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
341 :   store i64 %110, i64* %RSP, !mcsema_real_eip !8 :          <2a2>	retq
342 :   %111 = load i64* %RBP_val, !mcsema_real_eip !8 :          <2a2>	retq
343 :   store i64 %111, i64* %RBP, !mcsema_real_eip !8 :          <2a2>	retq
344 :   %112 = load i64* %R8_val, !mcsema_real_eip !8 :          <2a2>	retq
345 :   store i64 %112, i64* %R8, !mcsema_real_eip !8 :          <2a2>	retq
346 :   %113 = load i64* %R9_val, !mcsema_real_eip !8 :          <2a2>	retq
347 :   store i64 %113, i64* %R9, !mcsema_real_eip !8 :          <2a2>	retq
348 :   %114 = load i64* %R10_val, !mcsema_real_eip !8 :          <2a2>	retq
349 :   store i64 %114, i64* %R10, !mcsema_real_eip !8 :          <2a2>	retq
350 :   %115 = load i64* %R11_val, !mcsema_real_eip !8 :          <2a2>	retq
351 :   store i64 %115, i64* %R11, !mcsema_real_eip !8 :          <2a2>	retq
352 :   %116 = load i64* %R12_val, !mcsema_real_eip !8 :          <2a2>	retq
353 :   store i64 %116, i64* %R12, !mcsema_real_eip !8 :          <2a2>	retq
354 :   %117 = load i64* %R13_val, !mcsema_real_eip !8 :          <2a2>	retq
355 :   store i64 %117, i64* %R13, !mcsema_real_eip !8 :          <2a2>	retq
356 :   %118 = load i64* %R14_val, !mcsema_real_eip !8 :          <2a2>	retq
357 :   store i64 %118, i64* %R14, !mcsema_real_eip !8 :          <2a2>	retq
358 :   %119 = load i64* %R15_val, !mcsema_real_eip !8 :          <2a2>	retq
359 :   store i64 %119, i64* %R15, !mcsema_real_eip !8 :          <2a2>	retq
360 :   %120 = load i64* %RIP_val, !mcsema_real_eip !8 :          <2a2>	retq
361 :   store i64 %120, i64* %RIP, !mcsema_real_eip !8 :          <2a2>	retq
362 :   %121 = load i1* %CF_val, !mcsema_real_eip !8 :          <2a2>	retq
363 :   store i1 %121, i1* %CF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
364 :   %122 = load i1* %PF_val, !mcsema_real_eip !8 :          <2a2>	retq
365 :   store i1 %122, i1* %PF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
366 :   %123 = load i1* %AF_val, !mcsema_real_eip !8 :          <2a2>	retq
367 :   store i1 %123, i1* %AF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
368 :   %124 = load i1* %ZF_val, !mcsema_real_eip !8 :          <2a2>	retq
369 :   store i1 %124, i1* %ZF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
370 :   %125 = load i1* %SF_val, !mcsema_real_eip !8 :          <2a2>	retq
371 :   store i1 %125, i1* %SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
372 :   %126 = load i1* %OF_val, !mcsema_real_eip !8 :          <2a2>	retq
373 :   store i1 %126, i1* %OF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
374 :   %127 = load i1* %DF_val, !mcsema_real_eip !8 :          <2a2>	retq
375 :   store i1 %127, i1* %DF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
376 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !8 :          <2a2>	retq
377 :   %128 = load i1* %FPU_B_val, !mcsema_real_eip !8 :          <2a2>	retq
378 :   store i1 %128, i1* %FPU_B, align 1, !mcsema_real_eip !8 :          <2a2>	retq
379 :   %129 = load i1* %FPU_C3_val, !mcsema_real_eip !8 :          <2a2>	retq
380 :   store i1 %129, i1* %FPU_C3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
381 :   %130 = load i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <2a2>	retq
382 :   store i3 %130, i3* %FPU_TOP, align 1, !mcsema_real_eip !8 :          <2a2>	retq
383 :   %131 = load i1* %FPU_C2_val, !mcsema_real_eip !8 :          <2a2>	retq
384 :   store i1 %131, i1* %FPU_C2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
385 :   %132 = load i1* %FPU_C1_val, !mcsema_real_eip !8 :          <2a2>	retq
386 :   store i1 %132, i1* %FPU_C1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
387 :   %133 = load i1* %FPU_C0_val, !mcsema_real_eip !8 :          <2a2>	retq
388 :   store i1 %133, i1* %FPU_C0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
389 :   %134 = load i1* %FPU_ES_val, !mcsema_real_eip !8 :          <2a2>	retq
390 :   store i1 %134, i1* %FPU_ES, align 1, !mcsema_real_eip !8 :          <2a2>	retq
391 :   %135 = load i1* %FPU_SF_val, !mcsema_real_eip !8 :          <2a2>	retq
392 :   store i1 %135, i1* %FPU_SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
393 :   %136 = load i1* %FPU_PE_val, !mcsema_real_eip !8 :          <2a2>	retq
394 :   store i1 %136, i1* %FPU_PE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
395 :   %137 = load i1* %FPU_UE_val, !mcsema_real_eip !8 :          <2a2>	retq
396 :   store i1 %137, i1* %FPU_UE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
397 :   %138 = load i1* %FPU_OE_val, !mcsema_real_eip !8 :          <2a2>	retq
398 :   store i1 %138, i1* %FPU_OE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
399 :   %139 = load i1* %FPU_ZE_val, !mcsema_real_eip !8 :          <2a2>	retq
400 :   store i1 %139, i1* %FPU_ZE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
401 :   %140 = load i1* %FPU_DE_val, !mcsema_real_eip !8 :          <2a2>	retq
402 :   store i1 %140, i1* %FPU_DE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
403 :   %141 = load i1* %FPU_IE_val, !mcsema_real_eip !8 :          <2a2>	retq
404 :   store i1 %141, i1* %FPU_IE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
405 :   %142 = load i1* %FPU_X_val, !mcsema_real_eip !8 :          <2a2>	retq
406 :   store i1 %142, i1* %FPU_X, align 1, !mcsema_real_eip !8 :          <2a2>	retq
407 :   %143 = load i2* %FPU_RC_val, !mcsema_real_eip !8 :          <2a2>	retq
408 :   store i2 %143, i2* %FPU_RC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
409 :   %144 = load i2* %FPU_PC_val, !mcsema_real_eip !8 :          <2a2>	retq
410 :   store i2 %144, i2* %FPU_PC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
411 :   %145 = load i1* %FPU_PM_val, !mcsema_real_eip !8 :          <2a2>	retq
412 :   store i1 %145, i1* %FPU_PM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
413 :   %146 = load i1* %FPU_UM_val, !mcsema_real_eip !8 :          <2a2>	retq
414 :   store i1 %146, i1* %FPU_UM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
415 :   %147 = load i1* %FPU_OM_val, !mcsema_real_eip !8 :          <2a2>	retq
416 :   store i1 %147, i1* %FPU_OM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
417 :   %148 = load i1* %FPU_ZM_val, !mcsema_real_eip !8 :          <2a2>	retq
418 :   store i1 %148, i1* %FPU_ZM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
419 :   %149 = load i1* %FPU_DM_val, !mcsema_real_eip !8 :          <2a2>	retq
420 :   store i1 %149, i1* %FPU_DM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
421 :   %150 = load i1* %FPU_IM_val, !mcsema_real_eip !8 :          <2a2>	retq
422 :   store i1 %150, i1* %FPU_IM, align 1, !mcsema_real_eip !8 :          <2a2>	retq

423 :   %151 = load i64* %53, align 4 : NIL
424 :   store i64 %151, i64* %52, align 4 : NIL

425 :   %152 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
426 :   store i16 %152, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
427 :   %153 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
428 :   store i64 %153, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
429 :   %154 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
430 :   store i16 %154, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
431 :   %155 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
432 :   store i64 %155, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
433 :   %156 = load i128* %XMM0_val, !mcsema_real_eip !8 :          <2a2>	retq
434 :   store i128 %156, i128* %XMM0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
435 :   %157 = load i128* %XMM1_val, !mcsema_real_eip !8 :          <2a2>	retq
436 :   store i128 %157, i128* %XMM1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
437 :   %158 = load i128* %XMM2_val, !mcsema_real_eip !8 :          <2a2>	retq
438 :   store i128 %158, i128* %XMM2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
439 :   %159 = load i128* %XMM3_val, !mcsema_real_eip !8 :          <2a2>	retq
440 :   store i128 %159, i128* %XMM3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
441 :   %160 = load i128* %XMM4_val, !mcsema_real_eip !8 :          <2a2>	retq
442 :   store i128 %160, i128* %XMM4, align 1, !mcsema_real_eip !8 :          <2a2>	retq
443 :   %161 = load i128* %XMM5_val, !mcsema_real_eip !8 :          <2a2>	retq
444 :   store i128 %161, i128* %XMM5, align 1, !mcsema_real_eip !8 :          <2a2>	retq
445 :   %162 = load i128* %XMM6_val, !mcsema_real_eip !8 :          <2a2>	retq
446 :   store i128 %162, i128* %XMM6, align 1, !mcsema_real_eip !8 :          <2a2>	retq
447 :   %163 = load i128* %XMM7_val, !mcsema_real_eip !8 :          <2a2>	retq
448 :   store i128 %163, i128* %XMM7, align 1, !mcsema_real_eip !8 :          <2a2>	retq
449 :   %164 = load i128* %XMM8_val, !mcsema_real_eip !8 :          <2a2>	retq
450 :   store i128 %164, i128* %XMM8, align 1, !mcsema_real_eip !8 :          <2a2>	retq
451 :   %165 = load i128* %XMM9_val, !mcsema_real_eip !8 :          <2a2>	retq
452 :   store i128 %165, i128* %XMM9, align 1, !mcsema_real_eip !8 :          <2a2>	retq
453 :   %166 = load i128* %XMM10_val, !mcsema_real_eip !8 :          <2a2>	retq
454 :   store i128 %166, i128* %XMM10, align 1, !mcsema_real_eip !8 :          <2a2>	retq
455 :   %167 = load i128* %XMM11_val, !mcsema_real_eip !8 :          <2a2>	retq
456 :   store i128 %167, i128* %XMM11, align 1, !mcsema_real_eip !8 :          <2a2>	retq
457 :   %168 = load i128* %XMM12_val, !mcsema_real_eip !8 :          <2a2>	retq
458 :   store i128 %168, i128* %XMM12, align 1, !mcsema_real_eip !8 :          <2a2>	retq
459 :   %169 = load i128* %XMM13_val, !mcsema_real_eip !8 :          <2a2>	retq
460 :   store i128 %169, i128* %XMM13, align 1, !mcsema_real_eip !8 :          <2a2>	retq
461 :   %170 = load i128* %XMM14_val, !mcsema_real_eip !8 :          <2a2>	retq
462 :   store i128 %170, i128* %XMM14, align 1, !mcsema_real_eip !8 :          <2a2>	retq
463 :   %171 = load i128* %XMM15_val, !mcsema_real_eip !8 :          <2a2>	retq
464 :   store i128 %171, i128* %XMM15, align 1, !mcsema_real_eip !8 :          <2a2>	retq
465 :   %172 = load i64* %STACK_BASE_val, !mcsema_real_eip !8 :          <2a2>	retq
466 :   store i64 %172, i64* %STACK_BASE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
467 :   %173 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !8 :          <2a2>	retq
468 :   store i64 %173, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !8 :          <2a2>	retq
469 :   ret void, !mcsema_real_eip !8 :          <2a2>	retq
========================================================
Source line mapping for function: sub_230
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi
288 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 365), i64* %RDI_val, !mcsema_real_eip !2 :          <230>	movabsq	$0, %rdi

289 :   %77 = load i64* %RSI_val, !mcsema_real_eip !3 :          <23c>	callq	0
290 :   %78 = load i64* %RDX_val, !mcsema_real_eip !3 :          <23c>	callq	0
291 :   %79 = load i64* %RCX_val, !mcsema_real_eip !3 :          <23c>	callq	0
292 :   %80 = tail call x86_64_sysvcc i64 @printf(i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 365), i64 %77, i64 %78, i64 %79), !mcsema_real_eip !3 :          <23c>	callq	0

293 :   %81 = load i64* %RBP_val, !mcsema_real_eip !4 :          <241>	movl	%eax, -120(%rbp)
294 :   %82 = add i64 %81, -120, !mcsema_real_eip !4 :          <241>	movl	%eax, -120(%rbp)
295 :   %83 = inttoptr i64 %82 to i64*, !mcsema_real_eip !4 :          <241>	movl	%eax, -120(%rbp)
296 :   %84 = trunc i64 %80 to i32, !mcsema_real_eip !4 :          <241>	movl	%eax, -120(%rbp)

297 :   %85 = bitcast i64* %83 to i32* : NIL

298 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <241>	movl	%eax, -120(%rbp)

299 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <295>	movl	$0, %eax

300 :   %86 = load i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

301 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %86, i64 144) : NIL
302 :   %87 = extractvalue { i64, i1 } %uadd, 0 : NIL

303 :   %88 = xor i64 %87, %86, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

304 :   %89 = and i64 %88, 16 : NIL
305 :   %90 = icmp eq i64 %89, 0 : NIL

306 :   store i1 %90, i1* %AF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

307 :   %91 = icmp slt i64 %87, 0 : NIL

308 :   store i1 %91, i1* %SF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
309 :   %92 = icmp eq i64 %87, 0, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
310 :   store i1 %92, i1* %ZF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
311 :   %93 = xor i64 %86, -9223372036854775808, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
312 :   %94 = and i64 %88, %93, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

313 :   %95 = icmp slt i64 %94, 0 : NIL

314 :   store i1 %95, i1* %OF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
315 :   %96 = trunc i64 %87 to i8, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
316 :   %97 = tail call i8 @llvm.ctpop.i8(i8 %96), !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

317 :   %98 = and i8 %97, 1 : NIL
318 :   %99 = icmp eq i8 %98, 0 : NIL

319 :   store i1 %99, i1* %PF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

320 :   %100 = extractvalue { i64, i1 } %uadd, 1 : NIL

321 :   store i1 %100, i1* %CF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
322 :   store i64 %87, i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

323 :   %101 = inttoptr i64 %87 to i64*, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
324 :   %102 = load i64* %101, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
325 :   store i64 %102, i64* %RBP_val, !mcsema_real_eip !7 :          <2a1>	popq	%rbp

326 :   %103 = add i64 %87, 16, !mcsema_real_eip !8 :          <2a2>	retq
327 :   store i64 %103, i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
328 :   %104 = load i64* %RAX_val, !mcsema_real_eip !8 :          <2a2>	retq
329 :   store i64 %104, i64* %RAX, !mcsema_real_eip !8 :          <2a2>	retq
330 :   %105 = load i64* %RBX_val, !mcsema_real_eip !8 :          <2a2>	retq
331 :   store i64 %105, i64* %RBX, !mcsema_real_eip !8 :          <2a2>	retq
332 :   %106 = load i64* %RCX_val, !mcsema_real_eip !8 :          <2a2>	retq
333 :   store i64 %106, i64* %RCX, !mcsema_real_eip !8 :          <2a2>	retq
334 :   %107 = load i64* %RDX_val, !mcsema_real_eip !8 :          <2a2>	retq
335 :   store i64 %107, i64* %RDX, !mcsema_real_eip !8 :          <2a2>	retq
336 :   %108 = load i64* %RSI_val, !mcsema_real_eip !8 :          <2a2>	retq
337 :   store i64 %108, i64* %RSI, !mcsema_real_eip !8 :          <2a2>	retq
338 :   %109 = load i64* %RDI_val, !mcsema_real_eip !8 :          <2a2>	retq
339 :   store i64 %109, i64* %RDI, !mcsema_real_eip !8 :          <2a2>	retq
340 :   %110 = load i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
341 :   store i64 %110, i64* %RSP, !mcsema_real_eip !8 :          <2a2>	retq
342 :   %111 = load i64* %RBP_val, !mcsema_real_eip !8 :          <2a2>	retq
343 :   store i64 %111, i64* %RBP, !mcsema_real_eip !8 :          <2a2>	retq
344 :   %112 = load i64* %R8_val, !mcsema_real_eip !8 :          <2a2>	retq
345 :   store i64 %112, i64* %R8, !mcsema_real_eip !8 :          <2a2>	retq
346 :   %113 = load i64* %R9_val, !mcsema_real_eip !8 :          <2a2>	retq
347 :   store i64 %113, i64* %R9, !mcsema_real_eip !8 :          <2a2>	retq
348 :   %114 = load i64* %R10_val, !mcsema_real_eip !8 :          <2a2>	retq
349 :   store i64 %114, i64* %R10, !mcsema_real_eip !8 :          <2a2>	retq
350 :   %115 = load i64* %R11_val, !mcsema_real_eip !8 :          <2a2>	retq
351 :   store i64 %115, i64* %R11, !mcsema_real_eip !8 :          <2a2>	retq
352 :   %116 = load i64* %R12_val, !mcsema_real_eip !8 :          <2a2>	retq
353 :   store i64 %116, i64* %R12, !mcsema_real_eip !8 :          <2a2>	retq
354 :   %117 = load i64* %R13_val, !mcsema_real_eip !8 :          <2a2>	retq
355 :   store i64 %117, i64* %R13, !mcsema_real_eip !8 :          <2a2>	retq
356 :   %118 = load i64* %R14_val, !mcsema_real_eip !8 :          <2a2>	retq
357 :   store i64 %118, i64* %R14, !mcsema_real_eip !8 :          <2a2>	retq
358 :   %119 = load i64* %R15_val, !mcsema_real_eip !8 :          <2a2>	retq
359 :   store i64 %119, i64* %R15, !mcsema_real_eip !8 :          <2a2>	retq
360 :   %120 = load i64* %RIP_val, !mcsema_real_eip !8 :          <2a2>	retq
361 :   store i64 %120, i64* %RIP, !mcsema_real_eip !8 :          <2a2>	retq
362 :   %121 = load i1* %CF_val, !mcsema_real_eip !8 :          <2a2>	retq
363 :   store i1 %121, i1* %CF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
364 :   %122 = load i1* %PF_val, !mcsema_real_eip !8 :          <2a2>	retq
365 :   store i1 %122, i1* %PF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
366 :   %123 = load i1* %AF_val, !mcsema_real_eip !8 :          <2a2>	retq
367 :   store i1 %123, i1* %AF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
368 :   %124 = load i1* %ZF_val, !mcsema_real_eip !8 :          <2a2>	retq
369 :   store i1 %124, i1* %ZF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
370 :   %125 = load i1* %SF_val, !mcsema_real_eip !8 :          <2a2>	retq
371 :   store i1 %125, i1* %SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
372 :   %126 = load i1* %OF_val, !mcsema_real_eip !8 :          <2a2>	retq
373 :   store i1 %126, i1* %OF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
374 :   %127 = load i1* %DF_val, !mcsema_real_eip !8 :          <2a2>	retq
375 :   store i1 %127, i1* %DF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
376 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !8 :          <2a2>	retq
377 :   %128 = load i1* %FPU_B_val, !mcsema_real_eip !8 :          <2a2>	retq
378 :   store i1 %128, i1* %FPU_B, align 1, !mcsema_real_eip !8 :          <2a2>	retq
379 :   %129 = load i1* %FPU_C3_val, !mcsema_real_eip !8 :          <2a2>	retq
380 :   store i1 %129, i1* %FPU_C3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
381 :   %130 = load i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <2a2>	retq
382 :   store i3 %130, i3* %FPU_TOP, align 1, !mcsema_real_eip !8 :          <2a2>	retq
383 :   %131 = load i1* %FPU_C2_val, !mcsema_real_eip !8 :          <2a2>	retq
384 :   store i1 %131, i1* %FPU_C2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
385 :   %132 = load i1* %FPU_C1_val, !mcsema_real_eip !8 :          <2a2>	retq
386 :   store i1 %132, i1* %FPU_C1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
387 :   %133 = load i1* %FPU_C0_val, !mcsema_real_eip !8 :          <2a2>	retq
388 :   store i1 %133, i1* %FPU_C0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
389 :   %134 = load i1* %FPU_ES_val, !mcsema_real_eip !8 :          <2a2>	retq
390 :   store i1 %134, i1* %FPU_ES, align 1, !mcsema_real_eip !8 :          <2a2>	retq
391 :   %135 = load i1* %FPU_SF_val, !mcsema_real_eip !8 :          <2a2>	retq
392 :   store i1 %135, i1* %FPU_SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
393 :   %136 = load i1* %FPU_PE_val, !mcsema_real_eip !8 :          <2a2>	retq
394 :   store i1 %136, i1* %FPU_PE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
395 :   %137 = load i1* %FPU_UE_val, !mcsema_real_eip !8 :          <2a2>	retq
396 :   store i1 %137, i1* %FPU_UE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
397 :   %138 = load i1* %FPU_OE_val, !mcsema_real_eip !8 :          <2a2>	retq
398 :   store i1 %138, i1* %FPU_OE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
399 :   %139 = load i1* %FPU_ZE_val, !mcsema_real_eip !8 :          <2a2>	retq
400 :   store i1 %139, i1* %FPU_ZE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
401 :   %140 = load i1* %FPU_DE_val, !mcsema_real_eip !8 :          <2a2>	retq
402 :   store i1 %140, i1* %FPU_DE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
403 :   %141 = load i1* %FPU_IE_val, !mcsema_real_eip !8 :          <2a2>	retq
404 :   store i1 %141, i1* %FPU_IE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
405 :   %142 = load i1* %FPU_X_val, !mcsema_real_eip !8 :          <2a2>	retq
406 :   store i1 %142, i1* %FPU_X, align 1, !mcsema_real_eip !8 :          <2a2>	retq
407 :   %143 = load i2* %FPU_RC_val, !mcsema_real_eip !8 :          <2a2>	retq
408 :   store i2 %143, i2* %FPU_RC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
409 :   %144 = load i2* %FPU_PC_val, !mcsema_real_eip !8 :          <2a2>	retq
410 :   store i2 %144, i2* %FPU_PC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
411 :   %145 = load i1* %FPU_PM_val, !mcsema_real_eip !8 :          <2a2>	retq
412 :   store i1 %145, i1* %FPU_PM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
413 :   %146 = load i1* %FPU_UM_val, !mcsema_real_eip !8 :          <2a2>	retq
414 :   store i1 %146, i1* %FPU_UM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
415 :   %147 = load i1* %FPU_OM_val, !mcsema_real_eip !8 :          <2a2>	retq
416 :   store i1 %147, i1* %FPU_OM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
417 :   %148 = load i1* %FPU_ZM_val, !mcsema_real_eip !8 :          <2a2>	retq
418 :   store i1 %148, i1* %FPU_ZM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
419 :   %149 = load i1* %FPU_DM_val, !mcsema_real_eip !8 :          <2a2>	retq
420 :   store i1 %149, i1* %FPU_DM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
421 :   %150 = load i1* %FPU_IM_val, !mcsema_real_eip !8 :          <2a2>	retq
422 :   store i1 %150, i1* %FPU_IM, align 1, !mcsema_real_eip !8 :          <2a2>	retq

423 :   %151 = load i64* %53, align 4 : NIL
424 :   store i64 %151, i64* %52, align 4 : NIL

425 :   %152 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
426 :   store i16 %152, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
427 :   %153 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
428 :   store i64 %153, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
429 :   %154 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
430 :   store i16 %154, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
431 :   %155 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
432 :   store i64 %155, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
433 :   %156 = load i128* %XMM0_val, !mcsema_real_eip !8 :          <2a2>	retq
434 :   store i128 %156, i128* %XMM0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
435 :   %157 = load i128* %XMM1_val, !mcsema_real_eip !8 :          <2a2>	retq
436 :   store i128 %157, i128* %XMM1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
437 :   %158 = load i128* %XMM2_val, !mcsema_real_eip !8 :          <2a2>	retq
438 :   store i128 %158, i128* %XMM2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
439 :   %159 = load i128* %XMM3_val, !mcsema_real_eip !8 :          <2a2>	retq
440 :   store i128 %159, i128* %XMM3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
441 :   %160 = load i128* %XMM4_val, !mcsema_real_eip !8 :          <2a2>	retq
442 :   store i128 %160, i128* %XMM4, align 1, !mcsema_real_eip !8 :          <2a2>	retq
443 :   %161 = load i128* %XMM5_val, !mcsema_real_eip !8 :          <2a2>	retq
444 :   store i128 %161, i128* %XMM5, align 1, !mcsema_real_eip !8 :          <2a2>	retq
445 :   %162 = load i128* %XMM6_val, !mcsema_real_eip !8 :          <2a2>	retq
446 :   store i128 %162, i128* %XMM6, align 1, !mcsema_real_eip !8 :          <2a2>	retq
447 :   %163 = load i128* %XMM7_val, !mcsema_real_eip !8 :          <2a2>	retq
448 :   store i128 %163, i128* %XMM7, align 1, !mcsema_real_eip !8 :          <2a2>	retq
449 :   %164 = load i128* %XMM8_val, !mcsema_real_eip !8 :          <2a2>	retq
450 :   store i128 %164, i128* %XMM8, align 1, !mcsema_real_eip !8 :          <2a2>	retq
451 :   %165 = load i128* %XMM9_val, !mcsema_real_eip !8 :          <2a2>	retq
452 :   store i128 %165, i128* %XMM9, align 1, !mcsema_real_eip !8 :          <2a2>	retq
453 :   %166 = load i128* %XMM10_val, !mcsema_real_eip !8 :          <2a2>	retq
454 :   store i128 %166, i128* %XMM10, align 1, !mcsema_real_eip !8 :          <2a2>	retq
455 :   %167 = load i128* %XMM11_val, !mcsema_real_eip !8 :          <2a2>	retq
456 :   store i128 %167, i128* %XMM11, align 1, !mcsema_real_eip !8 :          <2a2>	retq
457 :   %168 = load i128* %XMM12_val, !mcsema_real_eip !8 :          <2a2>	retq
458 :   store i128 %168, i128* %XMM12, align 1, !mcsema_real_eip !8 :          <2a2>	retq
459 :   %169 = load i128* %XMM13_val, !mcsema_real_eip !8 :          <2a2>	retq
460 :   store i128 %169, i128* %XMM13, align 1, !mcsema_real_eip !8 :          <2a2>	retq
461 :   %170 = load i128* %XMM14_val, !mcsema_real_eip !8 :          <2a2>	retq
462 :   store i128 %170, i128* %XMM14, align 1, !mcsema_real_eip !8 :          <2a2>	retq
463 :   %171 = load i128* %XMM15_val, !mcsema_real_eip !8 :          <2a2>	retq
464 :   store i128 %171, i128* %XMM15, align 1, !mcsema_real_eip !8 :          <2a2>	retq
465 :   %172 = load i64* %STACK_BASE_val, !mcsema_real_eip !8 :          <2a2>	retq
466 :   store i64 %172, i64* %STACK_BASE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
467 :   %173 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !8 :          <2a2>	retq
468 :   store i64 %173, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !8 :          <2a2>	retq
469 :   ret void, !mcsema_real_eip !8 :          <2a2>	retq
========================================================
Source line mapping for function: sub_249
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi
288 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 393), i64* %RDI_val, !mcsema_real_eip !2 :          <249>	movabsq	$0, %rdi

289 :   %77 = load i64* %RSI_val, !mcsema_real_eip !3 :          <255>	callq	0
290 :   %78 = load i64* %RDX_val, !mcsema_real_eip !3 :          <255>	callq	0
291 :   %79 = load i64* %RCX_val, !mcsema_real_eip !3 :          <255>	callq	0
292 :   %80 = tail call x86_64_sysvcc i64 @printf(i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 393), i64 %77, i64 %78, i64 %79), !mcsema_real_eip !3 :          <255>	callq	0

293 :   %81 = load i64* %RBP_val, !mcsema_real_eip !4 :          <25a>	movl	%eax, -124(%rbp)
294 :   %82 = add i64 %81, -124, !mcsema_real_eip !4 :          <25a>	movl	%eax, -124(%rbp)
295 :   %83 = inttoptr i64 %82 to i64*, !mcsema_real_eip !4 :          <25a>	movl	%eax, -124(%rbp)
296 :   %84 = trunc i64 %80 to i32, !mcsema_real_eip !4 :          <25a>	movl	%eax, -124(%rbp)

297 :   %85 = bitcast i64* %83 to i32* : NIL

298 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <25a>	movl	%eax, -124(%rbp)

299 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <295>	movl	$0, %eax

300 :   %86 = load i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

301 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %86, i64 144) : NIL
302 :   %87 = extractvalue { i64, i1 } %uadd, 0 : NIL

303 :   %88 = xor i64 %87, %86, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

304 :   %89 = and i64 %88, 16 : NIL
305 :   %90 = icmp eq i64 %89, 0 : NIL

306 :   store i1 %90, i1* %AF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

307 :   %91 = icmp slt i64 %87, 0 : NIL

308 :   store i1 %91, i1* %SF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
309 :   %92 = icmp eq i64 %87, 0, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
310 :   store i1 %92, i1* %ZF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
311 :   %93 = xor i64 %86, -9223372036854775808, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
312 :   %94 = and i64 %88, %93, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

313 :   %95 = icmp slt i64 %94, 0 : NIL

314 :   store i1 %95, i1* %OF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
315 :   %96 = trunc i64 %87 to i8, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
316 :   %97 = tail call i8 @llvm.ctpop.i8(i8 %96), !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

317 :   %98 = and i8 %97, 1 : NIL
318 :   %99 = icmp eq i8 %98, 0 : NIL

319 :   store i1 %99, i1* %PF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

320 :   %100 = extractvalue { i64, i1 } %uadd, 1 : NIL

321 :   store i1 %100, i1* %CF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
322 :   store i64 %87, i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

323 :   %101 = inttoptr i64 %87 to i64*, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
324 :   %102 = load i64* %101, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
325 :   store i64 %102, i64* %RBP_val, !mcsema_real_eip !7 :          <2a1>	popq	%rbp

326 :   %103 = add i64 %87, 16, !mcsema_real_eip !8 :          <2a2>	retq
327 :   store i64 %103, i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
328 :   %104 = load i64* %RAX_val, !mcsema_real_eip !8 :          <2a2>	retq
329 :   store i64 %104, i64* %RAX, !mcsema_real_eip !8 :          <2a2>	retq
330 :   %105 = load i64* %RBX_val, !mcsema_real_eip !8 :          <2a2>	retq
331 :   store i64 %105, i64* %RBX, !mcsema_real_eip !8 :          <2a2>	retq
332 :   %106 = load i64* %RCX_val, !mcsema_real_eip !8 :          <2a2>	retq
333 :   store i64 %106, i64* %RCX, !mcsema_real_eip !8 :          <2a2>	retq
334 :   %107 = load i64* %RDX_val, !mcsema_real_eip !8 :          <2a2>	retq
335 :   store i64 %107, i64* %RDX, !mcsema_real_eip !8 :          <2a2>	retq
336 :   %108 = load i64* %RSI_val, !mcsema_real_eip !8 :          <2a2>	retq
337 :   store i64 %108, i64* %RSI, !mcsema_real_eip !8 :          <2a2>	retq
338 :   %109 = load i64* %RDI_val, !mcsema_real_eip !8 :          <2a2>	retq
339 :   store i64 %109, i64* %RDI, !mcsema_real_eip !8 :          <2a2>	retq
340 :   %110 = load i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
341 :   store i64 %110, i64* %RSP, !mcsema_real_eip !8 :          <2a2>	retq
342 :   %111 = load i64* %RBP_val, !mcsema_real_eip !8 :          <2a2>	retq
343 :   store i64 %111, i64* %RBP, !mcsema_real_eip !8 :          <2a2>	retq
344 :   %112 = load i64* %R8_val, !mcsema_real_eip !8 :          <2a2>	retq
345 :   store i64 %112, i64* %R8, !mcsema_real_eip !8 :          <2a2>	retq
346 :   %113 = load i64* %R9_val, !mcsema_real_eip !8 :          <2a2>	retq
347 :   store i64 %113, i64* %R9, !mcsema_real_eip !8 :          <2a2>	retq
348 :   %114 = load i64* %R10_val, !mcsema_real_eip !8 :          <2a2>	retq
349 :   store i64 %114, i64* %R10, !mcsema_real_eip !8 :          <2a2>	retq
350 :   %115 = load i64* %R11_val, !mcsema_real_eip !8 :          <2a2>	retq
351 :   store i64 %115, i64* %R11, !mcsema_real_eip !8 :          <2a2>	retq
352 :   %116 = load i64* %R12_val, !mcsema_real_eip !8 :          <2a2>	retq
353 :   store i64 %116, i64* %R12, !mcsema_real_eip !8 :          <2a2>	retq
354 :   %117 = load i64* %R13_val, !mcsema_real_eip !8 :          <2a2>	retq
355 :   store i64 %117, i64* %R13, !mcsema_real_eip !8 :          <2a2>	retq
356 :   %118 = load i64* %R14_val, !mcsema_real_eip !8 :          <2a2>	retq
357 :   store i64 %118, i64* %R14, !mcsema_real_eip !8 :          <2a2>	retq
358 :   %119 = load i64* %R15_val, !mcsema_real_eip !8 :          <2a2>	retq
359 :   store i64 %119, i64* %R15, !mcsema_real_eip !8 :          <2a2>	retq
360 :   %120 = load i64* %RIP_val, !mcsema_real_eip !8 :          <2a2>	retq
361 :   store i64 %120, i64* %RIP, !mcsema_real_eip !8 :          <2a2>	retq
362 :   %121 = load i1* %CF_val, !mcsema_real_eip !8 :          <2a2>	retq
363 :   store i1 %121, i1* %CF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
364 :   %122 = load i1* %PF_val, !mcsema_real_eip !8 :          <2a2>	retq
365 :   store i1 %122, i1* %PF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
366 :   %123 = load i1* %AF_val, !mcsema_real_eip !8 :          <2a2>	retq
367 :   store i1 %123, i1* %AF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
368 :   %124 = load i1* %ZF_val, !mcsema_real_eip !8 :          <2a2>	retq
369 :   store i1 %124, i1* %ZF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
370 :   %125 = load i1* %SF_val, !mcsema_real_eip !8 :          <2a2>	retq
371 :   store i1 %125, i1* %SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
372 :   %126 = load i1* %OF_val, !mcsema_real_eip !8 :          <2a2>	retq
373 :   store i1 %126, i1* %OF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
374 :   %127 = load i1* %DF_val, !mcsema_real_eip !8 :          <2a2>	retq
375 :   store i1 %127, i1* %DF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
376 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !8 :          <2a2>	retq
377 :   %128 = load i1* %FPU_B_val, !mcsema_real_eip !8 :          <2a2>	retq
378 :   store i1 %128, i1* %FPU_B, align 1, !mcsema_real_eip !8 :          <2a2>	retq
379 :   %129 = load i1* %FPU_C3_val, !mcsema_real_eip !8 :          <2a2>	retq
380 :   store i1 %129, i1* %FPU_C3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
381 :   %130 = load i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <2a2>	retq
382 :   store i3 %130, i3* %FPU_TOP, align 1, !mcsema_real_eip !8 :          <2a2>	retq
383 :   %131 = load i1* %FPU_C2_val, !mcsema_real_eip !8 :          <2a2>	retq
384 :   store i1 %131, i1* %FPU_C2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
385 :   %132 = load i1* %FPU_C1_val, !mcsema_real_eip !8 :          <2a2>	retq
386 :   store i1 %132, i1* %FPU_C1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
387 :   %133 = load i1* %FPU_C0_val, !mcsema_real_eip !8 :          <2a2>	retq
388 :   store i1 %133, i1* %FPU_C0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
389 :   %134 = load i1* %FPU_ES_val, !mcsema_real_eip !8 :          <2a2>	retq
390 :   store i1 %134, i1* %FPU_ES, align 1, !mcsema_real_eip !8 :          <2a2>	retq
391 :   %135 = load i1* %FPU_SF_val, !mcsema_real_eip !8 :          <2a2>	retq
392 :   store i1 %135, i1* %FPU_SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
393 :   %136 = load i1* %FPU_PE_val, !mcsema_real_eip !8 :          <2a2>	retq
394 :   store i1 %136, i1* %FPU_PE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
395 :   %137 = load i1* %FPU_UE_val, !mcsema_real_eip !8 :          <2a2>	retq
396 :   store i1 %137, i1* %FPU_UE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
397 :   %138 = load i1* %FPU_OE_val, !mcsema_real_eip !8 :          <2a2>	retq
398 :   store i1 %138, i1* %FPU_OE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
399 :   %139 = load i1* %FPU_ZE_val, !mcsema_real_eip !8 :          <2a2>	retq
400 :   store i1 %139, i1* %FPU_ZE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
401 :   %140 = load i1* %FPU_DE_val, !mcsema_real_eip !8 :          <2a2>	retq
402 :   store i1 %140, i1* %FPU_DE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
403 :   %141 = load i1* %FPU_IE_val, !mcsema_real_eip !8 :          <2a2>	retq
404 :   store i1 %141, i1* %FPU_IE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
405 :   %142 = load i1* %FPU_X_val, !mcsema_real_eip !8 :          <2a2>	retq
406 :   store i1 %142, i1* %FPU_X, align 1, !mcsema_real_eip !8 :          <2a2>	retq
407 :   %143 = load i2* %FPU_RC_val, !mcsema_real_eip !8 :          <2a2>	retq
408 :   store i2 %143, i2* %FPU_RC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
409 :   %144 = load i2* %FPU_PC_val, !mcsema_real_eip !8 :          <2a2>	retq
410 :   store i2 %144, i2* %FPU_PC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
411 :   %145 = load i1* %FPU_PM_val, !mcsema_real_eip !8 :          <2a2>	retq
412 :   store i1 %145, i1* %FPU_PM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
413 :   %146 = load i1* %FPU_UM_val, !mcsema_real_eip !8 :          <2a2>	retq
414 :   store i1 %146, i1* %FPU_UM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
415 :   %147 = load i1* %FPU_OM_val, !mcsema_real_eip !8 :          <2a2>	retq
416 :   store i1 %147, i1* %FPU_OM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
417 :   %148 = load i1* %FPU_ZM_val, !mcsema_real_eip !8 :          <2a2>	retq
418 :   store i1 %148, i1* %FPU_ZM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
419 :   %149 = load i1* %FPU_DM_val, !mcsema_real_eip !8 :          <2a2>	retq
420 :   store i1 %149, i1* %FPU_DM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
421 :   %150 = load i1* %FPU_IM_val, !mcsema_real_eip !8 :          <2a2>	retq
422 :   store i1 %150, i1* %FPU_IM, align 1, !mcsema_real_eip !8 :          <2a2>	retq

423 :   %151 = load i64* %53, align 4 : NIL
424 :   store i64 %151, i64* %52, align 4 : NIL

425 :   %152 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
426 :   store i16 %152, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
427 :   %153 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
428 :   store i64 %153, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
429 :   %154 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
430 :   store i16 %154, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
431 :   %155 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
432 :   store i64 %155, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
433 :   %156 = load i128* %XMM0_val, !mcsema_real_eip !8 :          <2a2>	retq
434 :   store i128 %156, i128* %XMM0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
435 :   %157 = load i128* %XMM1_val, !mcsema_real_eip !8 :          <2a2>	retq
436 :   store i128 %157, i128* %XMM1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
437 :   %158 = load i128* %XMM2_val, !mcsema_real_eip !8 :          <2a2>	retq
438 :   store i128 %158, i128* %XMM2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
439 :   %159 = load i128* %XMM3_val, !mcsema_real_eip !8 :          <2a2>	retq
440 :   store i128 %159, i128* %XMM3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
441 :   %160 = load i128* %XMM4_val, !mcsema_real_eip !8 :          <2a2>	retq
442 :   store i128 %160, i128* %XMM4, align 1, !mcsema_real_eip !8 :          <2a2>	retq
443 :   %161 = load i128* %XMM5_val, !mcsema_real_eip !8 :          <2a2>	retq
444 :   store i128 %161, i128* %XMM5, align 1, !mcsema_real_eip !8 :          <2a2>	retq
445 :   %162 = load i128* %XMM6_val, !mcsema_real_eip !8 :          <2a2>	retq
446 :   store i128 %162, i128* %XMM6, align 1, !mcsema_real_eip !8 :          <2a2>	retq
447 :   %163 = load i128* %XMM7_val, !mcsema_real_eip !8 :          <2a2>	retq
448 :   store i128 %163, i128* %XMM7, align 1, !mcsema_real_eip !8 :          <2a2>	retq
449 :   %164 = load i128* %XMM8_val, !mcsema_real_eip !8 :          <2a2>	retq
450 :   store i128 %164, i128* %XMM8, align 1, !mcsema_real_eip !8 :          <2a2>	retq
451 :   %165 = load i128* %XMM9_val, !mcsema_real_eip !8 :          <2a2>	retq
452 :   store i128 %165, i128* %XMM9, align 1, !mcsema_real_eip !8 :          <2a2>	retq
453 :   %166 = load i128* %XMM10_val, !mcsema_real_eip !8 :          <2a2>	retq
454 :   store i128 %166, i128* %XMM10, align 1, !mcsema_real_eip !8 :          <2a2>	retq
455 :   %167 = load i128* %XMM11_val, !mcsema_real_eip !8 :          <2a2>	retq
456 :   store i128 %167, i128* %XMM11, align 1, !mcsema_real_eip !8 :          <2a2>	retq
457 :   %168 = load i128* %XMM12_val, !mcsema_real_eip !8 :          <2a2>	retq
458 :   store i128 %168, i128* %XMM12, align 1, !mcsema_real_eip !8 :          <2a2>	retq
459 :   %169 = load i128* %XMM13_val, !mcsema_real_eip !8 :          <2a2>	retq
460 :   store i128 %169, i128* %XMM13, align 1, !mcsema_real_eip !8 :          <2a2>	retq
461 :   %170 = load i128* %XMM14_val, !mcsema_real_eip !8 :          <2a2>	retq
462 :   store i128 %170, i128* %XMM14, align 1, !mcsema_real_eip !8 :          <2a2>	retq
463 :   %171 = load i128* %XMM15_val, !mcsema_real_eip !8 :          <2a2>	retq
464 :   store i128 %171, i128* %XMM15, align 1, !mcsema_real_eip !8 :          <2a2>	retq
465 :   %172 = load i64* %STACK_BASE_val, !mcsema_real_eip !8 :          <2a2>	retq
466 :   store i64 %172, i64* %STACK_BASE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
467 :   %173 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !8 :          <2a2>	retq
468 :   store i64 %173, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !8 :          <2a2>	retq
469 :   ret void, !mcsema_real_eip !8 :          <2a2>	retq
========================================================
Source line mapping for function: sub_262
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi
288 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 421), i64* %RDI_val, !mcsema_real_eip !2 :          <262>	movabsq	$0, %rdi

289 :   %77 = load i64* %RSI_val, !mcsema_real_eip !3 :          <26e>	callq	0
290 :   %78 = load i64* %RDX_val, !mcsema_real_eip !3 :          <26e>	callq	0
291 :   %79 = load i64* %RCX_val, !mcsema_real_eip !3 :          <26e>	callq	0
292 :   %80 = tail call x86_64_sysvcc i64 @printf(i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 421), i64 %77, i64 %78, i64 %79), !mcsema_real_eip !3 :          <26e>	callq	0

293 :   %81 = load i64* %RBP_val, !mcsema_real_eip !4 :          <273>	movl	%eax, -128(%rbp)
294 :   %82 = add i64 %81, -128, !mcsema_real_eip !4 :          <273>	movl	%eax, -128(%rbp)
295 :   %83 = inttoptr i64 %82 to i64*, !mcsema_real_eip !4 :          <273>	movl	%eax, -128(%rbp)
296 :   %84 = trunc i64 %80 to i32, !mcsema_real_eip !4 :          <273>	movl	%eax, -128(%rbp)

297 :   %85 = bitcast i64* %83 to i32* : NIL

298 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <273>	movl	%eax, -128(%rbp)

299 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <295>	movl	$0, %eax

300 :   %86 = load i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

301 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %86, i64 144) : NIL
302 :   %87 = extractvalue { i64, i1 } %uadd, 0 : NIL

303 :   %88 = xor i64 %87, %86, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

304 :   %89 = and i64 %88, 16 : NIL
305 :   %90 = icmp eq i64 %89, 0 : NIL

306 :   store i1 %90, i1* %AF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

307 :   %91 = icmp slt i64 %87, 0 : NIL

308 :   store i1 %91, i1* %SF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
309 :   %92 = icmp eq i64 %87, 0, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
310 :   store i1 %92, i1* %ZF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
311 :   %93 = xor i64 %86, -9223372036854775808, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
312 :   %94 = and i64 %88, %93, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

313 :   %95 = icmp slt i64 %94, 0 : NIL

314 :   store i1 %95, i1* %OF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
315 :   %96 = trunc i64 %87 to i8, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
316 :   %97 = tail call i8 @llvm.ctpop.i8(i8 %96), !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

317 :   %98 = and i8 %97, 1 : NIL
318 :   %99 = icmp eq i8 %98, 0 : NIL

319 :   store i1 %99, i1* %PF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

320 :   %100 = extractvalue { i64, i1 } %uadd, 1 : NIL

321 :   store i1 %100, i1* %CF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
322 :   store i64 %87, i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

323 :   %101 = inttoptr i64 %87 to i64*, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
324 :   %102 = load i64* %101, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
325 :   store i64 %102, i64* %RBP_val, !mcsema_real_eip !7 :          <2a1>	popq	%rbp

326 :   %103 = add i64 %87, 16, !mcsema_real_eip !8 :          <2a2>	retq
327 :   store i64 %103, i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
328 :   %104 = load i64* %RAX_val, !mcsema_real_eip !8 :          <2a2>	retq
329 :   store i64 %104, i64* %RAX, !mcsema_real_eip !8 :          <2a2>	retq
330 :   %105 = load i64* %RBX_val, !mcsema_real_eip !8 :          <2a2>	retq
331 :   store i64 %105, i64* %RBX, !mcsema_real_eip !8 :          <2a2>	retq
332 :   %106 = load i64* %RCX_val, !mcsema_real_eip !8 :          <2a2>	retq
333 :   store i64 %106, i64* %RCX, !mcsema_real_eip !8 :          <2a2>	retq
334 :   %107 = load i64* %RDX_val, !mcsema_real_eip !8 :          <2a2>	retq
335 :   store i64 %107, i64* %RDX, !mcsema_real_eip !8 :          <2a2>	retq
336 :   %108 = load i64* %RSI_val, !mcsema_real_eip !8 :          <2a2>	retq
337 :   store i64 %108, i64* %RSI, !mcsema_real_eip !8 :          <2a2>	retq
338 :   %109 = load i64* %RDI_val, !mcsema_real_eip !8 :          <2a2>	retq
339 :   store i64 %109, i64* %RDI, !mcsema_real_eip !8 :          <2a2>	retq
340 :   %110 = load i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
341 :   store i64 %110, i64* %RSP, !mcsema_real_eip !8 :          <2a2>	retq
342 :   %111 = load i64* %RBP_val, !mcsema_real_eip !8 :          <2a2>	retq
343 :   store i64 %111, i64* %RBP, !mcsema_real_eip !8 :          <2a2>	retq
344 :   %112 = load i64* %R8_val, !mcsema_real_eip !8 :          <2a2>	retq
345 :   store i64 %112, i64* %R8, !mcsema_real_eip !8 :          <2a2>	retq
346 :   %113 = load i64* %R9_val, !mcsema_real_eip !8 :          <2a2>	retq
347 :   store i64 %113, i64* %R9, !mcsema_real_eip !8 :          <2a2>	retq
348 :   %114 = load i64* %R10_val, !mcsema_real_eip !8 :          <2a2>	retq
349 :   store i64 %114, i64* %R10, !mcsema_real_eip !8 :          <2a2>	retq
350 :   %115 = load i64* %R11_val, !mcsema_real_eip !8 :          <2a2>	retq
351 :   store i64 %115, i64* %R11, !mcsema_real_eip !8 :          <2a2>	retq
352 :   %116 = load i64* %R12_val, !mcsema_real_eip !8 :          <2a2>	retq
353 :   store i64 %116, i64* %R12, !mcsema_real_eip !8 :          <2a2>	retq
354 :   %117 = load i64* %R13_val, !mcsema_real_eip !8 :          <2a2>	retq
355 :   store i64 %117, i64* %R13, !mcsema_real_eip !8 :          <2a2>	retq
356 :   %118 = load i64* %R14_val, !mcsema_real_eip !8 :          <2a2>	retq
357 :   store i64 %118, i64* %R14, !mcsema_real_eip !8 :          <2a2>	retq
358 :   %119 = load i64* %R15_val, !mcsema_real_eip !8 :          <2a2>	retq
359 :   store i64 %119, i64* %R15, !mcsema_real_eip !8 :          <2a2>	retq
360 :   %120 = load i64* %RIP_val, !mcsema_real_eip !8 :          <2a2>	retq
361 :   store i64 %120, i64* %RIP, !mcsema_real_eip !8 :          <2a2>	retq
362 :   %121 = load i1* %CF_val, !mcsema_real_eip !8 :          <2a2>	retq
363 :   store i1 %121, i1* %CF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
364 :   %122 = load i1* %PF_val, !mcsema_real_eip !8 :          <2a2>	retq
365 :   store i1 %122, i1* %PF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
366 :   %123 = load i1* %AF_val, !mcsema_real_eip !8 :          <2a2>	retq
367 :   store i1 %123, i1* %AF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
368 :   %124 = load i1* %ZF_val, !mcsema_real_eip !8 :          <2a2>	retq
369 :   store i1 %124, i1* %ZF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
370 :   %125 = load i1* %SF_val, !mcsema_real_eip !8 :          <2a2>	retq
371 :   store i1 %125, i1* %SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
372 :   %126 = load i1* %OF_val, !mcsema_real_eip !8 :          <2a2>	retq
373 :   store i1 %126, i1* %OF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
374 :   %127 = load i1* %DF_val, !mcsema_real_eip !8 :          <2a2>	retq
375 :   store i1 %127, i1* %DF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
376 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !8 :          <2a2>	retq
377 :   %128 = load i1* %FPU_B_val, !mcsema_real_eip !8 :          <2a2>	retq
378 :   store i1 %128, i1* %FPU_B, align 1, !mcsema_real_eip !8 :          <2a2>	retq
379 :   %129 = load i1* %FPU_C3_val, !mcsema_real_eip !8 :          <2a2>	retq
380 :   store i1 %129, i1* %FPU_C3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
381 :   %130 = load i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <2a2>	retq
382 :   store i3 %130, i3* %FPU_TOP, align 1, !mcsema_real_eip !8 :          <2a2>	retq
383 :   %131 = load i1* %FPU_C2_val, !mcsema_real_eip !8 :          <2a2>	retq
384 :   store i1 %131, i1* %FPU_C2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
385 :   %132 = load i1* %FPU_C1_val, !mcsema_real_eip !8 :          <2a2>	retq
386 :   store i1 %132, i1* %FPU_C1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
387 :   %133 = load i1* %FPU_C0_val, !mcsema_real_eip !8 :          <2a2>	retq
388 :   store i1 %133, i1* %FPU_C0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
389 :   %134 = load i1* %FPU_ES_val, !mcsema_real_eip !8 :          <2a2>	retq
390 :   store i1 %134, i1* %FPU_ES, align 1, !mcsema_real_eip !8 :          <2a2>	retq
391 :   %135 = load i1* %FPU_SF_val, !mcsema_real_eip !8 :          <2a2>	retq
392 :   store i1 %135, i1* %FPU_SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
393 :   %136 = load i1* %FPU_PE_val, !mcsema_real_eip !8 :          <2a2>	retq
394 :   store i1 %136, i1* %FPU_PE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
395 :   %137 = load i1* %FPU_UE_val, !mcsema_real_eip !8 :          <2a2>	retq
396 :   store i1 %137, i1* %FPU_UE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
397 :   %138 = load i1* %FPU_OE_val, !mcsema_real_eip !8 :          <2a2>	retq
398 :   store i1 %138, i1* %FPU_OE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
399 :   %139 = load i1* %FPU_ZE_val, !mcsema_real_eip !8 :          <2a2>	retq
400 :   store i1 %139, i1* %FPU_ZE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
401 :   %140 = load i1* %FPU_DE_val, !mcsema_real_eip !8 :          <2a2>	retq
402 :   store i1 %140, i1* %FPU_DE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
403 :   %141 = load i1* %FPU_IE_val, !mcsema_real_eip !8 :          <2a2>	retq
404 :   store i1 %141, i1* %FPU_IE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
405 :   %142 = load i1* %FPU_X_val, !mcsema_real_eip !8 :          <2a2>	retq
406 :   store i1 %142, i1* %FPU_X, align 1, !mcsema_real_eip !8 :          <2a2>	retq
407 :   %143 = load i2* %FPU_RC_val, !mcsema_real_eip !8 :          <2a2>	retq
408 :   store i2 %143, i2* %FPU_RC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
409 :   %144 = load i2* %FPU_PC_val, !mcsema_real_eip !8 :          <2a2>	retq
410 :   store i2 %144, i2* %FPU_PC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
411 :   %145 = load i1* %FPU_PM_val, !mcsema_real_eip !8 :          <2a2>	retq
412 :   store i1 %145, i1* %FPU_PM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
413 :   %146 = load i1* %FPU_UM_val, !mcsema_real_eip !8 :          <2a2>	retq
414 :   store i1 %146, i1* %FPU_UM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
415 :   %147 = load i1* %FPU_OM_val, !mcsema_real_eip !8 :          <2a2>	retq
416 :   store i1 %147, i1* %FPU_OM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
417 :   %148 = load i1* %FPU_ZM_val, !mcsema_real_eip !8 :          <2a2>	retq
418 :   store i1 %148, i1* %FPU_ZM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
419 :   %149 = load i1* %FPU_DM_val, !mcsema_real_eip !8 :          <2a2>	retq
420 :   store i1 %149, i1* %FPU_DM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
421 :   %150 = load i1* %FPU_IM_val, !mcsema_real_eip !8 :          <2a2>	retq
422 :   store i1 %150, i1* %FPU_IM, align 1, !mcsema_real_eip !8 :          <2a2>	retq

423 :   %151 = load i64* %53, align 4 : NIL
424 :   store i64 %151, i64* %52, align 4 : NIL

425 :   %152 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
426 :   store i16 %152, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
427 :   %153 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
428 :   store i64 %153, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
429 :   %154 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
430 :   store i16 %154, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
431 :   %155 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
432 :   store i64 %155, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
433 :   %156 = load i128* %XMM0_val, !mcsema_real_eip !8 :          <2a2>	retq
434 :   store i128 %156, i128* %XMM0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
435 :   %157 = load i128* %XMM1_val, !mcsema_real_eip !8 :          <2a2>	retq
436 :   store i128 %157, i128* %XMM1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
437 :   %158 = load i128* %XMM2_val, !mcsema_real_eip !8 :          <2a2>	retq
438 :   store i128 %158, i128* %XMM2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
439 :   %159 = load i128* %XMM3_val, !mcsema_real_eip !8 :          <2a2>	retq
440 :   store i128 %159, i128* %XMM3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
441 :   %160 = load i128* %XMM4_val, !mcsema_real_eip !8 :          <2a2>	retq
442 :   store i128 %160, i128* %XMM4, align 1, !mcsema_real_eip !8 :          <2a2>	retq
443 :   %161 = load i128* %XMM5_val, !mcsema_real_eip !8 :          <2a2>	retq
444 :   store i128 %161, i128* %XMM5, align 1, !mcsema_real_eip !8 :          <2a2>	retq
445 :   %162 = load i128* %XMM6_val, !mcsema_real_eip !8 :          <2a2>	retq
446 :   store i128 %162, i128* %XMM6, align 1, !mcsema_real_eip !8 :          <2a2>	retq
447 :   %163 = load i128* %XMM7_val, !mcsema_real_eip !8 :          <2a2>	retq
448 :   store i128 %163, i128* %XMM7, align 1, !mcsema_real_eip !8 :          <2a2>	retq
449 :   %164 = load i128* %XMM8_val, !mcsema_real_eip !8 :          <2a2>	retq
450 :   store i128 %164, i128* %XMM8, align 1, !mcsema_real_eip !8 :          <2a2>	retq
451 :   %165 = load i128* %XMM9_val, !mcsema_real_eip !8 :          <2a2>	retq
452 :   store i128 %165, i128* %XMM9, align 1, !mcsema_real_eip !8 :          <2a2>	retq
453 :   %166 = load i128* %XMM10_val, !mcsema_real_eip !8 :          <2a2>	retq
454 :   store i128 %166, i128* %XMM10, align 1, !mcsema_real_eip !8 :          <2a2>	retq
455 :   %167 = load i128* %XMM11_val, !mcsema_real_eip !8 :          <2a2>	retq
456 :   store i128 %167, i128* %XMM11, align 1, !mcsema_real_eip !8 :          <2a2>	retq
457 :   %168 = load i128* %XMM12_val, !mcsema_real_eip !8 :          <2a2>	retq
458 :   store i128 %168, i128* %XMM12, align 1, !mcsema_real_eip !8 :          <2a2>	retq
459 :   %169 = load i128* %XMM13_val, !mcsema_real_eip !8 :          <2a2>	retq
460 :   store i128 %169, i128* %XMM13, align 1, !mcsema_real_eip !8 :          <2a2>	retq
461 :   %170 = load i128* %XMM14_val, !mcsema_real_eip !8 :          <2a2>	retq
462 :   store i128 %170, i128* %XMM14, align 1, !mcsema_real_eip !8 :          <2a2>	retq
463 :   %171 = load i128* %XMM15_val, !mcsema_real_eip !8 :          <2a2>	retq
464 :   store i128 %171, i128* %XMM15, align 1, !mcsema_real_eip !8 :          <2a2>	retq
465 :   %172 = load i64* %STACK_BASE_val, !mcsema_real_eip !8 :          <2a2>	retq
466 :   store i64 %172, i64* %STACK_BASE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
467 :   %173 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !8 :          <2a2>	retq
468 :   store i64 %173, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !8 :          <2a2>	retq
469 :   ret void, !mcsema_real_eip !8 :          <2a2>	retq
========================================================
Source line mapping for function: sub_a0
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi
288 :   store i64 ptrtoint (%1* @data_0x39b to i64), i64* %RDI_val, !mcsema_real_eip !2 :          <a0>	movabsq	$0, %rdi

289 :   %77 = load i64* %RSI_val, !mcsema_real_eip !3 :          <ac>	callq	0
290 :   %78 = load i64* %RDX_val, !mcsema_real_eip !3 :          <ac>	callq	0
291 :   %79 = load i64* %RCX_val, !mcsema_real_eip !3 :          <ac>	callq	0
292 :   %80 = tail call x86_64_sysvcc i64 @printf(i64 ptrtoint (%1* @data_0x39b to i64), i64 %77, i64 %78, i64 %79), !mcsema_real_eip !3 :          <ac>	callq	0

293 :   %81 = load i64* %RBP_val, !mcsema_real_eip !4 :          <b1>	movl	%eax, -56(%rbp)
294 :   %82 = add i64 %81, -56, !mcsema_real_eip !4 :          <b1>	movl	%eax, -56(%rbp)
295 :   %83 = inttoptr i64 %82 to i64*, !mcsema_real_eip !4 :          <b1>	movl	%eax, -56(%rbp)
296 :   %84 = trunc i64 %80 to i32, !mcsema_real_eip !4 :          <b1>	movl	%eax, -56(%rbp)

297 :   %85 = bitcast i64* %83 to i32* : NIL

298 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <b1>	movl	%eax, -56(%rbp)

299 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <295>	movl	$0, %eax

300 :   %86 = load i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

301 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %86, i64 144) : NIL
302 :   %87 = extractvalue { i64, i1 } %uadd, 0 : NIL

303 :   %88 = xor i64 %87, %86, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

304 :   %89 = and i64 %88, 16 : NIL
305 :   %90 = icmp eq i64 %89, 0 : NIL

306 :   store i1 %90, i1* %AF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

307 :   %91 = icmp slt i64 %87, 0 : NIL

308 :   store i1 %91, i1* %SF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
309 :   %92 = icmp eq i64 %87, 0, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
310 :   store i1 %92, i1* %ZF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
311 :   %93 = xor i64 %86, -9223372036854775808, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
312 :   %94 = and i64 %88, %93, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

313 :   %95 = icmp slt i64 %94, 0 : NIL

314 :   store i1 %95, i1* %OF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
315 :   %96 = trunc i64 %87 to i8, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
316 :   %97 = tail call i8 @llvm.ctpop.i8(i8 %96), !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

317 :   %98 = and i8 %97, 1 : NIL
318 :   %99 = icmp eq i8 %98, 0 : NIL

319 :   store i1 %99, i1* %PF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

320 :   %100 = extractvalue { i64, i1 } %uadd, 1 : NIL

321 :   store i1 %100, i1* %CF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
322 :   store i64 %87, i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

323 :   %101 = inttoptr i64 %87 to i64*, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
324 :   %102 = load i64* %101, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
325 :   store i64 %102, i64* %RBP_val, !mcsema_real_eip !7 :          <2a1>	popq	%rbp

326 :   %103 = add i64 %87, 16, !mcsema_real_eip !8 :          <2a2>	retq
327 :   store i64 %103, i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
328 :   %104 = load i64* %RAX_val, !mcsema_real_eip !8 :          <2a2>	retq
329 :   store i64 %104, i64* %RAX, !mcsema_real_eip !8 :          <2a2>	retq
330 :   %105 = load i64* %RBX_val, !mcsema_real_eip !8 :          <2a2>	retq
331 :   store i64 %105, i64* %RBX, !mcsema_real_eip !8 :          <2a2>	retq
332 :   %106 = load i64* %RCX_val, !mcsema_real_eip !8 :          <2a2>	retq
333 :   store i64 %106, i64* %RCX, !mcsema_real_eip !8 :          <2a2>	retq
334 :   %107 = load i64* %RDX_val, !mcsema_real_eip !8 :          <2a2>	retq
335 :   store i64 %107, i64* %RDX, !mcsema_real_eip !8 :          <2a2>	retq
336 :   %108 = load i64* %RSI_val, !mcsema_real_eip !8 :          <2a2>	retq
337 :   store i64 %108, i64* %RSI, !mcsema_real_eip !8 :          <2a2>	retq
338 :   %109 = load i64* %RDI_val, !mcsema_real_eip !8 :          <2a2>	retq
339 :   store i64 %109, i64* %RDI, !mcsema_real_eip !8 :          <2a2>	retq
340 :   %110 = load i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
341 :   store i64 %110, i64* %RSP, !mcsema_real_eip !8 :          <2a2>	retq
342 :   %111 = load i64* %RBP_val, !mcsema_real_eip !8 :          <2a2>	retq
343 :   store i64 %111, i64* %RBP, !mcsema_real_eip !8 :          <2a2>	retq
344 :   %112 = load i64* %R8_val, !mcsema_real_eip !8 :          <2a2>	retq
345 :   store i64 %112, i64* %R8, !mcsema_real_eip !8 :          <2a2>	retq
346 :   %113 = load i64* %R9_val, !mcsema_real_eip !8 :          <2a2>	retq
347 :   store i64 %113, i64* %R9, !mcsema_real_eip !8 :          <2a2>	retq
348 :   %114 = load i64* %R10_val, !mcsema_real_eip !8 :          <2a2>	retq
349 :   store i64 %114, i64* %R10, !mcsema_real_eip !8 :          <2a2>	retq
350 :   %115 = load i64* %R11_val, !mcsema_real_eip !8 :          <2a2>	retq
351 :   store i64 %115, i64* %R11, !mcsema_real_eip !8 :          <2a2>	retq
352 :   %116 = load i64* %R12_val, !mcsema_real_eip !8 :          <2a2>	retq
353 :   store i64 %116, i64* %R12, !mcsema_real_eip !8 :          <2a2>	retq
354 :   %117 = load i64* %R13_val, !mcsema_real_eip !8 :          <2a2>	retq
355 :   store i64 %117, i64* %R13, !mcsema_real_eip !8 :          <2a2>	retq
356 :   %118 = load i64* %R14_val, !mcsema_real_eip !8 :          <2a2>	retq
357 :   store i64 %118, i64* %R14, !mcsema_real_eip !8 :          <2a2>	retq
358 :   %119 = load i64* %R15_val, !mcsema_real_eip !8 :          <2a2>	retq
359 :   store i64 %119, i64* %R15, !mcsema_real_eip !8 :          <2a2>	retq
360 :   %120 = load i64* %RIP_val, !mcsema_real_eip !8 :          <2a2>	retq
361 :   store i64 %120, i64* %RIP, !mcsema_real_eip !8 :          <2a2>	retq
362 :   %121 = load i1* %CF_val, !mcsema_real_eip !8 :          <2a2>	retq
363 :   store i1 %121, i1* %CF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
364 :   %122 = load i1* %PF_val, !mcsema_real_eip !8 :          <2a2>	retq
365 :   store i1 %122, i1* %PF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
366 :   %123 = load i1* %AF_val, !mcsema_real_eip !8 :          <2a2>	retq
367 :   store i1 %123, i1* %AF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
368 :   %124 = load i1* %ZF_val, !mcsema_real_eip !8 :          <2a2>	retq
369 :   store i1 %124, i1* %ZF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
370 :   %125 = load i1* %SF_val, !mcsema_real_eip !8 :          <2a2>	retq
371 :   store i1 %125, i1* %SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
372 :   %126 = load i1* %OF_val, !mcsema_real_eip !8 :          <2a2>	retq
373 :   store i1 %126, i1* %OF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
374 :   %127 = load i1* %DF_val, !mcsema_real_eip !8 :          <2a2>	retq
375 :   store i1 %127, i1* %DF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
376 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !8 :          <2a2>	retq
377 :   %128 = load i1* %FPU_B_val, !mcsema_real_eip !8 :          <2a2>	retq
378 :   store i1 %128, i1* %FPU_B, align 1, !mcsema_real_eip !8 :          <2a2>	retq
379 :   %129 = load i1* %FPU_C3_val, !mcsema_real_eip !8 :          <2a2>	retq
380 :   store i1 %129, i1* %FPU_C3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
381 :   %130 = load i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <2a2>	retq
382 :   store i3 %130, i3* %FPU_TOP, align 1, !mcsema_real_eip !8 :          <2a2>	retq
383 :   %131 = load i1* %FPU_C2_val, !mcsema_real_eip !8 :          <2a2>	retq
384 :   store i1 %131, i1* %FPU_C2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
385 :   %132 = load i1* %FPU_C1_val, !mcsema_real_eip !8 :          <2a2>	retq
386 :   store i1 %132, i1* %FPU_C1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
387 :   %133 = load i1* %FPU_C0_val, !mcsema_real_eip !8 :          <2a2>	retq
388 :   store i1 %133, i1* %FPU_C0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
389 :   %134 = load i1* %FPU_ES_val, !mcsema_real_eip !8 :          <2a2>	retq
390 :   store i1 %134, i1* %FPU_ES, align 1, !mcsema_real_eip !8 :          <2a2>	retq
391 :   %135 = load i1* %FPU_SF_val, !mcsema_real_eip !8 :          <2a2>	retq
392 :   store i1 %135, i1* %FPU_SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
393 :   %136 = load i1* %FPU_PE_val, !mcsema_real_eip !8 :          <2a2>	retq
394 :   store i1 %136, i1* %FPU_PE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
395 :   %137 = load i1* %FPU_UE_val, !mcsema_real_eip !8 :          <2a2>	retq
396 :   store i1 %137, i1* %FPU_UE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
397 :   %138 = load i1* %FPU_OE_val, !mcsema_real_eip !8 :          <2a2>	retq
398 :   store i1 %138, i1* %FPU_OE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
399 :   %139 = load i1* %FPU_ZE_val, !mcsema_real_eip !8 :          <2a2>	retq
400 :   store i1 %139, i1* %FPU_ZE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
401 :   %140 = load i1* %FPU_DE_val, !mcsema_real_eip !8 :          <2a2>	retq
402 :   store i1 %140, i1* %FPU_DE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
403 :   %141 = load i1* %FPU_IE_val, !mcsema_real_eip !8 :          <2a2>	retq
404 :   store i1 %141, i1* %FPU_IE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
405 :   %142 = load i1* %FPU_X_val, !mcsema_real_eip !8 :          <2a2>	retq
406 :   store i1 %142, i1* %FPU_X, align 1, !mcsema_real_eip !8 :          <2a2>	retq
407 :   %143 = load i2* %FPU_RC_val, !mcsema_real_eip !8 :          <2a2>	retq
408 :   store i2 %143, i2* %FPU_RC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
409 :   %144 = load i2* %FPU_PC_val, !mcsema_real_eip !8 :          <2a2>	retq
410 :   store i2 %144, i2* %FPU_PC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
411 :   %145 = load i1* %FPU_PM_val, !mcsema_real_eip !8 :          <2a2>	retq
412 :   store i1 %145, i1* %FPU_PM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
413 :   %146 = load i1* %FPU_UM_val, !mcsema_real_eip !8 :          <2a2>	retq
414 :   store i1 %146, i1* %FPU_UM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
415 :   %147 = load i1* %FPU_OM_val, !mcsema_real_eip !8 :          <2a2>	retq
416 :   store i1 %147, i1* %FPU_OM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
417 :   %148 = load i1* %FPU_ZM_val, !mcsema_real_eip !8 :          <2a2>	retq
418 :   store i1 %148, i1* %FPU_ZM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
419 :   %149 = load i1* %FPU_DM_val, !mcsema_real_eip !8 :          <2a2>	retq
420 :   store i1 %149, i1* %FPU_DM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
421 :   %150 = load i1* %FPU_IM_val, !mcsema_real_eip !8 :          <2a2>	retq
422 :   store i1 %150, i1* %FPU_IM, align 1, !mcsema_real_eip !8 :          <2a2>	retq

423 :   %151 = load i64* %53, align 4 : NIL
424 :   store i64 %151, i64* %52, align 4 : NIL

425 :   %152 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
426 :   store i16 %152, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
427 :   %153 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
428 :   store i64 %153, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
429 :   %154 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
430 :   store i16 %154, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
431 :   %155 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
432 :   store i64 %155, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
433 :   %156 = load i128* %XMM0_val, !mcsema_real_eip !8 :          <2a2>	retq
434 :   store i128 %156, i128* %XMM0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
435 :   %157 = load i128* %XMM1_val, !mcsema_real_eip !8 :          <2a2>	retq
436 :   store i128 %157, i128* %XMM1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
437 :   %158 = load i128* %XMM2_val, !mcsema_real_eip !8 :          <2a2>	retq
438 :   store i128 %158, i128* %XMM2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
439 :   %159 = load i128* %XMM3_val, !mcsema_real_eip !8 :          <2a2>	retq
440 :   store i128 %159, i128* %XMM3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
441 :   %160 = load i128* %XMM4_val, !mcsema_real_eip !8 :          <2a2>	retq
442 :   store i128 %160, i128* %XMM4, align 1, !mcsema_real_eip !8 :          <2a2>	retq
443 :   %161 = load i128* %XMM5_val, !mcsema_real_eip !8 :          <2a2>	retq
444 :   store i128 %161, i128* %XMM5, align 1, !mcsema_real_eip !8 :          <2a2>	retq
445 :   %162 = load i128* %XMM6_val, !mcsema_real_eip !8 :          <2a2>	retq
446 :   store i128 %162, i128* %XMM6, align 1, !mcsema_real_eip !8 :          <2a2>	retq
447 :   %163 = load i128* %XMM7_val, !mcsema_real_eip !8 :          <2a2>	retq
448 :   store i128 %163, i128* %XMM7, align 1, !mcsema_real_eip !8 :          <2a2>	retq
449 :   %164 = load i128* %XMM8_val, !mcsema_real_eip !8 :          <2a2>	retq
450 :   store i128 %164, i128* %XMM8, align 1, !mcsema_real_eip !8 :          <2a2>	retq
451 :   %165 = load i128* %XMM9_val, !mcsema_real_eip !8 :          <2a2>	retq
452 :   store i128 %165, i128* %XMM9, align 1, !mcsema_real_eip !8 :          <2a2>	retq
453 :   %166 = load i128* %XMM10_val, !mcsema_real_eip !8 :          <2a2>	retq
454 :   store i128 %166, i128* %XMM10, align 1, !mcsema_real_eip !8 :          <2a2>	retq
455 :   %167 = load i128* %XMM11_val, !mcsema_real_eip !8 :          <2a2>	retq
456 :   store i128 %167, i128* %XMM11, align 1, !mcsema_real_eip !8 :          <2a2>	retq
457 :   %168 = load i128* %XMM12_val, !mcsema_real_eip !8 :          <2a2>	retq
458 :   store i128 %168, i128* %XMM12, align 1, !mcsema_real_eip !8 :          <2a2>	retq
459 :   %169 = load i128* %XMM13_val, !mcsema_real_eip !8 :          <2a2>	retq
460 :   store i128 %169, i128* %XMM13, align 1, !mcsema_real_eip !8 :          <2a2>	retq
461 :   %170 = load i128* %XMM14_val, !mcsema_real_eip !8 :          <2a2>	retq
462 :   store i128 %170, i128* %XMM14, align 1, !mcsema_real_eip !8 :          <2a2>	retq
463 :   %171 = load i128* %XMM15_val, !mcsema_real_eip !8 :          <2a2>	retq
464 :   store i128 %171, i128* %XMM15, align 1, !mcsema_real_eip !8 :          <2a2>	retq
465 :   %172 = load i64* %STACK_BASE_val, !mcsema_real_eip !8 :          <2a2>	retq
466 :   store i64 %172, i64* %STACK_BASE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
467 :   %173 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !8 :          <2a2>	retq
468 :   store i64 %173, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !8 :          <2a2>	retq
469 :   ret void, !mcsema_real_eip !8 :          <2a2>	retq
========================================================
Source line mapping for function: sub_b9
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi
288 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 16), i64* %RDI_val, !mcsema_real_eip !2 :          <b9>	movabsq	$0, %rdi

289 :   %77 = load i64* %RSI_val, !mcsema_real_eip !3 :          <c5>	callq	0
290 :   %78 = load i64* %RDX_val, !mcsema_real_eip !3 :          <c5>	callq	0
291 :   %79 = load i64* %RCX_val, !mcsema_real_eip !3 :          <c5>	callq	0
292 :   %80 = tail call x86_64_sysvcc i64 @printf(i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 16), i64 %77, i64 %78, i64 %79), !mcsema_real_eip !3 :          <c5>	callq	0

293 :   %81 = load i64* %RBP_val, !mcsema_real_eip !4 :          <ca>	movl	%eax, -60(%rbp)
294 :   %82 = add i64 %81, -60, !mcsema_real_eip !4 :          <ca>	movl	%eax, -60(%rbp)
295 :   %83 = inttoptr i64 %82 to i64*, !mcsema_real_eip !4 :          <ca>	movl	%eax, -60(%rbp)
296 :   %84 = trunc i64 %80 to i32, !mcsema_real_eip !4 :          <ca>	movl	%eax, -60(%rbp)

297 :   %85 = bitcast i64* %83 to i32* : NIL

298 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <ca>	movl	%eax, -60(%rbp)

299 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <295>	movl	$0, %eax

300 :   %86 = load i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

301 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %86, i64 144) : NIL
302 :   %87 = extractvalue { i64, i1 } %uadd, 0 : NIL

303 :   %88 = xor i64 %87, %86, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

304 :   %89 = and i64 %88, 16 : NIL
305 :   %90 = icmp eq i64 %89, 0 : NIL

306 :   store i1 %90, i1* %AF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

307 :   %91 = icmp slt i64 %87, 0 : NIL

308 :   store i1 %91, i1* %SF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
309 :   %92 = icmp eq i64 %87, 0, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
310 :   store i1 %92, i1* %ZF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
311 :   %93 = xor i64 %86, -9223372036854775808, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
312 :   %94 = and i64 %88, %93, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

313 :   %95 = icmp slt i64 %94, 0 : NIL

314 :   store i1 %95, i1* %OF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
315 :   %96 = trunc i64 %87 to i8, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
316 :   %97 = tail call i8 @llvm.ctpop.i8(i8 %96), !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

317 :   %98 = and i8 %97, 1 : NIL
318 :   %99 = icmp eq i8 %98, 0 : NIL

319 :   store i1 %99, i1* %PF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

320 :   %100 = extractvalue { i64, i1 } %uadd, 1 : NIL

321 :   store i1 %100, i1* %CF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
322 :   store i64 %87, i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

323 :   %101 = inttoptr i64 %87 to i64*, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
324 :   %102 = load i64* %101, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
325 :   store i64 %102, i64* %RBP_val, !mcsema_real_eip !7 :          <2a1>	popq	%rbp

326 :   %103 = add i64 %87, 16, !mcsema_real_eip !8 :          <2a2>	retq
327 :   store i64 %103, i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
328 :   %104 = load i64* %RAX_val, !mcsema_real_eip !8 :          <2a2>	retq
329 :   store i64 %104, i64* %RAX, !mcsema_real_eip !8 :          <2a2>	retq
330 :   %105 = load i64* %RBX_val, !mcsema_real_eip !8 :          <2a2>	retq
331 :   store i64 %105, i64* %RBX, !mcsema_real_eip !8 :          <2a2>	retq
332 :   %106 = load i64* %RCX_val, !mcsema_real_eip !8 :          <2a2>	retq
333 :   store i64 %106, i64* %RCX, !mcsema_real_eip !8 :          <2a2>	retq
334 :   %107 = load i64* %RDX_val, !mcsema_real_eip !8 :          <2a2>	retq
335 :   store i64 %107, i64* %RDX, !mcsema_real_eip !8 :          <2a2>	retq
336 :   %108 = load i64* %RSI_val, !mcsema_real_eip !8 :          <2a2>	retq
337 :   store i64 %108, i64* %RSI, !mcsema_real_eip !8 :          <2a2>	retq
338 :   %109 = load i64* %RDI_val, !mcsema_real_eip !8 :          <2a2>	retq
339 :   store i64 %109, i64* %RDI, !mcsema_real_eip !8 :          <2a2>	retq
340 :   %110 = load i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
341 :   store i64 %110, i64* %RSP, !mcsema_real_eip !8 :          <2a2>	retq
342 :   %111 = load i64* %RBP_val, !mcsema_real_eip !8 :          <2a2>	retq
343 :   store i64 %111, i64* %RBP, !mcsema_real_eip !8 :          <2a2>	retq
344 :   %112 = load i64* %R8_val, !mcsema_real_eip !8 :          <2a2>	retq
345 :   store i64 %112, i64* %R8, !mcsema_real_eip !8 :          <2a2>	retq
346 :   %113 = load i64* %R9_val, !mcsema_real_eip !8 :          <2a2>	retq
347 :   store i64 %113, i64* %R9, !mcsema_real_eip !8 :          <2a2>	retq
348 :   %114 = load i64* %R10_val, !mcsema_real_eip !8 :          <2a2>	retq
349 :   store i64 %114, i64* %R10, !mcsema_real_eip !8 :          <2a2>	retq
350 :   %115 = load i64* %R11_val, !mcsema_real_eip !8 :          <2a2>	retq
351 :   store i64 %115, i64* %R11, !mcsema_real_eip !8 :          <2a2>	retq
352 :   %116 = load i64* %R12_val, !mcsema_real_eip !8 :          <2a2>	retq
353 :   store i64 %116, i64* %R12, !mcsema_real_eip !8 :          <2a2>	retq
354 :   %117 = load i64* %R13_val, !mcsema_real_eip !8 :          <2a2>	retq
355 :   store i64 %117, i64* %R13, !mcsema_real_eip !8 :          <2a2>	retq
356 :   %118 = load i64* %R14_val, !mcsema_real_eip !8 :          <2a2>	retq
357 :   store i64 %118, i64* %R14, !mcsema_real_eip !8 :          <2a2>	retq
358 :   %119 = load i64* %R15_val, !mcsema_real_eip !8 :          <2a2>	retq
359 :   store i64 %119, i64* %R15, !mcsema_real_eip !8 :          <2a2>	retq
360 :   %120 = load i64* %RIP_val, !mcsema_real_eip !8 :          <2a2>	retq
361 :   store i64 %120, i64* %RIP, !mcsema_real_eip !8 :          <2a2>	retq
362 :   %121 = load i1* %CF_val, !mcsema_real_eip !8 :          <2a2>	retq
363 :   store i1 %121, i1* %CF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
364 :   %122 = load i1* %PF_val, !mcsema_real_eip !8 :          <2a2>	retq
365 :   store i1 %122, i1* %PF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
366 :   %123 = load i1* %AF_val, !mcsema_real_eip !8 :          <2a2>	retq
367 :   store i1 %123, i1* %AF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
368 :   %124 = load i1* %ZF_val, !mcsema_real_eip !8 :          <2a2>	retq
369 :   store i1 %124, i1* %ZF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
370 :   %125 = load i1* %SF_val, !mcsema_real_eip !8 :          <2a2>	retq
371 :   store i1 %125, i1* %SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
372 :   %126 = load i1* %OF_val, !mcsema_real_eip !8 :          <2a2>	retq
373 :   store i1 %126, i1* %OF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
374 :   %127 = load i1* %DF_val, !mcsema_real_eip !8 :          <2a2>	retq
375 :   store i1 %127, i1* %DF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
376 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !8 :          <2a2>	retq
377 :   %128 = load i1* %FPU_B_val, !mcsema_real_eip !8 :          <2a2>	retq
378 :   store i1 %128, i1* %FPU_B, align 1, !mcsema_real_eip !8 :          <2a2>	retq
379 :   %129 = load i1* %FPU_C3_val, !mcsema_real_eip !8 :          <2a2>	retq
380 :   store i1 %129, i1* %FPU_C3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
381 :   %130 = load i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <2a2>	retq
382 :   store i3 %130, i3* %FPU_TOP, align 1, !mcsema_real_eip !8 :          <2a2>	retq
383 :   %131 = load i1* %FPU_C2_val, !mcsema_real_eip !8 :          <2a2>	retq
384 :   store i1 %131, i1* %FPU_C2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
385 :   %132 = load i1* %FPU_C1_val, !mcsema_real_eip !8 :          <2a2>	retq
386 :   store i1 %132, i1* %FPU_C1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
387 :   %133 = load i1* %FPU_C0_val, !mcsema_real_eip !8 :          <2a2>	retq
388 :   store i1 %133, i1* %FPU_C0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
389 :   %134 = load i1* %FPU_ES_val, !mcsema_real_eip !8 :          <2a2>	retq
390 :   store i1 %134, i1* %FPU_ES, align 1, !mcsema_real_eip !8 :          <2a2>	retq
391 :   %135 = load i1* %FPU_SF_val, !mcsema_real_eip !8 :          <2a2>	retq
392 :   store i1 %135, i1* %FPU_SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
393 :   %136 = load i1* %FPU_PE_val, !mcsema_real_eip !8 :          <2a2>	retq
394 :   store i1 %136, i1* %FPU_PE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
395 :   %137 = load i1* %FPU_UE_val, !mcsema_real_eip !8 :          <2a2>	retq
396 :   store i1 %137, i1* %FPU_UE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
397 :   %138 = load i1* %FPU_OE_val, !mcsema_real_eip !8 :          <2a2>	retq
398 :   store i1 %138, i1* %FPU_OE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
399 :   %139 = load i1* %FPU_ZE_val, !mcsema_real_eip !8 :          <2a2>	retq
400 :   store i1 %139, i1* %FPU_ZE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
401 :   %140 = load i1* %FPU_DE_val, !mcsema_real_eip !8 :          <2a2>	retq
402 :   store i1 %140, i1* %FPU_DE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
403 :   %141 = load i1* %FPU_IE_val, !mcsema_real_eip !8 :          <2a2>	retq
404 :   store i1 %141, i1* %FPU_IE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
405 :   %142 = load i1* %FPU_X_val, !mcsema_real_eip !8 :          <2a2>	retq
406 :   store i1 %142, i1* %FPU_X, align 1, !mcsema_real_eip !8 :          <2a2>	retq
407 :   %143 = load i2* %FPU_RC_val, !mcsema_real_eip !8 :          <2a2>	retq
408 :   store i2 %143, i2* %FPU_RC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
409 :   %144 = load i2* %FPU_PC_val, !mcsema_real_eip !8 :          <2a2>	retq
410 :   store i2 %144, i2* %FPU_PC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
411 :   %145 = load i1* %FPU_PM_val, !mcsema_real_eip !8 :          <2a2>	retq
412 :   store i1 %145, i1* %FPU_PM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
413 :   %146 = load i1* %FPU_UM_val, !mcsema_real_eip !8 :          <2a2>	retq
414 :   store i1 %146, i1* %FPU_UM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
415 :   %147 = load i1* %FPU_OM_val, !mcsema_real_eip !8 :          <2a2>	retq
416 :   store i1 %147, i1* %FPU_OM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
417 :   %148 = load i1* %FPU_ZM_val, !mcsema_real_eip !8 :          <2a2>	retq
418 :   store i1 %148, i1* %FPU_ZM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
419 :   %149 = load i1* %FPU_DM_val, !mcsema_real_eip !8 :          <2a2>	retq
420 :   store i1 %149, i1* %FPU_DM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
421 :   %150 = load i1* %FPU_IM_val, !mcsema_real_eip !8 :          <2a2>	retq
422 :   store i1 %150, i1* %FPU_IM, align 1, !mcsema_real_eip !8 :          <2a2>	retq

423 :   %151 = load i64* %53, align 4 : NIL
424 :   store i64 %151, i64* %52, align 4 : NIL

425 :   %152 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
426 :   store i16 %152, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
427 :   %153 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
428 :   store i64 %153, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
429 :   %154 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
430 :   store i16 %154, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
431 :   %155 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
432 :   store i64 %155, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
433 :   %156 = load i128* %XMM0_val, !mcsema_real_eip !8 :          <2a2>	retq
434 :   store i128 %156, i128* %XMM0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
435 :   %157 = load i128* %XMM1_val, !mcsema_real_eip !8 :          <2a2>	retq
436 :   store i128 %157, i128* %XMM1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
437 :   %158 = load i128* %XMM2_val, !mcsema_real_eip !8 :          <2a2>	retq
438 :   store i128 %158, i128* %XMM2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
439 :   %159 = load i128* %XMM3_val, !mcsema_real_eip !8 :          <2a2>	retq
440 :   store i128 %159, i128* %XMM3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
441 :   %160 = load i128* %XMM4_val, !mcsema_real_eip !8 :          <2a2>	retq
442 :   store i128 %160, i128* %XMM4, align 1, !mcsema_real_eip !8 :          <2a2>	retq
443 :   %161 = load i128* %XMM5_val, !mcsema_real_eip !8 :          <2a2>	retq
444 :   store i128 %161, i128* %XMM5, align 1, !mcsema_real_eip !8 :          <2a2>	retq
445 :   %162 = load i128* %XMM6_val, !mcsema_real_eip !8 :          <2a2>	retq
446 :   store i128 %162, i128* %XMM6, align 1, !mcsema_real_eip !8 :          <2a2>	retq
447 :   %163 = load i128* %XMM7_val, !mcsema_real_eip !8 :          <2a2>	retq
448 :   store i128 %163, i128* %XMM7, align 1, !mcsema_real_eip !8 :          <2a2>	retq
449 :   %164 = load i128* %XMM8_val, !mcsema_real_eip !8 :          <2a2>	retq
450 :   store i128 %164, i128* %XMM8, align 1, !mcsema_real_eip !8 :          <2a2>	retq
451 :   %165 = load i128* %XMM9_val, !mcsema_real_eip !8 :          <2a2>	retq
452 :   store i128 %165, i128* %XMM9, align 1, !mcsema_real_eip !8 :          <2a2>	retq
453 :   %166 = load i128* %XMM10_val, !mcsema_real_eip !8 :          <2a2>	retq
454 :   store i128 %166, i128* %XMM10, align 1, !mcsema_real_eip !8 :          <2a2>	retq
455 :   %167 = load i128* %XMM11_val, !mcsema_real_eip !8 :          <2a2>	retq
456 :   store i128 %167, i128* %XMM11, align 1, !mcsema_real_eip !8 :          <2a2>	retq
457 :   %168 = load i128* %XMM12_val, !mcsema_real_eip !8 :          <2a2>	retq
458 :   store i128 %168, i128* %XMM12, align 1, !mcsema_real_eip !8 :          <2a2>	retq
459 :   %169 = load i128* %XMM13_val, !mcsema_real_eip !8 :          <2a2>	retq
460 :   store i128 %169, i128* %XMM13, align 1, !mcsema_real_eip !8 :          <2a2>	retq
461 :   %170 = load i128* %XMM14_val, !mcsema_real_eip !8 :          <2a2>	retq
462 :   store i128 %170, i128* %XMM14, align 1, !mcsema_real_eip !8 :          <2a2>	retq
463 :   %171 = load i128* %XMM15_val, !mcsema_real_eip !8 :          <2a2>	retq
464 :   store i128 %171, i128* %XMM15, align 1, !mcsema_real_eip !8 :          <2a2>	retq
465 :   %172 = load i64* %STACK_BASE_val, !mcsema_real_eip !8 :          <2a2>	retq
466 :   store i64 %172, i64* %STACK_BASE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
467 :   %173 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !8 :          <2a2>	retq
468 :   store i64 %173, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !8 :          <2a2>	retq
469 :   ret void, !mcsema_real_eip !8 :          <2a2>	retq
========================================================
Source line mapping for function: sub_d2
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi
288 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 31), i64* %RDI_val, !mcsema_real_eip !2 :          <d2>	movabsq	$0, %rdi

289 :   %77 = load i64* %RSI_val, !mcsema_real_eip !3 :          <de>	callq	0
290 :   %78 = load i64* %RDX_val, !mcsema_real_eip !3 :          <de>	callq	0
291 :   %79 = load i64* %RCX_val, !mcsema_real_eip !3 :          <de>	callq	0
292 :   %80 = tail call x86_64_sysvcc i64 @printf(i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 31), i64 %77, i64 %78, i64 %79), !mcsema_real_eip !3 :          <de>	callq	0

293 :   %81 = load i64* %RBP_val, !mcsema_real_eip !4 :          <e3>	movl	%eax, -64(%rbp)
294 :   %82 = add i64 %81, -64, !mcsema_real_eip !4 :          <e3>	movl	%eax, -64(%rbp)
295 :   %83 = inttoptr i64 %82 to i64*, !mcsema_real_eip !4 :          <e3>	movl	%eax, -64(%rbp)
296 :   %84 = trunc i64 %80 to i32, !mcsema_real_eip !4 :          <e3>	movl	%eax, -64(%rbp)

297 :   %85 = bitcast i64* %83 to i32* : NIL

298 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <e3>	movl	%eax, -64(%rbp)

299 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <295>	movl	$0, %eax

300 :   %86 = load i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

301 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %86, i64 144) : NIL
302 :   %87 = extractvalue { i64, i1 } %uadd, 0 : NIL

303 :   %88 = xor i64 %87, %86, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

304 :   %89 = and i64 %88, 16 : NIL
305 :   %90 = icmp eq i64 %89, 0 : NIL

306 :   store i1 %90, i1* %AF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

307 :   %91 = icmp slt i64 %87, 0 : NIL

308 :   store i1 %91, i1* %SF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
309 :   %92 = icmp eq i64 %87, 0, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
310 :   store i1 %92, i1* %ZF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
311 :   %93 = xor i64 %86, -9223372036854775808, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
312 :   %94 = and i64 %88, %93, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

313 :   %95 = icmp slt i64 %94, 0 : NIL

314 :   store i1 %95, i1* %OF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
315 :   %96 = trunc i64 %87 to i8, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
316 :   %97 = tail call i8 @llvm.ctpop.i8(i8 %96), !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

317 :   %98 = and i8 %97, 1 : NIL
318 :   %99 = icmp eq i8 %98, 0 : NIL

319 :   store i1 %99, i1* %PF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

320 :   %100 = extractvalue { i64, i1 } %uadd, 1 : NIL

321 :   store i1 %100, i1* %CF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
322 :   store i64 %87, i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

323 :   %101 = inttoptr i64 %87 to i64*, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
324 :   %102 = load i64* %101, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
325 :   store i64 %102, i64* %RBP_val, !mcsema_real_eip !7 :          <2a1>	popq	%rbp

326 :   %103 = add i64 %87, 16, !mcsema_real_eip !8 :          <2a2>	retq
327 :   store i64 %103, i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
328 :   %104 = load i64* %RAX_val, !mcsema_real_eip !8 :          <2a2>	retq
329 :   store i64 %104, i64* %RAX, !mcsema_real_eip !8 :          <2a2>	retq
330 :   %105 = load i64* %RBX_val, !mcsema_real_eip !8 :          <2a2>	retq
331 :   store i64 %105, i64* %RBX, !mcsema_real_eip !8 :          <2a2>	retq
332 :   %106 = load i64* %RCX_val, !mcsema_real_eip !8 :          <2a2>	retq
333 :   store i64 %106, i64* %RCX, !mcsema_real_eip !8 :          <2a2>	retq
334 :   %107 = load i64* %RDX_val, !mcsema_real_eip !8 :          <2a2>	retq
335 :   store i64 %107, i64* %RDX, !mcsema_real_eip !8 :          <2a2>	retq
336 :   %108 = load i64* %RSI_val, !mcsema_real_eip !8 :          <2a2>	retq
337 :   store i64 %108, i64* %RSI, !mcsema_real_eip !8 :          <2a2>	retq
338 :   %109 = load i64* %RDI_val, !mcsema_real_eip !8 :          <2a2>	retq
339 :   store i64 %109, i64* %RDI, !mcsema_real_eip !8 :          <2a2>	retq
340 :   %110 = load i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
341 :   store i64 %110, i64* %RSP, !mcsema_real_eip !8 :          <2a2>	retq
342 :   %111 = load i64* %RBP_val, !mcsema_real_eip !8 :          <2a2>	retq
343 :   store i64 %111, i64* %RBP, !mcsema_real_eip !8 :          <2a2>	retq
344 :   %112 = load i64* %R8_val, !mcsema_real_eip !8 :          <2a2>	retq
345 :   store i64 %112, i64* %R8, !mcsema_real_eip !8 :          <2a2>	retq
346 :   %113 = load i64* %R9_val, !mcsema_real_eip !8 :          <2a2>	retq
347 :   store i64 %113, i64* %R9, !mcsema_real_eip !8 :          <2a2>	retq
348 :   %114 = load i64* %R10_val, !mcsema_real_eip !8 :          <2a2>	retq
349 :   store i64 %114, i64* %R10, !mcsema_real_eip !8 :          <2a2>	retq
350 :   %115 = load i64* %R11_val, !mcsema_real_eip !8 :          <2a2>	retq
351 :   store i64 %115, i64* %R11, !mcsema_real_eip !8 :          <2a2>	retq
352 :   %116 = load i64* %R12_val, !mcsema_real_eip !8 :          <2a2>	retq
353 :   store i64 %116, i64* %R12, !mcsema_real_eip !8 :          <2a2>	retq
354 :   %117 = load i64* %R13_val, !mcsema_real_eip !8 :          <2a2>	retq
355 :   store i64 %117, i64* %R13, !mcsema_real_eip !8 :          <2a2>	retq
356 :   %118 = load i64* %R14_val, !mcsema_real_eip !8 :          <2a2>	retq
357 :   store i64 %118, i64* %R14, !mcsema_real_eip !8 :          <2a2>	retq
358 :   %119 = load i64* %R15_val, !mcsema_real_eip !8 :          <2a2>	retq
359 :   store i64 %119, i64* %R15, !mcsema_real_eip !8 :          <2a2>	retq
360 :   %120 = load i64* %RIP_val, !mcsema_real_eip !8 :          <2a2>	retq
361 :   store i64 %120, i64* %RIP, !mcsema_real_eip !8 :          <2a2>	retq
362 :   %121 = load i1* %CF_val, !mcsema_real_eip !8 :          <2a2>	retq
363 :   store i1 %121, i1* %CF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
364 :   %122 = load i1* %PF_val, !mcsema_real_eip !8 :          <2a2>	retq
365 :   store i1 %122, i1* %PF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
366 :   %123 = load i1* %AF_val, !mcsema_real_eip !8 :          <2a2>	retq
367 :   store i1 %123, i1* %AF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
368 :   %124 = load i1* %ZF_val, !mcsema_real_eip !8 :          <2a2>	retq
369 :   store i1 %124, i1* %ZF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
370 :   %125 = load i1* %SF_val, !mcsema_real_eip !8 :          <2a2>	retq
371 :   store i1 %125, i1* %SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
372 :   %126 = load i1* %OF_val, !mcsema_real_eip !8 :          <2a2>	retq
373 :   store i1 %126, i1* %OF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
374 :   %127 = load i1* %DF_val, !mcsema_real_eip !8 :          <2a2>	retq
375 :   store i1 %127, i1* %DF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
376 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !8 :          <2a2>	retq
377 :   %128 = load i1* %FPU_B_val, !mcsema_real_eip !8 :          <2a2>	retq
378 :   store i1 %128, i1* %FPU_B, align 1, !mcsema_real_eip !8 :          <2a2>	retq
379 :   %129 = load i1* %FPU_C3_val, !mcsema_real_eip !8 :          <2a2>	retq
380 :   store i1 %129, i1* %FPU_C3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
381 :   %130 = load i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <2a2>	retq
382 :   store i3 %130, i3* %FPU_TOP, align 1, !mcsema_real_eip !8 :          <2a2>	retq
383 :   %131 = load i1* %FPU_C2_val, !mcsema_real_eip !8 :          <2a2>	retq
384 :   store i1 %131, i1* %FPU_C2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
385 :   %132 = load i1* %FPU_C1_val, !mcsema_real_eip !8 :          <2a2>	retq
386 :   store i1 %132, i1* %FPU_C1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
387 :   %133 = load i1* %FPU_C0_val, !mcsema_real_eip !8 :          <2a2>	retq
388 :   store i1 %133, i1* %FPU_C0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
389 :   %134 = load i1* %FPU_ES_val, !mcsema_real_eip !8 :          <2a2>	retq
390 :   store i1 %134, i1* %FPU_ES, align 1, !mcsema_real_eip !8 :          <2a2>	retq
391 :   %135 = load i1* %FPU_SF_val, !mcsema_real_eip !8 :          <2a2>	retq
392 :   store i1 %135, i1* %FPU_SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
393 :   %136 = load i1* %FPU_PE_val, !mcsema_real_eip !8 :          <2a2>	retq
394 :   store i1 %136, i1* %FPU_PE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
395 :   %137 = load i1* %FPU_UE_val, !mcsema_real_eip !8 :          <2a2>	retq
396 :   store i1 %137, i1* %FPU_UE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
397 :   %138 = load i1* %FPU_OE_val, !mcsema_real_eip !8 :          <2a2>	retq
398 :   store i1 %138, i1* %FPU_OE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
399 :   %139 = load i1* %FPU_ZE_val, !mcsema_real_eip !8 :          <2a2>	retq
400 :   store i1 %139, i1* %FPU_ZE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
401 :   %140 = load i1* %FPU_DE_val, !mcsema_real_eip !8 :          <2a2>	retq
402 :   store i1 %140, i1* %FPU_DE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
403 :   %141 = load i1* %FPU_IE_val, !mcsema_real_eip !8 :          <2a2>	retq
404 :   store i1 %141, i1* %FPU_IE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
405 :   %142 = load i1* %FPU_X_val, !mcsema_real_eip !8 :          <2a2>	retq
406 :   store i1 %142, i1* %FPU_X, align 1, !mcsema_real_eip !8 :          <2a2>	retq
407 :   %143 = load i2* %FPU_RC_val, !mcsema_real_eip !8 :          <2a2>	retq
408 :   store i2 %143, i2* %FPU_RC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
409 :   %144 = load i2* %FPU_PC_val, !mcsema_real_eip !8 :          <2a2>	retq
410 :   store i2 %144, i2* %FPU_PC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
411 :   %145 = load i1* %FPU_PM_val, !mcsema_real_eip !8 :          <2a2>	retq
412 :   store i1 %145, i1* %FPU_PM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
413 :   %146 = load i1* %FPU_UM_val, !mcsema_real_eip !8 :          <2a2>	retq
414 :   store i1 %146, i1* %FPU_UM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
415 :   %147 = load i1* %FPU_OM_val, !mcsema_real_eip !8 :          <2a2>	retq
416 :   store i1 %147, i1* %FPU_OM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
417 :   %148 = load i1* %FPU_ZM_val, !mcsema_real_eip !8 :          <2a2>	retq
418 :   store i1 %148, i1* %FPU_ZM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
419 :   %149 = load i1* %FPU_DM_val, !mcsema_real_eip !8 :          <2a2>	retq
420 :   store i1 %149, i1* %FPU_DM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
421 :   %150 = load i1* %FPU_IM_val, !mcsema_real_eip !8 :          <2a2>	retq
422 :   store i1 %150, i1* %FPU_IM, align 1, !mcsema_real_eip !8 :          <2a2>	retq

423 :   %151 = load i64* %53, align 4 : NIL
424 :   store i64 %151, i64* %52, align 4 : NIL

425 :   %152 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
426 :   store i16 %152, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
427 :   %153 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
428 :   store i64 %153, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
429 :   %154 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
430 :   store i16 %154, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
431 :   %155 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
432 :   store i64 %155, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
433 :   %156 = load i128* %XMM0_val, !mcsema_real_eip !8 :          <2a2>	retq
434 :   store i128 %156, i128* %XMM0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
435 :   %157 = load i128* %XMM1_val, !mcsema_real_eip !8 :          <2a2>	retq
436 :   store i128 %157, i128* %XMM1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
437 :   %158 = load i128* %XMM2_val, !mcsema_real_eip !8 :          <2a2>	retq
438 :   store i128 %158, i128* %XMM2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
439 :   %159 = load i128* %XMM3_val, !mcsema_real_eip !8 :          <2a2>	retq
440 :   store i128 %159, i128* %XMM3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
441 :   %160 = load i128* %XMM4_val, !mcsema_real_eip !8 :          <2a2>	retq
442 :   store i128 %160, i128* %XMM4, align 1, !mcsema_real_eip !8 :          <2a2>	retq
443 :   %161 = load i128* %XMM5_val, !mcsema_real_eip !8 :          <2a2>	retq
444 :   store i128 %161, i128* %XMM5, align 1, !mcsema_real_eip !8 :          <2a2>	retq
445 :   %162 = load i128* %XMM6_val, !mcsema_real_eip !8 :          <2a2>	retq
446 :   store i128 %162, i128* %XMM6, align 1, !mcsema_real_eip !8 :          <2a2>	retq
447 :   %163 = load i128* %XMM7_val, !mcsema_real_eip !8 :          <2a2>	retq
448 :   store i128 %163, i128* %XMM7, align 1, !mcsema_real_eip !8 :          <2a2>	retq
449 :   %164 = load i128* %XMM8_val, !mcsema_real_eip !8 :          <2a2>	retq
450 :   store i128 %164, i128* %XMM8, align 1, !mcsema_real_eip !8 :          <2a2>	retq
451 :   %165 = load i128* %XMM9_val, !mcsema_real_eip !8 :          <2a2>	retq
452 :   store i128 %165, i128* %XMM9, align 1, !mcsema_real_eip !8 :          <2a2>	retq
453 :   %166 = load i128* %XMM10_val, !mcsema_real_eip !8 :          <2a2>	retq
454 :   store i128 %166, i128* %XMM10, align 1, !mcsema_real_eip !8 :          <2a2>	retq
455 :   %167 = load i128* %XMM11_val, !mcsema_real_eip !8 :          <2a2>	retq
456 :   store i128 %167, i128* %XMM11, align 1, !mcsema_real_eip !8 :          <2a2>	retq
457 :   %168 = load i128* %XMM12_val, !mcsema_real_eip !8 :          <2a2>	retq
458 :   store i128 %168, i128* %XMM12, align 1, !mcsema_real_eip !8 :          <2a2>	retq
459 :   %169 = load i128* %XMM13_val, !mcsema_real_eip !8 :          <2a2>	retq
460 :   store i128 %169, i128* %XMM13, align 1, !mcsema_real_eip !8 :          <2a2>	retq
461 :   %170 = load i128* %XMM14_val, !mcsema_real_eip !8 :          <2a2>	retq
462 :   store i128 %170, i128* %XMM14, align 1, !mcsema_real_eip !8 :          <2a2>	retq
463 :   %171 = load i128* %XMM15_val, !mcsema_real_eip !8 :          <2a2>	retq
464 :   store i128 %171, i128* %XMM15, align 1, !mcsema_real_eip !8 :          <2a2>	retq
465 :   %172 = load i64* %STACK_BASE_val, !mcsema_real_eip !8 :          <2a2>	retq
466 :   store i64 %172, i64* %STACK_BASE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
467 :   %173 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !8 :          <2a2>	retq
468 :   store i64 %173, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !8 :          <2a2>	retq
469 :   ret void, !mcsema_real_eip !8 :          <2a2>	retq
========================================================
Source line mapping for function: sub_eb
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi
288 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 46), i64* %RDI_val, !mcsema_real_eip !2 :          <eb>	movabsq	$0, %rdi

289 :   %77 = load i64* %RSI_val, !mcsema_real_eip !3 :          <f7>	callq	0
290 :   %78 = load i64* %RDX_val, !mcsema_real_eip !3 :          <f7>	callq	0
291 :   %79 = load i64* %RCX_val, !mcsema_real_eip !3 :          <f7>	callq	0
292 :   %80 = tail call x86_64_sysvcc i64 @printf(i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 46), i64 %77, i64 %78, i64 %79), !mcsema_real_eip !3 :          <f7>	callq	0

293 :   %81 = load i64* %RBP_val, !mcsema_real_eip !4 :          <fc>	movl	%eax, -68(%rbp)
294 :   %82 = add i64 %81, -68, !mcsema_real_eip !4 :          <fc>	movl	%eax, -68(%rbp)
295 :   %83 = inttoptr i64 %82 to i64*, !mcsema_real_eip !4 :          <fc>	movl	%eax, -68(%rbp)
296 :   %84 = trunc i64 %80 to i32, !mcsema_real_eip !4 :          <fc>	movl	%eax, -68(%rbp)

297 :   %85 = bitcast i64* %83 to i32* : NIL

298 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <fc>	movl	%eax, -68(%rbp)

299 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <295>	movl	$0, %eax

300 :   %86 = load i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

301 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %86, i64 144) : NIL
302 :   %87 = extractvalue { i64, i1 } %uadd, 0 : NIL

303 :   %88 = xor i64 %87, %86, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

304 :   %89 = and i64 %88, 16 : NIL
305 :   %90 = icmp eq i64 %89, 0 : NIL

306 :   store i1 %90, i1* %AF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

307 :   %91 = icmp slt i64 %87, 0 : NIL

308 :   store i1 %91, i1* %SF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
309 :   %92 = icmp eq i64 %87, 0, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
310 :   store i1 %92, i1* %ZF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
311 :   %93 = xor i64 %86, -9223372036854775808, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
312 :   %94 = and i64 %88, %93, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

313 :   %95 = icmp slt i64 %94, 0 : NIL

314 :   store i1 %95, i1* %OF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
315 :   %96 = trunc i64 %87 to i8, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
316 :   %97 = tail call i8 @llvm.ctpop.i8(i8 %96), !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

317 :   %98 = and i8 %97, 1 : NIL
318 :   %99 = icmp eq i8 %98, 0 : NIL

319 :   store i1 %99, i1* %PF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

320 :   %100 = extractvalue { i64, i1 } %uadd, 1 : NIL

321 :   store i1 %100, i1* %CF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
322 :   store i64 %87, i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

323 :   %101 = inttoptr i64 %87 to i64*, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
324 :   %102 = load i64* %101, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
325 :   store i64 %102, i64* %RBP_val, !mcsema_real_eip !7 :          <2a1>	popq	%rbp

326 :   %103 = add i64 %87, 16, !mcsema_real_eip !8 :          <2a2>	retq
327 :   store i64 %103, i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
328 :   %104 = load i64* %RAX_val, !mcsema_real_eip !8 :          <2a2>	retq
329 :   store i64 %104, i64* %RAX, !mcsema_real_eip !8 :          <2a2>	retq
330 :   %105 = load i64* %RBX_val, !mcsema_real_eip !8 :          <2a2>	retq
331 :   store i64 %105, i64* %RBX, !mcsema_real_eip !8 :          <2a2>	retq
332 :   %106 = load i64* %RCX_val, !mcsema_real_eip !8 :          <2a2>	retq
333 :   store i64 %106, i64* %RCX, !mcsema_real_eip !8 :          <2a2>	retq
334 :   %107 = load i64* %RDX_val, !mcsema_real_eip !8 :          <2a2>	retq
335 :   store i64 %107, i64* %RDX, !mcsema_real_eip !8 :          <2a2>	retq
336 :   %108 = load i64* %RSI_val, !mcsema_real_eip !8 :          <2a2>	retq
337 :   store i64 %108, i64* %RSI, !mcsema_real_eip !8 :          <2a2>	retq
338 :   %109 = load i64* %RDI_val, !mcsema_real_eip !8 :          <2a2>	retq
339 :   store i64 %109, i64* %RDI, !mcsema_real_eip !8 :          <2a2>	retq
340 :   %110 = load i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
341 :   store i64 %110, i64* %RSP, !mcsema_real_eip !8 :          <2a2>	retq
342 :   %111 = load i64* %RBP_val, !mcsema_real_eip !8 :          <2a2>	retq
343 :   store i64 %111, i64* %RBP, !mcsema_real_eip !8 :          <2a2>	retq
344 :   %112 = load i64* %R8_val, !mcsema_real_eip !8 :          <2a2>	retq
345 :   store i64 %112, i64* %R8, !mcsema_real_eip !8 :          <2a2>	retq
346 :   %113 = load i64* %R9_val, !mcsema_real_eip !8 :          <2a2>	retq
347 :   store i64 %113, i64* %R9, !mcsema_real_eip !8 :          <2a2>	retq
348 :   %114 = load i64* %R10_val, !mcsema_real_eip !8 :          <2a2>	retq
349 :   store i64 %114, i64* %R10, !mcsema_real_eip !8 :          <2a2>	retq
350 :   %115 = load i64* %R11_val, !mcsema_real_eip !8 :          <2a2>	retq
351 :   store i64 %115, i64* %R11, !mcsema_real_eip !8 :          <2a2>	retq
352 :   %116 = load i64* %R12_val, !mcsema_real_eip !8 :          <2a2>	retq
353 :   store i64 %116, i64* %R12, !mcsema_real_eip !8 :          <2a2>	retq
354 :   %117 = load i64* %R13_val, !mcsema_real_eip !8 :          <2a2>	retq
355 :   store i64 %117, i64* %R13, !mcsema_real_eip !8 :          <2a2>	retq
356 :   %118 = load i64* %R14_val, !mcsema_real_eip !8 :          <2a2>	retq
357 :   store i64 %118, i64* %R14, !mcsema_real_eip !8 :          <2a2>	retq
358 :   %119 = load i64* %R15_val, !mcsema_real_eip !8 :          <2a2>	retq
359 :   store i64 %119, i64* %R15, !mcsema_real_eip !8 :          <2a2>	retq
360 :   %120 = load i64* %RIP_val, !mcsema_real_eip !8 :          <2a2>	retq
361 :   store i64 %120, i64* %RIP, !mcsema_real_eip !8 :          <2a2>	retq
362 :   %121 = load i1* %CF_val, !mcsema_real_eip !8 :          <2a2>	retq
363 :   store i1 %121, i1* %CF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
364 :   %122 = load i1* %PF_val, !mcsema_real_eip !8 :          <2a2>	retq
365 :   store i1 %122, i1* %PF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
366 :   %123 = load i1* %AF_val, !mcsema_real_eip !8 :          <2a2>	retq
367 :   store i1 %123, i1* %AF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
368 :   %124 = load i1* %ZF_val, !mcsema_real_eip !8 :          <2a2>	retq
369 :   store i1 %124, i1* %ZF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
370 :   %125 = load i1* %SF_val, !mcsema_real_eip !8 :          <2a2>	retq
371 :   store i1 %125, i1* %SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
372 :   %126 = load i1* %OF_val, !mcsema_real_eip !8 :          <2a2>	retq
373 :   store i1 %126, i1* %OF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
374 :   %127 = load i1* %DF_val, !mcsema_real_eip !8 :          <2a2>	retq
375 :   store i1 %127, i1* %DF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
376 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !8 :          <2a2>	retq
377 :   %128 = load i1* %FPU_B_val, !mcsema_real_eip !8 :          <2a2>	retq
378 :   store i1 %128, i1* %FPU_B, align 1, !mcsema_real_eip !8 :          <2a2>	retq
379 :   %129 = load i1* %FPU_C3_val, !mcsema_real_eip !8 :          <2a2>	retq
380 :   store i1 %129, i1* %FPU_C3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
381 :   %130 = load i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <2a2>	retq
382 :   store i3 %130, i3* %FPU_TOP, align 1, !mcsema_real_eip !8 :          <2a2>	retq
383 :   %131 = load i1* %FPU_C2_val, !mcsema_real_eip !8 :          <2a2>	retq
384 :   store i1 %131, i1* %FPU_C2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
385 :   %132 = load i1* %FPU_C1_val, !mcsema_real_eip !8 :          <2a2>	retq
386 :   store i1 %132, i1* %FPU_C1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
387 :   %133 = load i1* %FPU_C0_val, !mcsema_real_eip !8 :          <2a2>	retq
388 :   store i1 %133, i1* %FPU_C0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
389 :   %134 = load i1* %FPU_ES_val, !mcsema_real_eip !8 :          <2a2>	retq
390 :   store i1 %134, i1* %FPU_ES, align 1, !mcsema_real_eip !8 :          <2a2>	retq
391 :   %135 = load i1* %FPU_SF_val, !mcsema_real_eip !8 :          <2a2>	retq
392 :   store i1 %135, i1* %FPU_SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
393 :   %136 = load i1* %FPU_PE_val, !mcsema_real_eip !8 :          <2a2>	retq
394 :   store i1 %136, i1* %FPU_PE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
395 :   %137 = load i1* %FPU_UE_val, !mcsema_real_eip !8 :          <2a2>	retq
396 :   store i1 %137, i1* %FPU_UE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
397 :   %138 = load i1* %FPU_OE_val, !mcsema_real_eip !8 :          <2a2>	retq
398 :   store i1 %138, i1* %FPU_OE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
399 :   %139 = load i1* %FPU_ZE_val, !mcsema_real_eip !8 :          <2a2>	retq
400 :   store i1 %139, i1* %FPU_ZE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
401 :   %140 = load i1* %FPU_DE_val, !mcsema_real_eip !8 :          <2a2>	retq
402 :   store i1 %140, i1* %FPU_DE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
403 :   %141 = load i1* %FPU_IE_val, !mcsema_real_eip !8 :          <2a2>	retq
404 :   store i1 %141, i1* %FPU_IE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
405 :   %142 = load i1* %FPU_X_val, !mcsema_real_eip !8 :          <2a2>	retq
406 :   store i1 %142, i1* %FPU_X, align 1, !mcsema_real_eip !8 :          <2a2>	retq
407 :   %143 = load i2* %FPU_RC_val, !mcsema_real_eip !8 :          <2a2>	retq
408 :   store i2 %143, i2* %FPU_RC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
409 :   %144 = load i2* %FPU_PC_val, !mcsema_real_eip !8 :          <2a2>	retq
410 :   store i2 %144, i2* %FPU_PC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
411 :   %145 = load i1* %FPU_PM_val, !mcsema_real_eip !8 :          <2a2>	retq
412 :   store i1 %145, i1* %FPU_PM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
413 :   %146 = load i1* %FPU_UM_val, !mcsema_real_eip !8 :          <2a2>	retq
414 :   store i1 %146, i1* %FPU_UM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
415 :   %147 = load i1* %FPU_OM_val, !mcsema_real_eip !8 :          <2a2>	retq
416 :   store i1 %147, i1* %FPU_OM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
417 :   %148 = load i1* %FPU_ZM_val, !mcsema_real_eip !8 :          <2a2>	retq
418 :   store i1 %148, i1* %FPU_ZM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
419 :   %149 = load i1* %FPU_DM_val, !mcsema_real_eip !8 :          <2a2>	retq
420 :   store i1 %149, i1* %FPU_DM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
421 :   %150 = load i1* %FPU_IM_val, !mcsema_real_eip !8 :          <2a2>	retq
422 :   store i1 %150, i1* %FPU_IM, align 1, !mcsema_real_eip !8 :          <2a2>	retq

423 :   %151 = load i64* %53, align 4 : NIL
424 :   store i64 %151, i64* %52, align 4 : NIL

425 :   %152 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
426 :   store i16 %152, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
427 :   %153 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
428 :   store i64 %153, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
429 :   %154 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
430 :   store i16 %154, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
431 :   %155 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
432 :   store i64 %155, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
433 :   %156 = load i128* %XMM0_val, !mcsema_real_eip !8 :          <2a2>	retq
434 :   store i128 %156, i128* %XMM0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
435 :   %157 = load i128* %XMM1_val, !mcsema_real_eip !8 :          <2a2>	retq
436 :   store i128 %157, i128* %XMM1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
437 :   %158 = load i128* %XMM2_val, !mcsema_real_eip !8 :          <2a2>	retq
438 :   store i128 %158, i128* %XMM2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
439 :   %159 = load i128* %XMM3_val, !mcsema_real_eip !8 :          <2a2>	retq
440 :   store i128 %159, i128* %XMM3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
441 :   %160 = load i128* %XMM4_val, !mcsema_real_eip !8 :          <2a2>	retq
442 :   store i128 %160, i128* %XMM4, align 1, !mcsema_real_eip !8 :          <2a2>	retq
443 :   %161 = load i128* %XMM5_val, !mcsema_real_eip !8 :          <2a2>	retq
444 :   store i128 %161, i128* %XMM5, align 1, !mcsema_real_eip !8 :          <2a2>	retq
445 :   %162 = load i128* %XMM6_val, !mcsema_real_eip !8 :          <2a2>	retq
446 :   store i128 %162, i128* %XMM6, align 1, !mcsema_real_eip !8 :          <2a2>	retq
447 :   %163 = load i128* %XMM7_val, !mcsema_real_eip !8 :          <2a2>	retq
448 :   store i128 %163, i128* %XMM7, align 1, !mcsema_real_eip !8 :          <2a2>	retq
449 :   %164 = load i128* %XMM8_val, !mcsema_real_eip !8 :          <2a2>	retq
450 :   store i128 %164, i128* %XMM8, align 1, !mcsema_real_eip !8 :          <2a2>	retq
451 :   %165 = load i128* %XMM9_val, !mcsema_real_eip !8 :          <2a2>	retq
452 :   store i128 %165, i128* %XMM9, align 1, !mcsema_real_eip !8 :          <2a2>	retq
453 :   %166 = load i128* %XMM10_val, !mcsema_real_eip !8 :          <2a2>	retq
454 :   store i128 %166, i128* %XMM10, align 1, !mcsema_real_eip !8 :          <2a2>	retq
455 :   %167 = load i128* %XMM11_val, !mcsema_real_eip !8 :          <2a2>	retq
456 :   store i128 %167, i128* %XMM11, align 1, !mcsema_real_eip !8 :          <2a2>	retq
457 :   %168 = load i128* %XMM12_val, !mcsema_real_eip !8 :          <2a2>	retq
458 :   store i128 %168, i128* %XMM12, align 1, !mcsema_real_eip !8 :          <2a2>	retq
459 :   %169 = load i128* %XMM13_val, !mcsema_real_eip !8 :          <2a2>	retq
460 :   store i128 %169, i128* %XMM13, align 1, !mcsema_real_eip !8 :          <2a2>	retq
461 :   %170 = load i128* %XMM14_val, !mcsema_real_eip !8 :          <2a2>	retq
462 :   store i128 %170, i128* %XMM14, align 1, !mcsema_real_eip !8 :          <2a2>	retq
463 :   %171 = load i128* %XMM15_val, !mcsema_real_eip !8 :          <2a2>	retq
464 :   store i128 %171, i128* %XMM15, align 1, !mcsema_real_eip !8 :          <2a2>	retq
465 :   %172 = load i64* %STACK_BASE_val, !mcsema_real_eip !8 :          <2a2>	retq
466 :   store i64 %172, i64* %STACK_BASE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
467 :   %173 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !8 :          <2a2>	retq
468 :   store i64 %173, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !8 :          <2a2>	retq
469 :   ret void, !mcsema_real_eip !8 :          <2a2>	retq
========================================================
Source line mapping for function: sub_104
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi
288 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 62), i64* %RDI_val, !mcsema_real_eip !2 :          <104>	movabsq	$0, %rdi

289 :   %77 = load i64* %RSI_val, !mcsema_real_eip !3 :          <110>	callq	0
290 :   %78 = load i64* %RDX_val, !mcsema_real_eip !3 :          <110>	callq	0
291 :   %79 = load i64* %RCX_val, !mcsema_real_eip !3 :          <110>	callq	0
292 :   %80 = tail call x86_64_sysvcc i64 @printf(i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 62), i64 %77, i64 %78, i64 %79), !mcsema_real_eip !3 :          <110>	callq	0

293 :   %81 = load i64* %RBP_val, !mcsema_real_eip !4 :          <115>	movl	%eax, -72(%rbp)
294 :   %82 = add i64 %81, -72, !mcsema_real_eip !4 :          <115>	movl	%eax, -72(%rbp)
295 :   %83 = inttoptr i64 %82 to i64*, !mcsema_real_eip !4 :          <115>	movl	%eax, -72(%rbp)
296 :   %84 = trunc i64 %80 to i32, !mcsema_real_eip !4 :          <115>	movl	%eax, -72(%rbp)

297 :   %85 = bitcast i64* %83 to i32* : NIL

298 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <115>	movl	%eax, -72(%rbp)

299 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <295>	movl	$0, %eax

300 :   %86 = load i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

301 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %86, i64 144) : NIL
302 :   %87 = extractvalue { i64, i1 } %uadd, 0 : NIL

303 :   %88 = xor i64 %87, %86, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

304 :   %89 = and i64 %88, 16 : NIL
305 :   %90 = icmp eq i64 %89, 0 : NIL

306 :   store i1 %90, i1* %AF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

307 :   %91 = icmp slt i64 %87, 0 : NIL

308 :   store i1 %91, i1* %SF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
309 :   %92 = icmp eq i64 %87, 0, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
310 :   store i1 %92, i1* %ZF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
311 :   %93 = xor i64 %86, -9223372036854775808, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
312 :   %94 = and i64 %88, %93, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

313 :   %95 = icmp slt i64 %94, 0 : NIL

314 :   store i1 %95, i1* %OF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
315 :   %96 = trunc i64 %87 to i8, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
316 :   %97 = tail call i8 @llvm.ctpop.i8(i8 %96), !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

317 :   %98 = and i8 %97, 1 : NIL
318 :   %99 = icmp eq i8 %98, 0 : NIL

319 :   store i1 %99, i1* %PF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

320 :   %100 = extractvalue { i64, i1 } %uadd, 1 : NIL

321 :   store i1 %100, i1* %CF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
322 :   store i64 %87, i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

323 :   %101 = inttoptr i64 %87 to i64*, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
324 :   %102 = load i64* %101, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
325 :   store i64 %102, i64* %RBP_val, !mcsema_real_eip !7 :          <2a1>	popq	%rbp

326 :   %103 = add i64 %87, 16, !mcsema_real_eip !8 :          <2a2>	retq
327 :   store i64 %103, i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
328 :   %104 = load i64* %RAX_val, !mcsema_real_eip !8 :          <2a2>	retq
329 :   store i64 %104, i64* %RAX, !mcsema_real_eip !8 :          <2a2>	retq
330 :   %105 = load i64* %RBX_val, !mcsema_real_eip !8 :          <2a2>	retq
331 :   store i64 %105, i64* %RBX, !mcsema_real_eip !8 :          <2a2>	retq
332 :   %106 = load i64* %RCX_val, !mcsema_real_eip !8 :          <2a2>	retq
333 :   store i64 %106, i64* %RCX, !mcsema_real_eip !8 :          <2a2>	retq
334 :   %107 = load i64* %RDX_val, !mcsema_real_eip !8 :          <2a2>	retq
335 :   store i64 %107, i64* %RDX, !mcsema_real_eip !8 :          <2a2>	retq
336 :   %108 = load i64* %RSI_val, !mcsema_real_eip !8 :          <2a2>	retq
337 :   store i64 %108, i64* %RSI, !mcsema_real_eip !8 :          <2a2>	retq
338 :   %109 = load i64* %RDI_val, !mcsema_real_eip !8 :          <2a2>	retq
339 :   store i64 %109, i64* %RDI, !mcsema_real_eip !8 :          <2a2>	retq
340 :   %110 = load i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
341 :   store i64 %110, i64* %RSP, !mcsema_real_eip !8 :          <2a2>	retq
342 :   %111 = load i64* %RBP_val, !mcsema_real_eip !8 :          <2a2>	retq
343 :   store i64 %111, i64* %RBP, !mcsema_real_eip !8 :          <2a2>	retq
344 :   %112 = load i64* %R8_val, !mcsema_real_eip !8 :          <2a2>	retq
345 :   store i64 %112, i64* %R8, !mcsema_real_eip !8 :          <2a2>	retq
346 :   %113 = load i64* %R9_val, !mcsema_real_eip !8 :          <2a2>	retq
347 :   store i64 %113, i64* %R9, !mcsema_real_eip !8 :          <2a2>	retq
348 :   %114 = load i64* %R10_val, !mcsema_real_eip !8 :          <2a2>	retq
349 :   store i64 %114, i64* %R10, !mcsema_real_eip !8 :          <2a2>	retq
350 :   %115 = load i64* %R11_val, !mcsema_real_eip !8 :          <2a2>	retq
351 :   store i64 %115, i64* %R11, !mcsema_real_eip !8 :          <2a2>	retq
352 :   %116 = load i64* %R12_val, !mcsema_real_eip !8 :          <2a2>	retq
353 :   store i64 %116, i64* %R12, !mcsema_real_eip !8 :          <2a2>	retq
354 :   %117 = load i64* %R13_val, !mcsema_real_eip !8 :          <2a2>	retq
355 :   store i64 %117, i64* %R13, !mcsema_real_eip !8 :          <2a2>	retq
356 :   %118 = load i64* %R14_val, !mcsema_real_eip !8 :          <2a2>	retq
357 :   store i64 %118, i64* %R14, !mcsema_real_eip !8 :          <2a2>	retq
358 :   %119 = load i64* %R15_val, !mcsema_real_eip !8 :          <2a2>	retq
359 :   store i64 %119, i64* %R15, !mcsema_real_eip !8 :          <2a2>	retq
360 :   %120 = load i64* %RIP_val, !mcsema_real_eip !8 :          <2a2>	retq
361 :   store i64 %120, i64* %RIP, !mcsema_real_eip !8 :          <2a2>	retq
362 :   %121 = load i1* %CF_val, !mcsema_real_eip !8 :          <2a2>	retq
363 :   store i1 %121, i1* %CF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
364 :   %122 = load i1* %PF_val, !mcsema_real_eip !8 :          <2a2>	retq
365 :   store i1 %122, i1* %PF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
366 :   %123 = load i1* %AF_val, !mcsema_real_eip !8 :          <2a2>	retq
367 :   store i1 %123, i1* %AF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
368 :   %124 = load i1* %ZF_val, !mcsema_real_eip !8 :          <2a2>	retq
369 :   store i1 %124, i1* %ZF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
370 :   %125 = load i1* %SF_val, !mcsema_real_eip !8 :          <2a2>	retq
371 :   store i1 %125, i1* %SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
372 :   %126 = load i1* %OF_val, !mcsema_real_eip !8 :          <2a2>	retq
373 :   store i1 %126, i1* %OF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
374 :   %127 = load i1* %DF_val, !mcsema_real_eip !8 :          <2a2>	retq
375 :   store i1 %127, i1* %DF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
376 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !8 :          <2a2>	retq
377 :   %128 = load i1* %FPU_B_val, !mcsema_real_eip !8 :          <2a2>	retq
378 :   store i1 %128, i1* %FPU_B, align 1, !mcsema_real_eip !8 :          <2a2>	retq
379 :   %129 = load i1* %FPU_C3_val, !mcsema_real_eip !8 :          <2a2>	retq
380 :   store i1 %129, i1* %FPU_C3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
381 :   %130 = load i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <2a2>	retq
382 :   store i3 %130, i3* %FPU_TOP, align 1, !mcsema_real_eip !8 :          <2a2>	retq
383 :   %131 = load i1* %FPU_C2_val, !mcsema_real_eip !8 :          <2a2>	retq
384 :   store i1 %131, i1* %FPU_C2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
385 :   %132 = load i1* %FPU_C1_val, !mcsema_real_eip !8 :          <2a2>	retq
386 :   store i1 %132, i1* %FPU_C1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
387 :   %133 = load i1* %FPU_C0_val, !mcsema_real_eip !8 :          <2a2>	retq
388 :   store i1 %133, i1* %FPU_C0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
389 :   %134 = load i1* %FPU_ES_val, !mcsema_real_eip !8 :          <2a2>	retq
390 :   store i1 %134, i1* %FPU_ES, align 1, !mcsema_real_eip !8 :          <2a2>	retq
391 :   %135 = load i1* %FPU_SF_val, !mcsema_real_eip !8 :          <2a2>	retq
392 :   store i1 %135, i1* %FPU_SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
393 :   %136 = load i1* %FPU_PE_val, !mcsema_real_eip !8 :          <2a2>	retq
394 :   store i1 %136, i1* %FPU_PE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
395 :   %137 = load i1* %FPU_UE_val, !mcsema_real_eip !8 :          <2a2>	retq
396 :   store i1 %137, i1* %FPU_UE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
397 :   %138 = load i1* %FPU_OE_val, !mcsema_real_eip !8 :          <2a2>	retq
398 :   store i1 %138, i1* %FPU_OE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
399 :   %139 = load i1* %FPU_ZE_val, !mcsema_real_eip !8 :          <2a2>	retq
400 :   store i1 %139, i1* %FPU_ZE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
401 :   %140 = load i1* %FPU_DE_val, !mcsema_real_eip !8 :          <2a2>	retq
402 :   store i1 %140, i1* %FPU_DE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
403 :   %141 = load i1* %FPU_IE_val, !mcsema_real_eip !8 :          <2a2>	retq
404 :   store i1 %141, i1* %FPU_IE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
405 :   %142 = load i1* %FPU_X_val, !mcsema_real_eip !8 :          <2a2>	retq
406 :   store i1 %142, i1* %FPU_X, align 1, !mcsema_real_eip !8 :          <2a2>	retq
407 :   %143 = load i2* %FPU_RC_val, !mcsema_real_eip !8 :          <2a2>	retq
408 :   store i2 %143, i2* %FPU_RC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
409 :   %144 = load i2* %FPU_PC_val, !mcsema_real_eip !8 :          <2a2>	retq
410 :   store i2 %144, i2* %FPU_PC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
411 :   %145 = load i1* %FPU_PM_val, !mcsema_real_eip !8 :          <2a2>	retq
412 :   store i1 %145, i1* %FPU_PM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
413 :   %146 = load i1* %FPU_UM_val, !mcsema_real_eip !8 :          <2a2>	retq
414 :   store i1 %146, i1* %FPU_UM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
415 :   %147 = load i1* %FPU_OM_val, !mcsema_real_eip !8 :          <2a2>	retq
416 :   store i1 %147, i1* %FPU_OM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
417 :   %148 = load i1* %FPU_ZM_val, !mcsema_real_eip !8 :          <2a2>	retq
418 :   store i1 %148, i1* %FPU_ZM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
419 :   %149 = load i1* %FPU_DM_val, !mcsema_real_eip !8 :          <2a2>	retq
420 :   store i1 %149, i1* %FPU_DM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
421 :   %150 = load i1* %FPU_IM_val, !mcsema_real_eip !8 :          <2a2>	retq
422 :   store i1 %150, i1* %FPU_IM, align 1, !mcsema_real_eip !8 :          <2a2>	retq

423 :   %151 = load i64* %53, align 4 : NIL
424 :   store i64 %151, i64* %52, align 4 : NIL

425 :   %152 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
426 :   store i16 %152, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
427 :   %153 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
428 :   store i64 %153, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
429 :   %154 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
430 :   store i16 %154, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
431 :   %155 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
432 :   store i64 %155, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
433 :   %156 = load i128* %XMM0_val, !mcsema_real_eip !8 :          <2a2>	retq
434 :   store i128 %156, i128* %XMM0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
435 :   %157 = load i128* %XMM1_val, !mcsema_real_eip !8 :          <2a2>	retq
436 :   store i128 %157, i128* %XMM1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
437 :   %158 = load i128* %XMM2_val, !mcsema_real_eip !8 :          <2a2>	retq
438 :   store i128 %158, i128* %XMM2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
439 :   %159 = load i128* %XMM3_val, !mcsema_real_eip !8 :          <2a2>	retq
440 :   store i128 %159, i128* %XMM3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
441 :   %160 = load i128* %XMM4_val, !mcsema_real_eip !8 :          <2a2>	retq
442 :   store i128 %160, i128* %XMM4, align 1, !mcsema_real_eip !8 :          <2a2>	retq
443 :   %161 = load i128* %XMM5_val, !mcsema_real_eip !8 :          <2a2>	retq
444 :   store i128 %161, i128* %XMM5, align 1, !mcsema_real_eip !8 :          <2a2>	retq
445 :   %162 = load i128* %XMM6_val, !mcsema_real_eip !8 :          <2a2>	retq
446 :   store i128 %162, i128* %XMM6, align 1, !mcsema_real_eip !8 :          <2a2>	retq
447 :   %163 = load i128* %XMM7_val, !mcsema_real_eip !8 :          <2a2>	retq
448 :   store i128 %163, i128* %XMM7, align 1, !mcsema_real_eip !8 :          <2a2>	retq
449 :   %164 = load i128* %XMM8_val, !mcsema_real_eip !8 :          <2a2>	retq
450 :   store i128 %164, i128* %XMM8, align 1, !mcsema_real_eip !8 :          <2a2>	retq
451 :   %165 = load i128* %XMM9_val, !mcsema_real_eip !8 :          <2a2>	retq
452 :   store i128 %165, i128* %XMM9, align 1, !mcsema_real_eip !8 :          <2a2>	retq
453 :   %166 = load i128* %XMM10_val, !mcsema_real_eip !8 :          <2a2>	retq
454 :   store i128 %166, i128* %XMM10, align 1, !mcsema_real_eip !8 :          <2a2>	retq
455 :   %167 = load i128* %XMM11_val, !mcsema_real_eip !8 :          <2a2>	retq
456 :   store i128 %167, i128* %XMM11, align 1, !mcsema_real_eip !8 :          <2a2>	retq
457 :   %168 = load i128* %XMM12_val, !mcsema_real_eip !8 :          <2a2>	retq
458 :   store i128 %168, i128* %XMM12, align 1, !mcsema_real_eip !8 :          <2a2>	retq
459 :   %169 = load i128* %XMM13_val, !mcsema_real_eip !8 :          <2a2>	retq
460 :   store i128 %169, i128* %XMM13, align 1, !mcsema_real_eip !8 :          <2a2>	retq
461 :   %170 = load i128* %XMM14_val, !mcsema_real_eip !8 :          <2a2>	retq
462 :   store i128 %170, i128* %XMM14, align 1, !mcsema_real_eip !8 :          <2a2>	retq
463 :   %171 = load i128* %XMM15_val, !mcsema_real_eip !8 :          <2a2>	retq
464 :   store i128 %171, i128* %XMM15, align 1, !mcsema_real_eip !8 :          <2a2>	retq
465 :   %172 = load i64* %STACK_BASE_val, !mcsema_real_eip !8 :          <2a2>	retq
466 :   store i64 %172, i64* %STACK_BASE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
467 :   %173 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !8 :          <2a2>	retq
468 :   store i64 %173, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !8 :          <2a2>	retq
469 :   ret void, !mcsema_real_eip !8 :          <2a2>	retq
========================================================
Source line mapping for function: sub_11d
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi
288 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 77), i64* %RDI_val, !mcsema_real_eip !2 :          <11d>	movabsq	$0, %rdi

289 :   %77 = load i64* %RSI_val, !mcsema_real_eip !3 :          <129>	callq	0
290 :   %78 = load i64* %RDX_val, !mcsema_real_eip !3 :          <129>	callq	0
291 :   %79 = load i64* %RCX_val, !mcsema_real_eip !3 :          <129>	callq	0
292 :   %80 = tail call x86_64_sysvcc i64 @printf(i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 77), i64 %77, i64 %78, i64 %79), !mcsema_real_eip !3 :          <129>	callq	0

293 :   %81 = load i64* %RBP_val, !mcsema_real_eip !4 :          <12e>	movl	%eax, -76(%rbp)
294 :   %82 = add i64 %81, -76, !mcsema_real_eip !4 :          <12e>	movl	%eax, -76(%rbp)
295 :   %83 = inttoptr i64 %82 to i64*, !mcsema_real_eip !4 :          <12e>	movl	%eax, -76(%rbp)
296 :   %84 = trunc i64 %80 to i32, !mcsema_real_eip !4 :          <12e>	movl	%eax, -76(%rbp)

297 :   %85 = bitcast i64* %83 to i32* : NIL

298 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <12e>	movl	%eax, -76(%rbp)

299 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <295>	movl	$0, %eax

300 :   %86 = load i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

301 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %86, i64 144) : NIL
302 :   %87 = extractvalue { i64, i1 } %uadd, 0 : NIL

303 :   %88 = xor i64 %87, %86, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

304 :   %89 = and i64 %88, 16 : NIL
305 :   %90 = icmp eq i64 %89, 0 : NIL

306 :   store i1 %90, i1* %AF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

307 :   %91 = icmp slt i64 %87, 0 : NIL

308 :   store i1 %91, i1* %SF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
309 :   %92 = icmp eq i64 %87, 0, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
310 :   store i1 %92, i1* %ZF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
311 :   %93 = xor i64 %86, -9223372036854775808, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
312 :   %94 = and i64 %88, %93, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

313 :   %95 = icmp slt i64 %94, 0 : NIL

314 :   store i1 %95, i1* %OF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
315 :   %96 = trunc i64 %87 to i8, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
316 :   %97 = tail call i8 @llvm.ctpop.i8(i8 %96), !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

317 :   %98 = and i8 %97, 1 : NIL
318 :   %99 = icmp eq i8 %98, 0 : NIL

319 :   store i1 %99, i1* %PF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

320 :   %100 = extractvalue { i64, i1 } %uadd, 1 : NIL

321 :   store i1 %100, i1* %CF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
322 :   store i64 %87, i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

323 :   %101 = inttoptr i64 %87 to i64*, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
324 :   %102 = load i64* %101, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
325 :   store i64 %102, i64* %RBP_val, !mcsema_real_eip !7 :          <2a1>	popq	%rbp

326 :   %103 = add i64 %87, 16, !mcsema_real_eip !8 :          <2a2>	retq
327 :   store i64 %103, i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
328 :   %104 = load i64* %RAX_val, !mcsema_real_eip !8 :          <2a2>	retq
329 :   store i64 %104, i64* %RAX, !mcsema_real_eip !8 :          <2a2>	retq
330 :   %105 = load i64* %RBX_val, !mcsema_real_eip !8 :          <2a2>	retq
331 :   store i64 %105, i64* %RBX, !mcsema_real_eip !8 :          <2a2>	retq
332 :   %106 = load i64* %RCX_val, !mcsema_real_eip !8 :          <2a2>	retq
333 :   store i64 %106, i64* %RCX, !mcsema_real_eip !8 :          <2a2>	retq
334 :   %107 = load i64* %RDX_val, !mcsema_real_eip !8 :          <2a2>	retq
335 :   store i64 %107, i64* %RDX, !mcsema_real_eip !8 :          <2a2>	retq
336 :   %108 = load i64* %RSI_val, !mcsema_real_eip !8 :          <2a2>	retq
337 :   store i64 %108, i64* %RSI, !mcsema_real_eip !8 :          <2a2>	retq
338 :   %109 = load i64* %RDI_val, !mcsema_real_eip !8 :          <2a2>	retq
339 :   store i64 %109, i64* %RDI, !mcsema_real_eip !8 :          <2a2>	retq
340 :   %110 = load i64* %RSP_val, !mcsema_real_eip !8 :          <2a2>	retq
341 :   store i64 %110, i64* %RSP, !mcsema_real_eip !8 :          <2a2>	retq
342 :   %111 = load i64* %RBP_val, !mcsema_real_eip !8 :          <2a2>	retq
343 :   store i64 %111, i64* %RBP, !mcsema_real_eip !8 :          <2a2>	retq
344 :   %112 = load i64* %R8_val, !mcsema_real_eip !8 :          <2a2>	retq
345 :   store i64 %112, i64* %R8, !mcsema_real_eip !8 :          <2a2>	retq
346 :   %113 = load i64* %R9_val, !mcsema_real_eip !8 :          <2a2>	retq
347 :   store i64 %113, i64* %R9, !mcsema_real_eip !8 :          <2a2>	retq
348 :   %114 = load i64* %R10_val, !mcsema_real_eip !8 :          <2a2>	retq
349 :   store i64 %114, i64* %R10, !mcsema_real_eip !8 :          <2a2>	retq
350 :   %115 = load i64* %R11_val, !mcsema_real_eip !8 :          <2a2>	retq
351 :   store i64 %115, i64* %R11, !mcsema_real_eip !8 :          <2a2>	retq
352 :   %116 = load i64* %R12_val, !mcsema_real_eip !8 :          <2a2>	retq
353 :   store i64 %116, i64* %R12, !mcsema_real_eip !8 :          <2a2>	retq
354 :   %117 = load i64* %R13_val, !mcsema_real_eip !8 :          <2a2>	retq
355 :   store i64 %117, i64* %R13, !mcsema_real_eip !8 :          <2a2>	retq
356 :   %118 = load i64* %R14_val, !mcsema_real_eip !8 :          <2a2>	retq
357 :   store i64 %118, i64* %R14, !mcsema_real_eip !8 :          <2a2>	retq
358 :   %119 = load i64* %R15_val, !mcsema_real_eip !8 :          <2a2>	retq
359 :   store i64 %119, i64* %R15, !mcsema_real_eip !8 :          <2a2>	retq
360 :   %120 = load i64* %RIP_val, !mcsema_real_eip !8 :          <2a2>	retq
361 :   store i64 %120, i64* %RIP, !mcsema_real_eip !8 :          <2a2>	retq
362 :   %121 = load i1* %CF_val, !mcsema_real_eip !8 :          <2a2>	retq
363 :   store i1 %121, i1* %CF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
364 :   %122 = load i1* %PF_val, !mcsema_real_eip !8 :          <2a2>	retq
365 :   store i1 %122, i1* %PF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
366 :   %123 = load i1* %AF_val, !mcsema_real_eip !8 :          <2a2>	retq
367 :   store i1 %123, i1* %AF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
368 :   %124 = load i1* %ZF_val, !mcsema_real_eip !8 :          <2a2>	retq
369 :   store i1 %124, i1* %ZF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
370 :   %125 = load i1* %SF_val, !mcsema_real_eip !8 :          <2a2>	retq
371 :   store i1 %125, i1* %SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
372 :   %126 = load i1* %OF_val, !mcsema_real_eip !8 :          <2a2>	retq
373 :   store i1 %126, i1* %OF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
374 :   %127 = load i1* %DF_val, !mcsema_real_eip !8 :          <2a2>	retq
375 :   store i1 %127, i1* %DF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
376 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %26, i8* %27, i32 128, i32 8, i1 false), !mcsema_real_eip !8 :          <2a2>	retq
377 :   %128 = load i1* %FPU_B_val, !mcsema_real_eip !8 :          <2a2>	retq
378 :   store i1 %128, i1* %FPU_B, align 1, !mcsema_real_eip !8 :          <2a2>	retq
379 :   %129 = load i1* %FPU_C3_val, !mcsema_real_eip !8 :          <2a2>	retq
380 :   store i1 %129, i1* %FPU_C3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
381 :   %130 = load i3* %FPU_TOP_val, !mcsema_real_eip !8 :          <2a2>	retq
382 :   store i3 %130, i3* %FPU_TOP, align 1, !mcsema_real_eip !8 :          <2a2>	retq
383 :   %131 = load i1* %FPU_C2_val, !mcsema_real_eip !8 :          <2a2>	retq
384 :   store i1 %131, i1* %FPU_C2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
385 :   %132 = load i1* %FPU_C1_val, !mcsema_real_eip !8 :          <2a2>	retq
386 :   store i1 %132, i1* %FPU_C1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
387 :   %133 = load i1* %FPU_C0_val, !mcsema_real_eip !8 :          <2a2>	retq
388 :   store i1 %133, i1* %FPU_C0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
389 :   %134 = load i1* %FPU_ES_val, !mcsema_real_eip !8 :          <2a2>	retq
390 :   store i1 %134, i1* %FPU_ES, align 1, !mcsema_real_eip !8 :          <2a2>	retq
391 :   %135 = load i1* %FPU_SF_val, !mcsema_real_eip !8 :          <2a2>	retq
392 :   store i1 %135, i1* %FPU_SF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
393 :   %136 = load i1* %FPU_PE_val, !mcsema_real_eip !8 :          <2a2>	retq
394 :   store i1 %136, i1* %FPU_PE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
395 :   %137 = load i1* %FPU_UE_val, !mcsema_real_eip !8 :          <2a2>	retq
396 :   store i1 %137, i1* %FPU_UE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
397 :   %138 = load i1* %FPU_OE_val, !mcsema_real_eip !8 :          <2a2>	retq
398 :   store i1 %138, i1* %FPU_OE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
399 :   %139 = load i1* %FPU_ZE_val, !mcsema_real_eip !8 :          <2a2>	retq
400 :   store i1 %139, i1* %FPU_ZE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
401 :   %140 = load i1* %FPU_DE_val, !mcsema_real_eip !8 :          <2a2>	retq
402 :   store i1 %140, i1* %FPU_DE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
403 :   %141 = load i1* %FPU_IE_val, !mcsema_real_eip !8 :          <2a2>	retq
404 :   store i1 %141, i1* %FPU_IE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
405 :   %142 = load i1* %FPU_X_val, !mcsema_real_eip !8 :          <2a2>	retq
406 :   store i1 %142, i1* %FPU_X, align 1, !mcsema_real_eip !8 :          <2a2>	retq
407 :   %143 = load i2* %FPU_RC_val, !mcsema_real_eip !8 :          <2a2>	retq
408 :   store i2 %143, i2* %FPU_RC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
409 :   %144 = load i2* %FPU_PC_val, !mcsema_real_eip !8 :          <2a2>	retq
410 :   store i2 %144, i2* %FPU_PC, align 1, !mcsema_real_eip !8 :          <2a2>	retq
411 :   %145 = load i1* %FPU_PM_val, !mcsema_real_eip !8 :          <2a2>	retq
412 :   store i1 %145, i1* %FPU_PM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
413 :   %146 = load i1* %FPU_UM_val, !mcsema_real_eip !8 :          <2a2>	retq
414 :   store i1 %146, i1* %FPU_UM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
415 :   %147 = load i1* %FPU_OM_val, !mcsema_real_eip !8 :          <2a2>	retq
416 :   store i1 %147, i1* %FPU_OM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
417 :   %148 = load i1* %FPU_ZM_val, !mcsema_real_eip !8 :          <2a2>	retq
418 :   store i1 %148, i1* %FPU_ZM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
419 :   %149 = load i1* %FPU_DM_val, !mcsema_real_eip !8 :          <2a2>	retq
420 :   store i1 %149, i1* %FPU_DM, align 1, !mcsema_real_eip !8 :          <2a2>	retq
421 :   %150 = load i1* %FPU_IM_val, !mcsema_real_eip !8 :          <2a2>	retq
422 :   store i1 %150, i1* %FPU_IM, align 1, !mcsema_real_eip !8 :          <2a2>	retq

423 :   %151 = load i64* %53, align 4 : NIL
424 :   store i64 %151, i64* %52, align 4 : NIL

425 :   %152 = load i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
426 :   store i16 %152, i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
427 :   %153 = load i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
428 :   store i64 %153, i64* %FPU_LASTIP_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
429 :   %154 = load i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !8 :          <2a2>	retq
430 :   store i16 %154, i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !8 :          <2a2>	retq
431 :   %155 = load i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !8 :          <2a2>	retq
432 :   store i64 %155, i64* %FPU_LASTDATA_OFF, align 1, !mcsema_real_eip !8 :          <2a2>	retq
433 :   %156 = load i128* %XMM0_val, !mcsema_real_eip !8 :          <2a2>	retq
434 :   store i128 %156, i128* %XMM0, align 1, !mcsema_real_eip !8 :          <2a2>	retq
435 :   %157 = load i128* %XMM1_val, !mcsema_real_eip !8 :          <2a2>	retq
436 :   store i128 %157, i128* %XMM1, align 1, !mcsema_real_eip !8 :          <2a2>	retq
437 :   %158 = load i128* %XMM2_val, !mcsema_real_eip !8 :          <2a2>	retq
438 :   store i128 %158, i128* %XMM2, align 1, !mcsema_real_eip !8 :          <2a2>	retq
439 :   %159 = load i128* %XMM3_val, !mcsema_real_eip !8 :          <2a2>	retq
440 :   store i128 %159, i128* %XMM3, align 1, !mcsema_real_eip !8 :          <2a2>	retq
441 :   %160 = load i128* %XMM4_val, !mcsema_real_eip !8 :          <2a2>	retq
442 :   store i128 %160, i128* %XMM4, align 1, !mcsema_real_eip !8 :          <2a2>	retq
443 :   %161 = load i128* %XMM5_val, !mcsema_real_eip !8 :          <2a2>	retq
444 :   store i128 %161, i128* %XMM5, align 1, !mcsema_real_eip !8 :          <2a2>	retq
445 :   %162 = load i128* %XMM6_val, !mcsema_real_eip !8 :          <2a2>	retq
446 :   store i128 %162, i128* %XMM6, align 1, !mcsema_real_eip !8 :          <2a2>	retq
447 :   %163 = load i128* %XMM7_val, !mcsema_real_eip !8 :          <2a2>	retq
448 :   store i128 %163, i128* %XMM7, align 1, !mcsema_real_eip !8 :          <2a2>	retq
449 :   %164 = load i128* %XMM8_val, !mcsema_real_eip !8 :          <2a2>	retq
450 :   store i128 %164, i128* %XMM8, align 1, !mcsema_real_eip !8 :          <2a2>	retq
451 :   %165 = load i128* %XMM9_val, !mcsema_real_eip !8 :          <2a2>	retq
452 :   store i128 %165, i128* %XMM9, align 1, !mcsema_real_eip !8 :          <2a2>	retq
453 :   %166 = load i128* %XMM10_val, !mcsema_real_eip !8 :          <2a2>	retq
454 :   store i128 %166, i128* %XMM10, align 1, !mcsema_real_eip !8 :          <2a2>	retq
455 :   %167 = load i128* %XMM11_val, !mcsema_real_eip !8 :          <2a2>	retq
456 :   store i128 %167, i128* %XMM11, align 1, !mcsema_real_eip !8 :          <2a2>	retq
457 :   %168 = load i128* %XMM12_val, !mcsema_real_eip !8 :          <2a2>	retq
458 :   store i128 %168, i128* %XMM12, align 1, !mcsema_real_eip !8 :          <2a2>	retq
459 :   %169 = load i128* %XMM13_val, !mcsema_real_eip !8 :          <2a2>	retq
460 :   store i128 %169, i128* %XMM13, align 1, !mcsema_real_eip !8 :          <2a2>	retq
461 :   %170 = load i128* %XMM14_val, !mcsema_real_eip !8 :          <2a2>	retq
462 :   store i128 %170, i128* %XMM14, align 1, !mcsema_real_eip !8 :          <2a2>	retq
463 :   %171 = load i128* %XMM15_val, !mcsema_real_eip !8 :          <2a2>	retq
464 :   store i128 %171, i128* %XMM15, align 1, !mcsema_real_eip !8 :          <2a2>	retq
465 :   %172 = load i64* %STACK_BASE_val, !mcsema_real_eip !8 :          <2a2>	retq
466 :   store i64 %172, i64* %STACK_BASE, align 1, !mcsema_real_eip !8 :          <2a2>	retq
467 :   %173 = load i64* %STACK_LIMIT_val, !mcsema_real_eip !8 :          <2a2>	retq
468 :   store i64 %173, i64* %STACK_LIMIT, align 1, !mcsema_real_eip !8 :          <2a2>	retq
469 :   ret void, !mcsema_real_eip !8 :          <2a2>	retq
========================================================
Source line mapping for function: sub_136
========================================================

1 :   %R15_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
2 :   %STACK_LIMIT_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
3 :   %STACK_BASE_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
4 :   %XMM15_val = alloca i128, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
5 :   %XMM14_val = alloca i128, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
6 :   %XMM13_val = alloca i128, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
7 :   %XMM12_val = alloca i128, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
8 :   %XMM11_val = alloca i128, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
9 :   %XMM10_val = alloca i128, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
10 :   %XMM9_val = alloca i128, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
11 :   %XMM8_val = alloca i128, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
12 :   %XMM7_val = alloca i128, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
13 :   %XMM6_val = alloca i128, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
14 :   %XMM5_val = alloca i128, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
15 :   %XMM4_val = alloca i128, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
16 :   %XMM3_val = alloca i128, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
17 :   %XMM2_val = alloca i128, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
18 :   %XMM1_val = alloca i128, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
19 :   %XMM0_val = alloca i128, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
20 :   %FPU_LASTDATA_OFF_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
21 :   %FPU_LASTDATA_SEG_val = alloca i16, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
22 :   %FPU_LASTIP_OFF_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
23 :   %FPU_LASTIP_SEG_val = alloca i16, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
24 :   %FPU_TAG_val = alloca [8 x i2], !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
25 :   %FPU_IM_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
26 :   %FPU_DM_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
27 :   %FPU_ZM_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
28 :   %FPU_OM_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
29 :   %FPU_UM_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
30 :   %FPU_PM_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
31 :   %FPU_PC_val = alloca i2, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
32 :   %FPU_RC_val = alloca i2, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
33 :   %FPU_X_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
34 :   %FPU_IE_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
35 :   %FPU_DE_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
36 :   %FPU_ZE_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
37 :   %FPU_OE_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
38 :   %FPU_UE_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
39 :   %FPU_PE_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
40 :   %FPU_SF_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
41 :   %FPU_ES_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
42 :   %FPU_C0_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
43 :   %FPU_C1_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
44 :   %FPU_C2_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
45 :   %FPU_TOP_val = alloca i3, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
46 :   %FPU_C3_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
47 :   %FPU_B_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
48 :   %STi_val = alloca [8 x x86_fp80], !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
49 :   %DF_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
50 :   %OF_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
51 :   %SF_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
52 :   %CF_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
53 :   %AF_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
54 :   %PF_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
55 :   %ZF_val = alloca i1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
56 :   %RIP_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
57 :   %R14_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
58 :   %R13_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
59 :   %R12_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
60 :   %R11_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
61 :   %R10_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
62 :   %R9_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
63 :   %R8_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
64 :   %RSP_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
65 :   %RBP_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
66 :   %RDI_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
67 :   %RSI_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
68 :   %RDX_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
69 :   %RCX_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
70 :   %RBX_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
71 :   %RAX_val = alloca i64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
72 :   %RAX = getelementptr inbounds %struct.regs* %0, i64 0, i32 0, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
73 :   %1 = load i64* %RAX, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
74 :   store i64 %1, i64* %RAX_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
75 :   %RBX = getelementptr inbounds %struct.regs* %0, i64 0, i32 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
76 :   %2 = load i64* %RBX, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
77 :   store i64 %2, i64* %RBX_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
78 :   %RCX = getelementptr inbounds %struct.regs* %0, i64 0, i32 2, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
79 :   %3 = load i64* %RCX, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
80 :   store i64 %3, i64* %RCX_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
81 :   %RDX = getelementptr inbounds %struct.regs* %0, i64 0, i32 3, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
82 :   %4 = load i64* %RDX, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
83 :   store i64 %4, i64* %RDX_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
84 :   %RSI = getelementptr inbounds %struct.regs* %0, i64 0, i32 4, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
85 :   %5 = load i64* %RSI, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
86 :   store i64 %5, i64* %RSI_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
87 :   %RDI = getelementptr inbounds %struct.regs* %0, i64 0, i32 5, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
88 :   %6 = load i64* %RDI, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
89 :   store i64 %6, i64* %RDI_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
90 :   %RSP = getelementptr inbounds %struct.regs* %0, i64 0, i32 6, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
91 :   %7 = load i64* %RSP, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
92 :   store i64 %7, i64* %RSP_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
93 :   %RBP = getelementptr inbounds %struct.regs* %0, i64 0, i32 7, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
94 :   %8 = load i64* %RBP, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
95 :   store i64 %8, i64* %RBP_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
96 :   %R8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 8, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
97 :   %9 = load i64* %R8, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
98 :   store i64 %9, i64* %R8_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
99 :   %R9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 9, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
100 :   %10 = load i64* %R9, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
101 :   store i64 %10, i64* %R9_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
102 :   %R10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 10, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
103 :   %11 = load i64* %R10, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
104 :   store i64 %11, i64* %R10_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
105 :   %R11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 11, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
106 :   %12 = load i64* %R11, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
107 :   store i64 %12, i64* %R11_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
108 :   %R12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 12, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
109 :   %13 = load i64* %R12, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
110 :   store i64 %13, i64* %R12_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
111 :   %R13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 13, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
112 :   %14 = load i64* %R13, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
113 :   store i64 %14, i64* %R13_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
114 :   %R14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 14, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
115 :   %15 = load i64* %R14, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
116 :   store i64 %15, i64* %R14_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
117 :   %R15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 15, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
118 :   %16 = load i64* %R15, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
119 :   store i64 %16, i64* %R15_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
120 :   %RIP = getelementptr inbounds %struct.regs* %0, i64 0, i32 16, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
121 :   %17 = load i64* %RIP, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
122 :   store i64 %17, i64* %RIP_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
123 :   %CF = getelementptr inbounds %struct.regs* %0, i64 0, i32 17, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
124 :   %18 = load i1* %CF, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
125 :   store i1 %18, i1* %CF_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
126 :   %PF = getelementptr inbounds %struct.regs* %0, i64 0, i32 18, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
127 :   %19 = load i1* %PF, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
128 :   store i1 %19, i1* %PF_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
129 :   %AF = getelementptr inbounds %struct.regs* %0, i64 0, i32 19, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
130 :   %20 = load i1* %AF, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
131 :   store i1 %20, i1* %AF_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
132 :   %ZF = getelementptr inbounds %struct.regs* %0, i64 0, i32 20, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
133 :   %21 = load i1* %ZF, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
134 :   store i1 %21, i1* %ZF_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
135 :   %SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 21, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
136 :   %22 = load i1* %SF, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
137 :   store i1 %22, i1* %SF_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
138 :   %OF = getelementptr inbounds %struct.regs* %0, i64 0, i32 22, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
139 :   %23 = load i1* %OF, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
140 :   store i1 %23, i1* %OF_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
141 :   %DF = getelementptr inbounds %struct.regs* %0, i64 0, i32 23, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
142 :   %24 = load i1* %DF, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
143 :   store i1 %24, i1* %DF_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
144 :   %25 = getelementptr inbounds %struct.regs* %0, i64 0, i32 24, i64 0, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
145 :   %26 = bitcast x86_fp80* %25 to i8*, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
146 :   %27 = bitcast [8 x x86_fp80]* %STi_val to i8*, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
147 :   call void @llvm.memcpy.p0i8.p0i8.i32(i8* %27, i8* %26, i32 128, i32 4, i1 false), !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
148 :   %FPU_B = getelementptr inbounds %struct.regs* %0, i64 0, i32 25, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
149 :   %28 = load i1* %FPU_B, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
150 :   store i1 %28, i1* %FPU_B_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
151 :   %FPU_C3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 26, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
152 :   %29 = load i1* %FPU_C3, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
153 :   store i1 %29, i1* %FPU_C3_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
154 :   %FPU_TOP = getelementptr inbounds %struct.regs* %0, i64 0, i32 27, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
155 :   %30 = load i3* %FPU_TOP, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
156 :   store i3 %30, i3* %FPU_TOP_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
157 :   %FPU_C2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 28, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
158 :   %31 = load i1* %FPU_C2, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
159 :   store i1 %31, i1* %FPU_C2_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
160 :   %FPU_C1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 29, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
161 :   %32 = load i1* %FPU_C1, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
162 :   store i1 %32, i1* %FPU_C1_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
163 :   %FPU_C0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 30, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
164 :   %33 = load i1* %FPU_C0, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
165 :   store i1 %33, i1* %FPU_C0_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
166 :   %FPU_ES = getelementptr inbounds %struct.regs* %0, i64 0, i32 31, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
167 :   %34 = load i1* %FPU_ES, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
168 :   store i1 %34, i1* %FPU_ES_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
169 :   %FPU_SF = getelementptr inbounds %struct.regs* %0, i64 0, i32 32, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
170 :   %35 = load i1* %FPU_SF, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
171 :   store i1 %35, i1* %FPU_SF_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
172 :   %FPU_PE = getelementptr inbounds %struct.regs* %0, i64 0, i32 33, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
173 :   %36 = load i1* %FPU_PE, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
174 :   store i1 %36, i1* %FPU_PE_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
175 :   %FPU_UE = getelementptr inbounds %struct.regs* %0, i64 0, i32 34, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
176 :   %37 = load i1* %FPU_UE, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
177 :   store i1 %37, i1* %FPU_UE_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
178 :   %FPU_OE = getelementptr inbounds %struct.regs* %0, i64 0, i32 35, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
179 :   %38 = load i1* %FPU_OE, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
180 :   store i1 %38, i1* %FPU_OE_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
181 :   %FPU_ZE = getelementptr inbounds %struct.regs* %0, i64 0, i32 36, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
182 :   %39 = load i1* %FPU_ZE, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
183 :   store i1 %39, i1* %FPU_ZE_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
184 :   %FPU_DE = getelementptr inbounds %struct.regs* %0, i64 0, i32 37, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
185 :   %40 = load i1* %FPU_DE, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
186 :   store i1 %40, i1* %FPU_DE_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
187 :   %FPU_IE = getelementptr inbounds %struct.regs* %0, i64 0, i32 38, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
188 :   %41 = load i1* %FPU_IE, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
189 :   store i1 %41, i1* %FPU_IE_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
190 :   %FPU_X = getelementptr inbounds %struct.regs* %0, i64 0, i32 39, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
191 :   %42 = load i1* %FPU_X, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
192 :   store i1 %42, i1* %FPU_X_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
193 :   %FPU_RC = getelementptr inbounds %struct.regs* %0, i64 0, i32 40, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
194 :   %43 = load i2* %FPU_RC, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
195 :   store i2 %43, i2* %FPU_RC_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
196 :   %FPU_PC = getelementptr inbounds %struct.regs* %0, i64 0, i32 41, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
197 :   %44 = load i2* %FPU_PC, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
198 :   store i2 %44, i2* %FPU_PC_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
199 :   %FPU_PM = getelementptr inbounds %struct.regs* %0, i64 0, i32 42, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
200 :   %45 = load i1* %FPU_PM, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
201 :   store i1 %45, i1* %FPU_PM_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
202 :   %FPU_UM = getelementptr inbounds %struct.regs* %0, i64 0, i32 43, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
203 :   %46 = load i1* %FPU_UM, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
204 :   store i1 %46, i1* %FPU_UM_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
205 :   %FPU_OM = getelementptr inbounds %struct.regs* %0, i64 0, i32 44, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
206 :   %47 = load i1* %FPU_OM, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
207 :   store i1 %47, i1* %FPU_OM_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
208 :   %FPU_ZM = getelementptr inbounds %struct.regs* %0, i64 0, i32 45, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
209 :   %48 = load i1* %FPU_ZM, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
210 :   store i1 %48, i1* %FPU_ZM_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
211 :   %FPU_DM = getelementptr inbounds %struct.regs* %0, i64 0, i32 46, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
212 :   %49 = load i1* %FPU_DM, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
213 :   store i1 %49, i1* %FPU_DM_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
214 :   %FPU_IM = getelementptr inbounds %struct.regs* %0, i64 0, i32 47, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
215 :   %50 = load i1* %FPU_IM, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
216 :   store i1 %50, i1* %FPU_IM_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
217 :   %51 = getelementptr inbounds %struct.regs* %0, i64 0, i32 48, i64 0, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi

218 :   %52 = bitcast i8* %51 to i64* : NIL
219 :   %53 = bitcast [8 x i2]* %FPU_TAG_val to i64* : NIL
220 :   %54 = load i64* %52, align 4 : NIL
221 :   store i64 %54, i64* %53, align 4 : NIL

222 :   %FPU_LASTIP_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 49, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
223 :   %55 = load i16* %FPU_LASTIP_SEG, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
224 :   store i16 %55, i16* %FPU_LASTIP_SEG_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
225 :   %FPU_LASTIP_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 50, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
226 :   %56 = load i64* %FPU_LASTIP_OFF, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
227 :   store i64 %56, i64* %FPU_LASTIP_OFF_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
228 :   %FPU_LASTDATA_SEG = getelementptr inbounds %struct.regs* %0, i64 0, i32 51, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
229 :   %57 = load i16* %FPU_LASTDATA_SEG, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
230 :   store i16 %57, i16* %FPU_LASTDATA_SEG_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
231 :   %FPU_LASTDATA_OFF = getelementptr inbounds %struct.regs* %0, i64 0, i32 52, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
232 :   %58 = load i64* %FPU_LASTDATA_OFF, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
233 :   store i64 %58, i64* %FPU_LASTDATA_OFF_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
234 :   %XMM0 = getelementptr inbounds %struct.regs* %0, i64 0, i32 54, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
235 :   %59 = load i128* %XMM0, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
236 :   store i128 %59, i128* %XMM0_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
237 :   %XMM1 = getelementptr inbounds %struct.regs* %0, i64 0, i32 55, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
238 :   %60 = load i128* %XMM1, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
239 :   store i128 %60, i128* %XMM1_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
240 :   %XMM2 = getelementptr inbounds %struct.regs* %0, i64 0, i32 56, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
241 :   %61 = load i128* %XMM2, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
242 :   store i128 %61, i128* %XMM2_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
243 :   %XMM3 = getelementptr inbounds %struct.regs* %0, i64 0, i32 57, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
244 :   %62 = load i128* %XMM3, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
245 :   store i128 %62, i128* %XMM3_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
246 :   %XMM4 = getelementptr inbounds %struct.regs* %0, i64 0, i32 58, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
247 :   %63 = load i128* %XMM4, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
248 :   store i128 %63, i128* %XMM4_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
249 :   %XMM5 = getelementptr inbounds %struct.regs* %0, i64 0, i32 59, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
250 :   %64 = load i128* %XMM5, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
251 :   store i128 %64, i128* %XMM5_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
252 :   %XMM6 = getelementptr inbounds %struct.regs* %0, i64 0, i32 60, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
253 :   %65 = load i128* %XMM6, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
254 :   store i128 %65, i128* %XMM6_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
255 :   %XMM7 = getelementptr inbounds %struct.regs* %0, i64 0, i32 61, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
256 :   %66 = load i128* %XMM7, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
257 :   store i128 %66, i128* %XMM7_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
258 :   %XMM8 = getelementptr inbounds %struct.regs* %0, i64 0, i32 62, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
259 :   %67 = load i128* %XMM8, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
260 :   store i128 %67, i128* %XMM8_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
261 :   %XMM9 = getelementptr inbounds %struct.regs* %0, i64 0, i32 63, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
262 :   %68 = load i128* %XMM9, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
263 :   store i128 %68, i128* %XMM9_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
264 :   %XMM10 = getelementptr inbounds %struct.regs* %0, i64 0, i32 64, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
265 :   %69 = load i128* %XMM10, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
266 :   store i128 %69, i128* %XMM10_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
267 :   %XMM11 = getelementptr inbounds %struct.regs* %0, i64 0, i32 65, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
268 :   %70 = load i128* %XMM11, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
269 :   store i128 %70, i128* %XMM11_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
270 :   %XMM12 = getelementptr inbounds %struct.regs* %0, i64 0, i32 66, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
271 :   %71 = load i128* %XMM12, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
272 :   store i128 %71, i128* %XMM12_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
273 :   %XMM13 = getelementptr inbounds %struct.regs* %0, i64 0, i32 67, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
274 :   %72 = load i128* %XMM13, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
275 :   store i128 %72, i128* %XMM13_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
276 :   %XMM14 = getelementptr inbounds %struct.regs* %0, i64 0, i32 68, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
277 :   %73 = load i128* %XMM14, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
278 :   store i128 %73, i128* %XMM14_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
279 :   %XMM15 = getelementptr inbounds %struct.regs* %0, i64 0, i32 69, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
280 :   %74 = load i128* %XMM15, align 1, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
281 :   store i128 %74, i128* %XMM15_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
282 :   %STACK_BASE = getelementptr inbounds %struct.regs* %0, i64 0, i32 70, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
283 :   %75 = load i64* %STACK_BASE, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
284 :   store i64 %75, i64* %STACK_BASE_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
285 :   %STACK_LIMIT = getelementptr inbounds %struct.regs* %0, i64 0, i32 71, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
286 :   %76 = load i64* %STACK_LIMIT, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
287 :   store i64 %76, i64* %STACK_LIMIT_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi
288 :   store i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 95), i64* %RDI_val, !mcsema_real_eip !2 :          <136>	movabsq	$0, %rdi

289 :   %77 = load i64* %RSI_val, !mcsema_real_eip !3 :          <142>	callq	0
290 :   %78 = load i64* %RDX_val, !mcsema_real_eip !3 :          <142>	callq	0
291 :   %79 = load i64* %RCX_val, !mcsema_real_eip !3 :          <142>	callq	0
292 :   %80 = tail call x86_64_sysvcc i64 @printf(i64 add (i64 ptrtoint (%1* @data_0x39b to i64), i64 95), i64 %77, i64 %78, i64 %79), !mcsema_real_eip !3 :          <142>	callq	0

293 :   %81 = load i64* %RBP_val, !mcsema_real_eip !4 :          <147>	movl	%eax, -80(%rbp)
294 :   %82 = add i64 %81, -80, !mcsema_real_eip !4 :          <147>	movl	%eax, -80(%rbp)
295 :   %83 = inttoptr i64 %82 to i64*, !mcsema_real_eip !4 :          <147>	movl	%eax, -80(%rbp)
296 :   %84 = trunc i64 %80 to i32, !mcsema_real_eip !4 :          <147>	movl	%eax, -80(%rbp)

297 :   %85 = bitcast i64* %83 to i32* : NIL

298 :   store i32 %84, i32* %85, !mcsema_real_eip !4 :          <147>	movl	%eax, -80(%rbp)

299 :   store i64 0, i64* %RAX_val, !mcsema_real_eip !5 :          <295>	movl	$0, %eax

300 :   %86 = load i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

301 :   %uadd = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %86, i64 144) : NIL
302 :   %87 = extractvalue { i64, i1 } %uadd, 0 : NIL

303 :   %88 = xor i64 %87, %86, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

304 :   %89 = and i64 %88, 16 : NIL
305 :   %90 = icmp eq i64 %89, 0 : NIL

306 :   store i1 %90, i1* %AF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

307 :   %91 = icmp slt i64 %87, 0 : NIL

308 :   store i1 %91, i1* %SF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
309 :   %92 = icmp eq i64 %87, 0, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
310 :   store i1 %92, i1* %ZF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
311 :   %93 = xor i64 %86, -9223372036854775808, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
312 :   %94 = and i64 %88, %93, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

313 :   %95 = icmp slt i64 %94, 0 : NIL

314 :   store i1 %95, i1* %OF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
315 :   %96 = trunc i64 %87 to i8, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
316 :   %97 = tail call i8 @llvm.ctpop.i8(i8 %96), !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

317 :   %98 = and i8 %97, 1 : NIL
318 :   %99 = icmp eq i8 %98, 0 : NIL

319 :   store i1 %99, i1* %PF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

320 :   %100 = extractvalue { i64, i1 } %uadd, 1 : NIL

321 :   store i1 %100, i1* %CF_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp
322 :   store i64 %87, i64* %RSP_val, !mcsema_real_eip !6 :          <29a>	addq	$144, %rsp

323 :   %101 = inttoptr i64 %87 to i64*, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
324 :   %102 = load i64* %101, !mcsema_real_eip !7 :          <2a1>	popq	%rbp
325 : 